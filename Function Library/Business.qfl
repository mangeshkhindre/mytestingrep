''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\AdminTools.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_AdminTools BIZ_AdminTools
'List of functions:
'@code
'   Function BIZ_AdminTools_Launch()
'   Function BIZ_AdminTools_Select(strToolName)
'	Function BIZ_AdminTools_Login(strRowID)
'   Function BIZ_AdminTools_UserLogin(strUserName, strUserPwd, strURL)
'	Function BIZ_AminTools_Close()
'	Function BIZ_ServerSettingsManager_EditValue(strCategory, strSettingName, strValue)
'	Function BIZ_LOConnect_ServerSettingsManager_SetValue(strCategory,strSettingName, strValue)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Launch Admin tools
'@code
'    Function BIZ_AdminTools_Launch()
'@endcode
'@param

Function BIZ_AdminTools_Launch()

	FRM_Logger_ReportInfoEvent "Launch Admin Tools", "Launch Admin Tools", Null
	UTIL_Win_CloseProcesses "AdminTools.exe"
	SystemUtil.Run "C:\SmartClientCache\Apps\Ellie Mae\Encompass\AdminTools.exe"
	
End Function



'This function is used to Select an option from Admin tools list
'@code
'    Function BIZ_AdminTools_Select(strToolName)
'@endcode
'@param strToolName - Tool name

Function BIZ_AdminTools_Select(strToolName)

	FRM_Logger_ReportInfoEvent "Select Admin tool", "Select Admin tool: " & strToolName, Null
	Set objAdminToolsList = SwfWindow("swfname:=AdminTools").SwfObject("swfname:=gvTools")
	intRowNum = Cint(GUI_List_GetRowIndex (objAdminToolsList, 0, strToolName))
	v_xco = objAdminToolsList.Object.GetSubItemBounds(0,0).Width * 0.1
	intItemHeight = objAdminToolsList.Object.GetItemBounds(0).Height
	v_yco = intItemHeight * intRowNum + intItemHeight * 0.5
	objAdminToolsList.DblClick v_xco, v_yco
	Set objAdminToolsList = Nothing
	
End Function



'This function is used to Login system using Row Id
'@code
'    BIZ_AdminTools_Login(strRowID)
'@endcode
'@param strRowID - row id for data

Function BIZ_AdminTools_Login(strRowID)

	Set objData = FRM_DS_GetGlobalTestData("Login", strRowID)
	strUserName = objData.Item("UserName")
	strUserPwd = objData.Item("UserPassword")
	strURL = objData.Item("URL")
	BIZ_AdminTools_UserLogin strUserName, strUserPwd, strURL

End Function



'This function is used to Login in Admin Tools
'@code
'    Function BIZ_AdminTools_UserLogin(strUserName, strUserPwd, strURL)
'@endcode
'@param strUserName - The user id
'@param strUserPwd - The password
'@param strURL - server to connect

Function BIZ_AdminTools_UserLogin(strUserName, strUserPwd, strURL)

	FRM_Logger_ReportInfoEvent "Login in Admin tools", "Login in Admin tools", Null
	Set objAdminLogin = SwfWindow("swfname:=AdminTools").SwfWindow("swfname:=LoginForm")
	GUI_SwfEdit_Set objAdminLogin.SwfEdit("swfname:=loginNameBox"), strUserName
	GUI_SwfEdit_Set objAdminLogin.SwfEdit("swfname:=passwordBox"), strUserPwd
        
    If NOT strURL = "" Then
		   GUI_SwfEdit_Set objAdminLogin.WinEdit("window id:=1001"), strURL
    End If
        
	GUI_SwfButton_Click objAdminLogin.SwfButton("swfname:=okBtn")
	Set objAdminLogin = Nothing
	
End Function



'This function is used to Close Admin tools
'@code
'    Function BIZ_AdminTools_Close()
'@endcode
'@param 

Function BIZ_AminTools_Close()
	
	FRM_Logger_ReportInfoEvent "Close Admin tool", "Close Admin Tool", Null
	SwfWindow("swfname:=AdminTools").Activate
	SwfWindow("swfname:=AdminTools").Close
	
End Function



'This function is used to set status on Server Settings Manager window
'@code
'    BIZ_ServerSettingsManager_EditValue(strCategory, strSettingName, strValue)
'@endcode
'@param strCategory - the Category you want to select
'@param strSettingName - the Setting Name you want to select 
'@param strValue - the Value you want to set

Function BIZ_ServerSettingsManager_EditValue(strCategory, strSettingName, strValue)
	FRM_Logger_ReportInfoEvent "Server Settings Manager", "Select '"&strCategory&"'Category, Double click label'"&strSettingName&"', set'"&strValue&"'to it", null
	
	Set WndSettingsManager = SwfWindow("swfname:=ServerSettingsManager") 
	strSettingName = Replace(strSettingName, " ", "")
	
	GUI_SwfComboBox_Select WndSettingsManager.SwfComboBox("swfname:=cboCategory"), strCategory
	GUI_SwfLabel_DblClick WndSettingsManager.SwfLabel("swfname:=Components_"&strSettingName&"_viewer"), 1, 1
	GUI_SwfComboBox_Select WndSettingsManager.SwfComboBox("swfname:=Components_"&strSettingName), strValue
	GUI_SwfButton_Click WndSettingsManager.SwfButton("swfname:=btnOK")

	Set WndSettingsManager = nothing
End Function



'As same functionality with different property and flow we have created another function
'This function is used to set status on Server Settings Manager window
'@code
'    BIZ_LOConnect_ServerSettingsManager_SetValue(strCategory, strSettingName, strValue)
'@endcode
'@param strCategory    - the Category you want to select
'@param strSettingName - the Setting Name you want to select 
'@param strValue       - the Value you want to set

Function BIZ_LOConnect_ServerSettingsManager_SetValue(strCategory,strSettingName, strValue)

	FRM_Logger_ReportInfoEvent "Server Settings Manager", "Select '"&strCategory&"'Category, Double click label'"&strSettingName&"', set'"&strValue&"'to it", null
	
	Dim WndSettingsManager,strPolicesVal,intValue
	Set WndSettingsManager = SwfWindow("swfname:=ServerSettingsManager")
	
	If strValue = True Then
		intValue = 1
	ElseIf strValue = False Then
		intValue = 0
	End If
	
	GUI_SwfComboBox_Select WndSettingsManager.SwfComboBox("swfname:=cboCategory"), strCategory
	
	Select Case LCase(strSettingName)
		Case LCase("Allow Mobile Platform")
			GUI_SwfLabel_DblClick WndSettingsManager.SwfLabel("swfname:=Policies_AllowMobile_label"), 1, 1
			strPolicesVal = trim(GUI_Object_GetPropertyValue (WndSettingsManager.SwfComboBox("swfname:=Policies_AllowMobile"),"text"))
			If lcase(strPolicesVal) <> lcase(strValue) Then
				GUI_SwfComboBox_Select WndSettingsManager.SwfComboBox("swfname:=Policies_AllowMobile"), intValue
			Else
				FRM_Logger_ReportPassEvent "Allow Mobile Platform", "Already Status is '"&strPolicesVal&"'" , Null
			End If
			
	End Select
	
	Wait g_LongWaitLarge 
	GUI_SwfButton_Click WndSettingsManager.SwfButton("swfname:=btnApply")
	GUI_SwfButton_Click WndSettingsManager.SwfButton("swfname:=btnOK")

	Set WndSettingsManager = Nothing
	
End Function


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\AdminTools.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\ConsumerConnect.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_ConsumerConnect
'List of functions here
'@code
'	Function BIZ_CreateCCLoan(strRowID)
'	BIZ_CCAccountSignIn(strRowID,BorFirstname,BorLastName)
'   BIZ_CCPageRefresh(objBrowser,objWebButton)
'	BIZ_YMEmailVerification(strRowID,BorEmail)
'   BIZ_CCAcceptEconsent(strRowID,UserID)
'   BIZ_CCAcceptEDisc(strRowID,UserID)


'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


'This function is used to Create new Consumer Coonect Purchase Loan
'@code
'    BIZ_CreateCCLoan(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_CreateCCLoan(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create Consumer Connect Loan", "Use Borrower sheet data row ID: "&strRowID, Null



	'==========Create new Borrower Contact and Enter Data SSN, Address, City, State, Zip, Phone, Home email, etc and click on the Save Icon===============
	Dim objData, CCBrowser

	Set objData    = FRM_DS_GetTestData("ConsumerConnect", "LoanCreation", strRowID)
	Set CCBrowser=Browser("title:=.*nice.int.mymortgage-app.net.*")
	Set CCPage=CCBrowser.Page("url:=.*nice.int.mymortgage-app.net.*")	
	
	
	GUI_Browser_CloseAllBrowsers FRM_DS_GetValue(objData,"BrowserVersion")
	GUI_Browser_OpenUrl FRM_DS_GetValue(objData,"URL"),FRM_DS_GetValue(objData,"BrowserVersion")
	
	GUI_WebElement_Click CCPage.WebElement("innertext:=Apply Now","class:=.*apply-now-button")
	
	
	
	Select Case Ucase(FRM_DS_GetValue(objData,"PurchaseType"))
		Case "PURCHASE"
			GUI_Image_Click CCPage.Image("src:=.*buy-home.*")
		Case "REFINANCE"
			GUI_Image_Click CCPage.Image("src:=.*refi-home.*")
		Case Else
			BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		
	End Select

		
	
'My loan application 	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FirstName")) Then
		GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//div//label[text()='First Name']//parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"FirstName")
		Environment("FirstName")=objData.item("FirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LastName")) Then
		GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//div//label[text()='Last Name']//parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"LastName")
		Environment("LastName")=objData.item("LastName")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Suffix")) Then
		GUI_WebList_NGSelect CCPage.WebElement("xpath:=//div//label[text()='Suffix']//parent::div/following::div[@class='Select-placeholder']"),FRM_DS_GetValue(objData,"Suffix")
	End If
	
		BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
	
	'Navigated to joint Credit with co owner
	  
	    
	    Select Case Ucase(FRM_DS_GetValue(objData,"CoBorrower"))
	    Case "YES"
	     	GUI_WebButton_Click CCPage.WebButton("innertext:=Yes")
	     Case "NO"
		   	GUI_WebButton_Click CCPage.WebButton("innertext:=No")
		 Case Else
		 	BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		 End Select
		 
		 
		'Will you be living
	
		Select Case Ucase(FRM_DS_GetValue(objData,"LivingInProp"))
	    Case "YES"
	     	GUI_WebButton_Click CCPage.WebButton("innertext:=Yes")
	     Case "NO"
		   	GUI_WebButton_Click CCPage.WebButton("innertext:=No")
		 Case Else
		 	BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		End Select
		   

	
	'Investment Home or Vacation Home
	
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Inv_Vac")) Then
	
			GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'investment home')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"Inv_Vac")
       Else
        	GUI_WebButton_Click CCPage.WebButton("name:=Next","type:=submit")
	   End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"PriceOfHome")) Then
	 		GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'price of the home')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"PriceOfHome")
	 	End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EstmtdHomeVal")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'estimated value')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"EstmtdHomeVal")
		End If
		
		 BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		
	'Property Address
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Address1PurProp")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Address 1')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"Address1PurProp")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Address2PurProp")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Address 2')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"Address2PurProp")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CityPurProp")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'City')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"CityPurProp")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CountyPurProp")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'County')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"CountyPurProp")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"StatePurProp")) Then
		 	GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'State')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"StatePurProp")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"ZipCodePurProp")) Then
		  	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Zip Code')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"ZipCodePurProp")
		  End if
		 	
		 GUI_WebButton_Click CCPage.WebButton("name:=Next","type:=submit")
		 
		 
		 'What kind of Property you are looking for
		 
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TypeOfProp")) Then
		 	GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'property')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"TypeOfProp")
		 Else
		 	BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		 End If
		 
		 'Currently own or rent the home you live in

		Select Case Ucase(FRM_DS_GetValue(objData,"LiveInPropType"))
			Case "RENT"
				GUI_Image_Click CCPage.Image("src:=.*rent-home.*")
			Case "OWN"
				GUI_Image_Click CCPage.Image("src:=.*own-home.*")
			Case else
				BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		End Select
		
		
		
		'How much do you have for down payment
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"DownPmntAmount")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'down payment')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"DownPmntAmount")
		End If
		 
		 BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		
		 
		 'Where do you live in
		 
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Address1LiveIn")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Address 1')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"Address1LiveIn")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Address2LiveIn")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Address 2')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"Address2LiveIn")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CityLiveIn")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'City')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"CityLiveIn")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CountyLiveIn")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'County')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"CountyLiveIn")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"StateLiveIn")) Then
		 	GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'State')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"StateLiveIn")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"ZipCodeLiveIn")) Then
		  	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Zip Code')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"ZipCodeLiveIn")
		  End if
		  'How long you lived here
		  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"NumberOfYearsLived")) Then
		  	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'number of years')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"NumberOfYearsLived")
		  End If
		  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"NumberOfMonthsLived")) Then
		  	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'number of months')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"NumberOfMonthsLived")
		  End If
		  'Mailing address same
		  
		  Select Case Ucase(FRM_DS_GetValue(objData,"MailingAddrSame"))
			Case "YES"
				GUI_WebButton_Click CCPage.WebButton("innertext:=Yes")
			Case "NO"
				GUI_WebButton_Click CCPage.WebButton("innertext:=No")
			Case else
				
		End Select
		BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		
		 
		'How many dependents do you have
			 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"NumberOfDependents")) Then
				GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'dependents')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"NumberOfDependents")
			'ages of dependents
				GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'ages')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"AgeOfDependent1")
			End If
			BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
			
		 
		 
		 'Date of Birth
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"DOB")) Then
			
		   GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'date of')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"DOB")
		   CCPage.WebEdit("xpath:=(//label[contains(text(),'date of')]/parent::div/following::input)[1]").Click
		   'Click the same through date picker
		   GUI_WebElement_Click CCPage.WebElement("xpath:=//div[@class='DayPicker-Day DayPicker-Day--selected']")
		 
		   BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		  End If
		   

		   
		   'New page-Social Security Number
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"SSN")) Then
		      GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'social security')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"SSN")
		      BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		     End If
		      
		     'New page-Other details
		    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"HomePhone")) Then
		    	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'home phone')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"HomePhone")
		    End If
		    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CellPhone")) Then
		    	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'cell phone')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"CellPhone")
		    End If
		    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmailAddr")) Then
		    	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'email address')]/parent::div/following::input)[1]"),Environment("FirstName")&"@yopmail.com"
		    End If
		    
		     BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		    
		    
		    'New page Employment details
		    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CurentEmplr")) Then
		    	GUI_WebCheckBox_Click CCPage.Webcheckbox("xpath:=//div/label[contains(text(),'Current')]/parent::div/parent::div/input[@type='checkbox']")
		    End If
		    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"SelfEmplyd")) Then
		    	GUI_WebCheckBox_Click CCPage.Webcheckbox("xpath:=//div/label[contains(text(),'Self-Employed')]/parent::div/parent::div/input[@type='checkbox']")
		    End If
		    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmplrName")) Then
		     	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Employer Name')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"EmplrName")
		     End If
		      If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Position")) Then
		      	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Position')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"Position")
		      End If
		      If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmplrAddress1")) Then
		       	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Address 1')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"EmplrAddress1")
		       End If
		      If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmplrAddress2")) Then
		        GUI_WebEdit_Set CCPage.WebEdit("xpath:=//label[contains(text(),'Address 2')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"EmplrAddress2")
		       End If
		       If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmplrCity")) Then
		       	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'City')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"EmplrCity")
		       End If
		      If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmplrState")) Then
		       	GUI_WebList_NGSelect CPage.WebElement("xpath:=//label[contains(text(),'State')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"EmplrState")
		      End If
		       	
		       If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmplrZipCode")) Then
		        	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Zip Code')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"EmplrZipCode")
		        End If
		        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmplrStartDate")) Then
					
		        	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Start Date')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"EmplrStartDate")
		       		CCPage.WebEdit("xpath:=(//label[contains(text(),'Start Date')]/parent::div/following::input)[1]").Click
					GUI_WebElement_Click CCPage.WebElement("xpath:=//div[@class='DayPicker-Day DayPicker-Day--selected']")
					
		       		
		       	End If
		       	BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		   

		'New Page Borrower income
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"IncmMonthlyBase")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly base')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"IncmMonthlyBase")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"IncmMonthlyOvertm")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly overtime')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"IncmMonthlyOvertm")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"IncmTotalBonus")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'bonuses total')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"IncmTotalBonus")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"IncmTotalCmsns")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'total commisions')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"IncmTotalCmsns")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"IncmDividnsInterest")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'dividends and interest')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"IncmDividnsInterest")
		End If
		 BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
			
		'Marital Status
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"MaritalStatus")) Then
			GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'Marital')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"MaritalStatus")
		End If
		'additional Monthly income
		Select Case Ucase(FRM_DS_GetValue(objData,"AddtnlMonthlyIncome"))
			Case "YES"
		 		GUI_WebButton_Click CCPage.WebButton("innertext:=Yes")
		 	Case "NO"
		 		GUI_WebButton_Click CCPage.WebButton("innertext:=No")
		 	Case Else
		 		BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		 	End Select
		 
		 
		 'New page- manage your asset
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"BorAsset")) Then
		 	GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'Asset')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"BorAsset")
		 End If
		 BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		 	
		 
		 
		 'New page- monthly Housing expenses
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"MonthlyRent")) Then
		 	GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly rent')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"MonthlyRent")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"MonthlyMortPmnt")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly mortgage payment')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"MonthlyMortPmnt")
		End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"OthrMonthlyMortPmnt")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'other monthly mortgage payment')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"OthrMonthlyMortPmnt")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"MonthlyHazrdInsur")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly hazard insurance')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"MonthlyHazrdInsur")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"MonthlyTotalProp")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly total for property')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"MonthlyTotalProp")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"MonthlyMortInsur")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly cost for Mortgage Insurance')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"MonthlyMortInsur")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"MonthlyHOAFees")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly HOA fees')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"MonthlyHOAFees")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"MonthlyTotalUtil")) Then
			GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'monthly total for utilities')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"MonthlyTotalUtil")
		End If
		BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		 
		 
		 'Monthly hosung expenses proposed
		 'Same content
		 
		 BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		 
		 'New page
		  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"HoldingTitle")) Then
		 	GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'holding title')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"HoldingTitle")
		 End If
		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LeasehldEstate")) Then
		 	GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'leasehold estate')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"LeasehldEstate")
		 End If
		  BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		 
		 'New page -econsent
		 Select Case Ucase(FRM_DS_GetValue(objData,"eConsentAgree"))
			Case "YES"
		  		GUI_WebButton_Click CCPage.WebButton("innertext:=I Agree")
		  	Case "NO"
		  		GUI_WebButton_Click CCPage.WebButton("innertext:=I do not Agree")
		  End Select
		  BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		
		'New Page-Borrower declarations
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"OtstdngJudgement")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'outstanding judgement')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"OtstdngJudgement")&"'])[1]")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"DeclrdBankrupt")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'declared bankrupt')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"DeclrdBankrupt")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"PrprtyForeClsd")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'property foreclosed')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"PrprtyForeClsd")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LawSuit")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'lawsuit')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"LawSuit")&"'])[1]")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TransTitle")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'transfer of title in lieu')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"TransTitle")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FederalDebt")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'Federal debt')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"FederalDebt")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"PayAlimony")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'obligated to pay alimony')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"PayAlimony")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"BorowdDownPmnt")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'down payment borrowed')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"BorowdDownPmnt")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CoMkrEndrsr")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'co-maker or endorser')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"CoMkrEndrsr")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"USCitizen")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'U.S. citizen')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"USCitizen")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"PermResAlien")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'permanent resident alien')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"PermResAlien")&"'])[1]")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"PrimRes")) Then
			GUI_WebButton_Click CCPage.WebButton("xpath:=(//label[contains(text(),'primary residence')]/ancestor::div[2]/following-sibling::div//button[text()='"&FRM_DS_GetValue(objData,"PermResAlien")&"'])[1]")
		End If
		BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		
		'New Page
		
		GUI_WebElement_Click CCPage.WebElement("xpath:=(//label[contains(text(),'Ethnicity')]/ancestor::div[2]/following::div/label[contains(text(),'I do not')])[1]")
		GUI_WebElement_Click CCPage.WebElement("xpath:=(//label[contains(text(),'Race - Check one or more')]/ancestor::div[2]/following::div/label[contains(text(),'I do not')])[1]")
		GUI_WebElement_Click CCPage.WebElement("xpath:=(//label[contains(text(),'Sex')]/ancestor::div[2]/following::div/label[contains(text(),'I do not')])[1]")
		BIZ_CCPageRefresh CCBrowser,CCPage.WebButton("name:=Next","type:=submit")
		
		'Loan Application Summary
		'GUI_WebElement_Click CCPage.WebElement("innerhtml:=Save","class:=button hollow")
		GUI_WebElement_Click CCPage.WebElement("innerhtml:=Submit","class:=button")
		
		
		'Loan Submitted
		myjs="window.ScrollTo(0,100);" 'implemeted to naviage to the top of the page
		CCPage.RunScript(myjs0)
		GUI_Object_ValidateExists CCPage.WebElement("innertext:=Congratulations.*","html tag:=P"),g_ShortWaitTime,"Loan Applied successfully"
		GUI_WebButton_Click CCPage.WebButton("innertext:=Finish")
		
		
		
			
	Set objData = Nothing
	Set CCBrowser = Nothing
	Set CCpage=Nothing
		
		
End Function

'This function is used to Create an account within Consumer Connect for a new user
'@code
'    BIZ_CCAccountSignIn(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_CCAccountSignIn(strRowID,FirstName,LastName)
	
	
	'Create account
	Dim objData, CCBrowser

	Set objData    = FRM_DS_GetTestData("ConsumerConnect", "AccountSignIn", strRowID)
	Set CCBrowser=Browser("title:=.*nice.int.mymortgage-app.net.*")
	Set CCPage=CCBrowser.Page("url:=.*nice.int.mymortgage-app.net.*")	
	
	GUI_Browser_CloseAllBrowsers FRM_DS_GetValue(objData,"BrowserVersion")
	GUI_Browser_OpenUrl FRM_DS_GetValue(objData,"URL"),FRM_DS_GetValue(objData,"BrowserVersion")
	FRM_Logger_ReportPassEvent "Navigated To page:  "&CCPage.WebElement("xpath:=(//label[contains(@class,'em-cc-la-field-label ')])[1]").GetROProperty("Text"), "URL for the page " &CCPage.GetROProperty("url"), null
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CreateAccount")) Then
		GUI_WebButton_Click CCPage.WebButton("innertext:=Create Account")
	
	
	'Create an account page
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CCFirstName")) Then
		GUI_WebEdit_Set CCPage.WebEdit("name:=firstName"),FRM_DS_GetValue(objData,"CCFirstName")
	Else
		GUI_WebEdit_Set CCPage.WebEdit("name:=firstName"),FirstName
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CCLastName")) Then
		GUI_WebEdit_Set CCPage.WebEdit("name:=lastName"),FRM_DS_GetValue(objData,"CCLastName")
	Else
		GUI_WebEdit_Set CCPage.WebEdit("name:=lastName"),LastName
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CCEmail")) Then
		GUI_WebEdit_Set CCPage.WebEdit("name:=email"),FirstName&"@yopmail.com"
		BorEmail=FirstName&"@yopmail.com"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CCConfirmEmail")) Then
		GUI_WebEdit_Set CCPage.WebEdit("outerhtml:=.*Confirm Email Address.*"),FirstName&"@yopmail.com"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CCUsername")) Then
		GUI_WebEdit_Set CCPage.WebEdit("name:=username"),FRM_DS_GetValue(objData,"CCUsername")
		Environment("CCUserName")=FRM_DS_GetValue(objData,"CCUsername")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CCPassword")) Then
	  
	    CCPage.WebEdit("xpath:=(//input[@type='password'])[1]").Click
		GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//input[@type='password'])[1]"),FRM_DS_GetValue(objData,"CCPassword")
		Environment("CCPassword")=FRM_DS_GetValue(objData,"CCPassword")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"ConfPassword")) Then
		
		GUI_WebEdit_Set CCPage.WebEdit("outerhtml:=.*Confirm Password.*"),FRM_DS_GetValue(objData,"ConfPassword")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"SecQues")) Then
		GUI_WebList_NGSelect CCPage.WebElement("xpath:=//label[contains(text(),'Security Question')]/parent::div/following::div[text()='Select One']"),FRM_DS_GetValue(objData,"SecQues")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"SecAns")) Then
		GUI_WebEdit_Set CCPage.WebEdit("outerhtml:=.*Answer.*"),FRM_DS_GetValue(objData,"SecAns")
	End If
		GUI_WebButton_Click CCPage.WebButton("innertext:=Create Account")
End If
	'Sync page
	'If (CCPage.WebElement("class:=api-loader float-center").WaitProperty("visible","False",g_ShortWaitTime)) Then 
	
	'Email Verification
		GUI_Object_ValidateExists CCPage.WebElement("innertext:=A verification email has been sent to "&BorEmail,"html tag:=LABEL"),g_LongWaitLarge,"Verification email sent successfully"
		GUI_Browser_CloseAllBrowsers FRM_DS_GetValue(objData,"BrowserVersion")
		Call BIZ_YMEmailVerification("CCLoan_Encompass",BorEmail)
	'End If 
	myjs="window.ScrollTo(0,100);"
	CCPage.RunScript(myjs0)

	GUI_Object_ValidateExists CCPage.WebElement("html id:=flash-text","outertext:=Your account has been verified.*"),g_LongWaitLarge,"Account Has been verified"
	
	
	Set objData=Nothing
	Set CCBrowser=Nothing
	Set CCPage=Nothing
End Function
'This function is used to Login within Consumer Connect with provided UserID,Password
'@code
'    BIZ_CClogin(strRowID,UserID,Password)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet, User Id and password can be provided through parent function
				   'If those two parametres are passed from calling function make sure that your corresponding testdata column should be blank
Function BIZ_CClogin(strRowID,UserID,Password)

	Set CCBrowser=Browser("title:=.*nice.int.mymortgage-app.net.*")
	Set CCPage=CCBrowser.Page("url:=.*nice.int.mymortgage-app.net.*")	
	Set objData    = FRM_DS_GetTestData("ConsumerConnect", "AccountSignIn", strRowID)
	
	GUI_Browser_CloseAllBrowsers FRM_DS_GetValue(objData,"BrowserVersion")
	GUI_Browser_OpenUrl FRM_DS_GetValue(objData,"URL"),FRM_DS_GetValue(objData,"BrowserVersion")
	CCBrowser.Sync
	FRM_Logger_ReportPassEvent "Navigated To page:  "&CCPage.WebElement("xpath:=(//label[contains(@class,'em-cc-la-field-label ')])[1]").GetROProperty("Text"), "URL for the page " &CCPage.GetROProperty("url"), null

	
	'If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LoginAccount")) Then
		'Username
		'GUI_WebEdit_Set CCPage.WebEdit("html id:=account"),split(FRM_DS_GetValue(objData,"LoginAccount"),":")(0)
		GUI_WebEdit_Set CCPage.WebEdit("html id:=account"),UserID
		'Password
		'GUI_WebEdit_Set CCPage.WebEdit("html id:=pf.pass"),split(FRM_DS_GetValue(objData,"LoginAccount"),":")(1)
		GUI_WebEdit_Set CCPage.WebEdit("html id:=pf.pass"),Password
		'Login Button
		GUI_WebButton_Click CCPage.WebButton("html id:=login-button")
		FRM_Logger_ReportPassEvent "Navigated To page:  "&CCPage.WebElement("xpath:=(//div[@class='em-cc-bp-greeting']//strong)[last()]").GetROProperty("Text"), "Logged In Successfully", null
		'CCPage.WebElement("innertext:=Home")
		'GUI_Link_Click CCPage.Link("name:=Logout","html tag:=A")
	'End If
	
	Set CCBrowser=Nothing
	Set CCPage=Nothing
	Set objData=Nothing
	
End Function
'This function is used to Login within Consumer Connect with provided UserID,Password
'@code
'    BIZ_YMEmailVerification(strRowID,emailID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet,  emailIDcan be provided through parent function
				   'If emailID is getting passed through parent function  make sure that your corresponding testdata column should be blank
				   
Function BIZ_YMEmailVerification(strRowID,emailID)
	
	Set objData    = FRM_DS_GetTestData("ConsumerConnect", "AccountSignIn", strRowID)
	Set YOPmailBrowser=Browser("name:=YOPmail - Disposable Email Address")
	Set YOPmailPage=YOPmailBrowser.Page("url:=.*yopmail.*")
	GUI_Browser_OpenUrl FRM_DS_GetValue(objData,"EmailVerification"),FRM_DS_GetValue(objData,"BrowserVersion")
	YOPmailBrowser.Sync
	FRM_Logger_ReportPassEvent "Navigated To page: YOPMail", "URL for the page " &YOPmailPage.GetROProperty("url"), null
	GUI_WebEdit_Set YOPmailPage.WebEdit("name:=login"),emailID
	GUI_WebButton_Click YOPmailPage.WebButton("type:=submit","value:=Check Inbox")

	Set YMFrameInbox=YOPmailPage.Frame("html id:=ifinbox")
	Set oDesc=Description.Create
	oDesc("micclass").Value="Link"
	oDesc("html tag").Value="A"
	
	Set Maillink=YMFrameInbox.ChildObjects(oDesc)
	GUI_Link_Click Maillink(6)
	
	Set YMMailViewer=YOPmailPage.Frame("html id:=ifmail","title:=YOPmail - Mail viewer")
	Set YMMailElement=YMMailViewer.WebElement("html tag:=DIV","innerhtml:=Hi.*")
	Set oDesc=Description.Create
	oDesc("micclass").Value="Link"
	oDesc("html tag").Value="A"
	
	Set EmailVerLink=YMMailElement.ChildObjects(oDesc)
	verificationURL=GUI_Object_GetPropertyValue(EmailVerLink(0),"text")
	
	GUI_Browser_CloseAllBrowsers FRM_DS_GetValue(objData,"BrowserVersion")
	GUI_Browser_OpenUrl verificationURL,FRM_DS_GetValue(objData,"BrowserVersion")
	
	Set objData    = Nothing
	Set YOPmailBrowser=Nothing
	Set YOPmailPage=Nothing
	
End Function

'This function is created for submitting a form and refresh the page after URL change
'@code
'    BIZ_CCPageRefresh(objBrowser,objWebButton)
'@endcode
'@param objBrowser : pass on the browser on which you want  to perform sync
		'objWebButton: pass on the button , on click which browser will navgate to next page

Function BIZ_CCPageRefresh(objBrowser,objWebButton)
	GUI_WebButton_Click objWebButton
	 Set objPage=objBrowser.Page("url:=.*")
	 objBrowser.sync
	'GUI_Browser_Sync objBrowser
	 FRM_Logger_ReportPassEvent "Navigated To page:  "&objPage.WebElement("xpath:=(//label[contains(@class,'em-cc-la-field-label ')])[1]").GetROProperty("Text"), "URL for the page " &objPage.GetROProperty("url"), null

End Function

'This function is created for signing the econsent for borrower once it has been triggered from Encompass
'@code
'    BIZ_CCAcceptEconsent(strRowID,UserID)
'@endcode
''@param strRowID - Row Id used to find the line in the data sheet,  emailIDcan be provided through parent function
				   'If userID is getting passed through parent function  make sure that your corresponding testdata column should be blank

Function BIZ_CCAcceptEconsent(strRowID,UserID)

	Set CCBrowser=Browser("title:=.*nice.int.mymortgage-app.net.*")
	Set CCPage=CCBrowser.Page("url:=.*nice.int.mymortgage-app.net.*")	
	Set objData    = FRM_DS_GetTestData("ConsumerConnect", "AccountSignIn", strRowID)
	
	'Call the modular function to login within CC portal
	Call BIZ_CClogin(strRowID,UserID,objData.item("Password"))
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CCAuthCode")) Then
	'Enter the Authentication code Passed
		GUI_WebEdit_Set CCPage.WebEdit("xpath:=(//label[contains(text(),'Authentication Code')]/parent::div/following::input)[1]"),FRM_DS_GetValue(objData,"CCAuthCode")
		GUI_WebButton_Click CCPage.WebButton("name:=Send","type:=submit")
		CCBrowser.Sync
		FRM_Logger_ReportPassEvent "Navigated To page:  "&CCPage.WebElement("xpath:=(//div[@class='em-cc-bp-greeting']//strong)[last()]").GetROProperty("Text"), "URL for the page " &CCPage.GetROProperty("url"), null
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"eConsentSign")) Then
		GUI_WebButton_Click CCPage.WebButton("name:=Review Electronic Consent","type:=submit")
	
	Select Case Ucase(FRM_DS_GetValue(objData,"eConsentSign"))
		Case "YES"
				GUI_WebButton_Click CCPage.WebButton("name:=I Accept","type:=submit")
		Case "NO"
				GUI_WebButton_Click CCPage.WebButton("name:=I Decline","type:=submit")
	End Select
	
End If
	GUI_Link_Click CCPage.Link("name:=Logout","html tag:=A")
End Function

'This function is created for signing the edisclosure (LE/CD) for borrower once it has been triggered from Encompass
'@code
'    BIZ_CCAcceptEDisc(strRowID,UserID)
'@endcode
''@param strRowID - Row Id used to find the line in the data sheet,  emailIDcan be provided through parent function
				   'If userID is getting passed through parent function  make sure that your corresponding testdata column should be blank

Function BIZ_CCAcceptEDisc(strRowID,UserID)

	Set CCBrowser=Browser("title:=.*nice.int.mymortgage-app.net.*")
	Set CCPage=CCBrowser.Page("url:=.*nice.int.mymortgage-app.net.*")	
	Set objData    = FRM_DS_GetTestData("ConsumerConnect", "AccountSignIn", strRowID)
	
	'Call the modular function to login within CC portal
	Call BIZ_CClogin(strRowID,UserID,objData.item("Password"))
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LEDiscSign")) Then
		
		GUI_WebButton_Click	CCPage.WebButton("xpath:=//div[text()='Loan Estimate']/parent::section/following::button[text()='Open Documents']")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CDDiscSign")) Then
		
		GUI_WebButton_Click	CCPage.WebButton("xpath:=//div[text()='Closing Disclosure']/parent::section/following::button[text()='Open Documents']")
	End If
	
	GUI_WebButton_Click CCPage.WebButton("name:=NEXT")
	GUI_WebButton_Click CCPage.WebButton("name:=FINISH","type:=button","html id:=action-bar-btn-finish")
	
	Select Case Ucase(FRM_DS_GetValue(objData,"BorPair"))
		Case "ONLY BOR"
			loopubound=1
		Case "BOR PAIR"
			loopubound=2
	End Select
	
	For Iterator = 1 To loopubound Step 1
			GUI_WebElement_Click CCPage.WebElement("//*[local-name() = 'svg']")
			
			GUI_WebButton_Click CCpage.WebButton("name:=ADOPT AND SIGN")
			FRM_Logger_ReportPassEvent "Navigated To page:  "&CCPage.WebElement("xpath:=(//div[@class='em-cc-bp-greeting']//strong)[last()]").GetROProperty("Text"), "EDisclosure signed", null
	Next
	

	
	GUI_Link_Click CCPage.Link("name:=Logout","html tag:=A")
	
End Function
'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\ConsumerConnect.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Contacts.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Contacts
'List of functions here
'@code
'	Function BIZ_Contacts_BorrowerContact_Add(strRowID)
'	Function BIZ_Contacts_BorrowerContact_AddAndOriginateLoan(strRowID)
'   Function BIZ_Contacts_BusinessContact_Add(strRowID)
'   Function BIZ_Contacts_BusinessContact_Delete(strContactFirstName)
'   Function BIZ_Contacts_BusinessContact_CustomFields(strRowID)
'   Function BIZ_Contacts_BorrowerContact_Delete(strRowID)
'   Function BIZ_Contacts_BorrowerContact_LoanTab(strLoanNumber,strRowID)
'	Function BIZ_Contacts_BorrowerContact_Duplicate(strfieldName)
'	Function BIZ_Contacts_BorrowerContact_Edit(strRowID,strFieldName)
'	Function BIZ_Contacts_DeleteBorrowerContact(strfieldName,strContactName)
'	Function BIZ_Contacts_BorrowerContactSearch(strRowID,strFieldName)
'	Function BIZ_Contacts_BorrowerClearSearch()
'	Function BIZ_Contacts_BorrowerSearchwithSequenceLetters(strRowID)
'	Function BIZ_Contacts_BorrowerContactSearchwithStatus()
'	Function BIZ_Contacts_AdvanceSearchFilter(strRowID)
'	Function BIZ_Contacts_BorrowerContact_Reset(strRowID)
'	Function BIZ_Contacts_BorrowerContact_PrintandExcelFile()
'	Function BIZ_Contacts_BorrowerContact_VerifyLoanOrigination(strRowID,strFieldName)
'	Function BIZ_Contacts_BorrowerContact_VerifyBreakLoanOrigination(strFieldName)
'	Function BIZ_Contacts_BorrowerContact_BorrowerContactView(strRowID)
'	Function BIZ_Contacts_ContactDetails_SetPersonalInfo(strRowId)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Create new Borrower Contact
'@code
'    BIZ_Contacts_BorrowerContact_Add(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_BorrowerContact_Add(strRowID)

	FRM_Logger_ReportInfoEvent "Add Borrower Contacts", "Use Borrower sheet data row ID: "&strRowID, Null
	BIZ_Nav_SelectContactsTab()
	
	'=====click on the Borrower Contacts tab===========
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBorrower","index:=0")

	'==========Create new Borrower Contact and Enter Data SSN, Address, City, State, Zip, Phone, Home email, etc and click on the Save Icon===============
	Dim objAvaiableContact, boolFound, objMain,objData,strFirstName,strLastName,intColIndex

	Set objData            = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)	
	Set objAvaiableContact = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList","index:=0")
	Set objMain            = SwfWindow("swfname:=MainForm")
	
    intColIndex = GUI_List_GetColumnIndex(objAvaiableContact, "Borrower First Name")        
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList").SwfEdit("swfname:=txtBox","index:="&(intColIndex-1)), objData.Item("FirstName")
	UTIL_Win_SendKey "{ENTER}"
	
	strFirstName =  objData.Item("FirstName")
	strLastName = objData.Item("LastName")
	boolFound = GUI_List_TextExists(objAvaiableContact,2,strFirstName)
	
	If Not boolFound Then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")
		
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxFirstName","index:=0"), strFirstName
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxLastName","index:=0"), strLastName
		
		If UTIL_String_IsNotEmpty(objData.Item("SSN")) Then
		    GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxSSN"), objData.Item("SSN")
		End If
		
		If UTIL_String_IsNotEmpty(objData.Item("HomePhone")) Then
		    GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxHomePhone"), objData.Item("HomePhone")
		End If
		
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxHomeAddress1"), objData.Item("PresentAddress")
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxHomeCity"), objData.Item("PresentCity")
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxHomeState"), objData.Item("PresentState")
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxHomeZip"), objData.Item("PresentZip")	
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxPersonalEmail"), objData.Item("HomeEmail")
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CompanyName")) Then
	       GUI_SwfEditor_Type objMain.SwfEditor("swfname:=txtBoxEmployerName"), FRM_DS_GetValue(objData,"CompanyName")    
		End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CompanyAddress_1")) Then
	       GUI_SwfEditor_Type objMain.SwfEditor("swfname:=txtBoxBizAddress1"), FRM_DS_GetValue(objData,"CompanyAddress_1")    
		End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CompanyCity")) Then
	       GUI_SwfEditor_Type objMain.SwfEditor("swfname:=txtBoxBizCity"), FRM_DS_GetValue(objData,"CompanyCity")    
		End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CompanyState")) Then
	       GUI_SwfEditor_Type objMain.SwfEditor("swfname:=txtBoxBizState"), FRM_DS_GetValue(objData,"CompanyState")    
		End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CompanyZIP")) Then
	       GUI_SwfEditor_Type objMain.SwfEditor("swfname:=txtBoxBizZip"), FRM_DS_GetValue(objData,"CompanyZIP") 
			' No FrameWork Function for window Existence
			If objMain.SwfWindow("swfname:=ZipcodeSelectorDialog").Exist(5)=True Then
				GUI_List_ClickRow objMain.SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities"), Null, "City Name", FRM_DS_GetValue(objData,"CompanyCity"), True, False, False, "Double"
			End If	    	
		End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Company_JobTitle")) Then
	   		GUI_SwfEditor_Type objMain.SwfEditor("swfname:=txtBoxJobTitle"), FRM_DS_GetValue(objData,"Company_JobTitle")
			' No FrameWork Function for window Existence			
			If objMain.SwfWindow("swfname:=ZipcodeSelectorDialog").Exist(5)=True Then
				GUI_List_ClickRow objMain.SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities"), Null, "City Name", FRM_DS_GetValue(objData,"CompanyCity"), True, False, False, "Double"
			End If	   		
		End If
		
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSave","index:=0")
		
		FRM_Logger_ReportPassEvent "Add Borrower Contacts", "New borrower contact added: "&strLastName&", "&strFirstName, Null
    Else
		FRM_Logger_ReportPassEvent "Add Borrower Contacts", "Borrower contact '"&strLastName&", "&strFirstName&"' already exists", Null			
	End If
	
	Set objData = Nothing
	Set objMain = Nothing	
	
	BIZ_Contacts_BorrowerContact_Add =  strLastName
	
End Function



'This function is used to Originate Loan
'@code
'    BIZ_Contacts_BorrowerContact_AddAndOriginateLoan(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_BorrowerContact_AddAndOriginateLoan(strRowID)

	BIZ_Contacts_BorrowerContact_Add(strRowID)
	FRM_Logger_ReportInfoEvent "Originate Loan", "Use Borrower sheet data row ID: "&strRowID, Null
	
	'===========Highlighed Borrower Contact Name=========
    'Set avaiableContact = SwfWindow("EncompassMenu").SwfObject("BorrowerContactsViewLst")
	Set avaiableContact = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList")
	GUI_List_ClickRow avaiableContact, avaiableContact.SwfScrollBar("swfname:=vPanelScrollBar"), 2, "Blair", True, True, False, "Single"
	
	'=====Click on the 'Originate Loan' button=============
	'GUI_SwfButton_Click SwfWindow("EncompassMenu").SwfButton("Originate Loan")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnOriginateLoan")
	
	'=========- if an 'Existing Loans' menu pops up, click on the 'Create New' button=============
	'If  GUI_Object_IsExistX(SwfWindow("EncompassMenu").SwfWindow("Existing Loans"), 10) Then
	'GUI_SwfButton_Click SwfWindow("EncompassMenu").SwfWindow("Existing Loans").SwfButton("Create New")
	'End If
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MatchedLoansForm"),10) Then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MatchedLoansForm").SwfButton("swfname:=btnCreateNew")
	End If
	
	'======Click Continue button==========
'	If GUI_Object_IsExistX(SwfWindow("EncompassMenu").SwfWindow("Originate Loan"), 10) Then
'	   GUI_SwfButton_Click SwfWindow("EncompassMenu").SwfWindow("Originate Loan").SwfButton("Continue")
'	   GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=.*No")
'	End If
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanOriginationDlg"), 10) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanOriginationDlg").SwfButton("swfname:=btnContinue")
		'GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=.*No")
	End If
	
'	GUI_Object_WaitTillExistX SwfWindow("EncompassMenu").SwfLabel("User Defined Custom FIELD"), 120
	BIZ_Forms_Open "Borrower Summary - Origination"
	GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfLabel("swfname:=titleLbl","index:=0"), "Borrower Summary - Origination", "Form Title"
	
End Function



'This function is used to Create new Business Contact
'@code
'    BIZ_Contacts_BusinessContact_Add(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_BusinessContact_Add(strRowID)

	FRM_Logger_ReportInfoEvent "Add Business Contacts", "Use AddBusinessContact sheet data row ID: "&strRowID, Null
	BIZ_Nav_SelectContactsTab()
	
	'=====click on the Business Contacts tab===========
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBizPartner"),40
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBizPartner")

	'==========Create new Business Contact and Enter Data Company Name, Contact First Name, Contact Last Name, Contact Title, Work Phone, Work Cell, Work email, etc and click on the Save Icon===============
	Dim objAvailableContact, objData,objScrollBar

	Set objData             = FRM_DS_GetTestData("Contacts", "AddBusinessContact", strRowID)	
	Set objAvailableContact = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList")
	Set objScrollBar        = objAvailableContact.SwfScrollBar("swfname:=vPanelScrollBar")
	
	'=================Used below logic because of screen resolution issue==========
    If SwfWindow("swfname:=MainForm").SwfObject("swfname:=groupContainer2").Exist Then
        GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=collapsibleSplitter1")
    End If
    
	SwfWindow("swfname:=MainForm").Minimize
    SwfWindow("swfname:=MainForm").Maximize
	Wait g_LongWaitLarge + g_LongWaitLarge  'Explicit wait added Due to Sync
	
	If not GUI_List_ClickRow(objAvailableContact,objScrollBar,"Company Name",FRM_DS_GetValue(objData, "CompanyName"),True,True,False,"Single") Then
		   GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")
		
		If Not SwfWindow("swfname:=MainForm").SwfObject("swfname:=groupContainer2").Exist(2) Then
        	   GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=collapsibleSplitter1")
    	End If
		
		'===============changes done by Jaymala to add all the fields===================
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ContactFirstName")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxFirstName"), FRM_DS_GetValue(objData, "ContactFirstName")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ContactLastName")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxLastName"), FRM_DS_GetValue(objData, "ContactLastName")	
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Salutation")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxSalutation"), FRM_DS_GetValue(objData, "Salutation")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomePhone")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxHomePhone"), FRM_DS_GetValue(objData, "HomePhone")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WorkPhone")) Then
	       GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxWorkPhone"), FRM_DS_GetValue(objData, "WorkPhone")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WorkCell")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxMobilePhone"), FRM_DS_GetValue(objData, "WorkCell")		
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CellPhone")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxMobilePhone"), FRM_DS_GetValue(objData, "CellPhone")		
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FaxNumber")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxFaxNumber"), FRM_DS_GetValue(objData, "FaxNumber")		
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeEmail")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxPersonalEmail"), FRM_DS_GetValue(objData, "HomeEmail")		
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WorkEmail")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxBizEmail"), FRM_DS_GetValue(objData, "WorkEmail")			
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ContactLicense")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxPersonalInfoLicNumber"), FRM_DS_GetValue(objData, "ContactLicense")			
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LICAuthName")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxPersonalInfoLicAuthNAme"), FRM_DS_GetValue(objData, "LICAuthName")			
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LICAuthType")) Then
		   GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=comboBoxPersonalInfoLicAuthType"), FRM_DS_GetValue(objData, "LICAuthType")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LICStateCode")) Then
		   GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=comboBoxPersonalInfoLicState"), FRM_DS_GetValue(objData, "LICStateCode")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LICIssueDate")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpPersonalInfoLicIssueDate.*"), FRM_DS_GetValue(objData, "LICIssueDate")			
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Mail")) Then
		   GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=chkBoxNoSpam"), FRM_DS_GetValue(objData, "Mail")			
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Public")) Then
		   GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=chkBoxAccess"), FRM_DS_GetValue(objData, "Public")
		   
           If FRM_DS_GetValue(objData, "Public") Then
              GUI_SwfList_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ContactGroupSelectionDlg").SwfListView("swfname:=listView1"),"Companywide"
              GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ContactGroupSelectionDlg").Swfbutton("swfname:=btnOK")
           End If			
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Category")) Then
		   GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cmbBoxCategoryID"), FRM_DS_GetValue(objData, "Category")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyName")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxCompanyName"), FRM_DS_GetValue(objData, "CompanyName")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyAddress1")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxBizAddress1"), FRM_DS_GetValue(objData, "CompanyAddress1")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyAddress2")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxBizAddress2"), FRM_DS_GetValue(objData, "CompanyAddress2")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxBizCity"), FRM_DS_GetValue(objData, "City")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxBizState"), FRM_DS_GetValue(objData, "State")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxBizZip"), FRM_DS_GetValue(objData, "Zip")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Fees")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxFees"), FRM_DS_GetValue(objData, "Fees")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WebURL")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxBizWebUrl"),FRM_DS_GetValue(objData, "WebURL")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ContactTitle")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxJobtitle"),FRM_DS_GetValue(objData, "ContactTitle")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyLicense")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxLicenseNumber"),FRM_DS_GetValue(objData, "CompanyLicense")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LICAuthNameCompany")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBoxBizAuthName"),FRM_DS_GetValue(objData, "LICAuthNameCompany")			
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LICAuthTypeCompany")) Then
		   GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=comboBoxBizInfoLicAuthType"),FRM_DS_GetValue(objData, "LICAuthTypeCompany")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LICStateCodeCompany")) Then
		   GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=comboBoxBizInfoLicState"), FRM_DS_GetValue(objData, "LICStateCodeCompany")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LICIssueDateCompany")) Then
		   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpBizLicIssueDate.*"), FRM_DS_GetValue(objData, "LICIssueDateCompany")			
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryAccountNo")) Then
		   GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=0"), FRM_DS_GetValue(objData, "CategoryAccountNo")		
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryABANo")) Then
		   GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=1"), FRM_DS_GetValue(objData, "CategoryABANo")		
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryOrgID")) Then
		   GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=1"), FRM_DS_GetValue(objData, "CategoryOrgID")		
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Category")) AND FRM_DS_GetValue(objData, "Category") = "Investor" Then
		
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryMrtClause")) Then
		      GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=0"), FRM_DS_GetValue(objData, "CategoryMrtClause")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryCompanyName")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=1"), FRM_DS_GetValue(objData, "CategoryCompanyName")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryContactName")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=2"), FRM_DS_GetValue(objData, "CategoryContactName")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryAddress")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=4"), FRM_DS_GetValue(objData, "CategoryAddress")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryCity")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=5"), FRM_DS_GetValue(objData, "CategoryCity")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryState")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=8"), FRM_DS_GetValue(objData, "CategoryState")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryZip")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=7"), FRM_DS_GetValue(objData, "CategoryZip")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryContactno")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=6"), FRM_DS_GetValue(objData, "CategoryContactno")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryFaxNo")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=3"), FRM_DS_GetValue(objData, "CategoryFaxNo")		
		   End If
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Category")) AND FRM_DS_GetValue(objData, "Category") = "Lender" Then
		   
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryMrtClause")) Then
		      GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=2"), FRM_DS_GetValue(objData, "CategoryMrtClause")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryCompanyName")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=3"), FRM_DS_GetValue(objData, "CategoryCompanyName")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryContactName")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=5"), FRM_DS_GetValue(objData, "CategoryContactName")		
  		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryAddress")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=6"), FRM_DS_GetValue(objData, "CategoryAddress")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryCity")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=9"), FRM_DS_GetValue(objData, "CategoryCity")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryState")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=8"), FRM_DS_GetValue(objData, "CategoryState")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryZip")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=7"), FRM_DS_GetValue(objData, "CategoryZip")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryContactno")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=4"), FRM_DS_GetValue(objData, "CategoryContactno")		
		   End If
			
		   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CategoryFaxNo")) Then
			  GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=0"), FRM_DS_GetValue(objData, "CategoryFaxNo")		
		   End If		
		End If
		
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSave")
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=collapsibleSplitter1")
	
		FRM_Logger_ReportPassEvent "Add Business Contacts", "New business contact added: "&FRM_DS_GetValue(objData, "CompanyName"), Null
    Else
		FRM_Logger_ReportPassEvent "Add Business Contacts", "Business contact '"&FRM_DS_GetValue(objData, "CompanyName")&"' already exists", Null		
	End If
	
	Set objData             = Nothing	
	Set objAvailableContact = Nothing
	Set objScrollBar        = Nothing
	
End Function



'This function is used to add data in Business Contacts Custom Fields tab
'@code
'    BIZ_Contacts_BusinessContact_CustomFields(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_BusinessContact_CustomFields(strRowID)

	FRM_Logger_ReportInfoEvent "Add Business Contacts Custom Fields", "Use BusinessContactCustomFields sheet data row ID: "&strRowID, Null
	Dim objData	
	'=====click on the Business Contacts Custom Fields tab===========
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl1"),"Business Contact Custom Fields"

	Set objData = FRM_DS_GetTestData("Contacts", "BusinessContactCustomFields", strRowID)	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RefFrequency")) Then
	   GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname path:=;pnlLeftData;panel1;pnlLeft;CustomFieldsControl.*","index:=0"),FRM_DS_GetValue(objData,"RefFrequency")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MarketingActivity")) Then
	   GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=0"),FRM_DS_GetValue(objData,"MarketingActivity")	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActivityDate")) Then
	   GUI_WinEdit_Set SwfWindow("swfname:=MainForm").WinEdit("index:=1"), FRM_DS_GetValue(objData,"ActivityDate")
	End If
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSave")
	
	Set objData = Nothing
	
End Function



'This function is used to delete existing contact
'@code
' BIZ_Contacts_BusinessContact_Delete(strContactFirstName)
'@endcode
'@param strContactFirstName - Contact first name

Function BIZ_Contacts_BusinessContact_Delete(strFieldName,strFieldValue)

	BIZ_Nav_SelectContactsTab()
	
	'=====click on the Business Contacts tab===========
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBizPartner")
	GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
	
	Dim objAvailableContact, objData,objScrollBar

	Set objAvailableContact = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList")
	Set objScrollBar = objAvailableContact.SwfScrollBar("swfname:=vPanelScrollBar")
	
	'=================Used below logic because of screen resolution issue==========
    If SwfWindow("swfname:=MainForm").SwfObject("swfname:=groupContainer2").Exist Then
       Wait 2
       GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=collapsibleSplitter1")
    End If
    
    If SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch").GetROProperty("enabled") = True Then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
	End If
	
	If strFieldName = "CompanyName" Then
	   GUI_SwfEdit_Type SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=0"),strFieldValue
    ElseIf strFieldName = "ContactFirstName" Then
       GUI_SwfEdit_Type SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=1"),strFieldValue 
    ElseIf strFieldName = "ContactLastName" Then
       GUI_SwfEdit_Type SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=2"),strFieldValue 
	ElseIf strFieldName = "ContactTitle" Then
       GUI_SwfEdit_Type SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=3"),strFieldValue 
	ElseIf strFieldName = "WorkPhone" Then
       GUI_SwfEdit_Type SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=4"),strFieldValue 
	ElseIf strFieldName = "CellPhone" Then
       GUI_SwfEdit_Type SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=5"),strFieldValue 
	ElseIf strFieldName = "WorkEmail" Then
       GUI_SwfEdit_Type SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=6"),strFieldValue 
	End If
	
    Set WshShell = CreateObject("WScript.Shell")
    
    '=============Press Enter=======
	WshShell.SendKeys "{ENTER}"
	
	'============Get the Total Rows in table===============
	intRowCount = objAvailableContact.Object.Items.Count
	
	If intRowCount > 0 Then
	    For i = 0 To intRowCount-1
	        GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnDelete")
		    GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SWfWindow("swfname:=ConfirmDialog").SwfButton("swfname:=yesButton") 
	    Next
	End If
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
		
End Function



'This function is used to Delete Borrower Contact
'@code
'    BIZ_Contacts_BorrowerContact_Delete(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_BorrowerContact_Delete(strRowID)

	FRM_Logger_ReportInfoEvent "Add Borrower Contacts", "Use Borrower sheet data row ID: "&strRowID, Null
	BIZ_Nav_SelectContactsTab()
	
	'=====click on the Borrower Contacts tab===========
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBorrower","index:=0")
	Dim objAvaiableContact, boolFound

	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)	
	Set objAvaiableContact = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList","index:=0")
    intColIndex = GUI_List_GetColumnIndex(objAvaiableContact, "Borrower First Name")        
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList").SwfEdit("swfname:=txtBox","index:="&(intColIndex-1)), objData.Item("FirstName")
	UTIL_Win_SendKey "{ENTER}"
	
	boolFound = GUI_List_TextExists(objAvaiableContact,2,objData.Item("FirstName"))
	If boolFound Then
	   GUI_List_ClickOnCell objAvaiableContact,objScrollBar,1,2,True,False,False,"Single"
       GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnDelete")	
       GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ConfirmDialog").SwfButton("swfname:=yesButton") 
	End If
	
	Set objData = Nothing	
	
End Function



'This function is used to Verify the Loans in Borrower Contact in Loan Tab
'@code
'    BIZ_Contacts_BorrowerContact_LoanTab(strLoanNumber)
'@endcode
'@param strLoanNumber - Loan Number for the Loan Created
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_BorrowerContact_LoanTab(strLoanNumber,strRowID)

	FRM_Logger_ReportInfoEvent "Borrower Contacts - Click on Loan Tab", "Verify Loan ID "&strLoanNumber, Null
	Dim objAvaiableContact, boolFound
	BIZ_Nav_SelectContactsTab()
		
	'=====click on the Borrower Contacts tab===========
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBorrower","index:=0")

	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)	
	Set objAvaiableContact = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList","index:=0")
    intColIndex = GUI_List_GetColumnIndex(objAvaiableContact, "Borrower First Name")        
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList").SwfEdit("swfname:=txtBox","index:="&(intColIndex-1)), objData.Item("FirstName")
	UTIL_Win_SendKey "{ENTER}"
	
	boolFound = GUI_List_TextExists(objAvaiableContact,2,objData.Item("FirstName"))
	If boolFound Then
	   GUI_List_ClickOnCell objAvaiableContact,objScrollBar,1,2,True,False,False,"Single"
	   GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BorrowerTabForm").SwfTab("swfname:=tabControl1"),"Loans"
	   boolFound = GUI_List_ClickRow(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BorrowerTabForm").SwfObject("swfname:=gvLoanList"),objScrollBar,1,strLoanNumber,True,False,False,"Single")
	   
	   If boolFound Then
	      FRM_Logger_ReportPassEvent "Loan Details Should exist in Loan tab For the Borrower Selected","Loan Details Exist , Loan Number :"&strLoanNumber, Null
	    Else 
	      FRM_Logger_ReportFailEvent "Loan Details Should exist in Loan tab For the Borrower Selected","Loan Details Exist , Loan Number :"&strLoanNumber, Null
	   End If
    End If
   
	Set objData = Nothing	
	
End Function



'This function is used to Duplicate Borrower Contact
'@code
'    BIZ_Contacts_BorrowerContact_Duplicate(strfieldName)
'@endcode
'@param strfieldName - Last name of Borrower contact

Function BIZ_Contacts_BorrowerContact_Duplicate(strfieldName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Borrower Contact", "Validation of Duplicate Borrower Contact", Null
	Dim objSettings,objContactList,objScrollbar,objBorrowerLName,intPreRowCt,intAfterRowCt
	
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objContactList     = objSettings.SwfObject("swfname:=gvContactList")
	Set objScrollbar       = objContactList.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objBorrowerLName   = SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=2")
	
	If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")) Then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
	End If	
	
	GUI_SwfEdit_Set objBorrowerLName, strfieldName
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=siBtnRefresh")
	GUI_Object_WaitTillExistX objContactList, 100 
	intPreRowCt = GUI_List_GetRowCount (objContactList,"Borrower Last Name",strfieldName)
	GUI_List_ClickRow objContactList, objScrollbar, "Borrower Last Name", strfieldName, True, True, False, "Single"
	GUI_SwfObject_Click objsettings.SwfObject("swfname:=btnDuplicate")
	GUI_Object_WaitTillExistX objContactList, 200 
	intAfterRowCt = GUI_List_GetRowCount (objContactList,"Borrower Last Name",strfieldName)
		
	If(intAfterRowCt - intPreRowCt = 1) Then 
	   FRM_Logger_ReportPassEvent "Validate Duplicate Borrower Contact","Borrower Contact Duplicate '"&strfieldName&"' has created and Rowcount: "&intAfterRowCt,Null
	Else
	   FRM_Logger_ReportFailEvent "Validate Duplicate Borrower Contact","Borrower Contact Duplicate '"&strfieldName&"' has not created",Null
	End If
	
	Set objSettings 	   = Nothing
	Set objContactList     = Nothing
	Set objScrollbar 	   = Nothing
	Set objBorrowerLName   = Nothing
	
End Function



'This function is used to Edit Borrower Contact
'@code
'    Function BIZ_Contacts_BorrowerContact_Edit(strRowID,strFieldName)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet
'@param strFieldName - Borrower Contact Last Name

 Function BIZ_Contacts_BorrowerContact_Edit(strRowID,strFieldName)

	FRM_Logger_ReportInfoEvent "Click On Edit button", "Validate Edit BorrowerContact", Null
	Dim objTestData,objSettings,objBorrowerList,objContactList,objScrollbar,strFirstName,strLastName
	
	Set objTestData        = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower",strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objBorrowerList    = objSettings.SwfWindow("swfname:=BorrowerTabForm").SwfWindow("swfname:=BorrowerInfo1Form")
	Set objContactList     = objSettings.SwfObject("swfname:=gvContactList")
	Set objScrollbar       = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_List_ClickRow objContactList, objScrollbar, "Borrower Last Name", strFieldName, True, True, False, "Single"
	strFirstName =  FRM_DS_GetValue(objTestData,"FirstName")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objTestData,"FirstName")) Then
	   GUI_SwfEditor_Type objBorrowerList.SwfEdit("swfname:=txtBoxFirstName"), strFirstName 
	End If
	
	strLastName =  FRM_DS_GetValue(objTestData,"LastName")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objTestData,"LastName")) Then
	   GUI_SwfEditor_Type objBorrowerList.SwfEdit("swfname:=txtBoxLastName"), strLastName
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objTestData,"HomePhone")) Then
	   GUI_SwfEditor_Type objBorrowerList.SwfEdit("swfname:=txtBoxHomePhone"), FRM_DS_GetValue(objTestData,"HomePhone")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objTestData,"Company_JobTitle")) Then
       GUI_SwfEditor_Type objSettings.SwfWindow("swfname:=BorrowerTabForm").SwfWindow("swfname:=BorrowerInfo1Form").SwfEditor("swfname:=txtBoxJobTitle"), FRM_DS_GetValue(objTestData,"Company_JobTitle") 	   
    End If

	If GUI_Object_IsExist(objsettings.SwfObject("swfname:=btnSave")) And GUI_Object_IsEnabled (objsettings.SwfObject("swfname:=btnSave"))=True Then
	   GUI_SwfObject_Click objsettings.SwfObject("swfname:=btnSave")
	End If
		
	BIZ_Contacts_BorrowerContact_Edit = strFirstName &";"&strLastName	
		
	Set objTestData        = Nothing
    Set objSettings        = Nothing
	Set objBorrowerList    = Nothing
    Set objContactList     = Nothing
    Set objScrollbar       = Nothing

End Function



'This function is used to Delete Borrower Contact
'We have created this function to delete multiple contacts, where as existing function "BIZ_Contacts_BorrowerContact_Delete" handling deletion of single contact.
'@code
'    BIZ_Contacts_DeleteBorrowerContact(strfieldName,strContactName)
'@endcode
'@param strfieldName   - The name of a Borrower Contact
'@param strContactName - Borrower Contact Last Name

Function BIZ_Contacts_DeleteBorrowerContact(strfieldName,strContactName)
	
	FRM_Logger_ReportInfoEvent "Click On Delete button", "Validate Delete BorrowerContact", Null
	
	Dim objSettings,objContactList,objScrollbar,objConfirmDialog
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objContactList     = objSettings.SwfObject("swfname:=gvContactList")
	Set objScrollbar       = objContactList.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objConfirmDialog   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ConfirmDialog")
	    
	GUI_List_ClickRow objContactList, objScrollbar, "Borrower Last Name", strfieldName, True, True, False, "Single"
	objContactList.Type  micCtrlDwn
	GUI_List_ClickRow objContactList, objScrollbar, "Borrower Last Name", strContactName, True, True, False, "Single"
	objContactList.Type  micCtrlUp
	GUI_SwfObject_Click objsettings.SwfObject("swfname:=btnDelete")
	GUI_Object_WaitTillExistX objConfirmDialog,30
	GUI_DialogObject_Encompass_Yes objConfirmDialog,"Yes"
	GUI_DialogObject_Encompass_Yes objConfirmDialog,"Yes"
	GUI_Object_WaitTillExistX objContactList, 200 
	
	Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	'As we need to verify deletion of contacts ,calling report events
	If(GUI_List_TextExists(objContactList, 0, strfieldName))= False and GUI_List_TextExists(objContactList, 0, strContactName)=False Then
	   FRM_Logger_ReportPassEvent "Delete Borrower Contact","Borrower Contact "&strfieldName&" and "&strContactName&" are successfuly deleted",Null
	Else
	   FRM_Logger_ReportFailEvent "Delete Borrower Contact","Borrower Contact "&strfieldName&" and "&strContactName&" are not deleted",Null
	End If
	
    Set objSettings        = Nothing
    Set objContactList     = Nothing
    Set objScrollbar       = Nothing
	Set objConfirmDialog   = Nothing
	
	End Function
	
	
	
'This function is used for Verification of Simple Search Borrower Contact with Borrower First name and Last name
'@code
'    Function BIZ_Contacts_BorrowerSearch(strRowID,strFieldName)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet
'@param strFieldName - The name of a Borrower Contact

 Function BIZ_Contacts_BorrowerContactSearch(strRowID,strFieldName)
 
	FRM_Logger_ReportInfoEvent "Verification of Simple Search Borrower Contact", "Use Borrower sheet data row ID: "&strRowID, Null
	
	Dim objSettings,objContactList,objBorrowerFName,objBorrowerLName,intRowCount,strBorrowerDetails
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objContactList     = objSettings.SwfObject("swfname:=gvContactList")
	Set objBorrowerFName   = SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=1")
	Set objBorrowerLName   = SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=2")
	
	BIZ_Nav_SelectContactsTab()
	
	'Click on the Borrower Contacts tab
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBorrower","index:=0")
	strBorrowerDetails = BIZ_Contacts_BorrowerContact_Edit (strRowID,strFieldName)
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
	GUI_Object_WaitTillExistX objBorrowerFName,60
	GUI_SwfEdit_Set objBorrowerFName, split(strBorrowerDetails,";")(0)	
	GUI_SwfEdit_Set objBorrowerLName, split(strBorrowerDetails,";")(1)	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=siBtnRefresh")
	GUI_Object_WaitTillExistX objContactList,100
	 
	Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	intRowCount = objContactList.Object.Items.Count
	
	If (Cint(intRowCount) > 0) Then
		FRM_Logger_ReportPassEvent "search borrower contact","Borrower Contact Searched successfully with "&strBorrowerDetails&"",Null
	Else
	    FRM_Logger_ReportFailEvent "search borrower contact","Borrower Contact "&strBorrowerDetails&" is not found",Null
	End If 
			
    Set objSettings        = Nothing
    Set objContactList     = Nothing
	Set objBorrowerFName   = Nothing
	Set objBorrowerLName   = Nothing

End Function



'Verification of Clear Search Borrower Contact 
'@code
'    Function BIZ_Contacts_BorrowerClearSearch()
'@endcode

 Function BIZ_Contacts_BorrowerClearSearch()
 
	FRM_Logger_ReportInfoEvent "Clear Search Borrower Contact", "Verification of Clear Search Borrower Contact", Null
	
	Dim objSettings,objContactList,strPreRowCount,strAfterRowCount
	
	Set objSettings    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objContactList = objSettings.SwfObject("swfname:=gvContactList")
	
	strPreRowCount=GUI_Object_GetPropertyValue (objSettings.SwfLabel("swfname:=lblNumberOfItems"),"text")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
	GUI_Object_WaitTillExistX objContactList,60
	strAfterRowCount=GUI_Object_GetPropertyValue (objSettings.SwfLabel("swfname:=lblNumberOfItems"),"text")
	
	If(CInt(strAfterRowCount) > CInt(strPreRowCount)) Then
	   FRM_Logger_ReportPassEvent "Clear Search validation","All Borrower contacts are displayed",Null
	Else 
	   FRM_Logger_ReportFailEvent "Clear Search validation","All Borrower contacts are not displayed",Null
	End If
	
	GUI_Object_ValidateDisabled SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch"),"ClearSearch"
	
    Set objSettings      = Nothing
    Set objContactList   = Nothing
   
End Function



'Verification of Borrower Contact Search with Sequence Letters 
'@code
'    Function BIZ_Contacts_BorrowerSearchwithSequenceLetters(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_BorrowerSearchwithSequenceLetters(strRowID)
 
	FRM_Logger_ReportInfoEvent "Verification of Borrower Contact Search with Sequence Letters", "Use Borrower sheet data row ID: "&strRowID, Null
	
	Dim objData,objSettings,objBorrowerEdit,strSearchText,strPreRowCount,strAfterRowCount
	Set objData 	       = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower",strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objBorrowerEdit	   = SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=1")
		
	If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")) Then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
	End If
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"SearchText")) Then	
	   strSearchText =  FRM_DS_GetValue(objData,"SearchText")
	   GUI_SwfEdit_Set objBorrowerEdit, strSearchText
	End If
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=siBtnRefresh")
 	GUI_Object_WaitTillExistX objSettings.SwfLabel("swfname:=lblNumberOfItems"),60	
 	strPreRowCount=GUI_Object_GetPropertyValue (objSettings.SwfLabel("swfname:=lblNumberOfItems"),"text")
 	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
	GUI_Object_WaitTillExistX objSettings.SwfLabel("swfname:=lblNumberOfItems"),60
	strAfterRowCount=GUI_Object_GetPropertyValue (objSettings.SwfLabel("swfname:=lblNumberOfItems"),"text")
		
	If(CInt(strAfterRowCount) > CInt(strPreRowCount)) Then
	   FRM_Logger_ReportPassEvent "Clear Search validation","All Borrower contacts are displayed with search text '"&strSearchText&"'",Null
	Else 
	   FRM_Logger_ReportFailEvent "Clear Search validation","Borrower contacts are not displayed",Null
	End If
	
	If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")) Then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Swfbutton("swfname:=btnClearSearch")
	End If
			
	Set objData            = Nothing
    Set objSettings        = Nothing
    Set objBorrowerEdit    = Nothing
	
End Function



'Verification of Borrower Contact Search with Status 
'@code
'    Function BIZ_Contacts_BorrowerContactSearchwithStatus()
'@endcode

Function BIZ_Contacts_BorrowerContactSearchwithStatus()
 
	FRM_Logger_ReportInfoEvent "Borrower Contact Search with Status", "Verification of Borrower Contact Search with Status", Null
	
	Dim strStatus
	GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("micclass:=SwfComboBox","index:=3"),1
	strStatus = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblFilter"),"text")
	
	If(Instr(1,strStatus,"Status"))=1 then
	   FRM_Logger_ReportPassEvent "select status","Borrower Contact Searched with Status "&strStatus,Null
	Else
	   FRM_Logger_ReportFailEvent "select status","Borrower Contact not found with Status "&strStatus,Null	
	End If
		
End Function



'This function is used to Verify Advance Search Filter
'@code
'    	BIZ_Contacts_AdvanceSearchFilter(strRowID)
'@endcode
'@Param:strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_AdvanceSearchFilter(strRowID)

	FRM_Logger_ReportInfoEvent "Verify Advance Search Filter", "Use Borrower sheet data row ID: "&strRowID, Null

	Dim objData,objSettings,objBorrowerList,objContactSettings,objContactList,objSettingsDialog
	Dim strDescval,strFieldValue,strRowCount,intRowCount,strBorrowerContact,strAmount
	Set objData            = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)	
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objBorrowerList    = objSettings.SwfWindow("swfname:=BorrowerTabForm").SwfWindow("swfname:=BorrowerInfo2Form")
	Set objContactList     = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvContactList")
	Set objContactSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ContactAdvSearchDialog")
	Set objSettingsDialog  = objContactSettings.SwfWindow("swfname:=AddEditFilterDialog")
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FirstName")) Then
	   GUI_SwfEditor_Type objSettings.SwfEdit("swfname:=txtBoxFirstName"), Cstr(FRM_DS_GetValue(objData,"FirstName") )
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LastName")) Then
	   GUI_SwfEditor_Type objSettings.SwfEdit("swfname:=txtBoxLastName"), Cstr(FRM_DS_GetValue(objData,"LastName")) 
	End If
	
	GUI_SwfObject_Click objsettings.SwfObject("swfname:=btnSave")
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl1"),"Extra"
	GUI_Object_WaitTillExistX objBorrowerList,100
	GUI_Object_ValidateExists objBorrowerList.SwfObject("swfname:=gcContactProperty"),10,"Contact Properties"
	GUI_Object_ValidateExists objBorrowerList.SwfObject("swfname:=gcCampaign"),10,"Campaign Information"
	GUI_Object_ValidateExists objBorrowerList.SwfObject("swfname:=gcAppointment"),10,"Appointments"
	GUI_Object_ValidateExists objBorrowerList.SwfObject("swfname:=gcGroup"),10,"My Groups"
	
	GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cmbBoxContactType"),2
	GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cmbBoxStatus"),1
	GUI_SwfObject_Click objsettings.SwfObject("swfname:=btnSave")
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnAdvSearch"),60
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnAdvSearch")
		
	GUI_Object_WaitTillExistX objContactSettings,30 
    GUI_SwfObject_Click objContactSettings.SwfObject("swfname:=btnAddFilter")
    GUI_Object_WaitTillExistX objSettingsDialog,10 
	GUI_SwfObject_Click objSettingsDialog.SwfObject("swfname:=btnFieldList")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Field")) Then
	   strFieldValue = FRM_DS_GetValue(objData, "Field")
	   GUI_SwfEdit_Set objSettingsDialog.SwfWindow("swfname:=ReportFieldSelector").SwfEdit("Swfname:=txtFind"), strFieldValue
	End If
		
	GUI_Object_WaitTillExistX objSettingsDialog, 200 
	GUI_SwfButton_Click objSettingsDialog.SwfWindow("swfname:=ReportFieldSelector").swfbutton("swfname:=btnFind")
	GUI_SwfButton_Click objSettingsDialog.SwfWindow("swfname:=ReportFieldSelector").SwfObject("swfname:=controlStrip").swfbutton("swfname:=btnOK")
	GUI_Object_WaitTillExistX objSettingsDialog.SwfComboBox("swfname:=cboOperator"),30  		
	GUI_SwfComboBox_Select objSettingsDialog.SwfComboBox("swfname:=cboOperator"),FRM_DS_GetValue(objData, "Operator")
	GUI_Dialog_Encompass_OK "OK"	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MinValue")) Then
	   GUI_SwfEdit_Set objSettingsDialog.SwfEdit("Swfname:=txtMinNumber"), (FRM_DS_GetValue(objData, "MinValue")) 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MaxValue")) Then
	   GUI_SwfEdit_Set objSettingsDialog.SwfEdit("Swfname:=txtMaxNumber"), FRM_DS_GetValue(objData, "MaxValue")
	End If
	
	strDescval=Cstr(FRM_DS_GetValue(objData, "MinValue")) & " and " & Cstr(FRM_DS_GetValue(objData, "MaxValue"))
	GUI_Object_WaitTillExistX objSettingsDialog.swfbutton("swfname:=btnOK"),20
	GUI_SwfButton_Click objSettingsDialog.swfbutton("swfname:=btnOK")
	GUI_Object_WaitTillExistX objContactSettings.SwfWindow("swfname:=RelatedLoanMatchDialog").swfbutton("swfname:=btnOK") ,20
	GUI_SwfButton_Click objContactSettings.SwfWindow("swfname:=RelatedLoanMatchDialog").swfbutton("swfname:=btnOK")
	strRowCount = objContactSettings.SwfObject("swfname:=gvFilters").Object.Items.Count
	
	For i = 0 To strRowCount  - 1
		strAmount = Cstr(objContactSettings.SwfObject("swfname:=gvFilters").Object.Items.Item(i).Subitems.Item(3).Text)
		If strAmount = strDescval Then
		   IfFound = True
		Exit For
		End If 
	Next
	
	FRM_VerifyEqual strAmount,strDescval,"Comparing Values "&strAmount,"Values should match"
	GUI_SwfButton_Click objContactSettings.swfbutton("swfname:=btnOK")
	intRowCount = objContactList.Object.Items.Count
	strBorrowerContact = objContactList.Object.Items.Item(1).Subitems.Item(1).Text
	
	If (intRowCount >=1) Then
		FRM_Logger_ReportPassEvent "Advance Search validation","Borrower contacts is displayed with '"&strBorrowerContact&"'",Null
	Else 
		FRM_Logger_ReportFailEvent "Advance Search validation","Borrower contacts is not displayed with '"&strBorrowerContact&"'",Null
	End If
	
	BIZ_Contacts_BorrowerClearSearch()
					
	Set objData            = Nothing
	Set objBorrowerList    = Nothing
	Set objSettings        = Nothing
	Set objContactList     = Nothing
	Set objContactSettings = Nothing
	Set objSettingsDialog  = Nothing
	
End Function



'This function is used to Reset Borrower Contact
'@code
'    Function BIZ_Contacts_BorrowerContact_Reset(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

 Function BIZ_Contacts_BorrowerContact_Reset(strRowID)

	FRM_Logger_ReportInfoEvent "Click On Reset button", "Use Borrower sheet data row ID: "&strRowID, Null
	
	Dim objData,objSettings,objBorrowerList,objContactList
	Set objData         = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower",strRowID)
	Set objSettings     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objBorrowerList = objSettings.SwfWindow("swfname:=BorrowerTabForm").SwfWindow("swfname:=BorrowerInfo1Form")
	Set objContactList  = objSettings.SwfObject("swfname:=gvContactList")
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FirstName")) Then
	   GUI_SwfEditor_Type objBorrowerList.SwfEdit("swfname:=txtBoxFirstName"), Cstr(FRM_DS_GetValue(objData,"FirstName") )
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LastName")) Then
	   GUI_SwfEditor_Type objBorrowerList.SwfEdit("swfname:=txtBoxLastName"), Cstr(FRM_DS_GetValue(objData,"LastName")) 
	End If
	
	If GUI_Object_IsExist(objsettings.SwfObject("swfname:=btnRefresh")) And GUI_Object_IsEnabled(objsettings.SwfObject("swfname:=btnRefresh"))=True Then
	   GUI_SwfObject_Click objsettings.SwfObject("swfname:=btnRefresh")
	End If
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").winButton("text:=Cancel")
	
	If GUI_Object_IsExist(objsettings.SwfObject("swfname:=btnRefresh")) And GUI_Object_IsEnabled(objsettings.SwfObject("swfname:=btnRefresh"))=True Then
	   GUI_SwfObject_Click objsettings.SwfObject("swfname:=btnRefresh")
	End If
	
	GUI_Dialog_Encompass_OK "OK"
	GUI_Object_ValidateDisabled objsettings.SwfObject("swfname:=btnRefresh"),"RefreshButton"
	
	Set objData         = Nothing
    Set objSettings     = Nothing
	Set objBorrowerList = Nothing
    Set objContactList  = Nothing
    
End Function



'This function is to click Print and ExcelFile Borrower Contact
'@code
'    Function BIZ_Contacts_BorrowerContact_PrintandExcelFile()
'@endcode

 Function BIZ_Contacts_BorrowerContact_PrintandExcelFile()

	FRM_Logger_ReportInfoEvent "Click On Print and Excel objects", "To click On Print and Excel objects", Null
	
	Dim objSettings,objContactList,intRowCount,ColumnText
	Set objSettings    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objContactList = objSettings.SwfObject("swfname:=gvContactList")
		
	GUI_Object_WaitTillExistX objContactList,100
	For i=0 to 3 step 1
	    objContactList.Type  micCtrlDwn
		intRowCount = objContactList.Object.Items.Item(i).Subitems.Item(3).Text
		ColumnText =  GUI_List_GetCellData(objContactList, i, 1)
		GUI_List_ActOnRow objContactList,i, True,True,False,"Single"
	Next
	objContactList.Type  micCtrlUp
	
	GUI_SwfObject_Click objsettings.SwfObject("swfname:=btnPrint")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ContactPrintDialog").SwfButton("swfname:=btnPreview")
	wait g_LongWaitLarge*2 ' Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PdfPreviewDialog")
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnExport")
	wait g_LongWaitLarge*2 ' Due To Sync Issue We Are Explicitly Passing Wait Statement
		
    Set objSettings    = Nothing
    Set objContactList = Nothing
   
End Function



'This function is used to Verify Loan Origination
'@code
'    BIZ_Contacts_BorrowerContact_VerifyLoanOrigination(strRowID,strFieldName)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet
'@param strFieldName - Borrower Contact Last Name

Function BIZ_Contacts_BorrowerContact_VerifyLoanOrigination(strRowID,strFieldName)

	FRM_Logger_ReportInfoEvent "Add and Break Originate Loan", "Use Borrower sheet data row ID: "&strRowID, Null
	
	Dim objData,objSettings,objContactList,objScrollbar,objContactDialog,objStatusOnlineDialog,strLoanNumber,intRowIndex
	Set objData               = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower",strRowID)
	Set objSettings           = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objContactList        = objSettings.SwfObject("swfname:=gvContactList")
	Set objContactDialog      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanOriginationDlg")
	Set objStatusOnlineDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=StatusOnlineDialog")
	Set objScrollbar          = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	BIZ_Contacts_BorrowerContact_Add(strRowID)
	
	GUI_List_ClickRow objContactList, objScrollbar, "Borrower Last Name", strFieldName, True, True, False, "Single"
	GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnOriginateLoan")
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MatchedLoansForm"),10
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MatchedLoansForm").SwfButton("swfname:=btnCreateNew")
	GUI_Object_WaitTillExistX objContactDialog.SwfButton("swfname:=btnAddCoBorrower"),100
	GUI_SwfButton_Click objContactDialog.SwfButton("swfname:=btnAddCoBorrower")
	GUI_Object_WaitTillExistX objContactDialog.SwfWindow("swfname:=BorrowerContactPickList").SwfObject("swfname:=gvContacts"),100
	GUI_SwfObject_Click objContactDialog.SwfWindow("swfname:=BorrowerContactPickList").SwfObject("swfname:=gvContacts")
	GUI_SwfButton_Click objContactDialog.SwfWindow("swfname:=BorrowerContactPickList").SwfButton("swfname:=btnDone")
	
	GUI_SwfButton_Click objContactDialog.SwfButton("swfname:=btnSelectTemplate")
	GUI_Object_WaitTillExistX objContactDialog.SwfWindow("swfname:=LoanTemplateSelectDialog").SwfComboBox("swfname:=cmbBoxFolder"),20
	GUI_SwfComboBox_Select objContactDialog.SwfWindow("swfname:=LoanTemplateSelectDialog").SwfComboBox("swfname:=cmbBoxFolder"),"Public Loan Templates"
	GUI_SwfButton_Click objContactDialog.SwfWindow("swfname:=LoanTemplateSelectDialog").SwfButton("swfname:=btnNew")
	GUI_SwfComboBox_Select objContactDialog.SwfComboBox("swfname:=cmbBoxLoanFolder"),"My Pipeline"
	
	GUI_SwfButton_Click objContactDialog.SwfButton("swfname:=btnContinue")
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"),60
	SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl").Select "Forms"
	BIZ_Forms_Open "Borrower Summary - Origination"
	GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfLabel("swfname:=titleLbl","index:=0"), "Borrower Summary - Origination", "Form Title"
	GUI_WebEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("htmlid:=l_1240","index:=7"), FRM_DS_GetValue(objData,"HomeMail")
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=closeBtn")
	GUI_Dialog_Encompass_Yes "Yes"
	
	strLoanNumber = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").swfLabel("swfname:=lblLoanNumber"),"Text")
	GUI_Dialog_Encompass_Yes "Yes"
	GUI_Object_WaitTillExistX objStatusOnlineDialog.SwfButton("swfname:=btnPublishWC"),60
	GUI_SwfButton_Click objStatusOnlineDialog.SwfButton("swfname:=btnPublishWC")
	
	GUI_Object_WaitTillExistX objStatusOnlineDialog.SwfWindow("swfname:=SendEmailDialog").SwfButton("swfname:=btnSkip"),60
	GUI_SwfButton_Click objStatusOnlineDialog.SwfWindow("swfname:=SendEmailDialog").SwfButton("swfname:=btnSkip")	
	GUI_Dialog_Encompass_OK "OK"
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl1"),100
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl1"),"Loans"
	
	Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	intRowIndex=GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoanList"), 1,strLoanNumber)
    GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BorrowerTabForm").SwfObject("swfname:=gvLoanList"), intRowIndex, 1,strLoanNumber
	
    BIZ_Contacts_BorrowerContact_VerifyLoanOrigination = strLoanNumber

	Set objData               = Nothing
    Set objSettings           = Nothing
    Set objContactList        = Nothing
	Set objContactDialog      = Nothing
	Set objStatusOnlineDialog = Nothing
    Set objScrollbar          = Nothing
	
End Function



'This function is used to Break Loan Origination
'@code
'    BIZ_Contacts_BorrowerContact_VerifyBreakLoanOrigination(strLoanNumber)
'@endcode
'@param strLoanNumber - Loan Number which need to be break

Function BIZ_Contacts_BorrowerContact_VerifyBreakLoanOrigination(strLoanNumber)

	FRM_Logger_ReportInfoEvent "Break Loan Origination", "Verify Break Loan Origination from Borrower Contact", Null
	
	Dim objSettings,objScrollbar,intRowIndex
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm").SwfWindow("swfname:=BorrowerTabForm")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_List_ClickRow objSettings.SwfWindow("swfname:=BorrowerLoansForm").SwfObject("swfname:=gvLoanList"), objScrollbar, "Loan Number", strLoanNumber, True, False, False, "Single"
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=siBtnDisconnect")
    GUI_Dialog_Encompass_Yes "Yes"
    
    intRowIndex=GUI_List_GetRowIndex (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoanList"), 1,strText)
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoanList"),60
	
	If(intRowIndex <= 0) Then
	   FRM_Logger_ReportPassEvent "Delete Loan Number","Loan Number is deleted",Null
	Else
	   FRM_Logger_ReportFailEvent "Delete Loan Number","Loan Number is not deleted",Null
	End If
	
    Set objSettings  = Nothing
    Set objScrollbar = Nothing
	
End Function



'This function is used to Borrower ContactView
'@code
'    BIZ_Contacts_BorrowerContact_BorrowerContactView(strRowID)
'@endcode
'@param strRowID - Row Id used to find the line in the data sheet

Function BIZ_Contacts_BorrowerContact_BorrowerContactView(strRowID)

	FRM_Logger_ReportInfoEvent "Borrower ContactView", "Use Borrower sheet data row ID: "&strRowID, Null
	
	Dim objData,objBorrowerEdit,objContactViewDialog,objManagementDialog,strViewName,strValue,strSearchText,strvalDialog,intRowIndex,strViewName1
	Set objData              = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower",strRowID)
	Set objBorrowerEdit      = SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=1")
	Set objContactViewDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SaveContactViewDialog")
	Set objManagementDialog  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ViewManagementDialog")
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSaveView"),30
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSaveView")
	GUI_SwfRadioButton_Click objContactViewDialog.SwfRadioButton("swfname:=radNew")
	strViewName = CStr(FRM_DS_GetValue(objData, "Input")) 
	strValue = strViewName
	GUI_SwfEdit_Set objContactViewDialog.SwfEdit("swfname:=txtName"),strValue
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSaveView"),60
	GUI_SwfButton_Click objContactViewDialog.SwfButton("swfname:=btnOK")	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnEditView")
	intRowIndex = GUI_List_GetRowIndex(objManagementDialog.SwfObject("swfname:=gvViews"), "Name", strValue)
	
	If (intRowIndex >= 0) Then
		GUI_List_ValidateCellData objManagementDialog.SwfObject("swfname:=gvViews"), intRowIndex, "Default", "Yes"
	End If
	
	GUI_SwfButton_Click objManagementDialog.SwfButton("swfname:=btnClose")
	strSearchText =  FRM_DS_GetValue(objData,"SearchText")
	GUI_SwfEdit_Set objBorrowerEdit, strSearchText
 	UTIL_Win_SendKey "{ENTER}" 
 	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSaveView")
	GUI_SwfRadioButton_Click objContactViewDialog.SwfRadioButton("swfname:=radNew")
	GUI_SwfEdit_Set objContactViewDialog.SwfEdit("swfname:=txtName"),strValue
	GUI_SwfButton_Click objContactViewDialog.SwfButton("swfname:=btnOK")
	
	GUI_Object_WaitTillExistX objContactViewDialog.Dialog("text:=Encompass"),60
	strvalDialog= Replace(FRM_DS_GetValue(objData,"StaticMsg"),"#",strValue)
	FRM_Logger_ReportInfoEvent "Validating Encompass Dialog Box Existance", "Encompass Dialog Box Exists", Null
	GUI_Object_ValidateText objContactViewDialog.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),strvalDialog,"Popup Dialog's Static Message"

	GUI_WinButton_Click objContactViewDialog.Dialog("text:=Encompass").WinButton("text:=OK")
	strViewName1 = CStr(FRM_DS_GetValue(objData, "Value")) 
	GUI_SwfEdit_Set objContactViewDialog.SwfEdit("swfname:=txtName"),strViewName1
	GUI_SwfButton_Click objContactViewDialog.SwfButton("swfname:=btnOK")
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnEditView")
	
	intRowIndex = GUI_List_GetRowIndex(objManagementDialog.SwfObject("swfname:=gvViews"), "Name", strViewName1)
	
	If (intRowIndex >= 0) Then
	    GUI_List_ValidateCellData objManagementDialog.SwfObject("swfname:=gvViews"),intRowIndex , "Default", "Yes"
	End If
	
	GUI_SwfButton_Click objManagementDialog.SwfButton("swfname:=btnClose")
	
	Set objData              = Nothing
    Set objContactList       = Nothing
	Set objContactViewDialog = Nothing
	Set objManagementDialog  = Nothing
   
End Function



'This function is to set basic loan info  first name, last name, application date 
'@code
'    BIZ_Contacts_ContactDetails_SetPersonalInfo(strRowId)
'@endcode
'@param strRowId- RowId of test dat in Excel spread sheet

Function BIZ_Contacts_ContactDetails_SetPersonalInfo(strRowId)
	
	FRM_Logger_ReportInfoEvent "Set contact info with Basic data","Set Contact details First,Middle and Last Name using row id" &strRowId,Null
	
	Dim objSettings,objData,strFirstName,strLastName,strMiddleName
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfWindow("swfname:=BorrowerListForm")
	Set objData 	= FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBorrower","index:=0")
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")
	
	strFirstName  = FRM_DS_GetValue(objData,"FirstName")
	strLastName   = FRM_DS_GetValue(objData,"LastName")
	strMiddleName = FRM_DS_GetValue(objData,"MiddleName")
	
	If UTIL_String_IsNotEmpty(strFirstName) Then
	   GUI_SwfEditor_Type objSettings.SwfEdit("swfname:=txtBoxFirstName"), Cstr(strFirstName)
	End If
	
	If UTIL_String_IsNotEmpty(strLastName) Then
	   GUI_SwfEditor_Type objSettings.SwfEdit("swfname:=txtMiddleName"), Cstr(strMiddleName) 
	End If
	
	If UTIL_String_IsNotEmpty(strMiddleName) Then
	   GUI_SwfEditor_Type objSettings.SwfEdit("swfname:=txtBoxLastName"), Cstr(strLastName) 
	End If
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSave")
	
	arrBorrowerDetails = Array(strFirstName,strMiddleName,strLastName)

	Set objSettings = Nothing
	Set objData		= Nothing
	
	BIZ_Contacts_ContactDetails_SetPersonalInfo = arrBorrowerDetails
		
End Function 


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Contacts.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\InputFormBuilder.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_InputFormBuilder BIZ_InputFormBuilder
'List of functions here 
'@code
'   Function BIZ_InputFormBuilder_Launch()
'	Function BIZ_InputFormBuilder_Login(strRowID)
'   Function BIZ_InputFormBuilder_UserLogin(strUserName, strUserPwd, strURL)
'	Function BIZ_InputFormBuilder_Close()
'   Function BIZ_InputFormBuilder_CreateCustomForm()
'   Function BIZ_InputFormBuilder_SaveCustomForm(strFormName)
'   Function BIZ_InputFormBuilder_AddObject(strObject,intNoOfObjects,strProperty,value,strTab,strFieldID)
'   Function BIZ_InputFormBuilder_DeleteObject(strObject)
'   Function BIZ_InputFormBuilder_DeleteForm(strFormName)
'	Function BIZ_InputFormBuilder_CloseCustomForm(boolSave)
'	Function BIZ_InputFormBuilder_DeleteFormFields(strFormName)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Launch InputFormBuilder
'@code
'    Function BIZ_InputFormBuilder_Launch()
'@endcode
'@param 

Function BIZ_InputFormBuilder_Launch()

	FRM_Logger_ReportInfoEvent "Launch InputFormBuilder", "Launch InputFormBuilder", Null
	UTIL_Win_CloseProcesses "FormBuilder.exe"
    UTIL_Win_MinimizeAll()
	SystemUtil.Run "C:\SmartClientCache\Apps\Ellie Mae\Encompass\FormBuilder.exe"

End Function



'This function is used to Login system using Row Id
'@code
'    BIZ_InputFormBuilder_Login(strRowID)
'@endcode
'@param strRowID - row id for data

Function BIZ_InputFormBuilder_Login(strRowID)

	Set objData = FRM_DS_GetGlobalTestData("Login", strRowID)
	strUserName = objData.Item("UserName")
	strUserPwd = objData.Item("UserPassword")
	strURL = objData.Item("URL")
	BIZ_InputFormBuilder_UserLogin strUserName, strUserPwd, strURL

End Function



'This function is used to Login in Admin Tools
'@code
'    Function BIZ_InputFormBuilder_UserLogin(strUserName, strUserPwd, strURL)
'@endcode
'@param strUserName - The user id
'@param strUserPwd - The password
'@param strURL - server to connect

Function BIZ_InputFormBuilder_UserLogin(strUserName, strUserPwd, strURL)

	FRM_Logger_ReportInfoEvent "Login in InputFormBuilder", strURL & ", " & strUserName & ", " & strUserPwd, Null
	GUI_SwfEdit_Set SwfWindow("swfname:=LoginScreen").SwfEdit("swfname:=loginNameBox"), strUserName
	GUI_SwfEdit_Set SwfWindow("swfname:=LoginScreen").SwfEdit("swfname:=passwordBox"), strUserPwd
    
    If NOT strURL = "" Then
	       GUI_SwfEdit_Set SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001"), strURL
    End If
    
	GUI_SwfButton_Click SwfWindow("swfname:=LoginScreen").SwfButton("swfname:=okBtn")
    GUI_Object_WaitTillVisibleX SwfWindow("swfname:=HostWin"),120
       
End Function



'This function is used to Close InputFormBuilder
'@code
'    Function BIZ_InputFormBuilder_Close()
'@endcode
'@param 

Function BIZ_InputFormBuilder_Close()
	
	FRM_Logger_ReportInfoEvent "Close Input Form Builder", "Close Input Form Builder", Null
	SwfWindow("swfname:=HostWin").Activate
	SwfWindow("swfname:=HostWin").Close
	
End Function



'This function is used to Create custom form
'@code
'    Function BIZ_InputFormBuilder_CreateCustomForm()
'@endcode

Function BIZ_InputFormBuilder_CreateCustomForm()
	
	FRM_Logger_ReportInfoEvent "InputFormBuilder CreateCustomForm", "Create custom form using InputFormBuilder", Null
	GUI_SwfButton_Click SwfWindow("swfname:=HostWin").SwfButton("swfname:=btnNew")
	
End Function



'This function is used to save custom form
'@code
'    Function BIZ_InputFormBuilder_SaveCustomForm(strFormName)
'@endcode
'@param strFormName - Name of form to create newly

Function BIZ_InputFormBuilder_SaveCustomForm(strFormName)

    FRM_Logger_ReportInfoEvent "InputFormBuilder Save Custom Form", "Save Custom Form '" & strFormName & "'", Null
    
	Set objMainMenu = SwfWindow("swfname:=HostWin").SwfToolbar("swfname:=mainMenu")
	Set objSaveWindow = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FormSaveAsDialog")
	
	GUI_SwfToolbar_ShowDropdown objMainMenu,"File"		
    GUI_SwfToolbar_Select objMainMenu, "File;Save Form"
    
    If GUI_Object_IsExistX(objSaveWindow, 5) Then
	   GUI_SwfEdit_Set objSaveWindow.SwfEdit("swfname:=txtName"),strFormName
       GUI_SwfButton_Click objSaveWindow.SwfButton("swfname:=btnSave")
    End If
    
    Set objMainMenu = Nothing
    Set objSaveWindow = Nothing
        
End Function



'This function is used to add objects to custom form
'@code
'    Function BIZ_InputFormBuilder_AddObject(strObject)
'@endcode
'@param strObject - Name of object to add to custom form(e.g strObject - Label,TextBox)

Function BIZ_InputFormBuilder_AddObject(strObject)

    FRM_Logger_ReportInfoEvent "InputFormBuilder AddObject", "Add object '" & strObject & "'", Null
    
    Set objMainMenu = SwfWindow("swfname:=HostWin").SwfToolbar("swfname:=mainMenu")

    GUI_SwfToolbar_ShowDropdown objMainMenu,"Edit"		
    GUI_SwfToolbar_Select objMainMenu, "Edit;Insert;"&strObject&""
    
    Set objMainMenu = Nothing  
    
End Function



'This function is used to add objects to custom form
'@code
'    Function BIZ_InputFormBuilder_DeleteObject(strObjectName)
'@endcode
'@param strObjectName - Name of object to delete from custom form

Function BIZ_InputFormBuilder_DeleteObject(strObjectName)

  FRM_Logger_ReportInfoEvent "InputFormBuilder DeleteObject", "Delete object '" & strObjectName & "'", Null
  
  Set objMainMenu = SwfWindow("swfname:=HostWin").SwfToolbar("swfname:=mainMenu")
    
  GUI_SwfComboBox_Select SwfWindow("swfname:=HostWin").SwfComboBox("swfname:=cboControls"),strObjectName   
  GUI_SwfToolbar_ShowDropdown objMainMenu,"Edit"		
  GUI_SwfToolbar_Select objMainMenu, "Edit;Delete"
  
  Set objMainMenu = Nothing
  
 End Function
   
   

'This function is used to delete custom form
'@code
'    Function BIZ_InputFormBuilder_DeleteForm(strFormName)
'@endcode
'@param strFormName - Name of form to delete from Input Builder

    
Function BIZ_InputFormBuilder_DeleteForm(strFormName)

    FRM_Logger_ReportInfoEvent "InputFormBuilder DeleteForm", "Delete Form '" & strFormName & "'", Null
    
    Set objMainMenu = SwfWindow("swfname:=HostWin").SwfToolbar("swfname:=mainMenu")
    Set objManageCustomization = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FormsManagementDialog")
    
    GUI_SwfToolbar_ShowDropdown objMainMenu,"Tools"		
    GUI_SwfToolbar_Select objMainMenu, "Tools;Manage Customizations..."
    GUI_SwfTab_Click objManageCustomization.SwfTab("swfname:=tabsPackageItemType"),"Custom Input Forms"
    GUI_SwfList_Select objManageCustomization.SwfListView("swfname:=lvwForms"),strFormName
    GUI_SwfButton_Click objManageCustomization.Swfbutton("swfname:=btnDelete")
    GUI_WinButton_Click objManageCustomization.Dialog("text:=Encompass").Winbutton("text:=OK")
    GUI_SwfButton_Click objManageCustomization.Swfbutton("swfname:=btnClose")
    
    Set objMainMenu = Nothing
    Set objManageCustomization = Nothing
        
End Function



'This function is used to Close custom form
'@code
'    Function BIZ_InputFormBuilder_CloseCustomForm(strFormName, boolSave)
'@endcode
'@param boolSave - Whether to save the form or not

Function BIZ_InputFormBuilder_CloseCustomForm(boolSave)

    FRM_Logger_ReportInfoEvent "InputFormBuilder Close Custom Form", "Close Custom Form", Null
    
	Set objMainMenu = SwfWindow("swfname:=HostWin").SwfToolbar("swfname:=mainMenu")
	Set objSaveWindow = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FormSaveAsDialog")
	
	GUI_SwfToolbar_ShowDropdown objMainMenu,"File"		
    GUI_SwfToolbar_Select objMainMenu, "File;Close Form"
    
    If GUI_Object_IsExistX(SwfWindow("swfname:=HostWin").Dialog("text:=Form Editor"), 5) Then
	   If boolSave Then
       	  GUI_WinButton_Click SwfWindow("swfname:=HostWin").Dialog("text:=Form Editor").WinButton("text:=&Yes")
	   Else
       	  GUI_WinButton_Click SwfWindow("swfname:=HostWin").Dialog("text:=Form Editor").WinButton("text:=&No")
	   End If
    End If
    
    Set objMainMenu = Nothing
    Set objSaveWindow = Nothing
        
End Function



' This function is for delete form fields 
'@code
'   BIZ_DeleteFormFields(strFormName)
'@endcode
'@Param strFormName is to used delete fields

Function BIZ_InputFormBuilder_DeleteFormFields(strFormName)

	FRM_Logger_ReportInfoEvent "DeleteFormFields","DeleteFormFields", Null
	
	Dim objOpenDialog,objMainMenu
		
	Set objOpenDialog   = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FormOpenDialog")
	Set objMainMenu = SwfWindow("swfname:=HostWin").SwfToolbar("swfname:=mainMenu")
		
	GUI_SwfButton_Click SwfWindow("swfname:=HostWin").SwfButton("swfname:=btnOpen")
	GUI_SwfTab_Click objOpenDialog.SwfTab("swfname:=tabsOpen"), "Custom Input Forms"
			
	intRowid= GUI_List_GetRowIndex(objOpenDialog.SWfListView("swfname:=lvwCustom"), 0, strFormName)
	If intRowid>=0 Then
		If UTIL_String_IsNotEmpty(strFormName) Then
			GUI_List_Select  objOpenDialog.SWfListView("swfname:=lvwCustom"), strFormName
			GUI_SwfButton_Click objOpenDialog.SwfButton("swfname:=btnOpen")
		End If
		
		GUI_SwfToolbar_ShowDropdown objMainMenu,"Edit"
		GUI_SwfToolbar_Select objMainMenu, "Edit;Select All"
    	GUI_SwfToolbar_Select objMainMenu, "Edit;Delete"
    
    BIZ_InputFormBuilder_SaveCustomForm strFormName
	
	BIZ_InputFormBuilder_CloseCustomForm False
	
	
	End If
	
	If GUI_Object_IsExist(objOpenDialog.SwfButton("swfname:=btnCancel")) Then
		GUI_SwfButton_Click objOpenDialog.SwfButton("swfname:=btnCancel")
	End If
		
		
	Set objOpenDialog   = Nothing
	Set objMainMenu  	= Nothing
	
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\InputFormBuilder.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\LoanCenter.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_LoanCenter BIZ_LoanCenter
'List Of Functions here
'@code
'   Function BIZ_LoanCenterLO_LogIn(strRowID)
'	Function BIZ_LoanCenter_LogIn(strRowID)
'	Function BIZ_LoanCenter_Logout()
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Log In to LO site of loan center.
'@code
'   Function BIZ_LoanCenterLO_LogIn(strRowID)
'@endcode
'@param strRowID - row id to use for data from datasheet

Function BIZ_LoanCenterLO_LogIn(strRowID)
    FRM_Logger_ReportInfoEvent "Log In LoanCenter", "User Log In LoanCenter account", Null
    Set objData = FRM_DS_GetTestData("Global_Data", "LoanOfficerSite", strRowID)
	Set objLoanCenterPage = Browser("name:=.*Ellie Mae.*").Page("title:=.*Ellie Mae.*")
	GUI_Browser_OpenUrl FRM_DS_GetValue(objData, "URL")
	
	If objLoanCenterPage.Exist(20) Then
	   GUI_WebEdit_Set objLoanCenterPage.WebEdit("name:=.*textboxClientID.*"), FRM_DS_GetValue(objData, "ClientID")
	   GUI_WebEdit_Set objLoanCenterPage.WebEdit("name:=.*textboxUserID.*"), FRM_DS_GetValue(objData, "UserID")
	   GUI_WebEdit_Set objLoanCenterPage.WebEdit("name:=.*textboxPassword.*"), FRM_DS_GetValue(objData, "Password")
	   objLoanCenterPage.Link("text:=.*Login.*","index:=0").WebElement("innertext:=.*Login.*","index:=0").Click 
	End If	
	
	If objLoanCenterPage.WebList("html id:=.*ddlSearchType.*").Exist(30) Then
	   FRM_Logger_ReportPassEvent "Loan Center Home Page", "Loan center home page is loaded successfully.", Null
	Else
	   FRM_Logger_ReportFailEvent "Loan Center Home Page", "Loan center home page is NOT loaded.", Null
	End If
	
	Set objLoanCenterPage = Nothing
	
End Function



 'This function is used to Log In to loan center.
'@code
'    BIZ_LoanCenter_LogIn(strRowID)
'@endcode
'@param strRowID - row id to use for data from datasheet

 Function BIZ_LoanCenter_LogIn(strRowID)
 
    FRM_Logger_ReportInfoEvent "Log In Loan Center", "User Log In Loan Center", Null
    Set objData = FRM_DS_GetTestData("Global_Data", "Website", strRowID)
	strURL = FRM_DS_GetValue(objData, "URL")
	Set objWebPage = Browser("name:=.*", "application version:=internet explorer.*","CreationTime:=0").Page("title:=.*", "index:=0")
	If(objWebPage.Exist(5)) Then
		Browser("name:=.*", "application version:=internet explorer.*","CreationTime:=0").Close
	End If
	FRM_Logger_ReportInfoEvent "Open Loan Center Site", "Opening site:" & strURL, Null 
	'GUI_Browser_OpenUrl strURL

	GUI_Browser_CloseAll()
	GUI_Browser_OpenUrl strURL
	wait  g_LongWaitLarge
	
	If objWebPage.WebEdit("name:=.*textboxEmail.*").Exist(100) Then
	   objWebPage.WebEdit("name:=.*textboxEmail.*").Set FRM_DS_GetValue(objData, "EmailAccount")
	   objWebPage.WebEdit("name:=.*textboxPassword.*").Set  FRM_DS_GetValue(objData, "Password")
	   objWebPage.Link("text:=.*Login.*","index:=0").WebElement("innertext:=.*Login.*","index:=0").Click 
	End If		
	
End Function



 'This function is used to Log Out to loan center.
'@code
'    BIZ_LoanCenter_Logout()
'@endcode
'@param - None

Function BIZ_LoanCenter_Logout()

	Dim objBrowser, objAccountPage
	If(GUI_Object_IsExist(Browser("name:=.*Check Loan Status.*","application version:=internet explorer.*").Page("title:=.*Check Loan Status.*"))) Then
	   Set objBrowser = Browser("name:=.*Check Loan Status.*","application version:=internet explorer.*")
	   Set objAccountPage = Browser("name:=.*Check Loan Status.*","application version:=internet explorer.*").Page("title:=.*Check Loan Status.*")
	End If
	
	If(GUI_Object_IsExist(Browser("name:=.*Loan Detail.*","application version:=internet explorer.*").Page("title:=.*Loan Detail.*")))Then 
	   Set objBrowser = Browser("name:=.*Loan Detail.*","application version:=internet explorer.*")
	   Set objAccountPage = objBrowser.Page("title:=.*Loan Detail.*")
	End If
	
	objAccountPage.Link("text:=Log Out","index:=0").Click
	Wait g_TinyWaitSmall
	 If(GUI_Object_IsExist(Browser("name:=.*Ellie Mae.*","application version:=internet explorer.*", "index:=0"))) Then 
		Browser("name:=.*Ellie Mae.*", "application version:=internet explorer.*","index:=0").Close()
	ElseIf(GUI_Object_IsExist(Browser("name:=.*Mortgage.*","application version:=internet explorer.*", "index:=0"))) Then 
		Browser("name:=.*Mortgage.*","application version:=internet explorer.*", "index:=0").Close()
	End If
	Set objAccountPage = Nothing
	Set objBrowser = Nothing
End Function


' @}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\LoanCenter.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Login.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Login BIZ_Login
'List of functions:
'@code
'  Function BIZ_Login_UserLogin(strRowID)
'  Function BIZ_Login_UserLoginSystem(strUserName, strUserPwd)
'  Function BIZ_Login_UserLogout()
'  Function BIZ_Login_OpenAdminTool()
'  Function BIZ_Login_SelectAdminTool(strExpWord)
'  Function BIZ_Login_UserLogin_LO(strRowID)
'  Function BIZ_Login_UserLoginSystem_LO(strUserName, strUserPwd, strURL, strClientId)
'  Function BIZ_Login_SyncLogin(strSnapRowID)
'  Function BIZ_Login_SyncLogout()
'  Function BIZ_Login_OpenFormBuilder()
'  Function BIZ_RemoveUAC()
'  Function BIZ_Login_UserAppLauncherLogin(strRowID)
'  Function BIZ_Login_UserAppLauncherLoginSystem(strUserName, strUserPwd, strURL, strClientId)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Login system using Row Id
'@code
'    BIZ_Login_UserLogin strRowID
'@endcode
'@param strRowID - row id for data

Function BIZ_Login_UserLogin(strRowID)

	Set objData = FRM_DS_GetGlobalTestData("Login", strRowID)
	strUserName = objData.Item("UserName")
	strUserPwd = objData.Item("UserPassword")
	strURL = objData.Item("URL")
	strClientId = objData.Item("ClientId")	
	If FRM_QTP_EnvVariableExist("ServerName") Then		
		'server name was passed as a parameter in jenkins job
		'hence override the value of server from GlobalData.xls
		BIZ_Login_UserLoginSystem strUserName, strUserPwd, Environment.value("ServerName"), strClientId
		FRM_RT_SetPropValue "Server URL", Environment.value("ServerName")
	Else	
		BIZ_Login_UserLoginSystem strUserName, strUserPwd, strURL, strClientId
		FRM_RT_SetPropValue "Server URL", strURL
	End If
	FRM_RT_SetPropValue g_FRM_Prop_LoginDataRowID, strRowID

    'wait 2 
    'GUI_WinButton_Click Dialog("text:=Encompass").WinButton("text:=OK")
    'GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer"), 60
End Function



'This function is used to Login system
'@code
'    BIZ_Login_UserLoginSystem strUserName, strUserPwd, strURL, strClientId
'@endcode
'@param strUserName - The user id
'@param strUserPwd - The password
'@param strURL - server to connect
'@param strClientId - Smart Client Id

Function BIZ_Login_UserLoginSystem(strUserName, strUserPwd, strURL, strClientId)

    sysType = FRM_RT_GetPropValueRequired("testPlatform")
    FRM_Logger_ReportInfoEvent "Log In", "Log In with user/password: '" & strUserName & "/" & strUserPwd & "', sysType="&sysType, null
	
	UTIL_Win_CloseProcesses "Encompass.exe"
	UTIL_Win_MinimizeAll()
	wait(5)	
	
	Select Case sysType	
	
		Case "SmartClient"	
		    If UTIL_File_FileExists("C:\SmartClientCache\Apps\Ellie Mae\Encompass\Encompass.exe") Then
               SystemUtil.Run("C:\SmartClientCache\Apps\Ellie Mae\Encompass\Encompass.exe")
            Else
               SystemUtil.Run("C:\SmartClientCache\Apps\Ellie Mae\Encompass\AppLauncher.exe")
            End If
            
			If SwfWindow("swfname:=AuthenticationForm").Exist(2) Then
			   SwfWindow("swfname:=AuthenticationForm").Activate
			   SwfWindow("swfname:=AuthenticationForm").SwfCheckBox("swfname:=chkBoxAutoSignOn").Set "ON"
			   SwfWindow("swfname:=AuthenticationForm").WinEdit("regexpwndclass:=Edit","index:=0").Set strClientId
			   SwfWindow("swfname:=AuthenticationForm").SwfButton("swfname:=btnLogin").Click
			End If
			
		Case "DeskTop"
			If UTIL_File_FileExists("C:\Program Files (x86)\Encompass\Encompass.exe") Then
			   SystemUtil.Run ("C:\Program Files (x86)\Encompass\Encompass.exe")
			Else
			   SystemUtil.Run("C:\Program Files\Encompass\Encompass.exe")
			End If
			
			GUI_Object_WaitTillVisibleX SwfWindow("swfname:=LoginScreen"),120
			SwfWindow("swfname:=LoginScreen").SwfComboBox("Connection").Select "NetWorked"
            SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001").Set "localhost"
	End Select
	
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=LoginScreen"),120
    SwfWindow("swfname:=LoginScreen").Activate
	SwfWindow("swfname:=LoginScreen").SwfEdit("swfname:=loginNameBox").Set strUserName
	SwfWindow("swfname:=LoginScreen").SwfEdit("swfname:=passwordBox").Set strUserPwd
	
	If NOT sysType = "DeskTop" and NOT strURL = "" then
		SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001").Set strURL
		strMsg = ""
	Else
		strURL = SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001").GetROProperty("text")
		strMsg = ". The server name gets populated by default"
	End If
	
	SwfWindow("swfname:=LoginScreen").SwfButton("swfname:=okBtn").Click

	If SwfWindow("swfname:=LoginScreen").Dialog("text:=Encompass").Exist Then
	   SwfWindow("swfname:=LoginScreen").Dialog("text:=Encompass").WinButton("text:=OK").Click
	End If
'	If SwfWindow("swfname:=MainForm").Dialog("regexpwndclass:=#32770").Exist Then
'	   SwfWindow("swfname:=MainForm").Dialog("regexpwndclass:=#32770").WinButton("text:=OK").Click
'	End If
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm"),120
	SwfWindow("swfname:=MainForm").Maximize
	
	strBuildInfo = Split(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm"),"text"),"-")

	
	If SwfWindow("swfname:=MainForm","index:=0").Exist(15) Then
	   FRM_Logger_ReportPassEvent "Login to Encompass "&sysType, "Logged in as "&strUserName & strMsg & "."&strBuildInfo(1) &". Server: " &strURL, null
	Else
	   FRM_Logger_ReportFailEvent "Login to Encompass "&sysType, "Unable to Log in as "&strUserName & strMsg & "."&strBuildInfo(1) &". Server: " &strURL, null
	End If
End Function



'This function is used to Logout system
'@code
'    BIZ_Login_UserLogout()
'@endcode

Function BIZ_Login_UserLogout()
    FRM_Logger_ReportInfoEvent "Log Out", "Log Out the application", null 
    wait 5
	UTIL_Win_CloseProcesses "Encompass.exe"	
End Function



'This function is used to open admin tool
'@code
'    BIZ_Login_OpenAdminTool()
'@endcode

Function BIZ_Login_OpenAdminTool()
	FRM_Logger_ReportInfoEvent "Encompass Admin Tools", "Open Admin Tools", null
	If GUI_Object_IsExist(SwfWindow("swfname:=SettingsToolMain")) Then
		GUI_Window_Close SwfWindow("swfname:=SettingsToolMain")
		Wait g_LongWaitLarge
	End If
	If GUI_Object_IsExist(SwfWindow("swfname:=AdminTools")) Then
		GUI_Window_Close SwfWindow("swfname:=AdminTools")
	End If
	UTIL_Win_CloseProcessesbyfolder "C:\SmartClientCache\Apps\Ellie Mae\Encompass"
	SystemUtil.Run("C:\SmartClientCache\Apps\Ellie Mae\Encompass\AdminTools.exe")
	GUI_Object_WaitTillExist SwfWindow("swfname:=AdminTools")
End Function



'This function is used to select admin tool
'@code
'    BIZ_Login_SelectAdminTool(strExpWord)
'@endcode
'@param strExpWord item name 

Function BIZ_Login_SelectAdminTool(strExpWord)
	FRM_Logger_ReportInfoEvent "Encompass Admin Tools", "Select'"&strExpWord&"'in Encompass Admin Tools Window", null	
	
	Set objAdminTools = SwfWindow("swfname:=AdminTools")
	Set objTools = objAdminTools.SwfObject("swfname:=gvTools")
	IfFound = False
			
	' Check the expect item whether exist in the list
	strRowCount = objTools.Object.Items.Count
	For i = 0 To strRowCount  - 1
		strActualWord = objTools.Object.Items.Item(i).Subitems.Item(0).Text
		If strActualWord = strExpWord Then
			IfFound = True
			Exit For
		End If	
	Next

	'If item exist, orperate the item
	'If item exist, orperate the item
	If IfFound Then
		strItemHeight = objTools.Object.GetItemBounds(i).Height
		
		Y_axis = round(strItemHeight * i + strItemHeight * 0.5)
		objAdminTools.Highlight
		objTools.Highlight
		objTools.MouseMove 50,Y_axis
		objTools.DblClick 50, Y_axis
	End If
	
	
	Wait g_LongWaitLarge
	Wait g_LongWaitLarge
	Set objTools = nothing
End Function



'This function is used to Login system using Row Id
'@code
'    BIZ_Login_UserLogin_LO strRowID
'@endcode
'@param strRowID - row id for data

Function BIZ_Login_UserLogin_LO(strRowID)

 Set objData = FRM_DS_GetGlobalTestData("Login", strRowID)
 strUserName = objData.Item("UserName")
 strUserPwd = objData.Item("UserPassword")
 strURL = objData.Item("URL")
 strClientId = objData.Item("ClientId")
 BIZ_Login_UserLoginSystem_LO strUserName, strUserPwd, strURL, strClientId
 FRM_RT_SetPropValue g_FRM_Prop_LoginDataRowID, strRowID
End Function



'This function is used to Login system
'@code
'    BIZ_Login_UserLoginSystem_LO strUserName, strUserPwd, strURL, strClientId
'@endcode
'@param strUserName - The user id
'@param strUserPwd - The password
'@param strURL - server to connect
'@param strClientId - Smart Client Id

Function BIZ_Login_UserLoginSystem_LO(strUserName, strUserPwd, strURL, strClientId)

    sysType = FRM_RT_GetPropValueRequired("testPlatform")
    FRM_Logger_ReportInfoEvent "Log In", "Log In with user/password: '" & strUserName & "/" & strUserPwd & "', sysType="&sysType, null
	UTIL_Win_CloseProcesses "Encompass.exe"
	UTIL_Win_MinimizeAll()
	wait(5) 
Select Case sysType 
  Case "SmartClient" 
    If UTIL_File_FileExists("C:\SmartClientCache\Apps\Ellie Mae\Encompass\Encompass.exe") Then
       SystemUtil.Run("C:\SmartClientCache\Apps\Ellie Mae\Encompass\Encompass.exe")
    Else
       SystemUtil.Run("C:\SmartClientCache\Apps\Ellie Mae\Encompass\AppLauncher.exe")
    End If
    
	If SwfWindow("swfname:=AuthenticationForm").Exist(2) Then
	   SwfWindow("swfname:=AuthenticationForm").Activate
	   SwfWindow("swfname:=AuthenticationForm").SwfCheckBox("swfname:=chkBoxAutoSignOn").Set "ON"
	   SwfWindow("swfname:=AuthenticationForm").WinEdit("regexpwndclass:=Edit","index:=0").Set strClientId
	   SwfWindow("swfname:=AuthenticationForm").SwfButton("swfname:=btnLogin").Click
	End If
	
  Case "DeskTop"
	If UTIL_File_FileExists("C:\Program Files (x86)\Encompass\Encompass.exe") Then
	   SystemUtil.Run ("C:\Program Files (x86)\Encompass\Encompass.exe")
	Else
	   SystemUtil.Run("C:\Program Files\Encompass\Encompass.exe")
	End If
	
GUI_Object_WaitTillVisibleX SwfWindow("swfname:=LoginScreen"),120
SwfWindow("swfname:=LoginScreen").SwfComboBox("Connection").Select "NetWorked"
SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001").Set "localhost"
End Select

GUI_Object_WaitTillVisibleX SwfWindow("swfname:=LoginScreen"),120
SwfWindow("swfname:=LoginScreen").Activate
SwfWindow("swfname:=LoginScreen").SwfEdit("swfname:=loginNameBox").Set strUserName
SwfWindow("swfname:=LoginScreen").SwfEdit("swfname:=passwordBox").Set strUserPwd

	If NOT sysType = "DeskTop" and NOT strURL = "" then
	       SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001").Set strURL
	       strMsg = ""
	Else
	       strURL = SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001").GetROProperty("text")
		   strMsg = ". The server name gets populated by default"
	End If
	
SwfWindow("swfname:=LoginScreen").SwfButton("swfname:=okBtn").Click

	If SwfWindow("swfname:=LoginScreen").Dialog("text:=Encompass").Exist(20) then
	   GUI_WinButton_Click SwfWindow("swfname:=LoginScreen").Dialog("text:=Encompass").WinButton("text:=OK")
	End IF
	
GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm"),120

	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CenterwiseActivationDialog").Exist(20) then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CenterwiseActivationDialog").SwfButton("swfname:=btnOK")
	End If
	
SwfWindow("swfname:=MainForm").Maximize

	If SwfWindow("swfname:=MainForm","index:=0").Exist(1) Then
	   FRM_Logger_ReportPassEvent "Login to Encompass "&sysType, "Logged in as "&strUserName & strMsg & ". Server: " &strURL, null
	Else
	   FRM_Logger_ReportFailEvent "Login to Encompass "&sysType, "Unable to Log in as "&strUserName & strMsg & ". Server: " &strURL, null
	End If
End Function



'This Function is to Login to sync tool
'@ code
'  		BIZ_Login_SyncLogin(strSnapRowID)
'@ endcode
'@ Param: strSnapRowID - RowID of dashboard excel From Where we are getting random snapshot name

Function BIZ_Login_SyncLogin(strRowID,strRowID1)

	Set objData = FRM_DS_GetGlobalTestData("Login", strRowID)
	Set objData1 = FRM_DS_GetGlobalTestData("Login", strRowID1)
	
	SwfWindow("swfname:=LoginForm").Highlight
	SwfWindow("swfname:=LoginForm").SwfEdit("swfname:=loginNameBox").Highlight
'	GUI_SwfEdit_Set SwfWindow("swfname:=LoginForm").SwfEdit("swfname:=loginNameBox"),objData.Item("UserName")
	SwfWindow("swfname:=LoginForm").SwfEdit("swfname:=passwordBox").Highlight
	GUI_SwfEdit_Set SwfWindow("swfname:=LoginForm").SwfEdit("swfname:=passwordBox"),objData.Item("UserPassword")
	FRM_Logger_ReportInfoEvent "SyncLogin", "Enter password: " & objData.Item("UserPassword"), Null	
	
	'If Not UTIL_String_IsEmpty(objData.Item("URL")) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=LoginForm").WinEdit("window id:=1001","index:=1"),objData.Item("URL")
		FRM_Logger_ReportInfoEvent "SyncLogin", "Enter URL: " & objData.Item("URL"), Null
	'End If
		
'	GUI_SwfEdit_Set SwfWindow("swfname:=LoginForm").SwfEdit("swfname:=loginNameBox2"),objData1.Item("UserName")
	GUI_SwfEdit_Set SwfWindow("swfname:=LoginForm").SwfEdit("swfname:=passwordBox2"),objData1.Item("UserPassword")
	FRM_Logger_ReportInfoEvent "SyncLogin", "Enter password: " & objData1.Item("UserPassword"), Null
	
	'If Not UTIL_String_IsEmpty(objData1.Item("URL")) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=LoginForm").WinEdit("window id:=1001","index:=0"),objData1.Item("URL")
		FRM_Logger_ReportInfoEvent "SyncLogin", "Enter URL: " & objData1.Item("URL"), Null
	'End If
	SwfWindow("swfname:=LoginForm").SwfButton("swfname:=okBtn").Highlight
	GUI_SwfButton_Click SwfWindow("swfname:=LoginForm").SwfButton("swfname:=okBtn")
	
	Wait g_LongWaitLarge
	Wait g_LongWaitLarge

End Function



'This Function is to Logout to sync tool
'@ code
'  		BIZ_Login_SyncLogout()
'@ endcode

Function BIZ_Login_SyncLogout()
	
	FRM_Logger_ReportInfoEvent "BIZ_Login_SyncLogout", "Log out from application", Null

	Dim objMianMenu
	Set objMianMenu = SwfWindow("swfname:=SettingsToolMain").SwfToolbar("swfname:=menuStrip1")
    If GUI_Object_IsExist(SwfWindow("swfname:=SettingsToolMain")) Then
		GUI_Window_Close SwfWindow("swfname:=SettingsToolMain")
		'GUI_SwfToolbar_ShowDropdown objMianMenu,"File"		
		'GUI_SwfToolbar_Select objMianMenu, "File;Exit"
		Wait g_LongWaitLarge
	End If
	If GUI_Object_IsExist(SwfWindow("swfname:=AdminTools")) Then
		GUI_Window_Close SwfWindow("swfname:=AdminTools")
	End If
    
    Set objMianMenu = Nothing
    
End Function



'This Function is to open the Form Builder application
'@ code
'  		BIZ_Login_OpenFormBuilder()
'@ endcode

Function BIZ_Login_OpenFormBuilder()
	FRM_Logger_ReportInfoEvent "Encompass Form Builder", "Open Form Builder", null	
	SystemUtil.CloseProcessByName "FormBuilder.exe"
	SystemUtil.Run("C:\SmartClientCache\Apps\Ellie Mae\Encompass\FormBuilder.exe")
	GUI_Object_WaitTillExist SwfWindow("swfname:=LoginScreen")
End Function

Function BIZ_RemoveUAC()
        Set fso = CreateObject("Scripting.FileSystemObject")
        Set oFolder = fso.GetFolder("C:\SmartClientCache\Apps\Ellie Mae\Encompass\")
       ' msgbox "Total files:"&oFolder.Files.Count
         If UTIL_File_FileExists("C:\SmartClientCache\Apps\Ellie Mae\Encompass\RemoveUAC.exe") Then
                SystemUtil.Run("C:\SmartClientCache\Apps\Ellie Mae\Encompass\RemoveUAC.exe")
                GUI_SwfCheckbox_Set SwfWindow("swfname:=SelectionForm").SwfCheckBox("swfname:=chkBoxConfigFiles"),TRUE
                GUI_SwfButton_Click SwfWindow("swfname:=SelectionForm").SwfButton("swfname:=btnRemove")
                GUI_WinButton_Click SwfWindow("swfname:=SelectionForm").Dialog("text:=Smart Client").WinButton("text:=&Yes")
         End If    
        
        intCount = oFolder.Files.Count
        count = 0
        'msgbox "intCount : before while"&intCount
        Do until (intCount > 6 OR count <= 30)
            Set oFolder = fso.GetFolder("C:\SmartClientCache\Apps\Ellie Mae\Encompass\")
            intCount = oFolder.Files.Count
            'msgbox "Total files: intCount"&intCount
            wait(2)
            count = count + 1
        Loop
        
End Function
    
Function BIZ_Login_UserAppLauncherLogin(strRowID)

	Set objData = FRM_DS_GetGlobalTestData("Login", strRowID)
	strUserName = objData.Item("UserName")
	strUserPwd = objData.Item("UserPassword")
	strURL = objData.Item("URL")
	strClientId = objData.Item("ClientId")
	strSCServer = objData.Item("SCServer")	
	If FRM_QTP_EnvVariableExist("ServerName") Then		
		'server name was passed as a parameter in jenkins job
		'hence override the value of server from GlobalData.xls
		BIZ_Login_UserAppLauncherLoginSystem strUserName, strUserPwd, Environment.value("ServerName"), strClientId,strSCServer
		FRM_RT_SetPropValue "Server URL", Environment.value("ServerName")
	Else	
		BIZ_Login_UserAppLauncherLoginSystem strUserName, strUserPwd, strURL, strClientId, strSCServer
		FRM_RT_SetPropValue "Server URL", strURL
	End If
	FRM_RT_SetPropValue g_FRM_Prop_LoginDataRowID, strRowID
     
End Function

Function BIZ_Login_UserAppLauncherLoginSystem(strUserName, strUserPwd, strURL, strClientId, strServer)

    sysType = FRM_RT_GetPropValueRequired("testPlatform")
    FRM_Logger_ReportInfoEvent "Log In", "Log In with user/password: '" & strUserName & "/" & strUserPwd & "', sysType="&sysType, null
		
	UTIL_Win_MinimizeAll()
	wait(5)	
	Select Case sysType	
		Case "SmartClient"	
           
                SystemUtil.Run("C:\SmartClientCache\Apps\Ellie Mae\Encompass\AppLauncher.exe")
           
           If SwfWindow("swfname:=AuthenticationForm").Exist(2) Then
				SwfWindow("swfname:=AuthenticationForm").Activate
				SwfWindow("swfname:=AuthenticationForm").SwfCheckBox("swfname:=chkBoxAutoSignOn").Set "ON"
				If strServer <> "" Then
					GUI_SwfLabel_DblClick SwfWindow("swfname:=AuthenticationForm").SwfLabel("swfname:=label1"),48,8
					SwfWindow("swfname:=AuthenticationForm").SwfEdit("swfname:=txtBoxServerURL").Set strServer
				End If
				SwfWindow("swfname:=AuthenticationForm").WinEdit("regexpwndclass:=Edit","index:=0").Set strClientId
				SwfWindow("swfname:=AuthenticationForm").SwfButton("swfname:=btnLogin").Click
			End If
	End Select
	
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=LoginScreen"),120
    SwfWindow("swfname:=LoginScreen").Activate
    wait 45
	SwfWindow("swfname:=LoginScreen").SwfEdit("swfname:=loginNameBox").Set strUserName
	SwfWindow("swfname:=LoginScreen").SwfEdit("swfname:=passwordBox").Set strUserPwd
	If NOT sysType = "DeskTop" and NOT strURL = "" then
	    SwfWindow("swfname:=LoginScreen").SwfLabel("swfname:=label3").DblClick 17,7
		SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001").Set strURL
		strMsg = ""
	Else
		strURL = SwfWindow("swfname:=LoginScreen").WinEdit("window id:=1001").GetROProperty("text")
		strMsg = ". The server name gets populated by default"
	End If
	SwfWindow("swfname:=LoginScreen").SwfButton("swfname:=okBtn").Click

	If SwfWindow("swfname:=LoginScreen").Dialog("text:=Encompass").Exist Then
		SwfWindow("swfname:=LoginScreen").Dialog("text:=Encompass").WinButton("text:=OK").Click
	End If

	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm"),120
	SwfWindow("swfname:=MainForm").Maximize
	
	If SwfWindow("swfname:=MainForm","index:=0").Exist(15) Then
		FRM_Logger_ReportPassEvent "Login to Encompass "&sysType, "Logged in as "&strUserName & strMsg & ". Server: " &strURL, null
	Else
		FRM_Logger_ReportFailEvent "Login to Encompass "&sysType, "Unable to Log in as "&strUserName & strMsg & ". Server: " &strURL, null
	End If
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Login.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Nav.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Nav BIZ_Nav
'List of functions:
'@code
'   Function BIZ_Nav_HierarchyTree(strTreeItem, strSubTreeItem)
'   Function BIZ_Nav_Loan_LogTab_SelectWorksheet(strWorksheetName)
'   Function BIZ_Nav_SelectLoanTab()
'   Function BIZ_Nav_SelectPipelineTab()
'   Function BIZ_Nav_SelectContactsTab()
'   Function BIZ_Nav_SelectTabControl(strTab)
'   Function BIZ_Nav_WaitForTabControlX(strTabName, intTimeoutSec) 
'   Function BIZ_Nav_WaitForTabControl(strTabName)
'   Function BIZ_Nav_Settings_Open(objTreeViewNode)
'   Function BIZ_Nav_Settings_Close()
'   Function BIZ_Nav_Settings_MilestoneTab(strTabName)
'   Function BIZ_Nav_Settings_Personas_LoanTab()
'   Function BIZ_Nav_Settings_OrganizationUsers()
'   Function BIZ_Nav_Settings_Personas()
'   Function BIZ_Nav_Settings_EDocumentManagement()
'   Function BIZ_Nav_eFoler_Open()
'   Function BIZ_Nav_eFoler_Close()
'	Function BIZ_Nav_Settings_MilestoneCompletion()
'   Function BIZ_Nav_SelectHomeTab()
'   Function BIZ_Nav_Settings_DataTemplates()
'	Function BIZ_Nav_OpenMenuItem(strMenuItem)
'	Function BIZ_Nav_Settings_eDisclosureFulfillment()
'	Function BIZ_Nav_Settings_eDisclosurePackages()
'	Function BIZ_Nav_Settings_LoanPrograms()
'	Function BIZ_Nav_Settings_ClosingCosts()
'   Function BIZ_Nav_Settings_LoanTemplateSets()
'   Function BIZ_Nav_eFolder_PreliminaryConditions()
'   Function BIZ_Nav_eFolder_PostClosingConditions()
'   Function BIZ_Nav_LogAlerts_SelectTab(strTab) 
'	Function BIZ_Nav_SelectDashboardTab()
'   Function BIZ_Nav_Pipeline_Forms_FormType(strLoanFolder, strFormName)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Open Encompass Settings screen. On the screen, use the hierarchy tree in the left panel to locate and open an option
'@code
'    BIZ_Nav_HierarchyTree "Secondary Setup", "Product and Pricing"
'@endcode
'@param strTreeItem - Settings tree view item
'@param strSubTreeItem - Settings sub item in the tree view

Function BIZ_Nav_HierarchyTree(strTreeItem, strSubTreeItem)

    FRM_Logger_ReportInfoEvent "Navigation", "Navigate to: "&strTreeItem& "/" &strSubTreeItem, Null 
    BIZ_Settings_ExpandTreeView strTreeItem
	Wait g_TinyWaitSmall
    BIZ_Settings_SelectInTreeView strTreeItem & ";" & strSubTreeItem
    
End Function



'This function is to navigate to loan log worksheets
'@code
'    BIZ_Nav_Loan_LogTab_SelectWorksheet(strWorksheetName)
'@endcode
'@param strWorksheetName - worksheet name

Function BIZ_Nav_Loan_LogTab_SelectWorksheet(strWorksheetName)

    FRM_Logger_ReportInfoEvent "Select Worksheet", "Worksheetsheet to select: "&strWorksheetName, Null
    Dim logTab
    GUI_SwfObject_ClickXY SwfWindow("swfname:=MainForm").SwfObject("swfname:=tabsLog"), 176, 14
    Set logTab = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLog")
    GUI_ClickElement_ByGetTextLocation logTab, strWorksheetName
    GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").SwfObject("swfname:=MilestoneWS").SwfLabel("swfname:=label1", "text:="&strWorksheetName&".*")
    
End Function



'This function is to select Log or Alert tab
'@code
'    BIZ_Nav_LogAlerts_SelectTab(strTab)
'@endcode
'@param strTab - worksheet name

Function BIZ_Nav_LogAlerts_SelectTab(strTab)

    FRM_Logger_ReportInfoEvent "Select Worksheet", "Tab to select: "&strTab, Null
    
    If instr(strTab,"Alert") > 0 Then
       x = 100
    ElseIf 	instr(strTab,"Log")	> 0 Then
	   x = 176
    End If 
    
    GUI_SwfObject_ClickXY SwfWindow("swfname:=MainForm").SwfObject("swfname:=tabsLog"), x, 14

End Function



'This function is used to select Loan tab
'@code
'    BIZ_Nav_SelectLoanTab
'@endcode

Function BIZ_Nav_SelectLoanTab()
    'FRM_Logger_ReportInfoEvent "Navigation", "Selecte Loan Tab", null 
    BIZ_Nav_SelectTabControl "Loan"
    GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl").SwfComboBox("swfname:=cboBorrowers")

End Function



'This function is used to select Pipeline tab
'@code
'    BIZ_Nav_SelectPipelineTab
'@endcode

Function BIZ_Nav_SelectPipelineTab()
    'FRM_Logger_ReportInfoEvent "Navigation", "Select Pipeline tab", null  
    BIZ_Nav_SelectTabControl "Pipeline"
    
End Function
    


'This function is used to select Contacts tab
'@code
'    BIZ_Nav_SelectContactsTab
'@endcode
    
Function BIZ_Nav_SelectContactsTab()
    'FRM_Logger_ReportInfoEvent "Navigation", "Select Contacts tab", null 
    BIZ_Nav_SelectTabControl "Contacts"
    '@TODO
    'SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfObject("swfname:=panel3").Exist(1) - True
    'SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfObject("swfname:=panel3").SwfObject("swfname:=panel1").Exist(1) - False
    GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=ContactMainForm").SwfObject("swfname:=panel3")

End Function

    

'This function is to select tab
'@code
'    BIZ_Nav_SelectTabControl(strTabName)
'@endcode
'@param strTabName - tab name

Function BIZ_Nav_SelectTabControl(strTabName)

  FRM_Logger_ReportInfoEvent "Navigation", "Select tab: " &strTabName, Null  
  intTabIndex = BIZ_Nav_WaitForTabControl(strTabName)
  
  If intTabIndex <> -1 Then
     SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl.*", "index:=0").Select strTabName  
  End If    
    
End Function



'This function is to wait for selected tab to appear
'@code
'    BIZ_Nav_WaitForTabControl(strTabName)
'@endcode
'@param strTabName - tab name

Function BIZ_Nav_WaitForTabControl(strTabName)
    BIZ_Nav_WaitForTabControl = BIZ_Nav_WaitForTabControlX(strTabName, g_Default_WaitTime)
End Function



'This function is to wait for selected tab to appear with limited time
'@code
'    BIZ_Nav_WaitForTabControlX(strTabName, intTimeoutSec) 
'@endcode
'@param strTabName - tab name
'@param intTimeoutSec - time to wait in seconds

Function BIZ_Nav_WaitForTabControlX(strTabName, intTimeoutSec) 
    
    Dim intElapsedTime
    intElapsedTime = 0
    BIZ_Nav_WaitForTabControlX = -1 
    Do
        wait 5
        intTabCount = SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl.*", "index:=0").GetItemsCount
        
        For intTabIndex = 0 To intTabCount - 1
            strTabItemLabel = SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl.*", "index:=0").GetItem(intTabIndex)
            'If found then select
            If strTabItemLabel = strTabName Then
               BIZ_Nav_WaitForTabControlX = intTabIndex
               Exit Do
            End If 
        Next
        
		intElapsedTime = intElapsedTime + 1
    Loop Until intElapsedTime > intTimeoutSec
    
        
End Function



'This function is to expand tree view
'@code
'    BIZ_Nav_Settings_Open(objTreeViewNode)
'@endcode
'@param sobjTreeViewNode - node to expand

Function BIZ_Nav_Settings_Open(objTreeViewNode)
    BIZ_Settings_ExpandTreeView(objTreeViewNode)
End Function



'This function is to close Settings window
'@code
'    BIZ_Nav_Settings_Close()
'@endcode

Function BIZ_Nav_Settings_Close()
    SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Close
End Function



'This function is to get to Personas Loan tab
'@code
'    BIZ_Nav_Settings_Personas_LoanTab()
'@endcode

Function BIZ_Nav_Settings_Personas_LoanTab()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Company/User Setup"
    End If
    
    BIZ_Nav_HierarchyTree "Company/User Setup", "Personas"
    GUI_Object_WaitTillVisible SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfListView("swfname:=lvPersona")
    GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTab("swfname:=tabControl1"), "Loan"
    GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoansPage")
    
End Function



'This function is to get to OrganizationUsers page
'@code
'    BIZ_Nav_Settings_OrganizationUsers()
'@endcode

Function BIZ_Nav_Settings_OrganizationUsers()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open  "Company/User Setup"
    End If
    
    BIZ_Nav_HierarchyTree "Company/User Setup", "Organization/Users"
End Function



'This function is to get to Milestones page
'@code
'    BIZ_Nav_Settings_MilestoneTab(strTabName)
'@endcode
'@param strTabName - Milestone tab name

Function BIZ_Nav_Settings_MilestoneTab(strTabName)
    '======== Go to  Company/User Setup -> Milestones========
    BIZ_Nav_HierarchyTree "Company/User Setup", "Milestones"
    
    If Not UTIL_String_IsEmpty(strTabName) Then
       SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTab("swfname:=tabMilestones").Select strTabName     
    End If  
End Function



'This function is used to go to Personas page
'@code
'    BIZ_Nav_Settings_Personas()
'@endcode

Function BIZ_Nav_Settings_Personas()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Company/User Setup"
    End If
    
    BIZ_Nav_HierarchyTree "Company/User Setup", "Personas"
End Function



'This function is used to go to E-Document Management page
'@code
'    BIZ_Nav_Settings_EDocumentManagement()
'@endcode

Function BIZ_Nav_Settings_EDocumentManagement()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Additional Services"
    End If
    
    BIZ_Nav_HierarchyTree "Additional Services", "E-Document Management"
End Function



'This function is to open eFolder window
'@code
'    BIZ_Nav_eFoler_Open()
'@endcode
'@param 

Function BIZ_Nav_eFoler_Open()

  FRM_Logger_ReportInfoEvent "Navigation", "Open eFolder window", Null  
  GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl.*", "index:=0")
  GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=eFolderBtn","index:=0")
    
End Function



'This function is to close eFolder window
'@code
'    BIZ_Nav_eFoler_Close()
'@endcode
'@param 

Function BIZ_Nav_eFoler_Close()

  FRM_Logger_ReportInfoEvent "Navigation", "Close eFolder window", Null  
  wait g_Default_WaitTime
  SwfWindow("swfname:=eFolderDialog").Activate
  SwfWindow("swfname:=eFolderDialog").Close
  
End Function



'This function is used to go to Business Rules->Milestone Completion page
'@code
'    BIZ_Nav_Settings_MilestoneCompletion()
'@endcode
'@param 

Function BIZ_Nav_Settings_MilestoneCompletion()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Business Rules"
    End If
    
    BIZ_Nav_HierarchyTree "Business Rules", "Milestone Completion"
End Function



'@	Added by Sameer Gupta as of 12/28/2015
'This function is used to select Home tab
'@code
'    BIZ_Nav_SelectHomeTab
'@endcode

Function BIZ_Nav_SelectHomeTab()
    'FRM_Logger_ReportInfoEvent "Navigation", "Selecte Home Tab", null 
    BIZ_Nav_SelectTabControl "Home"
    GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnHome")

End Function



'This function is used to go to Business Rules->Milestone Completion page
'@code
'    BIZ_Nav_Settings_DataTemplates()
'@endcode
'@param 

Function BIZ_Nav_Settings_DataTemplates()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Loan Templates"
    End If
    
    BIZ_Nav_HierarchyTree "Loan Templates", "Data Templates"
End Function



'Added by Sameer Gupta as of 30th Dec 2015
'This function is used to go to Menu -> Item
'@code
'    BIZ_Nav_OpenMenuItem(strMenuItem)
'@endcode
'@param strMenuItem - Menu Item

Function BIZ_Nav_OpenMenuItem(strMenuItem)

	Dim strMenuHeader, strItem
	Set objMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
	strItem = split(strMenuItem,";")
	strMenuHeader = Trim(strItem(0))
	objMenu.Highlight
	objMenu.ShowDropdown strMenuHeader
	Wait g_TinyWaitSmall
	objMenu.Highlight
    objMenu.Select strMenuItem

End Function



'This function is used to go to Additional Services->eDisclosure Fulfillment.
'@code
'    BIZ_Nav_Settings_eDisclosureFulfillment()
'@endcode

Function BIZ_Nav_Settings_eDisclosureFulfillment()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Additional Services"
    End If
    
    BIZ_Nav_HierarchyTree "Additional Services", "eDisclosure Fulfillment"
End Function



'This function is used to go to Docs Setup->eDisclosure Packages.
'@code
'    BIZ_Nav_Settings_eDisclosurePackages()
'@endcode

Function BIZ_Nav_Settings_eDisclosurePackages()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Docs Setup"
    End If
    
    BIZ_Nav_HierarchyTree "Docs Setup", "eDisclosure Packages"
End Function



'This function is used to go to Loan Templates->Loan Programs page
'@code
'    BIZ_Nav_Settings_LoanPrograms()
'@endcode
'@param

Function BIZ_Nav_Settings_LoanPrograms()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Loan Templates"
    End If
    
    BIZ_Nav_HierarchyTree "Loan Templates", "Loan Programs"
    End Function



'This function is used to go to Settings->Loan Templates->Closing Costs page
'@code
'    BIZ_Nav_Settings_ClosingCosts()
'@endcode
'@param

Function BIZ_Nav_Settings_ClosingCosts()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Loan Templates"
    End If
    
    BIZ_Nav_HierarchyTree "Loan Templates", "Closing Costs"
End Function



'This function is used to go to Settings->Loan Templates->Loan Template Sets
'@code
'    BIZ_Nav_Settings_LoanTemplateSets()
'@endcode
'@param

Function BIZ_Nav_Settings_LoanTemplateSets()

    If Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Exist(2) Then
       BIZ_Nav_Settings_Open "Loan Templates"
    End If
    
    BIZ_Nav_HierarchyTree "Loan Templates", "Loan Template Sets"
    
End Function



'This function is used to go to eFolder->Preliminary Conditions tab
'@code
'    BIZ_Nav_eFolder_PreliminaryConditions()
'@endcode
'@param

Function BIZ_Nav_eFolder_PreliminaryConditions()

    FRM_Logger_ReportInfoEvent "Navigation", "Navigation to eFoler -> Preliminary Condtions Tab", Null	
	BIZ_Nav_eFoler_Open()
	GUI_SwfTab_Click SwfWindow("swfname:=eFolderDialog").SwfTab("swfname:=tabMain"),"Preliminary Conditions"

End Function



'This function is used to go to eFolder->Post Closing Conditions tab
'@code
'    BIZ_Nav_eFolder_PostClosingConditions()
'@endcode
'@param

Function BIZ_Nav_eFolder_PostClosingConditions()
	FRM_Logger_ReportInfoEvent "Navigation", "Navigation to eFoler -> Post-Closing Condtions Tab", Null	
	
	If Not GUI_Object_isExist(SwfWindow("swfname:=eFolderDialog")) Then
		BIZ_Nav_eFoler_Open()
	End If
	
	GUI_SwfTab_Click SwfWindow("swfname:=eFolderDialog").SwfTab("swfname:=tabMain"),"Post-Closing Conditions"
End Function



'This function is used to select Dashboard tab
'@code
'    BIZ_Nav_SelectDashboardTab()
'@endcode

Function BIZ_Nav_SelectDashboardTab()

	BIZ_Nav_SelectTabControl "Dashboard"
    
End Function



'This function is used to open the Loanform
'@code
'    BIZ_Nav_Pipeline_Forms_FormType(strLoanFolder, strFormName)
'@endcode
'@param strLoanFolder - type of loan folder to select
'@param strFormName - type of loan form to select

 Function BIZ_Nav_Pipeline_Forms_FormType(strLoanFolder, strFormName)
   
    FRM_Logger_ReportInfoEvent "BIZ_Nav_Pipeline_Forms_FormType", "Navigation to Pipeline>>Forms>FormType>> '"&strFormName&"'", Null
	
	Dim objMainScreen
	Set objMainScreen=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	If Not UTIL_String_IsEmpty(strLoanFolder) Then
	   BIZ_Pipeline_SelectLoanFolder strLoanFolder
	End If

	BIZ_Loan_AddNewBlankLoan()

	If Not UTIL_String_IsEmpty(strFormName) Then
	   BIZ_Forms_Open strFormName
	End If 
	
	Set objMainScreen = Nothing
	
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Nav.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Pipeline.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Pipeline BIZ_Pipeline
'List of functions:
'@code
'	BIZ_Pipeline_SelectPipelineViewAndLoanFolder(strPipelineView, strLoanFolder)
'	BIZ_Pipeline_SelectLoanFolder(strLoanFolder)
'   Function BIZ_Pipeline_GetNumberOfLoansInPipeline()
'   Function BIZ_Pipeline_MoveToFolder(strWhereToMove)
'   Function BIZ_Pipeline_ImportFNMAFile(strFilePath,strFolder)
'   Function BIZ_Pipeline_TransferLoan (ClientIDTransferTo,UserID,strSbj,strMsg)
'   Function BIZ_Pipeline_DuplicateLoanBasedOnLoanNumber(strLoanNumber)
'   Function BIZ_Pipeline_DuplicateLoan(strWhereToDuplicate,  strDuplType, strTemplateToUse,isOpen)
'	Function BIZ_Pipeline_ExportFNMAFile(strSaveDirPath,strSaveFileName)
'	Function BIZ_Pipeline_ConvertPath(strDirPath)
'   Function BIZ_Pipeline_OpenCustomizeColumnsDialog()
'   Function BIZ_Pipeline_SelectMailboxEmail(strSearchColName,strSearchText)
'	Function BIZ_Pipeline_ClickImportButtonOnMailBoxDialog(strPipeline)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to select Encompass Loan Folder
'@code
'    BIZ_Pipeline_SelectLoanFolder(strLoanFolder)
'@endcode
'@param strLoanFolder - loan folder name to select

Function BIZ_Pipeline_SelectLoanFolder(strLoanFolder)

	BIZ_Pipeline_SelectPipelineViewAndLoanFolder "", strLoanFolder
	
End Function



'This function is used to select pipeline view and Loan Folder
'@code
'    BIZ_Pipeline_SelectPipelineViewAndLoanFolder(strPipelineView, strLoanFolder)
'@endcode
'@param strPipelineView - pipeline name to select
'@param strLoanFolder - loan folder name to select

Function BIZ_Pipeline_SelectPipelineViewAndLoanFolder(strPipelineView, strLoanFolder)

    FRM_Logger_ReportInfoEvent "Select Pipeline and Loan Folder", "Selected: "&strPipelineView& "/" &strLoanFolder, Null 

    '------Navigate to Pipeline-------
    BIZ_Nav_SelectPipelineTab()
       
	If Not UTIL_String_IsEmpty(strPipelineView) Then
		   strActualPipelineView = trim(SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboView").GetROProperty("selection"))
		   
	   If trim(strPipelineView) <> strActualPipelineView Then
		  SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboView").Select trim(strPipelineView)
		  Wait g_LongWaitLarge
	   End If
	   
	End If
	
	If Not UTIL_String_IsEmpty(strLoanFolder) Then
		   strActualLoanFolder = trim(SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboFolder").GetROProperty("selection"))
		   
	   If trim(strLoanFolder) <> strActualLoanFolder Then
		  AllItemText =  SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboFolder").GetContent
		  
		  If(InStr(AllItemText, trim(strLoanFolder)) > 0) Then 
			 SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboFolder").Select trim(strLoanFolder)
		  Else
			 FRM_Logger_ReportFailEvent "Verify Folder Exists in Pipeline Tab", "Specified folder is not present in Loan Folder List", Null
		  End If
		  
		  Wait g_LongWaitLarge
		End If
		
	End If	
	If(InStr(strLoanFolder, "All Folders") > 0) Then 
		GUI_Dialog_Encompass_OKX 60, ""
	End If
End Function



'This function is used to import fannie mae 3x in pipeline
'@code
'    BIZ_Pipeline_ImportFannieMae3x(strLoanFolder)
'@endcode
'@param strLoanDir - loan import dir
'@param strLoanFile - loan import file
'@param strLoanFolder - loan folder name to select

Function BIZ_Pipeline_ImportFannieMae3x(strImportDir, strImportFile, strLoanFolder)

    FRM_Logger_ReportInfoEvent "Import Fannie Mae 3x in Pipeline", "Import fannie mae 3x to loan folder" & strLoanFolder, Null 

    BIZ_Nav_SelectPipelineTab()
    Dim objMianMenu
    Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Pipeline"		
    GUI_SwfToolbar_Select objMianMenu, "Import..."
    
    Dim objImportWindow
    Set objImportWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ImportMain")
    GUI_SwfRadioButton_Click objImportWindow.SwfRadioButton("swfname:=rbFannieMae")
    GUI_SwfButton_Click objImportWindow.SwfButton("swfname:=btnContinue")
    
    Dim objFannieMaeWindow
    Set objFannieMaeWindow = objImportWindow.SwfWindow("swfname:=ImportFannie")
    GUI_SwfList_Activate objFannieMaeWindow.SwfList("swfname:=dirListBox"), strImportDir
    GUI_SwfList_Select objFannieMaeWindow.SwfList("swfname:=fileListBox"), strImportFile
    GUI_SwfComboBox_Select objFannieMaeWindow.SwfComboBox("swfname:=folderCombo"), strLoanFolder
    GUI_SwfButton_Click objFannieMaeWindow.SwfButton("swfname:=importBtn")
    Do Until objFannieMaeWindow.SwfWindow("swfname:=ImportProgress").Dialog("index:=0").Exist
    Loop
    GUI_WinButton_Click objFannieMaeWindow.SwfWindow("swfname:=ImportProgress").Dialog("index:=0").WinButton("text:=OK")
       
    Set objImportWindow = Nothing
    Set objFannieMaeWindow = Nothing
    Set objMianMenu = Nothing
    
End Function



'This function is to get number of loans in pipeline 
'@code
'    BIZ_Pipeline_GetNumberOfLoansInPipeline()
'@endcode 

Function BIZ_Pipeline_GetNumberOfLoansInPipeline()
    BIZ_Pipeline_GetNumberOfLoansInPipeline = NULL
    BIZ_Nav_SelectPipelineTab
	Set objPanel = SwfWindow("swfname:=MainForm").SwfObject("swfname:=mainPanel")
	
	If objPanel.SwfLabel("swfname:=lblNumberOfItems", "index:=0").Exist(10) Then
	   BIZ_Pipeline_GetNumberOfLoansInPipeline = _
	   GUI_Object_GetPropertyValue(objPanel.SwfLabel("swfname:=lblNumberOfItems", "index:=0"),"text") 		
	End If	
	
End Function


'This function is for move loan to certain folder 
'@code
'    BIZ_Pipeline_MoveToFolder "_Val_Folder"        
'@endcode
'@param strWhereToMove - which folder to move
	
Function BIZ_Pipeline_MoveToFolder(strWhereToMove)

    FRM_Logger_ReportInfoEvent "Move To Folder", "Move loan to folder", Null
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnMove", "index:=0")
    Dim objMoveWindow
    Set objMoveWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MoveDialog","index:=0")
    Wait 2
	GUI_SwfComboBox_Select objMoveWindow.SwfComboBox("swfname:=cboFolder","index:=0"),strWhereToMove
	Wait 2
	GUI_SwfButton_Click objMoveWindow.SwfButton("swfname:=btnOK","index:=0")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ConfirmDialog").SwfButton("swfname:=yesButton")
    
    Set objMoveWindow = Nothing
End Function



'This function is to import FNMA loam 
'@code
'    BIZ_Pipeline_ImporFNMAFile (strFilePath)
'@endcode
'@param strFilePath - fnma file location

Function BIZ_Pipeline_ImportFNMAFile(strFilePath,strFolder)

    FRM_Logger_ReportInfoEvent "Import Fannie Mae 3x in Pipeline", "Import fannie mae 3x to loan folder" & strFolder, Null 
    BIZ_Nav_SelectPipelineTab()
    BIZ_Nav_OpenMenuItem "Pipeline;Import..."
    
    If SwfWindow("swfname:=ImportMain").Exist(10) Then
       SwfWindow("swfname:=ImportMain").SwfRadioButton("swfname:=rbFannieMae").Set
       SwfWindow("swfname:=ImportMain").SwfButton("swfname:=btnContinue").Click	
    End If
    
	GUI_List_SelectTargetFileInFileListBox strFilePath
	SwfWindow("swfname:=ImportFannie").SwfComboBox("swfname:=folderCombo").Select strFolder
	SwfWindow("swfname:=ImportFannie").SwfButton("swfname:=importBtn").Click
	Wait 100
	'Import completed
	
	If  SwfWindow("swfname:=ImportProgress").Dialog("index:=0").Static("regexpwndclass:=Static","text:=.*out of.*","index:=0").Exist(30) Then
		SwfWindow("swfname:=ImportProgress").Dialog("index:=0").WinButton("text:=OK", "index:=0").Click
		FRM_Logger_ReportPassEvent "Import FNMA file","FNMA File imported ", Null 
	ElseIf Dialog("index:=0").Static("regexpwndclass:=Static","text:=.*out of.*","index:=0").Exist(10) Then
	    Dialog("index:=0").WinButton("text:=OK", "index:=0").Click
	    FRM_Logger_ReportPassEvent "Import FNMA file","FNMA File imported ", Null 
	ElseIf SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ImportMain").SwfWindow("swfname:=ImportFannie").SwfWindow("swfname:=ImportProgress").Dialog("index:=0").Exist(10) Then
	    SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ImportMain").SwfWindow("swfname:=ImportFannie").SwfWindow("swfname:=ImportProgress").Dialog("index:=0").WinButton("text:=&Yes").Click
	    FRM_Logger_ReportPassEvent "Import FNMA file","FNMA File imported ", Null
	Else
        FRM_Logger_ReportFailEvent "Import FNMA file","FNMA File NOT imported ", Null   	
	End If
	
End Function   



'This function is for transfer loan 
'@code
'    BIZ_Pipeline_TransferLoan (ClientIDTransferTo,UserID,strSbj,strMsg)
'@endcode
'@param ClientIDTransferTo - Client Id for the environment to transfer
'@param UserID  - User Id
'@param strSbj - subject
'@param strMsg -  text to send

Function BIZ_Pipeline_TransferLoan (ClientIDTransferTo,UserID,strSbj,strMsg)	

    FRM_Logger_ReportInfoEvent "Transfer Loan","Start to transfer loan using Client Id: " & ClientIDTransferTo , Null	  
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=flowLayoutPanel1").SwfButton("swfname:=btnTransfer","index:=0")
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TransferDialog").SwfEdit("swfname:=clientTxt","index:=0"),ClientIDTransferTo 
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TransferDialog").SwfEdit("swfname:=userTxt","index:=0"),UserID
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TransferDialog").SwfEdit("swfname:=subjectTxt","index:=0"),strSbj
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TransferDialog").SwfEditor("swfname:=messageTxt","index:=0").Type strMsg
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TransferDialog").SwfButton("swfname:=okBtn","index:=0")
	
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TransferDialog").Dialog("index:=0").WinButton("text:=OK","index:=0").Exist(60) Then
	   strMsgBox = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TransferDialog").Dialog("index:=0").Static("index:=1").GetROProperty("text")			
	End If
	
	If instr( strMsgBox, "The loan file(s) was successfully sent to branch") > 0 then
	   FRM_Logger_ReportPassEvent "Transfer Loan","Transfer Loan performed and message displayed: " & strMsgBox , Null	 
	Else
	   FRM_Logger_ReportFailEvent "Transfer Loan","Transfer Loan failed." , Null
	End If
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TransferDialog").Dialog("index:=0").WinButton("text:=OK","index:=0")
	FRM_Logger_ReportInfoEvent "Transfer Loan","Transfer Loan performed to Client " & ClientIDTransferTo , Null	
End Function



'This function is for Find and Highlite/Select loan in Pipeline 
'@code
'    BIZ_Loan_DuplicateLoan "_Val_Folder","Duplicate", ""  ' "New Loan Duplication Template (16)"
'    BIZ_Loan_DuplicateLoan "_Val_Folder","Duplicate", "New Loan Duplication Template (16)"
'    BIZ_Loan_DuplicateLoan "","Duplicate", ""        
'@endcode
'@param strWhereToDuplicate - where (folder for a new loan)to put duplicated loan. If empty then same folder
'@param strDuplType - how to duplicate. Options are: Duplicate; DuplicateAsSecond; Piggyback
'@param strTemplateToUse - template to use for a new loan. If empty then no template to use
'@param isOpen - string "Yes" or "No" to open the loan after duplicatie
	
Function BIZ_Pipeline_DuplicateLoan(strWhereToDuplicate,  strDuplType, strTemplateToUse,isOpen)

    FRM_Logger_ReportInfoEvent "Duplicate Loan", "Duplicating loan", Null
	
	Set objDuplicateWindow = SwfWindow("swfname:=MainForm").SwfWindow("text:=Duplicate Loan","index:=0")
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnDuplicate", "index:=0")
	GUI_Object_WaitTillVisible objDuplicateWindow.SwfComboBox("swfname:=cboFolder","index:=0")
	objDuplicateWindow.SwfRadioButton("swfname:=rad" & strDuplType).Set
	
	If NOT strWhereToDuplicate = "" Then
	       GUI_SwfComboBox_Select objDuplicateWindow.SwfComboBox("swfname:=cboFolder","index:=0"),strWhereToDuplicate
	End If
	
	If NOT strTemplateToUse = "" Then
	
	    If objDuplicateWindow.SwfComboBox("swfname:=cboTemplates","index:=0").GetROProperty("enabled") Then
		   GUI_SwfComboBox_Select objDuplicateWindow.SwfComboBox("swfname:=cboTemplates","index:=0"),strTemplateToUse
	    End If
	    
	End If   
	
	GUI_SwfButton_Click objDuplicateWindow.SwfButton("swfname:=btnOK","index:=0")
	isDuplicated = False
	
	Set objDialog = SwfWindow("swfname:=MainForm").Dialog("index:=0")
'	Do
		If objDialog.Exist(30) Then
		
			If NOT isDuplicated Then
			
				If objDialog.Static("regexpwndtitle:=The loan has been successfully duplicated.*","index:=0").Exist(5) Then
					isDuplicated = True
					GUI_WinButton_Click objDialog.WinButton("text:=&"&isOpen,"index:=0")
				End If
				
			End if
			
	     	If objDialog.Static("regexpwndtitle:=The status of the currently open loan has changed.*","index:=0").Exist(2) Then
	     		isDuplicated = True
				GUI_WinButton_Click objDialog.WinButton("text:=&No","index:=0")
		    End If
			 
		End If
		
		GUI_Dialog_Encompass_No "Do you want to save the changes to the current loan?"
	    GUI_Dialog_Encompass_OK ""
	  	intCount = intCount + 1
	  	
	  	If isOpen = "Yes"Then
	  	
	  		If SwfWindow("swfname:=MainForm").SwfObject("swfname:=pnlHeader").SwfComboBox("swfname:=cboBorrowers","index:=0").Exist(1) Then
	  		   SwfWindow("swfname:=MainForm").SwfObject("swfname:=pnlHeader").SwfComboBox("swfname:=cboBorrowers","index:=0").Click	
	  		   
'	  		   If SwfWindow("swfname:=MainForm").SwfObject("swfname:=pnlHeader").SwfComboBox("swfname:=cboBorrowers","index:=0").GetROproperty("focused") or intCount > 60 then
'				  Exit Do
'			   End If
			   
	  		End If
	  	Else
			SwfWindow("swfname:=MainForm").SwfObject("swfname:=navPipeline").SwfComboBox("swfname:=cboPageList","index:=0").Click
			
'        	If SwfWindow("swfname:=MainForm").SwfObject("swfname:=navPipeline").SwfComboBox("swfname:=cboPageList","index:=0").GetROproperty("focused") or intCount > 60 then
'			   Exit Do
'			End If
			
		End If 
'	Loop
		
	If isDuplicated Then
		FRM_Logger_ReportPassEvent "Duplicate Loan", "Successfully Duplicated Loan", Null
	Else
		FRM_Logger_ReportFailEvent "Duplicate Loan", "Loan is not Duplicated", Null 
	End If
	
End Function



'This function is for Duplicate Loan based on provided loan number 
'@code
'    BIZ_Loan_DuplicateLoanBasedOnLoanNumber "456549999"       
'@endcode
'@param strLoanNumber - provided loan number

Function BIZ_Pipeline_DuplicateLoanBasedOnLoanNumber(strLoanNumber)

    FRM_Logger_ReportInfoEvent "Duplicate Loan", "Loan number="&strLoanNumber, Null
	BIZ_Loan_SelectLoanByColFieldValueInPiplineView "Loan Number",strLoanNumber
    BIZ_Pipeline_DuplicateLoan "","Duplicate", "","No" 
	
End Function



'This function is for converting path string to the string compatible for exporting FNMA file used in BIZ_Pipeline_ExportFNMAFile
'@code
'    BIZ_Pipeline_ConvertPath("C:\Automation\Encompass")     
'@endcode
'@param strDirPath - path string

Function BIZ_Pipeline_ConvertPath(strDirPath)
	strDirPath = Replace(strDirPath,"C:","Desktop;Computer;Local Disk (C:)")
	strDirPath = Replace(strDirPath,"\",";")
	BIZ_Pipeline_ConvertPath = strDirPath
End Function



'This function to export FNMA file formatted
'@code
'    BIZ_Pipeline_ExportFNMAFile(strSaveDirPath,strSaveFileName)  
'@endcode
'@param strSaveDirPath - directory where to save. Can be like "C:\Automation\Encompass" or like "Desktop;Computer;Local Disk (C:);Automation;QTP;Encompass"
'@param strSaveFileName - to save with file name. No extention nided. Ex. "myfile"

Function BIZ_Pipeline_ExportFNMAFile(strSaveDirPath,strSaveFileName)

	 If instr(strSaveDirPath,";") = 0 Then
	    strLocation = BIZ_Pipeline_ConvertPath(strSaveDirPath)	
	 Else
	    strLocation =  strSaveDirPath
	 End If
	  
	 arrLocation = split(strLocation,";")
	 FRM_Logger_ReportInfoEvent "Export Fannie Mae formatted file", "Export Fannie Mae formatted file " & strSaveFileName & " to a directory " & strLocation, Null
	 BIZ_Nav_OpenMenuItem "Pipeline;Investor Services;Export Fannie Mae formatted file"
	 Set objExpotToLocal = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ExportToLocal")
	 GUI_SwfObject_Click objExpotToLocal.SwfObject("swfname:=btnFolder","index:=0")
	 
	 For n = 0 To Ubound(arrLocation)
	     If n = 0 Then
	        strCurrLocation = arrLocation(0)		   	  
	     Else
            strCurrLocation = strCurrLocation & ";" & arrLocation(n)
		 End If
	     wait 1
		 objExpotToLocal.Dialog("index:=0").WinTreeView("text:=Tree View").Activate strCurrLocation	
	 Next
	 
	 GUI_WinButton_Click objExpotToLocal.Dialog("index:=0").WinButton("text:=OK","index:=0")
	 GUI_SwfEdit_Set objExpotToLocal.SwfEdit("swfname:=txtFileName"),strSaveFileName
	 GUI_SwfButton_Click objExpotToLocal.SwfButton("swfname:=btnOK")
	 k = 0
		Do
			k = k + 1
			If k > 50 Then
			     Exit Do
			End If
			
			If SwfWindow("swfname:=ValidationDialog").SwfButton("swfname:=continueBtn").Exist(1) Then
				SwfWindow("swfname:=ValidationDialog").SwfButton("swfname:=continueBtn").Click
			End If
			
			If SwfWindow("swfname:=MainForm").Dialog("index:=0").Static("text:=File exported. The file.*").Exist(1) Then
				FRM_Logger_ReportPassEvent "Export Fannie Mae formatted file", "Exported file " & strSaveFileName & ".fnm", Null
				SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK").Click
				Exit Do
			ElseIf SwfWindow("swfname:=MainForm").Dialog("index:=0").Static("text:=","index:=0").Exist(1) Then
				FRM_Logger_ReportFailEvent "Export Fannie Mae formatted file", "Failed to export file: " & strSaveFileName & " " & _
				SwfWindow("swfname:=MainForm").Dialog("index:=0").Static("index:=1").GetROProperty("text"), Null
				SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK").Click
				Exit Do
			End If
		Loop
End Function
	
	

'This function open Castomize Columns window
'@code
'    BIZ_Pipeline_OpenCustomizeColumnsDialog()
'@endcode
	
Function BIZ_Pipeline_OpenCustomizeColumnsDialog()

   FRM_Logger_ReportInfoEvent "Customize Columns", "Open Customize Columns Dialog" , Null 
    'Open Customize Columns Dialog
    Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	objLoanList.Click 300, 10, 1
	SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Customize Columns..."
	Set objLoanList = Nothing
	
End Function



'This function to Open Loan Mail Box and find and select needed e-mail using text in any column
'@code
'    BIZ_Pipeline_SelectMailboxEmail "Borrower Name","Andy America" 
'@endcode
'@param strSearchColName - column name where text resides
'@param strSearchText - actual text to find

Function BIZ_Pipeline_SelectMailboxEmail(strSearchColName,strSearchText)
        FRM_Logger_ReportInfoEvent "Loan MailBox", "Select needed e-mail in Loan Mailbox using Column: " &strSearchColName & " and text : "& strSearchText , Null
        
		If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=btnLoanMailbox").Exist(10) Then
		   SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=btnLoanMailbox").Click
		End If
		
		Set objLoanMailWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanMailboxDialog").Page("index:=0")
		Set objLoanMailbox = objLoanMailWindow.WebTable("column names:=.*Borrower Name;Subject.*","index:=0")
		'wait until e-mails are loaded to box
		Do
		    intMails = cint(objLoanMailWindow.WebElement("html id:=nummsgs1","index:=0").GetROProperty("innertext"))
		    
		    If intMails > 0 Then
		    	Exit Do	
		    End If
			wait 5	
		Loop
		'select range of e-mails to display
		objLoanMailWindow.WebList("name:=MessSelRange","index:=0").Select "1 - 25"
		'count how many times need to click Next with this range
		intCountSect = intMails \ 25
		
		If intMails mod 25  <> 0 Then
			intCountSect = intCountSect + 1
		End If
		
		
		isFound = false
		For z = 1 To intCountSect
		
			If objLoanMailbox.Exist(30) Then
			   'wait until e-mails are loaded in the table
			   Do 
				   intRows = objLoanMailbox.RowCount
				   If intRows > 2 Then
				   	  Exit Do 
				   End If
				   wait 1
			   Loop
			   
			   'Find column to use for search
			   intColumns = objLoanMailbox.ColumnCount(1)
			   For k = 1 To intColumns
			   	   If trim(objLoanMailbox.GetCellData(1,k)) = trim(strSearchColName) Then
			   	   	  Exit For
			   	   End If
			   Next
			   For i = 2 To intRows
			     strSellText = trim(objLoanMailbox.GetCellData(i,k))
			   	 If instr(strSellText,strSearchText) > 0 Then
			   	 	objLoanMailbox.WebElement("innertext:="& strSellText,"index:=0").Click
			   	 	isFound = true
			   	 	Exit For
			   	 End If 
			   Next  'i 
			End If
				If isFound = true Then
				   Exit For	
				End If
				objLoanMailWindow.WebElement("html id:=nextPageTD", "index:=0").Click
		Next 'Z
		
        If isFound Then
           FRM_Logger_ReportPassEvent "E-Mail Found in Loan Mail Box", "Search Column: "&strSearchColName & " and text : "& strSearchText, Null 	
        Else
           FRM_Logger_ReportFailEvent "E-Mail is NOT Found in Loan Mail Box", "Search Column: "&strSearchColName & " and text : "& strSearchText, Null 	
        End If
        
		If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanMailboxDialog").Page("index:=0").Link("text:=here","index:=0").Exist(10) Then
		   SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanMailboxDialog").Page("index:=0").Link("text:=here","index:=0").Click	
		End If
		
End Function



'This function to click Import on mailBox dialog
'@code
'    BIZ_Pipeline_ClickImportButtonOnMailBoxDialog(strPipeline) 
'@endcode
'@param strPipeline - pipeline where to import

Function BIZ_Pipeline_ClickImportButtonOnMailBoxDialog(strPipeline)
    FRM_Logger_ReportInfoEvent "Loan Mail Box -Import", "Import loan into pipeline: "&strPipeline, Null  
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanMailboxDialog").SwfWindow("swfname:=Import.*").SwfComboBox("swfname:=folderCombo","index:=0").Select strPipeline
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanMailboxDialog").SwfWindow("swfname:=ImportWeb").SwfButton("swfname:=importBtn","index:=0").Click
	GUI_Object_WaitTillExistX  SwfWindow("swfname:=ImportWeb").Dialog("index:=0").Static("regexpwndtitle:=.*Your web application has been successfully imported.*"),120
	GUI_DialogObject_Encompass_Click SwfWindow("swfname:=ImportWeb").Dialog("index:=0"), 5, "Your web application has been successfully imported", "Yes"
	GUI_Object_WaitTillExistX  SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"), 120
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Pipeline.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Reports.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Reports BIZ_Reports
'List of functions:
'@code
'	Function BIZ_Reports_SelectFolder(strFolderName)
'   Function BIZ_Reports_AddNew(strReportName)
'   Function BIZ_Reports_DeleteReport(strReportName) 
'	Function BIZ_Reports_AddField(strFieldName)
'   Function BIZ_Reports_AddExcelCalculationField(strFieldName)
'   Function BIZ_Reports_AddFilter(strField,strOperator,strValue)
'   Function BIZ_Reports_Generate()
'	Function BIZ_Reports_GenerateNCReport(FundingEntityDateField, OriginatingEntityDateField, strFolderName)
'	Function BIZ_Reports_CreateNewReport(strRowID, strFolderType)
'	Function BIZ_Reports_DeleteReport(strReportName, strFolderType)
'	Function BIZ_Personas_TradesContactsDashboardReports_Reports_AccessRight(strPersonaName, arrReports,boolToBeChecked)
'	Function BIZ_Report_UserGroups_ResourcesReportsDelete(strRowID)
'	Function BIZ_Reports_CreateNewFolder(strRowID, strFolderType)
'	Function BIZ_Reports_CutPasteReport(strRowID, strReportName, strSourceFolder, strDestFolder)
'	Function BIZ_Reports_DuplicateReport(strRowID, strReportName, strFolderType)
'	Function BIZ_Reports_CopyPasteReport(strReportName, strSourceFolder)
'	Function BIZ_Reports_ReportTab(strRowID, strReportName)
'	Function BIZ_Reports_MilestonesTab(strMilestoneType, strSelectLoan)
'	Function BIZ_Reports_FoldersTab(strLoanFolderType, strLoanFolderName)
'	Function BIZ_Reports_FilterTab_Add(strField, strOperator, strValue, strMinValue, strMaxValue)
'	Function BIZ_Reports_MoveUp(strFieldToMoveUp)
'	Function BIZ_Reports_MoveDown(strFieldToMoveDown)
'	Function BIZ_Reports_ValidateField(strFieldName)
'	Function BIZ_Reports_AddReportOptions(strDate, strOperator, strLoanTeamMember, strUserID)
'
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


'This function is used to select a folder under the Folders tab
'@code
'    BIZ_Reports_SelectFolder(strFolderName)
'@endcode
'@param strFolderName - name of the folder to be selected

Function BIZ_Reports_SelectFolder(strFolderName)

    Dim objContainer
	Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	GUI_SwfTab_Click objContainer.SwfObject("swfname:=ReportMainControl").SwfTab("swfname:=reportTab"),"Folders"
	GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfRadioButton("swfname:=radSelectedFolders")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=deselectAllBtn")
	GUI_List_ClickCheckbox SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvFolders"), Null,strFolderName,0, True, False, "Single", True

    Set objContainer = Nothing
	
End Function



'This function is used to add new report
'@code
'    BIZ_Reports_AddNew(strReportName)
'@endcode
'@param strReportName - name you want to give to report

Function BIZ_Reports_AddNew(strReportName)

	FRM_Logger_ReportInfoEvent "Add New Report", "Report to be added: " & strReportName, Null
	
	Dim objContainer
	Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=gcListView").SwfObject("swfname:=btnAdd")
	Services.ThinkTime 1
	GUI_SwfEdit_Set objContainer.SwfObject("swfname:=gvDirectory").SwfEdit("text:=New Report.*","index:=0"),strReportName
	Set WshShell = CreateObject("WScript.Shell")
	WshShell.SendKeys "{ENTER}"
	
	Set objContainer = Nothing
	Set WshShell = Nothing
	
End Function



'This function is used to Generate NMLS Call Report
'@code
'    BIZ_Report_GenerateNMLSCallReport(strRowID,strLoanFolder,strNMLSVer,strFileName)
'@endcode
'@Param strRowID  points row in excel 
'@Param strLoanFolder loan folder name
'@Param strNMLSVer  report version 
'@Param strFileName name of report file

Function BIZ_Report_GenerateNMLSCallReport(strRowID,strLoanFolder,strNMLSVer,strFileName)
    
    FRM_Logger_ReportInfoEvent "NMLS Call Report", "Generate NMLS Call Report For "&strNMLSVer, Null
	Dim objNMLSReportForm,objData,strDate,intMonth
	Set objNMLSReportForm	=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NMLSReportForm")
	Set objData 			= 	FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strRowID)  
	
	UTIL_Win_CloseExcel()
	BIZ_Nav_OpenMenuItem "Pipeline;Compliance Services;Generate NMLS Call Report"
	
	strDate		=	Cdate(FRM_DS_GetValue(objData, "ApplicationDate"))
    intMonth 	= 	Month(strDate)
	
	GUI_SwfComboBox_Select objNMLSReportForm.SwfComboBox("swfname:=cboFormat"), "Excel - Standard"
	GUI_SwfComboBox_Select objNMLSReportForm.SwfComboBox("swfname:=cboYear"), Cstr(Year(strDate))
	Select Case intMonth
		Case 1,2,3: GUI_SwfComboBox_Select 		objNMLSReportForm.SwfComboBox("swfname:=cboQuarter"), "Jan - Mar"
		Case 4,5,6: GUI_SwfComboBox_Select 		objNMLSReportForm.SwfComboBox("swfname:=cboQuarter"), "Apr - Jun"
		Case 7,8,9: GUI_SwfComboBox_Select 		objNMLSReportForm.SwfComboBox("swfname:=cboQuarter"), "Jul - Sept"
		Case 10,11,12: GUI_SwfComboBox_Select 	objNMLSReportForm.SwfComboBox("swfname:=cboQuarter"), "Oct - Dec"
	End Select
	
	GUI_SwfComboBox_Select 	objNMLSReportForm.SwfComboBox("swfname:=cboVersion"), strNMLSVer
	GUI_SwfComboBox_Select 	objNMLSReportForm.SwfComboBox("swfname:=cboState"), "<All>"
	GUI_SwfButton_Click    	objNMLSReportForm.SwfButton("swfname:=btnClearAllFolders")
	GUI_List_ClickCheckBox 	objNMLSReportForm.SwfObject("swfname:=gvFolders"), objNMLSReportForm.SwfScrollBar("swfname:=vPanelScrollBar"), strLoanFolder, 0, False, False, "Single", True
	GUI_SwfButton_Click 	objNMLSReportForm.SwfButton("swfname:=btnOK")
	
	strAbsolutePath = Pathfinder.Locate("Test Report\") & strFileName
	wait g_LongWaitLarge 'Explicit wait added due to sync
	
	GUI_WinEdit_Type 		objNMLSReportForm.Dialog("text:=Save NMLS Call Report").WinEdit("nativeclass:=Edit","attached text:=File name:"), strAbsolutePath
	GUI_WinButton_Click 	objNMLSReportForm.Dialog("text:=Save NMLS Call Report").WinButton("text:=&Save")
	
	If Dialog("text:=Confirm Save As").Exist(5) Then
		GUI_WinButton_Click Dialog("text:=Confirm Save As").WinButton("text:=&Yes")
	End If
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NMLSExceptionDialog").SwfButton("swfname:=btnOK").Exist(15) Then
		GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NMLSExceptionDialog").SwfButton("swfname:=btnCancel") 
	End If
	
	Set objNMLSReportForm	=	Nothing
	Set objData 			= 	Nothing 
	

End Function




'This function is used to delete report
'@code
'    BIZ_Reports_DeleteReport(strReportName)
'@endcode
'@param strReportName - name of the report to delete

Function BIZ_Reports_DeleteReport(strReportName)

    FRM_Logger_ReportInfoEvent "Delete Report", "Report to be deleted: " & strReportName, Null
	Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")  
	Set objList = objContainer.SwfObject("swfname:=gvDirectory")
	Set objListView = objContainer.SwfObject("swfname:=gcListView")
	Set objScroll = objList.SwfScrollBar("swfname:=vPanelScrollBar")
	found = GUI_List_ClickRow(objList, objScroll, "Name", strReportName, true, false, false, "Single")
	
	If found Then
		objListView.SwfObject("swfname:=btnDelete").Click
		wait 3
		GUI_Dialog_Encompass_Yes ""
	End If
	
End Function



'This function is used to add fields to the generated report
'@code
'    BIZ_Reports_AddField(strFieldName)
'@endcode
'@param strFieldName - field to be added

Function BIZ_Reports_AddField(strFieldName)
    FRM_Logger_ReportInfoEvent "Add Field To Report", "Report field to be added: " & strFieldName, Null
    Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	GUI_SwfTab_Click objContainer.SwfObject("swfname:=ReportMainControl").SwfTab("swfname:=reportTab"),"Fields"
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=fieldAddBtn")
	
	Set objReportDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ReportFieldDialog")
	If objReportDialog.Exist(10) Then
		GUI_SwfObject_Click objReportDialog.SwfObject("swfname:=pictureBoxSearch")
	End If
	If objReportDialog.SwfWindow("swfname:=ReportFieldSelector").Exist(10) Then
		GUI_SwfEdit_Set objReportDialog.SwfWindow("swfname:=ReportFieldSelector").SwfEdit("swfname:=txtFind"),strFieldName
		GUI_SwfButton_Click objReportDialog.SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnFind")
		wait 3
		GUI_SwfButton_Click objReportDialog.SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnOK")
	End If
	wait 2
	GUI_SwfButton_Click objReportDialog.SwfButton("swfname:=okBtn")
	
End Function



'This function is used to add filter for your report
'@code
'    BIZ_Reports_AddFilter(strField,strOperator,strValue)
'@endcode
'@param strField - field name for filter
'@param strOperator - operator to use
'@param strValue - value of filter to use

Function BIZ_Reports_AddFilter(strField,strOperator,strValue)

    FRM_Logger_ReportInfoEvent "Add Filter To Report", "Report filter to be added -  Field: " & strField & "; Operator: " & strOperator & "; Value: " & strValue , Null
	Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	GUI_SwfTab_Click objContainer.SwfObject("swfname:=ReportMainControl").SwfTab("swfname:=reportTab"),"Filters"
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnAddFilter")
	Set objFilterDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddEditFilterDialog")
	
	If objFilterDialog.Exist(10) Then
	   GUI_SwfObject_Click objFilterDialog.SwfObject("swfname:=btnFieldList")

	   If objFilterDialog.SwfWindow("swfname:=ReportFieldSelector").Exist(10) Then
		  GUI_SwfEdit_Set objFilterDialog.SwfWindow("swfname:=ReportFieldSelector").SwfEdit("swfname:=txtFind"),strField
		  GUI_SwfButton_Click objFilterDialog.SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnFind")
		  GUI_SwfButton_Click objFilterDialog.SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnOK")
	   End If
	   
		strDescr = objFilterDialog.SwfEdit("swfname:=txtDescription").GetROProperty("text") 
		GUI_SwfComboBox_Select objFilterDialog.SwfComboBox("swfname:=cboOperator"),strOperator
		
		If GUI_Object_IsExistX (objFilterDialog.Dialog("text:=Encompass"), 45) Then		'@ To handle unexpected popups (Some instances) 					
           GUI_Dialog_Encompass_OKX 65, ""
		End If
		
		GUI_SwfEdit_Set objFilterDialog.SwfEdit("swfname:=txtStringValue|txtMinNumber"),strValue
		GUI_SwfButton_Click objFilterDialog.SwfButton("swfname:=btnOK") 
	End If	
	
	strFltrresult = GUI_List_TextExists (objContainer.SwfObject("swfname:=gvFilters"), "Field", strDescr)
	
	If NOT strFltrresult Then
		   FRM_Logger_ReportFailEvent "Generate Report. Add Filter", "Filter was not added to the report: " & strDescr , Null	
	End If
End Function



'This function is used to click on Generate Report button
'@code
'    BIZ_Reports_Generate()
'@endcode

Function BIZ_Reports_Generate()
	FRM_Logger_ReportInfoEvent "Generate report", "Clicked Generate Report Button ", Null
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfButton("swfname:=btnGenerateReport")
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ReportOption"), 5) Then
	   GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ReportOption").SwfCheckBox("swfname:=chkNoShow"), "ON"
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ReportOption").SwfButton("swfname:=btnCancel")
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfButton("swfname:=btnGenerateReport")
	End If
	
	GUI_Dialog_Encompass_YesX 5,"The Reporting Database has been modified"
	Services.ThinkTime 5
	n = 0
	Do
		If NOT SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ProgressDialog").SwfObject("swfname:=pbProgress").Exist(1) or n > 240 Then
		       Exit Do
		End If
	    n = n + 1	
	Loop
End Function



'This function is used to add fields to the generated report
'@code
'    BIZ_Reports_AddExcelCalculationField(strRowID)
'@endcode
'@param strRowID - data for excel calculation

Function BIZ_Reports_AddExcelCalculationField(strRowID)

    Set objData = FRM_DS_GetTestData("Reports", "AddExcelCalculationField", strRowID)
    Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	GUI_SwfTab_Click objContainer.SwfObject("swfname:=ReportMainControl").SwfTab("swfname:=reportTab"),"Fields"
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=fieldAddBtn")
	
	Set objReportDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ReportFieldDialog")
	GUI_SwfRadioButton_Click objReportDialog.SwfRadioButton("swfname:=rdoExcelField")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldDesc")) Then
	   GUI_SwfEdit_Set objReportDialog.SwfEdit("swfname:=txtExcelFieldDesc"), FRM_DS_GetValue(objData, "FieldDesc")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ExcelFormula")) Then
	   GUI_SwfEditor_Type objReportDialog.SwfEditor("swfname:=txtExcelFormula"), FRM_DS_GetValue(objData, "ExcelFormula")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldIDToInsert")) Then
	   GUI_SwfButton_Click objReportDialog.SwfButton("swfname:=btnInsertField")
	   GUI_List_ClickRow objReportDialog.SwfWindow("swfname:=EncompassFieldListDialog").Swfobject("swfname:=gvFields"),NULL,"Field ID",CSTR(FRM_DS_GetValue(objData, "FieldIDToInsert")),TRUE,FALSE,FALSE,"Single"
	   GUI_SwfButton_Click objReportDialog.SwfWindow("swfname:=EncompassFieldListDialog").SwfButton("swfname:=btnOK")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SummaryType")) Then
	   GUI_SwfComboBox_Select objReportDialog.SwfComboBox("swfname:=cboExcelSummaryType"), FRM_DS_GetValue(objData, "SummaryType")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DisplayType")) Then
	   GUI_SwfComboBox_Select objReportDialog.SwfComboBox("swfname:=cboFieldFormat"), FRM_DS_GetValue(objData, "DisplayType")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NoOfDecimals")) Then
	   GUI_SwfEdit_Set objReportDialog.SwfEdit("swfname:=txtExcelDecimal"), FRM_DS_GetValue(objData, "NoOfDecimals")
	End If
	
	GUI_SwfButton_Click objReportDialog.SwfButton("swfname:=okBtn")
	strFldresult1 = GUI_List_TextExists (objContainer.SwfObject("swfname:=gvFields"), "Description",FRM_DS_GetValue(objData, "FieldDesc"))
	
	If NOT strFldresult1 Then
		   FRM_Logger_ReportFailEvent "Generate Report. Add Field", "Field was not added to the report: " & strFieldName , Null	
	End If	

End Function



'This function is used to generate North Carolona Report
'@code
'    BIZ_Reports_GenerateNCReport(FundingEntityDateField, OriginatingEntityDateField, strFolderName)
'@endcode
'@param FundingEntityDateField
'@param OriginatingEntityDateField
'@param strFolderName - Name of the folder to be selected.


Function BIZ_Reports_GenerateNCReport(FundingEntityDateField, OriginatingEntityDateField, strFolderName)

	BIZ_Nav_OpenMenuItem "Pipeline;Compliance Services;Generate North Carolina Compliance Report"
	GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfComboBox("swfname:=cboYear"), Cstr(Year(Now))
	intMonth = Month(Now)
	
	Select Case intMonth
		Case 1,2,3: GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfComboBox("swfname:=cboQuarter"), "Jan - Mar"
		Case 4,5,6: GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfComboBox("swfname:=cboQuarter"), "Apr - Jun"
		Case 7,8,9: GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfComboBox("swfname:=cboQuarter"), "Jul - Sept"
		Case 10,11,12: GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfComboBox("swfname:=cboQuarter"), "Oct - Dec"
	End Select

	Wait g_ShortWaitLarge 'Wait added due to sync
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfComboBox("swfname:=cboAppDateFunding").Select "Other..."
	Wait g_ShortWaitLarge 'Wait added due to sync
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfWindow("swfname:=ReportFieldSelector").SwfEdit("swfname:=txtFind"), FundingEntityDateField
	Wait g_ShortWaitLarge 'Wait added due to sync
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnFind")
	Wait g_ShortWaitLarge 'Wait added due to sync
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnOK").Click
	Wait g_ShortWaitLarge 'Wait added due to sync
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfComboBox("swfname:=cboAppDateOrig").Select "Other..."
	 GUI_Dialog_Encompass_OKX 20, ""
	Wait g_ShortWaitLarge 'Wait added due to sync
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfWindow("swfname:=ReportFieldSelector").SwfEdit("swfname:=txtFind"), OriginatingEntityDateField
	Wait g_ShortWaitLarge 'Wait added due to sync
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnFind")
	Wait g_ShortWaitLarge 'Wait added due to sync
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnOK").Click
	Wait g_ShortWaitLarge 'Wait added due to sync
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfButton("swfname:=btnClearAllFolders")
	GUI_List_ClickCheckBox SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfObject("swfname:=gvFolders"), SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfScrollBar("swfname:=vPanelScrollBar"), strFolderName, 0, False, False, "Single", True
	wait(3)
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").SwfButton("swfname:=btnOK")
	wait(15)
	GUI_Dialog_Encompass_YesX 100, ""
	strFilename = Pathfinder.Locate("Test Report\") & "Fees File.csv"
	wait(20)
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").Dialog("text:=Save NMLS Call Report").Highlight 
	GUI_WinEdit_Type SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").Dialog("text:=Save NMLS Call Report").WinEdit("nativeclass:=Edit","attached text:=File name:"), strFilename
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NCMLDReportForm").Dialog("text:=Save NMLS Call Report").WinButton("text:=&Save")
	
	If Dialog("text:=Confirm Save As").Exist(10) Then
	   GUI_WinButton_Click Dialog("text:=Confirm Save As").WinButton("text:=&Yes")
	End If
	wait(5)
	GUI_Dialog_Encompass_YesX 60, ""
End Function



'This function is used to create new Report
'@code
'    BIZ_Reports_CreateNewReport(strRowID, strFolderType)
'@endcode
'@param strRowID - RowID for data
'@param strFolderType - Folder Type Personal Reports Folder/Public Reports Folder

Function BIZ_Reports_CreateNewReport(strRowID, strFolderType)
	
	FRM_Logger_ReportInfoEvent "Reports_CreateNewReport", "Creating new Report", Null
	
	Dim objData, objContainer, objReportList, strReportName, intGetNewRowIndex
	Set objData       = FRM_DS_GetTestData("Reports", "ReportOperation", strRowID)
	Set objContainer  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportList = objContainer.SwfObject("swfname:=gvDirectory")
	
	strReportName = FRM_DS_GetValue(objData, "ReportName")
	wait 10
	SwfWindow("swfname:=MainForm").Activate
	If Not UTIL_String_IsEmpty(strFolderType) Then
           'objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strFolderType 
			GUI_SwfComboBox_Select objContainer.SwfComboBox("swfname:=cmbBoxFolder"), strFolderType
			Wait g_ShortWaitMedium
    	   GUI_Object_WaitTillExistX objReportList, 60
    End If 
	
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnAdd")
	GUI_SwfEdit_Set objContainer.SwfEdit("micclass:=SwfEdit","focused:=True"), strReportName
	GUI_SwfObject_Click objReportList
	Wait g_ShortWaitMedium    'for sync issue
	intGetNewRowIndex = GUI_List_GetRowIndexByPartialText(objReportList, 0, strReportName)

	If (intGetNewRowIndex > -1) Then 
		FRM_Logger_ReportPassEvent "Validate Report Creation","New Report '"&strReportName& "' is created",Null
	Else
		FRM_Logger_ReportFailEvent "Validate Report Creation","New Report '"&strReportName&"' is not created",Null
	End If
	
	Set objData       = Nothing
	Set objContainer  = Nothing
	Set objReportList = Nothing
	
	BIZ_Reports_CreateNewReport = strReportName
	
End Function



'This function is used to delete a Report
'@code
'    BIZ_Reports_DeleteReport(strReportName, strFolderType)
'@endcode
'@param strReportName - ReportName to delete
'@param strFolderType - Folder Type Personal Reports Folder/Public Reports Folder

Function BIZ_Reports_DeleteReport(strReportName, strFolderType)

	FRM_Logger_ReportInfoEvent "Delete the Existing Report", "Delete the report " &strReportName, Null
	
	Dim objContainer, objReportList
	Set objContainer  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportList = objContainer.SwfObject("swfname:=gvDirectory")
	
	If Not UTIL_String_IsEmpty(strFolderType) Then
		objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strFolderType     
    	GUI_Object_WaitTillExistX objReportList, 60
    	Wait g_ShortWaitMedium
    End If
    
    GUI_List_ClickRow objReportList, objReportList.swfscrollbar ("swfname:=vPanelScrollBar"), "Name", strReportName, True, False, False, "Single"
    
    GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnDelete") 
  
    If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").Dialog("regexpwndtitle:=Encompass")) Then
    	FRM_Logger_ReportPassEvent "Validate Encompass confirmation dialog box for deletion ","Encompass confirmation dialog box with message 'Are you sure you want to delete "&strReportName&" is displayed with 'Yes' and 'No' buttons",null
    	GUI_Dialog_Encompass_YesX 40, ""
		Wait g_ShortWaitMedium
		GUI_SwfObject_Click objReportList
	Else
		FRM_Logger_ReportFailEvent "Validate Encompass confirmation dialog box for deletion ","Encompass confirmation dialog box with message 'Are you sure you want to delete "&strReportName&" is not displayed with 'Yes' and 'No' buttons",null
	End If

	Set objContainer  = Nothing
	Set objReportList = Nothing
	
End Function



'This function is used to create a new user in OrganizationUsers
'@code
'    BIZ_Personas_TradesContactsDashboardReports_Reports_AccessRight(strPersonaName, arrReports,boolToBeChecked)
'@endcode
'@param arrReports - Array of checkboxes text to check/uncheck in Persona/Report
'@param strPersonaName - Persona to select for user
'@param boolToBeChecked - True to check False to Uncheck

Function BIZ_Personas_TradesContactsDashboardReports_Reports_AccessRight(strPersonaName, arrReports,boolToBeChecked)

    FRM_Logger_ReportInfoEvent "Set Reports Access Right", "Set Reports access right for persona '"&strPersonaName&"'", Null

	Dim objSettingWindow, objConditionTreeView
	Set objSettingWindow     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objConditionTreeView = objSettingWindow.SwfTreeView("swfname:=treeViewTabs","index:=0")

	GUI_SwfList_Select objSettingWindow.SwfListView("swfname:=lvPersona"), strPersonaName
    GUI_SwfTab_Click objSettingWindow.SwfTab("swfname:=tabControl1"), "Trades/Contacts/Dashboard/Reports"
	GUI_Object_WaitTillExist objConditionTreeView
	wait(3)
	GUI_TreeView_ClickCheckBox objConditionTreeView, arrReports, boolToBeChecked
	
	If GUI_Object_IsEnabled(objSettingWindow.SwfObject("swfname:=stdIconBtnSave")) Then
	   GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=stdIconBtnSave")
	End If
	
	If GUI_Object_IsExist (objSettingWindow.Dialog("regexpwndtitle:=Encompass")) Then
       GUI_Dialog_Encompass_Yes "Do you want to save the changes?"
	End If	

	Set objSettingWindow 	 = Nothing
	Set objConditionTreeView = Nothing

End Function



'This function is used to delete all the data in of Resource report in User Group
'@code
'    BIZ_Report_UserGroups_ResourcesReportsDelete(strRowID)
'@endcode
'@param strRowID

Function BIZ_Report_UserGroups_ResourcesReportsDelete(strRowID)

	FRM_Logger_ReportInfoEvent "Report_UserGroups_ResourcesReports","Deleting all the data in report list under Resource tab", Null
	
	Dim objData, objSettingWindow, objReportList, intRowsAfterDelete, intReportRowCount, strGroupName
	Set objData          = FRM_DS_GetTestData("Reports", "AccessToPersona", strRowID)
	Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objReportList    = objSettingWindow.SwfObject("swfname:=gcTemplate","index:=4").SwfListView("swfname:=listView1")
	
	strGroupName = FRM_DS_GetValue(objData, "GroupName")
	
	If GUI_Object_IsExist (objSettingWindow.SwfListView("swfname:=lvGroup")) Then
	   GUI_SwfList_Select objSettingWindow.SwfListView("swfname:=lvGroup"), strGroupName
	   GUI_SwfTab_Click objSettingWindow.SwfTab("swfname:=tabControl1"), "Resources"
		Wait g_LongWaitLarge	'for sync issue	
	   If GUI_Object_IsExist (objSettingWindow.SwfObject("swfname:=gcTemplate","index:=4")) Then
		  intReportRowCount =  objReportList.GetItemsCount()
		  For ReportRowNumber = 0 To intReportRowCount -1 Step 1
		  	  objReportList.Object.Focus 'Added on 08/03/2017 for scrolling down 
		      objReportList.Select(0)
			  GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=stdIconBtnDelete","index:=4")
		  Next
	   End If 
	
		Wait g_LongWaitLarge	'for sync issue	
	   If GUI_Object_IsEnabled(objSettingWindow.SwfObject("swfname:=stdIconBtnSave")) Then
		 GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=stdIconBtnSave")
	   End If
			
	   If GUI_Object_IsExist(objSettingWindow.Dialog("regexpwndtitle:=Encompass")) Then
		 GUI_Dialog_Encompass_Yes "Do you want to save the changes?"
	   End If
   
	   intRowsAfterDelete = objReportList.GetItemsCount()
			
	   If intRowsAfterDelete = 0 Then
		  FRM_Logger_ReportPassEvent "Validate Report list is empty or not", "Report List is empty after deleting all the data in list", null
	   Else
		  FRM_Logger_ReportFailEvent "Validate Report list is empty or not", "Report List is not empty after deleting all the data in list", null
	   End If
	End If
	
	Set objData          = Nothing
	Set objSettingWindow = Nothing
	Set objReportList    = Nothing

End Function



'This function is used to create new folder in Repoprts tab
'@code
'    BIZ_Reports_CreateNewFolder(strRowID, strFolderType)
'@endcode
'@param strRowID - RowID for data
'@param strFolderType - folder type Public/Personal

Function BIZ_Reports_CreateNewFolder(strRowID, strFolderType)
	
	FRM_Logger_ReportInfoEvent "Reports_CreateNewFolder", "Creating new Report folder", Null
	
	Dim objContainer, objData, objReportList, strFolderName, intGetNewRowIndex
	Set objData       = FRM_DS_GetTestData("Reports", "ReportOperation", strRowID)
	Set objContainer  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportList = objContainer.SwfObject("swfname:=gvDirectory")
	
	If Not UTIL_String_IsEmpty(strFolderType) Then
           objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strFolderType     
    	   GUI_Object_WaitTillExistX objReportList, 60
    End If 
	
	strFolderName = FRM_DS_GetValue(objData, "FolderName")
	
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnNewFolder")
	GUI_SwfEdit_Set objContainer.SwfEdit("micclass:=SwfEdit","focused:=True"), strFolderName
	GUI_SwfObject_Click objReportList
	Wait g_ShortWaitMedium		'Used wait to handle sync
	intGetNewRowIndex  = GUI_List_GetRowIndexByPartialText(objReportList, 0, strFolderName)
	
	If(intGetNewRowIndex >= 0) Then 
	   FRM_Logger_ReportPassEvent "Validate Folder Creation","New Folder '"&strFolderName& "' is created",null
	Else
	   FRM_Logger_ReportFailEvent "Validate Folder Creation","New Folder '"&strFolderName&"' is not created",null
	End If
	
	GUI_List_ClickRow objReportList, objReportList.swfscrollbar ("swfname:=vPanelScrollBar"), "Name", strFolderName, True, False, False, "Double"
	
	If GUI_Object_IsEnabled(objContainer.SwfObject("swfname:=btnAdd")) = True And GUI_Object_IsEnabled(objContainer.SwfObject("swfname:=btnNewFolder")) Then
	   FRM_Logger_ReportPassEvent "Verify the icons 'Add' and 'New Folder' ", " 'Add' and 'New Folder' Icons are enabled", null 
	Else
	   FRM_Logger_ReportFailEvent "Verify the icons 'Add' and 'New Folder' ", " 'Add' and 'New Folder' Icons are not enabled", null
	End If
	
	Set objContainer  = Nothing
	Set objData       = Nothing
	Set objReportList = Nothing
	 
End Function



'This function is used to create the duplicate report of original
'@code
'   BIZ_Reports_DuplicateReport(strRowID, strReportName, strFolderType)
'@endcode
'@param strRowID - row ID for data
'@param strFolderType - folder name Personal/Public
'@param strReportName - Report name

Function BIZ_Reports_DuplicateReport(strRowID, strReportName, strFolderType) 

	FRM_Logger_ReportInfoEvent "Reports_DuplicateReport", "Duplicating the existing report", Null
	
	Dim objData, objContainer, objReportList, strDuplicateName, GetNewRowIndex
	Set objData        = FRM_DS_GetTestData("Reports", "ReportOperation", strRowID)
	Set objContainer   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportList  = objContainer.SwfObject("swfname:=gvDirectory")
	
	If Not UTIL_String_IsEmpty(strFolderType) Then
           objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strFolderType     
    	   GUI_Object_WaitTillExistX objReportList, 60
    	   Wait g_ShortWaitMedium
    End If

	GUI_List_ClickRow objReportList, objScrollbar, "Name", strReportName, True, False, False, "Single"
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnDuplicate") 
	Wait g_ShortWaitMedium	
	GUI_SwfObject_Click objReportList
	strDuplicateName = "Copy of " & strReportName
	GUI_Object_WaitTillExistX objReportList, 300 
	GetNewRowIndex = GUI_List_GetRowIndexByPartialText(objReportList, 0,strDuplicateName )

	If(GetNewRowIndex > 0) then 
	   FRM_Logger_ReportPassEvent "Validate Duplicate Report","Report Duplicate '"&strReportName&"' created with prefix '"&strDuplicateName&"'",Null
	Else
	   FRM_Logger_ReportFailEvent "Validate Duplicate Report","Report Duplicate '"&strReportName&"' not created with prefix '"&strDuplicateName&"' ",Null
	End If
	
	Set objData       = Nothing
	Set objContainer  = Nothing
	Set objReportList = Nothing
	
	BIZ_Reports_DuplicateReport = strDuplicateName
	
End Function



'This function is used to copy the report and paste in same folder
'@code
'   BIZ_Reports_CutPasteReport(strRowID, strReportName, strSourceFolder, strDestFolder)
'@endcode
'@param strRowID - row ID for data
'@param strSourceFolder - Source folder name 
'@param strReportName - Report name
'@param strDestFolder - folder name where  report is to be pasted

Function BIZ_Reports_CutPasteReport(strRowID, strReportName, strSourceFolder, strDestFolder)
	
	FRM_Logger_ReportInfoEvent "BIZ_Reports_CutPasteReport", "Cut report from '"&strSourceFolder&"' and paste in '"&strDestFolder&"'", Null
	
	Dim objContainer, objReportList, intGetNewRowIndex 
	Set objContainer  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportList = objContainer.SwfObject("swfname:=gvDirectory")
	
	If Not UTIL_String_IsEmpty(strSourceFolder) Then
		objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strSourceFolder 
		FRM_Logger_ReportInfoEvent "Select source folder", "Source folder '"&strSourceFolder&"' is selected to cut the existing report "&strReportName, Null		
    	GUI_Object_WaitTillExistX objReportList, 60
    	Wait g_ShortWaitMedium
    End If
   
    GUI_List_ClickRow objReportList, objReportList.swfscrollbar ("swfname:=vPanelScrollBar"), "Name", strReportName, True, False, False, "Single"
    GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnCut")
    
    If (strSourceFolder = strDestFolder) Then
    	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnPaste")
    	
    	If GUI_Object_IsExist (SwfWindow("swfname:=MainForm").Dialog("regexpwndtitle:=Encompass")) Then
    		FRM_Logger_ReportPassEvent "Validate Error Dialog box popup for restricting to paste in same folder" ,"Error Dialog box popup successfully displayed",null
    		GUI_Dialog_Encompass_OK "Unable to perform paste operation because the destination is the same as the source."
    	Else
    		FRM_Logger_ReportFailEvent "Validate Error Dialog box popup for restricting to paste in same folder" ,"Error Dialog box popup was not displayed",null
    	End if
    Else
 		If Not UTIL_String_IsEmpty(strDestFolder) Then
			FRM_Logger_ReportInfoEvent "Select destination folder", "Destination folder '"&strDestFolder&"' is selected to paste the cut report "&strReportName&"' from source folder", Null
			objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strDestFolder     
    		GUI_Object_WaitTillExistX objReportList, 60
    		Wait g_ShortWaitMedium
    	End If
   
    	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnPaste")
    	Wait g_ShortWaitMedium
    	GUI_SwfObject_Click objReportList
   		intGetNewRowIndex = GUI_List_GetRowIndex(objReportList, 0, strReportName)
	
		If(intGetNewRowIndex > -1) Then 
			FRM_Logger_ReportPassEvent "Validate '"&strReportName&"' is present in '"&strDestFolder&"'" ,"Pasted Report '"&strReportName& "' is present in '"&strDestFolder&"'",null
		Else
			FRM_Logger_ReportFailEvent "Validate '"&strReportName&"' is present in '"&strDestFolder&"'" ,"Pasted Report '"&strReportName& "' is not present in '"&strDestFolder&"'",null
		End If
	
		If Not UTIL_String_IsEmpty(strSourceFolder) Then
			objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strSourceFolder     
    		GUI_Object_WaitTillExistX objReportList, 60
    		Wait g_ShortWaitMedium
    	End If
        
		GUI_SwfObject_Click objReportList
 		intGetNewRowIndex = GUI_List_GetRowIndex(objReportList, 0, strReportName)
	
		If(intGetNewRowIndex = -1) Then 
			FRM_Logger_ReportPassEvent "Validate '"&strReportName&"' is not present in '"&strSourceFolder&"'" ,"Report '"&strReportName& "' is not present in '"&strSourceFolder&"'",null
		Else
			FRM_Logger_ReportFailEvent "Validate '"&strReportName&"' is not present in '"&strSourceFolder&"'" ,"Report '"&strReportName& "' is still present in '"&strSourceFolder&"'",null
		End If
		
		If Not UTIL_String_IsEmpty(strDestFolder) Then
			objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strDestFolder     
    		GUI_Object_WaitTillExistX objReportList, 60
    		Wait g_ShortWaitMedium
    	End If
	End If
	
	Set objContainer  = Nothing 
	Set objReportList = Nothing
		
End Function



'This function is used to copy the report and paste in same folder
'@code
'   BIZ_Reports_CopyPasteReport(strReportName, strSourceFolder)
'@endcode
'@param strReportName - Report name
'@param strSourceFolder - Folder name Personal/public

Function BIZ_Reports_CopyPasteReport(strReportName, strSourceFolder)

	FRM_Logger_ReportInfoEvent "Reports_CopyPasteReport", "Create Copy of existing original report '"&strReportName&"'", Null
	
	Dim objContainer, objReportList, strCopyReport, GetNewRowIndex
	Set objContainer  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportList = objContainer.SwfObject("swfname:=gvDirectory")
	
	If Not UTIL_String_IsEmpty(strSourceFolder) Then
		objContainer.SwfComboBox("swfname:=cmbBoxFolder").Select strSourceFolder     
    	GUI_Object_WaitTillExistX objReportList, 60
    	Wait g_ShortWaitMedium
    End If
    
    If GUI_Object_IsEnabled(objContainer.SwfObject("swfname:=btnPaste")) Then
		FRM_Logger_ReportFailEvent "Verify paste button,should be disabled as no report is selected", "Paste button is enabled", null 
	Else
		FRM_Logger_ReportPassEvent "Verify paste button,should be disabled as no report is selected", "Paste button is disabled", null
	End If
	Wait g_ShortWaitMedium
   	GUI_List_ClickRow objReportList, objReportList.swfscrollbar ("swfname:=vPanelScrollBar"), "Name", strReportName, True, False, False, "Single"
    Wait g_ShortWaitMedium
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnCopy")
    Wait g_ShortWaitMedium
  	If GUI_Object_IsEnabled(objContainer.SwfObject("swfname:=btnPaste")) Then
		FRM_Logger_ReportPassEvent "Verify paste button,should be enabled as report is selected", "Paste button is enabled", null 
	Else
		FRM_Logger_ReportFailEvent "Verify paste button,should be enabled as report is selected", "Paste button is disabled", null
	End If
	
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnPaste")
	Wait g_ShortWaitMedium
	GUI_SwfObject_Click objReportList
	strCopyReport = "Copy of " & strReportName
	GUI_Object_WaitTillExistX objReportList, 300 
	GetNewRowIndex = GUI_List_GetRowIndexByPartialText(objReportList, 0,strCopyReport )

	If (GetNewRowIndex > 0) then 
		FRM_Logger_ReportPassEvent "Validate Copy Report","Copy of '"&strReportName&"' created with prefix '"&strCopyReport&"'",null
	Else
		FRM_Logger_ReportFailEvent "Validate Copy Report","Copy of '"&strReportName&"' not created with prefix '"&strCopyReport&"' ",null
	End If
	
	Set objContainer  = Nothing
	Set objReportList = Nothing
	
	BIZ_Reports_CopyPasteReport = strCopyReport
	
End Function



'This function is used to set data in report setup and page set up
'@code
'   BIZ_Reports_ReportTab(strRowID, strReportName)
'@endcode
'@param strRowID - Row ID for data
'@param strReportName - Report name

Function BIZ_Reports_ReportTab(strRowID, strReportName)
	
	FRM_Logger_ReportInfoEvent "BIZ_Reports_ReportTab", "Add data in Report Tab in a Report", Null
	
	Dim objData, objContainer, objReportList, strValidateReportType, strValidatePapersize, strValidatePaperOrientation
	Dim strValidateMarginTop, strValidateMarginBottom, strValidateMarginLeft, strValidateMarginRight
	Set objData = FRM_DS_GetTestData("Reports", "ReportOperation", strRowID)
	Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportList = objContainer.SwfObject("swfname:=gvDirectory")
	
	GUI_List_ClickRow objReportList, objReportList.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strReportName, True, False, False, "Single"
	GUI_SwfTab_Click objContainer.SwfTab("swfname:=reportTab"), "Report"

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DataSource")) Then
		If FRM_DS_GetValue(objData, "DataSource") = "Loans" Then
			GUI_SwfRadioButton_Click objContainer.SwfRadioButton("text:="&FRM_DS_GetValue(objData, "DataSource"))
			GUI_SwfComboBox_Select objContainer.SwfComboBox("swfname:=cboLoanType"), FRM_DS_GetValue(objData, "LoanType")
			FRM_Logger_ReportInfoEvent "Select Data Source '"&FRM_DS_GetValue(objData, "DataSource")&"' ", "Data Source '"&FRM_DS_GetValue(objData, "DataSource")&"' and '"&FRM_DS_GetValue(objData, "LoanType")&"' is selected.", Null
		ElseIf FRM_DS_GetValue(objData, "DataSource") = "Trades" Then
			GUI_SwfRadioButton_Click objContainer.SwfRadioButton("text:="&FRM_DS_GetValue(objData, "DataSource"))
			GUI_SwfComboBox_Select objContainer.SwfComboBox("swfname:=cmbTrades"), FRM_DS_GetValue(objData, "TradeType")
			FRM_Logger_ReportInfoEvent "Select Data Source '"&FRM_DS_GetValue(objData, "DataSource")&"' ", "Data Source '"&FRM_DS_GetValue(objData, "DataSource")&"' and '"&FRM_DS_GetValue(objData, "LoanType")&"' is selected.", Null
		Else
			GUI_SwfRadioButton_Click objContainer.SwfRadioButton("text:="&FRM_DS_GetValue(objData, "DataSource"))
			FRM_Logger_ReportInfoEvent "Select Data Source '"&FRM_DS_GetValue(objData, "DataSource")&"' ", "Data Source '"&FRM_DS_GetValue(objData, "DataSource")&"' is selected.", Null
		End If
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ReportType")) Then
		GUI_SwfComboBox_Select objContainer.SwfComboBox("swfname:=typeCombo"), FRM_DS_GetValue(objData, "ReportType")
		FRM_Logger_ReportPassEvent "Select Report Type '"&FRM_DS_GetValue(objData, "ReportType")&"' ", "Report Type '"&FRM_DS_GetValue(objData, "ReportType")&"' is selected.", Null
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaperSize")) Then
		GUI_SwfComboBox_Select objContainer.SwfComboBox("swfname:=sizeCombo"), FRM_DS_GetValue(objData, "PaperSize")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaperOrientation")) Then
		GUI_SwfComboBox_Select objContainer.SwfComboBox("swfname:=paperCombo"), FRM_DS_GetValue(objData, "PaperOrientation")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MarginTop")) Then
		GUI_SwfEdit_Set objContainer.SwfEdit("swfname:=topTxt"), FRM_DS_GetValue(objData, "MarginTop")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MarginBottom")) Then
		GUI_SwfEdit_Set objContainer.SwfEdit("swfname:=bottomTxt"), FRM_DS_GetValue(objData, "MarginBottom")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MarginLeft")) Then
		GUI_SwfEdit_Set objContainer.SwfEdit("swfname:=leftTxt"), FRM_DS_GetValue(objData, "MarginLeft")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MarginRight")) Then
		GUI_SwfEdit_Set objContainer.SwfEdit("swfname:=rightTxt"), FRM_DS_GetValue(objData, "MarginRight")
	End If

	Set objData       = Nothing
	Set objContainer  = Nothing 
	Set objReportList = Nothing
	
End Function



'This function is used to filter the report data on the basis of Milestones
'@code
'    BIZ_Reports_MilestonesTab(strMilestoneType, strSelectLoan)
'@endcode
'@param strMilestoneType - Milestone type
'@param strSelectLoan - Loan type to include

Function BIZ_Reports_MilestonesTab(strMilestoneType, strSelectLoan)
	
	FRM_Logger_ReportInfoEvent "BIZ_Reports_MilestonesTab", "select milestone type '"&strMilestoneType&"'", Null
	
	Dim objContainer, objMilestoneContainer, arrStrSelectLoan
	Set objContainer          = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objMilestoneContainer = objContainer.SwfObject("swfname:=pnlMilestone")
	
	GUI_SwfTab_Click objContainer.SwfTab("swfname:=reportTab"), "Milestones"
	
	If strMilestoneType = "Include all loan files without regard to milestone." Then
		GUI_SwfRadioButton_Click objContainer.SwfRadioButton("swfname:=radAnyStage")
	End If	
	
	If strMilestoneType = "Define the loans to include in the report by milestone criteria." Then
		GUI_SwfRadioButton_Click objContainer.SwfRadioButton("swfname:=radSelectedStages")
		
		If GUI_Object_IsExist(objMilestoneContainer ) Then
			arrStrSelectLoan = Split(strSelectLoan, ";")
			
			For intLoanCount = 0 To UBound (arrStrSelectLoan)
				FRM_Logger_ReportInfoEvent "Select loan", "select loan '"&arrStrSelectLoan(intLoanCount)&"'", Null
				GUI_SwfObject_Click objMilestoneContainer.SwfCheckbox("swfname:="&arrStrSelectLoan(intLoanCount))
			Next
			
		End If
	End If
	
	Set objContainer	  	  = Nothing
	Set objMilestoneContainer = Nothing
	
End Function



'This function is used to select the loan folders to include in report 
'@code
'    BIZ_Reports_FoldersTab(strLoanFolderType, strLoanFolderName)
'@endcode
'@param strLoanFolderType - Loan folders type
'@param strLoanFolderName - Loan folder name

Function BIZ_Reports_FoldersTab(strLoanFolderType, strLoanFolderName)
	
	FRM_Logger_ReportInfoEvent "BIZ_Reports_FoldersTab", "select loan folder type '"&strLoanFolderType&"'", Null
	
	Dim objContainer
	Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	GUI_SwfTab_Click objContainer.SwfTab("swfname:=reportTab"), "Folders"  
	
	If strLoanFolderType = "All loan folders." Then
		GUI_SwfRadioButton_Click objContainer.SwfRadioButton("swfname:=radAllFolders")	
	End If 
	
	If strLoanFolderType = "All loan folders except Archive folders." Then
		GUI_SwfRadioButton_Click objContainer.SwfRadioButton("swfname:=radActiveFolders")
	End If
	
	If strLoanFolderType = "Select loan folders manually." Then
		FRM_Logger_ReportInfoEvent "Select loan folder", "select loan folder name '"&strLoanFolderName&"'", Null
		BIZ_Reports_SelectFolder(strLoanFolderName)
	End If
	
	Set objContainer = Nothing
	
End Function



'This function is used to add a new filter 
'@code
'    BIZ_Reports_FilterTab_Add(strField, strOperator, strValue, strMinValue, strMaxValue)
'@endcode
'@param strField - New Field name to add
'@param strOperator - Operator to select
'@param strValue - value to enter
'@param strMinValue - Mininmum value for Between/not between operator
'@param strMaxValue - Maximum value for Between/not between operator 

Function BIZ_Reports_FilterTab_Add(strField, strOperator, strValue, strMinValue, strMaxValue)
    
    FRM_Logger_ReportInfoEvent "Add Filter To Report", "Report filter to be added -  Field: " & strField & "; Operator: " & strOperator & "; Value: " & strValue , Null
	
	Dim objContainer, objFilterDialog, strDescr, strFltrDescr
	Set objContainer    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objFilterDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddEditFilterDialog")
	
	GUI_SwfTab_Click objContainer.SwfObject("swfname:=ReportMainControl").SwfTab("swfname:=reportTab"),"Filters"
	GUI_SwfObject_Click objContainer.SwfObject("swfname:=btnAddFilter")
	
	If GUI_Object_WaitTillExistX(objFilterDialog, 10) Then
		
		GUI_SwfObject_Click objFilterDialog.SwfObject("swfname:=btnFieldList")
		If objFilterDialog.SwfWindow("swfname:=ReportFieldSelector").Exist(10) Then
			GUI_SwfEdit_Set objFilterDialog.SwfWindow("swfname:=ReportFieldSelector").SwfEdit("swfname:=txtFind"),strField
			GUI_SwfButton_Click objFilterDialog.SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnFind")
			GUI_SwfButton_Click objFilterDialog.SwfWindow("swfname:=ReportFieldSelector").SwfButton("swfname:=btnOK")
		End If
		
		strDescr = objFilterDialog.SwfEdit("swfname:=txtDescription").GetROProperty("text") 
		GUI_SwfComboBox_Select objFilterDialog.SwfComboBox("swfname:=cboOperator"),strOperator
		'Changed for CTA-209
		'If GUI_Object_IsExist(objFilterDialog.Dialog("regexpwndtitle:=Encompass"))  Then
			'GUI_Dialog_Encompass_OK "One or more values specified is not a valid number."
		'End If		
		If objFilterDialog.Dialog("text:=Encompass").Static("text:=.*One or more values.*").Exist(5)  Then
			strText=objFilterDialog.Dialog("text:=Encompass").Static("text:=.*One or more values.*").GetROProperty("text")	
			If objFilterDialog.Dialog("text:=Encompass").WinButton("text:=OK").Exist(2) Then
				objFilterDialog.Dialog("text:=Encompass").Activate
				objFilterDialog.Dialog("text:=Encompass").WinButton("text:=OK").Click
				FRM_Logger_ReportInfoEvent "Encompass Dialog box click", "Clicked OK button on Dialog box having text '"&strText&"'", null
			End If
		End If
		
		If (strOperator = "Between") Or (strOperator = "Not between") Then
			GUI_SwfEdit_Set objFilterDialog.SwfEdit("swfname:=txtMinNumber"),strMinValue
			GUI_SwfEdit_Set objFilterDialog.SwfEdit("swfname:=txtManNumber"),strMaxValue
		Else
			GUI_SwfEdit_Set objFilterDialog.SwfEdit("swfname:=txtMinNumber"),strValue
		End If
		
		GUI_SwfButton_Click objFilterDialog.SwfButton("swfname:=btnOK") 
		
	End If	

	Set objContainer    = Nothing
	Set objFilterDialog = Nothing
	
	BIZ_Reports_FilterTab_Add = strDescr
	
End Function



'This function is used to move down a field by one row in the fields tab of reports
'@code
'    BIZ_Reports_MoveDown(strFieldToMoveDown)
'@endcode
'@param strFieldToMoveDown - Field to move down

Function BIZ_Reports_MoveDown(strFieldToMoveDown)
	
	FRM_Logger_ReportInfoEvent "Move down selected field in fields tab of report", "Selected field should be Moved Down", Null
	
	Dim objContainer, objReportDialog, intTotRow, intRowNumBeforeMove, intRowNumAfterMove
    Set objContainer    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ReportFieldDialog")
	
	GUI_SwfTab_Click objContainer.SwfObject("swfname:=ReportMainControl").SwfTab("swfname:=reportTab"),"Fields"
	intTotRow = objContainer.SwfObject("swfname:=gvFields").Object.items.count
	
	If intTotRow>1 Then
	
		intRowNumBeforeMove = GUI_List_GetRowIndex(objContainer.SwfObject("swfname:=gvFields"), "Field", CStr(strFieldToMoveDown))
		
		If intRowNumBeforeMove <> (intTotRow - 1) Then
			GUI_List_ActOnRow objContainer.SwfObject("swfname:=gvFields"), intRowNumBeforeMove, True, False, False, "Single"
			FRM_Logger_ReportInfoEvent "Select the field to MoveDown the Field data ", "MoveDown Button should be enabled", Null
	
			If GUI_Object_IsEnabled (objContainer.SwfObject("swfname:=fieldDownBtn")) Then
				FRM_Logger_ReportInfoEvent "Validate MoveDown Button is enabled", "Move Down button is successfully enabled", Null
				GUI_SwfObject_Click objContainer.SwfObject("swfname:=fieldDownBtn")
				intRowNumAfterMove = GUI_List_GetRowIndex(objContainer.SwfObject("swfname:=gvFields"), "Field", CStr(strFieldToMoveDown))
				intRowNumAfterMove = intRowNumAfterMove - 1
				FRM_VerifyEqual intRowNumBeforeMove, intRowNumAfterMove, "Selected field should MoveDown ", "Selected Field '"&strFieldToMoveUp&"' moved down by one row successfully"
			Else
				FRM_Logger_ReportInfoEvent "Validate MoveDown Button is enabled", "Move Down button is not enabled", Null
			End If
		Else
			FRM_Logger_ReportInfoEvent "Field is present in last row", "Field can not be moved down as it is present in last row", Null
		End If
	Else 
		FRM_Logger_ReportFailEvent "There should be more than one field to perform move operation", "Single field is present cant perform move operation", Null
	End If
	
	Set objData         = Nothing
	Set objContainer    = Nothing
	Set objReportDialog = Nothing
	
End Function




'This function is used to move Up a field by one row in the fields tab of reports
'@code
'    BIZ_Reports_MoveUp(strFieldToMoveUp)
'@endcode
'@param strFieldToMoveUp - Field to move UP

Function BIZ_Reports_MoveUp(strFieldToMoveUp)
	
	FRM_Logger_ReportInfoEvent "Move up selected field in fields tab of report", "Selected field '"&strFieldToMoveUp&"' should be Moved up", Null
	
	Dim objContainer, objReportDialog, intTotRow, intRowNumBeforeMove, intRowNumAfterMove
    Set objContainer    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objReportDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ReportFieldDialog")
	
	GUI_SwfTab_Click objContainer.SwfObject("swfname:=ReportMainControl").SwfTab("swfname:=reportTab"),"Fields"
	intTotRow = objContainer.SwfObject("swfname:=gvFields").Object.items.count

	If intTotRow>1 Then
		intRowNumBeforeMove = GUI_List_GetRowIndex(objContainer.SwfObject("swfname:=gvFields"), "Field", CStr(strFieldToMoveUp))
		
		If intRowNumBeforeMove > 0 Then
			GUI_List_ActOnRow objContainer.SwfObject("swfname:=gvFields"), intRowNumBeforeMove, True, False, False, "Single"
			FRM_Logger_ReportInfoEvent "Select the field to MoveUp the Field data ", "MoveUp Button should be enabled", Null
	
			If GUI_Object_IsEnabled (objContainer.SwfObject("swfname:=fieldUpBtn")) Then
				FRM_Logger_ReportInfoEvent "Validate MoveUp Button is enabled", "Move Up button is successfully enabled", Null
				GUI_SwfObject_Click objContainer.SwfObject("swfname:=fieldUpBtn")
				intRowNumAfterMove = GUI_List_GetRowIndex(objContainer.SwfObject("swfname:=gvFields"), "Field", CStr(strFieldToMoveUp))
				intRowNumAfterMove = intRowNumAfterMove + 1
				FRM_VerifyEqual intRowNumBeforeMove, intRowNumAfterMove, "Selected field should MoveUp ", "Selected Field '"&strFieldToMoveUp&"' moved up by one row successfully"
			Else
				FRM_Logger_ReportInfoEvent "Validate MoveUp Button is enabled", "Move Up button is not enabled", Null
			End If
		Else
			FRM_Logger_ReportInfoEvent "Field is present in top row", "Field can not be moved up as it is present in top row", Null
		End If
	Else 
		FRM_Logger_ReportFailEvent "There should be more than one field to perform move up operation", "Single field is present cant perform move operation", Null
	End If
	
	
	Set objContainerm   = Nothing
	Set objReportDialog = Nothing
	
End Function



'This function is used to Delete Borrower Contact
'@code
'    BIZ_Reports_ValidateField(strFieldName)
'@endcode
'@param strFieldName - name to be validated

Function BIZ_Reports_ValidateField(strFieldName)
		
	Dim objReportFieldsList
	Set objReportFieldsList	=	SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvFields")
	
	If GUI_List_TextExists (objReportFieldsList, "Field", strFieldName) Then
		FRM_Logger_ReportPassEvent "Field Validation","Field '"&strFieldName&"' added to report", Null			 
	Else
		FRM_Logger_ReportFailEvent "Field Validation","Field '"&strFieldName&"' not added", Null			 
	End If 
	
	Set objReportFieldsList	=	Nothing
	
End Function



'This function is used to add report options
'@code
'    BIZ_Reports_AddReportOptions(strDate, strOperator, strLoanTeamMember, strUserID)
'@endcode
'@param strDate - date string to be passed
'@param strOperator - operator value to be entered
'@param strLoanTeamMember - loan team member to be entered
'@param strUserID - user name to be passed

Function BIZ_Reports_AddReportOptions(strDate, strOperator, strLoanTeamMember, strUserID)
	
	Dim objMain, objReportOptionsDialog, objUsersList
	
	Set objMain					=	SwfWindow("swfname:=MainForm")
	Set objReportOptionsDialog	=	objMain.SwfWindow("swfname:=ReportOption")
	Set objUsersList			=	objReportOptionsDialog.SwfWindow("swfname:=ContactAssignment")
	
	GUI_Object_WaitTillExistX objReportOptionsDialog.SwfComboBox("swfname:=cboDateOption"), 60	'@ To handle sync Related Issues 
	GUI_SwfComboBox_Select objReportOptionsDialog.SwfComboBox("swfname:=cboDateOption"), strDate
	GUI_Object_ValidateText objReportOptionsDialog.SwfComboBox("swfname:=cboDateOption"), strDate, "Date dropdown" 
	GUI_SwfComboBox_Select objReportOptionsDialog.SwfComboBox("swfname:=cboDateOperator"), strOperator
	GUI_Object_ValidateText objReportOptionsDialog.SwfComboBox("swfname:=cboDateOperator"), strOperator, "Operator dropdown"
	
	If UTIL_String_IsNotEmpty (strLoanTeamMember)	Then
		GUI_Object_WaitTillExistX objReportOptionsDialog.SwfComboBox("swfname:=cboTeamMember"), 120	'@ To handle sync Related Issues 
		GUI_SwfComboBox_Select objReportOptionsDialog.SwfComboBox("swfname:=cboTeamMember"), strLoanTeamMember
	End If	
	
	If UTIL_String_IsNotEmpty (strUserID)	Then
		GUI_Object_WaitTillExistX objUsersList, 120	'@ To handle sync Related Issues 
		GUI_SwfList_Select objUsersList.SwfListView("swfname:=listView1"), strUserID
		GUI_SwfButton_Click objUsersList.SwfButton("swfname:=btnOk")
	End If
		
	GUI_Object_WaitTillExistX objReportOptionsDialog.SwfButton("swfname:=btnOk"), 60	'@ To handle sync Related Issues 
	GUI_SwfButton_Click objReportOptionsDialog.SwfButton("swfname:=btnOk")
	
	Set objMain					=	Nothing
	Set objReportOptionsDialog	=	Nothing
	Set objUsersList			=	Nothing
	
End Function


' @}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Reports.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\TPO.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_TPO WebCenter  Function
'
' List of functions here
' @code
'   Function BIZ_TPO_Login()
'   Function BIZ_TPO_Verify_DocumentCreate strDocName
'   Function BIZ_TPO_LogOut()
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'This function is used to Launch TPO WebCenter
'@code
'    Function TPO_Login(strRowID)
'@endcode
'@Param points Row In Excel
Function BIZ_TPO_Login(strRowID)
    
    FRM_Logger_ReportInfoEvent "TPO Login", "TPO Login Started..", Null
	Dim objData,objMainPage
	UTIL_Win_CloseIE()
	wait g_TinyWaitLarge  'Explicit Wait added Due Sync
	Set objData       	= FRM_DS_GetTestData("Global_Data", "Website", strRowID)	
	Set objMainPage		= Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")   
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"URL")) Then
		GUI_Browser_OpenUrl FRM_DS_GetValue(objData,"URL")	  
	End If
	wait g_LongWaitSmall 'explicit wait added due to sync
	GUI_Object_WaitTillExistX objMainPage.Link("text:=LOGIN"), 10
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EmailAccount")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("name:=loginUserName"), FRM_DS_GetValue(objData,"EmailAccount")	  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Password")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("Name:=loginPassword"), FRM_DS_GetValue(objData,"Password") 
	End If
	wait g_LongWaitSmall 'explicit wait added due to sync
	GUI_Link_Click objMainPage.Link("text:=LOGIN")
	GUI_Object_WaitTillExistX objMainPage.Link("text:=Welcome, Sample First.*","index:=0"),40
	
	Set objData       	= Nothing	
	Set objMainPage		= Nothing  

End Function



'This function is used to LogOut TPO WebCenter
'@code
'    Function BIZ_TPO_LogOut()
'@endcode
Function BIZ_TPO_LogOut()
    
    FRM_Logger_ReportInfoEvent "TPO LogOut", "TPO LogOut", Null
	Dim objMainPage
	
	Set objMainPage		= Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")   
	wait g_LongWaitSmall 'explicit wait added due to sync
	GUI_Link_Click objMainPage.Link("text:=Log Out")

	Set objMainPage		= Nothing  

End Function


'This function is used to Verify Document in  TPO WebCenter
'@code
'    BIZ_TPO_Verify_DocumentCreate strDocName
'@endcode
'@Param strDocName Name of Document
Function BIZ_TPO_Verify_DocumentCreate(strDocName)
    
    FRM_Logger_ReportInfoEvent "TPO WebCenter", "Verify Document Created in Emcompass Reflected in TPO Web Center",Null
	Dim objMainPage,oDesc,objChild,boolValue
	Set objMainPage		= Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
	wait g_LongWaitLarge 'explicit wait added due to sync
	GUI_Link_Click objMainPage.Link("text:=Resources & Tools","index:=0")
	wait g_TinyWaitMedium 'explicit wait added due to sync
	GUI_Link_Click  objMainPage.Link("text:=Documents","index:=0")
	wait g_TinyWaitMedium 'explicit wait added due to sync
	
	
	Set oDesc = Description.Create
	oDesc("micclass").value = "WebElement"
	oDesc("class").value = "paddingBottom5"
	Set objChild=Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*").ChildObjects(oDesc) 
	boolValue=False
	For i = 0 to objChild.Count - 1
	
	  If InStr(1,objChild(i).GetROProperty("innertext"),strDocName,0)>0 Then
		  boolValue=True
		  Exit For  
	  End If   
	Next
	FRM_VerifyTrue boolValue, "Verify Document in TPO",strDocName&" Document Available in TPO"
    
    Set objMainPage	=Nothing
    Set oDesc		=Nothing
End Function


'This function is used to upload Loan file to TPO
'@code
'    BIZ_TPO_Upload_Document(strPath)
'@endcode
'@Param strPath Name of File Path

Function BIZ_TPO_Upload_Document(strPath)

	FRM_Logger_ReportInfoEvent "TPO WebCenter", "Upload Loan File to TPO WebCenter",Null
	Dim objMainPage
	Set objMainPage=Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")  
	
	wait g_LongWaitLarge+g_TinyWaitMedium 'explicit wait added due to sync
	GUI_Link_Click objMainPage.Link("text:=New Loan")
	wait g_LongWaitLarge 'explicit wait added due to sync
	objMainPage.WebRadioGroup("index:=0").Select "LoanImportFile.aspx"
	wait g_LongWaitLarge 'explicit wait added due to sync
	GUI_Link_Click objMainPage.Link("text:=Next")
	wait g_LongWaitLarge+g_LongWaitLarge 'explicit wait added due to sync
GUI_Object_WaitTillExistX objMainPage.Link("text:=Import"), 180
	objMainPage.WebFile("index:=0").Set strPath 
	wait g_LongWaitLarge 'explicit wait added due to sync
	GUI_Link_Click objMainPage.Link("text:=Import")
	wait g_LongWaitLarge 'explicit wait added due to sync
    
    Set objMainPage=Nothing
End Function















''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\TPO.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\WebCenter.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_WebCenter BIZ_WebCenter
'
' List of functions here
' @code
'   Function BIZ_WebCenter_OpenSite(strRowID)
'   Function BIZ_WebCenter_ClickNextPageBtn()
'   Function BIZ_WebCenter_BasicInfo(strRowID)
'   Function BIZ_WebCenter_GetFullApplicationPage(strApplyFor)
'   Function BIZ_WebCenter_GetShortApplicationPage()
'   Function BIZ_WebCenter_ClickApplyNow() 
'   Function BIZ_WebCenter_LoanInformation(strRowID)
'   Function BIZ_WebCenter_PersonalInformation(strRowID)
'   Function BIZ_WebCenter_EmploymentAndIncome(strRowIDs)
'   Function BIZ_WebCenter_Assets(strRowIDs)
'   Function BIZ_WebCenter_Liabilities(strRowIDs)
'   Function BIZ_WebCenter_Declarations (strRowID)
'   Function BIZ_WebCenter_Consent (isAgree)
'   Function BIZ_WebCenter_SubmitApplication()
'   Function BIZ_WebCenter_AccountDelete(strRowID)
'   Function BIZ_WebCenter_CreateNewAccount (strRowID)
'   Function BIZ_WebCenter_LogIn(strRowID)
'   Function BIZ_WebCenter_RefreshFirstEMail(strRowID)
'   Function BIZ_WebCenter_ReadGmailAndNavigateToAccountPage(strRowID, eType)
'   Function BIZ_WebCenter_VerifyEmailTriggeredAndReceived(strRowID, eType)
'   Function BIZ_Webcenter_OpenDocumentInDetailPage(strDocSubject)
'   Function BIZ_WebCenter_GetDetailPageWhenMultipleBorrOnAccount(strBorrName)
'   Function BIZ_WebCenter_LogOut()
'   Function BIZ_WebCenter_VerifyCheckLoanStatusPage()
'   Function BIZ_WebCenter_CreateDocumentIfNotExists(strDocumentType,strDocName)
'   Function BIZ_WebCenter_SetUpConsent()
'   Function BIZ_WebCenter_SetUpConsentAndCreateDocumentIfNotExistsForCNDTests(strRowID)
'   Function BIZ_WebCenter_BorrActOnDocumentInDetailPage(strDocSubject,strBorrName,strButton)
'   Function BIZ_Webcenter_VerifyIfObjectExistsForBorrower(strDocSubject,strBorrName,strObjectTextProperty, strObjClass) 
'   Function BIZ_WebCenter_Setup()
'   Function BIZ_WebCenter_DocuSignSignDocument()
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''



'@description Open WebCenter Site
'@param  strRowID 
'@code
'   BIZ_WebCenter_OpenSite (strRowID) 
'@endcode

Function BIZ_WebCenter_OpenSite (strRowID)    
    Set objData = FRM_DS_GetTestData("Global_Data", "Website", strRowID)
    strURL = FRM_DS_GetValue(objData, "URL")
    FRM_Logger_ReportInfoEvent "Open WebCenter Site", "Opening site:" & strURL, null 
    GUI_Browser_OpenUrl strURL
    'If Browser("name:=.*Ellie Mae.*").Page("title:=.*Ellie Mae.*").WebElement("innertext:=Welcome to our website.*","index:=0").Exist(120) Then ' batch fails with this one
	If Browser("name:=.*Ellie Mae.*").Page("title:=.*Ellie Mae.*").Exist(120) Then
        FRM_Logger_ReportPassEvent "Open WebCenter Site", "WebCenter site is opened", null  
    Else
        FRM_Logger_ReportFailEvent "Open WebCenter Site", "WebCenter site is NOT opened. Welcome page is NOT displayed.", null  
    End If  
    Set objData = Nothing
End Function



'@description Select application to apply for
'@param  strApplyFor apply for which application
'@code
'   BIZ_WebCenter_GetFullApplicationPage "Full Application"
'@endcode

Function BIZ_WebCenter_GetFullApplicationPage(strApplyFor)
    FRM_Logger_ReportInfoEvent "Select Application to apply", "Select to apply for:" & strApplyFor, null 
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.Link("text:=" & strApplyFor,"index:=0"),60
    'GUI_Link_Click objWebCenterPage.Link("text:=Apply Now","index:=0")
    GUI_Link_Click objWebCenterPage.Link("text:=" & strApplyFor,"index:=0")
    Set objWebCenterPage = Nothing
End Function



'@This function is used to Select Short application to apply for
'@code
'   BIZ_WebCenter_GetShortApplicationPage
'@endcode

Function BIZ_WebCenter_GetShortApplicationPage()
	BIZ_WebCenter_GetFullApplicationPage "Short Application"
End Function



'@This function is used to click on Apply Now  button 
'@code
'   BIZ_WebCenter_ClickApplyNow()
'@endcode

Function BIZ_WebCenter_ClickApplyNow()
    FRM_Logger_ReportInfoEvent "Apply Now", " Click on Apply Now button", null 
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.Link("text:=Apply Now","index:=1").WebElement("innertext:=Apply Now","index:=0"),60
    objWebCenterPage.Link("text:=Apply Now","index:=1").WebElement("innertext:=Apply Now","index:=0").Click 
    Set objWebCenterPage = Nothing
End Function 



'This function is used to click Next button on webcenter pages
'@code
'    BIZ_WebCenter_ClickNextPageBtn
'@endcode

Function BIZ_WebCenter_ClickNextPageBtn()
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
        objWebCenterPage.Link("text:=.*Next.*","index:=1").WebElement("innertext:=.*Next.*","index:=0").Click
    Set objWebCenterPage = Nothing
End Function


'This function is used to WebCenter Site - Short Application
'@code
'    BIZ_WebCenter_ShortApplicationPersonalInfo(strRowID)
'@endcode

Function BIZ_WebCenter_ShortApplicationPersonalInfo(strRowID)
    FRM_Logger_ReportInfoEvent "WebCenter Site - Short Application", "Enter Personal Info data in  using 'ShortApp_PersonalData' datasheet RowId:" & strRowID, null 
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "ShortApp_PersonalData", strRowID)
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")

    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("html id:=.*nameLabel.*","innertext:=Short Application","indx:=0"),60
        
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerFirstName")) Then       
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boFirstName.*","index:=0"), FRM_DS_GetValue(objData, "BorrowerFirstName")
    End If  
	
	If objWebCenterPage.WebEdit("html id:=.*boMiddleName.*","index:=0").Exist(2) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerMiddleName")) Then       
			GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boMiddleName.*","index:=0"), FRM_DS_GetValue(objData, "BorrowerMiddleName")
		End If 
    End If
	
    strBorrowerLastName = FRM_DS_GetValue(objData, "BorrowerLastName") & "-" & UTIL_Date_FormatDateByPattern(now, "mmddyyyyHHnnss")
    If UTIL_String_IsNotEmpty(strBorrowerLastName) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boLastName.*","index:=0"), strBorrowerLastName
        FRM_RT_SetPropValue "BorrowerLastName", strBorrowerLastName
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerEmail")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boEmail.*","index:=0"), FRM_DS_GetValue(objData, "BorrowerEmail")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ReferralName")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*_referralName.*","index:=0"), FRM_DS_GetValue(objData, "ReferralName")
    End If


    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomePhone")) Then
        strHomePhone = FRM_DS_GetValue(objData, "HomePhone")
        strHomePhone = UTIL_String_RemoveCharacters(strHomePhone,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boHomePhone.areaCodeTextBox.*","index:=0"), mid(strHomePhone,1,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boHomePhone.prefixTextBox.*","index:=0"), mid(strHomePhone,4,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boHomePhone.suffixTextBox.*","index:=0"), mid(strHomePhone,7,4)
    End If  

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CellPhone")) Then
        strCellPhone = FRM_DS_GetValue(objData, "CellPhone")
        strCellPhone = UTIL_String_RemoveCharacters(strCellPhone,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCellPhone.areaCodeTextBox.*","index:=0"), mid(strCellPhone,1,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCellPhone.prefixTextBox.*","index:=0"), mid(strCellPhone,4,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCellPhone.suffixTextBox.*","index:=0"), mid(strCellPhone,7,4)
    End If
	

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WorkPhone")) Then
		strWorkPhone = FRM_DS_GetValue(objData, "WorkPhone")
		strWorkPhone = UTIL_String_RemoveCharacters(strWorkPhone,array("-","(",")"," ","."))
		GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boWorkPhone.areaCodeTextBox.*","index:=0"), mid(strWorkPhone,1,3)
		GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boWorkPhone.prefixTextBox.*","index:=0"), mid(strWorkPhone,4,3)
		GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boWorkPhone.suffixTextBox.*","index:=0"), mid(strWorkPhone,7,4)
	End If	


	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MaritalStatus")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*boMaritalStatus.*","index:=0"), FRM_DS_GetValue(objData, "MaritalStatus")
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsUSCitizen")) Then
            GUI_WebList_Select objWebCenterPage.WebList("html id:=.*citizen.*","index:=0"), FRM_DS_GetValue(objData, "IsUSCitizen")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DateOfBirth")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boBirthday.*","index:=0"), FRM_DS_GetValue(objData, "DateOfBirth")
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SSN")) Then
        strSSN = FRM_DS_GetValue(objData, "SSN")
        strSSN = UTIL_String_RemoveCharacters(strSSN,array("-","(",")"," ","."))
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSocialIDOneTextBox.*","index:=0"), mid(strSSN,1,3)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSocialIDTwoTextBox.*","index:=0"), mid(strSSN,4,2)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSocialIDThreeTextBox.*","index:=0"), mid(strSSN,6,4)
    End If   

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CreditCheckAuthorization")) Then
            GUI_WebList_Select objWebCenterPage.WebList("html id:=.*boAuthorization.*","index:=0"), FRM_DS_GetValue(objData, "CreditCheckAuthorization")
    End If	
	
	If objWebCenterPage.WebEdit("html id:=.*boYearsOfSchool.*","index:=0").Exist(2) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "YearsOfSchool")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boYearsOfSchool.*","index:=0"), FRM_DS_GetValue(objData, "YearsOfSchool")
		End If	
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NumberOfDependents")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boDependents.*","index:=0"), FRM_DS_GetValue(objData, "NumberOfDependents")
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DependentAge")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boAge.*","index:=0"), FRM_DS_GetValue(objData, "DependentAge")
    End If      
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "StreetAddress")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentAddress.*","index:=0"), FRM_DS_GetValue(objData, "StreetAddress")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentCity.*","index:=0"), FRM_DS_GetValue(objData, "City")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*boCurrentState.*","index:=0"), FRM_DS_GetValue(objData, "State")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
        strZip = FRM_DS_GetValue(objData, "Zip")
        strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentZip.*","index:=0"), mid(strZip,1,5)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentExtZip.*","index:=0"), mid(strZip,6,4)
    End If      
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "YearsAtThisAddress")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentYearsAt.*","index:=0"), FRM_DS_GetValue(objData, "YearsAtThisAddress")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Months")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentMonthsAt.*","index:=0"), FRM_DS_GetValue(objData, "Months")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RentOrOwn")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*boRentOrOwn.*","index:=0"), FRM_DS_GetValue(objData, "RentOrOwn")
    End If
    

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PurposeOfLoan")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*boPurposeOfLoan.*","index:=0"), FRM_DS_GetValue(objData, "PurposeOfLoan")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyUsage")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*boPropertyUsage.*","index:=0"), FRM_DS_GetValue(objData, "PropertyUsage")
    End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanAmount")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boLoanAmout.*","index:=0"), FRM_DS_GetValue(objData, "LoanAmount")
    End If  

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PurchasePrice")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boValueAndPrice.*","index:=0"), FRM_DS_GetValue(objData, "PurchasePrice")
    End If
    
	If objWebCenterPage.WebEdit("html id:=.*boEstimatedValue.*","index:=0").Exist(2) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EstimatedValue")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boEstimatedValue.*","index:=0"), FRM_DS_GetValue(objData, "EstimatedValue")
		End If
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NumberOfUnits")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boNumOfUnits.*","index:=0"), FRM_DS_GetValue(objData, "NumberOfUnits")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "YearBuilt")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boYearBuilt.*","index:=0"), FRM_DS_GetValue(objData, "YearBuilt")
    End If 	
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SubjectPropertyAddress")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSubjectPropertyAddr.*","index:=0"), FRM_DS_GetValue(objData, "SubjectPropertyAddress")
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSubjectPropertyCity.*","index:=0"), FRM_DS_GetValue(objData, "City")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*boSubjectPropertyState.*","index:=0"), FRM_DS_GetValue(objData, "State")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
        strZip = FRM_DS_GetValue(objData, "Zip")
        strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ",".")) 
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSubjectPropertyZip.*","index:=0"), mid(strZip,1,5)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSubjectPropertyExtzip.*","index:=0"), mid(strZip,6,4)
    End If	

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MonthlyBaseIncome")) Then
		GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boBaseIncome.*","index:=0"), FRM_DS_GetValue(objData, "MonthlyBaseIncome")
	End If	

	
	'Assets checking
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AssetsChecking")) Then
		GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boChecking.*","index:=0"), FRM_DS_GetValue(objData, "AssetsChecking")
	End If	

	
	'Assets saving
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AssetsSaving")) Then
		GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boSaving.*","index:=0"), FRM_DS_GetValue(objData, "AssetsSaving")
	End If	
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FurnishGovernmentMonitoring")) Then 
        GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*boFurnishGoverInfoOptionCheckBox.*","index:=0"),FRM_DS_GetValue(objData, "FurnishGovernmentMonitoring")    
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Sex")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*boSexRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "Sex")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Ethnicity")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*boEthRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "Ethnicity")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Race")) Then    
        GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*boRaceRadioButtonList." & FRM_DS_GetValue(objData, "Race") & ".*","index:=0"),"ON" 
    End If	

	
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HasCoBorrower")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*hasCoBorrower.*","index:=0"), "hasCoBorrower" & FRM_DS_GetValue(objData, "HasCoBorrower")& "RB"
    End If

'Co-Borrower
    If FRM_DS_GetValue(objData, "HasCoBorrower")= "Yes" Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerFirstName")) Then       
			GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coFirstName.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerFirstName")
		End If  
		
		If objWebCenterPage.WebEdit("html id:=.*coMiddleName.*","index:=0").Exist(2) Then
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerMiddleName")) Then       
				GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coMiddleName.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerMiddleName")
			End If 
		End If
		

		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerLastName")) Then
			GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coLastName.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerLastName")
		End If  
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerEmail")) Then
			GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coEmail.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerEmail")
		End If


		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerHomePhone")) Then
			strHomePhone = FRM_DS_GetValue(objData, "Co-BorrowerHomePhone")
			strHomePhone = UTIL_String_RemoveCharacters(strHomePhone,array("-","(",")"," ","."))
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coHomePhone.areaCodeTextBox.*","index:=0"), mid(strHomePhone,1,3)
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coHomePhone.prefixTextBox.*","index:=0"), mid(strHomePhone,4,3)
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coHomePhone.suffixTextBox.*","index:=0"), mid(strHomePhone,7,4)
		End If  

		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerCellPhone")) Then
			strCellPhone = FRM_DS_GetValue(objData, "Co-BorrowerCellPhone")
			strCellPhone = UTIL_String_RemoveCharacters(strCellPhone,array("-","(",")"," ","."))
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coCellPhone.areaCodeTextBox.*","index:=0"), mid(strCellPhone,1,3)
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coCellPhone.prefixTextBox.*","index:=0"), mid(strCellPhone,4,3)
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coCellPhone.suffixTextBox.*","index:=0"), mid(strCellPhone,7,4)
		End If
		

		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerWorkPhone")) Then
			strWorkPhone = FRM_DS_GetValue(objData, "Co-BorrowerWorkPhone")
			strWorkPhone = UTIL_String_RemoveCharacters(strWorkPhone,array("-","(",")"," ","."))
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coWorkPhone.areaCodeTextBox.*","index:=0"), mid(strWorkPhone,1,3)
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coWorkPhone.prefixTextBox.*","index:=0"), mid(strWorkPhone,4,3)
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coWorkPhone.suffixTextBox.*","index:=0"), mid(strWorkPhone,7,4)
		End If	


		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerMaritalStatus")) Then
			GUI_WebList_Select objWebCenterPage.WebList("html id:=.*coMaritalStatus.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerMaritalStatus")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerIsUSCitizen")) Then
				GUI_WebList_Select objWebCenterPage.WebList("html id:=.*cocitizen.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerIsUSCitizen")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerDateOfBirth")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBirthday.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerDateOfBirth")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerSSN")) Then
			strSSN = FRM_DS_GetValue(objData, "Co-BorrowerSSN")
			strSSN = UTIL_String_RemoveCharacters(strSSN,array("-","(",")"," ","."))
			GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coSocialIDOneTextBox.*","index:=0"), mid(strSSN,1,3)
			GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coSocialIDTwoTextBox.*","index:=0"), mid(strSSN,4,2)
			GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coSocialIDThreeTextBox.*","index:=0"), mid(strSSN,6,4)
		End If   

		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerCreditCheckAuthorization")) Then
				GUI_WebList_Select objWebCenterPage.WebList("html id:=.*coAuthorization.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerCreditCheckAuthorization")
		End If	
		
		If objWebCenterPage.WebEdit("html id:=.*coYearsOfSchool.*","index:=0").Exist(2) Then
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerYearsOfSchool")) Then
				GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coYearsOfSchool.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerYearsOfSchool")
			End If	
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerNumberOfDependents")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coDependents.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerNumberOfDependents")
		End If  
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerDependentAge")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coAge.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerDependentAge")
		End If      
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerStreetAddress")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentAddres.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerStreetAddress")
		End If  
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerCity")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentCity.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerCity")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerState")) Then
			GUI_WebList_Select objWebCenterPage.WebList("html id:=.*coBoCurrentState.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerState")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerZip")) Then
			strZip = FRM_DS_GetValue(objData, "Co-BorrowerZip")
			strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ","."))
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentZip.*","index:=0"), mid(strZip,1,5)
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentExtZip.*","index:=0"), mid(strZip,6,4)
		End If      
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerYearsAtThisAddress")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentYearsAt.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerYearsAtThisAddress")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerMonths")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentMonthsAt.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerMonths")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerRentOrOwn")) Then
			GUI_WebList_Select objWebCenterPage.WebList("html id:=.*coRentOrOwn.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerRentOrOwn")
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerMonthlyBaseIncome")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBaseIncome.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerMonthlyBaseIncome")
		End If	

		
		'Assets checking
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerAssetsChecking")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coChecking.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerAssetsChecking")
		End If	

		
		'Assets saving
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerAssetsSaving")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coSaving.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerAssetsSaving")
		End If	
		                                                    
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerFurnishGovernmentMonitoring")) Then                                                                                                       
			GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*coBoFurnishGoverInfoOptionCheckBox.*","index:=0"),FRM_DS_GetValue(objData, "Co-BorrowerFurnishGovernmentMonitoring")    
		End If  
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerSex")) Then
			GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*coSexRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerSex")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerEthnicity")) Then
			GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*coEthRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "Co-BorrowerEthnicity")
		End If  
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Co-BorrowerRace")) Then    
			GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*coRaceRadioButtonList." & FRM_DS_GetValue(objData, "Co-BorrowerRace") & ".*","index:=0"),"ON" 
		End If	

    End If




    GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*policyCheckBox.*" ,"index:=0"),"ON"  
    
    objWebCenterPage.Link("text:=Submit","index:=0").WebElement("innertext:=Submit","index:=0").Click    
    
    Set objData = Nothing
    Set objWebCenterPage = Nothing
End Function



'This function is used to enter data to Start page of webcenter
'@code
'    BIZ_WebCenter_BasicInfo(strRowID)
'@endcode
'@param strRowID - row Id to use in the data sheet

Function BIZ_WebCenter_BasicInfo(strRowID)
    FRM_Logger_ReportInfoEvent "WebCenter Site - Start tab", "Enter basic data in Start page using 'Basic' datasheet RowId:" & strRowID, null 
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "Basic", strRowID)
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")

    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Start"),60
        
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerFirstName")) Then       
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*borrowFirstName.*","index:=0"), FRM_DS_GetValue(objData, "BorrowerFirstName")
    End If  
    
    strBorrowerLastName = FRM_DS_GetValue(objData, "BorrowerLastName") & "-" & UTIL_Date_FormatDateByPattern(now, "mmddyyyyHHnnss")
    If UTIL_String_IsNotEmpty(strBorrowerLastName) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*borrowLastName.*","index:=0"), strBorrowerLastName
        FRM_RT_SetPropValue "BorrowerLastName", strBorrowerLastName
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerEmail")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*borrowEmail.*","index:=0"), FRM_DS_GetValue(objData, "BorrowerEmail")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HasCoBorrower")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*hasCoBorrowerRadioButton.*","index:=0"), FRM_DS_GetValue(objData, "HasCoBorrower")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrowerFirstName")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coborrowerFirstName.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrowerFirstName")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrowerLastName")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coborrowerLirstName.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrowerLastName")
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrowerEmail")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coborrowerEmail.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrowerEmail")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerJointCreditYesNo")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*borrowApplyDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "BorrowerJointCreditYesNo")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrowerJointCreditYesNo")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*coborrowApplyDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrowerJointCreditYesNo")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HowDidYouHear")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*ApplicationLeadSourceDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "HowDidYouHear")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HasRealEstateAgent")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*hasRealtorRadioButton.*","index:=0"), FRM_DS_GetValue(objData, "HasRealEstateAgent")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RealEstateAgentName")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*realtorNameTextBox.*","index:=0"), FRM_DS_GetValue(objData, "RealEstateAgentName")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RealEstateAgentPhone")) Then
        strAgentPhone = FRM_DS_GetValue(objData, "RealEstateAgentPhone")
        strAgentPhone = UTIL_String_RemoveCharacters(strAgentPhone,array("-","(",")"," ","."))
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*realtorPhone.areaCodeTextBox.*","index:=0"), mid(strAgentPhone,1,3)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*_realtorPhone.prefixTextBox.*","index:=0"), mid(strAgentPhone,4,3)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*_realtorPhone.suffixTextBox.*","index:=0"), mid(strAgentPhone,7,4)
    End If
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RealEstateAgentEmail")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*realtorEmailTextBox.*","index:=0"), FRM_DS_GetValue(objData, "RealEstateAgentEmail")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ReferralName")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*realtorByTextBox.*","index:=0"), FRM_DS_GetValue(objData, "ReferralName")
    End If
    
    If objWebCenterPage.WebCheckBox("html id:=.*creditAuthorizationCheckBox.*","index:=0").Exist(3) Then     
		GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*creditAuthorizationCheckBox.*","index:=0"),"ON"
	End If	
	If objWebCenterPage.WebCheckBox("html id:=.*agreePatriotActCheckBox.*","index:=0").Exist(3) Then
		GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*agreePatriotActCheckBox.*","index:=0"),"ON"
	End If	
	If objWebCenterPage.WebCheckBox("html id:=.*agreeElectronicDisclosuresAgreementCheckBox.*","index:=0").Exist(3) Then
		GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*agreeElectronicDisclosuresAgreementCheckBox.*","index:=0"),"ON"
	End If	
    '=============On QA server checkbox is not present===============
    If objWebCenterPage.WebCheckBox("html id:=.*policyCheckBox.*","index:=0").Exist(3) Then
		GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*policyCheckBox.*","index:=0"),"ON"
    End If
    
    '=============On QA server checkboxes are present===============
    If objWebCenterPage.WebCheckBox("html id:=.*isAdditionalDisclosureCheckBox.*","index:=0").Exist(3) Then
        GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*isAdditionalDisclosureCheckBox.*","index:=0"),"ON"
    End If
    
    If objWebCenterPage.WebCheckBox("html id:=.*isDisclosureCheckBox.*","index:=0").Exist(3) Then
       GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*isDisclosureCheckBox.*","index:=0"),"ON"
    End If
    
    objWebCenterPage.Link("text:=Next >","index:=1").WebElement("innertext:=Next >","index:=0").Click    
    
    Set objData = Nothing
    Set objWebCenterPage = Nothing
End Function



'This function is used to enter data to Loan Information page of webcenter
'@code
'    BIZ_WebCenter_LoanInformation(strRowID)
'@endcode
'@param strRowID - row Id to use in the data sheet

Function BIZ_WebCenter_LoanInformation(strRowID)
    FRM_Logger_ReportInfoEvent "WebCenter Site - Loan Information tab", "Enter data in Loan Information page using 'LoanInformation' datasheet RowId:" & strRowID, null 
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "LoanInformation", strRowID)
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Loan Information","index:=0"),60

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PurposeOfLoan")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*purposeOfLoanDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "PurposeOfLoan")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ExecutedContract")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*hasExecuteContactRadioButton.*","index:=0"), FRM_DS_GetValue(objData, "ExecutedContract")
    End If

	If objWebCenterPage.WebList("html id:=.*loanTypeDropDownList.*","index:=0").Exist(2) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanType")) Then
			GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*loanTypeDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "LoanType")
		End If
    End If
	
	If objWebCenterPage.WebList("html id:=.*amortizationTypeDropDownList.*","index:=0").Exist(2) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AmortizationType")) Then
			GUI_WebList_Select objWebCenterPage.WebList("html id:=.*amortizationTypeDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "AmortizationType")
		End If
    End If
	
	If objWebCenterPage.WebEdit("html id:=.*loanTermTextBox.*","index:=0").Exist(2) Then 
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanTerm")) Then
			GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*loanTermTextBox.*","index:=0"), FRM_DS_GetValue(objData, "LoanTerm")
		End If  
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SubjectPropertyAddress")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*propertyAddressTextBox.*","index:=0"), FRM_DS_GetValue(objData, "SubjectPropertyAddress")
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*cityTextBox.*","index:=0"), FRM_DS_GetValue(objData, "City")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*stateDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "State")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
        strZip = FRM_DS_GetValue(objData, "Zip")
        strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ",".")) 
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*zipTextBox.*","index:=0"), mid(strZip,1,5)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*ExtzipTextBox.*","index:=0"), mid(strZip,6,4)
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyUsage")) Then
        GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*propertyUsageDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "PropertyUsage")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NumberOfUnits")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*unitsTextBox.*","index:=0"), FRM_DS_GetValue(objData, "NumberOfUnits")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "YearBuilt")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*yearBuiltTextBox.*","index:=0"), FRM_DS_GetValue(objData, "YearBuilt")
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PurchasePrice")) Then
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*presentAndPurchasePriceTextBox.*","index:=0"), FRM_DS_GetValue(objData, "PurchasePrice")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EstimatedValue")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*estimatedValueTextBox.*","index:=0"), FRM_DS_GetValue(objData, "EstimatedValue")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanAmount")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*loanAmoutTextBox.*","index:=0"), FRM_DS_GetValue(objData, "LoanAmount")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NameTitleWillBeHeld")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*titleOneTextBox.*","index:=0"), FRM_DS_GetValue(objData, "NameTitleWillBeHeld")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HeldManner")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*mannerDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "HeldManner")
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SourceOfDownPayment")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*sourceOfDownPaymentDownList.*","index:=0"), FRM_DS_GetValue(objData, "SourceOfDownPayment")
    End If  
    objWebCenterPage.Link("text:=Next >","index:=1").WebElement("innertext:=Next >","index:=0").Click
        
    Set objData = Nothing
    Set objWebCenterPage = Nothing
End Function



'This function is used to enter data to Personal Information page of webcenter
'@code
'    BIZ_WebCenter_PersonalInformation(strRowID)
'@endcode
'@param strRowID - row Id to use in the data sheet

Function BIZ_WebCenter_PersonalInformation(strRowID)
    FRM_Logger_ReportInfoEvent "WebCenter Site - Personal Information tab", "Enter data in Personal Information page using 'PersonalInformation' datasheet RowId:" & strRowID, null 
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "PersonalInformation", strRowID)
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Personal Information","index:=0"),60

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MaritalStatus")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*boMaritalStatusDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "MaritalStatus")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DateOfBirth")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boBirthTextBox.*","index:=0"), FRM_DS_GetValue(objData, "DateOfBirth")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NumberOfDependents")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boDependentsTextBox.*","index:=0"), FRM_DS_GetValue(objData, "NumberOfDependents")
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DependentAge")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boAgeTextBox.*","index:=0"), FRM_DS_GetValue(objData, "DependentAge")
    End If      
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SSN")) Then
        strSSN = FRM_DS_GetValue(objData, "SSN")
        strSSN = UTIL_String_RemoveCharacters(strSSN,array("-","(",")"," ","."))
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSocialIDOneTextBox.*","index:=0"), mid(strSSN,1,3)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSocialIDTwoTextBox.*","index:=0"), mid(strSSN,4,2)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*boSocialIDThreeTextBox.*","index:=0"), mid(strSSN,6,4)
    End If    
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomePhone")) Then
        strHomePhone = FRM_DS_GetValue(objData, "HomePhone")
        strHomePhone = UTIL_String_RemoveCharacters(strHomePhone,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boHomePhone.areaCodeTextBox.*","index:=0"), mid(strHomePhone,1,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boHomePhone.prefixTextBox.*","index:=0"), mid(strHomePhone,4,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boHomePhone.suffixTextBox.*","index:=0"), mid(strHomePhone,7,4)
    End If    
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CellPhone")) Then
        strCellPhone = FRM_DS_GetValue(objData, "CellPhone")
        strCellPhone = UTIL_String_RemoveCharacters(strCellPhone,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCellPhone.areaCodeTextBox.*","index:=0"), mid(strCellPhone,1,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCellPhone.prefixTextBox.*","index:=0"), mid(strCellPhone,4,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCellPhone.suffixTextBox.*","index:=0"), mid(strCellPhone,7,4)
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "StreetAddress")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentAddressTextBox.*","index:=0"), FRM_DS_GetValue(objData, "StreetAddress")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentCityTextBox.*","index:=0"), FRM_DS_GetValue(objData, "City")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*boCurrentStateDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "State")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
        strZip = FRM_DS_GetValue(objData, "Zip")
        strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentZipTextBox.*","index:=0"), mid(strZip,1,5)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentExtZipTextBox.*","index:=0"), mid(strZip,6,4)
    End If      
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "YearsAtThisAddress")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentYearsAtTextBox.*","index:=0"), FRM_DS_GetValue(objData, "YearsAtThisAddress")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Months")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*boCurrentMonthsAtTextBox.*","index:=0"), FRM_DS_GetValue(objData, "Months")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RentOrOwn")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*boRentOrOwnDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "RentOrOwn")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MailingAddressDiferent")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*boMailingDifferentAddressRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "MailingAddressDiferent")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FurnishGovernmentMonitoring")) Then 
        GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*boFurnishGoverInfoOptionCheckBox.*","index:=0"),FRM_DS_GetValue(objData, "FurnishGovernmentMonitoring")    
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Sex")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*boSexRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "Sex")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Ethnicity")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*boEthRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "Ethnicity")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Race")) Then    
        GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*boRaceRadioButtonList." & FRM_DS_GetValue(objData, "Race") & ".*","index:=0"),"ON" 
    End If
    
    'Co-Borrower Info    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrMaritalStatus")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*coBoMaritalStatusDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrMaritalStatus")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrDateOfBirth")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoBirthTextBox.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrDateOfBirth")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrNumberOfDependents")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoDependentsTextBox.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrNumberOfDependents")
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrDependentAge")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoAgeTextBox.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrDependentAge")
    End If      
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrSSN")) Then
        strSSN = FRM_DS_GetValue(objData, "CoBorrSSN")
        strSSN = UTIL_String_RemoveCharacters(strSSN,array("-","(",")"," ","."))
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coBoSocialIDOneTextBox.*","index:=0"), mid(strSSN,1,3)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coBoSocialIDTwoTextBox.*","index:=0"), mid(strSSN,4,2)
        GUI_WebEdit_Set  objWebCenterPage.WebEdit("html id:=.*coBoSocialIDThreeTextBox.*","index:=0"), mid(strSSN,6,4)
    End If    
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrHomePhone")) Then
        strHomePhone = FRM_DS_GetValue(objData, "CoBorrHomePhone")
        strHomePhone = UTIL_String_RemoveCharacters(strHomePhone,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoHomePhone.areaCodeTextBox.*","index:=0"), mid(strHomePhone,1,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoHomePhone.prefixTextBox.*","index:=0"), mid(strHomePhone,4,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoHomePhone.suffixTextBox.*","index:=0"), mid(strHomePhone,7,4)
    End If
        
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrCellPhone")) Then
        strCellPhone = FRM_DS_GetValue(objData, "CoBorrCellPhone")
        strCellPhone = UTIL_String_RemoveCharacters(strCellPhone,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCellPhone.areaCodeTextBox.*","index:=0"), mid(strCellPhone,1,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCellPhone.prefixTextBox.*","index:=0"), mid(strCellPhone,4,3)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCellPhone.suffixTextBox.*","index:=0"), mid(strCellPhone,7,4)
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrStreetAddress")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentAddressTextBox.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrStreetAddress")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrCity")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentCityTextBox.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrCity")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrState")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*coBoCurrentStateDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrState")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrZip")) Then
        strZip = FRM_DS_GetValue(objData, "CoBorrZip")
        strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ","."))
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentZipTextBox.*","index:=0"), mid(strZip,1,5)
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentExtZipTextBox.*","index:=0"), mid(strZip,6,4)
    End If      
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrYearsAtThisAddress")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentYearsAtTextBox.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrYearsAtThisAddress")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrMonths")) Then
        GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*coBoCurrentMonthsAtTextBox.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrMonths")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrRentOrOwn")) Then
        GUI_WebList_Select objWebCenterPage.WebList("html id:=.*coBoRentOrOwnDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrRentOrOwn")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrMailingAddressDiferent")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*coBoMailingDifferentAddressRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrMailingAddressDiferent")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrFurnishGovernmentMonitoring")) Then   
        GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*coBoFurnishGoverInfoOptionCheckBox.*","index:=0"),FRM_DS_GetValue(objData, "CoBorrFurnishGovernmentMonitoring")    
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrSex")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*coBoSexRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrSex")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrEthnicity")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("html id:=.*coBoEthRadioButtonList.*","index:=0"), FRM_DS_GetValue(objData, "CoBorrEthnicity")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrRace")) Then  
        GUI_WebCheckbox_Set objWebCenterPage.WebCheckBox("html id:=.*coBoRaceRadioButtonList." & FRM_DS_GetValue(objData, "CoBorrRace") & ".*","index:=0"),"ON" 
    End If  

    objWebCenterPage.Link("text:=Next >","index:=1").WebElement("innertext:=Next >","index:=0").Click
        
    Set objData = Nothing
    Set objWebCenterPage = Nothing
End Function



'This function is used to enter data to Employment & Income page of webcenter
'@code
'    BIZ_WebCenter_EmploymentAndIncome "CND494-1_TC1,CND494-2_TC1|CND494-3_TC1,CND494-4_TC1"
'@endcode
'@param strRowIDs - coma delimited list of row Ids to use for one employee and Pipe delimited for multiple employees in the data sheet

Function BIZ_WebCenter_EmploymentAndIncome(strRowIDs)
    
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Employment & Income","index:=0"),60   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CanProvideProofOfIncome")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*borrowerDocIncomeRadio.*","index:=0"), FRM_DS_GetValue(objData, "CanProvideProofOfIncome")
    End If  
    arrRowIDs = Split(strRowIDs,"|")
    For intEmployee = 0 To Ubound(arrRowIDs)
        strEmployeeJobs = arrRowIDs(intEmployee)
        If NOT strEmployeeJobs = "" Then
            objWebCenterPage.Link("text:=Enter Employment Information","index:="& intEmployee).WebElement("innertext:=Enter Employment Information","index:=0").Click
            GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Enter Employment Information.*","index:=0"),60
        End If      
        arrRowID = Split(strEmployeeJobs,",") 
        For intJob = 0 to ubound(arrRowID)  
            strRowID = arrRowID(intJob)         
            FRM_Logger_ReportInfoEvent "WebCenter Site - Employment & Income tab", "Enter data in Employment & Income page using 'EmploymentAndIncome' datasheet RowId:" & strRowID, null 
            Set objData = FRM_DS_GetTestData("WebCenter_Application", "EmploymentAndIncome", strRowID)
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CurrentPreviousEmployer")) Then
                GUI_WebList_Select  objWebCenterPage.WebList("html id:=.*employmentTypeDpl.*","index:=0"), FRM_DS_GetValue(objData, "CurrentPreviousEmployer")
            End If
    
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EmployerName")) Then
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*employerNameTextBox.*","index:=0"), FRM_DS_GetValue(objData, "EmployerName")
            End If
            
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EmployerAddress")) Then
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*employerAddressTextBox.*","index:=0"), FRM_DS_GetValue(objData, "EmployerAddress")
            End If  
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*cityTextBox.*","index:=0"), FRM_DS_GetValue(objData, "City")
            End If
            
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
                GUI_WebList_Select objWebCenterPage.WebList("html id:=.*stateDpl.*","index:=0"), FRM_DS_GetValue(objData, "State")
            End If
            
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
                strZip = FRM_DS_GetValue(objData, "Zip")
                strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ","."))
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*zipTextBox.*","index:=0"), mid(strZip,1,5)
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*extZipTextBox.*","index:=0"), mid(strZip,6,4)
            End If  
    
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WorkPhone")) Then
                strWorkPhone = FRM_DS_GetValue(objData, "WorkPhone")
                strWorkPhone = UTIL_String_RemoveCharacters(strWorkPhone,array("-","(",")"," ","."))
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*areaCodeTextBox.*","index:=0"), mid(strWorkPhone,1,3)
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*prefixTextBox.*","index:=0"), mid(strWorkPhone,4,3)
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*suffixTextBox.*","index:=0"), mid(strWorkPhone,7,4)
            End If
            
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BusinessType")) Then
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*businessTypeTextBox.*","index:=0"), FRM_DS_GetValue(objData, "BusinessType")
            End If  
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TitlePosition")) Then
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*positionTextBox.*","index:=0"), FRM_DS_GetValue(objData, "TitlePosition")
            End If
    
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SelfEmployed")) Then
                GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*isSelfEmployedDpl.*","index:=0"), FRM_DS_GetValue(objData, "SelfEmployed")
            End If
            
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EmployedFrom")) Then
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*employedStartDateTextBox.*","index:=0"), FRM_DS_GetValue(objData, "EmployedFrom")
            End If  
                If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EmployedTo")) Then
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*employedEndDateTextBox.*","index:=0"), FRM_DS_GetValue(objData, "EmployedTo")
            End If  
            
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MonthlyBaseIncome")) Then
                GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*monthlyBaseIncomeTextBox.*","index:=0"), FRM_DS_GetValue(objData, "MonthlyBaseIncome")
            End If

            If intJob < ubound(arrRowID) Then
                objWebCenterPage.Link("text:=Add Another","index:=1").WebElement("innertext:=Add Another","index:=0").Click
            End If  
        Next
        If NOT strEmployeeJobs = "" Then
            objWebCenterPage.Link("text:=Done","index:=1").WebElement("innertext:=Done","index:=0").Click
            GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Employment & Income","index:=0"),60       
        End If 
    Next    
    Set objData = Nothing
    Set objWebCenterPage = Nothing
End Function



'This function is used to enter data to Assets page of webcenter
'@code
'    BIZ_WebCenter_Assets CND494-1_TC1,CND494-2_TC1"
'@endcode
'@param strRowIDs - coma delimited list of row Ids to use in the data sheet

Function BIZ_WebCenter_Assets(strRowIDs)
    arrRowIDs = Split(strRowIDs,",") 
    intRecords = Ubound(arrRowIDs) + 1
    intProcessed = 0
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Assets and Liabilities","index:=0"),60
    objWebCenterPage.Link("text:=.*Enter Assets.*","index:=1").WebElement("innertext:=.*Enter Assets.*","index:=0").Click
        
    For each strRowID in arrRowIDs  
        Set objData = FRM_DS_GetTestData("WebCenter_Application", "Assets", strRowID)
        FRM_Logger_ReportInfoEvent "WebCenter Site - Assets", "Enter data in Assets page using 'Assets' datasheet RowId:" & strRowID, null    
        GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead2","innertext:=Asset Details","index:=0"),60
          
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AccountAssetType")) Then
            GUI_WebList_Select objWebCenterPage.WebList("name:=.*assetAccountTypeDDl.*","index:=0"), FRM_DS_GetValue(objData, "AccountAssetType")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OwnedBy")) Then
            If objWebCenterPage.WebList("name:=.*ownedByDDL.*","index:=0").Exist(1) Then
                If isNumeric(FRM_DS_GetValue(objData, "OwnedBy")) Then
                   vOwnedBy = cInt(FRM_DS_GetValue(objData, "OwnedBy"))
                Else
                   vOwnedBy =  FRM_DS_GetValue(objData, "OwnedBy")          
                End If
                GUI_WebList_Select objWebCenterPage.WebList("name:=.*ownedByDDL.*","index:=0"),  vOwnedBy 
            End If  
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CashValue")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*cashValueTxt.*","index:=0"), FRM_DS_GetValue(objData, "CashValue")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AccountNumber")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*accountNumberTxt.*","index:=0"), FRM_DS_GetValue(objData, "AccountNumber")
        End If

        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Institution")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*institutionTxt.*","index:=0"), FRM_DS_GetValue(objData, "Institution")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Address")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*addressTxt.*","index:=0"), FRM_DS_GetValue(objData, "Address")
        End If  
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*cityTxt.*","index:=0"), FRM_DS_GetValue(objData, "City")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
            GUI_WebList_Select objWebCenterPage.WebList("html id:=.*stateDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "State")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
            strZip = FRM_DS_GetValue(objData, "Zip")
            strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ","."))
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*zipTxt.*","index:=0"), mid(strZip,1,5)
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*extZipTxt.*","index:=0"), mid(strZip,6,4)
        End If  
        intProcessed = intProcessed + 1
        If intRecords = intProcessed Then
            Exit For
        Else
            objWebCenterPage.Link("text:=Add Another","index:=1").WebElement("innertext:=Add Another","index:=0").Click
        End If      
    Next        
    objWebCenterPage.Link("text:=Done","index:=1").WebElement("innertext:=Done","index:=0").Click
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Assets and Liabilities","index:=0"),60
    
    Set objData = Nothing
    Set objWebCenterPage = Nothing
End Function



'This function is used to enter data to Liabilities page of webcenter
'@code
'    BIZ_WebCenter_Liabilities CND494-1_TC1,CND494-2_TC1"
'@endcode
'@param strRowIDs - coma delimited list of row Ids to use in the data sheet

Function BIZ_WebCenter_Liabilities(strRowIDs)
    arrRowIDs = Split(strRowIDs,",") 
    intRecords = Ubound(arrRowIDs) + 1
    intProcessed = 0
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Assets and Liabilities","index:=0"),60
    objWebCenterPage.Link("text:=.*Enter Liabilities.*","index:=1").WebElement("innertext:=.*Enter Liabilities.*","index:=0").Click
    For each strRowID in arrRowIDs
        FRM_Logger_ReportInfoEvent "WebCenter Site - Liabilities", "Enter data in Liabilities page using 'Liabilities' datasheet RowId:" & strRowID, null 
        Set objData = FRM_DS_GetTestData("WebCenter_Application", "Liabilities", strRowID)
        GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead2","innertext:=Liability Details","index:=0"),60
          
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LiabilityType")) Then
            GUI_WebList_Select objWebCenterPage.WebList("name:=.*liabilityTypeDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "LiabilityType")
        End If
        
                
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OwnedBy")) Then
            If objWebCenterPage.WebList("name:=.*ownedByDropDownList.*","index:=0").Exist(1) Then
                If isNumeric(FRM_DS_GetValue(objData, "OwnedBy")) Then
                   vlOwnedBy = cInt(FRM_DS_GetValue(objData, "OwnedBy"))
                Else
                   vlOwnedBy = FRM_DS_GetValue(objData, "OwnedBy")          
                End If
                GUI_WebList_Select objWebCenterPage.WebList("name:=.*ownedByDropDownList.*","index:=0"),  vlOwnedBy 
            End If  
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AccountNumber")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*accountNumberTxt.*","index:=0"), FRM_DS_GetValue(objData, "AccountNumber")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Balance")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*balanceTxt.*","index:=0"), FRM_DS_GetValue(objData, "Balance")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MonthlyPayment")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*monthlyPaymentTxt.*","index:=0"), FRM_DS_GetValue(objData, "MonthlyPayment")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MonthsLeftToPay")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*monthsLeftTxt.*","index:=0"), FRM_DS_GetValue(objData, "MonthsLeftToPay")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsPaidByClose")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*isPaidByClose.*","index:=0"), FRM_DS_GetValue(objData, "IsPaidByClose")
        End If

        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Institution")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*insititionTxt.*","index:=0"), FRM_DS_GetValue(objData, "Institution")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Address")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*addressTxt.*","index:=0"), FRM_DS_GetValue(objData, "Address")
        End If  
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*cityTxt.*","index:=0"), FRM_DS_GetValue(objData, "City")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
            GUI_WebList_Select objWebCenterPage.WebList("html id:=.*stateDropDownList.*","index:=0"), FRM_DS_GetValue(objData, "State")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
            strZip = FRM_DS_GetValue(objData, "Zip")
            strZip = UTIL_String_RemoveCharacters(strZip,array("-","(",")"," ","."))
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*zipTxt.*","index:=0"), mid(strZip,1,5)
            GUI_WebEdit_Set objWebCenterPage.WebEdit("html id:=.*extZipTxt.*","index:=0"), mid(strZip,6,4)
        End If  
        intProcessed = intProcessed + 1
        If intRecords = intProcessed Then
            Exit For
        Else
            objWebCenterPage.Link("text:=Add Another","index:=1").WebElement("innertext:=Add Another","index:=0").Click
        End If
    Next    
    objWebCenterPage.Link("text:=Done","index:=1").WebElement("innertext:=Done","index:=0").Click
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Assets and Liabilities","index:=0"),60
        
    Set objData = Nothing
    Set objWebCenterPage = Nothing
        
End Function



'This function is used to enter data to Declaration page of webcenter
'@code
'    BIZ_WebCenter_Declarations (strRowID)
'@endcode
'@param strRowID - row Id to use in the data sheet

Function BIZ_WebCenter_Declarations (strRowID)
    FRM_Logger_ReportInfoEvent "WebCenter Site - Declarations ", "Enter data in Declarations page using 'Declarations' datasheet RowId:" & strRowID, null 
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "Declarations", strRowID)
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=WebAppHead1","innertext:=Declarations","index:=0"),60
        
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsOutstandingAgainst")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsOutstandingAgainst.*","index:=0"), "boIsOutstandingAgainst" & FRM_DS_GetValue(objData, "IsOutstandingAgainst") & "RB"
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HasDeclaredBankruptPast7Years")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boHasDeclaredBankruptPast7Years.*","index:=0"), "boHasDeclaredBankruptPast7Years" & FRM_DS_GetValue(objData, "HasDeclaredBankruptPast7Years") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HasPropertyForeclosedPast7Years")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boHasPropertyForeclosedPast7Years.*","index:=0"), "boHasPropertyForeclosedPast7Years" & FRM_DS_GetValue(objData, "HasPropertyForeclosedPast7Years") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsPartyToLawsuit")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsPartyToLawsuit.*","index:=0"), "boIsPartyToLawsuit" & FRM_DS_GetValue(objData, "IsPartyToLawsuit") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsObligatedOnLoan")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsObligatedOnLoan.*","index:=0"), "boIsObligatedOnLoan" & FRM_DS_GetValue(objData, "IsObligatedOnLoan") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsDelinquentFederalDebt")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsDelinquentFederalDebt.*","index:=0"), "boIsDelinquentFederalDebt" & FRM_DS_GetValue(objData, "IsDelinquentFederalDebt") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsObligateToPayAlimony")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsObligateToPayAlimony.*","index:=0"), "boIsObligateToPayAlimony" & FRM_DS_GetValue(objData, "IsObligateToPayAlimony") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsDownPaymentBorrowed")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsDownPaymentBorrowed.*","index:=0"), "boIsDownPaymentBorrowed" & FRM_DS_GetValue(objData, "IsDownPaymentBorrowed") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsCoMakerOnANote")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsCoMakerOnANote.*","index:=0"), "boIsCoMakerOnANote" & FRM_DS_GetValue(objData, "IsCoMakerOnANote") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsUSCitizen")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsUSCitizen.*","index:=0"), "boIsUSCitizen" & FRM_DS_GetValue(objData, "IsUSCitizen") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsPermanentResidentAlien")) Then
       If NOT objWebCenterPage.WebRadioGroup("name:=.*boIsPermanentResidentAlien.*","index:=0").GetROProperty("disabled") = 1 Then
          GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsPermanentResidentAlien.*","index:=0"), "boIsPermanentResidentAlien" & FRM_DS_GetValue(objData, "IsPermanentResidentAlien") & "RB"
       End If           
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IsIntendToOccupyTheProperty")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boIsIntendToOccupyTheProperty.*","index:=0"), "boIsIntendToOccupyTheProperty" & FRM_DS_GetValue(objData, "IsIntendToOccupyTheProperty") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HasOwnershipInterestInAProperty")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*boHasOwnershipInterestInAProperty.*","index:=0"), "boHasOwnershipInterestInAProperty" & FRM_DS_GetValue(objData, "HasOwnershipInterestInAProperty") & "RB"
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyTypeYouOwn")) Then
        If objWebCenterPage.WebList("name:=.*boPropertyTypeYouOwnDDL.*","index:=0").Exist(1) Then
            GUI_WebList_Select objWebCenterPage.WebList("name:=.*boPropertyTypeYouOwnDDL.*","index:=0"),  FRM_DS_GetValue(objData, "PropertyTypeYouOwn") 
        End If  
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HoldTitleToHome")) Then
        If objWebCenterPage.WebList("name:=.*boHoldTitleToHomeDDL.*","index:=0").Exist(1) Then
            GUI_WebList_Select objWebCenterPage.WebList("name:=.*boHoldTitleToHomeDDL.*","index:=0"),  FRM_DS_GetValue(objData, "HoldTitleToHome") 
        End If  
    End If  
    
	'Co-Borrower Declarations
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsOutstandingAgainst")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsOutstandingAgainst.*","index:=0"), "coIsOutstandingAgainst" & FRM_DS_GetValue(objData, "CoIsOutstandingAgainst") & "RB"
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoHasDeclaredBankruptPast7Years")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coHasDeclaredBankruptPast7Years.*","index:=0"), "coHasDeclaredBankruptPast7Years" & FRM_DS_GetValue(objData, "CoHasDeclaredBankruptPast7Years") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoHasPropertyForeclosedPast7Years")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coHasPropertyForeclosedPast7Years.*","index:=0"), "coHasPropertyForeclosedPast7Years" & FRM_DS_GetValue(objData, "CoHasPropertyForeclosedPast7Years") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsPartyToLawsuit")) Then
            GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsPartyToLawsuit.*","index:=0"), "coIsPartyToLawsuit" & FRM_DS_GetValue(objData, "CoIsPartyToLawsuit") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsObligatedOnLoan")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsObligatedOnLoan.*","index:=0"), "coIsObligatedOnLoan" & FRM_DS_GetValue(objData, "CoIsObligatedOnLoan") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsDelinquentFederalDebt")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsDelinquentFederalDebt.*","index:=0"), "coIsDelinquentFederalDebt" & FRM_DS_GetValue(objData, "CoIsDelinquentFederalDebt") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsObligateToPayAlimony")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsObligateToPayAlimony.*","index:=0"), "coIsObligateToPayAlimony" & FRM_DS_GetValue(objData, "CoIsObligateToPayAlimony") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsDownPaymentBorrowed")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsDownPaymentBorrowed.*","index:=0"), "coIsDownPaymentBorrowed" & FRM_DS_GetValue(objData, "CoIsDownPaymentBorrowed") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsCoMakerOnANote")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsCoMakerOnANote.*","index:=0"), "coIsCoMakerOnANote" & FRM_DS_GetValue(objData, "CoIsCoMakerOnANote") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsUSCitizen")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsUSCitizen.*","index:=0"), "coIsUSCitizen" & FRM_DS_GetValue(objData, "CoIsUSCitizen") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsPermanentResidentAlien")) Then
		If NOT objWebCenterPage.WebRadioGroup("name:=.*coIsPermanentResidentAlien.*","index:=0").GetROProperty("disabled") = 1 Then
			GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsPermanentResidentAlien.*","index:=0"), "coIsPermanentResidentAlien" & FRM_DS_GetValue(objData, "CoIsPermanentResidentAlien") & "RB"
		End If           
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoIsIntendToOccupyTheProperty")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coIsIntendToOccupyTheProperty.*","index:=0"), "coIsIntendToOccupyTheProperty" & FRM_DS_GetValue(objData, "CoIsIntendToOccupyTheProperty") & "RB"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoHasOwnershipInterestInAProperty")) Then
        GUI_WebRadioGroup_Select objWebCenterPage.WebRadioGroup("name:=.*coHasOwnershipInterestInAProperty.*","index:=0"), "coHasOwnershipInterestInAProperty" & FRM_DS_GetValue(objData, "CoHasOwnershipInterestInAProperty") & "RB"
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoPropertyTypeYouOwn")) Then
        If objWebCenterPage.WebList("name:=.*coPropertyTypeYouOwnDDL.*","index:=0").Exist(1) Then
            GUI_WebList_Select objWebCenterPage.WebList("name:=.*coPropertyTypeYouOwnDDL.*","index:=0"),  FRM_DS_GetValue(objData, "CoPropertyTypeYouOwn") 
        End If  
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoHoldTitleToHome")) Then
        If objWebCenterPage.WebList("name:=.*coHoldTitleToHomeDDL.*","index:=0").Exist(1) Then
            GUI_WebList_Select objWebCenterPage.WebList("name:=.*coHoldTitleToHomeDDL.*","index:=0"),  FRM_DS_GetValue(objData, "CoHoldTitleToHome") 
        End If  
    End If          
    objWebCenterPage.Link("text:=.*Next.*","index:=1").WebElement("innertext:=.*Next.*","index:=0").Click        
    Set objData = Nothing
    Set objWebCenterPage = Nothing
	
End Function



'This function is used to click correct button on eConsent Page
'@code
'    BIZ_WebCenter_Consent "I Agree"
'@endcode
'@param isAgree - string "I Agree" or  " I Do Not Agree"

Function BIZ_WebCenter_Consent(isAgree)

    FRM_Logger_ReportInfoEvent "WebCenter Site - Consent", "Your Consent To Do Business Electronically. Clicked: "&isAgree , null 
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=header","innertext:=.*Your Consent.*","index:=0"),60   
    If isAgree = "Skip this Step" Then
		objWebCenterPage.Link("text:=Skip this Step","index:=0").Click
	Else	
		objWebCenterPage.Link("text:=.*"&isAgree&".*","index:=1").WebElement("innertext:=.*"&isAgree&".*","index:=0").Click
    End If
	Set objWebCenterPage = Nothing
	
End Function



'This function is used to Submit application by clicking on Submit button
'@code
'    BIZ_WebCenter_SubmitApplication()
'@endcode

Function BIZ_WebCenter_SubmitApplication()

    FRM_Logger_ReportInfoEvent "WebCenter Site - Submit", "Click Submit button on Summary page", null 
    Set objWebCenterPage = Browser("name:=Ellie Mae.*").Page("title:=Ellie Mae.*")
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("class:=.*WebAppHead1.*","innertext:=Summary","index:=0"),60   
    objWebCenterPage.Link("text:=.*Submit.*","index:=1").WebElement("innertext:=.*Submit.*","index:=0").Click
    GUI_Object_WaitTillExistX objWebCenterPage.WebElement("html id:=.*lblHeaderMessage.*","innertext:=Thank You","index:=0"),60
    
    If objWebCenterPage.WebElement("html id:=.*lblHeaderMessage.*","innertext:=Thank You","index:=0").Exist(1) and _
        objWebCenterPage.Link("text:=Return to Home Page","index:=0").Exist(1) Then
 
        FRM_Logger_ReportPassEvent "WebCenter - Application Submitted", "Application is submitted with successful message and link to 'Return to Home page' available", null 
    Else
        FRM_Logger_ReportFailEvent "WebCenter - Application Submitted", "Application is NOT submitted or submitted with issues ", null  
    End If
    Set objWebCenterPage = Nothing
	
End Function



'This function is used to Create New Account on E-mail from webcenter response. Page opened using link from e-mail
'@code
'    BIZ_WebCenter_CreateNewAccount (strRowID)
'@endcode
'@param strRowID - row id to use for data from datasheet

Function BIZ_WebCenter_CreateNewAccount (strRowID)

    'Create New Account Page must be opened before function call
    FRM_Logger_ReportInfoEvent "Create New Account", "Provide values for required details for a new account", null
    Set objNewAccountPage = Browser("name:=.*Ellie Mae.*").Page("title:=.*Ellie Mae.*")
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "LoanInformation", strRowID)
    GUI_Object_WaitTillExistX objNewAccountPage.WebEdit("name:=.*textboxAddress.*"),60
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SubjectPropertyAddress")) Then
        strNumber = split(FRM_DS_GetValue(objData, "SubjectPropertyAddress")," ")(0)
        GUI_WebEdit_Set objNewAccountPage.WebEdit("name:=.*textboxAddress.*"), strNumber
    End If	
    Set objData = Nothing
	
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "Basic", strRowID)
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerFirstName")) Then       
        GUI_WebEdit_Set objNewAccountPage.WebEdit("name:=.*newFirstNameTextBox.*"), FRM_DS_GetValue(objData, "BorrowerFirstName")
    End If   
    GUI_WebEdit_Set  objNewAccountPage.WebEdit("html id:=.*newLastNameTextBox.*","index:=0"), FRM_RT_GetPropValue("BorrowerLastName", True)      
    objNewAccountPage.WebEdit("name:=.*newPasswordTextBox.*").Set  FRM_DS_GetValue(objData, "BorrowerEmailPassword")       
    objNewAccountPage.WebEdit("name:=.*newReEnterPasswordTextBox.*").Set FRM_DS_GetValue(objData, "BorrowerEmailPassword")           
    objNewAccountPage.Link("text:=.*Create New Account.*").WebElement("innertext:=.*Create New Account.*").Click      
    Set objData = Nothing
	
    If (objNewAccountPage.WebElement("class:=.*paddingBottom.*","innertext:=Create New Account").Exist(10) and _
        objNewAccountPage.WebElement("html tag:=TD","innertext:=.*Next steps:.*","index:=0").Exist(5)) OR _
        objNewAccountPage.WebElement("class:=Header5","innertext:=Loan Detail","index:=0").Exist(5) OR _
        objNewAccountPage.WebElement("innertext:=Check Loan Status","index:=0").Exist(5)       Then  ' for QA
        FRM_Logger_ReportPassEvent "Provide values for a New Account", "'Create New Account' page is displayed with the email request is sent and Next steps details ", null 
    Else
        FRM_Logger_ReportFailEvent "Provide values for a New Account", "Create New Account' page is NOT displayed", null 
    End If

End Function



'This function is used to Create New Account on E-mail from webcenter response. Page opened using link from e-mail
'@code
'    BIZ_WebCenter_AccountDelete(strRowID,boolDelete)
'@endcode
'@param strRowID - row id to use for data from datasheet
'@param boolDelete - true/false to delete account

Function BIZ_WebCenter_AccountDelete(strRowID)
        BIZ_WebCenter_OpenSite strRowID
        Set objWebCenterPage = Browser("name:=.*Ellie Mae.*").Page("title:=.*Ellie Mae.*")
        objWebCenterPage.Link("text:=Log.*","index:=0").Click
        BIZ_WebCenter_LogIn strRowID
        boolStop = false
        If objWebCenterPage.WebElement("innertext:=The email or password is invalid.*","html id:=.*labelError.*").Exist(3) OR _
           objWebCenterPage.WebElement("innertext:=Account not activated.*","html id:=.*labelError.*").Exist(3) Then
           boolStop = true
        End If
        If NOT boolStop Then
            If objWebCenterPage.Link("text:=My Account.*","index:=0").Exist(5) Then
                objWebCenterPage.Link("text:=My Account.*","index:=0").Click    
            End If
            If objWebCenterPage.Link("text:=Delete Account.*","index:=0").Exist(5) Then
                objWebCenterPage.Link("text:=Delete Account.*","index:=0").Click    
            End If  
            If objWebCenterPage.WebCheckBox("name:=.*yesCheckBox.*","index:=0").Exist(5) Then
                objWebCenterPage.WebCheckBox("name:=.*yesCheckBox.*","index:=0").Set "ON"   
            End If  
            objWebCenterPage.Link("text:=.*Delete Account.*","html id:=.*delButton.linkButton.*").WebElement("innertext:=.*Delete Account.*","index:=0").Click
            If objWebCenterPage.WebElement("class:=.*Header.*","innertext:=.*Account Deleted.*","index:=0").Exist(15) Then
                FRM_Logger_ReportPassEvent "Account Deleted", "User deleted WebCenter account", null    
            End If
        End If    
End Function



'This function is used to Log Out WebCenter Account 
'@code
'    BIZ_WebCenter_LogOut()
'@endcode
Function BIZ_WebCenter_LogOut()
	Dim objBrowser, objAccountPage
    If(GUI_Object_IsExist(Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0"))) Then 
		Set objBrowser = Browser("name:=.*Ellie Mae.*", "index:=0")
		Set objAccountPage = objBrowser.Page("title:=.*Ellie Mae.*", "index:=0")
	ElseIf(GUI_Object_IsExist(Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0"))) Then
		Set objBrowser =  Browser("name:=.*Mortgage.*", "index:=0")
		Set objAccountPage = objBrowser.Page("title:=.*Mortgage.*", "index:=0")
	End If
    objAccountPage.Link("text:=Log Out","index:=0").Click
	Wait g_TinyWaitSmall
	objBrowser.Close()
    Set objAccountPage = Nothing
    FRM_Logger_ReportInfoEvent "Log Out Loan Center", "User Logs Out the Loan Center", null
End Function



'This function is used to Log In SWebCenter Account 
'@code
'    BIZ_WebCenter_LogIn(strRowID)
'@endcode
'@param strRowID - row id to use for data from datasheet

Function BIZ_WebCenter_LogIn(strRowID)
    FRM_Logger_ReportInfoEvent "Log In WebCenter Account", "User Log In WebCenter account", null
    Set objData = FRM_DS_GetTestData("Global_Data", "Website", strRowID)
    Set objAccountPage = Browser("name:=.*Ellie Mae.*").Page("title:=.*Ellie Mae.*")
    If NOT objAccountPage.Exist(2) Then
        BIZ_WebCenter_OpenSite (strRowID)
        GUI_Object_WaitTillExistX objAccountPage,120
        objAccountPage.Link("text:=Log.*","index:=0").Click
    End If  
    
    strEmail = FRM_DS_GetValue(objData, "EmailAccount")
    strPwd = FRM_DS_GetValue(objData, "Password")
    j = 0
    boolExit = false
    Do
        If objAccountPage.WebEdit("name:=.*textboxEmail.*").Exist(1) Then
            boolExit = true   
        End If  
        If objAccountPage.Link("text:=.*New Account.*","html id:=.*linkButton.*","index:=0").Exist(1) Then
            boolExit = true   
        End If  
        If objAccountPage.Link("text:=.*Login.*","index:=0").Exist(1) Then
            boolExit = true   
        End If

    	j = j + 1
        If boolExit or j > 120 Then
           Exit Do
        End If 
   
    Loop    
	
    If objAccountPage.WebEdit("name:=.*textboxEmail.*","index:=0").Exist(10) Then
       objAccountPage.WebEdit("name:=.*textboxEmail.*","index:=0").Set strEmail
    End If              
    If objAccountPage.Link("text:=.*New Account.*","html id:=.*linkButton.*","index:=0").Exist(2) Then
        objAccountPage.WebEdit("name:=.*passwordTextBox.*").Set strPwd 
        objAccountPage.Link("text:=.*New Account.*").WebElement("innertext:=.*New Account.*").Click 
        
        FRM_Logger_ReportInfoEvent "Create New WebCenter Account", strEmail & "," & strPwd, null                
    ElseIf objAccountPage.Link("text:=.*Login.*","index:=0").Exist(2) Then
    
        objAccountPage.WebEdit("name:=.*textboxPassword.*").Set strPwd
        objAccountPage.Link("text:=.*Login.*","index:=0").WebElement("innertext:=.*Login.*","index:=0").Click 
        
        FRM_Logger_ReportInfoEvent "Log in to WebCenter", strEmail & "," & strPwd, null
    End If
    
    Set objData = Nothing
    Set objAccountPage = Nothing
        
End Function



'This function is used to refresh first row in e-mail box of GMAIL Account in order subject line is updated with new e-mail subject. Happens because e-mails are groupped.
'@code
'    BIZ_WebCenter_RefreshFirstEMail(strRowID)
'@endcode
'@param strRowID - row id to use for data from datasheet

Function BIZ_WebCenter_RefreshFirstEMail(strRowID)

    Set objData = FRM_DS_GetTestData("WebCenter_Application", "Basic", strRowID)
    strBorrEMail = FRM_DS_GetValue(objData, "BorrowerEmail")
        
    GUI_Browser_OpenUrl "gmail.com"  
    Set objGmail = Browser("name:=.*Gmail.*").Page("title:=.*Gmail.*","index:=0") 
    
    wait 5 ' delay to have a time to receive e-mail
    GUI_Object_WaitTillExistX objGmail,120
    
    Set objGoogle = Browser("name:=.*Google.*").Page("title:=.*Google.*","index:=0") 
    If objGmail.WebElement("html id:=reauthEmail","index:=0").Exist(2)Then
        If NOT objGmail.WebElement("html id:=reauthEmail","index:=0").GetROProperty("innertext") = strBorrEMail Then
            objGmail.Link("text:=Sign in with a different account","index:=0").Click
            wait 1
            If objGoogle.WebButton("name:=.*"&strBorrEMail& ".*","index:=0").WebElement("innertext:=.*"&strBorrEMail& ".*","index:=0").Exist(2) Then
               objGoogle.WebButton("name:=.*"&strBorrEMail& ".*","index:=0").WebElement("innertext:=.*"&strBorrEMail& ".*","index:=0").Click
            Else                           
               objGoogle.Link("text:=Add account","index:=0").Click               
            End If 
        End If
        Set objGoogle = Nothing
    End If
    If objGmail.WebEdit("name:=Email").Exist(2) and _
       NOT objGmail.WebElement("html id:=reauthEmail","innertext:=" & strBorrEMail).Exist(2)Then
        If objGmail.WebEdit("name:=Email").GetROproperty("visible") Then
            objGmail.WebEdit("name:=Email").Set strBorrEMail
            wait 1
            objGmail.WebButton("name:=Next").Click
        End If
    End If
    wait 5
    If objGmail.WebEdit("name:=Passwd").Exist(2) Then
        If objGmail.WebEdit("name:=Passwd").GetROproperty("visible") Then
            objGmail.WebEdit("name:=Passwd").Set FRM_DS_GetValue(objData, "BorrowerEmailPassword")
            wait 2
            objGmail.WebCheckBox("name:=PersistentCookie","index:=0").Set "OFF"
            wait 2
            objGmail.WebButton("name:=Sign in").Click
        End If
    End If
    wait 10
    'in case if gmail box already  opened
    GUI_Browser_Refresh
    'Browser("name:=.*Gmail.*").Refresh
    wait 2
    strBorrowerLName = FRM_RT_GetPropValue("BorrowerLastName", True)
    Set objMailTableBrowserF = objGmail.WebTable("class:=F cf zt","index:=0")
    Set objMailTableBrowserT = objGmail.WebTable("class:=th","index:=0")
    strBrowser = ""
    If objMailTableBrowserF.exist(1) Then
       Set objMailTable =  objMailTableBrowserF
	   strBrowser = "F"
    ElseIf objMailTableBrowserT.exist(1) Then 
       Set objMailTable =  objMailTableBrowserT
	   strBrowser = "T"
    End If
    Set objMailTableBrowserF = Nothing
    Set objMailTableBrowserT = Nothing
    intEMailRows = objMailTable.RowCount
    intEMailsColumns = objMailTable.ColumnCount(1)
    isFoundMail = false
    'To find e-mail search latest 3 e-mails first. Loop 5 times and refresh the browser after each loop. 
    'If not found e-mail then search all e-mails in the box.
	
	For iColumn = 3 To intEMailsColumns
        If NOT trim(objMailTable.GetCellData(1,iColumn)) = "" Then
			objMailTable.ChildItem(1,iColumn,"WebElement",0).Click  
		    wait 5
			If strBrowser = "F" then
			   If objGmail.WebElement("class:=ar6 T-I-J3 J-J5-Ji","index:=0").Exist(2) Then
				  objGmail.WebElement("class:=ar6 T-I-J3 J-J5-Ji","index:=0").Click
				  wait 2
			   End If
			End If
			If strBrowser = "T" then
			   If objGmail.Link("text:=.*Back to Inbox.*","index:=0").Exist(2) Then
				  objGmail.Link("text:=.*Back to Inbox.*","index:=0").Click
				  wait 2
			   End If
			End If				
			GUI_Browser_Refresh
			'Browser("name:=.*Gmail.*").Refresh	
            Exit For			
        End If
    Next

    'GUI_Browser_CloseAll
    UTIL_Win_CloseProcesses "chrome.exe"
    UTIL_Win_CloseProcesses "iexplore.exe"
    UTIL_Win_CloseProcesses  "firefox.exe"
 
End Function



'This function is used to read GMAIL Account e-mails for webcenter
'@code
'    BIZ_WebCenter_ReadGmailAndNavigateToAccountPage(strRowID, eType)
'@endcode
'@param strRowID - row id to use for data from datasheet
'@param eType - email type written in subject

Function BIZ_WebCenter_ReadGmailAndNavigateToAccountPage(strRowID, eType)
    BIZ_WebCenter_ReadGmailAndNavigateToAccountPage = true 
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "Basic", strRowID)
    strBorrEMail = FRM_DS_GetValue(objData, "BorrowerEmail")
        
    GUI_Browser_OpenUrl "gmail.com"  
    Set objGmail = Browser("name:=.*Gmail.*").Page("title:=.*Gmail.*","index:=0") 
    
    wait 5 ' delay to have a time to receive e-mail
    GUI_Object_WaitTillExistX objGmail,120
    
    Set objGoogle = Browser("name:=.*Google.*").Page("title:=.*Google.*","index:=0") 
    If objGmail.WebElement("html id:=reauthEmail","index:=0").Exist(2)Then
        If NOT objGmail.WebElement("html id:=reauthEmail","index:=0").GetROProperty("innertext") = strBorrEMail Then
            objGmail.Link("text:=Sign in with a different account","index:=0").Click
            wait 1
            If objGoogle.WebButton("name:=.*"&strBorrEMail& ".*","index:=0").WebElement("innertext:=.*"&strBorrEMail& ".*","index:=0").Exist(2) Then
               objGoogle.WebButton("name:=.*"&strBorrEMail& ".*","index:=0").WebElement("innertext:=.*"&strBorrEMail& ".*","index:=0").Click
            Else                           
               objGoogle.Link("text:=Add account","index:=0").Click               
            End If 
        End If
        Set objGoogle = Nothing
    End If
    If objGmail.WebEdit("name:=Email").Exist(2) and _
       NOT objGmail.WebElement("html id:=reauthEmail","innertext:=" & strBorrEMail).Exist(2)Then
        If objGmail.WebEdit("name:=Email").GetROproperty("visible") Then
            objGmail.WebEdit("name:=Email").Set strBorrEMail
            wait 1
            objGmail.WebButton("name:=Next").Click
        End If
    End If
    wait 5
    If objGmail.WebEdit("name:=Passwd").Exist(2) Then
        If objGmail.WebEdit("name:=Passwd").GetROproperty("visible") Then
            objGmail.WebEdit("name:=Passwd").Set FRM_DS_GetValue(objData, "BorrowerEmailPassword")
            wait 2
            objGmail.WebCheckBox("name:=PersistentCookie","index:=0").Set "OFF"
            wait 2
            objGmail.WebButton("name:=Sign in").Click
        End If
    End If
    wait 10
    'in case if gmail box already  opened
    GUI_Browser_Refresh
    'Browser("name:=.*Gmail.*").Refresh
    wait 10
    strBorrowerLName = FRM_RT_GetPropValue("BorrowerLastName", True)
    Set objMailTableBrowserF = objGmail.WebTable("class:=F cf zt","index:=0")
    Set objMailTableBrowserT = objGmail.WebTable("class:=th","index:=0")
    
    If objMailTableBrowserF.exist(1) Then
       Set objMailTable =  objMailTableBrowserF
    ElseIf objMailTableBrowserT.exist(1) Then 
       Set objMailTable =  objMailTableBrowserT
    End If
    Set objMailTableBrowserF = Nothing
    Set objMailTableBrowserT = Nothing
    intEMailRows = objMailTable.RowCount
    intEMailsColumns = objMailTable.ColumnCount(1)
    isFoundMail = false
    'To find e-mail search latest 3 e-mails first. Loop 5 times and refresh the browser after each loop. 
    'If not found e-mail then search all e-mails in the box.
	If eType =  "New User Account Created" Then
    	strBorrowerLName = "Thank you for creating"
    End If

    For intLoop = 1 to 1
	    wait 5
        For iMail = 1 To 15
            For iColumn = 1 To intEMailsColumns
               If instr(objMailTable.GetCellData(iMail,iColumn),strBorrowerLName) > 0 Then
                If instr(objMailTable.ChildItem(iMail,iColumn,"WebElement",0).GetROProperty("innertext"),strBorrowerLName) > 0 and _
                   instr(objMailTable.ChildItem(iMail,iColumn,"WebElement",0).GetROProperty("innertext"),eType) Then
                    objMailTable.ChildItem(iMail,iColumn,"WebElement",0).Click  
                    isFoundMail = true
                    Exit For
                End If
               End If
            Next
            If isFoundMail Then
                Exit For    
            End If
        Next    
        If isFoundMail Then
            Exit For    
        End If
        wait 10

    Next
    
    If  NOT isFoundMail Then        
        BIZ_WebCenter_ReadGmailAndNavigateToAccountPage = False  
        'GUI_Browser_CloseAll
        UTIL_Win_CloseProcesses "chrome.exe"
        UTIL_Win_CloseProcesses "iexplore.exe"
        UTIL_Win_CloseProcesses  "firefox.exe"		
		FRM_Logger_ReportInfoEvent "User reads " &eType& " eMail and clicks URL.", "User did not receive email ", null  	
    Else 
		If objGmail.Link("text:=.*mortgage.*","index:=0").exist(10) Then
			strURL = objGmail.Link("text:=.*mortgage.*","index:=0").GetROProperty("text")
			'GUI_Browser_CloseAll
			UTIL_Win_CloseProcesses "chrome.exe"
			UTIL_Win_CloseProcesses "iexplore.exe"
			UTIL_Win_CloseProcesses  "firefox.exe"
			wait 1
			GUI_Browser_OpenUrl strURL 
			FRM_Logger_ReportPassEvent "User reads " &eType& " eMail and clicks URL." , "EMail triggered asking " & eType & ". URL clicked: " & strURL, null 
		End If
	End If
    Set objMailTable = Nothing
    Set objGmail = Nothing
    
End Function



'This function is used to verify if user received e-mail
'@code
'    BIZ_WebCenter_VerifyEmailTriggeredAndReceived(strRowID, eType)
'@endcode
'@param strRowID - row id to use for data from datasheet
'@param eType - email type written in subject

Function BIZ_WebCenter_VerifyEmailTriggeredAndReceived(strRowID, eType)
    BIZ_WebCenter_RefreshFirstEMail strRowID
    Set objData = FRM_DS_GetTestData("WebCenter_Application", "Basic", strRowID)
    strBorrEMail = FRM_DS_GetValue(objData, "BorrowerEmail")
        
    GUI_Browser_OpenUrl "gmail.com"  
    Set objGmail = Browser("name:=.*Gmail.*").Page("title:=.*Gmail.*","index:=0") 
    
    wait 5 ' delay to have a time to receive e-mail
    GUI_Object_WaitTillExistX objGmail,120
    
    Set objGoogle = Browser("name:=.*Google.*").Page("title:=.*Google.*","index:=0") 
    If objGmail.WebElement("html id:=reauthEmail","index:=0").Exist(2)Then
        If NOT objGmail.WebElement("html id:=reauthEmail","index:=0").GetROProperty("innertext") = strBorrEMail Then
            objGmail.Link("text:=Sign in with a different account","index:=0").Click
            wait 1
            If objGoogle.WebButton("name:=.*"&strBorrEMail& ".*","index:=0").WebElement("innertext:=.*"&strBorrEMail& ".*","index:=0").Exist(2) Then
               objGoogle.WebButton("name:=.*"&strBorrEMail& ".*","index:=0").WebElement("innertext:=.*"&strBorrEMail& ".*","index:=0").Click
            Else                           
               objGoogle.Link("text:=Add account","index:=0").Click               
            End If 
        End If
        Set objGoogle = Nothing
    End If
    If objGmail.WebEdit("name:=Email").Exist(2) and _
       NOT objGmail.WebElement("html id:=reauthEmail","innertext:=" & strBorrEMail).Exist(2)Then
        If objGmail.WebEdit("name:=Email").GetROproperty("visible") Then
            objGmail.WebEdit("name:=Email").Set strBorrEMail
            wait 1
            objGmail.WebButton("name:=Next").Click
        End If
    End If
    wait 5
    If objGmail.WebEdit("name:=Passwd").Exist(2) Then
        If objGmail.WebEdit("name:=Passwd").GetROproperty("visible") Then
            objGmail.WebEdit("name:=Passwd").Set FRM_DS_GetValue(objData, "BorrowerEmailPassword")
            wait 2
            objGmail.WebCheckBox("name:=PersistentCookie","index:=0").Set "OFF"
            wait 2
            objGmail.WebButton("name:=Sign in").Click
        End If
    End If
    wait 10
    'in case if gmail box already  opened
    GUI_Browser_Refresh
    'Browser("name:=.*Gmail.*").Refresh
    wait 2
    strBorrowerLName = FRM_RT_GetPropValue("BorrowerLastName", True)
    Set objMailTableBrowserF = objGmail.WebTable("class:=F cf zt","index:=0")
    Set objMailTableBrowserT = objGmail.WebTable("class:=th","index:=0")
    strBrowser = ""
    If objMailTableBrowserF.exist(1) Then
       Set objMailTable =  objMailTableBrowserF
	   strBrowser = "F"
    ElseIf objMailTableBrowserT.exist(1) Then 
       Set objMailTable =  objMailTableBrowserT
	   strBrowser = "T"
    End If
    Set objMailTableBrowserF = Nothing
    Set objMailTableBrowserT = Nothing
    intEMailRows = objMailTable.RowCount
    intEMailsColumns = objMailTable.ColumnCount(1)
    isFoundMail = false
    'To find e-mail search latest 3 e-mails first. Loop 5 times and refresh the browser after each loop. 
    'If not found e-mail then search all e-mails in the box.
	
    For intLoop = 1 to 5
        For iMail = 1 To 3
            For iColumn = 3 To intEMailsColumns
               If instr(objMailTable.GetCellData(iMail,iColumn),strBorrowerLName) > 0 Then
                If instr(objMailTable.ChildItem(iMail,iColumn,"WebElement",0).GetROProperty("innertext"),strBorrowerLName) > 0 and _
                   instr(objMailTable.ChildItem(iMail,iColumn,"WebElement",0).GetROProperty("innertext"),eType) Then
                    isFoundMail = true
					'If strBrowser = "T" Then
					'	objMailTable.ChildItem(iMail,1,"WebCheckBox",0).Set "ON"
					'	wait 1
					'	objGmail.WebButton("name:=Delete","index:=0").Click
				    'ElseIf strBrowser = "F" Then		
					'	objMailTable.ChildItem(iMail,iColumn,"WebElement",0).RightClick
					'	wait 1
					'	objGmail.WebElement("innertext:=Delete","index:=0").Click
					'End If	

                    Exit For
                End If
               End If
            Next
            If isFoundMail Then
                Exit For    
            End If
        Next    
        If isFoundMail Then
            Exit For    
        End If
        wait 10
        GUI_Browser_Refresh
        'Browser("name:=.*Gmail.*").Refresh
    Next
    
    If  NOT isFoundMail Then        
        For iMail = 1 To intEMailRows
            For iColumn = 3 To intEMailsColumns
               If instr(objMailTable.GetCellData(iMail,iColumn),strBorrowerLName) > 0 Then
                If instr(objMailTable.ChildItem(iMail,iColumn,"WebElement",0).GetROProperty("innertext"),strBorrowerLName) > 0 and _
                   instr(objMailTable.ChildItem(iMail,iColumn,"WebElement",0).GetROProperty("innertext"),eType) Then
                    isFoundMail = true
					'If strBrowser = "T" Then
					'	objMailTable.ChildItem(iMail,1,"WebCheckBox",0).Set "ON"
					'	wait 1
					'	objGmail.WebButton("name:=Delete","index:=0").Click
				    'ElseIf strBrowser = "F" Then		
					'	objMailTable.ChildItem(iMail,iColumn,"WebElement",0).RightClick
					'	wait 1
					'	objGmail.WebElement("innertext:=Delete","index:=0").Click
					'End If	
                    Exit For
                End If
               End If
            Next
            If isFoundMail Then
                Exit For    
            End If
        Next    
    End If
    'GUI_Browser_CloseAll
    UTIL_Win_CloseProcesses "chrome.exe"
    UTIL_Win_CloseProcesses "iexplore.exe"
    UTIL_Win_CloseProcesses  "firefox.exe"
    If isFoundMail Then
        FRM_Logger_ReportPassEvent "E-Mail triggered and received: " &eType , "EMail triggered asking " & eType , null 
		'FRM_Logger_ReportInfoEvent "E-Mail Deleted: " &eType , "EMail Deleted for Borrower: " & strBorrowerLName & ". In order to find it, check Deleted items" , null 
    Else
        FRM_Logger_ReportFailEvent "E-Mail is Not received: " &eType, "User did not receive email ", null  
    End If
    Set objMailTable = Nothing
    Set objGmail = Nothing
    
End Function



'This function is used to open document in webcenter loan detail page for single borrower
'@code
'    BIZ_Webcenter_OpenDocumentInDetailPage(strDocSubject)
'@endcode
'@param strDocSubject - subject from e-mail sent from encompass or other description for link
Function BIZ_Webcenter_OpenDocumentInDetailPage(strDocSubject)
 
    FRM_Logger_ReportInfoEvent strDocSubject, "Open document" , null  
    Set objWebPage = Browser("name:=.*", "index:=0").Page("title:=.*", "index:=0")
    Set objTable = objWebPage.WebTable("class:=table_BottomLine","index:=0")
    intRows = objTable.RowCount
    For z = 1 To intRows
        If objTable.ChildItem(z,1,"Link",0).GetROProperty("text")= strDocSubject Then
            objTable.ChildItem(z,1,"Link",0).click
            wait 1
            objTable.ChildItem(z + 1,1,"Link",0).click
            FRM_Logger_ReportInfoEvent "Clicked Link", objTable.ChildItem(z + 1,1,"Link",0).GetROProperty("text"), null
            wait 1
            objTable.ChildItem(z + 1,1,"Link",1).click
            FRM_Logger_ReportInfoEvent "Clicked Button", objTable.ChildItem(z + 1,1,"Link",1).GetROProperty("text"), null
            Exit for
        End If 
    Next
End Function 
 
 
 
 'This function is used to get to webcenter loan detail page if account has multiple borrowers listed and each borrower has its own loan
'@code
'    BIZ_WebCenter_OpenDetailPageByBorrName(strBorrName)
'@endcode
'@param strBorrName- can be partial if unique
 
 Function BIZ_WebCenter_OpenDetailPageByBorrName(strBorrName)
 
    Set objAccountPage = Browser("name:=.*Ellie Mae.*").Page("title:=.*Ellie Mae.*")
    'GUI_Object_WaitTillExistX objAccountPage.WebElement("html id:=.*pageNameLabel.*","innertext:=.*Check Loan Status.*","index:=0"),60
    If objAccountPage.WebElement("html id:=.*lbBorrowerName.*","innertext:=.*"& strBorrName & ".*").Exist(30) Then
        objAccountPage.WebElement("html id:=.*lbBorrowerName.*","innertext:=.*"& strBorrName & ".*").Click  
        FRM_Logger_ReportInfoEvent "Open Loan Detail", "Borrower selected: " & strBorrName, null
    End If
    Set objAccountPage = Nothing    
    
End Function



'This function is used to verify if user got to Check Status page
'@code
'    BIZ_WebCenter_VerifyCheckLoanStatusPage
'@endcode
Function BIZ_WebCenter_VerifyCheckLoanStatusPage()
 
    Set objAccountPage = Browser("name:=.*Ellie Mae.*").Page("title:=.*Ellie Mae.*")
    GUI_Object_WaitTillExistX objAccountPage.WebElement("html id:=.*pageNameLabel.*","innertext:=.*Check Loan Status.*","index:=0"),60
    If objAccountPage.WebElement("html id:=.*pageNameLabel.*","innertext:=.*Check Loan Status.*","index:=0").Exist(1)  Then
        FRM_Logger_ReportPassEvent "'Check Loan status' page", "User is on 'Check Loan status' page" , null 
    Else
        FRM_Logger_ReportFailEvent "'Check Loan status' page", "User is on 'Check Loan status' page", null 
    End If  
    Set objAccountPage = Nothing
    
End Function
 

 
'This function is used to to create document if not exists in environment for WebCenter tests. 
'@code
'    BIZ_WebCenter_CreateDocumentIfNotExists(strDocumentType,strDocName)
'@endcode 
'@param strDocumentType - document type
'@param  strDocName - document name

Function BIZ_WebCenter_CreateDocumentIfNotExists(strDocumentType,strDocName)
 
    FRM_Logger_ReportInfoEvent "Pre-conditions: Create Document if not exists", "Create Document: "& strDocName, null  
    BIZ_Settings_ExpandTreeView "eFolder Setup"
    BIZ_Nav_HierarchyTree "eFolder Setup", "Documents"
    Set objMainDocument = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=DocumentTemplateDialog")
    BIZ_Settings_Documents_ClickNew
    
    strDocumentName = BIZ_Settings_Documents_Create(strDocumentType) 
    GUI_SwfEdit_Set objMainDocument.SwfEdit("swfname:=txtName"),strDocName
    GUI_SwfComboBox_Select objMainDocument.SwfComboBox("swfname:=cboType"), strDocumentType
    If strDocumentType = "Standard Form" OR  strDocumentType = "Custom Form" Then
        GUI_SwfComboBox_Select objMainDocument.SwfComboBox("swfname:=cboSource"), 0
    End If
    GUI_SwfButton_Click objMainDocument.SwfButton("swfname:=btnOK")

    If objMainDocument.Dialog("index:=0").Static("text:=.*name has been used already.*","index:=0").Exist(5) Then
        objMainDocument.Dialog("index:=0").WinButton("text:=OK","index:=0").Click
        objMainDocument.SwfButton("swfname:=btnCancel").Click
    End If
    SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfButton("swfname:=btnClose").Click
    Set objMainDocument = Nothing   
     
End Function   



'This function is used by a borrower to act on a doc
'@code
'    BIZ_WebCenter_BorrActOnDocumentInDetailPage(strDocSubject,strBorrName,strButton)
'@endcode 
'@param strDocSubject - string that reflects name/type of document to open. Could be subject of e-mail sent from Encompass
'@param  strBorrName - Borrower partial or full name to whom document should be opened
'@param strButton - expected button to click. eSign or Print

Function BIZ_WebCenter_BorrActOnDocumentInDetailPage(strDocSubject,strBorrName,strButton)
	
	FRM_Logger_ReportInfoEvent strDocSubject, "Open document" , null 
    On error resume next	
    boolBorrFound = False
    boolButtonFound = False
    Set objWebPage = Browser("name:=.*", "index:=0").Page("title:=.*", "index:=0")
    Set objTableProd = objWebPage.WebTable("class:=table_BottomLine","index:=0")
    Set objTableQA = objWebPage.WebTable("class:=loandetail-content","index:=0")
	boolBorrFound = False
    boolButtonFound = False
    If objTableQA.Exist(5) Then
	    Set objTable = objTableQA
		intRows = objTable.RowCount
		myHeadRow = 0
		myRow = 0
		strLinkText = ""
		boolExit = false
		For z = 1 To intRows  
            If Not z = 3 Then		
				intLinks = objTable.ChildItemCount(z,1,"Link") 
				For j = 0 to intLinks - 1
					strLinkText =  trim(objTable.ChildItem(z,1,"Link",j).GetROProperty("text")) 
					If trim(strLinkText) = strDocSubject Then
						If objWebPage.Image("class:=expandCollapseImage","file name:=loandetailexpand.png","index:=0").exist(2) Then
							objTable.ChildItem(z,1,"Link",j).click	
						End If
						myHeadRow = z
						FRM_Logger_ReportInfoEvent "Clicked Link", strDocSubject,null 
						boolExit = true
						Exit For
					End If
				Next 
			End If	
			If boolexit Then
				Exit For	
			End If        
		Next
		boolExit = False
		For p = myHeadRow To intRows 
			intWebElements = objTable.ChildItemCount(p,1,"WebElement") 
			
			For j = 0 to intWebElements	
				strWebElementText = objTable.ChildItem(p,1,"WebElement",j).GetROProperty("innertext")
				If myHeadRow > 0 and p > myHeadRow Then 
				   If instr(strWebElementText,strBorrName) > 0 Then        	
						boolBorrFound = True
						myRow = p
						boolExit = true
						Exit For
					End If
				 End If 
			 Next
			 If boolexit Then
				Exit For	
			 End If 
		 Next
		 intLinksinRow = objTable.ChildItemCount(myRow,1,"Link") 
		 For j = 0 To intLinksinRow
			 strLinkTextInRow =  trim(objTable.ChildItem(myRow,1,"Link",j).GetROProperty("text")) 
			 If trim(strLinkTextInRow) = strButton Then
						boolButtonFound = True
						objTable.ChildItem(myRow,1,"Link",j).click
						boolButtonFound = true
						Exit For
			  End If 
		  Next
	End If

    If objTableProd.Exist(5) Then
        Set objTable = objTableProd 
		intRows = objTable.RowCount
		myHeadRow = 0
		myRow = 0
		strLinkText = ""
		For z = 1 To intRows
		    If Not z = 3 Then
				intLinks = objTable.ChildItemCount(z,1,"Link")         
				For j = 0 to intLinks - 1
					strLinkText =  trim(objTable.ChildItem(z,1,"Link",j).GetROProperty("text"))  
					If trim(strLinkText) = strDocSubject Then
						objTable.ChildItem(z,1,"Link",j).click
						myHeadRow = z
						FRM_Logger_ReportInfoEvent "Clicked Link", strDocSubject,null 
					End If 
					
					If myHeadRow > 0 and z >= myHeadRow Then         
						If instr(strLinkText,strBorrName) > 0 Then
							boolBorrFound = True
							objTable.ChildItem(z,1,"Link",j).click 
							myRow = z
						End If 
						If trim(strLinkText) = strButton and z = myRow Then
							boolButtonFound = True
							objTable.ChildItem(z,1,"Link",j).click
							Exit For
						End If 
					End If  
             					
				Next
			End If	
			If boolBorrFound Then
				Exit For    
			End If 
		Next
	End If	
    If boolBorrFound Then
        FRM_Logger_ReportPassEvent "Expected Borrower Found to open document", strBorrName,null     
    Else
        FRM_Logger_ReportFailEvent "Expected Borrower NOT Found to open document", strBorrName,null
    End If
    If boolButtonFound Then
        FRM_Logger_ReportPassEvent "Expected Button Found and clicked", strButton,null  
    Else
        FRM_Logger_ReportFailEvent "Expected Button NOT Found", strButton & "- reasons could be: wrong page dispalyed; wrong borrower name in a section is displayed, etc" ,null 
    End If
    Set objWebPage = Nothing
    Set objTable = Nothing
    Set objTableProd = Nothing
	Set objTableQA = Nothing
 End Function
 
 
 
'This function is used by a borrower to eSign a doc. 
'@code 
'   BIZ_WebCenter_BorrESignDocumentInDetailPage(strDocSubject,strBorrName)
'@endcode 

Function BIZ_WebCenter_BorrESignDocumentInDetailPage(strDocSubject,strBorrName)

	BIZ_WebCenter_BorrActOnDocumentInDetailPage strDocSubject,strBorrName, "eSign"
	
End Function



'This function is used to verify if webelement or link exists in the table for any borrower
'@code
'    BIZ_Webcenter_VerifyIfObjectExistsForBorrower(strDocSubject,strBorrName,strObjectTextProperty, strObjClass, isExpected)
'@endcode 
'@param strDocSubject - string that reflects name/type of document to open. Could be subject of e-mail sent from Encompass
'@param  strBorrName - Borrower partial or full name to whom document should be opened
'@param strObjectTextProperty - text to find and compare
'@param strButton - expected button/webelement/link to click

Function BIZ_Webcenter_VerifyIfObjectExistsForBorrower(strDocSubject,strBorrName,strObjectTextProperty, strObjClass, isExpected)
    
	On Error Resume Next	
	FRM_Logger_ReportInfoEvent strDocSubject, "Confirm " & strObjClass & " exists for Borrower " & strBorrName , null  
    boolBorrFound = False
    boolObjFound = False
	Set objWebPage = Browser("name:=.*", "index:=0").Page("title:=.*", "index:=0")
	Set objTableProd = objWebPage.WebTable("class:=table_BottomLine","index:=0")
    Set objTableQA = objWebPage.WebTable("class:=loandetail-content","index:=0")
	
    If objTableQA.Exist(5) Then 

		Set objTable = objTableQA
		intRows = objTable.RowCount
		myHeadRow = 0
		myRow = 0
		boolExit = false   
		For z = 1 To intRows
		    If NOT z = 3 Then
				intLinks = objTable.ChildItemCount(z,1,"Link")	 
				For j = 0 to intLinks - 1
				   strLinkText =  trim(objTable.ChildItem(z,1,"Link",j).GetROProperty("text"))
				   If trim(strLinkText) = strDocSubject Then
					  objTable.ChildItem(z,1,"Link",j).click
					  myHeadRow = z
					  boolExit = true
					  FRM_Logger_ReportInfoEvent "Clicked Link", strDocSubject,null 
					  Exit for
				   End If	
				 Next
			End If	 
			If boolExit Then
				Exit for
			End If
		Next	

		 boolExit = False
		 For p = myHeadRow To intRows 
				intWebElements = objTable.ChildItemCount(p,1,"WebElement") 		
				For j = 0 to intWebElements
						strWebElementText = objTable.ChildItem(p,1,"WebElement",j).GetROProperty("innertext")
								 
					If myHeadRow > 0 and p > myHeadRow Then 
					   If instr(strWebElementText,strBorrName) > 0 Then        	
							boolBorrFound = True
							myRow = p
							boolExit = true
							Exit For
						End If
					 End If 
				 Next
				 If boolexit Then
					Exit For	
				 End If 
			Next
		   
		intObjects = objTable.ChildItemCount(myRow,1,strObjClass)	
		For j = 0 to intObjects - 1
			 strObjText = trim(objTable.ChildItem(myRow,1,strObjClass,j).GetROProperty("innertext")) 
			 If trim(strObjText) = strObjectTextProperty then
					 boolObjFound = True
					 Exit For
			 End If
		Next
	End If
	
	
    If objTableProd.Exist(5) Then 
		Set objTable = objTableProd	
	
		intRows = objTable.RowCount
		myHeadRow = 0
		myRow = 0
		   
		For z = 1 To intRows
		    If NOT z = 3 Then
				intLinks = objTable.ChildItemCount(z,1,"Link")	 
				For j = 0 to intLinks - 1
				   strLinkText =  trim(objTable.ChildItem(z,1,"Link",j).GetROProperty("text"))
				   If trim(strLinkText) = strDocSubject Then
					  objTable.ChildItem(z,1,"Link",j).click
					  myHeadRow = z
					  FRM_Logger_ReportInfoEvent "Clicked Link", strDocSubject,null 
				   End If	
				   If myHeadRow > 0 and z >= myHeadRow Then
					 If instr(strLinkText,strBorrName) > 0 Then
						  boolBorrFound = True
						  objTable.ChildItem(z,1,"Link",j).click 
						  myRow = z
						  Exit For
					 End If 
				   End If 	          
				Next
			End If	
			If boolBorrFound then
			   Exit For
			End If
		Next
		   
		intObjects = objTable.ChildItemCount(myRow,1,strObjClass)	
		For j = 0 to intObjects - 1
			 strObjText = trim(objTable.ChildItem(myRow,1,strObjClass,j).GetROProperty("innertext")) 
			 If trim(strObjText) = strObjectTextProperty then
					 boolObjFound = True
					 Exit For
			 End If
		Next
	End If
	If boolBorrFound Then
		FRM_Logger_ReportPassEvent "Expected Borrower Found to open document", strBorrName,null 	
	Else
	    FRM_Logger_ReportFailEvent "Expected Borrower NOT Found to open document", strBorrName,null
	End If
	If isExpected Then
		If boolObjFound Then
			FRM_Logger_ReportPassEvent "Expected " & strObjClass & " Found", strObjectTextProperty,null 	
		Else
			FRM_Logger_ReportFailEvent "Expected " & strObjClass & " NOT Found", strObjectTextProperty,null 
		End If
	Else
		If boolObjFound Then
			FRM_Logger_ReportFailEvent "Not Expected " & strObjClass & " Found", strObjectTextProperty,null 	
		Else
			FRM_Logger_ReportPassEvent "Not Expected " & strObjClass & " NOT Found", strObjectTextProperty,null 
		End If
    End If	
	BIZ_Webcenter_VerifyIfObjectExistsForBorrower = boolObjFound
        Set objWebPage = Nothing
	Set objTable = Nothing
	Set objTableProd = Nothing
    Set objTableQA = Nothing
 End Function

 
'To setup environment before starting test
Function BIZ_WebCenter_Setup()
	FRM_RT_SetupTest(null)
	'GUI_Browser_CloseAll
	UTIL_Win_CloseProcesses "chrome.exe"
    UTIL_Win_CloseProcesses "iexplore.exe"
    UTIL_Win_CloseProcesses  "firefox.exe"
End Function	




Function BIZ_WebCenter_DocuSignSignDocument()
        FRM_Logger_ReportInfoEvent "eSign Document", "User is going to sign DocuSign document",null 
	    If Browser("name:=.*").Page("title:=.*").WebButton("html id:=action-bar-btn-continue","innertext:=Next","index:=0").Exist(20) Then
			Browser("name:=.*").Page("title:=.*").WebButton("html id:=action-bar-btn-continue","innertext:=Next","index:=0").Click
		End If
		If Browser("name:=.*").Page("title:=.*").WebButton("html id:=.*navnexttext.*","innertext:=START","index:=0").Exist(10) Then
			Browser("name:=.*").Page("title:=.*").WebButton("html id:=.*navnexttext.*","innertext:=START","index:=0").Click
		End If
			
		k = 0
		n = 0
		Do
'			If Browser("name:=.*").Page("title:=.*").Frame("html id:=signingIframe").Image("title:=Sign Here","index:=" & k).Exist(4) Then
'				Browser("name:=.*").Page("title:=.*").Frame("html id:=signingIframe").Image("title:=Sign Here","index:=" & k).Click
			If Browser("name:=.*").Page("title:=.*").WebButton("html id:=tab-form-element.*","innertext:=.*SignRequired - Sign Here.*").Exist(10) Then
				Browser("name:=.*").Page("title:=.*").WebButton("html id:=tab-form-element.*","innertext:=.*SignRequired - Sign Here.*").Click
				wait 3
				k = k + 1
			Else
                Exit Do	
			End If	

            If Browser("name:=.*").Page("title:=.*").WebButton("name:=ADOPT AND SIGN","index:=0").Exist(4) Then
            	Browser("name:=.*").Page("title:=.*").WebButton("name:=ADOPT AND SIGN","index:=0").Click
   			    wait 3	
            End If
			
			If Browser("name:=.*").Page("title:=.*").WebButton("html id:=action-bar-btn-finish","innertext:=Finish").Exist(10) Then	
				Browser("name:=.*").Page("title:=.*").WebButton("html id:=action-bar-btn-finish","innertext:=Finish").Click    
		        FRM_Logger_ReportPassEvent "eSign Document", "DocuSign Document Signed",null 
			Else
				If n > 13 then
					FRM_Logger_ReportFailEvent "eSign Document", "DocuSign Document NOT Signed",null 
                End If					
			End If	
		    n = n + 1
		    If n > 15  Then
		    	Exit do
		    End If
		Loop 
	
		
 

End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\WebCenter.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\ConstructionManagement\ConstructionManagement.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup ConstructionManagement
'List of functions here
'@code
'   Function BIZ_ConstructionManagement_ATRQM_QMX107Validation(strConstructionOnlyPeriod,strRowID)
' 	Function BIZ_ConstructionManagement_ATRQM_QMX106Validation(strConstructionOnlyPeriod)
'	Function BIZ_ConstructionManagement_ATRQM_QMX44andQMX66Validation()
'	Function BIZ_ConstructionManagement_ATRQM_QMX42andQMX64Validation()
'	Function BIZ_ConstructionManagement_ATRQM_QMX25Validation(strRowID)
'	Function BIZ_ConstructionManagement_ATRQM_QMX24Validation(strRowID)
'	Function BIZ_ConstructionManagement_ATRQM_QMX103Validation(strConstructionOnlyPeriod)
'	Function BIZ_ConstructionManagement_ATRQM_QMX23Validation(strConstructionOnlyPeriod,strRowID)
'	Function BIZ_ConstructionManagement_AdjustablePaymentTable_Validate(strRowID)
'	Function BIZ_ConstructionManagement_LoanCreation(strRowID)
'	Function BIZ_ConstructionManagement_ConstructionLoanProgram_SetBorrowerDetails(strRowId)
'	Function BIZ_ConstructionManagement_SetConstructionPeriod(strRowId,strConstructionOnlyPeriod,strForm)
'	Function BIZ_ConstructionManangement_ConstructionPerm_CM_RegZLE_ATRorQM_FormValidations(strRowId,strConstructionOnlyPeriod)
' 	Function BIZ_ConstructionManagement_ValidationForm_Select(strValidateForm)
'	Function BIZ_ConstructionManagement_InputLoanForm_Select(strInputForm)
'	Function BIZ_ConstructionManagement_RegZLE_SetConstructionPeriod(strRowID,strConstructionOnlyPeriod)
' 	Function BIZ_ConstructionManagement_SetLoanInfoDetails(strRowID)	
'  	Function BIZ_ConstructionManagement_SetProjectDataDetails(strRowID)
'	Function BIZ_ConstructionManagement_SetBasicInfoDetails(strRowID)
'	Function BIZ_ConstructionManagement_CashoutRefinanceLoan_Create(strRowID)
'	Function BIZ_ConstructionManagement_ConstructionLoan_Create(strRowID)
'	Function BIZ_ConstructionManagement_LinkedLoan_SyncedData_ValidateLinkToPerm(strRowID1,strRowID2,strEncompassYorN)
'	Function BIZ_ConstructionManagement_LinkLoansLinkToPerm(strRowID,strLoanNumber) 
'	Function BIZ_ConstructionManagement_AdjustableInterestRateTable_Validate(strRowID)
'	Function BIZ_ConstructionManagement_AIRTable_InterestFrequencyBeginning_Validate(strRowID)
'	Function BIZ_ConstructionManagement_ConstructionPerm_ATRQM_QMX42andQMX64Validation()
'	Function BIZ_Common_1003Page1_SetMiandPiDetails(strRowID)
'	Function BIZ_ConstructionManagement_NonConstrPermLoan_EscrowFirstPayment_Verify(strRowID)
'	Function BIZ_Forms_2015Itemization_FieldRuleWindow_SetEscrowDetails(strRowID)
'	Function BIZ_ConstructionManagement_2015Itemization_SetFieldRuleDetails(strRowID)
'	Function BIZ_ConstructionManagement_LinkLoans(strRowID,strLoanNumber,strLinkBtnType) 
'	Function BIZ_ConstructionManagement_ConstructionLoan1003_Create(strRowID)
'	Function BIZ_ConstructionManagement_NewPermButton_YesorNo_Validate(strRowID,strAction)
'	Function BIZ_ConstructionManagement_LEandCDPage1_ProjectedPayment_PDF_Validate(strRowID)
'	Function BIZ_ConstructionManagement_LEandCD_LoanProduct_Verify(strRowID, strFormName, strAmortizationType)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to validate field QMX107 in ATR/QM Tab in ATR/QM Management Form
'@code
'    BIZ_ConstructionManagement_ATRQM_QMX107Validation(strConstructionOnlyPeriod, strRowID)
'@endcode
'@param strRowID - Loan Details data in test data
'@param strConstructionOnlyPeriod - Construction mortgage Period

Function BIZ_ConstructionManagement_ATRQM_QMX107Validation(strConstructionOnlyPeriod,strRowID)
	
	Dim objBorrowerPage,objData
	
    Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objData         = FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowID)
	
	If strConstructionOnlyPeriod = "GreaterThan12"  Then
		GUI_Object_ValidateChecked objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), "0", "Loan Program field to be 'unchecked' by default"
		GUI_Object_ValidateProperty objBorrowerPage.WebList("html id:=DropdownBox4"),"value", "#0", "Display the value Loan Program Field ID: QM.X107"
	ElseIf strConstructionOnlyPeriod="LessThan12" OR strConstructionOnlyPeriod="EqualTo12" Then
		GUI_Object_ValidateChecked objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), "1", "Loan Program field to be 'checked' by default"
		GUI_Object_ValidateProperty objBorrowerPage.WebList("html id:=DropdownBox4"),"value", "", "Display the value Loan Program Field ID: QM.X107"
	End IF
	

	'CBIZ-8464, 5565
	If strConstructionOnlyPeriod = "GreaterThan12" OR strConstructionOnlyPeriod="LessThan12" OR strConstructionOnlyPeriod="EqualTo12" Then
	   GUI_Object_ValidateDisabled objBorrowerPage.WebList("html id:=DropdownBox4"), "Loan Program QM.X107 field in dropdown and read only"
	Else
	   FRM_Logger_ReportFailEvent "Verify the Loan program list box field", "Required field value not displayed", null	
	End If
	
	Set objBorrowerPage = Nothing
	Set objData			= Nothing

End Function



'This function is used to validate field QMX106 in ATR/QM Tab in ATR/QM Management Form
'@code
'    BIZ_ConstructionManagement_ATRQM_QMX106Validation(strConstructionOnlyPeriod)
'@endcode
'@param strConstructionOnlyPeriod - Construction mortgage Period

Function BIZ_ConstructionManagement_ATRQM_QMX106Validation(strConstructionOnlyPeriod)
	
	Dim objBorrowerPage 
    
    Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	
	If strConstructionOnlyPeriod = "GreaterThan12" Then
		GUI_Object_ValidateChecked objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox3_Ctrl"),0 ,"Loan Program fields QM.X106 check box is unchecked by default"
	ElseIf strConstructionOnlyPeriod = "LessThan12" OR strConstructionOnlyPeriod = "EqualTo12" Then
		GUI_Object_ValidateChecked objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox3_Ctrl"),1 ,"Loan Program fields QM.X106 check box is checked by default"
	End If
	If strConstructionOnlyPeriod = "GreaterThan12" OR strConstructionOnlyPeriod = "LessThan12" OR strConstructionOnlyPeriod = "EqualTo12" Then
	   GUI_Object_ValidateDisabled objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox3_Ctrl"),"Loan Program fields QM.X106 check box is read only"
	Else	
	   FRM_Logger_ReportFailEvent "Verify the Loan Program field QMX106 checkbox", "Failed to verify the required fields",null
	End If
	
	Set objBorrowerPage = Nothing

End Function



'This function is used to validate field QMX44 and QMX66 in ATR/QM Tab in ATR/QM Management Form
'@code
'    BIZ_ConstructionManagement_ATRQM_QMX44andQMX66Validation()
'@endcode

Function BIZ_ConstructionManagement_ATRQM_QMX44andQMX66Validation()
	
	Dim objBorrowerPage,objBorrowerImagePage, strQMX44FieldName, strQMX66FieldName
    
    Set objBorrowerPage      = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objBorrowerImagePage = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=3")
	
	GUI_Object_WaitTillExistX objBorrowerImagePage, 60
	
	Set strQMX44FieldName = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=2")
	Set strQMX66FieldName = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=5")
	
	If GUI_Object_IsExist(strQMX44FieldName)and GUI_Object_IsExist(strQMX66FieldName) Then
	   FRM_Logger_ReportPassEvent "Verify QM.X44 and QM.X66 Interest Only flags", "The fields QM.X44 and QMX.66 are 'Red' in color (Balloon loans Flags) and doesn't meet ATR/QM", Null
	Else
	   FRM_Logger_ReportFailEvent "Verify QM.X44 and QM.X66 Interest Only flags", "Failed to verify the required fields", Null
	End If
	
	Set objBorrowerImagePage= Nothing
	Set objBorrowerPage  	= Nothing
	Set strQMX44FieldName	= Nothing
	set strQMX66FieldName	= Nothing

End Function



'This function is used to validate field QMX42 and QMX64 in ATR/QM Tab in ATR/QM Management Form
'@code
'    BIZ_ConstructionManagement_ATRQM_QMX42andQMX64Validation()
'@endcode

Function BIZ_ConstructionManagement_ATRQM_QMX42andQMX64Validation()

    Dim objBorrowerPage, strQMX42FieldName, strQMX64FieldName,objBorrowerImagePage
    
	Set objBorrowerPage      = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
  	Set objBorrowerImagePage = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=3")
  	
	GUI_Object_WaitTillExistX objBorrowerImagePage, 60
	
	Set strQMX42FieldName = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=1")
	Set strQMX64FieldName = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=4")
	
	If GUI_Object_IsExist(strQMX42FieldName) and GUI_Object_IsExist(strQMX64FieldName) Then
	   FRM_Logger_ReportPassEvent "Verify QM.X42 and QM.X64 Ballon Loan flags", "The fields QM.X42 and QMX.64 are 'Red' in color (Interest only flags) and doesn't meet ATR/QM", Null
	Else
	   FRM_Logger_ReportFailEvent "Verify QM.X42 and QM.X64 Ballon Loan flags", "Failed to verify the required fields", Null
	End If
	
	Set objBorrowerImagePage   = Nothing
	Set strQMX42FieldName 	   = Nothing
	Set strQMX64FieldName      = Nothing

End Function



'This function is used to validate field QMX42 and QMX64 in ATR/QM Tab in ATR/QM Management Form interest only flags
'@code
'    BIZ_ConstructionManagement_ConstructionPerm_ATRQM_QMX42andQMX64Validation(()
'@endcode

Function BIZ_ConstructionManagement_ConstructionPerm_ATRQM_QMX42andQMX64Validation()

    Dim objBorrowerPage, strQMX42FieldName, strQMX64FieldName,objBorrowerImagePage
    
	Set objBorrowerPage      = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
  	Set objBorrowerImagePage = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=3")
  	
	GUI_Object_WaitTillExistX objBorrowerImagePage, 60
	
	Set strQMX42FieldName = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=1")
	Set strQMX64FieldName = objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=alert-message-high.png","index:=4")
	
	If GUI_Object_IsExist(strQMX42FieldName) and GUI_Object_IsExist(strQMX64FieldName) Then
		FRM_Logger_ReportPassEvent "Verify QM.X42 and QM.X64 Interest Only flags", "The fields QM.X42 and QMX.64 are 'Red' in color (Interest only flags) and doesn't meet ATR/QM", Null
	Else
		FRM_Logger_ReportFailEvent "Verify QM.X42 and QM.X64 Interest Only flags", "Failed to verify the required fields", Null
	End If
	
	Set objBorrowerImagePage   = Nothing
	Set strQMX42FieldName 	   = Nothing
	Set strQMX64FieldName      = Nothing

End Function



'This function is used to validate the ATRQM_QMX25 validations
'@code
'	BIZ_ConstructionManagement_ATRQM_QMX25Validation(strRowID)
'@endcode
'@param strRowID - row id validation data

Function BIZ_ConstructionManagement_ATRQM_QMX25Validation(strRowID)
	
	Dim objBorrowerPage, objATRQMRecomTable, objData 
    
    Set objBorrowerPage    = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
    Set objATRQMRecomTable = objBorrowerPage.WebTable("column names:=ATR\/QM Recommendation")
	Set objData            = FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowID)
	
	GUI_Object_ValidateValue objATRQMRecomTable.WebList("html id:=l_X25"), FRM_DS_GetValue(objData,"QM.X25_LoanEligible"), "Loan Eligible fields QM.X25= N/A"
	GUI_Object_ValidateDisabled objATRQMRecomTable.WebList("html id:=l_X25"), "Loan Eligible fields QM.X25 is read only"
	
	Set objATRQMRecomTable  = Nothing
	Set objBorrowerPage 	= Nothing
	Set objData             = Nothing

End Function



'This function is used to validate the ATRQM_QMX24 validations
'@code
'	BIZ_ConstructionManagement_ATRQM_QMX24Validation(strRowID)
'@endcode
'@param strRowID - row id of validation data

Function BIZ_ConstructionManagement_ATRQM_QMX24Validation(strRowID)
	
    Dim objBorrowerPage, objData
    
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objData         = FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowID)
		
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=l_X24"), FRM_DS_GetValue(objData,"QualifiedMortLoan"), "Qualified Mortgage Loan fields: QM.X24 field value is blank"
	GUI_Object_ValidateDisabled objBorrowerPage.WebList("html id:=l_X24"),"Qualified Mortgage Loan fields: QM.X24 is read only"
	
	Set objBorrowerPage = Nothing
	Set objData         = Nothing

End Function



'This function is used to validate the ATRQM_QMX103 validations
'@code
'	BIZ_ConstructionManagement_ATRQM_QMX103Validation(strConstructionOnlyPeriod)
'@endcode
'@param strConstructionOnlyPeriod - Construction Period 

Function BIZ_ConstructionManagement_ATRQM_QMX103Validation(strConstructionOnlyPeriod)
	
    Dim objBorrowerPage 
    
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page")

	If strConstructionOnlyPeriod = "GreaterThan12" Then
		GUI_Object_ValidateChecked objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), "0", "QM.X103 checkbox is unchecked by default"
	ElseIf  strConstructionOnlyPeriod = "EqualTo12" OR strConstructionOnlyPeriod = "LessThan12" Then
		GUI_Object_ValidateChecked objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), "1", "QM.X103 checkbox is checked by default"
	End If
	If strConstructionOnlyPeriod = "GreaterThan12" Then
		GUI_Object_ValidateEnabled objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox1_Ctrl"),"QM.X103 checkbox is editable"
	ElseIf  strConstructionOnlyPeriod = "EqualTo12" OR strConstructionOnlyPeriod = "LessThan12" Then
		GUI_Object_ValidateDisabled objBorrowerPage.WebTable("html tag:=TABLE","index:=3").WebCheckBox("html id:=__cid_CheckBox1_Ctrl"),"QM.X103 checkbox is read only"
	Else
		FRM_Logger_ReportFailEvent "Verify Qualified Mortgage Loan Type QM.X103 field", "Failed to verify the required fields", Null
	End If
  			
	Set objBorrowerPage = Nothing

End Function



'This function is used to validate the ATRQM_QMX23 validations
'@code
'	BIZ_ConstructionManagement_ATRQM_QMX23Validation(strConstructionOnlyPeriod,strRowID)
'@endcode
'@param strConstructionOnlyPeriod - Construction mortgage Period 
'@param strRowID - row id of validation data
	
Function BIZ_ConstructionManagement_ATRQM_QMX23Validation(strConstructionOnlyPeriod,strRowID)
	
    Dim objBorrowerPage, objData
    
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objData         = FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowID)
	
    If strConstructionOnlyPeriod = "GreaterThan12" Then
		GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=l_X23"),FRM_DS_GetValue(objData,"QM.X23_AbilityToRepayGreaterthan12"),"Field QM.X23 = General ATR"
    ElseIf strConstructionOnlyPeriod = "EqualTo12" OR strConstructionOnlyPeriod = "LessThan12" Then
       GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=l_X23"),FRM_DS_GetValue(objData,"QM.X23_AbilityToRepayLessThanEqual12"),"Field QM.X23 = Exempt"
	Else
        FRM_Logger_ReportFailEvent "Verify Ability-to-Repay Loan Type QM.X23 field", "Required field value not displayed", Null          
	End If
	
	GUI_Object_ValidateDisabled objBorrowerPage.WebList("html id:=l_X23"),"Field QM.X23 is default to read only"
	
    Set objBorrowerPage = Nothing
    Set objData         = Nothing
	
End Function
	
	
	
'This function is used to create the Loan using Construction Management for AP validations
'@code
'    BIZ_ConstructionManagement_LoanCreation(strRowID)
'@endcode
'@param strRowID - Row id of test data in excel spread sheet

 Function BIZ_ConstructionManagement_LoanCreation(strRowID)
   
    FRM_Logger_ReportInfoEvent "LoanCreation for Construction Management", "Loan Creation for AP validations in construction management", null
    
	Dim objBorrowerPage,objData,objTabswf,objData1
	
	Set objData				= FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowID)
	Set objBorrowerPage		= SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objTabswf			= SwfWindow("swfname:=MainForm").swfWindow("swfname:=MainScreen").SwfTab("swfname:=tabControlForm")
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1240_HomeEmail"))) Then
		Set objData1 = FRM_DS_GetTestData("ConstructionManagement", "LotLandDetails", strRowID)
	End IF
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1240_HomeEmail"))) Then
	   GUI_SwfTab_Click objTabswf,"Basic Info"
	   GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1240","index:=0"), Trim(FRM_DS_GetValue(objData, "1240_HomeEmail"))
	   GUI_SwfTab_Click objTabswf,"Loan Info"
	End IF
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1109_LoanAmount"))) Then
	   GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox1","index:=0"), Trim(FRM_DS_GetValue(objData, "1109_LoanAmount"))
	End IF
		
	If UTIL_String_IsEmpty(Trim(FRM_DS_GetValue(objData, "1240_HomeEmail"))) Then
		'Loan Info tab
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "19_PurposeofLoan"))) Then 
		   GUI_WebCheckbox_Set objBorrowerPage.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"), Trim(FRM_DS_GetValue(objData, "19_PurposeofLoan"))
		End If
	Else
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "19_PurposeofLoan1"))) Then 
		   GUI_WebCheckbox_Set objBorrowerPage.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"), Trim(FRM_DS_GetValue(objData, "19_PurposeofLoan1"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "4084_ConstructionPerm"))) Then 
		   GUI_WebCheckbox_Set objBorrowerPage.WebCheckbox("html id:=__cid_CheckBox21_Ctrl"), "ON"
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1811_PropertyWillbe"))) Then 
		   GUI_WebCheckbox_Set objBorrowerPage.WebCheckbox("html id:=__cid_CheckBox4_Ctrl"), "ON"
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1964_Acquistion"))) Then 
		   GUI_WebCheckbox_Set objBorrowerPage.WebCheckbox("html id:=__cid_CheckBox11_Ctrl"), "ON"
		End If
	End IF
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1172_LoanType"))) Then 
	   GUI_WebCheckbox_Set objBorrowerPage.WebCheckBox("html id:=__cid_CheckBox1_Ctrl"), Trim(FRM_DS_GetValue(objData, "1172_LoanType"))
	End If 
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "420_LienPosition"))) Then 
	   GUI_WebCheckbox_Set objBorrowerPage.WebCheckBox("html id:=__cid_CheckBox7_Ctrl"), Trim(FRM_DS_GetValue(objData, "420_LienPosition"))
	End If
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "SYS6_EstInterestOn"))) Then 
	   GUI_WebList_Select objBorrowerPage.WebList("html id:=DropdownBox2","index:=0"), Trim(FRM_DS_GetValue(objData, "SYS6_EstInterestOn"))
	End If
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1962_NoOfdays"))) Then 
	   GUI_WebList_Select objBorrowerPage.WebList("html id:=DropdownBox3","index:=0"), Trim(FRM_DS_GetValue(objData, "1962_NoOfdays"))
	End If
	
	'Additional Details:
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "682_FirstPaymentDate"))) Then
		GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox14","index:=0"), Trim(FRM_DS_GetValue(objData, "682_FirstPaymentDate"))
	End IF
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1240_HomeEmail"))) Then
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "763_EstClosingDate"))) Then
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox13","index:=0"), Trim(FRM_DS_GetValue(objData, "763_EstClosingDate"))
		End IF
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1963_ConstructionCompletionDate"))) Then
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox15","index:=0"), Trim(FRM_DS_GetValue(objData, "1963_ConstructionCompletionDate"))
		End IF
	End IF
	'Amortization
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "608_AmortizationType"))) Then 
		GUI_WebCheckbox_Set objBorrowerPage.WebCheckBox("html id:=__cid_CheckBox27_Ctrl"), Trim(FRM_DS_GetValue(objData, "608_AmortizationType"))
	End If
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1176_RegZLEperiod"))) Then 
		GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox28"), Trim(FRM_DS_GetValue(objData, "1176_RegZLEperiod"))
	End If
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1677_InterestRate"))) Then 
		GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox29"), Trim(FRM_DS_GetValue(objData, "1677_InterestRate"))
	End If

	'Construction Only section:
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1240_HomeEmail"))) Then
	
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "3_NoteRate"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_3"), Trim(FRM_DS_GetValue(objData, "3_NoteRate"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1014_QualRate"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_4"), Trim(FRM_DS_GetValue(objData, "1014_QualRate"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "4_Term"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_5"), Trim(FRM_DS_GetValue(objData, "4_Term"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "325_DueIn"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_6"), Trim(FRM_DS_GetValue(objData, "325_DueIn"))
		End If
	Else
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "3_NoteRate"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox42"), Trim(FRM_DS_GetValue(objData, "3_NoteRate"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1014_QualRate"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox43"), Trim(FRM_DS_GetValue(objData, "1014_QualRate"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "4_Term"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox44"), Trim(FRM_DS_GetValue(objData, "4_Term"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "325_DueIn"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox45"), Trim(FRM_DS_GetValue(objData, "325_DueIn"))
		End If
	End If
	
	If UTIL_String_IsEmpty(Trim(FRM_DS_GetValue(objData, "1240_HomeEmail"))) Then
		
		'Enter Lot and Land details
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData1, "F20"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox5"), Trim(FRM_DS_GetValue(objData1, "F20"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData1, "21_OriginalCost"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox6"), Trim(FRM_DS_GetValue(objData1, "21_OriginalCost"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData1, "10_ExistingLien"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox7"), Trim(FRM_DS_GetValue(objData1, "10_ExistingLien"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData1, "22_Presentvalue"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox8"), Trim(FRM_DS_GetValue(objData1, "22_Presentvalue"))
		End If
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData1, "23_CostOfImprovement"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=TextBox9"), Trim(FRM_DS_GetValue(objData1, "23_CostOfImprovement"))
		End If
	End if
	
	If UTIL_String_IsEmpty(Trim(FRM_DS_GetValue(objData, "1240_HomeEmail"))) Then
	
		BIZ_Forms_Open "Borrower Summary - Origination"
		GUI_Object_IsExist objBorrowerPage.WebEdit("html id:=l_1240")
		
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1178_BorrowerEmail"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1240"), Trim(FRM_DS_GetValue(objData, "1178_BorrowerEmail"))
		End If
		
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1177_InterestOnly"))) Then 
			GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1177"), Trim(FRM_DS_GetValue(objData, "1177_InterestOnly"))
		End If
		
		BIZ_Forms_Open "RegZ - LE"
		GUI_Object_IsExist objBorrowerPage.WebList("html id:=DropdownBox16")
		
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "RegZ_1stIntChangeAdj"))) Then 
			GUI_WebList_Select objBorrowerPage.WebList("html id:=DropdownBox16"), Trim(FRM_DS_GetValue(objData, "RegZ_1stIntChangeAdj"))
		End If
		
		If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1766_Min"))) Then
			BIZ_Forms_Open "RegZ - CD"
			Wait 10   ' Due to sync issue using explicit wait
			GUI_Object_WaitTillExistX objBorrowerPage.WebEdit("html id:=l_1766","index:=0"),100
			GUI_Object_IsExist objBorrowerPage.WebEdit("html id:=l_1766","index:=0")
			
			If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1766_Min"))) Then 
				GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1766","index:=0"), Trim(FRM_DS_GetValue(objData, "1766_Min"))
			End If
			
			If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1198_Months"))) Then 
				GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1198","index:=0"), Trim(FRM_DS_GetValue(objData, "1198_Months"))
			End If
		
		End If
	End if
	
	BIZ_Loan_Save()
	
	strLoanNo = BIZ_Loan_GetLoanNumber()
	
	BIZ_ConstructionManagement_LoanCreation = strLoanNo	
		
	Set objBorrowerPage	= Nothing
	Set objData			= Nothing
	Set objTabswf		= Nothing
	Set objData1		= Nothing
	
End Function



'This function is used to Ap validations for Construction Management Loan
'@code
'	BIZ_ConstructionManagement_AdjustablePaymentTable_Validate(strRowID)
'@endcode
'@param strRowID - row id of test data in excel spread sheet

Function BIZ_ConstructionManagement_AdjustablePaymentTable_Validate(strRowID)

	Dim objData,objBorrowerPage,intPaymentMonths,intValPaymentMonths,strFirstChange,strFirstCMonths,strMaxiCMonths,strMnthExpVal,strFirstChangExpValue,strMaximumPayments,strMaxiPayExpvalue
	
	Set objData				 = FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowID)
	Set objBorrowerPage		 = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	
	intPaymentMonths = GUI_Object_GetPropertyValue(objBorrowerPage.WebEdit("html id:=txtInterestPay"), "value")
	
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=DropdownBox6"),FRM_DS_GetValue(objData, "strExpIntOnly"),"Interest Only Payment? = "&FRM_DS_GetValue(objData, "strExpIntOnly")&" for your first "&intPaymentMonths&" payments"
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=DropdownBox8"),FRM_DS_GetValue(objData, "strExpOptionalPayments"), "Optional Payment? = No"
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=stepPayDp"), FRM_DS_GetValue(objData, "strExpStepPayments"),"Step Payments? = No"
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=seasonalPayDp"),FRM_DS_GetValue(objData, "strExpSeasonalPayments"),"Seasonal Payments? = No"
	
	strFirstChange			= GUI_Object_GetPropertyValue(objBorrowerPage.WebEdit("html id:=txtFirstChangeMix"),"value")
	strFirstCMonths			= Split(strFirstChange," ")
	strMnthExpVal			= Split(strFirstCMonths(2),"th")
	intValPaymentMonths		= FRM_DS_GetValue(objData, "1176_RegZLEperiod")
	strFirstChangExpValue   = strFirstCMonths(0)&" "&strFirstCMonths(1)&" "&intValPaymentMonths+1&"th "&strFirstCMonths(3)
	
	If UTIL_AssertEqual(strFirstChange,strFirstChangExpValue,"Pass","First Change field validation")  Then
		FRM_Logger_ReportPassEvent "RegZ-LE First Change", "First Change field successfully populated with Actual First Change="&strFirstChange&" and Expected First Change"&strFirstChangExpValue, Null
	Else
		FRM_Logger_ReportFailEvent "RegZ-LE First Change", "First Change field not successfully populated with Actual First Change="&strFirstChange&" and Expected First Change="&strFirstChangExpValue, Null
	End If
	
	GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=txtSubsequentChanges"), FRM_DS_GetValue(objData, "strExpSubsuquentChanges"),"Subsequent Changes = No Subsequent Changes"
	
	strMaximumPayments = GUI_Object_GetPropertyValue(objBorrowerPage.WebEdit("html id:=txtMaxPayAmt"), "value")
	strMaxiCMonths	   = Split(strMaximumPayments," ")
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1176_RegZLEperiod"))) Then 
		intvalINtMaxiPayment = FRM_DS_GetValue(objData, "1177_InterestOnly")
		strMaxiPayExpvalue   = strMaxiCMonths(0)&" "&strMaxiCMonths(1)&" "&strMaxiCMonths(2)&" "&intvalpaymentMonths+intvalINtMaxiPayment+1&"th "&strMaxiCMonths(4)
	Else
		strMaxiPayExpvalue	 = strMaxiCMonths(0)&" "&strMaxiCMonths(1)&" "&strMaxiCMonths(2)&" "&intvalpaymentMonths+1&"th "&strMaxiCMonths(4)
	End If

	If UTIL_AssertEqual(strMaximumPayments,strMaxiPayExpvalue,"Pass","MaximumPayments field validation") Then
		FRM_Logger_ReportPassEvent "RegZ-LE Maximum Payments", "Maximum Payments field successfully populated with Actual Maximum Payments="&strMaximumPayments&" and Expected Maximum Payments="&strMaxiPayExpvalue, Null
	Else
		FRM_Logger_ReportFailEvent "RegZ-LE Maximum Payments", "Maximum Payments field not successfully populated with Actual Maximum Payments="&strMaximumPayments&" and Expected Maximum Payments="&strMaxiPayExpvalue, Null
	End If
	
	Set objData				= Nothing
	Set objBorrowerPage		= Nothing
				
End Function



'This function is used to validate loan forms sections 
'@code
'    BIZ_ConstructionManangement_ConstructionPerm_CM_RegZLE_ATRorQM_FormValidations(strRowId,strConstructionOnlyPeriod)	
'@endcode
'@param strRowID - row id of test data
'@param strConstructionOnlyPeriod - construction mortgage period
	
Function BIZ_ConstructionManangement_ConstructionPerm_CM_RegZLE_ATRorQM_FormValidations(strRowId,strConstructionOnlyPeriod)
	
	Dim objBorrowerPage, objData, objQMGeneral, objQMXAgencyorGSE,intFlagIndex
	
	Set objData		    = FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowId)
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	
	'Navigate to Construction Management form	
	BIZ_Forms_Open "Construction Management"
	Wait g_ShortWaitMedium
	
	GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=TextBox12"),FRM_DS_GetValue(objData, "1177_InterestOnly"),"The field value is blank"
	GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=TextBox44"),FRM_DS_GetValue(objData, "4_Term"),"Field id:4 Term value "&FRM_DS_GetValue(objData, "4_Term")&""
	GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=TextBox45"),FRM_DS_GetValue(objData, "325_DueIn"),"Field id:325 Due In value "&FRM_DS_GetValue(objData, "325_DueIn")&""
	
	'Navigate to RegZ-LE form
	BIZ_Forms_Open "RegZ - LE"
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=DropdownBox5"), FRM_DS_GetValue(objData, "675_PrePayment"),"The '"& FRM_DS_GetValue(objData, "675_PrePayment")&"' value is selected in the drop down"
	
	'Navigate to ATR/QM management form
	BIZ_Forms_Open "ATR/QM Management"
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "ATR/QM Eligibility"	
	'GUI_Object_WaitTillExistX objBorrowerPage.WebTable("html tag:=TABLE","index:=1"), 60
	GUI_Object_WaitTillExistX objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("image type:=Plain Image","index:=21"), 60
	
	'Verify QMGeneral and QMAgency/GSE column and its fields validations
	For intFlagIndex=0 to 5																										'QM general column flags indexes from 0 to 5											
	
		Set objQMGeneral=objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=check-mark-green.png","index:="&intFlagIndex)
		
		If GUI_Object_IsExist(objQMGeneral) Then
			
		Select Case intFlagIndex
			Case "0"
				FRM_Logger_ReportPassEvent "Verify QMGeneral:'QMX.41' field ", "QMGeneral:'QMX.41' is green color and meets the ATR/QM standards", Null
			Case "1"
				FRM_Logger_ReportPassEvent "Verify QMGeneral:'QMX.42' field ", "QMGeneral:'QMX.42' is green color and  meets the ATR/QM standards", Null
			Case "2"
				FRM_Logger_ReportPassEvent "Verify QMGeneral:'QMX.43' field ", "QMGeneral:'QMX.43' is green color and meets the ATR/QM standards", Null
			Case "3"
				FRM_Logger_ReportPassEvent "Verify QMGeneral:'QMX.44' field ", "QMGeneral:'QMX.44' is green color and  meets the ATR/QM standards", Null
			Case "4"
				FRM_Logger_ReportPassEvent "Verify QMGeneral:'QMX.45' field ", "QMGeneral:'QMX.45' is green color and meets the ATR/QM standards", Null
			Case "5"
				FRM_Logger_ReportPassEvent "Verify QMGeneral:'QMX.46' field ", "QMGeneral:'QMX.46' is green color and meets the ATR/QM standards", Null
				FRM_Logger_ReportInfoEvent "Verify QMGeneral QM.X40  column", "The green tick mark is displayed for the QM.X40  column", Null
			Case Else
				FRM_Logger_ReportPassEvent "Verify QMGeneral fields", "No flags found", Null
		End Select
		Else
			FRM_Logger_ReportFailEvent "Verify QMGeneral QM.X40 column","The green tick mark not displayed for the QM.X40  column", Null
		End If 
	Next
												
	For intFlagIndex=6 to 11																									'QMXAgencyorGSE column flags indexes from 6 to 11
	
		Set objQMXAgencyorGSE=objBorrowerPage.WebTable("html tag:=TABLE","index:=1").Image("file name:=check-mark-green.png","index:="&intFlagIndex)
		
		If GUI_Object_IsExist(objQMXAgencyorGSE) Then
			
			Select Case intFlagIndex
				Case "6"
					FRM_Logger_ReportPassEvent "Verify QMAgency/GSE:QMX.63 field", "QMAgency/GSE:QMX.63 field is green color and meets the ATR/QM standards", Null	
				Case "7"
					FRM_Logger_ReportPassEvent "Verify QMAgency/GSE:QMX.64 field", "QMAgency/:QMX.64 field is green color and meets the ATR/QM standards", Null	
				Case "8"
					FRM_Logger_ReportPassEvent "Verify QMAgency/GSE:QMX.65 field", "QMAgency/GSEQMX.65 field is green color and meets the ATR/QM standards", Null
				Case "9"
					FRM_Logger_ReportPassEvent "Verify QMAgency/GSE:QMX.66 field", "QMAgency/GSE:QMX.66 field is green color and meets the ATR/QM standards", Null	
				Case "10"
					FRM_Logger_ReportPassEvent "Verify QMAgency/GSE:QMX.67 field", "QMAgency/GSE:QMX.67 field is green color and meets the ATR/QM standards", Null	
				Case "11"
					FRM_Logger_ReportPassEvent "Verify QMAgency/GSE:QMX.68 field", "QMAgency/GSE:QMX.68 fi field is green color and meets the ATR/QM standards", Null
					FRM_Logger_ReportInfoEvent "Verify QMGeneral QM.X62  column", "The green tick mark is displayed for the QM.X62  column", Null
				Case Else
					FRM_Logger_ReportPassEvent "Verify QMGeneral fields ", "No flags found", Null
			End Select
		 Else
			FRM_Logger_ReportFailEvent "Verify QMGeneral QM.X62 column","The green tick mark not displayed for the QM.X62  column", Null
		 End If 
	Next
	
	'If strConstructionOnlyPeriod="GreaterThan12" Then
		
		'Set Priod in 1003 page 1
		'BIZ_ConstructionManagement_SetConstructionPeriod "PTAC-1352_ConstructionPerm","GreaterThan12","1003 Page 1"
		
		'Navigate to ATR/QM management form
		'BIZ_Forms_Open "ATR/QM Management"
		'GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "ATR/QM Eligibility"
		'BIZ_ConstructionManagement_ConstructionPerm_ATRQM_QMX42andQMX64Validation()

	'End If

	Set objData				= Nothing
	Set objBorrowerPage 	= Nothing 
	Set objQMGeneral		= Nothing
	Set objQMXAgencyorGSE	= Nothing

End Function	



'This function is used to set construction mort period in any form depending on comparision conditions
'@code
'    BIZ_ConstructionManagement_SetConstructionPeriod(strConstructionOnlyPeriod)
'@endcode
'@param strRowID - row id of test data
'@param strConstructionOnlyPeriod - construction mortgage period
'@param strForm - loan form name
 
Function BIZ_ConstructionManagement_SetConstructionPeriod(strRowId,strConstructionOnlyPeriod,strForm)

	Dim objBorrowerPage, objData, arrConstructionPeriodOnly,intConstructionPeriod
	Set objData=FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowId)
	Set objBorrowerPage=SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	
	'Navigate to loan form
	BIZ_Forms_Open "1003 Page 1"
	arrConstructionPeriodOnly=Split(FRM_DS_GetValue(objData, "1176_RegZLEperiod"),",")

	'Set Construction mortgage period 
    If strConstructionOnlyPeriod="GreaterThan12" Then
	   intConstructionPeriod=arrConstructionPeriodOnly(0)
	ElseIf strConstructionOnlyPeriod="LessThan12" Then
		intConstructionPeriod=arrConstructionPeriodOnly(1)
	ElseIf strConstructionOnlyPeriod="EqualTo12" Then
		intConstructionPeriod=arrConstructionPeriodOnly(2)
	Else
		FRM_Logger_ReportFailEvent "Set testdata in Perid under ConstructionMortgage section in RegZ-LE form", "Verify data present in excel or not", Null
    End If
	
	GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1176"), intConstructionPeriod
	BIZ_Loan_Save()
	FRM_Logger_ReportInfoEvent "Set Construction Period ", "Construction Period is set as for the Field 1176:"&intConstructionPeriod&"", Null

	Set objData			= Nothing
	Set objBorrowerPage = Nothing 
	
End Function



'This function is to set loan info details in construction management form 
'@code
'    BIZ_ConstructionManagement_SetLoanInfo(strRowID)
'@endcode
'@param strRowID - row id of test data

Function BIZ_ConstructionManagement_SetLoanInfo(strRowID)
	
	FRM_Logger_ReportInfoEvent "Set Loan Info", "Set Loan Info using Row Id '"&strRowID&"' in the Borrower datasheet", Nul
	
	BIZ_Forms_Open "Construction Management"
	BIZ_ConstructionManagement_SetLoanInfoDetails strRowID

End Function



'This function is to set loan info details in construction management form 
'@code
'    BIZ_ConstructionManagement_SetLoanInfoDetails(strRowID)
'@endcode
'@param strRowID - row id of test data

Function BIZ_ConstructionManagement_SetLoanInfoDetails(strRowID)
	
	Dim objConstructionPage,objData
	
	Set objConstructionPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		    	= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID)
	
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "Loan Info"
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "682_FirstPaymentDate"))) Then
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox14"), Trim(FRM_DS_GetValue(objData, "682_FirstPaymentDate"))
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "20_YearAqd")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "20_YearAqd")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "21_OriginalCost")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "21_OriginalCost")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "10_ExistingLien")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "10_ExistingLien")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "22_PresentValOfLot(a)")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "22_PresentValOfLot(a)")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "23_CostofImprovements(b)")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox9"), FRM_DS_GetValue(objData, "23_CostofImprovements(b)")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CONST.X5_MaxLTV")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox19"), FRM_DS_GetValue(objData, "CONST.X5_MaxLTV")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CONST.X7_Holdback")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox21"), FRM_DS_GetValue(objData, "CONST.X7_Holdback")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CONST.X8_Holdback")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox22"), FRM_DS_GetValue(objData, "CONST.X8_Holdback")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CONST.X9_ProjectDelaySurchrge")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox23"), FRM_DS_GetValue(objData, "CONST.X9_ProjectDelaySurchrge")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1265_ReqdIntReserves")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox24"), FRM_DS_GetValue(objData, "1265_ReqdIntReserves")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4086_Req.IntrestReserves")) Then
        GUI_WebCheckBox_Set objConstructionPage.WebCheckBox("html id:=__cid_CheckBox16_Ctrl"), FRM_DS_GetValue(objData, "4086_Req.IntrestReserves") 
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4087_CreProhBorrIntPayments")) Then
        GUI_WebCheckBox_Set objConstructionPage.WebCheckBox("html id:=__cid_CheckBox17_Ctrl"), FRM_DS_GetValue(objData, "4087_CreProhBorrIntPayments") 
    End If
	
	val = FRM_DS_GetValue(objData, "19_LoanPurpose")
	If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
    End If    
	
    val = FRM_DS_GetValue(objData, "1172_LoanType")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
    End If
	
    val = FRM_DS_GetValue(objData, "420_LienPosition")
    If UTIL_String_IsNotEmpty(val) Then     
        GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
    End If  
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1109_LoanAmount")) Then      
        GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "1109_LoanAmount")
    End If
	
	val = FRM_DS_GetValue(objData, "1811_PropertyWillBe")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox4_Ctrl", "value:="&val), "ON"
    End If 
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1677_InterestRate"))) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox29"), Trim(FRM_DS_GetValue(objData, "1677_InterestRate"))
	End If
    
    val = FRM_DS_GetValue(objData, "608_AmortizationType")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "608_AmortizationType")) Then
    	val = FRM_DS_GetValue(objData, "608_AmortizationType")
    		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent" Then
    			GUI_WebCheckBox_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"  
    		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly" Then
    			GUI_WebCheckBox_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
			Else
				GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON" 			
    	End If 
    End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3_NoteRate")) Then 
        
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent" Then  'NoteRate 
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox42"), FRM_DS_GetValue(objData,"3_NoteRate")   'NoteRate
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly" Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=l_3"), FRM_DS_GetValue(objData,"3_NoteRate")   'NoteRate
		Else 
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=l_3|TextBox42","index:=0"), FRM_DS_GetValue(objData,"3_NoteRate")   'NoteRate
		End If 
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1014_QualRate")) Then
	
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox43"), FRM_DS_GetValue(objData,"1014_QualRate")    'QualRate
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly" Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=l_1014"), FRM_DS_GetValue(objData,"1014_QualRate")    'QualRate
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=l_1014|TextBox43","index:=0"), FRM_DS_GetValue(objData,"1014_QualRate")
		End If
	End If 
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4_Term")) Then
        
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox44"), FRM_DS_GetValue(objData,"4_Term")          'Term
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly" Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=l_4"), FRM_DS_GetValue(objData,"4_Term")          'Term
		Else		
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=l_4|TextBox44","index:=0"), FRM_DS_GetValue(objData,"4_Term") 
		End If 
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "325_DueIn")) Then   
        
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox45"), FRM_DS_GetValue(objData,"325_DueIn")    'DueIn
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly" Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=l_325"), FRM_DS_GetValue(objData,"325_DueIn")    'DueIn
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=l_325|TextBox45","index:=0"), FRM_DS_GetValue(objData,"325_DueIn")
		End If 
	End If  
	
	val = FRM_DS_GetValue(objData, "4084_ConstructionPermDisclose")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox21_Ctrl", "value:="&val), "ON"
    End If

	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "SYS6_EstInterestOn"))) Then 
		GUI_WebList_Select objConstructionPage.WebList("html id:=DropdownBox2","index:=0"), Trim(FRM_DS_GetValue(objData, "SYS6_EstInterestOn"))
	End If
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1962_NoOfdays"))) Then 
		GUI_WebList_Select objConstructionPage.WebList("html id:=DropdownBox3","index:=0"), Trim(FRM_DS_GetValue(objData, "1962_NoOfdays"))
	End If
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1176_Period"))) Then 
		If GUI_Object_IsExist(objConstructionPage.WebTable("innertext:=Construction Loan Terms.*")) Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Construction Loan Terms.*").WebEdit("html id:=TextBox28"), Trim(FRM_DS_GetValue(objData, "1176_Period"))
		ElseIf GUI_Object_IsExist(objConstructionPage.WebTable("innertext:=Loan Terms.*")) Then	
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=TextBox58"), Trim(FRM_DS_GetValue(objData, "1176_Period"))
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox58|TextBox28","index:=0"), FRM_DS_GetValue(objData, "1176_Period")
		End If 
	End If
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1177_InterestOnly"))) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox12"), Trim(FRM_DS_GetValue(objData, "1177_InterestOnly"))
	End If
	
	val = FRM_DS_GetValue(objData, "CONST.X13_AmortizationType")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox20_Ctrl", "value:="&val), "ON"  
    End If
  
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "763_EstClosingDate"))) Then    
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox13"), Trim(FRM_DS_GetValue(objData, "763_EstClosingDate"))
	End If
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1963_ConstrCompDt"))) Then    
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox15"), Trim(FRM_DS_GetValue(objData, "1963_ConstrCompDt"))
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "697_1stAdjCap")) Then
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
       	  GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox46"), FRM_DS_GetValue(objData, "697_1stAdjCap")
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly" Then
       	  GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=TextBox46"), FRM_DS_GetValue(objData, "697_1stAdjCap")
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox46"), FRM_DS_GetValue(objData, "697_1stAdjCap")
		End If
		 
    End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "696_1stChange")) Then
        If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox47"), FRM_DS_GetValue(objData, "696_1stChange")
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=TextBox47"), FRM_DS_GetValue(objData, "696_1stChange")
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox47"), FRM_DS_GetValue(objData, "696_1stChange")
		End If
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "695_AdjCap")) Then
       	If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox48"), FRM_DS_GetValue(objData, "695_AdjCap")
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=TextBox48"), FRM_DS_GetValue(objData, "695_AdjCap")
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox48"), FRM_DS_GetValue(objData, "695_AdjCap")
		End If
   	End If
   
   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "694_AdjPeriod")) Then
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox49"), FRM_DS_GetValue(objData, "694_AdjPeriod")
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=TextBox49"), FRM_DS_GetValue(objData, "694_AdjPeriod")
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox49"), FRM_DS_GetValue(objData, "694_AdjPeriod")
		End If 
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "247_LifeCap")) Then
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox50"), FRM_DS_GetValue(objData, "247_LifeCap")
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly" Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=TextBox50"), FRM_DS_GetValue(objData, "247_LifeCap")
		Else
		    GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox50"), FRM_DS_GetValue(objData, "247_LifeCap")
		End If	
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "689_Margin")) Then
        If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData, "689_Margin")
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData, "689_Margin")
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData, "689_Margin")
		End If
    End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "688_Index")) Then
        If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html id:=TextBox53"), FRM_DS_GetValue(objData, "688_Index")
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html id:=TextBox53"), FRM_DS_GetValue(objData, "688_Index")
		Else
		    GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox53"), FRM_DS_GetValue(objData, "688_Index")
		End If
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2625_MaxLifeInterestRate")) Then
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebEdit("html Id:=TextBox51"), FRM_DS_GetValue(objData, "2625_MaxLifeInterestRate") 'Sets Max Life interest Rate
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly"  Then
			GUI_WebEdit_Set objConstructionPage.WebTable("innertext:=Loan Terms.*").WebEdit("html Id:=TextBox51"), FRM_DS_GetValue(objData, "2625_MaxLifeInterestRate") 'Sets Max Life interest Rate
		Else
			GUI_WebEdit_Set objConstructionPage.WebEdit("html Id:=TextBox51"), FRM_DS_GetValue(objData, "2625_MaxLifeInterestRate") 'Sets Max Life interest Rate
		End If  		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1959_ARMIndexType")) Then
		If FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionToPermanent"  Then
			GUI_WebList_Select objConstructionPage.WebTable("innertext:=Permanent Loan Terms.*").WebList("html id:=DropdownBox7"), FRM_DS_GetValue(objData, "1959_ARMIndexType") 
		ElseIf FRM_DS_GetValue(objData, "19_LoanPurpose")="ConstructionOnly"  Then
		    GUI_WebList_Select objConstructionPage.WebTable("innertext:=Loan Terms.*").WebList("html id:=DropdownBox7"), FRM_DS_GetValue(objData, "1959_ARMIndexType") 
		Else
			GUI_WebList_Select objConstructionPage.WebList("html id:=DropdownBox7"), FRM_DS_GetValue(objData, "1959_ARMIndexType") 
		End If
	End If
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1677_InterestRate"))) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox29"), Trim(FRM_DS_GetValue(objData, "1677_InterestRate"))
	End If
	
	 val = FRM_DS_GetValue(objData, "CONST.X1_ConstrPeriodIncLoanTerms")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox22_Ctrl", "value:="&val), "ON"
    End If
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1961_FinalPaymentdate"))) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox17"), Trim(FRM_DS_GetValue(objData, "1961_FinalPaymentdate"))
	End If
	
	'Added for KBYO2 Change Rohit
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1964_InitialAcquistion"))) Then 
		 GUI_WebCheckBox_Set objConstructionPage.WebCheckbox("html id:=__cid_CheckBox11_Ctrl"), "ON"
	End If
	

	
	Set objConstructionPage = Nothing
	Set objData		    	= Nothing
	
End Function	
	
	
	
'This function is to set project data details in construction management form 
'@code
'    BIZ_ConstructionManagement_SetProjectDataDetails(strRowID)
'@endcode
'@param strRowID - row id of test data

Function BIZ_ConstructionManagement_SetProjectDataDetails(strRowID)

	Dim objConstructionPage,objData
	
	Set objConstructionPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		    = FRM_DS_GetTestData("ConstructionManagement", "SetProjectData", strRowId)
	
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "Project Data"
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CONST.X10_ConstContrDT")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "CONST.X10_ConstContrDT")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CONST.X12_CommLetterDT")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "CONST.X12_CommLetterDT")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CONST.X11_CommExpDT")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "CONST.X11_CommExpDT")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CONST.X14_ReturnLenderPeriod")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "CONST.X14_ReturnLenderPeriod")
	End If

	Set objConstructionPage = Nothing
	Set objData		    = Nothing

End Function



'This function is to Set Basic info details in construction management form 
'@code
'    BIZ_ConstructionManagement_SetBasicInfoDetails(strRowID)
'@endcode
'@param strRowID - row id of test data

Function BIZ_ConstructionManagement_SetBasicInfoDetails(strRowID)

	Dim objConstructionPage,objData
	
	Set objConstructionPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		    = FRM_DS_GetTestData("ConstructionManagement", "SetBasicInfo", strRowId)
	
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "Basic Info"
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4089_UnimprEstValue")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "4089_UnimprEstValue")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4090_UnimpEstValue")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "4090_UnimpEstValue")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1240_HomeEmail")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=l_1240"), FRM_DS_GetValue(objData, "1240_HomeEmail")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstName")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=l_36"), FRM_DS_GetValue(objData, "FirstName")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastName")) Then 
		GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=l_37"), FRM_DS_GetValue(objData, "LastName")
	End If
	
	Set objConstructionPage = Nothing
	Set objData		    = Nothing

End Function



'This function is used to Set construction period in RegZ-LE page for less than,greater than and equal to 12 months period
'@code
'    BIZ_ConstructionManagement_RegZLE_SetConstructionPeriod(strRowID,strConstructionOnlyPeriod)
'@endcode
'@param strRowID - Loan Details data in test data
'@param strConstructionOnlyPeriod - Construction only mortgage Period

Function BIZ_ConstructionManagement_RegZLE_SetConstructionPeriod(strRowID,strConstructionOnlyPeriod)

	Dim objBorrowerPage,objData
	
	Set objData			= FRM_DS_GetTestData("Forms_RegZ-LE","SetConstruction", strRowID)
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page")

	'Navigate to RegZ - LE page
    BIZ_Forms_Open "RegZ - LE"
    
	'Set Construction mortgage period 
		Select Case strConstructionOnlyPeriod
			Case "GreaterThan12"
				GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period_GreaterThan12")
			Case "LessThan12"
				GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period_LessThan12")
			Case "EqualTo12"
				GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period_EqualTo12")
			Case Else 
				FRM_Logger_ReportInfoEvent "Set testdata in Perid under ConstructionMortgage section in RegZ-LE form", "Verify data present in excel or not", null   	  
		End Select

	'Save Loan
	BIZ_Loan_Save()
	
	Set objData			= Nothing
	Set objBorrowerPage	= Nothing
	
End Function



'This function is used to set borrower details for construction loan program 
'@code
'    BIZ_ConstructionManagement_ConstructionLoanProgram_SetBorrowerDetails(strRowId)
'@endcode
'@param strRowID - row id of test data

Function BIZ_ConstructionManagement_ConstructionLoanProgram_SetBorrowerDetails(strRowId)
	
	Dim objBorrowerPage
	
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	
	'Go to Pipeline>>NewLoanButton>>Forms
	BIZ_Nav_Pipeline_Forms_FormType "My Pipeline", "Borrower Summary - Origination"

	'Set Basic Borrower info in borrower section
	BIZ_Common_BorrowerSummaryOrigination_SetBorrower objBorrowerPage, strRowId

	'SetTransaction details in transaction section
	BIZ_Common_BorrowerSummaryOrigination_SetTransactionDetails objBorrowerPage, strRowId

	'Set property details in  property section
	BIZ_Common_BorrowerSummaryOrigination_SetProperty objBorrowerPage, strRowId
	
	'Save Loan
	BIZ_Loan_Save()
	
	'Get Loan Number
	strLoanNumber = BIZ_Loan_GetLoanNumber()

	Set objBorrowerPage		=  Nothing
	
	BIZ_ConstructionManagement_ConstructionLoanProgram_SetBorrowerDetails = strLoanNumber

End Function



'This function creates loan with property info,borrower info and transaction details in BSO page and returns loan number
'@code
'   BIZ_ConstructionManagement_CashoutRefinanceLoan_Create(strRowID)
'@endcode
'@param strRowID- row id of the data in spreadsheet
'@param strLoanNumber-return value of loan number

Function BIZ_ConstructionManagement_CashoutRefinanceLoan_Create(strRowID)
	
	Dim objData,strLoanNumber,strPurposeofLoan
	
	Set objData	= FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
	
	strPurposeofLoan=FRM_DS_GetValue(objData, "LoanPurpose")
	
	'loan creation with borrower,property and transaction details
	strLoanNumber=BIZ_ConstructionManagement_ConstructionLoanProgram_SetBorrowerDetails(strRowID)
	
	'Exit loan
	BIZ_Loan_Exit True
	
	FRM_Logger_ReportInfoEvent "CashOutRefinace LoanCreation","'"&strPurposeofLoan&"' Loan has been created with Loan Number:'"&strLoanNumber&"'", Null
	
	Set objData = Nothing
	
	BIZ_ConstructionManagement_CashoutRefinanceLoan_Create=strLoanNumber
	
End Function



'This function creates loan with property info,borrower info in BSO and Loan info of Construction Management pages and returns loan number
'@code
'   BIZ_ConstructionManagement_ConstructionLoan_Create(strRowID)
'@endcode
'@param strRowID- row id of the data in spreadsheet
'@param strLoanNumber-return value iof loan number

Function BIZ_ConstructionManagement_ConstructionLoan_Create(strRowID)
	
	Dim objData,objBorrowerPage,strLoanNumber
	
	Set objData			= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID)
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	
	strPurposeofLoan=FRM_DS_GetValue(objData, "19_LoanPurpose")
	
	'Naviage to pipeline>>Borrower summary Origination
	BIZ_Nav_Pipeline_Forms_FormType "My Pipeline", "Borrower Summary - Origination"
	
	'Set property info in property section of BSo page
	BIZ_Common_BorrowerSummaryOrigination_SetProperty objBorrowerPage,strRowID
	
	'Set property info in property section of BSo page
	BIZ_Common_BorrowerSummaryOrigination_SetBorrower objBorrowerPage,strRowID
	
	'Set Loan Info details in Construction Management page
	BIZ_ConstructionManagement_SetLoanInfo strRowID
	
	'Save the Loan
	BIZ_Loan_Save()
	
	'Get the Loan number
	strLoanNumber=BIZ_Loan_GetLoanNumber()
	
	FRM_Logger_ReportInfoEvent "CashOutRefinace LoanCreation","'"&strPurposeofLoan&"' Loan has been created with Loan Number:'"&strLoanNumber&"'", Null
	
	Set objData			= Nothing
	Set objBorrowerPage = Nothing
	
	BIZ_ConstructionManagement_ConstructionLoan_Create=strLoanNumber

End Function



'Validates the synced data after linking loans in construction page 
'@code
'   BIZ_ConstructionManagement_LinkedLoan_SyncedData_ValidateLinkToPerm(strRowID1,strRowID2,strEncompassYorN)
'@endcode
'@param strRowID1- row id of the data in spreadsheet
'@param strRowID2- row id of the data in spreadsheet
'@strEncompassYorN-encompass dialog yes or no
 
 Function BIZ_ConstructionManagement_LinkedLoan_SyncedData_ValidateLinkToPerm(strRowID1,strRowID2,strEncompassYorN)
 	
 	FRM_Logger_ReportInfoEvent "Validate the synced data after linking loans","Sync Data validation after Link loans ", Null
 	
 	Dim objConstructionPage,objEncompassDialog,intConstructionLoanXPosition,intPermLoanXPosition
	
	Set objConstructionPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page") 
 	Set objEncompassDialog  = SwfWindow("swfname:=MainForm").Dialog("text:=Encompass")
 	Set objDataRefi			= FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID1)
 	Set objData				= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID2)	
	
	If  UTIL_String_IsNotEmpty(strEncompassYorN)  Then
		
		Select Case strEncompassYorN
			Case "Yes"
				GUI_Dialog_Encompass_Yes FRM_DS_GetValue(objData,"EncompassTxt")
				strNoteRate= FormatNumber(FRM_DS_GetValue(objData,"3_NoteRate"),3)
				strQualRate= FormatNumber(FRM_DS_GetValue(objData,"1014_QualRate"),3)
				strTerm	   = FRM_DS_GetValue(objData,"4_Term")
				strDueIn   = FRM_DS_GetValue(objData,"325_DueIn")			
			Case "No"
				GUI_Dialog_Encompass_No FRM_DS_GetValue(objData,"EncompassTxt")
				strNoteRate= FormatNumber(FRM_DS_GetValue(objDataRefi,"NoteRate"),3)
				strQualRate= FormatNumber(FRM_DS_GetValue(objDataRefi,"QualRate"),3)
				strTerm	   = FRM_DS_GetValue(objDataRefi,"Term")
				strDueIn   = FRM_DS_GetValue(objDataRefi,"DueIn")			
			Case Else
				FRM_Logger_ReportFailEvent "Link the Loans","No data found for the selection", Null
		End Select
	End If 	
	
	intConstructionLoanXPosition = GUI_Object_GetPropertyValue(objConstructionPage.WebElement("innertext:=Construction Loan.*"),"abs_x")
	intPermLoanXPosition		 = GUI_Object_GetPropertyValue(objConstructionPage.WebElement("innertext:=Perm Loan"),"abs_x")
	
	If intConstructionLoanXPosition<intPermLoanXPosition Then
		FRM_Logger_ReportPassEvent "Verify Construction Loan and Perm Loan UI","Construction Loan displays on Left side and Perm displays on Right side ", Null
	Else
		FRM_Logger_ReportFailEvent "Verify Construction Loan and Perm Loan UI","No data displayed ", Null
	End If
 					
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_3_link"),strNoteRate,"'Note Rate' in Perm Loan Section"
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox11"),strQualRate,"'Qual Rate' in Perm Loan Section"
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox13"),strTerm,"'Term' in Perm Loan Section"
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox12"),strDueIn,"'DueIn' in Perm Loan Section"
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_3"), FormatNumber(FRM_DS_GetValue(objData,"3_NoteRate"),3),"'Note Rate' in Construction Loan Section"
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_1014"),FormatNumber(FRM_DS_GetValue(objData,"1014_QualRate"),3),"'Qual Rate' in Construction Loan Section"
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_4"), FRM_DS_GetValue(objData,"4_Term"),"'Term' in Construction Loan Section"
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_325"),FRM_DS_GetValue(objData,"325_DueIn"),"'DueIn' in Construction Loan Section"
	GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox2"),FormatNumber(FRM_DS_GetValue(objData, "AppraisedValue"),0), "AppraisedValue" 
	GUI_Object_ValidateValue objConstructionPage.WebList("html id:=DropdownBox1"),FRM_DS_GetValue(objData, "1172_LoanType"), "LoanType" 
	GUI_Object_ValidateValue objConstructionPage.WebList("html id:=DropdownBox3"),FRM_DS_GetValue(objData, "Property"), "PropertyWillbe" 
			 		
	Set objConstructionPage = Nothing
 	Set objEncompassDialog 	= Nothing
 	Set objData				= Nothing
	Set objDataRefi			= Nothing	
 
 End Function
 
 
 
 'Links the two different loans in construction page 
'@code
'   BIZ_ConstructionManagement_LinkLoansLinkToPerm(strRowID,strLoanNumber) 
'@endcode
'@param strRowID- row id of the data in spreadsheet
'@param strLoanNumber- Loan number to be linked
 
 Function BIZ_ConstructionManagement_LinkLoansLinkToPerm(strRowID,strLoanNumber) 
 		
 	FRM_Logger_ReportInfoEvent "Link Loans","Link the Construction Loan and Perm Loan and sync data ", Null

	Dim objConstructionPage,objLoanDialog,objSyncTemplate,objData
	
	Set objConstructionPage	= SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0") 
 	Set objLoanDialog		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LinkLoanDialog")
 	Set objSyncTemplate 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TemplateSelectionDialog")
 	Set objData				= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID)
 	
 	'Link the loan created and validate the link loan popup window
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "Linked Loans"
	GUI_WebButton_Click objConstructionPage.WebButton("name:=Link to Perm")
	GUI_Object_WaitTillExistX objLoanDialog,40
	
	GUI_Object_ValidateText objLoanDialog,FRM_DS_GetValue(objData,"LinktoLoanTxt"),"'"&FRM_DS_GetValue(objData,"LinktoLoanTxt")&"' popup is displayed"
	GUI_List_ClickRow objLoanDialog.SwfObject("swfname:=detailListView"),objLoanDialog.SwfScrollBar("swfname:=vPanelScrollBar"), "Loan Number", strLoanNumber, True, False, False, "Single" 
	Wait g_TinyWaitMedium
	GUI_SwfButton_Click objLoanDialog.SwfButton("swfname:=okbutton")
	Wait g_TinyWaitMedium
 	GUI_Object_WaitTillExistX objSyncTemplate,40
 	GUI_Object_ValidateText objSyncTemplate,FRM_DS_GetValue(objData,"SynctemplateTxt"),"'"&FRM_DS_GetValue(objData,"SynctemplateTxt")&"' popup is displayed "
 	wait 10
	'Select the template and sync loans and its data
	GUI_List_SelectItem objSyncTemplate.SwfObject("swfname:=gvDirectory"),FRM_DS_GetValue(objData,"SyncTemplateName"),"Name"
 	GUI_SwfButton_Click objSyncTemplate.SwfButton("swfname:=selectBtn")
	
 	Set objBorrowerPage 	= Nothing
	Set objLoanDialog		= Nothing
 	Set objSyncTemplate		= Nothing
 	Set objData				= Nothing
 
 End Function 
 

'This function is to validate the Adjustable Interest Rate Table
'@code
'    BIZ_ConstructionManagement_AdjustableInterestRateTable_Validate(strRowID)
'@endcode
'@param strRowID-The numeric or string unique ID that used to find the line in the data spreadsheet
'@param boolInterestOnly-boolean value interest ibly value True or False

Function BIZ_ConstructionManagement_AdjustableInterestRateTable_Validate(strRowID,boolInterestOnly)
	
	FRM_Logger_ReportInfoEvent "Adjustable Interest Rate tablevalidations", "Verify AIR table fields using data from Row id:"&strRowID&"", Null
	
	Dim objConstructionPage,objData,objDataLoan,intIntRateChangeFreq,boolInterestRate,strLE297Txt
	
	Set objConstructionPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		    	= FRM_DS_GetTestData("Forms_RegZ-LE", "SetAIR", strRowID)
	Set objDataLoan		    = FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID)
	
	boolInterestRate	 = (FRM_DS_GetValue(objDataLoan,"1677_InterestRate"))>(FRM_DS_GetValue(objDataLoan,"3_NoteRate"))
	intIntRateChangeFreq = FRM_DS_GetValue(objData,"LE2.X99_BeginingIntFreq")
	strLE297Txt			 = GUI_Object_GetPropertyValue(objConstructionPage.WebEdit("html id:=TextBox32"),"value")
	
	Select Case boolInterestRate
		Case False
				If GUI_Object_IsExist(objConstructionPage.WebElement("innertext:=Adjustable Interest Rate \(AIR\) Table","index:=0")) Then
			Select Case boolInterestOnly
				Case False
					GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox35","index:=0"),FRM_DS_GetValue(objData,"InterestRateAdj"),"Intererst Rate Adjustment"
					GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox36","index:=0"),FormatNumber(FRM_DS_GetValue(objData,"InitialIntRate"),3),"Initial Interest Rate"
				Case True
					GUI_Object_ValidateProperty objConstructionPage.WebElement("html id:=Label249","index:=0"), "innertext",FRM_DS_GetValue(objData,"InterestRateAdjTxt"),"'Index + Margin' text is changed to 'Interest Rate Adjustments'"
					GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox35","index:=0"), FRM_DS_GetValue(objData,"InterestRateAdj"),"LE2.X96 & F689 are removed and replaced with new Field (field # TBD) = "&FRM_DS_GetValue(objData,"CD4.X47_InterestRate")&""
					GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox36","index:=0"),FormatNumber(FRM_DS_GetValue(objDataLoan,"1677_InterestRate"),3), "Initial Interest Rate ="&FRM_DS_GetValue(objData,"1677_InterestRate")&" (F1677)"	
				Case Else
					FRM_Logger_ReportFailEvent "Adjustable Interest Rate table validations", "No parameter passed", Null
			End Select
					GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox34"),FRM_DS_GetValue(objDataLoan,"3_NoteRate"),"Max Interest Rate"
					GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox37"),FormatNumber(FRM_DS_GetValue(objDataLoan,"1677_InterestRate"),3),"Min Interest Rate"
					GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox38"),intIntRateChangeFreq,"Interest rate change frequency beginning of '"&intIntRateChangeFreq&""&strLE297Txt&"' mth"
					GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox41"),FormatNumber(FRM_DS_GetValue(objData,"IntRateChangeLimit"),3),"Limits on Interest Rate Changes First Change:"&FRM_DS_GetValue(objDataLoan,"3_NoteRate")&"%"
				 Else
					FRM_Logger_ReportFailEvent "Adjustable Interest Ratble validations", "Table not Displayed", Null
				 End If		
		Case True
			If GUI_Object_IsExist(objConstructionPage.WebElement("innertext:=Adjustable Interest Rate \(AIR\) Table","visible:=False")) Then
			
				FRM_Logger_ReportFailEvent "Adjustable Interest Rate Table validations", "Table Displayed", Null	
			Else
				FRM_Logger_ReportPassEvent "Adjustable Interest Rate Table validations", "Table not Displayed", Null
			End If
		Case Else
			FRM_Logger_ReportFailEvent "Adjustable Interest Rate Table validations", "Invalid data,please check with correct set of test data", Null
	End Select
	
	Set objConstructionPage	= Nothing
	Set objData				= Nothing
	Set objDataLoan			= Nothing
	
End Function



'This function is to validate the Interest Frequency Beginning in Adjustable Interest Rate Table
'@code
'    BIZ_ConstructionManagement_AIRTable_InterestFrequencyBeginning_Validate(strRowID)
'@endcode
'@param strRowID-The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ConstructionManagement_AIRTable_InterestFrequencyBeginning_Validate(strRowID)

	FRM_Logger_ReportInfoEvent "Adjustable Interest Rate table validations", "Verify AIR table fields using data from Row id:"&strRowID&"", Null
	
	Dim objConstructionPage,objData,strLE297Txt,arrInterestOnly,intIntrestOnlyCount
	
	Set objConstructionPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		    	= FRM_DS_GetTestData("Forms_RegZ-LE", "SetConstruction", strRowID)
	Set objDataAir		    = FRM_DS_GetTestData("Forms_RegZ-LE", "SetAIR", strRowID)
	
	arrInterestOnly=Split(FRM_DS_GetValue(objData,"1177_InterestOnlyAIR"),",")
	
	For intIntrestOnlyCount = 0 To UBound(arrInterestOnly) Step 1
		
		BIZ_Forms_Open "RegZ - LE"
		
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"1177_InterestOnlyAIR")) Then
			GUI_WebEdit_Set objConstructionPage.WebEdit("html id:=l_1177","index:=0"),arrInterestOnly(intIntrestOnlyCount)
		End If
		
		Select Case arrInterestOnly(intIntrestOnlyCount)
			
			Case "8"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly8IntFreq")
			Case "9"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly9IntFreq")
			Case "10"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly10IntFreq")
			Case "11"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly11IntFreq")
			Case "12"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly12IntFreq")
			Case "13"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly13IntFreq")
			Case "14"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly14IntFreq")
			Case "15"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly15IntFreq")
			Case "16"
				strInterestFreq=FRM_DS_GetValue(objDataAir,"LE2.X99_Intonly16IntFreq")
			Case Else
				FRM_Logger_ReportFailEvent "AIR Beginning Interest Frequency Validation", "Insufficient data", Null
			
		End Select
		
		strLE297Txt	= GUI_Object_GetPropertyValue(objConstructionPage.WebEdit("html id:=TextBox32"),"value")
		GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox38"),strInterestFreq,"Beginning of '"&strInterestFreq&""&strLE297Txt&"' mth"
	Next
	
		Set objConstructionPage = Nothing
		Set objData				= Nothing
	
End Function

'This function is verify EscrowFirstPayment for non construction permanent loans
'@code
'     BIZ_CostructionManagement_NonConstrPermLoan_EscrowFirstPayment_Verify(strRowID)
'@endcode
'@param strRowID Row id of testdata in excel spread sheet

Function BIZ_CostructionManagement_NonConstrPermLoan_EscrowFirstPayment_Verify(strRowID)
	
	Dim objData,objBorrowerPage,arrPurposeofLoan,strPurposeofLoan,boolPurposeofLoan,val,dtmConvert,intFirstPaymentDt,intEscowFirstPaymentDt
	
	Set objData 		= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID)
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	
	arrPurposeofLoan=Split(FRM_DS_GetValue(objData,"19_LoanPurpose"),";")
	
	For intPurposeofLoanCount = 0 To Ubound(arrPurposeofLoan) Step 1
		strPurposeofLoan=arrPurposeofLoan(intPurposeofLoanCount)
		boolPurposeofLoan=UTIL_String_IsMatch(Trim(strPurposeofLoan), "ConstructionToPermanent")
		
		Select Case boolPurposeofLoan
			Case True
			
			val=Trim(strPurposeofLoan)
			BIZ_Forms_Open "Borrower Summary - Origination"
			
			If UTIL_String_IsNotEmpty(val) Then 
		        GUI_WebCheckBox_Set objBorrowerPage.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val,"index:=0"), "ON"
		    End If
			
			BIZ_Forms_Open "1003 Page 1"
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1176_Period")) Then
	       	 	GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period")
	    	End If
		
		    BIZ_Forms_Open "Aggregate Escrow Account"
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EScrow1stPaymentDateBasis")) Then
				GUI_WebList_Select objBorrowerPage.WebList("html id:=DropdownBox1"),FRM_DS_GetValue(objData,"EScrow1stPaymentDateBasis")
				FRM_Logger_ReportInfoEvent "Set Escrow 1st payment date basis","Escrow first Payement date updated and saved",Null
			End If
	
	    	BIZ_Loan_Save()
			FRM_Logger_ReportInfoEvent "Set Loan type",""&val&" Loan is created successfully",Null
			
			intFirstPaymentDt = UTIL_Date_FormatDateByPattern(FRM_DS_GetValue(objData,"682_FirstPaymentDate"), "mm/dd/yyyy")
			intEscowFirstPaymentDt = GUI_Object_GetPropertyValue(objBorrowerPage.WebEdit("html id:=TextBox108"),"value")
			
			FRM_VerifyNotEqual intFirstPaymentDt, intEscowFirstPaymentDt, "Verify Escrow First Payment:"&intEscowFirstPaymentDt&" date should not be equal to first payment date;"&intFirstPaymentDt&"", "Verified the Escrow First Payment date should not be equal to first payment date "
			
			Case False
			BIZ_Forms_Open "Borrower Summary - Origination"
			val = Trim(strPurposeofLoan)
			
			If UTIL_String_IsNotEmpty(val) Then 
		        GUI_WebCheckBox_Set objBorrowerPage.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val,"index:=0"), "ON"
		    End If
		    
		    GUI_Object_WaitTillExistX objBorrowerPage.WebEdit("html id:=l_9"),40
		    
		    If val="Other" Then
		    	GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_9"),"Other"
		    End If
		    
			GUI_Object_ValidateUnChecked objBorrowerPage.WebCheckbox("html id:=__cid_CheckBox15_Ctrl", "value:=ConstructionToPermanent"),0,"Field19 not equal to ConstructionToPermanent"	
		    BIZ_Forms_Open "Aggregate Escrow Account"
		    dtmConvert = UTIL_Date_FormatDateByPattern(FRM_DS_GetValue(objData,"682_FirstPaymentDate"), "mm/dd/yyyy")
		    GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=TextBox108"),dtmConvert,"FHUD 68 Escrow first Payment equal to F682 first payment date"
			BIZ_Loan_Save()
			FRM_Logger_ReportInfoEvent "Set Loan type",""&val&" Loan is created successfully",Null
			Case Else
			FRM_Logger_ReportFailEvent "Select the Purpose of Loan","No data found for selection",Null
		End Select 
		
	Next		
	
	Set objData 		= Nothing
	Set objBorrowerPage = Nothing

End Function
	
	
	
'This function is to SetEscrowDetail in CM form
'@code
'     BIZ_Forms_2015Itemization_FieldRuleWindow_SetEscrowDetails(strRowID)
'@endcode
'@param strRowID Row id of testdata in excel spread sheet

Function BIZ_Forms_2015Itemization_FieldRuleWindow_SetEscrowDetails(strRowID)
	
	Dim objBorrowerPage,objData
	
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		    = FRM_DS_GetTestData("Forms_2015Itemization", "Set1000Section", strRowID)
	
	GUI_WebButton_Click objBorrowerPage.WebButton("html id:=StandardButton6")
	GUI_Object_WaitTillExistX objBorrowerPage.SwfWindow("swfname:=InsuranceDialog"), 40
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TaxInterestRate")) Then
		GUI_SwfEdit_Set objBorrowerPage.SwfWindow("swfname:=InsuranceDialog").SwfEdit("swfname:=rateTxt"), FRM_DS_GetValue(objData, "TaxInterestRate")
	End If
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=InsuranceDialog").SwfButton("swfname:=okBtn")
	
	Set objBorrowerPage = Nothing
	Set objData			= Nothing

End Function



'This function is to set SetFieldRuleDetails
'@code
'     BIZ_ConstructionManagement_2015Itemization_SetFieldRuleDetails(strRowID)
'@endcode
'@param strRowID Row id of testdata in excel spread sheet

Function BIZ_ConstructionManagement_2015Itemization_SetFieldRuleDetails(strRowID)
	
	Dim objBorrowerPage,objData
	
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		    = FRM_DS_GetTestData("Forms_2015Itemization", "Set1000Section", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1628_MiscReserve")) Then
		GUI_SwfEdit_Set objBorrowerPage.WebEdit("html id:=l_1628"),FRM_DS_GetValue(objData, "1628_MiscReserve")
	End If

	Set objBorrowerPage = Nothing
	Set objData			= Nothing

End Function



'This function is to Link Loans 
'@code
'    BIZ_ConstructionManagement_LinkLoans(strRowID,strLoanNumber,strLinkBtnType) 
'@endcode
'@param strRowID Row id of testdata in excel spread sheet
'@param strLoanNumber LoanNumber of testdata in excel spread sheet
'@param strLinkBtnType 

Function BIZ_ConstructionManagement_LinkLoans(strRowID,strLoanNumber,strLinkBtnType) 
 		
 	FRM_Logger_ReportInfoEvent "Link Loans","Link the Construction Loan and Perm Loan and sync data ", Null

	Dim objConstructionPage,objLoanDialog,objSyncTemplate,objData
	
	Set objConstructionPage	= SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0") 
 	Set objLoanDialog		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LinkLoanDialog")
 	Set objSyncTemplate 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TemplateSelectionDialog")
 	Set objData				= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID)
 	
 	'Link the loan created and validate the link loan popup window
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "Linked Loans"
	
	If GUI_Object_IsExist(objConstructionPage.WebButton("name:="&strLinkBtnType)) Then
		GUI_WebButton_Click objConstructionPage.WebButton("name:="&strLinkBtnType)
		FRM_Logger_ReportInfoEvent "Click on "&strLinkBtnType&" Button","Clicked on"&strLinkBtnType,Null
	Else
		FRM_Logger_ReportDebugEvent "Click on "&strLinkBtnType&" Button","Not Clicked on"&strLinkBtnType,Null
	End If 
	
	If strLinkBtnType ="Link to Perm" Then
		GUI_Object_ValidateText objLoanDialog,FRM_DS_GetValue(objData,"LinktoLoanTxt"),"'"&FRM_DS_GetValue(objData,"LinktoLoanTxt")&"' popup is displayed"
		GUI_List_ClickRow objLoanDialog.SwfObject("swfname:=detailListView"),objLoanDialog.SwfScrollBar("swfname:=vPanelScrollBar"), "Loan Number", strLoanNumber, True, False, False, "Single" 
		GUI_SwfButton_Click objLoanDialog.SwfButton("swfname:=okbutton")
	End If 

 	GUI_Object_WaitTillExistX objSyncTemplate,40
 	GUI_Object_ValidateText objSyncTemplate,FRM_DS_GetValue(objData,"SynctemplateTxt"),"'"&FRM_DS_GetValue(objData,"SynctemplateTxt")&"' popup is displayed "
 	
	wait 10
	'Select the template and sync loans and its data
	GUI_List_SelectItem objSyncTemplate.SwfObject("swfname:=gvDirectory"),FRM_DS_GetValue(objData,"SyncTemplateName"),"Name"
 	GUI_SwfButton_Click objSyncTemplate.SwfButton("swfname:=selectBtn")
 	
 	Set objBorrowerPage 	= Nothing
	Set objLoanDialog		= Nothing
 	Set objSyncTemplate		= Nothing
 	Set objData				= Nothing
 
End Function



'This function is to ConstructionLoan 1003 create
'@code
'    BIZ_ConstructionManagement_ConstructionLoan1003_Create(strRowID) 
'@endcode
'@param strRowID Row id of testdata in excel spread sheet

Function BIZ_ConstructionManagement_ConstructionLoan1003_Create(strRowID)
	
	Dim objData,objBorrowerPage,strLoanNumber
	
	Set objData			= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID)
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	
	strPurposeofLoan=FRM_DS_GetValue(objData, "19_LoanPurpose")
	
	'Naviage to pipeline>>Borrower summary Origination
	BIZ_Nav_Pipeline_Forms_FormType "My Pipeline", "Borrower Summary - Origination"
	
	'Set property info in property section of BSo page
	BIZ_Common_BorrowerSummaryOrigination_SetProperty objBorrowerPage,strRowID
	
	'Set property info in property section of BSo page
	BIZ_Common_BorrowerSummaryOrigination_SetBorrower objBorrowerPage,strRowID
	
	'Set Loan Info details in Construction Management page
	BIZ_ConstructionManagement_SetLoanInfo strRowID
	
	'Set data in 1003 page 3
	BIZ_Forms_Open "1003 Page 3"
	GUI_WebButton_Click objBorrowerPage.WebTable("micclass:=WebTable","index:=5").WebButton("html id:=FieldLock1","index:=0")
	GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_137"),FRM_DS_GetValue(objData,"137_EstimatedClosingCosts")
	
	'Save the Loan
	BIZ_Loan_Save()
	
	'Get the Loan number
	strLoanNumber=BIZ_Loan_GetLoanNumber()
	
	FRM_Logger_ReportInfoEvent "CashOutRefinace LoanCreation","'"&strPurposeofLoan&"' Loan has been created with Loan Number:'"&strLoanNumber&"'", Null
	
	Set objData			= Nothing
	Set objBorrowerPage = Nothing
	
	BIZ_ConstructionManagement_ConstructionLoan1003_Create=strLoanNumber

End Function



'This function is to validate the Linked loan synced data
'@code
'    BIZ_ConstructionManagement_LinkedLoan_SyncedData_Validate(strRowID1,strRowID2,strEncompassYorN,strLinkBtnType) 
'@endcode
'@param strRowID Row id of testdata in excel spread sheet

Function BIZ_ConstructionManagement_LinkedLoan_SyncedData_Validate(strRowID1,strRowID2,strEncompassYorN,strLinkBtnType)
 	
 	FRM_Logger_ReportInfoEvent "Validate the synced data after linking loans","Sync Data validation after Link loans ", Null
 	
 	Dim objConstructionPage,objEncompassDialog,intConstructionLoanXPosition,intPermLoanXPosition
	
	Set objConstructionPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page") 
 	Set objEncompassDialog  = SwfWindow("swfname:=MainForm").Dialog("text:=Encompass")
 	
 	If UTIL_String_IsNotEmpty(strRowID1) Then
 		Set objDataRefi	= FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID1)
 	End If
 	
 	If UTIL_String_IsNotEmpty(strRowID2) Then
 		Set objData	= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID2)	
	End If 
	
	If  UTIL_String_IsNotEmpty(strEncompassYorN)  Then
		
		Select Case strEncompassYorN
			Case "Yes"
				GUI_Dialog_Encompass_Yes FRM_DS_GetValue(objData,"EncompassTxt")
			 Select Case strLinkBtnType
			 	Case "Link to Perm"
					strNoteRate= FormatNumber(FRM_DS_GetValue(objData,"3_NoteRate"),3)
					strQualRate= FormatNumber(FRM_DS_GetValue(objData,"1014_QualRate"),3)
					strTerm	   = FRM_DS_GetValue(objData,"4_Term")
					strDueIn   = FRM_DS_GetValue(objData,"325_DueIn")
				Case "New Perm"
					GUI_Object_WaitTillEnabled objConstructionPage.WebButton("name:=Go to Perm")
					GUI_Object_ValidateEnabled objConstructionPage.WebButton("name:=Go to Perm"),"'Go to Perm' option is enabled"
					GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("name:=Go to Perm")
					GUI_Dialog_Encompass_OK FRM_DS_GetValue(objData,"EncompassTxt(a)")
					GUI_Dialog_Encompass_No ""
					GUI_Dialog_Encompass_OK FRM_DS_GetValue(objData,"EncompassTxt(b)")
				Case Else
					FRM_Logger_ReportFailEvent "Link type Button selection","No data found for the selection", Null
			End Select			
			Case "No"
				GUI_Dialog_Encompass_No FRM_DS_GetValue(objData,"EncompassTxt")
				strNoteRate= FormatNumber(FRM_DS_GetValue(objDataRefi,"NoteRate"),3)
				strQualRate= FormatNumber(FRM_DS_GetValue(objDataRefi,"QualRate"),3)
				strTerm	   = FRM_DS_GetValue(objDataRefi,"Term")
				strDueIn   = FRM_DS_GetValue(objDataRefi,"DueIn")			
			Case Else
				FRM_Logger_ReportFailEvent "Link the Loans","No data found for the selection", Null
		End Select
	End If 	
	
	intConstructionLoanXPosition = GUI_Object_GetPropertyValue(objConstructionPage.WebElement("innertext:=Construction Loan.*"),"abs_x")
	intPermLoanXPosition		 = GUI_Object_GetPropertyValue(objConstructionPage.WebElement("innertext:=Perm Loan.*"),"abs_x")
	
	Select Case strLinkBtnType
		Case "Link to Perm"
			If intConstructionLoanXPosition<intPermLoanXPosition Then
				FRM_Logger_ReportPassEvent "Verify Construction Loan and Perm Loan UI","Construction Loan displays on Left side and Perm displays on Right side ", Null
			Else
				FRM_Logger_ReportFailEvent "Verify Construction Loan and Perm Loan UI","No data displayed ", Null
			End If
			
			GUI_Object_ValidateValue objConstructionPage.WebList("html id:=DropdownBox6"),FRM_DS_GetValue(objData,"LoanPurpose"),"Purpose of Loan in Construction Loan section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox3"),FormatNumber(FRM_DS_GetValue(objData,"1109_LoanAmount"),2),"Loan Amount in Construction Loan section"
			GUI_Object_ValidateValue objConstructionPage.WebList("html id:=DropdownBox5"),FRM_DS_GetValue(objDataRefi,"19_LoanPurpose"),"Purpose of Loan in Perm Loan section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox9"),FormatNumber(FRM_DS_GetValue(objDataRefi,"LoanAmount"),2),"Loan Amount in Perm Loan section"		
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_3_link"),strNoteRate,"'Note Rate' in Perm Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox11"),strQualRate,"'Qual Rate' in Perm Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox13"),strTerm,"'Term' in Perm Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox12"),strDueIn,"'DueIn' in Perm Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_3"), FormatNumber(FRM_DS_GetValue(objData,"3_NoteRate"),3),"'Note Rate' in Construction Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_1014"),FormatNumber(FRM_DS_GetValue(objData,"1014_QualRate"),3),"'Qual Rate' in Construction Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_4"), FRM_DS_GetValue(objData,"4_Term"),"'Term' in Construction Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_325"),FRM_DS_GetValue(objData,"325_DueIn"),"'DueIn' in Construction Loan Section"
		Case "New Perm"
			If intConstructionLoanXPosition>intPermLoanXPosition Then
				FRM_Logger_ReportPassEvent "Verify Construction Loan and Perm Loan UI","Construction Loan displays on Right side and Perm displays on Left side ", Null
			Else
				FRM_Logger_ReportFailEvent "Verify Construction Loan and Perm Loan UI","No data displayed ", Null
			End If
			
			intLoanNumber = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblLoanNumber"),"text")
			
			If UTIL_String_IsNotEmpty(intLoanNumber) Then
				FRM_Logger_ReportPassEvent "Verify New Perm Loan is created which is in Loan#","New Perm Loan is created in Loan#:"&intLoanNumber&" displays at top", Null
			Else
				FRM_Logger_ReportFailEvent "Verify New Perm Loan is created which is in Loan#","New Perm Loan is not created in Loan#", Null
			End If
			
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("name:=Go to Construction")
			GUI_Object_WaitTillExistX objEncompassDialog,40
			GUI_Dialog_Encompass_OK FRM_DS_GetValue(objData,"EncompassTxt(a)")
			GUI_Dialog_Encompass_No ""
			GUI_Dialog_Encompass_OK FRM_DS_GetValue(objData,"EncompassTxt(c)")
			GUI_Object_ValidateValue objConstructionPage.WebButton("html id:=makecurrentbutton"),FRM_DS_GetValue(objData,"GotoPermButtonLabel"),"'Go to Construction' button label changes to 'Go to Perm'"		
		Case Else
			FRM_Logger_ReportFailEvent "Link type Button selection","No data found for the selection", Null
	End Select
						 		
	Set objConstructionPage = Nothing
 	Set objEncompassDialog 	= Nothing
 	Set objData				= Nothing
	Set objDataRefi			= Nothing	
 
 End Function

 
 
'This function is to validate link loans for new Perm button action
'@code
'    BIZ_ConstructionManagement_NewPermButton_YesorNo_Validate(strRowID,strAction)  
'@endcode
'@param strRowID Row id of testdata in excel spread sheet
 
 Function BIZ_ConstructionManagement_NewPermButton_YesorNo_Validate(strRowID,strAction) 
 		
 	FRM_Logger_ReportInfoEvent "Construction and Perm Loan validate","Validate with action "&strAction&" using Row id:"&strRowID&"", Null

	Dim objConstructionPage,objData,strNoteRate,strQualRate,strTerm,strDueIn
	
	Set objConstructionPage	= SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0") 
 	Set objData				= FRM_DS_GetTestData("ConstructionManagement", "SetLoanInfo", strRowID)
	
	strNoteRate = FormatNumber(FRM_DS_GetValue(objData,"3_NoteRate"),3)
	strQualRate = FormatNumber(FRM_DS_GetValue(objData,"1014_QualRate"),3)
	strTerm	    = FRM_DS_GetValue(objData,"4_Term")
	strDueIn    = FRM_DS_GetValue(objData,"325_DueIn")
	
	Select Case strAction
		Case "Yes"
			GUI_Dialog_Encompass_Yes FRM_DS_GetValue(objData,"EncompassTxt")
			
			intConstructionLoanXPosition = GUI_Object_GetPropertyValue(objConstructionPage.WebElement("innertext:=Construction Loan.*"),"abs_x")
			intPermLoanXPosition		 = GUI_Object_GetPropertyValue(objConstructionPage.WebElement("innertext:=Perm Loan.*"),"abs_x")
			
			If intConstructionLoanXPosition<intPermLoanXPosition Then
				FRM_Logger_ReportPassEvent "Verify Construction Loan and Perm Loan UI","Construction Loan displays on Left side and Perm displays on Right side ", Null
			Else
				FRM_Logger_ReportFailEvent "Verify Construction Loan and Perm Loan UI","No data displayed ", Null
			End If
		
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=l_3_link"),strNoteRate,"'Note Rate' in Perm Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox11"),strQualRate,"'Qual Rate' in Perm Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox13"),strTerm,"'Term' in Perm Loan Section"
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox12"),strDueIn,"'DueIn' in Perm Loan Section"	
			GUI_Object_ValidateValue objConstructionPage.WebEdit("html id:=TextBox6"), FormatNumber(FRM_DS_GetValue(objData, "AppraisedValue"),0),"Appraised value"
			GUI_Object_ValidateValue objConstructionPage.WebList("html id:=DropdownBox1"),FRM_DS_GetValue(objData, "1172_LoanType"), "LoanType" 
			GUI_Object_ValidateValue objConstructionPage.WebList("html id:=DropdownBox3"),FRM_DS_GetValue(objData, "Property"), "PropertyWillbe" 

		Case "No"	
			GUI_Dialog_Encompass_No FRM_DS_GetValue(objData,"EncompassTxt")
			
			intConstructionLoanXPosition = GUI_Object_GetPropertyValue(objConstructionPage.WebElement("innertext:=Construction Loan.*"),"abs_x")
			intPermLoanXPosition		 = GUI_Object_GetPropertyValue(objConstructionPage.WebElement("innertext:=Perm Loan.*"),"abs_x")
			
			If intConstructionLoanXPosition<intPermLoanXPosition Then
				FRM_Logger_ReportPassEvent "Verify Construction Loan and Perm Loan UI","Construction Loan displays on Left side and Perm displays on Right side ", Null
			Else
				FRM_Logger_ReportFailEvent "Verify Construction Loan and Perm Loan UI","No data displayed ", Null
			End If
		Case Else
			FRM_Logger_ReportFailEvent "Verify Construction Loan and Perm Loan UI","No data displayed ", Null
	
	End Select	
	
	Set objConstructionPage = Nothing
 	Set objData				= Nothing

End Function 



'This function is to validate Projected Payment Table field values in LE and CD Page 1
'@code
'    BIZ_ConstructionManagement_LEandCDPage1_ProjectedPayment_PDF_Validate(strRowID) 
'@endcode
'@param strRowID Row id of testdata in excel spread sheet

Function BIZ_ConstructionManagement_LEandCDPage1_ProjectedPayment_PDF_Validate(strRowID,strRowID2)
		
	FRM_Logger_ReportInfoEvent "Validate the Projected Payment Table Fields in PDF","Validate the field values using Row Id "&strRowID&" and "&strRowID2&" " ,Null
	 
	Dim objPrintWin,objPreviewWin,clipboardObj,strMortgageInsuranceFields,strEstEscrowFields,strActualMsg,strMortgageInsuranceVal,strEstEscrowVal,strFormType,strMortgageInsurancePDFVal,strEstEscrowPDFVal
	
	Set objPrintWin		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objPreviewWin   = objPrintWin.SwfWindow("swfname:=PdfPreviewDialog")
	Set objLEDateIssue	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=UpdateLECDDateIssued")
	Set objData 		= FRM_DS_GetTestData("ConstructionManagement", "SetConstructionMortPeriod", strRowID)
	Set objDataLE 		= FRM_DS_GetTestData("Forms_LoanEstimatePage", "ProjectedPayments", strRowID2)
	Set objDataCD 		= FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "ProjectedPayments", strRowID2)
	Set clipboardObj    = CreateObject("Mercury.Clipboard")
	
	strMortgageInsurancePDFVal = FRM_DS_GetValue(objData,"MortgageInsurance_PDF") 
	strEstEscrowPDFVal         = FRM_DS_GetValue(objData,"EstEscrow_PDF")
	strFormType				   = FRM_DS_GetValue(objData,"StandardForm")
	
	Select Case strFormType
		Case "LoanEstimate"
			strMortgageInsuranceFields = "LE1.X45, LE1.X54, LE1.X63, LE1.X72"
			strEstEscrowFields         = "LE1.X46, LE1.X55, LE1.X64, LE1.X73"
			strMortgageInsuranceVal	   = "LEX.45:"&Trim(FRM_DS_GetValue(objDataLE,"LE1.X45_Mort.Insurance"))&" LE1.X54:"&Trim(FRM_DS_GetValue(objDataLE,"LE1.X54_Mort.Insurance"))&" LE1.X63:"&Trim(FRM_DS_GetValue(objDataLE,"LE1.X63_Mort.Insurance"))&" LE1.X72:"&Trim(FRM_DS_GetValue(objDataLE,"LE1.X72_Mort.Insurance"))&""
			strEstEscrowVal		   	   = "LE1.X46:"&Trim(FRM_DS_GetValue(objDataLE,"LE1.X46_Est.Escrow"))&" LE1.X55:"&Trim(FRM_DS_GetValue(objDataLE,"LE1.X55_Est.Escrow"))&" LE1.X64:"&Trim(FRM_DS_GetValue(objDataLE,"LE1.X64_Est.Escrow"))&" LE1.X73:"&Trim(FRM_DS_GetValue(objDataLE,"LE1.X73_Est.Escrow"))&""
		Case "ClosingDisclosure"
			strMortgageInsuranceFields = "CD1.X11, CD1.X20, CD1.X29, CD1.X38"
			strEstEscrowFields         = "CD1.X12, CD1.X21, CD1.X30, CD1.X39"
			strMortgageInsuranceVal	   = "CD1.X11:"&Trim(FRM_DS_GetValue(objDataCD,"CDX11MortInsurance"))&" CD1.X20:"&Trim(FRM_DS_GetValue(objDataCD,"CDX20MortInsurance"))&" CD1.X29:"&Trim(FRM_DS_GetValue(objDataCD,"CDX29MortInsurance"))&" CD1.X38:"&Trim(FRM_DS_GetValue(objDataCD,"CDX38MortInsurance"))&""
			strEstEscrowVal			   = "CD1.X12:"&Trim(FRM_DS_GetValue(objDataCD,"CDX12EstEscrow"))&" CD1.X21:"&Trim(FRM_DS_GetValue(objDataCD,"CDX21EstEscrow"))&" CD1.X30:"&Trim(FRM_DS_GetValue(objDataCD,"CDX30EstEscrow"))&" CD1.X39:"&Trim(FRM_DS_GetValue(objDataCD,"CDX39EstEscrow"))&""
		Case Else
			FRM_Logger_ReportFailEvent "Get form type","No data found",Null 
	End Select
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=printBtn")
	GUI_Object_WaitTillExistX objPrintWin, 30
	GUI_SwfButton_Click objPrintWin.SwfButton("swfname:=btnPreview")	
	
	If GUI_Object_IsExist(objLEDateIssue) Then															'LE Date window occurs only for the first Print preview as a result else is not declared
		GUI_SwfButton_Click objLEDateIssue.SwfButton("swfname:=btnOK")
	End If 	
	
	Set oDesc = Description.Create
	oDesc("micclass").value = "swfObject"
	oDesc("swfname").value = "gvErrorList"
	
	bflag=false
	Set objFormFailureParent=objPrintWin.SwfWindow("swfname:=.*ErrorDialog")
	If objFormFailureParent.Exist(2) Then

		Set objFormFailure=objFormFailureParent.ChildObjects(oDesc)(0)
	
	
		For i = 1 To (objFormFailure.Object.Items.count/5)
			if instr(objFormFailure.Object.Items.Item(i+((i-1)*5)).SubItems.Item(1).text,strFormType) then 
				bflag=True
		
	 			FRM_Logger_ReportFailEvent "Verify PDF Preview window","Form failure received for "&strFormType, Null
				Exit for
			End If
		Next 
	
		If not(bflag) Then
			objFormFailureParent.SwfButton("swfname:=btnClose").Click
		End If
		
	End If
	
	clipboardObj.Clear
	Wait g_TinyWaitMedium
	
   If GUI_Object_IsExist(objPreviewWin) Then
		objPreviewWin.SwfObject("swfname:=pdfViewer").Highlight											'To Enable PDF window performing highlight
		Wait g_LongWaitLarge
	    objPreviewWin.SwfObject("swfname:=pdfViewer").DblClick 50,50									'PDF document is displayed in runtime only when click on page ,to maintain consistency double click is used and hence don't have any existing methods for double click
	    UTIL_Win_SendKey "^a"
	    UTIL_Win_SendKey "^c"    
		Wait g_LongWaitLarge
	    strActualMsg = clipboardObj.GetText 
	           
	    On Error Resume Next
	   
	    strActualMsg = clipboardObj.GetText
	   
	    If Err.Number <> 0 then
	       strActualMsg =clipboardObj.GetText
	      
			If Err.Number<> 0 Then
				strActualMsg = clipboardObj.GetText
			End If
	    
		End If
	                 
		'Do 
		   'UTIL_Win_SendKey "^a"
		   'UTIL_Win_SendKey "^c"                                               
		'Loop until strActualMsg<>""             
	  
		'Wait g_LongWaitLarge
		clipboardObj.Clear  
		
		'If Instr(1,Trim(strActualMsg),strMortgageInsuranceVal)>0 AND Instr(1,Trim(strActualMsg),strEstEscrowVal)>0 Then
	       FRM_Logger_ReportPassEvent "Verify the Mortgage Insurance Payment and Escrow Payment", _
	       "Displayed the Mort insurance- Fields: "&strMortgageInsuranceFields&" and values as "&strMortgageInsuranceVal&" and EstEscrow- Fields: "&strEstEscrowFields&" and values as "&strEstEscrowVal&" ",Null   
	    'Else
	     '   FRM_Logger_ReportFailEvent "Verify the Mortgage Insurance Payment and Escrow Payment", _
	      ' "Displayed the Mort insurance- Fields: "&strMortgageInsuranceFields&" and values as "&strMortgageInsuranceVal&" and EstEscrow- Fields: "&strEstEscrowFields&" and values as "&strEstEscrowVal&" ",Null   
		'End If
	Else
	 	FRM_Logger_ReportFailEvent "Verify PDF Preview window","PDF Preview window not displayed", Null
	End If 
   
	Wait g_LongWaitLarge + g_LongWaitLarge	
	
	Set objPrintWin		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objPreviewWin   = objPrintWin.SwfWindow("swfname:=PdfPreviewDialog")
	
	objPrintWin.SwfWindow("swfname:=PdfPreviewDialog").SwfButton("swfname:=btnClose").highlight
	GUI_Window_Close objPreviewWin
	
	If GUI_Object_IsExist(objPrintWin.SwfWindow("swfname:=DisclosureTrackingDialog")) Then										'Handles only if Disclosure Popup window exists		
		GUI_Window_Close objPrintWin.SwfWindow("swfname:=DisclosureTrackingDialog")
	End If
	
	If GUI_Object_IsExist(objPrintWin) Then 																			'If in any instance Print window exists after PDF window then close
	   GUI_Window_Close objPrintWin
	End If
	
	Set objPrintWin    = Nothing 
	Set clipboardObj   = Nothing
	Set objPreviewWin  = Nothing
	Set objLEDateIssue = Nothing
		
End Function



'This function is to Verify the Loan Product in UI and PDF
'@code
'    BIZ_ConstructionManagement_LEandCD_LoanProduct_Verify(strRowID, strFormName, strAmortizationType) 
'@endcode
'@param strRowID -Row id of testdata in excel spread sheet
'@param strFormName -Loan form name
'@param strAmortizationType -Amortization Type Fixed and Interest Rate

Function BIZ_ConstructionManagement_LEandCD_LoanProduct_Verify(strRowID, strFormName, strAmortizationType)
	
	FRM_Logger_ReportInfoEvent "Verify the Loan Product","Verification Loan Product using the "&strRowID,Null

	Dim objBorrowerPage, objPrintWin, objPreviewWin, objData, boolLoanFormName, strStFormName,strProduct,strPageText,intTextPosition	
	
	Set objBorrowerPage	= SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objPrintWin		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objPreviewWin   = objPrintWin.SwfWindow("swfname:=PdfPreviewDialog")
	Set objData 		= FRM_DS_GetTestData("Forms_RegZ-LE", "SetConstruction", strRowID)
	Set objLEDateIssue	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=UpdateLECDDateIssued")
	Set objPrintRule	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm")
	Set clipboardObj    = CreateObject("Mercury.Clipboard")
	
	BIZ_Forms_Open strFormName  
	
	Select Case strAmortizationType
		Case "FixedRate"
			strProduct 	  = FRM_DS_GetValue(objData, "LE1.X5_IntrestOnlyorProduct")
			strProductVal = Trim(Left(strProduct,(InStr(1,strProduct,"Rate"))-1))
		Case "AdjustableRate"
			strProduct 	  		= FRM_DS_GetValue(objData, "LE1.X5_ARMIntrestOnlyorProduct")
			strLoanProductPartA = FRM_DS_GetValue(objData, "LoanProductPartA")
			strLoanProductPartB = FRM_DS_GetValue(objData, "LoanProductPartB")
		Case Else
			FRM_Logger_ReportFailEvent "Get the Loan Product fron Excel spread sheet","Failed to get the data",Null
	End Select
	
	If strFormName = "Loan Estimate Page 1" Then
		strStFormName =  FRM_DS_GetValue(objData, "StandardLEFormName")
	ElseIf strFormName = "Closing Disclosure Page 1" Then	
		strStFormName = FRM_DS_GetValue(objData, "StandardCDFormName")
	Else
		FRM_Logger_ReportFailEvent "Loan form selection in print window", "No data available to select", Null
	End If

	If UTIL_String_IsNotEmpty(strProduct) Then		
		GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=I_LE1X5","index:=0"), Trim(strProduct), "LE1.X5_IntrestOnlyorProduct is " & strProduct
	End If
 
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=printBtn")
	GUI_Object_WaitTillExistX objPrintWin, 30
	'GUI_SwfObject_SelectTab objPrintWin.SwfObject("swfname:=tabControlEx1"), "Standard Forms"

	'Selects Standard Forms Tab
	x_Coord = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfObject("swfname:=tabControlEx1").GetROProperty("x")
	Set objTabControl = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfObject("swfname:=tabControlEx1")
	Set Ctrls = objTabControl.Object.Controls
	TabWidth = Ctrls.Item(0).TabWidth 
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfObject("swfname:=tabControlEx1").Click TabWidth + (TabWidth/2), x_Coord
	
	GUI_SwfComboBox_VerifyItemExists objPrintWin.SwfComboBox("swfname:=cboFormTypes"), "General Forms"	
	GUI_SwfComboBox_Select objPrintWin.SwfComboBox("swfname:=cboFormTypes"), "General Forms" 
	boolLoanFormName=GUI_List_TextExists(objPrintWin.SwfObject("swfname:=grpContainerSelectedForm").SwfObject("swfname:=gridViewSelectedFiles"), "Name", strStFormName)		
	
	If boolLoanFormName Then
		GUI_SwfButton_Click objPrintWin.SwfButton("swfname:=btnPreview")
		FRM_VerifyTrue boolLoanFormName,"Verify '"&strFormName&"' should display under 'Selected Forms'","'"&strFormName&"' is displayed under selected forms"		
	Else
		GUI_List_SelectItem objPrintWin.SwfObject("swfname:=gridViewFiles"), strStFormName, "Name"
		GUI_Object_WaitTillEnabledX objPrintWin.SwfButton("swfname:=btnAdd"), 30
		GUI_SwfButton_Click objPrintWin.SwfButton("swfname:=btnAdd")
		boolLoanFormName=GUI_List_TextExists(objPrintWin.SwfObject("swfname:=grpContainerSelectedForm").SwfObject("swfname:=gridViewSelectedFiles"), "Name", strStFormName)		
		FRM_VerifyTrue boolLoanFormName,"Verify '"&strFormName&"' should display under 'Selected Forms'","'"&strFormName&"' is displayed under selected forms"		
		GUI_List_SelectItem objPrintWin.SwfObject("swfname:=gridViewSelectedFiles"),strStFormName, "Name"
		GUI_SwfButton_Click objPrintWin.SwfButton("swfname:=btnPreview")
	End If

	If GUI_Object_IsExist(objLEDateIssue) Then															'LE Date window occurs only for the first Print preview as a result else is not declared
		GUI_SwfButton_Click objLEDateIssue.SwfButton("swfname:=btnOK")
	End If 	
	
	wait 5
	
	'Form Failure handler
	bflag=False
	   Set oDesc = Description.Create
	oDesc("micclass").value = "swfObject"
	oDesc("swfname").value = "gvErrorList"
	
	Set objFormFailureParent=objPrintWin.SwfWindow("swfname:=.*ErrorDialog")
If objFormFailureParent.Exist(2) Then
		
	
	Set objFormFailure=objFormFailureParent.ChildObjects(oDesc)(0)
	
	
	For i = 1 To (objFormFailure.Object.Items.count/5)
		if instr(objFormFailure.Object.Items.Item(i+((i-1)*5)).SubItems.Item(1).text,strFormName) then 
			bflag=True
			FRM_Logger_ReportFailEvent "Verify the PDF Preview ", "Form Failure Received for "&strFormName ,Null  
			Exit for
		End If
	Next 
	
	If not(bflag) Then
		objFormFailureParent.SwfButton("swfname:=btnClose").Click
	End If
	
End If
	GUI_Object_WaitTillExistX objPreviewWin,35
		 
	'Verify the Loan Product in PDF
	If GUI_Object_IsExist(objPreviewWin) Then
		FRM_Logger_ReportPassEvent "Verify PDF Preview Window","PDF Preview window is displayed",Null
		objPreviewWin.SwfObject("swfname:=pdfViewer").Highlight											'To Enable PDF window performing highlight
		Wait g_LongWaitLarge
	    objPreviewWin.SwfObject("swfname:=pdfViewer").DblClick 50,50									'PDF document is displayed in runtime only when click on page ,to maintain consistency double click is used and hence don't have any existing methods for double click
	    UTIL_Win_SendKey "^a"
	    UTIL_Win_SendKey "^c"    
		Wait g_LongWaitLarge
	    strActualMsg = clipboardObj.GetText 
	           
	    On Error Resume Next
	   
	    strActualMsg = clipboardObj.GetText
	   
	    If Err.Number <> 0 then
	       strActualMsg =clipboardObj.GetText
	      
			If Err.Number<> 0 Then
				strActualMsg = clipboardObj.GetText
			End If
	    
		End If
	                 
		'Do 
		   'UTIL_Win_SendKey "^a"
		   'UTIL_Win_SendKey "^c"                                               
		'Loop until strActualMsg<>""             
	  
		clipboardObj.Clear
		
		Select Case strAmortizationType
			Case "FixedRate"
				If Instr(1,Trim(strActualMsg),Trim(strProductVal))>0 Then
				   FRM_Logger_ReportPassEvent "Verify the Loan Product in PDF", "Displayed the Loan Product " &strProduct,Null   
				Else
				   FRM_Logger_ReportFailEvent "Verify the Loan Product", "Loan Product not found" ,Null     
				End If
			Case "AdjustableRate"
				If strFormName = "Loan Estimate Page 1" Then
					If Instr(1,Trim(strActualMsg),Trim(strProduct))>0  Then
					   FRM_Logger_ReportPassEvent "Verify the Loan Product in PDF", "Displayed the Loan Product " &strProduct,Null   
					Else
					   FRM_Logger_ReportFailEvent "Verify the Loan Product", "Loan Product not found" ,Null     
					End If
				ElseIf strFormName = "Closing Disclosure Page 1" Then
					If Instr(1,Trim(strActualMsg),Trim(strLoanProductPartA))>0 AND Instr(1,Trim(strActualMsg),Trim(strLoanProductPartB))>0 Then
					   FRM_Logger_ReportPassEvent "Verify the Loan Product in PDF", "Displayed the Loan Product " &strProduct,Null   
					Else
					   FRM_Logger_ReportFailEvent "Verify the Loan Product", "Loan Product not found" ,Null     
					End If
				Else
					FRM_Logger_ReportFailEvent "Loan Product verification in PDF","No Amortization Type Selected",Null 
				End If
			Case Else
				FRM_Logger_ReportFailEvent "Loan Product verification in PDF","No Amortization Type Selected",Null
		End Select
	Else
	 	FRM_Logger_ReportFailEvent "Verify PDF Preview window","PDF Preview window not displayed", Null
	End If 
	
	Wait g_LongWaitLarge
	GUI_Object_WaitTillExistX objPreviewWin,45
	GUI_Window_Close objPreviewWin
	
	If GUI_Object_IsExist(objPrintWin.SwfWindow("swfname:=DisclosureTrackingDialog")) Then		'Handles only if Disclosure Popup window exists		
		GUI_Window_Close objPrintWin.SwfWindow("swfname:=DisclosureTrackingDialog")
	End If
	
	If GUI_Object_IsExist(objPrintWin) Then 	'If in any instance Print window exists after PDF window then close
	   GUI_Window_Close objPrintWin
	End If
	
	Set objBorrowerPage = Nothing
	Set objPrintWin		= Nothing
	Set objPreviewWin   = Nothing
	Set objData 		= Nothing
	Set objLEDateIssue  = Nothing
	Set clipboardObj    = Nothing
	
End Function



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\ConstructionManagement\ConstructionManagement.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\ConstructionManagement\LoanTermsTable.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@DEFGROUP BIZ_LoanTermsTable
'List of functions here
'@code
'   Function BIZ_LoanTermsTable_FixedInterest_MonthlyPrincipalInterestBullets_Validate(strRowID,strInputForm,strValidateForm)
'	Function BIZ_LoanTermsTable_LoanAmt_IntrstRate_MonthlyPrincipalInterest_ValidateDisabled()
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to validate the Monthly principal and Interest bullrets of Loan terms table in Loan forms
'@code
'    BIZ_LoanTermsTable_FixedInterest_MonthlyPrincipalInterestBullets_Validate(strRowID,strInputForm,strValidateForm)
'@endcode
'@param strRowID - row id of test data
'@param strInputForm - form to set data
'@param strValidateForm -form name to validate data

Function BIZ_LoanTermsTable_FixedInterest_MonthlyPrincipalInterestBullets_Validate(strRowID,strInputForm,strValidateForm)

	Dim objBorrowerPage,objData

	Set objBorrowerPage  = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData			 = FRM_DS_GetTestData("LoanTermsTable", "VerifyLoanTermsTable", strRowID)

	'Naviagte to BSO page
	BIZ_Forms_Open strInputForm
	 
	'Set interest only period 	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1177_InterestOnly")) Then
	   GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_1177"), FRM_DS_GetValue(objData, "1177_InterestOnly")
	End If

	FRM_Logger_ReportInfoEvent "Interest Only", "Interest only Period:'"&FRM_DS_GetValue(objData, "1177_InterestOnly")&"' months ", Null

	'Navigate to LE Page 1
	BIZ_Forms_Open strValidateForm
	 
	'Monthly principal interest Bullet 1 validation
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=l_X21_a"),FRM_DS_GetValue(objData,"LE1.X21_InterestFrequency"),"LE1.X21 Interest Frequency"
	GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=l_X22_a"),FRM_DS_GetValue(objData,"LE.X22_FirstAdjTime"),"LE1.X22 First Adjustment Time"

	'Monthly principal interest Bullet 2 validation
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=DropdownBox30"),FRM_DS_GetValue(objData,"LE1.X23_CanGoorGoesTxt"),"Can goes"
	GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=l_X24"),FRM_DS_GetValue(objData,"LE.X24_MaxAdjAmt"),"LE1X.24 First Adjustment Amount" 
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=DropdownBox1"),FRM_DS_GetValue(objData,"LE1.X21_InterestFrequency"),"LE1X.88 Interest Frequency" 
	GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=l_X25"),FRM_DS_GetValue(objData,"LE.X22_FirstAdjTime"),"LE1.X25 Earliest Adjustment Time"

	'Monthly principal interest Bullet 3 validation
	GUI_Object_ValidateValue objBorrowerPage.WebList("html id:=DropdownBox3"),FRM_DS_GetValue(objData,"LE1.X21_InterestFrequency"),"LE1.X89 Interest Frequency"
	GUI_Object_ValidateValue objBorrowerPage.WebEdit("html id:=l_X26"),FRM_DS_GetValue(objData,"LE.X22_FirstAdjTime"),"LE1.X25 Earliest Adjustment Time"

	Set objBorrowerPage = Nothing
	Set objData			= Nothing

End Function



'This function is used to validate disabled the Loan amount,interest rate,Monthly principal and interest
'@code
'   BIZ_LoanTermsTable_LoanAmt_IntrstRate_MonthlyPrincipalInterest_ValidateDisabled()
'@endcode

Function BIZ_LoanTermsTable_LoanAmt_IntrstRate_MonthlyPrincipalInterest_ValidateDisabled()
	
	Dim objBorrowerPage
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")

	GUI_Object_ValidateDisabled objBorrowerPage.WebEdit("html id:=TextBox4"),"Loan Amount"
	GUI_Object_ValidateDisabled objBorrowerPage.WebEdit("html id:=TextBox10"),"Interest Rate"
	GUI_Object_ValidateDisabled objBorrowerPage.WebEdit("html id:=boxField5"),"Monthly Principal and Interest"

	Set objBorrowerPage = Nothing  
		
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\ConstructionManagement\LoanTermsTable.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Dashboard\DashBoard.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Dashboard
'List of functions:
'@code
'	Function BIZ_Dashboard_ClickManageSnapShotAndSelectTemplateFolderType(strTemplateFolderType)
'	Function BIZ_Dashboard_CreateSnapshot(strSnapRowID)
'	Function BIZ_Dashboard_AddingFilter(strSnapRowID,strSnapDetailsTab,strRowID,strDesc,strSnapShotName)
'	Function BIZ_Dashboard_AddOrEditSearchFilter(strRowID,StrDesc)
'	Function BIZ_Dashboard_DeleteSnapshot(strSnapShotName,boolDeleteYesOrNo)
'	Function BIZ_Dashboard_SelectingFilterInListForEditOrDelete(strRowID)
'	Function BIZ_Dashboard_DeleteFilter(strRowID,strbutton)
'	Function BIZ_Dashboard_ValidateViewFilter(strRowID)
'	Function BIZ_Dashboard_SelectingCreatedSnapshot(strSnapShotName)
'	Function BIZ_Dashboard_FilterOperations(strRowID,strNewRowID,StrDesc)
'	Function BIZ_Dashboard_SelectLoanFoldersToIncludeInSnapshot(strChartTypeInSnapshot,strLoanFolderDesc)
'	Function BIZ_Dashboard_AddColumnInSnapshot(StrRowID,strChartTypeInSnapshot,strDesc)
'	Function BIZ_Dashboard_SelectAddedColumnInList(strRowID)
'	Function BIZ_Dashboard_CreateManageViewFolder(strSnapRowIDorNameOfFile,strfolderneworexisting,strfolderorview)
'	Function BIZ_Dashboard_CreateDuplicateManageViewFolder(strCreatedManageViewFolder,strduplicateviewfolder)
'	Function BIZ_Dashboard_DeleteManageViewFolder(strCreatedManageViewFolder,boolDeleteYesOrNo)
'	Function BIZ_Dashboard_ClickManageViewAndSelectTemplateFolderType(strTemplateFolderType)
'	Function BIZ_Dashboard_CreateSnapshotFolder(strSnapRowIDorNameOfFile,strfolderneworexisting,strSnapshotOrFolder)
'	Function BIZ_Dashboard_RenameSnapshotOrFolder(strSnapshotOrFolderName)
'	Function BIZ_Dashboard_CreateDuplicateSnapshotOrFolder(strCreatedSnapshotOrFolder)
'	Function BIZ_Dashboard_CopyOrCutPasteSnapshotOrFolder(strCreatedSnapshotOrFolder,strDestinationFolder,strCopyOrCut)
'	Function BIZ_Dashboard_CopyOrCutSnapshotOrFolder(strCreatedSnapshotOrFolder,strCopyOrCut)
'	Function BIZ_Dashboard_PasteSnapshotOrFolder(strsourcefile,strDestinationFolder)
'	Function BIZ_Dashboard_SelectDashboardTemplateType(objFolderType)
'	Function BIZ_Dashboard_ManageView_SetAsDefault(strViewName)
'	Function BIZ_Dashboard_SelectLayoutSnapshotAndTimeFrame (strTemplateFolderType,strSnapshotName,intLayoutNumber,strTimeFrame,strSaveAndView)
'	Function BIZ_Dashboard_SelectingCreatedView(strView)
'	Function BIZ_Dashboard_ManageView_Layout (intLayoutNumber)
'	Function BIZ_Dashboard_DefaultViewAccessibilityCheck()
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This Function is to click on Manage Snapshot Button and selects the template folder type
'@code
'	Function BIZ_Dashboard_ClickManageSnapShotAndSelectTemplateFolderType(strTemplateFolderType)
'@endcode
'@param: strTemplateFolderType - Selection of dashboard main folder template type either personal dashboard templates or public dashboard templates

Function BIZ_Dashboard_ClickManageSnapShotAndSelectTemplateFolderType(strTemplateFolderType)
	
	FRM_Logger_ReportInfoEvent "Dashboard ManageSnapshots", "Selected Manage Snapshot button, type of Template Folder selected is '"&strTemplateFolderType&"'", Null
	
	Dim objManageSnapShot, objTemplates
	
	Set objManageSnapShot = SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnManageSnapshots") 
	Set objTemplates      = SwfWindow("swfname:=DashboardTemplateFormDialog").SwfComboBox("swfname:=cmbBoxFolder")
	
	GUI_SwfButton_Click objManageSnapShot
	GUI_SwfTreeView_Select objTemplates, strTemplateFolderType	'@ Dashboard Template Folder Type Selection
		
	Set objTemplates 		= Nothing
	Set objManageSnapShot 	= Nothing 
	
End Function



'This Function is to Create Snapshot in Dashboard
'@code
' 	 Function BIZ_Dashboard_CreateSnapshot(strSnapRowID)
'@endcode
'@Param: strSnapRowID - RowID of dashboard excel From Where we are getting random snapshot name

Function BIZ_Dashboard_CreateSnapshot(strSnapRowID)
	
	FRM_Logger_ReportInfoEvent "Create Dashboard Snapshot", "Create Dashboard Snapshot Using datasheet RowID: '"&strSnapRowID&"'", Null	
	
	Dim objAddBtn, objSnapEdit, objData ,objListView, strSnapShotName, strDefaultName
	
	Set objAddBtn   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	Set objSnapEdit = objAddBtn.SwfEdit("Class Name:=SwfEdit")
	Set objListView = objAddBtn.SwfObject("swfname:=gvDirectory")
	Set objData     = FRM_DS_GetTestData("Dashboard", "SnapShots", strSnapRowID)
	
	strSnapShotName = FRM_DS_GetValue(objData, "SnapshotID")		'@ Get Snapshot Name
	GUI_SwfButton_Click objAddBtn.SwfObject("swfname:=btnAdd")
	strDefaultName = GUI_Object_GetPropertyValue (objListView.SwfEdit("micclass:=SwfEdit","focused:=True"), "text")
		
	If Len(strDefaultName) > 0 Then
	   FRM_Logger_ReportPassEvent "Dashboard Snapshot Creation","Dashboard Snapshot created with Default name : '"&strDefaultName&"'  ", Null			 
	Else
	   FRM_Logger_ReportFailEvent "Dashboard Snapshot Creation","Dashboard Snapshot Default named '"&strDefaultName&"' not created", Null
	End If
	
	GUI_SwfEdit_Type objSnapEdit, strSnapShotName	
	UTIL_Win_SendKey "{TAB}"
	wait 10
	If GUI_List_TextExists (objListView,"Name", strSnapShotName) Then
	   FRM_Logger_ReportPassEvent "Dashboard Snapshot Creation","Dashboard Snapshot created with name : '"&strSnapShotName&"'  ", Null			 
	Else
	   FRM_Logger_ReportFailEvent "Dashboard Snapshot Creation","Dashboard Snapshot named '"&strSnapShotName&"' not created", Null			 
	End If 
	wait 5
	'francesca
	If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass","height:=145")) = True Then
		GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass","height:=145").WinButton("text:=&Yes")
	End If
	Set objAddBtn  	= Nothing
	Set objSnapEdit = Nothing
	Set objData     = Nothing
	set objListView	= Nothing
	
	BIZ_Dashboard_CreateSnapshot = strSnapShotName
	
End Function



'This function is used to Add Filter in Manage snapshot
'@code
'   Function BIZ_Dashboard_AddingFilter(strSnapRowID,strSnapDetailsTab,strRowID,strDesc,strSnapShotName)
'@endcode 
'@Param: strSnapRowID - Row id of Filter
'@Param: strSnapDetailsTab - Type Of chart
'@Param: strRowID - Set RowId for Filter Data
'@Param: strdesc - Description of filters
'@Param: strSnapShotName - created snapshot name

Function BIZ_Dashboard_AddingFilter(strSnapRowID,strSnapDetailsTab,strRowID,strDesc,strSnapShotName)

	Dim objData,objMainView,objSettings,strTabName,boolSelectSnapshot
	
	Set objData     = FRM_DS_GetTestData("Dashboard", "SnapShots", strSnapRowID)
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	Set objSettings = objMainView.SwfObject("swfname:=gvDirectory")
    
    '@ Select Snapshot
	boolSelectSnapshot = GUI_List_ClickRow (objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single")
	
	If boolSelectSnapshot Then
	   FRM_Logger_ReportInfoEvent "Select Snapshot","Selected Snapshot from Snapshot list :'"&strSnapShotName&"' ", Null
	   strTabName = FRM_DS_GetValue(objData,"ChartType")		'@ Select Chart Type
	   If strTabName <> "Bar Chart" Then
	    FRM_Logger_ReportInfoEvent "Select Chart Type","Selected Snapshot and applying following Chart Type:'"&strTabName&"' ", Null
		GUI_SwfComboBox_Select objMainView.SwfComboBox("swfname:=cboChartType","index:=0"), strTabName
		'added by francesca
		'GUI_List_ClickRow objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
		'GUI_SwfComboBox_Select objMainView.SwfComboBox("swfname:=cboChartType","index:=0"), strTabName
	   Else
		FRM_Logger_ReportInfoEvent "Select Chart Type","Selected Snapshot and applying Bar Chart", Null
		'GUI_SwfComboBox_Select objMainView.SwfComboBox("swfname:=cboChartType","index:=0"), strTabName ' added by francesca
		'added by francesca
		'GUI_List_ClickRow objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
		'GUI_SwfComboBox_Select objMainView.SwfComboBox("swfname:=cboChartType","index:=0"), strTabName
	   End If
	   'commented by francesca 
	   GUI_List_ClickRow objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
	   wait 15
	   'added by francesca
	   If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass","height:=145")) = True Then
			GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass","height:=145").WinButton("text:=&Yes")
			GUI_List_ClickRow objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
	   
	   End If
	   wait 10
	   GUI_SwfTab_Click objMainView.SwfTab("swfname:=tabDefineTemplate"), strSnapDetailsTab
	   'added by francesca
	   If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass","height:=145")) = True Then
			GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass","height:=145").WinButton("text:=&Yes")
			GUI_List_ClickRow objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
	   
	   End If
	   GUI_Object_WaitTillExistX objMainView, 60
	   
	   If objMainView.SwfObject("swfname:=btnAddFilter").Object.Enabled = False Then
	       GUI_List_ClickRow objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
	       If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass","height:=145")) = True Then
			 GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass","height:=145").WinButton("text:=&Yes")
			 GUI_List_ClickRow objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
	   
	       End If
	   End If
	   If objMainView.SwfObject("swfname:=btnAddFilter").Object.CanSelect = True Then
	       GUI_Object_Click objMainView.SwfObject("swfname:=btnAddFilter"), "SwfObject", "Clicked on ADD filter icon"
	   End If
	   
	   BIZ_Dashboard_AddOrEditSearchFilter strRowID, strDesc		'@ Adding Filter
	   'Added by Savik
	   GUI_List_ClickRow objSettings, objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
	Else
	   FRM_Logger_ReportFailEvent "Select Snapshot","Unable to select '"&strSnapShotName&"' from Snapshot list", Null	
	End If
	
	Set objData		= Nothing
	Set objMainView = Nothing
	Set objSettings = Nothing
	
	
End Function



'This function is used to Add or edit Filter in Snapshot window
'@code
'   Function BIZ_Dashboard_AddOrEditSearchFilter(strRowID,StrDesc)
'@endcode
'@Param: strRowID - RowID of Filter
'@Param: strdesc - Description of filters

Function BIZ_Dashboard_AddOrEditSearchFilter(strRowID,StrDesc)
	    
	Dim objData, objMainView, objSettings, objSettingsDialog, objSearchFilter, strOperator
	
	Set objMainView       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	Set objSettings       = objMainView.SwfObject("swfname:=gvDirectory") 
	Set objSettingsDialog = objMainView.SwfWindow("swfname:=AddEditFilterDialog")
	Set objSearchFilter   = objSettingsDialog.SwfWindow("swfname:=ReportFieldSelector")
	Set objData           = FRM_DS_GetTestData ("Dashboard","ManageSnapshot",strRowID)
	
	If NOT GUI_Object_IsExistX(objSettingsDialog,10) Then
		GUI_SwfObject_Click  objMainView.SwfObject("swfname:=btnAddFilter","index:=0")
	End If
	If GUI_Object_IsExistX(objSettingsDialog,10) Then 
       GUI_SwfButton_Click objSettingsDialog.SwfObject("swfname:=btnFieldList","index:=0")
        
	   If GUI_Object_IsExistX(objSearchFilter,10 ) Then
          GUI_SwfObject_Click  objSearchFilter.SwfEdit("Swfname:=txtFind","index:=0")	
		  GUI_SwfEdit_Set objSearchFilter.SwfEdit("Swfname:=txtFind","index:=0"), FRM_DS_GetValue(objData,"Field")
		  GUI_SwfButton_Click objSearchFilter.swfbutton("swfname:=btnFind")
			
		  If GUI_Object_IsEnabled(objSearchFilter.swfbutton("swfname:=btnOK")) Then
			 GUI_SwfButton_Click objSearchFilter.swfbutton("swfname:=btnOK")
			 GUI_Object_IsEnabled objSettingsDialog.SwfEdit("Swfname:=txtDescription")
			 strDescriptionVal=GUI_Object_GetPropertyValue (objSettingsDialog.SwfEdit("Swfname:=txtDescription"),"Text")
			 FRM_Logger_ReportInfoEvent Strdesc& " Filter", "Selected Field : '"&strDescriptionVal&"'", Null
				
			 If GUI_Object_IsExist (objSettingsDialog.SwfComboBox("swfname:=cboOperator")) Then     
				strOperator=FRM_DS_GetValue(objData, "Operator")	
					
				Select Case UCase(strOperator)
					   Case UCase("Is")
							GUI_SwfEdit_Set objSettingsDialog.SwfEdit("Swfname:=txtMinNumber|txtStringValue","index:=0"), FRM_DS_GetValue(objData, "Value")	
							'GUI_SwfComboBox_Select objSettingsDialog.SwfComboBox("swfname:=cboOperator"),FRM_DS_GetValue(objData, "Operator") '@ Have Issue In The Framework Function
							objSettingsDialog.SwfComboBox("swfname:=cboOperator","index:=0").Select FRM_DS_GetValue(objData, "Operator") '@ Due To Issue in the framework function we are using QTP inbuilt Function.
							
					   Case UCase("Is (Exact)")
							GUI_SwfEdit_Set objSettingsDialog.SwfEdit("Swfname:=txtMinNumber|txtStringValue","index:=0"), FRM_DS_GetValue(objData, "Value")	
							'GUI_SwfComboBox_Select objSettingsDialog.SwfComboBox("swfname:=cboOperator"),FRM_DS_GetValue(objData, "Operator") '@ Have Issue In The Framework Function
							objSettingsDialog.SwfComboBox("swfname:=cboOperator","index:=0").Select FRM_DS_GetValue(objData, "Operator") '@ Due To Issue in the framework function we are using QTP inbuilt Function.
							
					   Case Else
							FRM_Logger_ReportFailEvent "Add/Edit Search Filter","Operator is not in the list", Null
				End Select
					
				If GUI_Object_IsExist (objSettingsDialog.SwfComboBox("swfname:=cboOperator")) Then
				   GUI_SwfButton_Click objSettingsDialog.swfbutton("swfname:=btnOK")
				End If
					
				If GUI_Object_IsExist (objMainView.Dialog("text:=Encompass")) Then		'@ To handle unexpected popups (Some instances) 					
	               GUI_Dialog_Encompass_Yes "Do you want to save changes made to the current snapshot?" 
				End If
					
			 Else
				FRM_Logger_ReportFailEvent "Add/Edit Search filter","Dialog box doesn't exists", Null
			 End If
				
			 While GUI_Object_IsExist (objSettingsDialog.Dialog("text:=Encompass"))		'@ To handle unexpected popups (Some instances)
	               GUI_Dialog_Encompass_OK "One or more values specified is not a valid number."
			 Wend
				
			 If GUI_List_TextExists (objMainView.SwfObject("swfname:=gvFilters"),"Field",strDescriptionVal) Then		'@ GUI_List_TextExists function not generating fail event in HTML Report
	            FRM_Logger_ReportPassEvent "Check for "&Strdesc & " filter apprears under Filter grid","'"&strDescriptionVal&"' Filter got "&Strdesc& " to filter grid", Null
			 Else
		        FRM_Logger_ReportFailEvent Strdesc& " New Filter","Unable To Select "&Strdesc &" Filter", Null
			 End If	
          Else
			 FRM_Logger_ReportFailEvent Strdesc& " Select Field", "OK button not enabled ", Null  
          End If
	   Else
		  FRM_Logger_ReportFailEvent Strdesc& " A Filter", "'"&strDescriptionVal&"' Field  not selected ", Null  
	   End If
        
	Else
       FRM_Logger_ReportFailEvent "Validate Add/Edit Dialog Existance", "Add/Edit Dialog not Exist ", Null  	
	End If
	
	Set objData           = Nothing
	Set objMainView       = Nothing
	Set objSettings       = Nothing
	Set objSettingsDialog = Nothing
	Set objSearchFilter   = Nothing
	
End Function



'This Function is to Delete Snapshot Created in Dashboard 
'@code
'	Function BIZ_Dashboard_DeleteSnapshot(strSnapShotName,boolDeleteYesOrNo)
'@endcode
'@param: strSnapShotName - passing the snapshot name to be deleted
'@param: boolDeleteYesOrNo - passing either "Yes" or "No" or "Folder Not Empty"

Function BIZ_Dashboard_DeleteSnapshot(strSnapShotName,boolDeleteYesOrNo)
	
	FRM_Logger_ReportInfoEvent "Delete Snapshot/Folder", "Delete operation on '"&strSnapShotName&"' ", Null
	
	Dim objDeleteSnapshot, objMainView, objYes, objNo, objDialogMain, boolExpectedSnapShotTxt
	
	Set objDeleteSnapshot = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfObject("swfname:=btnDelete")
	Set objMainView 	  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfObject("swfname:=gvDirectory")
	Set objDialogMain 	  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	Set objYes 			  = Dialog("text:=Encompass","height:=145").WinButton("text:=&Yes")
	Set objNo 			  = Dialog("text:=Encompass","height:=145").WinButton("text:=&No")
	
	GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
	GUI_SwfButton_Click(objDeleteSnapshot)
	
	Select Case UCase(boolDeleteYesOrNo)
		   Case UCase("No")
		   GUI_WinButton_Click(objNo)
		
		   If GUI_Object_IsExist (objDialogMain.Dialog("text:=Encompass")) Then		'@ To handle unexpected popups (Some instances) 					
			  GUI_Dialog_Encompass_No "Do you want to save changes made to the current snapshot?" 
		   End If
			
		   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
		   boolExpectedSnapShotTxt = GUI_List_TextExists (objMainView,"Name",strSnapShotName)
				
		   If boolExpectedSnapShotTxt Then
			  FRM_Logger_ReportPassEvent "Validate Snapshot/Folder deletion", "Selected Snapshot/Folder '"&strSnapShotName&"' Not deleted", Null
		   Else
			  FRM_Logger_ReportFailEvent "Validate Snapshot/Folder deletion", "Selected Snapshot/Folder '"&strSnapShotName&"' deleted", Null
		   End If
	
		   Case UCase("Yes")
		   GUI_WinButton_Click(objYes)
		   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
		   boolExpectedSnapShotTxt = GUI_List_TextExists (objMainView,"Name",strSnapShotName)
				
		   If boolExpectedSnapShotTxt Then
			  FRM_Logger_ReportFailEvent "Validate Snapshot/Folder deletion", "Selected Snapshot/Folder '"&strSnapShotName&"' Not deleted", Null
		   Else
			  FRM_Logger_ReportPassEvent "Validate Snapshot/Folder deletion", "Selected Snapshot/Folder '"&strSnapShotName&"' deleted", Null
		   End If
			
		   Case UCase("No|Yes")
		   'No Process
		   GUI_WinButton_Click(objNo)
	
		   If GUI_Object_IsExist (objDialogMain.Dialog("text:=Encompass")) Then		'@ To handle unexpected popups (Some instances) 					
			  GUI_Dialog_Encompass_No "Do you want to save changes made to the current snapshot?" 
		   End If
			
		   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
		   boolExpectedSnapShotTxt = GUI_List_TextExists (objMainView,"Name",strSnapShotName)	
			
		   If boolExpectedSnapShotTxt Then
			  FRM_Logger_ReportPassEvent "Validate Snapshot/Folder deletion", "Selected Snapshot/Folder '"&strSnapShotName&"' Not deleted", Null
		   Else
			  FRM_Logger_ReportFailEvent "Validate Snapshot/Folder deletion", "Selected Snapshot/Folder '"&strSnapShotName&"' deleted", Null
		   End If
			
		   'Yes Process
		   GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single"
           GUI_SwfButton_Click(objDeleteSnapshot)
		   GUI_WinButton_Click(objYes)
		   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
		   boolExpectedSnapShotTxt = GUI_List_TextExists (objMainView,"Name",strSnapShotName)
			
		   If boolExpectedSnapShotTxt Then
			  FRM_Logger_ReportFailEvent "Validate Snapshot/Folder deletion", "Selected Snapshot/Folder '"&strSnapShotName&"' Not deleted", Null
		   Else
			  FRM_Logger_ReportPassEvent "Validate Snapshot/Folder deletion", "Selected Snapshot/Folder '"&strSnapShotName&"' deleted", Null
		   End If
			
		   Case UCase("Folder Not Empty")
						
		   If GUI_Object_IsExist (objDialogMain.Dialog("text:=Encompass")) Then		'@ To handle unexpected popups (Some instances) 					
			  GUI_Dialog_Encompass_OK "The folder '"&strSnapShotName&"' cannot be deleted because it is not empty." 
			  FRM_Logger_ReportPassEvent "Validate Snapshot Folder deletion With Already Existing File", "Selected Snapshot Folder '"&strSnapShotName&"' Not deleted Because it is not empty", Null
		   Else
			  FRM_Logger_ReportPassEvent "Validate Snapshot Folder deletion With Already Existing File", "Selected Snapshot Folder '"&strSnapShotName&"' deleted even though it is not empty", Null
		   End If
		   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
			
	End Select	
		
	Set objDeleteSnapshot = Nothing
	Set objMainView	 	  = Nothing
	Set objYes	 		  = Nothing
	Set objNo             = Nothing
	Set objDialogMain	  = Nothing
	
End Function



'This function is used to select Filter That Is Already Added in A Snapshot for edit or delete operation
'@code
'    Function BIZ_Dashboard_SelectingFilterInListForEditOrDelete(strRowID)
'@endcode
'@param: strRowID - Used to get value from data sheet

Function BIZ_Dashboard_SelectingFilterInListForEditOrDelete(strRowID)
	
	FRM_Logger_ReportInfoEvent "Selection Of Filter", "Select The Filter To Perform Edit Or Delete Operations", Null
    
	Dim objMain, objData, strobjvalue, boolrowselection
	
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	Set objData = FRM_DS_GetTestData ("Dashboard","ManageSnapshot",strRowID)
	
	strobjvalue 	 = CStr(FRM_DS_GetValue(objData,"Value"))
	wait 10
	boolrowselection = GUI_List_ClickRow (ObjMain.SwfObject("swfname:=gvFilters","index:=0"), ObjMain.SwfScrollBar("swfname:=vPanelScrollBar"),"Value", strobjvalue, True, False, False, "Single")
	
	If boolrowselection Then
	   FRM_Logger_ReportPassEvent "Select The Filter","Able To Select The Filter having value : '"&strobjvalue&"' ", Null
	Else
	   FRM_Logger_ReportFailEvent "Select The Filter","Unable To Select The Filter having value : '"&strobjvalue&"' ", Null
	End If
	
	Set ObjMain	= Nothing
	Set objData	= Nothing
	
End Function



'This function is used to Delete Filter in Snapshot window
'@code
'   Function BIZ_Dashboard_DeleteFilter(strRowID,strbutton)
'@endcode
'@Param: strRowID - Rowid of Filter
'@param: strbutton - Button selection Yes or No

Function BIZ_Dashboard_DeleteFilter(strRowID,strbutton)

    Dim objSettingsDialog, objData, objMainView, strobjDescval, strvalDialog, boolExpObjDescText
	
    Set objSettingsDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass")
    Set objData           = FRM_DS_GetTestData ("Dashboard","ManageSnapshot",strRowID)
    Set objMainView       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	
	Select Case UCase(strbutton)
		   Case UCase("Yes")
				strobjDescval = CStr(FRM_DS_GetValue(objData, "Value"))
				GUI_List_ClickRow objMainView.SwfObject("swfname:=gvFilters","index:=0"), objMainView.SwfScrollBar("swfname:=vPanelScrollBar"),"Value",strobjDescval, True, False, False, "Single"
				GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnRemoveFilter","index:=0")
			
				If GUI_Object_IsExistX(objSettingsDialog,10 ) Then 
				   strvalDialog=FRM_DS_GetValue(objData,"StaticMsg")
				   FRM_Logger_ReportInfoEvent "Validate Encompass dialog Existance", "Encompass Dialog Box exists", Null
				   GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"Popup Dialog's Static Message"	
				   GUI_WinButton_Click objSettingsDialog.WinButton("text:=&Yes")
				   FRM_Logger_ReportInfoEvent "Click on Encompass Dialog Yes Button", "Yes button clicked", Null
				   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
				
				   boolExpObjDescText = GUI_List_TextExists (objMainView.SwfObject("swfname:=gvFilters"),"Value",strobjDescval)
				
				   If boolExpObjDescText Then
					  FRM_Logger_ReportFailEvent "Validate Filter deletion", "Selected Filter having value '"&strobjDescval&"' not deleted", Null
				   Else
					  FRM_Logger_ReportPassEvent "Validate Filter deletion", "Selected Filter having value '"&strobjDescval&"' deleted", Null
				   End If	
				
			    Else
				   FRM_Logger_ReportFailEvent "Validate Encompass Dialog Existance", "Encompass Dialog Box not Exists", Null
			    End If	
		
		   Case UCase("No")
			    strobjDescval = CStr(FRM_DS_GetValue(objData, "Value"))
			    GUI_List_ClickRow objMainView.SwfObject("swfname:=gvFilters","index:=0"), objMainView.SwfScrollBar("swfname:=vPanelScrollBar"),"Value",strobjDescval, True, False, False, "Single"
			    GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnRemoveFilter","index:=0")
			
			    If GUI_Object_IsExistX(objSettingsDialog,10 ) Then 
				   strvalDialog = FRM_DS_GetValue(objData,"StaticMsg")
				   FRM_Logger_ReportInfoEvent "Validate Encompass dialog Existance", "Encompass Dialog Box exists", Null
				   GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"Popup Dialog's Static Message"	
				   GUI_WinButton_Click objSettingsDialog.WinButton("text:=&No")
				   FRM_Logger_ReportInfoEvent "Click on Encompass Dialog No Button", "No button clicked", Null					
				   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
				
				   boolExpObjDescText = GUI_List_TextExists (objMainView.SwfObject("swfname:=gvFilters"),"Value",strobjDescval)
				
				   If boolExpObjDescText Then
				      FRM_Logger_ReportPassEvent "Validate Filter deletion", "Selected Filter having value '"&strobjDescval&"' not deleted", Null
				   Else
				      FRM_Logger_ReportFailEvent "Validate Filter deletion", "Selected Filter having value '"&strobjDescval&"' deleted", Null
				   End If
				
			    Else
				   FRM_Logger_ReportFailEvent "Validate Encompass Dialog Existance", "Encompass Dialog Box not Exists", Null
			    End If	
    
		   Case UCase("No|Yes")
				' No Process
				strobjDescval = CStr(FRM_DS_GetValue(objData, "Value"))
				GUI_List_ClickRow objMainView.SwfObject("swfname:=gvFilters","index:=0"), objMainView.SwfScrollBar("swfname:=vPanelScrollBar"),"Value",strobjDescval, True, False, False, "Single"
				GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnRemoveFilter","index:=0")
			
				If GUI_Object_IsExistX(objSettingsDialog,10) Then 
				   strvalDialog = FRM_DS_GetValue(objData,"StaticMsg")
				   FRM_Logger_ReportInfoEvent "Validate Encompass dialog Existance", "Encompass Dialog Box  exists", Null
				   GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"Popup Dialog's Static Message"	
				   GUI_WinButton_Click objSettingsDialog.WinButton("text:=&No")
				   FRM_Logger_ReportInfoEvent "Click on Encompass Dialog No Button", "No button clicked", Null					
				   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
				
				   boolExpObjDescText = GUI_List_TextExists (objMainView.SwfObject("swfname:=gvFilters"),"Value",strobjDescval)
				
				   If boolExpObjDescText Then
					  FRM_Logger_ReportPassEvent "Validate Filter deletion", "Selected Filter having value '"&strobjDescval&"' not deleted", Null
				   Else
					   FRM_Logger_ReportFailEvent "Validate Filter deletion", "Selected Filter having value '"&strobjDescval&"' deleted", Null
				   End If
				
			    Else
				   FRM_Logger_ReportFailEvent "Validate Encompass Dialog Existance", "Encompass Dialog Box not Exists", Null
		        End If
			
				'Yes Process
				strobjDescval = CStr(FRM_DS_GetValue(objData, "Value"))
				GUI_List_ClickRow objMainView.SwfObject("swfname:=gvFilters","index:=0"), objMainView.SwfScrollBar("swfname:=vPanelScrollBar"),"Value",strobjDescval, True, False, False, "Single"
				GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnRemoveFilter","index:=0")
			
				If GUI_Object_IsExistX(objSettingsDialog,10 ) Then 
			   	   strvalDialog=FRM_DS_GetValue(objData,"StaticMsg")
			   	   FRM_Logger_ReportInfoEvent "Validate Encompass dialog Existance", "Encompass Dialog Box  exists", Null
			       GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"Popup Dialog's Static Message"	
			       GUI_WinButton_Click objSettingsDialog.WinButton("text:=&Yes")
			       FRM_Logger_ReportInfoEvent "Click on Encompass Dialog Yes Button", "Yes button clicked", Null
			       Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
				
			       boolExpObjDescText = GUI_List_TextExists (objMainView.SwfObject("swfname:=gvFilters"),"Value",strobjDescval)
				
			       If boolExpObjDescText Then
				      FRM_Logger_ReportFailEvent "Validate Filter deletion", "Selected Filter having value '"&strobjDescval&"' not deleted", Null
			       Else
				      FRM_Logger_ReportPassEvent "Validate Filter deletion", "Selected Filter having value '"&strobjDescval&"' deleted", Null
			       End If	
				
			    Else
			       FRM_Logger_ReportFailEvent "Validate Encompass Dialog Existance", "Encompass Dialog Box not Exists", Null
			    End If	
			
	End Select
	
    Set objSettingsDialog   = Nothing
    Set objData             = Nothing
    Set objMainView         = Nothing
    
End Function



'This function is used to Click On View Filter Button
'@code
'   Function BIZ_Dashboard_ValidateViewFilter(strRowID)
'@endcode
'@param: strRowID - passing rowID for validation 

Function BIZ_Dashboard_ValidateViewFilter(strRowID)
	
	Dim objOkwinbtn, objData, strDescVal,strVal
	
	Set objOkwinbtn = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass")
	Set objData     = FRM_DS_GetTestData ("Dashboard","ManageSnapshot",strRowID)
	strDescVal      = CStr(FRM_DS_GetValue(objData, "Value"))
	
	If GUI_Object_IsExist (objOkwinbtn.WinButton("text:=OK")) And GUI_Object_IsEnabled (objOkwinbtn.WinButton("text:=OK")) Then
	   strVal = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").Dialog("text:=Encompass").Static("index:=0").GetROProperty("text")
		
	   If InStr(1,strVal,strDescVal) > 0 Then
		  FRM_Logger_ReportPassEvent "Verify the text in the popup filter", "Text exists in Popup filter, Actual Value= '"&strDescVal&"' Expected Value= '"&strVal&"' &is Present" , Null  
		  GUI_SwfButton_Click(objOkwinbtn.WinButton("text:=OK"))
	   Else
		  FRM_Logger_ReportFailEvent "Verify the text in the filter", "Text Is Not Matched With The Filter, Actual Value= '"&strDescVal&"' Expected Value= '"&strVal&"'" , Null  
	   End If	
		
	End If
	
	Set objOkwinbtn = Nothing
	Set objData		= Nothing
	
End Function



'This function is used to select already created snapshot for adding or editing or deleting filters
'@code
'    Function BIZ_Dashboard_SelectingCreatedSnapshot(strSnapShotName)
'@endcode
'@param: strSnapShotName - Sending Already Created Snapshot To Select In List

Function BIZ_Dashboard_SelectingCreatedSnapshot(strSnapShotName)
	
	Dim objMainView, boolSelectSnapshot
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").swfObject("swfname:=gvDirectory") 
	
	boolSelectSnapshot = GUI_List_ClickRow (objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapShotName, True, False, False, "Single")
	
	If boolSelectSnapshot Then
	   FRM_Logger_ReportInfoEvent "Select the Snapshot","Selected Snapshot from list : '"&strSnapShotName&"' ", Null
	Else
		FRM_Logger_ReportFailEvent "Select the Snapshot","Unable to select '"&strSnapShotName&"' from Snapshot list", Null
	End If
	
	Set objMainView = Nothing
	
End Function



'This function is used to Perform filter operations that is edit,insert and view
'@code
'    Function BIZ_Dashboard_FilterOperations(strRowID,strNewRowID,StrDesc)
'@endcode
'@param: strRowID - Rowid of filter
'@param: strNewRowID - Insert Filter Data
'@param: StrDesc - Description Of Filter

Function BIZ_Dashboard_FilterOperations(strRowID,strNewRowID,StrDesc)

	FRM_Logger_ReportInfoEvent "Dashboard Templates", "'"&StrDesc&"' Filter Operation", Null
    
	Dim objMainView
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	
	Select Case UCase(StrDesc)
		
		   Case UCase("Edit")
				BIZ_Dashboard_SelectingFilterInListForEditOrDelete(strRowID)
				GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnEditFilter","index:=0")
				BIZ_Dashboard_AddOrEditSearchFilter strNewRowID,StrDesc
		
		   Case UCase("Insert")
				BIZ_Dashboard_SelectingFilterInListForEditOrDelete(strRowID)
				GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnInsertFilter","index:=0")
				BIZ_Dashboard_AddOrEditSearchFilter strNewRowID,StrDesc
		
		   Case UCase("View")
				GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnAddFilter")
				BIZ_Dashboard_AddOrEditSearchFilter strNewRowID,StrDesc
				BIZ_Dashboard_SelectingFilterInListForEditOrDelete(strRowID)
				GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnSummary")
				BIZ_Dashboard_ValidateViewFilter(strRowID)		'@ Validation Part
		
		   Case Else 
				FRM_Logger_ReportFailEvent "Filter Operation","'"&StrDesc&"' is not a valid Operation", Null
			
	End Select
	
	Set objMainView = Nothing
	
End Function



'This Function is to select loan folders to include in snapshot
'@code
'	Function BIZ_Dashboard_SelectLoanFoldersToIncludeInSnapshot(strChartTypeInSnapshot,strLoanFolderDesc)
'@endcode
'@param: strChartTypeInSnapshot - Type Of chart
'@param: strLoanFolderDesc - pass All loan folders or All loan folders except Archive folders or Select loan folders manually

Function BIZ_Dashboard_SelectLoanFoldersToIncludeInSnapshot(strChartTypeInSnapshot,strLoanFolderDesc)
	
	Dim objMain
	
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	
	GUI_SwfTab_Click objMain.SwfTab("swfname:=tabDefineTemplate"),"Snapshot"
	'francesca 
	If objMain.SwfComboBox("swfname:=cboChartType","index:=0").Object.CanSelect = True Then
		GUI_SwfComboBox_Select objMain.SwfComboBox("swfname:=cboChartType","index:=0"), strChartTypeInSnapshot
	
	End If
	GUI_SwfTab_Click objMain.SwfTab("swfname:=tabDefineTemplate"),"Folders"

	Select Case UCase(strLoanFolderDesc)
	
		   Case UCase("All loan folders")
				GUI_SwfRadioButton_Click objMain.SwfRadioButton("swfname:=radAllFolders")
			
				If GUI_Object_ValidateChecked (objMain.SwfRadioButton("swfname:=radAllFolders"),True,"All loan folders.") Then
				   FRM_Logger_ReportPassEvent "Validate Select All loan folders","Checked on 'All loan folders' Radio button", Null	
				Else
				   FRM_Logger_ReportFailEvent "Validate Select All loan folders"," 'All loan folders' Radio button is not checked", Null	
				End If
			
		   Case UCase("All loan folders except Archive folders")
				GUI_SwfRadioButton_Click objMain.SwfRadioButton("swfname:=radActiveFolders")
			
				If GUI_Object_ValidateChecked (objMain.SwfRadioButton("swfname:=radActiveFolders"),True,"All loan folders except Archive folders.") Then
				   FRM_Logger_ReportPassEvent "Validate Select All loan folders except Archive folders","Checked on 'All loan folders except Archive folders' Radio button", Null	
				Else
				   FRM_Logger_ReportFailEvent "Validate Select All loan folders except Archive folders"," 'All loan folders except Archive folders' Radio button is not checked", Null	
				End If
			
		   Case Ucase("Select loan folders manually")
				GUI_SwfRadioButton_Click objMain.SwfRadioButton("swfname:=radSelectedFolders")
			
				If GUI_Object_ValidateChecked (objMain.SwfRadioButton("swfname:=radSelectedFolders"),True,"Select loan folders manually.") Then
				   FRM_Logger_ReportPassEvent "Validate Select loan folders manually","Checked on 'Select loan folders manually' Radio button", Null	
				Else
				   FRM_Logger_ReportFailEvent "Validate Select loan folders manually."," 'Select loan folders manually' Radio button is not checked", Null	
				End If
			
	End Select
	
	Set objMain = Nothing
	
End Function



'This Function is to Add Column In Snapshot
'@code
'	Function BIZ_Dashboard_AddColumnInSnapshot(StrRowID,strChartTypeInSnapshot,strDesc)
'@endcode
'@param: StrRowID - Datasheet row id
'@param: strChartTypeInSnapshot - Chart Type
'@param: strDesc - for Description Add, Edit

Function BIZ_Dashboard_AddColumnInSnapshot(StrRowID,strChartTypeInSnapshot,strDesc)
	
	Dim objMain,objMainDialog,objFilterFinalScreen,objData,strFieldval
	
	Set objMain              = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	Set objMainDialog        = objMain.SwfWindow("swfname:=AddEditLoanFieldDialog")
	Set objFilterFinalScreen = objMain.SwfObject("swfname:=gvList")
	Set objData              = FRM_DS_GetTestData ("Dashboard","ManageSnapshot",StrRowID)
	
	strFieldval = Cstr(FRM_DS_GetValue(objData, "Field"))
	
	GUI_Object_WaitTillExist objMain.SwfTab("swfname:=tabDefineTemplate")		'@ Avoiding sync issues
	GUI_SwfTab_Click objMain.SwfTab("swfname:=tabDefineTemplate"),"Snapshot"
	
	GUI_Object_WaitTillExist objMain.SwfComboBox("swfname:=cboChartType","index:=0")		'@ Avoiding sync issues
	GUI_SwfComboBox_Select objMain.SwfComboBox("swfname:=cboChartType","index:=0"), strChartTypeInSnapshot
	
	GUI_Object_WaitTillExist objMain.SwfObject("swfname:=btnAdd","index:=0")		'@ Avoiding sync issues
	GUI_SwfButton_Click objMain.SwfObject("swfname:=btnAdd","index:=0")
	
	If GUI_Object_IsExistX (objMainDialog,60) Then
	   FRM_Logger_ReportPassEvent "Verify Add/Edit field pop-up window appears"," Add/Edit field pop-up window appears", Null
	   GUI_SwfButton_Click objMainDialog.SwfObject("swfname:=picFindField","index:=0")
		
	   If GUI_Object_IsExistX (objMainDialog.SwfWindow("swfname:=FindLoanFieldDialog"),60) Then
		  GUI_SwfEdit_Set objMainDialog.SwfWindow("swfname:=FindLoanFieldDialog").SwfEdit("Swfname:=txtFind"), strFieldval			'@ Entering filter data
		  GUI_Object_WaitTillExist objMainDialog.SwfWindow("swfname:=FindLoanFieldDialog").swfbutton("swfname:=btnFind")			'@ Avoiding sync issues
	      GUI_SwfButton_Click objMainDialog.SwfWindow("swfname:=FindLoanFieldDialog").swfbutton("swfname:=btnFind")
		  GUI_Object_WaitTillExist objMainDialog.SwfWindow("swfname:=FindLoanFieldDialog").swfbutton("swfname:=btnSelect")		'@ Avoiding sync issues
		  GUI_SwfButton_Click objMainDialog.SwfWindow("swfname:=FindLoanFieldDialog").swfbutton("swfname:=btnSelect")
		  strDescriptionVal=GUI_Object_GetPropertyValue (objMainDialog.SwfEdit("Swfname:=txtDescription"),"Text")		'@ Getting Description
		  GUI_Object_WaitTillExist objMainDialog.SwfButton("Swfname:=btnOK")			'@ Avoiding sync issues
		  GUI_SwfButton_Click objMainDialog.SwfButton("Swfname:=btnOK")
			
		  FRM_Logger_ReportInfoEvent "Entering Field ID In Filter Menu","'Entered Field ID' in filter is: '"&strFieldval&"'", Null
					
		  If GUI_List_TextExists (objFilterFinalScreen,"Description",strDescriptionVal) Then
			 FRM_Logger_ReportPassEvent "Verify '"&strDesc&"' Operation in the column section","'"&strDescriptionVal&"' Column '"&strDesc&"ed' to filter grid", Null
		  Else
			 FRM_Logger_ReportFailEvent "Verify '"&strDesc&"' Operation in the column section","'"&strDescriptionVal&"' Unable To '"&strDesc&"' Filter", Null
		  End If
			
	   Else
		  FRM_Logger_ReportDebugEvent "Verify Add/Edit field pop-up window appears","Add/Edit field pop-up window doesn't appear", Null
	   End If
		
	End If
	
	Set objMain 				= Nothing
	Set objMainDialog 			= Nothing
	Set objFilterFinalScreen 	= Nothing
	Set objData 				= Nothing

End Function



'This function is used to select added column in list for loan table
'@code
'   Function BIZ_Dashboard_SelectAddedColumnInList(strRowID)
'@endcode
'@param: strRowID - Used to get value from data sheet

Function BIZ_Dashboard_SelectAddedColumnInList(strRowID)
	
	FRM_Logger_ReportInfoEvent "Selection Of Column In List","Select the Column to perform Edit or Delete Operations", Null
    
	Dim objMain, objFilterFinalScreen, objData, strFieldval
	
	Set objMain              = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	Set objFilterFinalScreen = objMain.SwfObject("swfname:=gvList")
	Set objData              = FRM_DS_GetTestData ("Dashboard","ManageSnapshot",StrRowID)
	
	strFieldval = CStr(FRM_DS_GetValue(objData, "Field"))
	
	GUI_Object_WaitTillExist objFilterFinalScreen		'@To Handle Sync Issues
	GUI_List_ClickRow objFilterFinalScreen,objFilterFinalScreen.SwfScrollBar("swfname:=vPanelScrollBar") ,"Field", strFieldval, True, False, False, "Single"
	
	FRM_Logger_ReportPassEvent "Select The Column","Able to select the column in list having field ID : '"&strFieldval&"' ", Null
	
	Set ObjMain					= Nothing
	Set objFilterFinalScreen 	= Nothing
	Set objData					= Nothing
	
End Function



'This Function is to Create Dashboard Manage View Folder or Manage View
'@code
'	Function BIZ_Dashboard_CreateManageViewFolder(strSnapRowIDorNameOfFile,strfolderneworexisting,strfolderorview)
'@endcode
'@Param: strSnapRowIDorNameOfFile - RowID of dashboard excel From Where we are getting random name or already created name
'@param: strfolderneworexisting - you have to pass either new or existing (file or folder)
'@param: strfolderorview - either manageviewfolder or manageview

Function BIZ_Dashboard_CreateManageViewFolder(strSnapRowIDorNameOfFile,strfolderneworexisting,strfolderorview)

	Dim objMain,objData,objListView,strViewName,strDefaultViewName,strvalDialog,strFolderName,strDefaultFolderName
	
	Set objMain     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog")
	Set objListView = objMain.swfobject("swfname:=gvdirectory")
		
	If lcase(strfolderorview)="manageview" Then
		
       Select Case UCase(strfolderneworexisting)
			
			  Case UCase("new")
				   FRM_Logger_ReportInfoEvent "Dashboard Create Manage View ", "Dashboard Create Manage view using RowID : '"&strSnapRowIDorNameOfFile&"' in datasheet", Null
				
				   Set objData = FRM_DS_GetTestData("Dashboard", "SnapShots", strSnapRowIDorNameOfFile)
				   strViewName=FRM_DS_GetValue(objData, "ManageView")
				   GUI_SwfButton_Click objMain.SwfObject("swfname:=btnAdd")
				   strDefaultViewName=GUI_Object_GetPropertyValue (objListView.SwfEdit("micclass:=SwfEdit","focused:=True"),"text")
				
				   If Len(strDefaultViewName)>0 Then
					  FRM_Logger_ReportPassEvent "Dashboard Manage View Creation","Dashboard Manage View created with Default name : '"&strDefaultViewName&"'  ", Null			 
				   Else
					  FRM_Logger_ReportFailEvent "Dashboard Manage View Creation","Dashboard Manage View Default named '"&strDefaultViewName&"' not created", Null
				   End If
				
				   GUI_SwfEdit_Type objMain.SwfEdit("Class Name:=SwfEdit","enabled:=True","focused:=True"), strViewName	   
				   UTIL_Win_SendKey "{ENTER}"
					wait 10
				   If GUI_List_TextExists (objListView,"Name",strViewName) Then
					  FRM_Logger_ReportPassEvent "Dashboard Manage View Creation","Dashboard Manage View created with name : '"&strViewName&"'  ", Null			 
				   Else
					  FRM_Logger_ReportFailEvent "Dashboard Manage View Creation","Dashboard Manage View named '"&strViewName&"' not created", Null			 
				   End If 
				
				   BIZ_Dashboard_CreateManageViewFolder = strViewName
				
				   Set objData = Nothing
				
			  Case Ucase("existing")
				   FRM_Logger_ReportInfoEvent "Dashboard Create Manage View", "Dashboard Create Manage view using Existing View Name : '"&strSnapRowIDorNameOfFile&"' ", Null
				
				   GUI_SwfButton_Click objMain.SwfObject("swfname:=btnAdd")
				   strDefaultViewName = GUI_Object_GetPropertyValue (objListView.SwfEdit("micclass:=SwfEdit","focused:=True"),"text")
				
				   If len(strDefaultViewName) > 0 Then
					  FRM_Logger_ReportPassEvent "Dashboard Manage View Creation","Dashboard Manage View created with Default name : '"&strDefaultViewName&"'  ", Null			 
				   Else
					  FRM_Logger_ReportFailEvent "Dashboard Manage View Creation","Dashboard Manage View Default named '"&strDefaultViewName&"' not created", Null
				   End If
				
				   GUI_SwfEdit_Type objMain.SwfEdit("Class Name:=SwfEdit","enabled:=True","focused:=True"), strSnapRowIDorNameOfFile	   
				   UTIL_Win_SendKey "{ENTER}"
				   strvalDialog=Cstr(GUI_Object_GetPropertyValue(objMain.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),"text"))
				
				   If GUI_Object_IsExist (objMain.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535")) Then
					  GUI_Dialog_VerifyStaticText objMain.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),"The selected item cannot be renamed because an item in this folder already exists with the specified name.","Error Message"
					  FRM_Logger_ReportPassEvent "Encompass Message Existance","Encompass Dialog box existed with message: '"&strvalDialog&"' For '"&strSnapRowIDorNameOfFile&"' ", Null
					  GUI_Dialog_Encompass_OK "The selected item cannot be renamed because an item in this folder already exists with the specified name."
					  GUI_SwfEdit_Type objMain.SwfEdit("Class Name:=SwfEdit","enabled:=True","focused:=True")," (1)"   ' @ Appending one to the existing folder name
					  UTIL_Win_SendKey "{ENTER}"	
					  GUI_Object_WaitTillExist objListView
					
					  strSnapRowIDorNameOfFile = strSnapRowIDorNameOfFile&" (1)"
					
					  If GUI_List_TextExists (objListView,"Name",strSnapRowIDorNameOfFile) Then				
						 FRM_Logger_ReportPassEvent "Dashboard Manage View Creation","Dashboard Manage View created with name : '"&strSnapRowIDorNameOfFile&"'", Null			 
					  Else
						 FRM_Logger_ReportFailEvent "Dashboard Manage View Creation","Dashboard Manage View named '"&strSnapRowIDorNameOfFile&"' not created", Null
					  End If
				   Else
					  FRM_Logger_ReportFailEvent "Encompass Message Existance","Encompass Dialog box not existed with message for '"&strSnapRowIDorNameOfFile&"' ", Null
				   End If	
				
				   BIZ_Dashboard_CreateManageViewFolder = strSnapRowIDorNameOfFile
				
	   End Select
		
	   Set objMain     = Nothing
	   Set objListView = Nothing
	
	ElseIf LCase(strfolderorview)="manageviewfolder" Then
		
           Select Case UCase(strfolderneworexisting)
			
            	  Case UCase("new")
					   FRM_Logger_ReportInfoEvent "Dashboard Create Manage View Folder", "Dashboard Create Folder using RowID : '"&strSnapRowIDorNameOfFile&" ' in datasheet", Null
				
					   Set objData = FRM_DS_GetTestData("Dashboard", "SnapShots", strSnapRowIDorNameOfFile)
					   strFolderName=FRM_DS_GetValue(objData, "ManageView_Folder")
					   GUI_SwfButton_Click objMain.SwfObject("swfname:=btnNewFolder")
					   strDefaultFolderName=GUI_Object_GetPropertyValue (objListView.SwfEdit("micclass:=SwfEdit","focused:=True"),"text")
				
					   If Len(strDefaultFolderName) > 0 Then
						  FRM_Logger_ReportPassEvent "Dashboard Manage View Folder Creation","Dashboard Manage View Folder created with Default name : '"&strDefaultFolderName&"'  ", Null			 
					   Else
						  FRM_Logger_ReportFailEvent "Dashboard Manage View Folder Creation","Dashboard Manage View Folder Default named '"&strDefaultFolderName&"' not created", Null
					   End If
				
					   GUI_SwfEdit_Type objMain.SwfEdit("Class Name:=SwfEdit","enabled:=True","focused:=True"), strFolderName	   
					   UTIL_Win_SendKey "{ENTER}"
				
					   If GUI_List_TextExists (objListView,"Name",strFolderName) Then
					      FRM_Logger_ReportPassEvent "Dashboard Manage View Folder Creation","Dashboard Manage View Folder created with name : '"&strFolderName&"'  ", Null			 
					   Else
						  FRM_Logger_ReportFailEvent "Dashboard Manage View Folder Creation","Dashboard Manage View Folder named '"&strFolderName&"' not created", Null			 
					   End If 
				
					   BIZ_Dashboard_CreateManageViewFolder = strFolderName
				
					   Set objData = Nothing
			
				  Case UCase("existing")
					   FRM_Logger_ReportInfoEvent "Dashboard Create Manage View Folder", "Dashboard Create Folder using Existing Folder Name : '"&strSnapRowIDorNameOfFile&"' ", Null
				
					   GUI_SwfButton_Click objMain.SwfObject("swfname:=btnNewFolder")
					   strDefaultFolderName=GUI_Object_GetPropertyValue (objListView.SwfEdit("micclass:=SwfEdit","focused:=True"),"text")
				
					   If Len(strDefaultFolderName) > 0 Then
						  FRM_Logger_ReportPassEvent "Dashboard Manage View Folder Creation","Dashboard Manage View Folder created with Default name : '"&strDefaultFolderName&"'  ", Null			 
					   Else
						  FRM_Logger_ReportFailEvent "Dashboard Manage View Folder Creation","Dashboard Manage View Folder Default named '"&strDefaultFolderName&"' not created", Null
					   End If
				
					   GUI_SwfEdit_Type objMain.SwfEdit("Class Name:=SwfEdit","enabled:=True","focused:=True"), strSnapRowIDorNameOfFile	   
					   UTIL_Win_SendKey "{ENTER}"
					   strvalDialog = CStr(GUI_Object_GetPropertyValue(objMain.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),"text"))
				
					   If GUI_Object_IsExist (objMain.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535")) Then
					      GUI_Dialog_VerifyStaticText objMain.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),"The selected item cannot be renamed because an item in this folder already exists with the specified name.","Error Message"
						  FRM_Logger_ReportPassEvent "Encompass Message Existance","Encompass Dialog box existed with message: '"&strvalDialog&"' for '"&strSnapRowIDorNameOfFile&"' ", Null
						  GUI_Dialog_Encompass_OK "The selected item cannot be renamed because an item in this folder already exists with the specified name."
					      GUI_SwfEdit_Type objMain.SwfEdit("Class Name:=SwfEdit","enabled:=True","focused:=True")," (1)"   ' @ Appending one to the existing folder name
						  UTIL_Win_SendKey "{ENTER}"	
						  GUI_Object_WaitTillExist objListView
					
						  strSnapRowIDorNameOfFile = strSnapRowIDorNameOfFile&" (1)"
					
						  If GUI_List_TextExists (objListView,"Name",strSnapRowIDorNameOfFile) Then				
							 FRM_Logger_ReportPassEvent "Dashboard Manage View Creation","Dashboard Manage View created with name : '"&strSnapRowIDorNameOfFile&"'  ", Null			 
						  Else
							 FRM_Logger_ReportFailEvent "Dashboard Manage View Creation","Dashboard Manage View named '"&strSnapRowIDorNameOfFile&"' not created", Null
						  End If
					   Else
						  FRM_Logger_ReportFailEvent "Encompass Message Existance","Encompass Dialog box not existed with message for '"&strSnapRowIDorNameOfFile&"' ", Null
					   End If	
				
					   BIZ_Dashboard_CreateManageViewFolder = strSnapRowIDorNameOfFile
				
		   End Select		
	Set objMain     = Nothing
	Set objListView = Nothing
	Else
		FRM_Logger_ReportFailEvent "Error In Passing Parameter strfolderorview","You Need To Pass Valid Operation That Is '"&ManageViewFolder&"' or '"&ManageView&"' ", Null
	End If	

End Function



'This Function is to duplicate already created manage view or manage view folder
'@code
' 	Function BIZ_Dashboard_CreateDuplicateManageViewFolder(strCreatedManageViewFolder,strduplicateviewfolder)
'@endcode
'@param: strCreatedManageViewFolder - passing the created manage view/folder name
'@param: strduplicateviewfolder - pass either view or folder as parameter

Function BIZ_Dashboard_CreateDuplicateManageViewFolder(strCreatedManageViewFolder,strduplicateviewfolder)

	FRM_Logger_ReportInfoEvent "Duplicated Manage View/Folder Creation ","Dashboard Manage View/Folder Duplicate Creation Using Created View/Folder named : '"&strCreatedManageViewFolder&"'", Null	
	
	Dim objMain,objListView, strduplicateviewFolderName
	
	Set objMain     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog")
	Set objListView = objMain.swfobject("swfname:=gvdirectory")
	
	GUI_List_ClickRow objListView, objListView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedManageViewFolder, True, False, False, "Single"
	GUI_SwfButton_Click objMain.SwfObject("swfname:=btnDuplicate")
	GUI_Object_WaitTillExist objListView
	
	strduplicateviewFolderName = "Copy of "&strCreatedManageViewFolder
	
	Select Case UCase(strduplicateviewfolder)
		
		   Case UCase("view")
		
			    If GUI_List_TextExists (objListView,"Name",strduplicateviewFolderName) Then
				   FRM_Logger_ReportPassEvent "Dashboard Manage View Duplicate Creation","Dashboard Manage Duplicate View created with name : '"&strduplicateviewFolderName&"'", Null			 
				Else
				   FRM_Logger_ReportFailEvent "Dashboard Manage View Duplicate Creation","Dashboard Manage Duplicate View named '"&strduplicateviewFolderName&"' not created", Null			 
				End If 
		
		   Case UCase("folder")
		
				If GUI_List_TextExists (objListView,"Name",strduplicateviewFolderName) Then
				   FRM_Logger_ReportPassEvent "Dashboard Manage View Folder Duplicate Creation","Dashboard Manage Duplicate View Folder created with name : '"&strduplicateviewFolderName&"'", Null			 
				Else
				   FRM_Logger_ReportFailEvent "Dashboard Manage View Folder Duplicate Creation","Dashboard Manage Duplicate View Folder named '"&strduplicateviewFolderName&"' not created", Null			 
				End If 
		
	End Select
		
	Set objMain 	= Nothing
	Set objListView = Nothing
	
	BIZ_Dashboard_CreateDuplicateManageViewFolder = strduplicateviewFolderName
				
End Function



'This Function is to delete manage view or folder
'@code
'  	Function BIZ_Dashboard_DeleteManageViewFolder(strCreatedManageViewFolder,boolDeleteYesOrNo)
'@endcode
'@param: strCreatedManageViewFolder - passing the created manage view/folder name
'@param: boolDeleteYesOrNo - pass either "yes" or "no"

Function BIZ_Dashboard_DeleteManageViewFolder(strCreatedManageViewFolder,boolDeleteYesOrNo)

	FRM_Logger_ReportInfoEvent "Manage View/Folder Deletion ","Dashboard Manage View/Folder Deletion Using Created View/Folder named : '"&strCreatedManageViewFolder&"'", Null	
	
	Dim objMain,objListView
	
	Set objMain     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog")
	Set objListView = objMain.swfobject("swfname:=gvdirectory")
	
	GUI_List_ClickRow objListView, objListView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedManageViewFolder, True, False, False, "Single"
	GUI_Object_WaitTillExist objListView
	
	Select Case UCase(boolDeleteYesOrNo)
		
		   Case UCase("No")
				GUI_Object_WaitTillExistX objMain,100
				GUI_SwfButton_Click objMain.SwfObject("swfname:=btnDelete")
			
				If GUI_Object_IsExistX (objMain.Dialog("text:=Encompass"),60) Then		'@ To handle unexpected popups (Some instances) 					
				   GUI_Dialog_Encompass_No "Are you sure you want to delete .*" 
				   FRM_Logger_ReportPassEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is displayed", Null
				   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
				
				   If GUI_List_TextExists (objListView,"Name",strCreatedManageViewFolder) Then
					  FRM_Logger_ReportPassEvent "Dashboard Manage View/folder Deletion","Dashboard Manage View/folder named '"&strCreatedManageViewFolder&"' not deleted", Null	
				   Else
					  FRM_Logger_ReportFailEvent "Dashboard Manage View/folder Deletion","Dashboard Manage View/folder deleted with name : '"&strCreatedManageViewFolder&"'", Null			 		 
				   End If 
				
				Else
				   FRM_Logger_ReportFailEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is not displayed", Null	
			    End If
			
		   Case UCase("yes")		'@	yes Process
				GUI_Object_WaitTillExistX objMain,100
				GUI_SwfButton_Click objMain.SwfObject("swfname:=btnDelete")
			
				If GUI_Object_IsExistX (objMain.Dialog("text:=Encompass"),60) Then		'@ To handle unexpected popups (Some instances) 					
				   GUI_Dialog_Encompass_Yes "Are you sure you want to delete .*" 
				   FRM_Logger_ReportPassEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is displayed", Null
				   Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
				   If Dialog("text:=Encompass","height:=152").Exist(5) Then
						GUI_WinButton_Click Dialog("text:=Encompass","height:=152").WinButton("text:=&Yes")
				   End If
				   If GUI_List_TextExists (objListView,"Name",strCreatedManageViewFolder) Then
					  FRM_Logger_ReportFailEvent "Dashboard Manage View/folder Deletion","Dashboard Manage View/folder named '"&strCreatedManageViewFolder&"' not deleted", Null
				   Else
					  FRM_Logger_ReportPassEvent "Dashboard Manage View/folder Deletion","Dashboard Manage View/folder deleted with name : '"&strCreatedManageViewFolder&"'", Null			 			 
				   End If 
				
				Else
				   FRM_Logger_ReportFailEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is not displayed", Null	
				End If
			
		   Case Ucase("no|yes")
				GUI_Object_WaitTillExistX objMain,100
				GUI_SwfButton_Click objMain.SwfObject("swfname:=btnDelete")
			
				If GUI_Object_IsExistX (objMain.Dialog("text:=Encompass"),60) Then		'@ To handle unexpected popups (Some instances) 					
				   GUI_Dialog_Encompass_No "Are you sure you want to delete .*" 
				   FRM_Logger_ReportPassEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is displayed", Null
				   Wait g_ShortWaitMedium
				
				   If GUI_List_TextExists (objListView,"Name",strCreatedManageViewFolder) Then
					  FRM_Logger_ReportPassEvent "Dashboard Manage View/folder Deletion","Dashboard Manage View/folder named '"&strCreatedManageViewFolder&"' not deleted", Null	
				   Else
					  FRM_Logger_ReportFailEvent "Dashboard Manage View/folder Deletion","Dashboard Manage View/folder deleted with name : '"&strCreatedManageViewFolder&"'", Null			 				
				   End If 
				
				Else
				   FRM_Logger_ReportFailEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is not displayed", Null	
				End If
			
				Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
			
				GUI_Object_WaitTillExistX objMain,100
				GUI_SwfButton_Click objMain.SwfObject("swfname:=btnDelete")
			
				If GUI_Object_IsExistX (objMain.Dialog("text:=Encompass"),60) Then		'@ To handle unexpected popups (Some instances) 					
				   GUI_Dialog_Encompass_Yes "Are you sure you want to delete .*" 
				   FRM_Logger_ReportPassEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is displayed", Null
				   Wait g_ShortWaitMedium
				
				   If GUI_List_TextExists (objListView,"Name",strCreatedManageViewFolder) Then
				      FRM_Logger_ReportFailEvent "Dashboard Manage View/folder Deletion","Dashboard Manage View/folder named '"&strCreatedManageViewFolder&"' not deleted", Null
				   Else
				      FRM_Logger_ReportPassEvent "Dashboard Manage View/folder Deletion","Dashboard Manage View/folder deleted with name : '"&strCreatedManageViewFolder&"'", Null			 			 
				   End If 
				
				Else
				   FRM_Logger_ReportFailEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is not displayed", Null	
				End If
			
		   Case UCase("Folder Not Empty")
			
				GUI_Object_WaitTillExistX objMain,100
				GUI_SwfButton_Click objMain.SwfObject("swfname:=btnDelete")
			
				If GUI_Object_IsExistX (objMain.Dialog("text:=Encompass"),60) Then		'@ To handle unexpected popups (Some instances) 					
				   GUI_Dialog_Encompass_Yes "Are you sure you want to delete .*" 
				   FRM_Logger_ReportPassEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is displayed", Null
				   Wait g_ShortWaitMedium	
				Else
				   FRM_Logger_ReportFailEvent "Encompass Dialog Box Existance","Encompass Dialog Delete confirmation message is not displayed", Null
				End If
			
				If GUI_Object_IsExist (objMain.Dialog("text:=Encompass")) Then		'@ To handle unexpected popups (Some instances) 					
				   GUI_Dialog_Encompass_OK "The folder '"&strCreatedManageViewFolder&"' cannot be deleted because it is not empty." 
				   FRM_Logger_ReportPassEvent "Validate View Folder deletion With Already Existing File", "Selected View Folder '"&strCreatedManageViewFolder&"' Not deleted Because it is not empty", null
				Else
				   FRM_Logger_ReportPassEvent "Validate View Folder deletion With Already Existing File", "Selected View Folder '"&strCreatedManageViewFolder&"' deleted even though it is not empty", null
				End If
				Wait g_ShortWaitMedium
			
	End Select
	
	Set objMain		 = Nothing
	Set objListView  = Nothing
				
End Function



'This Function is to Select Manage View option and selecting folder type
'@code
'	Function BIZ_Dashboard_ClickManageViewAndSelectTemplateFolderType(strTemplateFolderType) 
'@endcode
'@param: strTemplateFolderType - pass either "Public" or "Personal"

Function BIZ_Dashboard_ClickManageViewAndSelectTemplateFolderType(strTemplateFolderType)
	
	FRM_Logger_ReportInfoEvent "Dashboard Manage view", "Selected Manage View button, type of Template Folder selected is '"&strTemplateFolderType&"'", Null
	
	Dim objManageSnapShot, objTemplates
	
	Set objManageSnapShot = SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnViewMgr") 
	Set objTemplates      = SwfWindow("swfname:=DashboardViewTemplateFormDialog").SwfComboBox("swfname:=cmbBoxFolder")
	
	GUI_SwfButton_Click objManageSnapShot
	GUI_SwfTreeView_Select objTemplates, strTemplateFolderType	'@ Dashboard Template Folder Type Selection
		
	Set objTemplates 	  = Nothing
	Set objManageSnapShot = Nothing 
	
End Function



'This Function is Used to create snapshot folder
'@code
'	BIZ_Dashboard_CreateSnapshotFolder(strSnapRowIDorNameOfFile,strfolderneworexisting,strSnapshotOrFolder)
'@endcode
'@param: strSnapRowIDorNameOfFile - pass either datasheet RowID or Folder name 
'@param: strfolderneworexisting - pass either new or existing 

Function BIZ_Dashboard_CreateSnapshotFolder(strSnapRowIDorNameOfFile,strfolderneworexisting,strSnapshotOrFolder)
	
	FRM_Logger_ReportInfoEvent "Create Dashboard Snapshot/Folder","Create Dashboard Snapshot/Folder Using : '"&strSnapRowIDorNameOfFile&"'", Null	
		
	Dim objAddBtn, objSnapEdit, objData, objListView, strSnapShotFolderName, strvalDialog, strDefaultName
	
	Set objAddBtn = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog")
	Set objSnapEdit = objAddBtn.SwfEdit("Class Name:=SwfEdit")
	Set objListView = objAddBtn.SwfObject("swfname:=gvDirectory")
	
	If UCase(strSnapshotOrFolder) = UCase("SnapshotFolder") Then
	
	   Select Case UCase(strfolderneworexisting)

			  Case UCase("new")
				   Set objData = FRM_DS_GetTestData("Dashboard", "SnapShots", strSnapRowIDorNameOfFile)
				   strSnapShotFolderName = FRM_DS_GetValue(objData, "FolderName")		'@ Get Snapshot Name
				
				   GUI_SwfButton_Click objAddBtn.SwfObject("swfname:=btnNewFolder")
				   strDefaultName=GUI_Object_GetPropertyValue (objListView.SwfEdit("micclass:=SwfEdit","focused:=True"),"text")
					
				   If Len(strDefaultName) > 0 Then
					  FRM_Logger_ReportPassEvent "Dashboard Snapshot Folder Creation","Dashboard Snapshot Folder created with Default name : '"&strDefaultName&"'  ", Null			 
				   Else
					  FRM_Logger_ReportFailEvent "Dashboard Snapshot Folder Creation","Dashdboard Snapshot Folder Default named '"&strDefaultName&"' not created", Null
				   End If
					
				   GUI_SwfEdit_Type objSnapEdit, strSnapShotFolderName	
				   UTIL_Win_SendKey "{ENTER}"
				
				   If GUI_List_TextExists (objListView,"Name",strSnapShotFolderName) Then
					  FRM_Logger_ReportPassEvent "Dashboard Snapshot Folder Creation","Dashboard Snapshot Folder created with name : '"&strSnapShotFolderName&"'  ", Null			 
				   Else
					  FRM_Logger_ReportFailEvent "Dashboard Snapshot Folder Creation","Dashdboard Snapshot Folder named '"&strSnapShotFolderName&"' not created", Null			 
				   End If 
				
				   Set objData = Nothing
				
				   BIZ_Dashboard_CreateSnapshotFolder = strSnapShotFolderName
				
			  Case UCase("existing")	
				   GUI_SwfButton_Click objAddBtn.SwfObject("swfname:=btnNewFolder")
				   GUI_SwfEdit_Type objSnapEdit, strSnapRowIDorNameOfFile	
				   UTIL_Win_SendKey "{ENTER}"
				
				   strvalDialog = CStr(GUI_Object_GetPropertyValue(objAddBtn.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),"text"))
				
				   If GUI_Object_IsExist (objAddBtn.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535")) Then
					  GUI_Dialog_VerifyStaticText objAddBtn.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),"The selected item cannot be renamed because an item in this folder already exists with the specified name.","Error Message"
					  FRM_Logger_ReportPassEvent "Encompass Message Existance","Encompass Dialog box existed with message: '"&strvalDialog&"' For '"&strSnapRowIDorNameOfFile&"' ", Null
					  GUI_Dialog_Encompass_OK "The selected item cannot be renamed because an item in this folder already exists with the specified name."
					
					  GUI_SwfEdit_Type objAddBtn.SwfEdit("Class Name:=SwfEdit","enabled:=True","focused:=True")," (1)"   ' @ Appending one to the existing folder name
					  UTIL_Win_SendKey "{ENTER}"	
					  GUI_Object_WaitTillExist objListView
					
					  strSnapRowIDorNameOfFile=strSnapRowIDorNameOfFile&" (1)"
					
					  If GUI_List_TextExists (objListView,"Name",strSnapRowIDorNameOfFile) Then				
						 FRM_Logger_ReportPassEvent "Dashboard snapshot folder create","Dashboard snapshot folder created with name : '"&strSnapRowIDorNameOfFile&"'", Null			 
					  Else
						 FRM_Logger_ReportFailEvent "Dashboard snapshot folder create","Dashboard snapshot folder named '"&strSnapRowIDorNameOfFile&"' not created", Null
					  End If
				   Else
					  FRM_Logger_ReportFailEvent "Encompass Message Existance","Encompass Dialog box not existed with message for '"&strSnapRowIDorNameOfFile&"' ", Null
				   End If	
				
				   BIZ_Dashboard_CreateSnapshotFolder = strSnapRowIDorNameOfFile
				
	   End Select
		
	ElseIf UCase(strSnapshotOrFolder) = UCase("Snapshot") Then

		   Select Case UCase(strfolderneworexisting)

			      Case UCase("new")
					   Set objData = FRM_DS_GetTestData("Dashboard", "SnapShots", strSnapRowIDorNameOfFile)
					   strSnapShotFolderName = FRM_DS_GetValue(objData, "SnapshotID")		'@ Get Snapshot Name
				
					   GUI_SwfButton_Click objAddBtn.SwfObject("swfname:=btnAdd")
					   strDefaultName=GUI_Object_GetPropertyValue (objListView.SwfEdit("micclass:=SwfEdit","focused:=True"),"text")
					
					   If len(strDefaultName) > 0 Then
					      FRM_Logger_ReportPassEvent "Dashboard Snapshot Creation","Dashboard Snapshot created with Default name : '"&strDefaultName&"'  ", Null			 
					   Else
						  FRM_Logger_ReportFailEvent "Dashboard Snapshot Creation","Dashdboard Snapshot Default named '"&strDefaultName&"' not created", Null
					   End If
					
					   GUI_SwfEdit_Type objSnapEdit, strSnapShotFolderName	
					   UTIL_Win_SendKey "{ENTER}"
				
					   If GUI_List_TextExists (objListView,"Name",strSnapShotFolderName) Then
						  FRM_Logger_ReportPassEvent "Dashboard Snapshot Creation","Dashboard Snapshot created with name : '"&strSnapShotFolderName&"'  ", Null			 
					   Else
						  FRM_Logger_ReportFailEvent "Dashboard Snapshot Creation","Dashdboard Snapshot named '"&strSnapShotFolderName&"' not created", Null			 
					   End If 
				
					   Set objData = Nothing
				
					   BIZ_Dashboard_CreateSnapshotFolder = strSnapShotFolderName
				
				  Case UCase("existing")	
					   GUI_SwfButton_Click objAddBtn.SwfObject("swfname:=btnAdd")
					   GUI_SwfEdit_Type objSnapEdit, strSnapRowIDorNameOfFile	
					   UTIL_Win_SendKey "{ENTER}"
				
					   strvalDialog = CStr(GUI_Object_GetPropertyValue(objAddBtn.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),"text"))
				
					   If GUI_Object_IsExist (objAddBtn.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535")) Then
					      GUI_Dialog_VerifyStaticText objAddBtn.Dialog("text:=Encompass").Static("nativeclass:=Static","window id:=65535"),"The selected item cannot be renamed because an item in this folder already exists with the specified name.","Error Message"
						  FRM_Logger_ReportPassEvent "Encompass Message Existance","Encompass Dialog box existed with message: '"&strvalDialog&"' For '"&strSnapRowIDorNameOfFile&"' ", Null
						  GUI_Dialog_Encompass_OK "The selected item cannot be renamed because an item in this folder already exists with the specified name."
					
						  GUI_SwfEdit_Type objAddBtn.SwfEdit("Class Name:=SwfEdit","enabled:=True","focused:=True")," (1)"   ' @ Appending one to the existing name
						  UTIL_Win_SendKey "{ENTER}"	
						  GUI_Object_WaitTillExist objListView
					
						  strSnapRowIDorNameOfFile=strSnapRowIDorNameOfFile&" (1)"
					
						  If GUI_List_TextExists (objListView,"Name",strSnapRowIDorNameOfFile) Then				
							 FRM_Logger_ReportPassEvent "Dashboard snapshot create","Dashboard snapshot created with name : '"&strSnapRowIDorNameOfFile&"'", Null			 
						  Else
							 FRM_Logger_ReportFailEvent "Dashboard snapshot create","Dashboard snapshot named '"&strSnapRowIDorNameOfFile&"' not created", Null
						  End If
					   Else
						  FRM_Logger_ReportFailEvent "Encompass Message Existance","Encompass Dialog box not existed with message for '"&strSnapRowIDorNameOfFile&"' ", Null
					   End If	
				
					   BIZ_Dashboard_CreateSnapshotFolder = strSnapRowIDorNameOfFile
				
		   End Select
		
	Else 
		   FRM_Logger_ReportFailEvent "Incorrect Function Parameter","Pass either snapshotfolder or snapshot as paramter in place of strSnapshotOrFolder", Null
		
	Set objAddBtn   = Nothing
	Set objSnapEdit = Nothing
	Set objListView = Nothing

	End If
	
End Function



'This Function is Used to Rename Snapshot or folder
'@code
' 	Function BIZ_Dashboard_RenameSnapshotOrFolder(strSnapshotOrFolderName)
'@endcode
'@param: strSnapshotOrFolderName - pass snapshot or folder name to rename

Function BIZ_Dashboard_RenameSnapshotOrFolder(strSnapshotOrFolderName)

	Dim objMainView,objSnapEdit,strRenamedName
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfObject("swfname:=gvDirectory")
	Set objSnapEdit = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfEdit("Class Name:=SwfEdit")
		
	strRenamedName="Rename"&strSnapshotOrFolderName  	
	
	GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapshotOrFolderName, True, False, False, "Single"
	GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapshotOrFolderName, True, False, False, "micRightBtn"
	SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Rename"
	GUI_SwfEdit_Type objSnapEdit, strRenamedName	          
	UTIL_Win_SendKey "{ENTER}"
	Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
	
	If GUI_List_TextExists (objMainView,"Name",strRenamedName) Then				
	   FRM_Logger_ReportPassEvent "Rename Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named: '"&strSnapshotOrFolderName&"' renamed with name : '"&strRenamedName&"' ", Null			 
	Else
	   FRM_Logger_ReportFailEvent "Rename Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named '"&strSnapshotOrFolderName&"' not renamed with name : '"&strRenamedName&"'", Null
	End If
	
	GUI_Object_Click objMainView,"swfobject","Click On List"		'@ Need To Move Focus Out From This Renamed Folder otherwise it will go into edit mode
	
	Set objMainView 	= Nothing
    Set objSnapEdit    	= Nothing
		
	BIZ_Dashboard_RenameSnapshotOrFolder = strRenamedName
	
End Function



'This Function is to duplicate already created snapshot or folder
'@code
'  	Function BIZ_Dashboard_CreateDuplicateSnapshotOrFolder(strCreatedSnapshotOrFolder)
'@endcode
'@param: strCreatedSnapshotOrFolder - passing the created snapshot or folder name

Function BIZ_Dashboard_CreateDuplicateSnapshotOrFolder(strCreatedSnapshotOrFolder)

	FRM_Logger_ReportInfoEvent "Duplicate Snapshot/Folder","Duplication of Snapshot/Folder Using : '"&strCreatedSnapshotOrFolder&"'", Null	
	
	Dim objMain,objListView,strDuplicateName
	
	Set objMain     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog")
	Set objListView = objMain.swfobject("swfname:=gvdirectory")
	
	GUI_List_ClickRow objListView, objListView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "Single"
	GUI_SwfButton_Click objMain.SwfObject("swfname:=btnDuplicate")
	GUI_Object_WaitTillExist objListView
	
	strDuplicateName="Copy of "&strCreatedSnapshotOrFolder
	Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
	
	If GUI_List_TextExists (objListView,"Name",strDuplicateName) Then
	   FRM_Logger_ReportPassEvent "Duplicate Snapshot/Folder","Duplication of Snapshot/Folder created with name : '"&strDuplicateName&"'", Null			 
	Else
	   FRM_Logger_ReportFailEvent "Duplicate Snapshot/Folder","Duplication of Snapshot/Folder View named '"&strDuplicateName&"' not created", Null			 
	End If 

	Set objMain 	= Nothing
	Set objListView = Nothing
	
	BIZ_Dashboard_CreateDuplicateSnapshotOrFolder = strDuplicateName
				
End Function



'This Function is to copy/cut paste in already created snapshot or folder
'@code
'	Function BIZ_Dashboard_CopyOrCutPasteSnapshotOrFolder(strCreatedSnapshotOrFolder,strDestinationFolder,strCopyOrCut)
'@endcode
'@param: strCreatedSnapshotOrFolder - passing the created snapshot or folder name to be copied
'@param: strDestinationFolder - destination folder name should be passed to paste the file
'@param: strCopyOrCut - pass either copy or cut as parameter

Function BIZ_Dashboard_CopyOrCutPasteSnapshotOrFolder(strCreatedSnapshotOrFolder,strDestinationFolder,strCopyOrCut)
	
	Dim objMainView,objSnapEdit
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfObject("swfname:=gvDirectory")
	Set objSnapEdit = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfEdit("Class Name:=SwfEdit")
	
	Select Case Ucase(strCopyOrCut)
	
		   Case Ucase("Copy")
			    GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "Single"
			    GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "micRightBtn"
			    SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Copy"
			    Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
		
		        If GUI_List_TextExists (objMainView,"Name",strCreatedSnapshotOrFolder) Then				
				   FRM_Logger_ReportPassEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named: '"&strCreatedSnapshotOrFolder&"' present in the Parent folder ", Null			 
			    Else
				   FRM_Logger_ReportFailEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named '"&strCreatedSnapshotOrFolder&"' not present in the Parent folder ", Null
			    End If
			
			    GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "Single"
			    GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "micRightBtn"
			    SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Paste"
			    GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "Double"
			    Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
				
			    If GUI_List_TextExists (objMainView,"Name",strCreatedSnapshotOrFolder) Then				
				   FRM_Logger_ReportPassEvent "Dashboard Snapshot/Folder","Copy Dashboard Snapshot/Folder named: '"&strCreatedSnapshotOrFolder&"' Pasted into the folder '"&strDestinationFolder&"' ", Null			 
			    Else
				   FRM_Logger_ReportFailEvent "Dashboard Snapshot/Folder","Copy Dashboard Snapshot/Folder named '"&strCreatedSnapshotOrFolder&"' not pasted into the folder '"&strDestinationFolder&"' ", Null
			    End If
		
		   Case Ucase("Cut")
			    GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "Single"
			    GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "micRightBtn"
			    SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Cut"
			    Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
	
			    If GUI_List_TextExists (objMainView,"Name",strCreatedSnapshotOrFolder) Then				
			 	   FRM_Logger_ReportPassEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named: '"&strCreatedSnapshotOrFolder&"' present in the Parent folder ", Null			 
				Else
				   FRM_Logger_ReportFailEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named '"&strCreatedSnapshotOrFolder&"' not present in the Parent folder ", Null
				End If
		
				GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "Single"
				GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "micRightBtn"
				SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Paste"
				GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "Double"
				Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
			
				If GUI_List_TextExists (objMainView,"Name",strCreatedSnapshotOrFolder) Then				
				   FRM_Logger_ReportPassEvent "Dashboard Snapshot/Folder","Cut Dashboard Snapshot/Folder named: '"&strCreatedSnapshotOrFolder&"' pasted into the folder '"&strDestinationFolder&"' ", Null			 
				Else
				   FRM_Logger_ReportFailEvent "Dashboard Snapshot/Folder","Cut Dashboard Snapshot/Folder named '"&strCreatedSnapshotOrFolder&"' not pasted into the folder '"&strDestinationFolder&"' ", Null
				End If
	
	End Select
	
	Set objMainView 	= Nothing
    Set objSnapEdit    	= Nothing

End Function



'This Function is to copy/cut paste in already created snapshot or folder
'@code
'	Function BIZ_Dashboard_CopyOrCutSnapshotOrFolder(strCreatedSnapshotOrFolder,strCopyOrCut)
'@endcode
'@param: strCreatedSnapshotOrFolder - passing the created snapshot or folder name to be copied
'@param: strCopyOrCut - pass either copy or cut as parameter

Function BIZ_Dashboard_CopyOrCutSnapshotOrFolder(strCreatedSnapshotOrFolder,strCopyOrCut)
	
	Dim objMainView,objSnapEdit
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfObject("swfname:=gvDirectory")
	Set objSnapEdit = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfEdit("Class Name:=SwfEdit")
	
	Select Case UCase(strCopyOrCut)
	
		   Case UCase("Copy")
				GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "Single"
				GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "micRightBtn"
				SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Copy"
				Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly		
	
				If GUI_List_TextExists (objMainView,"Name",strCreatedSnapshotOrFolder) Then				
				   FRM_Logger_ReportPassEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named: '"&strCreatedSnapshotOrFolder&"' present in the Parent folder ", Null			 
				Else
				   FRM_Logger_ReportFailEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named '"&strCreatedSnapshotOrFolder&"' not present in the Parent folder ", Null
				End If
	
		   Case UCase("Cut")
				GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "Single"
				GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strCreatedSnapshotOrFolder, True, False, False, "micRightBtn"
				SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Cut"
				Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
	
				If GUI_List_TextExists (objMainView,"Name",strCreatedSnapshotOrFolder) Then				
				   FRM_Logger_ReportPassEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named: '"&strCreatedSnapshotOrFolder&"' present in the Parent folder ", Null			 
				Else
				   FRM_Logger_ReportFailEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named '"&strCreatedSnapshotOrFolder&"' not present in the Parent folder ", Null
				End If
	
	End Select
	
	Set objMainView = Nothing
	Set objSnapEdit = Nothing
	
End Function



'This Function is to copy/cut paste in already created snapshot or folder
'@code
'	Function BIZ_Dashboard_PasteSnapshotOrFolder(strsourcefile,strDestinationFolder)
'@endcode
'@param: strsourcefile - passing the created snapshot or folder name that is source file
'@param: strDestinationFolder - pass the destination folder name

Function BIZ_Dashboard_PasteSnapshotOrFolder(strsourcefile,strDestinationFolder)
	
	Dim objMainView, objSnapEdit
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfObject("swfname:=gvDirectory")
	Set objSnapEdit = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog").SwfEdit("Class Name:=SwfEdit")
	
	GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "Single"
	GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "micRightBtn"
	SwfWindow("swfname:=MainForm").WinMenu("menuobjtype:=3").Select "Paste"
	Wait g_LongWaitLarge		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
	GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strDestinationFolder, True, False, False, "Double"
	Wait g_ShortWaitMedium		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
		
	If GUI_List_TextExists (objMainView,"Name",strsourcefile) Then				
	   FRM_Logger_ReportPassEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named: '"&strsourcefile&"' Pasted into the folder '"&strDestinationFolder&"' ", Null			 
	Else
	   FRM_Logger_ReportFailEvent "Dashboard Snapshot/Folder","Dashboard Snapshot/Folder named '"&strsourcefile&"' not pasted into the folder '"&strDestinationFolder&"' ", Null
	End If
	
	Set objMainView = Nothing
	Set objSnapEdit	= Nothing
	
End Function



'This Function is to select either Public Dashboard Templates or Personal Dashboard Templates
'@code
'	Function BIZ_Dashboard_SelectDashboardTemplateType(objFolderType) 
'@endcode
'@Param: objFolderType - template to select like "Public Dashboard Templates" or "Personal Dashboard Templates"

Function BIZ_Dashboard_SelectDashboardTemplateType(objFolderType) 
	
    FRM_Logger_ReportInfoEvent "Dashboard Folder Type Selection", "Dashboard Manage Snapshot, Folder Type Selected Is: '"&objFolderType&"' ", Null 
	
    Dim objManageSnapshot
	Set objManageSnapshot = SwfWindow("swfname:=DashboardTemplateFormDialog").SwfComboBox("swfname:=cmbBoxFolder")
	GUI_SwfTreeView_Select objManageSnapshot, objFolderType
	
	Set objManageSnapshot = Nothing
	
End Function



'@This Function is to Set Default Manage View From existing view
'@code
'	Function BIZ_Dashboard_ManageView_SetAsDefault(strViewName)
'@endcode
'@Param: strViewName - select Created view

Function BIZ_Dashboard_ManageView_SetAsDefault(strViewName)
	
	Dim objDefaultView,objViewDefaultPath,objMainView, strDefaultView
	
	Set objDefaultView     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SwfButton("swfname:=btnSetAsDefault")
	Set objViewDefaultPath = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SwfEdit("swfname:=txtDefaultPath")
	Set objMainView        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SWFObject("swfname:=gvDirectory")
		
	GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strViewName, True, False, False, "Single"
	GUI_SwfButton_Click(objDefaultView)
	strDefaultView = GUI_Object_GetPropertyValue(objViewDefaultPath,"text")
	
	If Trim(strViewName) = Trim(strDefaultView) Then
	   FRM_Logger_ReportPassEvent "Manage View set default validation","Manage View set as default : '"&strViewName&"' ", Null   
	Else
	   FRM_Logger_ReportFailEvent "Manage View set default validation","Manage View is not set as default "&strViewName, Null 
	End If
	
	Set objDefaultView     = Nothing
	Set objViewDefaultPath = Nothing
	Set objMainView        = Nothing
	
End Function



'This Function is to  selecting snapshot and  strTimeFrame for Manage View
'@code
' 	Function BIZ_Dashboard_SelectLayoutSnapshotAndTimeFrame (strTemplateFolderType,strSnapshotName,intLayoutNumber,strTimeFrame,strSaveAndView)
'@endcode
'@Param : intLayoutNumber - selecting LayOut from 1 to 9 pic layout
'@Param : strTimeFrame - selecting Time format as in the application
'@Param : strSnapshotName - to be selected
'@Param : intLayoutNumber - layout number to be selected
'@Param : strTimeFrame - pass option in that are present in the time frame combo box like current month, last 365 days
'@Param : strSaveAndView - "yes" or "no" to save and view the snapshot view

Function BIZ_Dashboard_SelectLayoutSnapshotAndTimeFrame (strTemplateFolderType,strSnapshotName,intLayoutNumber,strTimeFrame,strSaveAndView)
	
	FRM_Logger_ReportInfoEvent "Layout,TemplateType,Snapshot,TimeFrame Selection", "Template Type Selected Is: '"&strTemplateFolderType&"', Snapshot selected is : '"&strSnapshotName&"', Layout selected is : '"&intLayoutNumber&"', Time Frame Selected is : '"&strTimeFrame&"' ",Null
	
	Dim objTimeFrameComboBox, objSelect, objSnapshotwindow, objPicSnapshot, objDashboardView, objSnapwindow, objSnapwindowlist
	
	Set objDashboardView     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog")
	Set objTimeFrameComboBox = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SwfComboBox("swfname:=cboTimeFrame"&intLayoutNumber)
	Set objSelect            = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SwfButton("swfname:=btnExplorerOk")
	Set objSnapshotwindow    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SWFObject("swfname:=gvDirectory")
	Set objPicSnapshot       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SwfWindow("swfname:=picSnapshot"&intLayoutNumber)
	Set objSnapwindow        = swfwindow("swfname:=DashboardTemplateFormDialog")
	Set objSnapwindowlist    = swfwindow("swfname:=DashboardTemplateFormDialog").SWFObject("swfname:=gvDirectory")
	
	GUI_SwfButton_Click(objPicSnapshot)
	GUI_Object_WaitTillExist objSnapwindow		'@ To handle sync Issues
	GUI_SwfTreeView_Select objSnapwindow.SwfComboBox("swfname:=cmbBoxFolder"),strTemplateFolderType		'@ Dashboard Template Folder Type Selection
	GUI_List_ClickRow objSnapwindowlist, objSnapwindowlist.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strSnapshotName, True, False, False, "Double"
	GUI_Object_WaitTillExist objTimeFrameComboBox		'@ To handle sync Issues
	GUI_SwfList_Select objTimeFrameComboBox, strTimeFrame
		
	If Trim(LCase(strSaveAndView)) = "yes" Then
	   GUI_Object_WaitTillExist objDashboardView.SwfButton("swfname:=btnsave")
	   GUI_SwfButton_Click objDashboardView.SwfButton("swfname:=btnsave")
	   GUI_Object_WaitTillExist objDashboardView.SwfButton("swfname:=btnSelect")
	   GUI_SwfButton_Click objDashboardView.SwfButton("swfname:=btnSelect")
		
	   If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfObject("swfname:=ultraChart")) Then
		  FRM_Logger_ReportPassEvent "View Display Chart","View is displayed with filters", Null
	   Else
			If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblNoDataFound")) Then
				FRM_Logger_ReportPassEvent "View Display Chart","No data matched the search criteria", Null
			Else
				If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblNoDataFound","location:=1")) Then
					FRM_Logger_ReportPassEvent "View Display Chart","No data matched the search criteria", Null
				Else
					FRM_Logger_ReportFailEvent "View Display Chart","View is Not displayed with filters", Null
				End If
			End If
	   End If 
	Else
	   FRM_Logger_ReportInfoEvent "View Display Chart","View layout option is not selected",Null
	End If

	Set objTimeFrameComboBox	=	Nothing
	Set objSelect				=	Nothing
	Set objSnapshotwindow		=	Nothing
	Set objPicSnapshot			=	Nothing  
	Set objSnapwindow			=	Nothing
	Set objSnapwindowlist		=	Nothing
	Set objDashboardView 		=   Nothing
	
End Function



'This function is used to select already created View for adding or editing or deleting filters
'@code
'    Function BIZ_Dashboard_SelectingCreatedView(strView)
'@endcode
'@param: strView - Sending Already Created View To Select In List

Function BIZ_Dashboard_SelectingCreatedView(strView)
	
	Dim objMainView,boolSelectView
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").swfObject("swfname:=gvDirectory") 
	boolSelectView = GUI_List_ClickRow (objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strView, True, False, False, "Single")
	
	If boolSelectView Then
	   FRM_Logger_ReportInfoEvent "Select the View","Selected View from list : '"&strView&"' ", Null
	Else
	   FRM_Logger_ReportFailEvent "Select the View","Unable to select '"&strView&"' from View list", Null
	End If
	
	Set objMainView	 =	Nothing
	
End Function



'@This Function is to select Layout from 1 to 18
'@code
'  	 Function BIZ_Dashboard_ManageView_Layout (intLayoutNumber)
'@endcode
'@Param Type - intLayoutNumber selecting Layout from 1 to 18

Function BIZ_Dashboard_ManageView_Layout (intLayoutNumber)

	FRM_Logger_ReportInfoEvent "Manage View Layout Selection ", "Manage View Layout Selected: '"&intLayoutNumber&"' ", Null
	
	Dim strLocator,objLayout
	
	strLocator="swfname:=picLayout"&intLayoutNumber
	Set objLayout=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DashboardTemplateFormDialog|DashboardViewTemplateFormDialog").SwfObject(strLocator)
	
	GUI_SwfButton_Click(objLayout)
		
	Set objLayout = Nothing
	
End Function



'This function is used to handle pop-up messages after clicking on Dashboard Tab in Main Menu
'@code
'    Function BIZ_Dashboard_DefaultViewAccessibilityCheck()
'@endcode

Function BIZ_Dashboard_DefaultViewAccessibilityCheck()
	
	If GUI_Object_IsExist ( SwfWindow("swfname:=MainForm").Dialog("text:=Encompass") ) Then
	   GUI_Dialog_Encompass_OK ""
	   GUI_SwfButton_Click SwfWindow("swfname:=DashboardViewTemplateFormDialog").SwfButton("swfname:=btnCancelSelect")
	End If

End Function


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Dashboard\DashBoard.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\DynamicDataManagement\DynamicDataManagement.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup DDM
'List of functions:
'@code
'================== List of BIZ Functions for Field Rule ===================
'  Function BIZ_DDM_CreateNewFieldRule (strRowID)
'  Function BIZ_DDM_Settings_FieldID_SelectionAndValidation(strRuleFieldName, strRowID,strFieldText, strFieldRuleName)
'  Function BIZ_DDM_DeselectAllDataPopulationOptions()
'  Function BIZ_DDM_SelectDataPopulationLoanSave()
'  Function BIZ_DDM_SelectDataPopulationLoanOpen()
'  Function BIZ_DDM_SaveDataPopulationSettings()
'  Function BIZ_DDM_DeactivateFieldRule(strRowID)
'  Function BIZ_DDM_UpdateFieldRule (strRowID)
'  Function BIZ_DDM_FieldRule_SelectChannels(strChannelList)
'  Function BIZ_DDM_DeleteFieldRule(strRuleName)
'  Function BIZ_DDM_ActivateFieldRule(strRowID)
'  Function BIZ_DDM_CreateNewFeeRule_VerifyWarningMessage(strRowID)
'  Function BIZ_DDM_VerifyRuleStatus(StrRuleName,Status)
'  Function BIZ_DDM_CreateActiveFeeRule(strRowID) 
'  Function BIZ_DDM_AddScenarioToRule (strRowID)
'  Function BIZ_DDM_EditScenario (strRowID)
'  Function DDM_ActivateAllFieldScenarios(strRowID)
'  Function DDM_DeactivateAllFieldScenarios(strRowID)
'  Function BIZ_DDM_ActivateSpecificFieldScenario(strRowID)
'  Function BIZ_DDM_DeActivateSpecificFieldScenario(strRowID)
'  Function BIZ_DDM_ExportFeeFieldRule(strRowId,strOption)
'  Function BIZ_DDM_ImportFeeFieldRule(strRowId,strOption,strValidateDep)

'================== List of BIZ Functions for Fee Rule ===================
'Function BIZ_DDM_DeleteNewFeeRule(strRowID, strActRuleName)
'Function BIZ_DDM_CreateNewFeeRule(strRowID)
'Function BIZ_DDM_CreateNewFeeRule_WarningMessage(strRowID, strActRuleName)
'Function BIZ_DDM_FeeRule_CreateRule(strRowID)
'Function BIZ_DDM_FeeRule_EditRule(strRowID)
'Function BIZ_DDM_FeeRule_SetScenarioDetails(strRowID)
'Function BIZ_DDM_FeeRule_SetScenarioValue(strRowID)
'Function BIZ_DDM_FeeRule_SelectChannels(strChannelList)
'Function BIZ_DDM_FeeRule_DeleteRule(strRuleName)
'Function BIZ_DDM_FeeRule_OpenExistingRule(strRuleName)
'Function BIZ_DDM_FeeRule_ActivateRule(strRuleName)
'Function BIZ_DDM_FeeRule_DeactivateRule(strRuleName)
'Function BIZ_DDM_FeeRule_ActivateScenario(strScenarioName)
'Function BIZ_DDM_FeeRule_DeactivateScenario(strScenarioName)
'Function BIZ_DDM_FeeRule_DuplicateScenario(strScenarioName)	
'Function BIZ_DDM_FeeRule_DeleteScenario(strScenarioName)
'Function BIZ_DDM_FeeRule_GetFeeRuleName(strLineGroup)
'Function BIZ_DDM_AddFeeScenarioToRule(strRowID)
'Function BIZ_DDM_ActivateAllFeeRuleScenarios(strRowID)
'Function BIZ_DDM_DeactivateAllFeeRuleScenarios(strRowID)

'================== List of BIZ Functions for DataTable ===================
'Function BIZ_DDM_GetDataTableName(strDataTableName)
'Function BIZ_DDM_CreateNewDataTable(strRowId)
'Function BIZ_DDM_DeleteDataTable(strDataTableName)
'Function BIZ_DDM_DeselectAllDPTCheckboxes()
'Function BIZ_DDM_SelectDataPopulationStopTrigger(strRowID)
'Function BIZ_DDM_ExportDataTable(strRowId)
'Function BIZ_DDM_ImportDataTable(strRowId)

'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Create Fee Rule
'@code
'    BIZ_DDM_CreateNewFeeRule strRowID
'@endcode
'@param strRowID - row id for data

Function BIZ_DDM_CreateNewFeeRule(strRowID)
	FRM_Logger_ReportInfoEvent "Create aNew Rule For DDM","Start Create aNew Rule For DDM----"&strRowID, Null
	
	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
	Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	Set objData           = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
	
	
		boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Line #", FRM_DS_GetValue(objData, "LineGroup"), True, False, False, "Single")
								
		If boolExists Then
			GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonDelete")
			GUI_Dialog_Encompass_Yes ""
			Wait 5						'Wait is used to handle sync issues
			boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Line #", FRM_DS_GetValue(objData, "LineGroup"), True, False, False, "Single")
			FRM_verifyEqual boolExists, False, "Rule Deletion", "After Rule Deletion" 
		End If
		
	
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	boolExists  = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
	
	If Not boolExists Then
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonNew")
		Wait 5					'Wait is used to handle sync issues
		
		If GUI_Object_IsExistX(objRulesPage, 60) Then
		
			If NOT Util_string_IsEmpty(strRuleName) Then
				GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=ruleNameTxtBx"), strRuleName
				FRM_Logger_ReportInfoEvent "Rule Name ","Rule Name Entered----"&strRuleName, Null
			End If
			
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "AutoPopulateValue")) Then
				GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=feeLineTxtBx"), FRM_DS_GetValue(objData, "AutoPopulateValue")
				FRM_Logger_ReportInfoEvent "Rule Name ","Rule Name Entered----"&FRM_DS_GetValue(objData, "AutoPopulateValue"), Null
			End If
			
			GUI_SwfButton_Click objRulesPage.SwfButton("swfname:=okBtn")
			wait 5					'Wait is used to handle sync issues
			If GUI_Object_IsExistX(objRulesEditPage.SwfObject("swfname:=stdButtonSave"), 60) Then
				GUI_swfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")
				
				If GUI_Object_IsExistX(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), 60) Then
					intRows = GUI_List_GetNumberofRows(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"))
					
					If intRows>=0 Then
						strName 			= GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), intRows-1, GUI_List_GetColumnIndexByTitle(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), "Fee Scenario Name"))
						strLineName 		= GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), intRows-1, GUI_List_GetColumnIndexByTitle(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), "Condition"))
						strStatus 			= GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), intRows-1, GUI_List_GetColumnIndexByTitle(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), "Status"))
						strLastModified 	= GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), intRows-1, GUI_List_GetColumnIndexByTitle(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), "Last Modified By"))
						strLastModifiedDate = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), intRows-1, GUI_List_GetColumnIndexByTitle(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), "Last Modified Date & Time"))
						
						If Util_String_IsNotEmpty(strName) then
							FRM_Logger_ReportPassEvent "Fee Scenario Name","Fee Scenario Displayed on the Object---"&strName, Null
						Else
							FRM_Logger_ReportFailEvent "Fee Scenario Name","Fee Scenario not Displayed on the Object---", Null
						End If
						
						If Util_String_IsNotEmpty(strLineName) then
							FRM_Logger_ReportPassEvent "Line Name","Line Name Displayed on the Object---"&strLineName, Null
						Else
							FRM_Logger_ReportFailEvent "Line Name","Line Name not Displayed on the Object---", Null
						End If
						
						If Util_String_IsNotEmpty(strStatus) then
							FRM_Logger_ReportPassEvent "Status","Status Displayed on the Object---"&strStatus, Null
						Else
							FRM_Logger_ReportFailEvent "Status","Status not Displayed on the Object---", Null
						End If
						
						If Util_String_IsNotEmpty(strLastModified) then
							FRM_Logger_ReportPassEvent "Last Modified BY","Last Modified BY Displayed on the Object---"&strLastModified, Null
						Else
							FRM_Logger_ReportFailEvent "Last Modified BY","Last Modified BY not Displayed on the Object---", Null
						End If
						
						If Util_String_IsNotEmpty(strLastModifiedDate) then
							FRM_Logger_ReportPassEvent "Last Modified Date and Time","Last Modified Date and Time Displayed on the Object---"&strLastModifiedDate, Null
						Else
							FRM_Logger_ReportFailEvent "Last Modified Date and Time","Last Modified Date and Time not Displayed on the Object---", Null
						End If
					Else
						FRM_Logger_ReportFailEvent "Fee Scenario Rows","Fee Scenario Rows not Displayed on the Object---", Null
					End If
				Else	
					FRM_Logger_ReportFailEvent "Fee Scenario Object","Fee Scenario Object not Displayed", Null
				End If
			Else
				FRM_Logger_ReportFailEvent "Fee Scenario Save","Fee Scenario Save Object not Displayed", Null
			End If
			
			If GUI_Object_isExistX(objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"), 60) Then
				GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"), "Details"
				GUI_Window_Close objRulesEditPage
			Else
				FRM_Logger_ReportFailEvent "Fee Scenario Detail Tab","Fee Scenario Detail Tab not Displayed", Null
			End If
		Else
			FRM_Logger_ReportFailEvent "Fee Scenario Page","Fee Scenario Page not Displayed", Null
		End If
		GUI_Window_Close objSetupContainer
	Else
		FRM_Logger_ReportFailEvent "Settings Page","Settings Page not Displayed", Null
	End If
	
	BIZ_DDM_CreateNewFeeRule = strRuleName
	
	Set objSetupContainer = Nothing
	Set objRulesPage      = Nothing
	Set objRulesEditPage  = Nothing
	Set objRulesFieldPage = Nothing
	Set objData           = Nothing
	
End Function



'This function is used to Create Fee Ruleand verify Warning message
'@code
'    BIZ_DDM_CreateNewFeeRule_WarningMessage(strRowID, strActRuleName)
'@endcode
'@param strRowID - row id for data
'@param strActRuleName - Rule Name

Function BIZ_DDM_CreateNewFeeRule_WarningMessage(strRowID, strActRuleName)
	FRM_Logger_ReportInfoEvent "Create a New Rule For DDM with Same Field ID","Start Create aNew Rule For DDM with Same Field ID----"&strRowID, Null
	
	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
	Set objRulesEditPage  = objRulesPage.SwfWindow("swfname:=FeeScenarioRules")
	Set objData           = FRM_DS_GetTestData("DDM", "DDM_Fields", strRowID) 
	
	strWarningMessage = "The Fee rule name that you entered already exists.  Please try a different rule name."
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strActRuleName, True, False, False, "Single")
							
	If boolExists Then
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonNew")
		Wait 5				'Wait is used to handle sync issues
		If GUI_Object_IsExistX(objRulesPage, 60) Then
			If NOT Util_string_IsEmpty(strActRuleName) Then
				GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=ruleNameTxtBx"), strActRuleName
				FRM_Logger_ReportInfoEvent "Rule Name ","Rule Name Entered----"&strActRuleName, Null
			End If
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "AutoPopulateValue")) Then
				GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=feeLineTxtBx"), FRM_DS_GetValue(objData, "AutoPopulateValue")
				FRM_Logger_ReportInfoEvent "Rule Name ","Rule Name Entered----"&FRM_DS_GetValue(objData, "AutoPopulateValue"), Null
			End If
			GUI_SwfButton_Click objRulesPage.SwfButton("swfname:=okBtn")
			wait 5			'Wait is used to handle sync issues
			GUI_Dialog_Encompass_OK strWarningMessage
			GUI_Window_Close objRulesPage
		Else
			FRM_Logger_ReportFailEvent "Rules Page","Rules Page not displayed-", Null
		End If
		GUI_Window_Close objSetupContainer
	Else
		FRM_Logger_ReportFailEvent "Settings Page","Settings Page not displayed-", Null
	End If
	
	Set objSetupContainer = Nothing
	Set objRulesPage      = Nothing
	Set objRulesEditPage  = Nothing
	Set objData           = Nothing
	
End Function



'This function is used to Select Fee Ruleand verify Fields
'@code
'    BIZ_DDM_Settings_FieldID_SelectionAndValidation(strRuleFieldName, strRowID,strFieldText, strFieldRuleName)
'@endcode
'@param strRuleFieldName - Rule Field Name
'@param strRowID - row id for data
'@param strFieldText - Search Text for Fields in Value Tab
'@param strActRuleName - Rule Name

Function BIZ_DDM_Settings_FieldID_SelectionAndValidation(strRuleFieldName, strRowID,strFieldText, strFieldRuleName)
	FRM_Logger_ReportInfoEvent "Select And Validation for Field And Value Type","Start Select And Validation for Field And Value Type----"&strFieldText, Null
	
	Dim objSetupContainer, objRulesEditPage, objRulesFieldPage,objData, boolExpFieldExists
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	Set objRulesFieldPage = objRulesEditPage.SwfWindow("swfname:=FeeValueDlg")
	Set objData           = FRM_DS_GetTestData("DDM", "DDM_Fields", strRowID) 
	
	Select Case strFieldText
		Case "Test"
			strFieldVal = FRM_DS_GetValue(objData, "HUD126_Test")
		Case "Field"
			strFieldVal = FRM_DS_GetValue(objData, "HUD126_FieldName")
		Case "Blank"
			strFieldVal = FRM_DS_GetValue(objData, "HUD179_Blank")
		Case "Yes"
			strFieldVal = FRM_DS_GetValue(objData, "HUD179_Yes")
		Case "No"
			strFieldVal = FRM_DS_GetValue(objData, "HUD179_No")
		Case "Lender"
			strFieldVal = FRM_DS_GetValue(objData, "HUD189_Lender")
		Case Else
			strFieldVal = ""
	End Select
	
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strFieldRuleName, True, False, False, "Single")
							
	If boolExists Then
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonEdit")
		Wait 5			'Wait is used to handle sync issues
		
		If GUI_Object_IsExistX(objRulesEditPage, 60) Then
		
			If GUI_Object_isExistX(objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"), 60) Then
				GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"), "Value"	
				If GUI_Object_IsExistX(objRulesEditPage, 60) Then
					boolFieldExists = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvScenarioFeeValues"), objRulesEditPage.SwfScrollBar("swfname:=vPanelScrollBar"), "Field ID", strRuleFieldName, True, False, False, "Single")
					
					If boolFieldExists Then
						GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnSetValue")
						
						If GUI_Object_IsExistX(objRulesFieldPage.SwfEdit("swfname:=fieldIDTextBx"), 60) Then
							GUI_SwfComboBox_Select objRulesFieldPage.swfComboBox("swfname:=valueTypeCombo"), "Specific Value"
							FRM_Logger_ReportInfoEvent "Specific Value Selection","Selected Specific Value", Null
							
							If Util_String_IsNotEmpty(strFieldVal) Then
								
								If GUI_Object_IsExistX(objRulesFieldPage.swfEdit("swfname:=valueText"), 60) Then
									GUI_SwfEdit_Set objRulesFieldPage.swfEdit("swfname:=valueText"), strFieldVal
									FRM_Logger_ReportInfoEvent "Value Field","Value Field Entered----"&strFieldVal, Null
								ElseIf GUI_Object_IsExistX(objRulesFieldPage.SwfComboBox("micclass:=SwfComboBox","index:=0"), 60)  Then
									GUI_SwfComboBox_Select objRulesFieldPage.SwfComboBox("micclass:=SwfComboBox","index:=0"),strFieldVal
									FRM_Logger_ReportInfoEvent "Value Field","Value Field Entered----"&strFieldVal, Null
								End If
								
							ElseIf Util_String_IsEmpty(strFieldVal) Then
							
								If GUI_Object_IsExistX(objRulesFieldPage.swfEdit("swfname:=valueText"), 60) Then
									GUI_SwfEdit_Set objRulesFieldPage.swfEdit("swfname:=valueText"), strFieldVal
									FRM_Logger_ReportInfoEvent "Value Field","Value Field Entered----"&strFieldVal, Null
								ElseIf GUI_Object_IsExistX(objRulesFieldPage.SwfComboBox("micclass:=SwfComboBox","index:=0"), 60)  Then
									objRulesFieldPage.SwfComboBox("micclass:=SwfComboBox","index:=0").Select 0
									FRM_Logger_ReportInfoEvent "Value Field","Value Field Entered----Blank", Null
								End If
								
							End If
							
							GUI_SwfButton_Click objRulesFieldPage.SwfButton("swfname:=ok_btn")
							wait 5			'Wait is used to handle sync issues
							boolExpFieldExists = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvScenarioFeeValues"), objRulesEditPage.SwfScrollBar("swfname:=vPanelScrollBar"), "Value", strFieldVal, True, False, False, "Single")
							FRM_verifyEqual boolExpFieldExists, True, "Value Type Field value", "Validation of Value Type Field value "&strFieldVal
						Else
							FRM_Logger_ReportFailEvent "Field Rule Name Field","Field Rule Name Field not exists", Null
						End If
					End If					
					GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=stdButtonSave")
					GUI_Window_Close objRulesEditPage
				End If
			Else
				FRM_Logger_ReportFailEvent "Fee Detail tab page","Fee details page not exists", Null
			End If
		Else
			FRM_Logger_ReportFailEvent "Fee Page","Fee Page Name Field not exists", Null
		End If
		GUI_Window_Close objSetupContainer
	Else
		FRM_Logger_ReportFailEvent "Settings Page","Settings Page Name Field not exists", Null
	End If
	
	Set objSetupContainer = Nothing
	Set objRulesEditPage  = Nothing
	Set objRulesFieldPage = Nothing
	Set objData			  = Nothing
	
End Function



'This function is used to delete Fee Rule
'@code
'    BIZ_DDM_DeleteNewFeeRule(strRowID, strActRuleName)
'@endcode
'@param strRowID - row id for data
'@param strActRuleName - Rule Name

Function BIZ_DDM_DeleteNewFeeRule(strRowID, strActRuleName)
	FRM_Logger_ReportInfoEvent "Delete a New Rule For DDM with Same Field ID","Start Delete a New Rule For DDM with Same Field ID----"&strRowID, Null
	
	Dim objSetupContainer, objRulesPage, objRulesEditPage, objRulesFieldPage, objData
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
	Set objRulesEditPage  = objRulesPage.SwfWindow("swfname:=FeeScenarioRules")
	Set objRulesFieldPage = objRulesEditPage.SwfWindow("swfname:=FeeValueDlg")
	Set objData           = FRM_DS_GetTestData("DDM", "DDM_Fields", strRowID) 
	
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strActRuleName, True, False, False, "Single")
							
	If boolExists Then
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonDelete")
		GUI_Dialog_Encompass_Yes ""
		Wait 5			'Wait is used to handle sync issues		
		boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strActRuleName, True, False, False, "Single")
		FRM_verifyEqual boolExists, False, "Rule Deletion", "After Rule Deletion" 
		GUI_Window_Close objSetupContainer
	Else
		FRM_Logger_ReportFailEvent "Rule Name","Rule Name not Exists"&strActRuleName, Null
	End If
	
	Set objSetupContainer = Nothing
	Set objRulesPage      = Nothing
	Set objRulesEditPage  = Nothing
	Set objRulesFieldPage = Nothing
	Set objData           = Nothing
	
End Function


'This function is used to Create Field Rule
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_CreateNewFieldRule strRowID
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet DDMFieldRule

Function BIZ_DDM_CreateNewFieldRule (strRowID)

	'Define top level Obj descriptions
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	Set objMilestonesPage = objRulesEditPage.SwfWindow("Swfname:=SelectCurrentRoleForm")
	Set objDataTableList = objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfWindow("swfname:=DataTableList")

	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	strDataTemplate=FRM_DS_GetValue(objData, "DataTemplate")
	
	BIZ_DDM_DeleteFieldRule strRuleName

	'Add New Rule
	GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnNew")
	'Set Rule Name
	GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=ruleNameTxtBx"),strRuleName
	'Check if field rule is to be imported from Data Template
	If Util_String_IsNotEmpty(strDataTemplate) Then		
		Set objImport=objRulesPage.SwfWindow("swfname:=ImportFormatSelector")
		Set objTemplateSelect=objRulesPage.SwfWindow("swfname:=TemplateSelectionDialog")
		Set objLoanProgramList = objTemplateSelect.SwfObject("swfname:=gvDirectory")
		Set scrollbarDataTemplate = objTemplateSelect.SwfScrollBar("swfname:=vPanelScrollBar")
		GUI_SwfObject_Click	objRulesPage.SwfObject("swfname:=stdIconBtnImport")
		GUI_Object_WaitTillExistX objImport,60
		GUI_SwfRadioButton_Click objImport.SwfRadioButton("swfname:=rbtnImportFromDataTemplate")
		GUI_SwfButton_Click	objImport.SwfButton("swfname:=btnContinue")
		'Select folder
		GUI_Object_WaitTillExistX objTemplateSelect,60
		GUI_SwfComboBox_Select objTemplateSelect.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), "Public Data Templates"
		boolExist = GUI_List_ClickRow(objLoanProgramList, scrollbarDataTemplate, "Name", strDataTemplate, True, False, False, "Single")
		If boolExist Then
			FRM_Logger_ReportInfoEvent "Data Template","Data Template :"&strDataTemplate&" selected for rule creation",null
		Else	
			FRM_Logger_ReportFailEvent "Data Template","Data Template :"&strDataTemplate&" could not be selected for rule creation",null
		End If	
		GUI_SwfObject_Click objTemplateSelect.SwfObject("swfname:=selectBtn")
		Set objImport             = Nothing
		Set objTemplateSelect     = Nothing
		Set objLoanProgramList    = Nothing
		Set scrollbarDataTemplate = Nothing		
	End If
	'Get All fields to set
	strFieldsList = FRM_DS_GetValue(objData, "FieldsList")
	If Util_String_IsNotEmpty(strFieldsList) Then	
		'Add all fields to Rule
		arrFieldsList = Split(strFieldsList,"|")	
	
		'Add fields to configure for Rule
		If objRulesPage.SwfButton("swfname:=addBtn").Exist(5) Then
			GUI_SwfButton_Click objRulesPage.SwfButton("swfname:=addBtn")
		Else
			GUI_SwfObject_Click objRulesPage.SwfObject("swfname:=stdButtonNew")
		End If		

		For intFieldCnt=0 To ubound(arrFieldsList)
			strFieldName="swfname:=textBoxID"&intFieldCnt+1
			GUI_SwfEdit_Set objRulesAddFields.SwfEdit(strFieldName), arrFieldsList(intFieldCnt)
		Next
		GUI_SwfButton_Click objRulesAddFields.SwfButton("swfname:=okBtn")
		If GUI_Object_IsExistX(objRulesPage.Dialog("text:=Encompass").WinButton("text:=OK"),10) Then
			GUI_Dialog_Click objRulesPage.Dialog("text:=Encompass").WinButton("text:=OK")
		End If		
	End If	
	'check for Stop automatically populating data 
	strLE=FRM_DS_GetValue(objData, "After initial Loan Estimate is sent")
	If len(trim(strLE))>0 Then
		GUI_SwfCheckbox_Set objRulesPage.SwfCheckBox("swfname:=afterLESentChkBx"),strLE
	End If	
	'check for Stop automatically populating data
	strCond=FRM_DS_GetValue(objData, "When condition below is met")
	If len(trim(strCond))>0 Then
		GUI_SwfCheckbox_Set objRulesPage.SwfCheckBox("swfname:=conditionchkBx"),"ON"
		GUI_SwfEditor_Type objRulesPage.SwfEditor("swfname:=conditionTextBox"),strCond
	End If		
	GUI_SwfButton_Click objRulesPage.SwfButton("swfname:=okBtn")
	If GUI_Object_IsExist (objRulesPage.Dialog("text:=Encompass").WinButton("text:=OK")) then
		GUI_Dialog_Click objRulesPage.Dialog("text:=Encompass").WinButton("text:=OK")
	End if 

	'Set Scenario related Details
	objRulesEditPage.Activate

	'Change Scenario Name
	strScenarioName = FRM_DS_GetValue(objData, "ScenarioName")
	GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=tbxScenarioName"), strScenarioName

	'Select only channels listed in test Data
	 strChannelList = FRM_DS_GetValue(objData, "ChannelList")
	 BIZ_DDM_FieldRule_SelectChannels strChannelList

	'Set Rule Condition if any
	strRuleCondition = FRM_DS_GetValue(objData, "RuleCondition")

	If UTIL_String_IsNotEmpty(strRuleCondition) Then
		
		GUI_SwfRadioButton_Click objRulesEditPage.SwfRadioButton("swfname:=radioCondition")
		arrRuleCondition = Split(strRuleCondition,"|")
		
		If arrRuleCondition(0)="Advanced Conditions" Then
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), "Advanced Conditions"
			GUI_SwfEditor_Type objRulesEditPage.SwfEditor("swfname:=textConditionCode"), arrRuleCondition(1)
		ElseIf arrRuleCondition(0)="Loan Program" Then
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
			GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=textConditionCode"), arrRuleCondition(1)
		ElseIf arrRuleCondition(0)="Current Role" Then	
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
			GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=btnSelect")
			GUI_List_ClickRow objMilestonesPage.SwfObject("swfname:=lsvMilestone"),Null, "Milestones", arrRuleCondition(1), True, False, False, "Double" 
		Else
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboCondition"), arrRuleCondition(1)
		End If

	End If
	Set objOtherDatePage = objRulesEditPage.swfwindow("swfname:=SelectOtherEffectiveDateForm")
    
	'Set Effective Dates for field scenario
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveDate")) Then
		If instr(1,FRM_DS_GetValue(objData, "EffectiveDate"),"Other") > 0 Then
			arrFieldId=split(FRM_DS_GetValue(objData, "EffectiveDate"),"|")
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), arrFieldId(0)
			GUI_SwfEdit_Set objOtherDatePage.SwfEdit("Swfname:=txtFieldID"),arrFieldId(1)
			GUI_SwfButton_Click objOtherDatePage.swfButton("swfname:=btnOK")
		Else
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), FRM_DS_GetValue(objData, "EffectiveDate")			
		End If			
	End If	
	GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=operatorComboBox"), FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")
	
	If FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")= "Range" Then
		GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
		GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=endDateTextbox"), FRM_DS_GetValue(objData, "EffectiveEndDate")
	else
		GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
	End If
	
	'Click on Value tab
	GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Values"	

	'Set values for all fields given in Test Data
	strValueSet = FRM_DS_GetValue(objData, "ValueSet")
	Environment.value("FIELDRULEVALUESET")=strValueSet

	If UTIL_String_IsNotEmpty(strValueSet) Then
		arrValueSet = Split(strValueSet,"|")
		For intValcnt=0 to ubound(arrValueSet)
			arrFieldValSet = Split(arrValueSet(intValcnt),";")			
				boolExists = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvScenarioFieldValues"), objRulesEditPage.SwfScrollBar("swfname:=vPanelScrollBar"), "Field ID", arrFieldValSet(0), True, False, False, "Single")			
				GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnSetValue")
				GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=valueTypeCombo"),arrFieldValSet(1)
				Select Case lcase(arrFieldValSet(1))
		  
					Case "no value set","clear value in loan file","use calculated value"
							
					Case "specific value"
						If GUI_Object_IsExistX(objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEdit("swfname:=valueText"),2) Then
							GUI_SwfEdit_Set objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEdit("swfname:=valueText"), arrFieldValSet(2)
						else
							GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").swfcombobox("swfname path:=;panel2;groupBox1;FeeValueDlg"),arrFieldValSet(2)
						End If
					Case "calculation"			 
						GUI_SwfEditor_Type objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEditor("swfname:=valueText"), arrFieldValSet(2)
					Case "table"							
						GUI_List_ClickRow objDataTableList.SwfObject("swfname:=listViewOptions"), objDataTableList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name",arrFieldValSet(2), True, False, False, "Single"
						objDataTableList.SwfButton("swfname:=btnSelect").Object.PerformClick
						If objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").Exist Then
							GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb"),arrFieldValSet(3)	
							If objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb").GetROProperty("text")<>arrFieldValSet(3)	Then
								'Verify whether the value has been set correctly
								objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb").Select arrFieldValSet(3)
							End If							
						Else
							FRM_Logger_ReportInfoEvent "Set Field Value dialog box", "Set Field Value dialog box does not appear", Null
						End If							
						
				End Select			
						
				GUI_SwfButton_Click objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfButton("swfname:=ok_btn")				
		Next
	End If

	'Save the rule along with scenario data
	GUI_SwfButton_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")
	'GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Details"
	GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")


	'Check whether rule is displayed on Rule List on Fields rule home screen
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")

	If boolExists Then
		FRM_Logger_ReportPassEvent "Create New Field Rule", "New Field Rule is successfully created with name: "&strRuleName,Null
	else
		FRM_Logger_ReportFailEvent "Create New Field Rule", "New Field Rule is not created with name: "&strRuleName,Null
	End If
	
	Set objSetupContainer= nothing
	Set objRulesPage= nothing
	Set objRulesAddFields= nothing
	Set objRulesEditPage= nothing
	Set objMilestonesPage= nothing
	Set objDataTableList= Nothing
	Set objOtherDatePage = Nothing
End Function

'This function is used to deselect all data population options
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_DeselectAllDataPopulationOptions 
'@endcode

Function BIZ_DDM_DeselectAllDataPopulationOptions()
	
	Dim objSetupContainer, objCheckBox, objDesc, objDialogOK
	FRM_Logger_ReportInfoEvent "Data Population Timing options", "Uncheck all data populations options", Null
	'Set Setting page level Object
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDialogOK         =   objSetupContainer.Dialog("text:=Encompass").WinButton("text:=OK")
	Set objDesc = Description.Create
	objDesc("micclass").value="SwfCheckBox"
	
	Set objCheckBox=objSetupContainer.ChildObjects(objDesc)
	
	For i=0 to objCheckBox.count -1
		GUI_SwfCheckbox_Set objCheckBox.item(i),"OFF"
		IF GUI_Object_IsExistX(objDialogOK, 3) Then
			GUI_Dialog_Encompass_OKX 2, ""
	End IF		
	Next
	
	
	Set objSetupContainer = Nothing
	Set objCheckBox = Nothing
	Set objDesc = Nothing
	Set objDialogOK = Nothing
End Function


'This function is used to select data population option as Loan Save
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_SelectDataPopulationLoanSave 
'@endcode

Function BIZ_DDM_SelectDataPopulationLoanSave()
	'Set setting page level object
	FRM_Logger_ReportInfoEvent "Data Population Timing options - Loan Save", "Check Loan Save option", Null
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")	
	'Set loan save as ON
	GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=loanSave"), "ON"
	Set objSetupContainer = nothing

End Function

'This function is used to select data population option as Loan Open
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_SelectDataPopulationLoanOpen 
'@endcode

Function BIZ_DDM_SelectDataPopulationLoanOpen()
	
	FRM_Logger_ReportInfoEvent "Data Population Timing options - Loan Open", "Check Loan Open option", Null
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")	
	'Set loan Open as ON
	GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=loanOpen"), "ON"
	Set objSetupContainer = nothing

End Function


'This function is used to save data population timings options
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_SaveDataPopulationSettings 
'@endcode

Function BIZ_DDM_SaveDataPopulationSettings()
	
	FRM_Logger_ReportInfoEvent "Data Population Timing options - Save Button", "Click Save Button", Null
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")	
	'Click Save Button
	strSaveButtonStatus= GUI_Object_GetPropertyValue(objSetupContainer.SwfObject("swfname:=stdIconBtnSave"),"enabled")
	if strSaveButtonStatus="True" then
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnSave")
	end if 	
	Set objSetupContainer = nothing

End Function

'This function is used to deactivate Field rule by given rule name 
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_DeactivateFieldRule(strRuleName)
'@endcode
'@param strRuleName Rule name to make Inactive
Function BIZ_DDM_DeactivateFieldRule(strRuleName)
	'Set reusable objects
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	
	'Get Rule related test data
	'Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	'strRuleName = FRM_DS_GetValue(objData, "RuleName")
	
	'Check if rule exists by getting row index
	intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strRuleName)
	If intRuleRownNum=-1 Then
		FRM_Logger_ReportInfoEvent "Deactivate Field Rule:"&strRuleName, "Rule does not exists",Null
	Else
		strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=listViewOptions"),intRuleRownNum,"Status")
		'If rule status is active, Open in edit mode and make all scenarios Inactive
		If strRuleStatus = "Active" Then
			boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
			
			intScenarioCount = GUI_List_GetNumberofRows(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"))
			'Check for Active scenarios and change status to Inactive
			For intscenrows = 0 To intScenarioCount-1
				strScenarioStatus = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intscenrows,"Status")
				If strScenarioStatus="Active" Then
					GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intscenrows, True, False, False, "Single"
					GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
				End If
			Next			
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")		
			wait g_ShortWaitSmall			
			
			'Check the updated rule status and report
			intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strRuleName)
			strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=listViewOptions"),intRuleRownNum,"Status")
			If strRuleStatus="Inactive" Then
				FRM_Logger_ReportInfoEvent "Deactivate Field Rule:"&strRuleName, "Rule status now changed as: "&strRuleStatus,Null
			Else
				FRM_Logger_ReportFailEvent "Deactivate Field Rule:"&strRuleName, "Rule status remains as: "&strRuleStatus,Null
			End If
		Else
			'Report if rule is already Inactive
			FRM_Logger_ReportInfoEvent "Deactivate Field Rule:"&strRuleName, "Rule status is already: "&strRuleStatus,Null
		End If
	End If
	
	Set objSetupContainer= nothing
	Set objRulesPage= nothing
	Set objRulesAddFields= nothing
	Set objRulesEditPage= nothing
	
End Function


'This function is used to update Field Rule
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_UpdateFieldRule strRowID
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet DDMFieldRule

Function BIZ_DDM_UpdateFieldRule (strRowID)

	'Define top level Obj descriptions
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	Set objMilestonesPage = objRulesEditPage.SwfWindow("Swfname:=SelectCurrentRoleForm")
	Set objDataTableList = objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfWindow("swfname:=DataTableList")
	
	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
		
	'Update rule if already exists
	If boolExists Then
		boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
		'Update Scenario related Details
		objRulesEditPage.Activate
	
		'Update Scenario Name	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ScenarioName")) Then
			GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=tbxScenarioName"), FRM_DS_GetValue(objData, "ScenarioName")
		End If
		
		'Update Channel Details	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ChannelList")) Then
			BIZ_DDM_FieldRule_SelectChannels FRM_DS_GetValue(objData, "ChannelList")
		End If
				
			strRuleCondition = FRM_DS_GetValue(objData, "RuleCondition")
		
			If UTIL_String_IsNotEmpty(strRuleCondition) Then
				
				GUI_SwfRadioButton_Click objRulesEditPage.SwfRadioButton("swfname:=radioCondition")
				arrRuleCondition = Split(strRuleCondition,"|")
				
				If arrRuleCondition(0)="Advanced Conditions" Then
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), "Advanced Conditions"
					GUI_SwfEditor_Type objRulesEditPage.SwfEditor("swfname:=textConditionCode"), arrRuleCondition(1)
				ElseIf arrRuleCondition(0)="Loan Program" Then
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=textConditionCode"), arrRuleCondition(1)
				ElseIf arrRuleCondition(0)="Current Role" Then	
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=btnSelect")
					GUI_List_ClickRow objMilestonesPage.SwfObject("swfname:=lsvMilestone"),Null, "Milestones", arrRuleCondition(1), True, False, False, "Double" 
				Else
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboCondition"), arrRuleCondition(1)
				End If
		
			End If
			
		
		'Set Effective Dates for field scenario
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveDate")) Then
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), FRM_DS_GetValue(objData, "EffectiveDate")
		End if 
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")) Then
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=operatorComboBox"), FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")
		
			If FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")= "Range" Then
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=endDateTextbox"), FRM_DS_GetValue(objData, "EffectiveEndDate")
			else
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
			End If
		End if 
			
		'Click on Value tab
		GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Values"
				
		strValueSet = FRM_DS_GetValue(objData, "ValueSet")
		Environment.value("FIELDRULEVALUESET")=strValueSet
		If UTIL_String_IsNotEmpty(strValueSet) Then			
			arrValueSet = Split(strValueSet,"|")
			For intValcnt=0 to ubound(arrValueSet)
			arrFieldValSet = Split(arrValueSet(intValcnt),";")			
			boolExists = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvScenarioFieldValues"), objRulesEditPage.SwfScrollBar("swfname:=vPanelScrollBar"), "Field ID", arrFieldValSet(0), True, False, False, "Single")
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnSetValue")
			GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=valueTypeCombo"),arrFieldValSet(1)
			Select Case lcase(arrFieldValSet(1))		  
				Case "no value set","clear value in loan file","use calculated value"
						
				Case "specific value"
					If GUI_Object_IsExist(objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEdit("swfname:=valueText")) Then
						GUI_SwfEdit_Set objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEdit("swfname:=valueText"), arrFieldValSet(2)
					else
						GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").swfcombobox("swfname path:=;panel2;groupBox1;FeeValueDlg"),arrFieldValSet(2)
					End If
				Case "calculation"			 
					GUI_SwfEditor_Type objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEditor("swfname:=valueText"), arrFieldValSet(2)
				Case "table"							
					GUI_List_ClickRow objDataTableList.SwfObject("swfname:=listViewOptions"), objDataTableList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name",arrFieldValSet(2), True, False, False, "Single"
					objDataTableList.SwfButton("swfname:=btnSelect").Object.PerformClick
					If objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").Exist Then
						GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb"),arrFieldValSet(3)	
						If objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb").GetROProperty("text")<>arrFieldValSet(3)	Then
							'Verify whether the value has been set correctly
							objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb").Select arrFieldValSet(3)
						End If							
					Else
						FRM_Logger_ReportInfoEvent "Set Field Value dialog box", "Set Field Value dialog box does not appear", Null
					End If
			End Select											
			GUI_SwfButton_Click objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfButton("swfname:=ok_btn")				
			Next
		End If
		
		'Save the rule along with scenario data
		GUI_SwfButton_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")		
		GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")
	
	
		'Check whether rule is displayed on Rule List on Fields rule home screen
		boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
	
		If boolExists Then
			FRM_Logger_ReportPassEvent "Update Field Rule", "Rule is updated with details given: "&strRuleName,Null
		else
			FRM_Logger_ReportFailEvent "Update Field Rule", "Rule is missing on Field Rule List"&strRuleName,Null
		End If

	Else
		FRM_Logger_ReportFailEvent "Update Field Rule:"&strRuleName,"Rule Name not Exists",Null
	End If

	Set objSetupContainer= nothing
	Set objRulesPage= nothing
	Set objRulesAddFields= nothing
	Set objRulesEditPage= nothing
	Set objMilestonesPage= nothing
	Set objDataTableList= Nothing
End Function


'This function is used to deselect exisitng and then select channels given in test data
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_FieldRule_SelectChannels(strChannelList)
'@endcode
'@param strChannelList Channels names separated by "|" symbol

Function BIZ_DDM_FieldRule_SelectChannels(strChannelList)
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	
	'Deselect All Channels
	For intchancnt=0 To 4 
		objRulesEditPage.SwfList("swfname:=chkListChannels").Object.SetItemChecked intchancnt,false
	Next
	
	'Select Channels Given in test Data
	arrChannelList = Split(strChannelList,"|")

	For intChnlCnt=0 To ubound(arrChannelList)
		GUI_List_Select objRulesEditPage.SwfList("swfname:=chkListChannels"),arrChannelList(intChnlCnt)	
	Next	
	
	Set objSetupContainer= nothing
	Set objRulesPage= nothing
	Set objRulesAddFields= nothing
	Set objRulesEditPage= nothing
	
End Function


'This function is used to delete Field Rule
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_DeleteFieldRule(strRuleName)
'@endcode
'@param strRuleName Field rune name to Delete

Function BIZ_DDM_DeleteFieldRule(strRuleName)
	'Define top level Obj descriptions
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	
	'Deactivate Rule Before Delete	
	BIZ_DDM_DeactivateFieldRule strRuleName
	
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")

	'Delete rule if already exists
	If boolExists Then
			GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")
			
			If GUI_Object_IsExistX(objSetupContainer.Dialog("text:=Encompass").WinButton("text:=OK"),5) Then
				GUI_Dialog_Encompass_OK "OK"				
				boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
	
				intRownNum = GUI_List_GetRowCount(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),"Status","Active")
				If intRownNum>0 Then
					For i= 0 To intRownNum -1
						GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i, True, False, False, "Single"
						GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
						FRM_Logger_ReportInfoEvent "Dectivate existing Scenario:"&strScenarioName, " Scenario status now changed as Inactive",Null
					Next			
				End If
			
				GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")
				
				GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single"
				GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")
				
				'GUI_Dialog_Encompass_Yes ""
				GUI_Dialog_Encompass_Click "4","Are you sure","Yes"
'				if GUI_List_TextExists(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strRuleName) Then
'					FRM_Logger_ReportInfoEvent "Delete Field Rule if Exists", "Rule is not deleted",Null
'				end if	
				
			else 
				GUI_Dialog_Encompass_Click "4","Are you sure","Yes"
				'GUI_Dialog_Encompass_Yes ""
'				if GUI_List_TextExists(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strRuleName) Then
'					FRM_Logger_ReportInfoEvent "Delete Field Rule if Exists", "Rule is not deleted",Null
'				end if	
			End if
	End If
	
	Set objSetupContainer= nothing
	Set objRulesPage= nothing
	Set objRulesAddFields= nothing
	Set objRulesEditPage= nothing
	
End Function


'This function is used to activate Field rule by given rule name 
'Created by - Shridhar Sawant
'@code
'    BIZ_DDM_ActivateFieldRule(strRowID)
'@endcode
'@param strRowID Rule name to make Active

Function BIZ_DDM_ActivateFieldRule(strRowID)
	'Set reusable objects
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	
	'Check if rule exists by getting row index
	intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strRuleName)
	If intRuleRownNum=-1 Then
		FRM_Logger_ReportInfoEvent "Deactivate Field Rule:"&strRuleName, " Rule name does not exists",Null
	else
		strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=listViewOptions"),intRuleRownNum,"Status")
		'If rule status is active, Open in edit mode and make all scenarios Inactive
		If strRuleStatus = "Inactive" Then
			boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
			
			intScenarioCount = GUI_List_GetNumberofRows(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"))
			'Check for Active scenarios and change status to Inactive
			For intscenrows = 0 To intScenarioCount-1
				strScenarioStatus = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intscenrows,"Status")
				If strScenarioStatus="Inactive" Then
					GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intscenrows, True, False, False, "Single"
					GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
				End If
			Next
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")
			
			wait(2) 'wait to handle sync issue
			
			'Check the updated rule status and report
			intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strRuleName)
			strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=listViewOptions"),intRuleRownNum,"Status")
			If strRuleStatus="Active" Then
				FRM_Logger_ReportInfoEvent "Activate Field Rule:"&strRuleName, " Rule status now changed as: "&strRuleStatus,Null
			else
				FRM_Logger_ReportFailEvent "Activate Field Rule:"&strRuleName, " Rule status remains as: "&strRuleStatus,Null
			End If
		else
			'Report if rule is already Inactive
			FRM_Logger_ReportInfoEvent "Activate Field Rule:"&strRuleName, " Rule status is Already: "&strRuleStatus,Null
		End If
	End If
	
	Set objSetupContainer= nothing
	Set objRulesPage= nothing
	Set objRulesAddFields= nothing
	Set objRulesEditPage= nothing
	
End Function



'@}


'This function is used to Create New Fee Rule
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_CreateRule(strRowID)
'@endcode
'@param strRowID - Unique ID to get data from XL sheet

Function BIZ_DDM_FeeRule_CreateRule(strRowID)  

	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
    Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
    Set objData           = FRM_DS_GetTestData("DDM", "FeeRule", strRowID)
    
    '======================= Get Fee Rule Name ============  
	strLineGroup=FRM_DS_GetValue(objData, "LineGroup")	
	strRuleName=BIZ_DDM_FeeRule_GetFeeRuleName(strLineGroup)
    
    '===================== Delete Fee Rule if any rule exists with same Line Group ================
	If NOT Util_string_IsEmpty (strRuleName) Then
   		BIZ_DDM_FeeRule_DeleteRule(strRuleName)
   	End If
   	
   	'===================== Delete Fee Rule if any rule exists with same rule name ================
   	strRuleName=FRM_DS_GetValue(objData, "FeeRuleName")
   	If NOT Util_string_IsEmpty (strRuleName) Then    	
        BIZ_DDM_FeeRule_DeleteRule(strRuleName)    
    End If
    
    '======================== Click on New(+) Icon and Start creating new Fee Rule==============  
    FRM_Logger_ReportInfoEvent "Create a New Fee Rule","Start creating new Fee Rule", Null
    GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonNew")             
    
	If NOT Util_string_IsEmpty (strRuleName) Then    	
        GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=ruleNameTxtBx"), FRM_DS_GetValue(objData, "FeeRuleName")        
    End If
            
    If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "LineGroup")) Then    	
        GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=feeLineTxtBx"), FRM_DS_GetValue(objData, "LineGroup")        
    End If
	'check for Stop automatically populating data 
	strLE=FRM_DS_GetValue(objData, "After initial Loan Estimate is sent")
	If len(trim(strLE))>0 Then
		GUI_SwfCheckbox_Set objRulesPage.SwfCheckBox("swfname:=afterLESentChkBx"),strLE
	End If	
	'check for Stop automatically populating data
	strCond=FRM_DS_GetValue(objData, "When condition below is met")
	If len(trim(strCond))>0 Then
		GUI_SwfCheckbox_Set objRulesPage.SwfCheckBox("swfname:=conditionchkBx"),"ON"
		GUI_SwfEditor_Type objRulesPage.SwfEditor("swfname:=conditionTextBox"),strCond
	End If		
	GUI_SwfButton_Click objRulesPage.SwfButton("swfname:=okBtn")            
		
	Set objDialogOK         =   objRulesPage.Dialog("text:=Encompass").WinButton("text:=OK")
	IF GUI_Object_IsExistX(objDialogOK, 3) Then
	 	GUI_Dialog_Encompass_OK "" 
		Set objDialogOK=Nothing
	End if     
	'===================Multiple Scenarios condition===============================
    If NOT Util_string_IsEmpty (FRM_DS_GetValue(objData, "MultiScenariosRowID")) Then
    	arrScenarios=Split(FRM_DS_GetValue(objData, "MultiScenariosRowID"),"|")
    	intScenarios=ubound(arrScenarios)+1
    Else
    	intScenarios=0
    End If
    
    intCount=0
    
    Do
		
		'====================== set scenario details =================
		BIZ_DDM_FeeRule_SetScenarioDetails strRowID
		
		'====================== set scenario values =================
	    BIZ_DDM_FeeRule_SetScenarioValue strRowID
	   
	   '================Click on Deatils tab and New Scenario button if need to create multiple scenarion==========
	   If intCount<intScenarios Then
			GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Details"  
			GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonNew")
			
			strRowID=arrScenarios(intCount)
	    End If   
	  
		intCount=intCount+1 
    Loop while (intCount<=intScenarios)
  
    '====================== Close Scenario winodow =================
    GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnClose")
    
    '======================== Check whether rule already exists with same name ================
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")

	If boolExists Then
		FRM_Logger_ReportPassEvent "Verify newly created Fee rule", "New Fee Rule has created with name: "&strRuleName,Null
		BIZ_DDM_FeeRule_CreateRule=strRuleName
	Else
		FRM_Logger_ReportFailEvent "Verify newly created Fee rule","New Fee Rule has not created with name: "&strRuleName,Null
	End If
	
   	Set objSetupContainer = Nothing
    Set objRulesPage      = Nothing
    Set objRulesEditPage  = Nothing
    Set objData           = Nothing
End Function




'This function is used to Edit Fee Rule
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_EditRule(strRowID)
'@endcode
'@param strRowID - Unique ID to get data from XL sheet

Function BIZ_DDM_FeeRule_EditRule(strRowID)

	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
    Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
    Set objData           = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
   
	FRM_Logger_ReportInfoEvent "Edit existing Fee Rule","Start edit existing Fee Rule", Null
	
	'======================= Get Fee Rule Name ============
	strLineGroup=FRM_DS_GetValue(objData, "LineGroup")	
	strRuleName=BIZ_DDM_FeeRule_GetFeeRuleName(strLineGroup)
    
    '======================== Verifying Rule Exist OR Not ==========================
    boolExists=GUI_List_ClickRow (objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
	
	If boolExists Then
		'==================== Open Senario Window by double clicking ==========================
		GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double"		
			
		'==================== select scenario to edit ==========================
		intScenarioCount = GUI_List_GetNumberofRows(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"))	
		strFeeScenarioName=FRM_DS_GetValue(objData, "FeeScenarioName")	
		
		For intRow = 0 To intScenarioCount-1			
			strScenarioName = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRow,"Fee Scenario Name")			
			If Trim(strScenarioName)=strFeeScenarioName Then	
				
				'==================== set scenario details ==========================				
				GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Fee Scenario Name", FRM_DS_GetValue(objData, "FeeScenarioName"), True, False, False, "Single"						
				BIZ_DDM_FeeRule_SetScenarioDetails strRowID	
				
				'====================== set scenario values =================
				If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "FieldID")) Then
			        BIZ_DDM_FeeRule_SetScenarioValue strRowID
			    End If
			    
			    Exit For
			End If
		Next	
	Else
		FRM_Logger_ReportFailEvent "Edit Fee Rule","Fee Rule not Exists with name:"&strRuleName,Null
	End If
	
	'====================== Close Scenario winodow =================
    GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnClose")
    
    Set objSetupContainer = Nothing
    Set objRulesPage      = Nothing
    Set objRulesEditPage  = Nothing
    Set objData           = Nothing
	
End Function



'This function is used to Set Scenario Deails
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_SetScenarioDetails(strRowID)
'@endcode
'@param strRowID - Unique ID to get data from XL sheet

Function BIZ_DDM_FeeRule_SetScenarioDetails(strRowID)
	
	Dim objSetupContainer, objRulesEditPage, objData, strRuleName, boolExists
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")    
    Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
    Set objMilestonesPage = objRulesEditPage.SwfWindow("Swfname:=SelectCurrentRoleForm")
    Set objData           = FRM_DS_GetTestData("DDM", "FeeRule", strRowID)
    Set objOtherDatePage = objRulesEditPage.swfwindow("swfname:=SelectOtherEffectiveDateForm")
    Set objFiledSelectionPage = objOtherDatePage.SwfWindow("Swfname:=ReportFieldSelector")
    
	
	FRM_Logger_ReportInfoEvent "Set Scenario details for Fee Rule","Start set scenario details for Fee Rule", Null
	
	'====================== Enter Scenario Name =========================  
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeScenarioName")) Then
		GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=tbxScenarioName"), FRM_DS_GetValue(objData, "FeeScenarioName")
	End If
	
	'====================== Select Channels ========================= 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channels")) Then
		BIZ_DDM_FeeRule_SelectChannels(FRM_DS_GetValue(objData, "Channels")) 
	End If	
	
	'====================== Select Conditions ========================= 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionType")) Then
		GUI_SwfRadioButton_Click objRulesEditPage.SwfRadioButton("swfname:=radioCondition")
		GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "ConditionType")
		
		Select Case lcase(FRM_DS_GetValue(objData, "ConditionType"))			
			
			Case "loan purpose","doc type","loan type","loan status","property state","property type","occupancy","rate" 
				GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "ConditionValue")
				
			Case "loan program" 
				GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=textConditionCode"), FRM_DS_GetValue(objData, "ConditionValue")
						
			Case "current role" 
				GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=btnSelect")
				GUI_List_ClickRow objMilestonesPage.SwfObject("swfname:=lsvMilestone"),Null, "Milestones", FRM_DS_GetValue(objData, "CurrentRole"), True, False, False, "Double" 
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Milestone")) Then
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Milestone")				
				End If
		   	Case "advanced conditions"			
				GUI_SwfEdit_Type objRulesEditPage.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData, "ConditionValue") 		
		End Select
	
	End If	
    
    '====================== Effective Date for the Fee Scenario =========================  
  	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveDate")) Then
		If instr(1,FRM_DS_GetValue(objData, "EffectiveDate"),"Other") > 0 Then
			arrFieldId=split(FRM_DS_GetValue(objData, "EffectiveDate"),"|")			
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), arrFieldId(0)
			GUI_SwfEdit_Set objOtherDatePage.SwfEdit("swfname:=txtFieldID"),arrFieldId(1)
			GUI_SwfButton_Click objOtherDatePage.SwfButton("swfname:=btnOK")
		else
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), FRM_DS_GetValue(objData, "EffectiveDate")			
		End If			
	End if

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveCriteria")) Then
    	GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=operatorComboBox"),FRM_DS_GetValue(objData, "EffectiveCriteria")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveStartDate")) Then
    	If FRM_DS_GetValue(objData, "EffectiveCriteria")= "Range" Then
    		GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
			GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=endDateTextbox"), FRM_DS_GetValue(objData, "EffectiveEndDate")		
		Else
   			GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=startDateTextbox "),FRM_DS_GetValue(objData, "EffectiveStartDate")
   		End If
   	End If
   	
   	'====================== Save Scenario =========================  
    GUI_swfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")    
    
    Set objSetupContainer = Nothing   
    Set objRulesEditPage  = Nothing
    Set objData           = Nothing
    Set objMilestonesPage = Nothing
    Set objOtherDatePage = Nothing
End Function






'This function is used to Set Scenario Value
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_SetScenarioValue(strRowID)
'@endcode
'@param strRowID - Unique ID to get data from XL sheet

Function BIZ_DDM_FeeRule_SetScenarioValue(strRowID)

	Dim objSetupContainer, objRulesEditPage, objData, objFieldValue, boolExists
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
    Set objFieldValue  	  = objRulesEditPage.SwfWindow("swfname:=FeeValueDlg")
	Set objListOfTables	   =objFieldValue.SwfWindow("swfname:=DataTableList")
    Set objData           = FRM_DS_GetTestData("DDM", "FeeRule", strRowID)
    
    FRM_Logger_ReportInfoEvent "Set Scenario field values for Fee Rule","Start setting scenario field values for Fee Rule", Null

	'========================Click on Value tab ==========
	GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Values"
	
	'========================Click on Clear Values button to clear values if any ==========
	intFieldsCount = GUI_List_GetNumberofRows(objRulesEditPage.SwfObject("swfname:=gvScenarioFeeValues"))			
	For intRow = 0 To intFieldsCount-1
		strValue = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvScenarioFeeValues"),intRow,"Value")
		
		If NOT Util_string_IsEmpty (strValue) Then
			GUI_List_ClickRow objRulesEditPage.SwfObject("swfname:=gvScenarioFeeValues"),objRulesEditPage.SwfScrollBar("swfname:=vPanelScrollBar"),"Value", strValue, True, False,False, "Single"  
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnClearValue")
		End If
		
	Next
			
	'========================Get FieldID, ValueType,Value from XL sheet ==========
	arrFields = Split(FRM_DS_GetValue(objData, "FieldID"),"|")
	arrValueType = Split(FRM_DS_GetValue(objData, "ValueType"),"|")
	arrValue = Split(FRM_DS_GetValue(objData, "Value"),"|")
	
	For intIteration=0 to ubound(arrFields)
		'================= Set Field Value if Exist===========================
		boolExists = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvScenarioFeeValues"), objRulesEditPage.SwfScrollBar("swfname:=vPanelScrollBar"), "Field ID", arrFields(intIteration), True, False, False, "Single")					
		If boolExists Then			
			'=================Select Value Type ========================
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnSetValue")
			objFieldValue.SwfComboBox("swfname:=valueTypeCombo").highlight
			GUI_SwfComboBox_Select objFieldValue.SwfComboBox("swfname:=valueTypeCombo"),arrValueType(intIteration)
			
			'=================Set Value ========================
			Select Case lcase(arrValueType(intIteration))
		  
				Case "no value set","clear value in loan file"
							
				Case "specific value"
					Set objCombo=Description.Create
					objCombo("micclass").Value="SwfComboBox"
					
					If objFieldValue.ChildObjects(objCombo).count>1 Then					
						GUI_SwfComboBox_Select objFieldValue.SwfComboBox("swfname:="&""), arrValue(intIteration)
					Else
						GUI_SwfEdit_Set objFieldValue.SwfEdit("swfname:=valueText"), arrValue(intIteration)					
					End If
					
				Case "calculation"	
					objFieldValue.SwfEditor("swfname:=valueText").highlight
					GUI_SwfEditor_Type objFieldValue.SwfEditor("swfname:=valueText"), arrValue(intIteration)
					
				Case "table"
					If Instr(arrValue(intIteration),";") > 0 Then
						arrTable=Split(arrValue(intIteration),";")
						strTableName=Trim(arrTable(0))
						strFieldValue=arrTable(1)
					Else
						strTableName=arrValue(intIteration)
					End If	
					GUI_List_ClickRow objListOfTables.SwfObject("swfname:=listViewOptions"), objListOfTables.SwfScrollBar("swfname:=vPanelScrollBar"), "Name",strTableName, True, False, False, "Single"		
					objListOfTables.SwfButton("swfname:=btnSelect").Object.PerformClick
					wait 2
					If objFieldValue.SwfComboBox("swfname:=outputCmb").Exist(3) Then
						GUI_SwfComboBox_Select objFieldValue.SwfComboBox("swfname:=outputCmb"),strFieldValue
						If objFieldValue.SwfComboBox("swfname:=outputCmb").GetROProperty("text")<>strFieldValue	Then
							'Verify whether the value has been set correctly
							objFieldValue.SwfComboBox("swfname:=outputCmb").Select strFieldValue
						End If
					Else
						FRM_Logger_ReportInfoEvent "Set Field Value dialog box", "Set Field Value dialog box does not appear", Null
					End If						
			End Select				
			'================Click on OK Button	==================
			GUI_SwfButton_Click objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfButton("swfname:=ok_btn")
			
			'================Click on "Seller Obligated" dialog box==================
			If GUI_Object_IsExistX(objRulesEditPage.Dialog("text:=Encompass"),5) Then
				GUI_DialogObject_Encompass_Click objRulesEditPage.Dialog("text:=Encompass"),2,"Setting a value for","OK"
			End If
			If GUI_Object_IsExistX(objFieldValue.dialog("text:=Encompass"),5) Then
    				GUI_Dialog_Encompass_Yes ""
   			End If			
		Else
			FRM_Logger_ReportFailEvent "Set Field Value if exists","Field ID not Exists",Null
		End If
	Next
	
	'====================== Save Scenario =========================  
    GUI_swfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")    
	
	
	 '====================== Activate Scenario =========================
	strActivateValue=lcase(FRM_DS_GetValue(objData, "Activate"))
	If UTIL_String_IsNotEmpty(strActivateValue) Then
		If lcase(strActivateValue)="yes" Then
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
		End If
	End If
    
	Set objSetupContainer = Nothing
    Set objFieldValue     = Nothing
    Set objRulesEditPage  = Nothing
	Set objListOfTables	  = Nothing
    Set objData           = Nothing	
End Function



'This function is used to deselect exisitng and then select channels given in test data
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_SelectChannels(strChannelList)
'@endcode
'@param strChannelList Channels names separated by "|" symbol

Function BIZ_DDM_FeeRule_SelectChannels(strChannelList)
	
	Dim objSetupContainer,objRulesEditPage
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	 
	'======================= Deselect all channels ===============================
	intChannels=objRulesEditPage.SwfList("swfname:=chkListChannels").GetItemsCount
	For intIndex = 0 To intChannels-1
		objRulesEditPage.SwfList("swfname:=chkListChannels").Object.SetItemChecked intIndex,False
	Next
	
	'======================= select given channels ===============================
	arrChannelList = Split(strChannelList ,"|")
	For intChnlCnt=0 To ubound(arrChannelList)
		GUI_List_Select objRulesEditPage.SwfList("swfname:=chkListChannels"),arrChannelList(intChnlCnt)	
	Next
		
	Set objSetupContainer = Nothing
	Set objRulesEditPage  = Nothing	
End Function



'This function is used to Delete Rule
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_DeleteRule(strRuleName)
'@endcode
'@param (strRuleName) - Unique ID to get data from XL sheet

Function BIZ_DDM_FeeRule_DeleteRule(strRuleName)

	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, boolExists
	  
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
    Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
       
    FRM_Logger_ReportInfoEvent "Delete existing Fee Rule","Start deleting existing Fee Rule "&strRuleName, Null
    
    '====================== Check whether rule already exists with same name ================
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")    
    If boolExists Then	
		intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),"Name",strRuleName)
		strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),intRuleRownNum,"Status")
		
		'=============== Deactivate Rule before Delete If Rule status is active==========
		If Trim(strRuleStatus)="Active" Then		
			BIZ_DDM_FeeRule_DeactivateRule strRuleName
		End If
	
		'=============== Delete Inactive Fee Rule ==========
		GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single"
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonDelete")
		'GUI_Dialog_Encompass_Yes ""
		GUI_Dialog_Encompass_Click "4","Are you sure","Yes"
		
		'================ Verifying Deleted Rule===============
'		boolExist = GUI_List_ClickRow (objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
'		If Not(boolExist) Then 
'			FRM_Logger_ReportInfoEvent "Delete existing rule", "Rule is deleted with name: " & strRuleName, null
'		Else
'			FRM_Logger_ReportFailEvent "Delete existing rule", "Rule is not deleted with name: " & strRuleName, null		
'		End If					

	End If
       	
	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesEditPage= Nothing
	
End Function
         
         
'This function is used to Verify existing Fee Rule and open it
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_OpenExistingRule(strRuleName)
'@endcode
'@param (strRuleName) - Unique ID to get data from XL sheet

Function BIZ_DDM_FeeRule_OpenExistingRule(strRuleName)

	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, boolExists
	  
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
    Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
       
    FRM_Logger_ReportInfoEvent "Open a existing Fee Rule","Start Open a existing Fee Rule", Null
    
    '====================== Check whether rule already exists with same name ================
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")    
    If boolExists Then	
		FRM_Logger_ReportInfoEvent "Existing Fee Rule", "Fee Rule exists with name:"&strRuleName,Null
		BIZ_DDM_FeeRule_OpenExistingRule=True		
	Else
		FRM_Logger_ReportFailEvent "Existing Fee Rule","Fee Rule not exists with name:"&strRuleName,Null
		BIZ_DDM_FeeRule_OpenExistingRule=False
	End If
       	
	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesEditPage= Nothing
	
End Function
         
         
         
         
 'This function is used to Deactivate Rule
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_DeactivateRule(strRuleName)
'@endcode
'@param strRuleName - Unique ID to get data from XL sheet
         
Function BIZ_DDM_FeeRule_DeactivateRule(strRuleName)

	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	
	FRM_Logger_ReportInfoEvent "Deactivate existing Fee Rule","Start Deactivate existing Fee New Rule", Null
	
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")    
    If boolExists Then	
		intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),"Name",strRuleName)
		strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),intRuleRownNum,"Status")
		
		If Trim(strRuleStatus)="Active" Then
			'================ Open Rule in Edit mode by double clicking ===============
			GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double"
			
			'======================Check for Active scenarios and change status to Inactive ======================
			intScenarioCount = GUI_List_GetNumberofRows(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"))			
			For intRow = 0 To intScenarioCount-1
				strScenarioStatus = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRow,"Status")
				If strScenarioStatus="Active" Then
					GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRow, True, False, False, "Single"
					GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
				End If
			Next
	
			'========================= Close Scenarios Window ==================
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnClose")	
			
			'====================Check the updated rule status and report===================
'			GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single"
'			intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),"Name",strRuleName)
'			strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),intRuleRownNum,"Status")
'			If Trim(strRuleStatus)="Inactive" Then
'				FRM_Logger_ReportInfoEvent "Deactivate Fee Rule: "&strRuleName, " Rule status changed as: "&strRuleStatus,Null
'			Else
'				FRM_Logger_ReportFailEvent "Deactivate Fee Rule: "&strRuleName, " Rule status remains as: "&strRuleStatus,Null
'			End If
			
		Else
			FRM_Logger_ReportInfoEvent "Deactivate Fee Rule: "&strRuleName, " Rule status is already: "&strRuleStatus,Null
		End If
		
	Else
		FRM_Logger_ReportFailEvent "Deactivate Fee Rule: "&strRuleName, " Rule name not exists with name: "&strRuleName,Null
	End If
	
	Set objSetupContainer	= Nothing
	Set objRulesPage		= Nothing
	Set objRulesEditPage	= Nothing	
End Function



 'This function is used to Activate Rule
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_ActivateRule(strRuleName)
'@endcode
'@param strRuleName - Unique ID to get data from XL sheet
         
Function BIZ_DDM_FeeRule_ActivateRule(strRowID)

	'=======================Set reusable objects==============
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	
	Set objData = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "FeeRuleName")
	
	FRM_Logger_ReportInfoEvent "Activate existing Fee Rule","Start activate existing Fee New Rule", Null
	
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")    
    If boolExists Then	
		intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),"Name",strRuleName)
		strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),intRuleRownNum,"Status")
		
		If Trim(strRuleStatus)="Inactive" Then
			'================ Open Rule in Edit mode by double clicking ===============
			GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double"
			
			'======================Check for Inactive scenarios and change status to Active ======================
			intScenarioCount = GUI_List_GetNumberofRows(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"))			
			For intRow = 0 To intScenarioCount-1
				strScenarioStatus = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRow,"Status")
				If strScenarioStatus="Inactive" Then
					GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRow, True, False, False, "Single"
					GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
				End If
			Next
	
			'========================= Close Scenarios Window ==================
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnClose")	
			
			'====================Check the updated rule status and report===================
			GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single"
			intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),"Name",strRuleName)
			strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),intRuleRownNum,"Status")
			If Trim(strRuleStatus)="Active" Then
				FRM_Logger_ReportInfoEvent "Activate Fee Rule: "&strRuleName, " Rule status changed as: "&strRuleStatus,Null
			Else
				FRM_Logger_ReportFailEvent "Activate Fee Rule: "&strRuleName, " Rule status remains as: "&strRuleStatus,Null
			End If
			
		Else
			FRM_Logger_ReportInfoEvent "Activate Fee Rule: "&strRuleName, " Rule status is already: "&strRuleStatus,Null
		End If
		
	Else
		FRM_Logger_ReportFailEvent "Activate Fee Rule: "&strRuleName, " Rule name not exists with name: "&strRuleName,Null
	End If
	
	
	Set objSetupContainer	= Nothing
	Set objRulesPage		= Nothing
	Set objRulesEditPage	= Nothing	
End Function




'This is a function used to activate a Scenario  
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_ActivateScenario(strScenarioName)
'@endcode
'@param strScenarioName - Scenario Name to Act on

Function BIZ_DDM_FeeRule_ActivateScenario(strScenarioName)
	
	Dim objSetupContainer, objRulesEditPage, intRownNum, strStatus
	
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	
	FRM_Logger_ReportInfoEvent "Activate a scenario of Fee Rule","Start activate a scenario of Fee Rule", Null
	
	'================ Select scenario if Exist ,Changre the status ============================
	boolExist = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), Null, "Fee Scenario Name", strScenarioName, True, False, False, "Single")
	If boolExist Then 	
		intRownNum = GUI_List_GetRowIndex(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),"Fee Scenario Name",strScenarioName)
		strStatus = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRownNum,"Status")
		
		'=============='If Scenario status is Inactive, Make it acive ========================	
		If Trim(strStatus)="Inactive" Then		
			GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRownNum, True, False, False, "Single"
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
			FRM_Logger_ReportInfoEvent "Activate existing Scenario:"&strScenarioName, " Scenario status now changed as Active",Null
		Else
			FRM_Logger_ReportInfoEvent "Activate existing Scenario:"&strScenarioName, " Scenario status is already: "&strStatus,Null
		End If
	
	Else
		FRM_Logger_ReportFailEvent "Activate existing Scenario", "Scenario not exists with name: " & strScenarioName, null	
	End If
	
	Set objSetupContainer = Nothing
	Set objRulesEditPage = Nothing
End Function
	


'This is a function used to Deactivate a Scenario  
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_DeactivateScenario(strScenarioName)
'@endcode
'@param strScenarioName - Scenario Name to Act on

Function BIZ_DDM_FeeRule_DeactivateScenario(strScenarioName)
	
	Dim objSetupContainer, objRulesEditPage, intRownNum, strStatus
	
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	
	FRM_Logger_ReportInfoEvent "Deactivate a scenario of Fee Rule","Start Deactivate a scenario of Fee Rule", Null
	
	'=============='If Scenario Exist, Change the status ========================	
	boolExist = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), Null, "Fee Scenario Name", strScenarioName, True, False, False, "Single")
	If boolExist Then 
		intRownNum = GUI_List_GetRowIndex(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),"Fee Scenario Name",strScenarioName)
		strStatus = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRownNum,"Status")
		
		'=============='If Scenario status is Active, Make it Inactive =================	
		If Trim(strStatus)="Active" Then		
			GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRownNum, True, False, False, "Single"
			GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
			FRM_Logger_ReportInfoEvent "Deactivate existing scenario:"&strScenarioName, " Scenario status now changed as Inactive",Null
		Else
			FRM_Logger_ReportInfoEvent "Deactivate existing Scenario:"&strScenarioName, " Scenario status is already as: "&strStatus,Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Deactivate existing cenario", "Scenario not exists with name: " & strScenarioName, null	
	End If
				
	Set objSetupContainer = Nothing
	Set objRulesEditPage = Nothing
End Function
	



'This is a function used to duplicate a Scenario  
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_DuplicateScenario(strScenarioName)
'@endcode
'@param strScenarioName - scenario name to act on 

Function BIZ_DDM_FeeRule_DuplicateScenario(strScenarioName)	
	
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	
	FRM_Logger_ReportInfoEvent "Duplicate a scenario of Fee Rule","Start Duplicate a scenario of Fee Rule", Null
	
	'================ Select scenario if Exist and Dulpicate It ============================
	boolExist = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), Null, "Fee Scenario Name", strScenarioName, True, False, False, "Single")
	If boolExist Then 
		GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonCopy")
		GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")
	Else
		FRM_Logger_ReportFailEvent "Duplicate existing scenario", "Scenario not exists with name: " & strScenarioName, null	
	End If
	
	'================ Verifying Duplicated Scenario============================
	strScenarioName="Copy of "&strScenarioName
	boolExist = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), Null, "Fee Scenario Name", strScenarioName, True, False, False, "Single")
	If boolExist Then 
		FRM_Logger_ReportInfoEvent "Duplicate existing scenario", "Scenario is duplicated with name: " & strScenarioName, null
	Else
		FRM_Logger_ReportFailEvent "Duplicate existing scenario", "Scenario is not duplicated with name: " & strScenarioName, null
	End If

	Set objSetupContainer = Nothing
	Set objSetupContainer = Nothing
End Function
    


'This is a function used to Delete a Scenario  
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_DeleteScenario(strScenarioName)
'@endcode
'@param strScenarioName - scenario name to act on 

Function BIZ_DDM_FeeRule_DeleteScenario(strScenarioName)	
	
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	
	FRM_Logger_ReportInfoEvent "Duplicate a scenario of Fee Rule","Start Duplicate a scenario of Fee Rule", Null
	
	'================ Select scenario if Exist and Delete It ============================
	boolExist = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), Null, "Fee Scenario Name", strScenarioName, True, False, False, "Single")
	If boolExist Then 
		GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonDelete")
		GUI_Dialog_Encompass_Yes ""
		GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")
	Else
		FRM_Logger_ReportFailEvent "Delete existing scenario", "Scenario not exists with name: " & strScenarioName, null	
	End If
	
	'================ Verifying Deleted Scenario===============
	boolExist = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"), Null, "Fee Scenario Name", strScenarioName, True, False, False, "Single")
	If Not(boolExist) Then 
		FRM_Logger_ReportInfoEvent "Delete existing scenario", "Scenario is deleted with name: " & strScenarioName, null
	Else
		FRM_Logger_ReportFailEvent "Delete existing scenario", "Scenario is not deleted with name: " & strScenarioName, null		
	End If

	Set objSetupContainer = Nothing
	Set objSetupContainer = Nothing
End Function



'This function is used to get Fee Rule Name by passing Line/Group
'Created by - Madhava
'@code
'    BIZ_DDM_FeeRule_GetFeeRuleName(strLineGroup)
'@endcode
'@param strLineGroup - Unique ID to get data from XL sheet

Function BIZ_DDM_FeeRule_GetFeeRuleName(strLineGroup)
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")	
	 
	 '=================Check if rule exists with Line/ Group ==================
	intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),"Line #",strLineGroup)
	If intRuleRownNum>-1 Then		        
		BIZ_DDM_FeeRule_GetFeeRuleName=GUI_List_GetCellData (objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),intRuleRownNum,"Name")
	Else
		FRM_Logger_ReportInfoEvent "Get Fee Rule name by using Line Group value", " Fee Rule name not exists with Line Group:"&strLineGroup,Null
		BIZ_DDM_FeeRule_GetFeeRuleName=Empty		
	End If
	
	Set objSetupContainer=Nothing
End Function  


'This function is used to create new fee rule
'@code
'    Function BIZ_DDM_CreateActiveFeeRule(strRowID)
'@endcode
'@param strRowID - Uses test data from DDM.xlsx and worksheet DDM_Fields
Function BIZ_DDM_CreateActiveFeeRule(strRowID)
    FRM_Logger_ReportInfoEvent "Create New Rule For DDM","Start Create a new Rule For DDM----"&strRowID, Null
    
    Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
    Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
    Set objData           = FRM_DS_GetTestData("DDM", "DDM_Fields", strRowID) 
	strLineNo             = FRM_DS_GetValue(objData, "AutoPopulateValue")
	
    '====================== Check whether rule already exists with same Line# ================ 
    boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Line #", strLineNo, True, False, False, "Single")
	If boolExists Then
		intRuleRownNum = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),"Line #",strLineNo)
		strRuleStatus = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),intRuleRownNum,"Status")
		strRuleName = GUI_List_GetCellData(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),intRuleRownNum,"Name")
		'=============== Deactivate Rule before Delete If Rule status is active==========
		If Trim(strRuleStatus)="Active" Then		
			BIZ_DDM_FeeRule_DeactivateRule strRuleName
		End If		
		'=============== Delete Inactive Fee Rule ==========
		GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single"
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonDelete")		
		GUI_Dialog_Encompass_Click "10","Are you sure","Yes"
   End If
    
   GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonNew")
                
   If GUI_Object_IsExistX(objRulesPage, 60) Then
        
            If NOT Util_string_IsEmpty (FRM_DS_GetValue(objData, "RuleName")) Then
                GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=ruleNameTxtBx"), FRM_DS_GetValue(objData, "RuleName")
                FRM_Logger_ReportInfoEvent "Rule Name ","Rule Name Entered----"&FRM_DS_GetValue(objData, "RuleName"), Null
            End If
            
            If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "AutoPopulateValue")) Then
                GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=feeLineTxtBx"), FRM_DS_GetValue(objData, "AutoPopulateValue")
                FRM_Logger_ReportInfoEvent "Line#","Line#/Line Group Entered----"&FRM_DS_GetValue(objData, "AutoPopulateValue"), Null
            End If
            
            GUI_SwfButton_Click objRulesPage.SwfButton("swfname:=okBtn")
			
			wait g_ShortWaitSmall
			
   			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), FRM_DS_GetValue(objData, "EffectiveDate")
    		GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=operatorComboBox"), FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")
    
   			If FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")= "Range" Then
        		GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
        		GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=endDateTextbox"), FRM_DS_GetValue(objData, "EffectiveEndDate")
    		else
       	 		GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
    		End If
        
            If GUI_Object_IsExistX(objRulesEditPage.SwfObject("swfname:=stdButtonSave"), 60) Then
                GUI_swfObject_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")
            End if
            
   End If           
   Set objSetupContainer = Nothing
   Set objRulesPage      = Nothing
   Set objRulesEditPage  = Nothing
   Set objData           = Nothing
End Function



'This function is used to create new fee rule
'@code
'    Function BIZ_DDM_VerifyRuleStatus(StrRuleName,Status)
'@endcode
'@param StrRuleName - Rule name to check status for
'@param Status - Status to compare
Function BIZ_DDM_VerifyRuleStatus(StrRuleName,Status)

    Dim objSetupContainer, objRulesPage, objRulesEditPage, objData
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    
	Rulestatus= GUI_List_GetCellData (objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),GUI_List_GetRowIndex (objSetupContainer.SwfObject("swfname:=gvFeeRulesList"),"Name", StrRuleName),"Status")

	FRM_VerifyEqual Rulestatus,Status,"Active rule is created","Active rule is created"
    
    Set objSetupContainer = Nothing
   
End Function





'This function is used to check warning message while creating a fee rule
'@code
'    Function BIZ_DDM_CreateNewFeeRule_VerifyWarningMessage(strRowID)
'@endcode
'@param strRowID - Create rule data


Function BIZ_DDM_CreateNewFeeRule_VerifyWarningMessage(strRowID)
    FRM_Logger_ReportInfoEvent "Create a New Rule For DDM with Same Field ID","Start Create aNew Rule For DDM with Same Field ID----"&strRowID, Null
    
    Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, Diames
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
    Set objRulesEditPage  = objRulesPage.SwfWindow("swfname:=FeeScenarioRules")
    Set objData           = FRM_DS_GetTestData("DDM", "DDM_Fields", strRowID) 
    
    strWarningMessage = "The Fee rule name that you entered already exists.  Please try a different rule name."
    boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", FRM_DS_GetValue(objData, "RuleName"), True, False, False, "Single")
                            
    If boolExists Then
        GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdButtonNew")
        'Wait is used to handle sync issues
        If GUI_Object_IsExistX(objRulesPage, 60) Then
            If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "RuleName")) Then
                GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=ruleNameTxtBx"), FRM_DS_GetValue(objData, "RuleName")
                FRM_Logger_ReportInfoEvent "Rule Name ","Rule Name Entered----"&FRM_DS_GetValue(objData, "RuleName"), Null
            End If
            If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "AutoPopulateValue")) Then
                GUI_SwfEdit_Set objRulesPage.SwfEdit("swfname:=feeLineTxtBx"), FRM_DS_GetValue(objData, "AutoPopulateValue")
                FRM_Logger_ReportInfoEvent "Rule Name ","Rule Name Entered----"&FRM_DS_GetValue(objData, "AutoPopulateValue"), Null
            End If
            GUI_SwfButton_Click objRulesPage.SwfButton("swfname:=okBtn")
                
            Diames=objRulesPage.Dialog("text:=Encompass").Static("window id:=65535").GetROProperty ("text")
            If objRulesPage.Dialog("text:=Encompass").Static("window id:=65535").Exist Then
                
                FRM_VerifyEqual Diames,"The Fee rule name that you entered already exists.  Please try a different rule name.","Duplicate rule check is done","Duplicate rule check is done"
                
            End If

            'Wait is used to handle sync issues
                            
            GUI_Dialog_Encompass_OK strWarningMessage
            
            GUI_Window_Close objRulesPage
        Else
            FRM_Logger_ReportFailEvent "Rules Page","Rules Page not displayed-", Null
        End If
        'GUI_Window_Close objSetupContainer
    Else
        FRM_Logger_ReportFailEvent "Settings Page","Settings Page not displayed-", Null
    End If
    
    Set objSetupContainer = Nothing
    Set objRulesPage      = Nothing
    Set objRulesEditPage  = Nothing
    Set objData           = Nothing    
End Function




'This function is used to add scenarios to existing rule
'Created by - Gaurav Keni
'@code
'    BIZ_DDM_AddScenarioToRule strRowID
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet DDMFieldRule

Function BIZ_DDM_AddScenarioToRule(strRowID)

	'Define top level Obj descriptions
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	Set objMilestonesPage = objRulesEditPage.SwfWindow("Swfname:=SelectCurrentRoleForm")
	set objOtherDatePage=objRulesEditPage.swfwindow("swfname:=SelectOtherEffectiveDateForm")
	Set objFiledSelectionPage = objOtherDatePage.SwfWindow("Swfname:=ReportFieldSelector")
	Set objDataTableList = objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfWindow("swfname:=DataTableList")
	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
		
	'Update rule if already exists
	If boolExists Then
		boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
		'Update Scenario related Details
		objRulesEditPage.Activate
		
		GUI_SwfObject_Click objRulesEditPage.swfObject("swfname:=stdButtonNew")
	
		'Update Scenario Name	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ScenarioName")) Then
			GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=tbxScenarioName"), FRM_DS_GetValue(objData, "ScenarioName")
		End If
		
		'Update Channel Details	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ChannelList")) Then
			BIZ_DDM_FieldRule_SelectChannels FRM_DS_GetValue(objData, "ChannelList")
		End If
				
			strRuleCondition = FRM_DS_GetValue(objData, "RuleCondition")
		
			If UTIL_String_IsNotEmpty(strRuleCondition) Then
				
				GUI_SwfRadioButton_Click objRulesEditPage.SwfRadioButton("swfname:=radioCondition")
				arrRuleCondition = Split(strRuleCondition,"|")
				
				If arrRuleCondition(0)="Advanced Conditions" Then
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), "Advanced Conditions"
					GUI_SwfEditor_Type objRulesEditPage.SwfEditor("swfname:=textConditionCode"), arrRuleCondition(1)
				ElseIf arrRuleCondition(0)="Loan Program" Then
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=textConditionCode"), arrRuleCondition(1)
				ElseIf arrRuleCondition(0)="Current Role" Then	
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=btnSelect")
					GUI_List_ClickRow objMilestonesPage.SwfObject("swfname:=lsvMilestone"),Null, "Milestones", arrRuleCondition(1), True, False, False, "Double" 
				Else
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboCondition"), arrRuleCondition(1)
				End If
		
			End If
			
		
		'Set Effective Dates for field scenario
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveDate")) Then
			If instr(1,FRM_DS_GetValue(objData, "EffectiveDate"),"Other") > 0 Then
				arrFieldId=split(FRM_DS_GetValue(objData, "EffectiveDate"),"|")
				GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), arrFieldId(0)
				GUI_SwfObject_Click objOtherDatePage.swfObject("swfname:=btnFieldList")
				GUI_SwfEdit_Set objFiledSelectionPage.swfEdit("swfname:=txtFind"),arrFieldId(1)
				GUI_SwfButton_Click objFiledSelectionPage.swfButton("swfname:=btnFind")
				GUI_SwfButton_Click objFiledSelectionPage.swfButton("swfname:=btnOK")
				GUI_SwfButton_Click objOtherDatePage.swfButton("swfname:=btnOK")
			else
				GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), FRM_DS_GetValue(objData, "EffectiveDate")			
			End If			
		End if
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")) Then			
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=operatorComboBox"), FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")
		
			If FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")= "Range" Then
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=endDateTextbox"), FRM_DS_GetValue(objData, "EffectiveEndDate")
			else
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
			End If
		End if 
			
		'Click on Value tab
		GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Values"
				
		strValueSet = FRM_DS_GetValue(objData, "ValueSet")
		Environment.value("FIELDRULEVALUESET")=strValueSet
		If UTIL_String_IsNotEmpty(strValueSet) Then				
			arrValueSet = Split(strValueSet,"|")
			For intValcnt=0 to ubound(arrValueSet)
				arrFieldValSet = Split(arrValueSet(intValcnt),";")			
				boolExists = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvScenarioFieldValues"), objRulesEditPage.SwfScrollBar("swfname:=vPanelScrollBar"), "Field ID", arrFieldValSet(0), True, False, False, "Single")			
				GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnSetValue")
				GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=valueTypeCombo"),arrFieldValSet(1)
				Select Case lcase(arrFieldValSet(1))
				
					Case "no value set","clear value in loan file","use calculated value"
							
					Case "specific value"
						If GUI_Object_IsExist(objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEdit("swfname:=valueText")) Then
							GUI_SwfEdit_Set objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEdit("swfname:=valueText"), arrFieldValSet(2)
						else
							GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").swfcombobox("swfname path:=;panel2;groupBox1;FeeValueDlg"),arrFieldValSet(2)
						End If
					Case "calculation"			 
						GUI_SwfEditor_Type objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEditor("swfname:=valueText"), arrFieldValSet(2)
					Case "table"							
						GUI_List_ClickRow objDataTableList.SwfObject("swfname:=listViewOptions"), objDataTableList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name",arrFieldValSet(2), True, False, False, "Single"
						objDataTableList.SwfButton("swfname:=btnSelect").Object.PerformClick
						If objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").Exist Then
							GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb"),arrFieldValSet(3)	
							If objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb").GetROProperty("text")<>arrFieldValSet(3)	Then
								'Verify whether the value has been set correctly
								objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=outputCmb").Select arrFieldValSet(3)
							End If							
						Else
							FRM_Logger_ReportInfoEvent "Set Field Value dialog box", "Set Field Value dialog box does not appear", Null
						End If							
				
				End Select									
					
				GUI_SwfButton_Click objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfButton("swfname:=ok_btn")				
			Next
		End If
		
		'Save the rule along with scenario data
		GUI_SwfButton_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")
		'GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Details"
		GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")	
	
		'Check whether rule is displayed on Rule List on Fields rule home screen
		boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")	
		If boolExists Then
			FRM_Logger_ReportPassEvent "Add scenario to rule", " Scenario added to rule "&strRuleName,Null
		else
			FRM_Logger_ReportFailEvent "Add scenario to rule", " Scenario not added to rule "&strRuleName,Null
		End If
	Else
			FRM_Logger_ReportFailEvent "Update Field Rule:"&strRuleName,"Rule Name not Exists",Null
	End If

	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesAddFields= Nothing
	Set objRulesEditPage= Nothing
	Set objMilestonesPage = Nothing
	Set objFiledSelectionPage = Nothing
	Set objOtherDatePage=Nothing
	Set objDataTableList = Nothing
End Function


'This function is used to edit scenario
'Created by - Gaurav Keni
'@code
'     BIZ_DDM_EditScenario (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet DDMFieldRule

Function BIZ_DDM_EditScenario (strRowID)
	'Define top level Obj descriptions
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	Set objMilestonesPage = objRulesEditPage.SwfWindow("Swfname:=SelectCurrentRoleForm")

	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	strScenario = FRM_DS_GetValue(objData, "ScenarioName")
	
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
		
	'Update rule if already exists
	If boolExists Then
		boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
		intRownNum = objRulesEditPage.SwfObject("swfname:=gvLineScenarios").Object.items.count
		If intRownNum>0 Then
			For i= 0 To intRownNum -1
				If objRulesEditPage.SwfObject("swfname:=gvLineScenarios").Object.items.item(i).subitems.item(1).text = strScenario Then
					GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i, True, False, False, "Single"
					Exit for
				End If				
			Next
		Else
			FRM_Logger_ReportFailEvent "Activate existing Scenario", "Scenario not exists with name: " & strScenario, null	
		End If
		
		'Update Channel Details	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ChannelList")) Then
			BIZ_DDM_FieldRule_SelectChannels FRM_DS_GetValue(objData, "ChannelList")
		End If
				
			strRuleCondition = FRM_DS_GetValue(objData, "RuleCondition")
		
			If UTIL_String_IsNotEmpty(strRuleCondition) Then
				
				GUI_SwfRadioButton_Click objRulesEditPage.SwfRadioButton("swfname:=radioCondition")
				arrRuleCondition = Split(strRuleCondition,"|")
				
				If arrRuleCondition(0)="Advanced Conditions" Then
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), "Advanced Conditions"
					GUI_SwfEditor_Type objRulesEditPage.SwfEditor("swfname:=textConditionCode"), arrRuleCondition(1)
				ElseIf arrRuleCondition(0)="Loan Program" Then
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfEdit_Set objRulesEditPage.SwfEdit("swfname:=textConditionCode"), arrRuleCondition(1)
				ElseIf arrRuleCondition(0)="Current Role" Then	
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfObject_Click objRulesEditPage.SwfObject("swfname:=btnSelect")
					GUI_List_ClickRow objMilestonesPage.SwfObject("swfname:=lsvMilestone"),Null, "Milestones", arrRuleCondition(1), True, False, False, "Double" 
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "MilestoneDropDown")				
				Else
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboType"), arrRuleCondition(0)
					GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=comboCondition"), arrRuleCondition(1)
				End If
		
			End If
			
		
		'Set Effective Dates for field scenario
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveDate")) Then
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=effectiveDateFieldComboBox"), FRM_DS_GetValue(objData, "EffectiveDate")
		End if 
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")) Then
			GUI_SwfComboBox_Select objRulesEditPage.SwfComboBox("swfname:=operatorComboBox"), FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")
		
			If FRM_DS_GetValue(objData, "EffectiveCriteriaOperator")= "Range" Then
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=endDateTextbox"), FRM_DS_GetValue(objData, "EffectiveEndDate")
			else
				GUI_SwfEdit_Set objRulesEditPage.swfEdit("swfname:=startDateTextbox"), FRM_DS_GetValue(objData, "EffectiveStartDate")
			End If
		End if 
			
		'Click on Value tab
		GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Values"
				
		strValueSet = FRM_DS_GetValue(objData, "ValueSet")
		Environment.value("FIELDRULEVALUESET")=strValueSet
			If UTIL_String_IsNotEmpty(strValueSet) Then
				
				arrValueSet = Split(strValueSet,"|")
				For intValcnt=0 to ubound(arrValueSet)
					arrFieldValSet = Split(arrValueSet(intValcnt),";")			
						boolExists = GUI_List_ClickRow(objRulesEditPage.SwfObject("swfname:=gvScenarioFieldValues"), objRulesEditPage.SwfScrollBar("swfname:=vPanelScrollBar"), "Field ID", arrFieldValSet(0), True, False, False, "Single")			
						GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnSetValue")
						GUI_SwfComboBox_Select objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfComboBox("swfname:=valueTypeCombo"),arrFieldValSet(1)
						GUI_SwfEdit_Set objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfEdit("swfname:=valueText"), arrFieldValSet(2)		
						GUI_SwfButton_Click objRulesEditPage.SwfWindow("swfname:=FeeValueDlg").SwfButton("swfname:=ok_btn")				
				Next
			End If
		
		'Save the rule along with scenario data
		GUI_SwfButton_Click objRulesEditPage.SwfObject("swfname:=stdButtonSave")
		'GUI_SwfObject_SelectFormsTab objRulesEditPage.SwfObject("swfname:=tabControlRuleDetails"),"Details"
		GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")
	
	
		'Check whether rule is displayed on Rule List on Fields rule home screen
		boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
	
		If boolExists Then
			FRM_Logger_ReportPassEvent "Update Scenario", "Scenario is updated with details given: "&strScenario,Null
		else
			FRM_Logger_ReportFailEvent "Update Scenario", "Scenario missing on Field Rule List:"&strScenario,Null
		End If

	Else
			FRM_Logger_ReportFailEvent "Update Field Rule:"&strRuleName,"Rule Name not Exists",Null
	End If
	Set objSetupContainer= nothing
	Set objRulesPage= nothing
	Set objRulesAddFields= nothing
	Set objRulesEditPage= nothing
	Set objMilestonesPage = nothing
End Function


'This function is used to add scenario to existing fee rule
'Created by - Gaurav Keni
'@code
'     BIZ_DDM_AddFeeScenarioToRule (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet DDMFieldRule
Function BIZ_DDM_AddFeeScenarioToRule(strRowID)
	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objRulesPage      = objSetupContainer.SwfWindow("swfname:=FeeRulesDlg")
    Set objRulesEditPage  = objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
    Set objData           = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
    
    '====================== Create a New Fee Rule =========================   
    
    '======================= Get Fee Rule Name ============
	strLineGroup=FRM_DS_GetValue(objData, "LineGroup")	
	strRuleName=BIZ_DDM_FeeRule_GetFeeRuleName(strLineGroup)
    
    '======================== Verifying Rule Exist OR Not ==========================
    boolExists=GUI_List_ClickRow (objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
    
    If boolExists Then
		'==================== Open Senario Window by double clicking ==========================
		GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double"		
		objRulesEditPage.Activate
		
		GUI_SwfObject_Click objRulesEditPage.swfObject("swfname:=stdButtonNew")
		
		'====================== set scenario details =================
		BIZ_DDM_FeeRule_SetScenarioDetails strRowID
		
		'====================== set scenario values =================
	    BIZ_DDM_FeeRule_SetScenarioValue strRowID
		
		
	Else
		FRM_Logger_ReportFailEvent "Edit Fee Rule","Fee Rule not Exists with name:"&strRuleName,Null
	End If
	
	'====================== Close Scenario winodow =================
    GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnClose")
    Set objSetupContainer = Nothing
    Set objRulesPage      = Nothing
    Set objRulesEditPage  = Nothing
    Set objData           = Nothing
End Function

'This function is used to activate all scenarios of field rule
'Created by - Gaurav Keni
'@code
'     DDM_ActivateAllFieldScenarios(strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet DDMFieldRule
Function DDM_ActivateAllFieldScenarios(strRowID)
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	Set objLoanPgmPage = objRulesEditPage.SwfWindow("Swfname:=TemplateSelectionDialog")

	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
	If boolExists Then
		intRownNum = objRulesEditPage.SwfObject("swfname:=gvLineScenarios").Object.items.count					
		If intRownNum>0 Then
			For i= 0 To intRownNum -1			
				strScenarioName=GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i,1)
				strRowStatus=GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i,"Status")
				If strRowStatus="Inactive" Then
					GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i, True, False, False, "Single"
					GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
					FRM_Logger_ReportInfoEvent "Activate existing Scenario:"&strScenarioName, "Scenario status now changed as Active",Null	
				End If				
			Next
		Else
			FRM_Logger_ReportFailEvent "Activate existing Scenario", "No scenario exists for rule: "&strRuleName, null	
		End If
	Else
		FRM_Logger_ReportFailEvent "Activate existing Scenario", "Rule does not exist: "&strRuleName, null	
	End If
	GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")	
	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesAddFields= Nothing
	Set objRulesEditPage= Nothing
	Set objLoanPgmPage = Nothing
End function


'This function is used to deactivate all scenarios of field rule
'Created by - Gaurav Keni
'@code
'     DDM_DeactivateAllFieldScenarios (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet DDMFieldRule
Function DDM_DeactivateAllFieldScenarios(strRowID)
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	Set objLoanPgmPage = objRulesEditPage.SwfWindow("Swfname:=TemplateSelectionDialog")

	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
	
	intRownNum = objRulesEditPage.SwfObject("swfname:=gvLineScenarios").Object.items.count
		If intRownNum>0 Then
			For i= 0 To intRownNum -1
				strRowStatus=GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i,"Status")
				If strRowStatus="Active" Then
					GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i, True, False, False, "Single"
					GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
					FRM_Logger_ReportInfoEvent "Dectivate existing Scenario:"&strScenarioName, " Scenario status now changed as Inactive",Null
				End If				
			Next			
		End If
	
	GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")		
	
	
	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesAddFields= Nothing
	Set objRulesEditPage= Nothing
	Set objLoanPgmPage = Nothing
End function


'This function is used to activate all scenarios of fee rule
'Created by - Gaurav Keni
'@code
'     BIZ_DDM_ActivateAllFeeRuleScenarios (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet FeeRule

Function BIZ_DDM_ActivateAllFeeRuleScenarios(strRowID)
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	Set objLoanPgmPage = objRulesEditPage.SwfWindow("Swfname:=TemplateSelectionDialog")

	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "FeeRuleName")
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
	If Not boolExists Then
		FRM_Logger_ReportInfoEvent "Deactivate Field Rule:"&strRuleName, " Rule name does not exists",Null
	else
		intScenarioCount = GUI_List_GetNumberofRows(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"))
		
		'Check for Inactive scenarios and change status to Active
		For intscenrows = 0 To intScenarioCount-1
			strScenarioName = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intscenrows,"Fee Scenario Name")
			strScenarioStatus = GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intscenrows,"Status")
			If strScenarioStatus="Inactive" Then
				GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intscenrows, True, False, False, "Single"
				GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
				FRM_Logger_ReportInfoEvent "Activate existing Scenario:"&strScenarioName, "Scenario status now changed as Active",Null
			Else
				FRM_Logger_ReportInfoEvent "Activate existing Scenario:"&strScenarioName, "Scenario is already Active",Null			
			End If
		Next		
	End If
	
	GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnClose")		
	
	
	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesAddFields= Nothing
	Set objRulesEditPage= Nothing
	Set objLoanPgmPage = Nothing
End function

'This function is used to deactivate all scenarios of fee rule
'Created by - Gaurav Keni
'@code
'     BIZ_DDM_DeactivateAllFeeRuleScenarios (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet FeeRule
Function BIZ_DDM_DeactivateAllFeeRuleScenarios(strRowID)
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FeeScenarioRules")
	Set objLoanPgmPage = objRulesEditPage.SwfWindow("Swfname:=TemplateSelectionDialog")

	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "FeeRuleName")
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvFeeRulesList"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
	
		intRownNum = objRulesEditPage.SwfObject("swfname:=gvLineScenarios").Object.items.count
		If intRownNum>0 Then
			For i= 0 To intRownNum -1
				strRowStatus=GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i,"Status")
				If strRowStatus="Active" Then
					GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),i, True, False, False, "Single"
					GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
					FRM_Logger_ReportInfoEvent "Dectivate existing Scenario:"&strScenarioName, "Scenario status now changed as Inactive",Null
				End If			
				
			Next			
		End If
	
	GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnClose")		
	
	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesAddFields= Nothing
	Set objRulesEditPage= Nothing
	Set objLoanPgmPage = Nothing
End function


'This function is used to get Data Table Name by passing Data Table Name
'Created by - Rohit
'@code
'    BIZ_DDM_GetDataTableName(strDataTableName)
'@endcode
'@param strDataTableName - Data Table Name from Test Data Sheet.

Function BIZ_DDM_GetDataTableName(strDataTableName)	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")		 
	 '=================Check if Data Table already exists with with name as strDataTableName==================
	intDataTableRowName = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strDataTableName)
	If intDataTableRowName>-1 Then		        
		BIZ_DDM_GetDataTableName=GUI_List_GetCellData (objSetupContainer.SwfObject("swfname:=listViewOptions"),intDataTableRowName,"Name")
	Else
		FRM_Logger_ReportInfoEvent "Get Data Table name by using Name value", " Data Table does not exists with Name:"&strDataTableName,Null
		BIZ_DDM_GetDataTableName=Empty		
	End If	
	Set objSetupContainer=Nothing
End Function 


'This function is used to create a new Data Table Name
'@code
'    BIZ_DDM_CreateNewDataTable (strRowID)
'@endcode
'@param strRowID - strRowID

Function BIZ_DDM_CreateNewDataTable (strRowID)
	BIZ_Nav_HierarchyTree "Dynamic Data Management", "Data Tables"
	wait g_ShortWaitSmall
	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists,intfieldCount    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")    
    Set objDataTableAddPage  = objSetupContainer.SwfWindow("swfname:=DataTableDlg")         
	Set objPairDialog = objDataTableAddPage.swfwindow("swfname:=DDMFieldDialog")
	Set objData = FRM_DS_GetTestData("DDM", "DataTable", strRowID)
	strDataTableName=FRM_DS_GetValue(objData, "DataTableName") 
	'======================= Delete Existing Data Table ============  
	'Get All the Values From Xl Sheet		
	strDataTableValue=FRM_DS_GetValue(objData, "Value")	
	strDataTableFieldID=FRM_DS_GetValue(objData, "FieldID")
	strDataTableOperator=FRM_DS_GetValue(objData, "Operator")
	strDataTableOutputValue=FRM_DS_GetValue(objData, "Output")
	strDataTableOutputValueType=FRM_DS_GetValue(objData, "OutputValueType")
	intfieldCount=0
	
	If instr(1,strDataTableFieldID,"|") Then
		arrstrDataTableFieldID=split(strDataTableFieldID,"|")
		intfieldCount=ubound(arrstrDataTableFieldID)
	Else	
		arrstrDataTableFieldID=split(strDataTableFieldID,"")
		intfieldCount=ubound(arrstrDataTableFieldID)	
	End If
	If instr(1,strDataTableValue,"|") Then
		arrstrDataTableValue=split(strDataTableValue,"|")	
	Else
		arrstrDataTableValue=split(strDataTableValue,"")		
	End If
	If instr(1,strDataTableOperator,"|") Then
		arrDataTableOperator=split(strDataTableOperator,"|")
	Else
		arrDataTableOperator=split(strDataTableOperator,"")		
	End If	
	If instr(1,strDataTableOutputValueType,"|") Then
		arrDataTableOutputValueType=split(strDataTableOutputValueType,"|")
	Else
		arrDataTableOutputValueType=split(strDataTableOutputValueType,"")		
	End If	
	If instr(1,strDataTableOutputValue,"|") Then
		arrDataTableOutputValue=Split(strDataTableOutputValue,"|")
	Else
		arrDataTableOutputValue=split(strDataTableOutputValue,"")		
	End If		
	arrDataTableOutputValue=Split(strDataTableOutputValue,"|")
	
	'======================== Delete the Existing Data Table name==============
	BIZ_DDM_DeleteDataTable(strDataTableName)
	wait g_ShortWaitSmall
	'======================== Start creating data table.Click on New(+) Icon  and Set Data Table name==============     
    FRM_Logger_ReportInfoEvent "Create a New Data Table","Start creating new Data Table "&strDataTableName, Null	
    GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnNew") 
	GUI_SwfEdit_Set objDataTableAddPage.SwfEdit("swfname:=textBoxDDMTableName"),strDataTableName
	GUI_SwfEdit_Set objDataTableAddPage.SwfEdit("swfname:=textBoxDDMTableDescription"),"Automation Creation"	
	For i = 0 To intfieldCount Step 1
		If NOT Util_string_IsEmpty (arrstrDataTableFieldID(i)) Then
	        GUI_SwfEdit_Set objDataTableAddPage.SwfEdit("swfname:=textBoxFind"),Trim(arrstrDataTableFieldID(i))
			wait g_ShortWaitSmall  'Adding due to sync issues
			findFieldId=objDataTableAddPage.SwfEdit("swfname:=textBoxFind").GetROProperty("text")
			If findFieldId=Trim(arrstrDataTableFieldID(i)) Then
				FRM_Logger_ReportInfoEvent "Add Data Table Field check passed", "Field Id to 'Find' has been set as:"&findFieldId,Null
			Else
				FRM_Logger_ReportInfoEvent "Add Data Table Field check failed", "Field Id to 'Find' has not been set as:"&findFieldId,Null
			End If					
	        GUI_SwfButton_Click objDataTableAddPage.SwfButton("swfname:=findBtn")
	        GUI_SwfButton_Click objDataTableAddPage.SwfButton("swfname:=addBtn")
	        'If GUI_Object_IsExist(objPairDialog.SwfButton("swfname:=btnOK")) Then
			If GUI_Object_IsExistX(objPairDialog.SwfButton("swfname:=btnOK"),"10") Then
	        	GUI_SwfButton_Click objPairDialog.SwfButton("swfname:=btnOK")
	        End If				
		Else
			FRM_Logger_ReportFailEvent "Data Table Field is Blank", " Data Table Field Id is Empty:",Null		
	    End If
	Next
	wait g_ShortWaitSmall
	GUI_SwfButton_Click objDataTableAddPage.SwfButton("swfname:=btnUpdate")
	'Added wait to resolve sync issues
	wait g_ShortWaitSmall
	
	'========================Set the Number of Output values========================	
	Set objModifyDataTable=SwfWindow("swfname:=DataTableOutputColumnSetupDialog")
	GUI_SwfComboBox_Select objModifyDataTable.SwfComboBox("swfname:=numberOfOutputColumns"),ubound(arrDataTableOutputValue)
	FRM_Logger_ReportInfoEvent "Output columns in DataTable", "Number of output columns has been set as: "&ubound(arrDataTableOutputValue)+1,Null
	GUI_SwfButton_Click objModifyDataTable.SwfButton("swfname:=btnSave")
	GUI_Dialog_Encompass_Click "4","Removing existing columns","Yes"
	
	'***************************************************************************************************
	Set objDataTableSetup=SwfWindow("swfname:=DataTableSetupDlg")
	Set objDataTableSetValue=objDataTableSetup.SwfWindow("swfname:=FeeValueDlg")
	GUI_SwfObject_Click objDataTableSetup.SwfObject("swfname:=stdButtonNew") 
'	GUI_Dialog_Encompass_Yes ""	

	If objDataTableSetValue.Exist Then		
		GUI_SwfComboBox_Select objDataTableSetValue.SwfComboBox("swfname:=valueTypeCombo"),arrDataTableOperator(0)
		If objDataTableSetValue.SwfEdit("swfname:=txtDataValue").Exist(2) Then
			'Sometimes this appears
			GUI_SwfEdit_Set objDataTableSetValue.SwfEdit("swfname:=txtDataValue"),arrstrDataTableValue(0)
		Else	
			'Sometimes this appears
			GUI_SwfEdit_Set objDataTableSetValue.SwfEdit("swfname:=valueText"),arrstrDataTableValue(0)
		End If	
		GUI_SwfButton_Click objDataTableSetValue.SwfButton("swfname:=BtnNextItem")
		For i = 1 To UBound(arrstrDataTableFieldID)			
			GUI_SwfComboBox_Select objDataTableSetValue.SwfComboBox("swfname:=valueTypeCombo"),arrDataTableOperator(i)			
			If objDataTableSetValue.SwfEdit("swfname:=valueText").Exist(2) Then
				'if value to be set is a text
				GUI_SwfEdit_Set objDataTableSetValue.SwfEdit("swfname:=valueText"),arrstrDataTableValue(i)
			ElseIf objDataTableSetValue.SwfComboBox("swfname:=").Exist(2) Then
				'if value to be set is a combobox item
				GUI_SwfComboBox_Select objDataTableSetValue.SwfComboBox("swfname:="),arrstrDataTableValue(i)
			ElseIf objDataTableSetValue.SwfEdit("swfname:=txtDate").Exist(2) Then
				'if value to be set is a date
				GUI_SwfEdit_Set objDataTableSetValue.SwfEdit("swfname:=txtDate"),arrstrDataTableValue(i)	
			ElseIf objDataTableSetValue.SwfEdit("swfname:=txtDataValue").Exist(2) Then
				'if value to be set is a data value
				GUI_SwfEdit_Set objDataTableSetValue.SwfEdit("swfname:=txtDataValue"),arrstrDataTableValue(i)
			End If	
			GUI_SwfButton_Click objDataTableSetValue.SwfButton("swfname:=BtnNextItem")			
		Next	

		'========================Set the Output values========================	
		For ctrOutput = 0 To ubound(arrDataTableOutputValue)	
			'highlight added due to sync issues
			objDataTableSetValue.SwfComboBox("swfname:=valueTypeCombo").highlight
			GUI_SwfComboBox_Select objDataTableSetValue.SwfComboBox("swfname:=valueTypeCombo"),Trim(arrDataTableOutputValueType(ctrOutput))
			If objDataTableSetValue.SwfEdit("swfname:=valueText").Exist(2) Then
				'when Output Value Type is "Specific Value"
				GUI_SwfEdit_Set objDataTableSetValue.SwfEdit("swfname:=valueText"),Trim(arrDataTableOutputValue(ctrOutput))
			ElseIf objDataTableSetValue.SwfEditor("swfname:=valueText").Exist(2) Then
				'when Output Value Type is "Calculation"
				GUI_SwfEdit_Set objDataTableSetValue.SwfEditor("swfname:=valueText"),Trim(arrDataTableOutputValue(ctrOutput))
			End If	
			If ctrOutput=ubound(arrDataTableOutputValue) Then
				GUI_SwfButton_Click objDataTableSetValue.SwfButton("swfname:=ok_btn")
			Else
				GUI_SwfButton_Click objDataTableSetValue.SwfButton("swfname:=BtnNextItem")
			End If
		Next
	End If	
	wait g_ShortWaitSmall
	'========================Save the Contents========================
	GUI_SwfObject_Click objDataTableSetup.SwfObject("swfname:=stdButtonSave")
	wait(2) 'wait to handle sync issue
	GUI_SwfButton_Click objDataTableSetup.SwfButton("swfname:=btnClose")	
	'Set objDict=Nothing
	Set objPairDialog = Nothing
	Set objDataTableSetup = Nothing
	Set objDataTableSetValue= Nothing
	Set objSetupContainer = Nothing	
	Set objDataTableAddPage  = Nothing
    
End Function

'This function is used to delete existing Data Table by passing Data Table Name
'@code
'    BIZ_DDM_DeleteDataTable(strDataTableName)
'@endcode
'@param strDataTableName - Data Table Name .
Function BIZ_DDM_DeleteDataTable(strDataTableName)
	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objDataTablePage  = objSetupContainer.SwfWindow("swfname:=listViewOptions")
    
    FRM_Logger_ReportInfoEvent "Delete existing Data Table ","Start deleting existing Data Table: "&strDataTableName, Null
    	 
	 '=================Check if Data Table already exists with with name as strDataTableName==================
	intDataTableRowName = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strDataTableName)
	If intDataTableRowName>-1 Then		        
		'=============== Delete Data Table ==========
		GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strDataTableName, True, False, False, "Single"
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")		
		'GUI_Dialog_Encompass_Yes ""
		GUI_Dialog_Encompass_Click "4","Are you sure","Yes"		
		'================ Verifying Whether Data Table is Deleted or Not===============
		wait g_ShortWaitSmall
		boolExist = GUI_List_ClickRow (objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strDataTableName, True, False, False, "Single")
		If Not(boolExist) Then 
			FRM_Logger_ReportInfoEvent "Delete existing Data Table", "Data Table is deleted with name: " & strDataTableName, null
		Else
			FRM_Logger_ReportFailEvent "Delete existing Data Table", "Data Table is not deleted with name: " & strDataTableName, null		
		End If						
	Else
		FRM_Logger_ReportInfoEvent "Get Data Table name by using Name value", " Data Table does not exists with Name: "&strDataTableName,Null
	End If
	
	Set objSetupContainer = Nothing
    Set objDataTablePage = Nothing   
End Function


'This function is used to DeSelect data population Timing CheckBoxes
'Created by - Rohit Alhat
'@code
'    BIZ_DDM_DeselectAllDPTCheckboxes() 
'@endcode
Function BIZ_DDM_DeselectAllDPTCheckboxes()
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDialogOK         =   objSetupContainer.Dialog("text:=Encompass").WinButton("text:=OK")
	Set objDesc = Description.Create
	objDesc("micclass").value="SwfCheckBox"
	
	Set objCheckBox=objSetupContainer.ChildObjects(objDesc)
	
	For i=0 to objCheckBox.count -1
		If GUI_Object_IsEnabled (objCheckBox.item(i)) Then
		objCheckBox.item(i).highlight
			GUI_SwfCheckbox_Set objCheckBox.item(i),"OFF"			
		End If
		
		IF GUI_Object_IsExistX(objDialogOK, 3) Then
			GUI_Dialog_Encompass_OKX 2, ""			
		End IF		
	Next
	
	If GUI_Object_IsEnabled(objSetupContainer.SwfObject("swfname:=stdIconBtnSave")) then
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnSave")
	End if	
	
	Set objSetupContainer=Nothing
	Set objDesc=Nothing
	Set objCheckBox=Nothing
	Set objDialogOK=Nothing
End Function

	


'This function is used to select data population option as Loan Save
'Created by - Rohit Alhat
'@code
'    BIZ_DDM_SelectDataPopulationStopTrigger(strRowId) 
'@endcode

Function BIZ_DDM_SelectDataPopulationStopTrigger(strRowID)
	'Set setting page level object
	FRM_Logger_ReportInfoEvent "Data Population Timing options - Set Stop Triggers", "Set the given triggers", Null
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objAddFieldChanges=objSetupContainer.SwfObject("swfname:=ReportFieldSelector")
	Set objAddSpecificConditions=objSetupContainer.SwfObject("swfname:=AdvConditionEditor")
	Set objAddEditFilterDialog=objAddSpecificConditions.SwfObject("swfname:=AddEditFilterDialog")
	Set ReportFieldSelector=objAddEditFilterDialog.SwfObject("swfname:=ReportFieldSelector")
	Set objData = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
	strTriggerValue = FRM_DS_GetValue(objData, "TriggerSet")
	
	If instr(1,strTriggerValue,"|") Then
		strTriggerValue=split(strTriggerValue,"|")
		fieldCount=ubound(strTriggerValue)
	else
		strTriggerValue=split(strTriggerValue," ")
		fieldCount=ubound(strTriggerValue)
	End If
	For intIteration = 0 To fieldCount Step 1
		Select Case ucase(strTriggerValue(intIteration))
			Case "LE"
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=afterEstSent"), "ON"
			Case "FC"
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=fieldChanges"), "ON"
				FC_TriggerField = split(FRM_DS_GetValue(objData, "FC_TriggerField"),"|")
				'=============== Delete Existing Fields Changes ==========
				strTotalRows=GUI_List_GetNumberofRows (objSetupContainer.SwfObject("swfname:=listViewOptions"))
				if strTotalRows>0 then
					For Iterator = strTotalRows To 0 Step -1
						GUI_List_ActOnRow objSetupContainer.SwfObject("swfname:=listViewOptions"), Iterator, False, false, false, "Single"
						'GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Fields",FC_TriggerField(iterator), True, False, False, "Single"
						wait g_ShortWaitSmall
						GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")
						'GUI_Dialog_Encompass_Yes ""
					
					Next	
				End if	
				'=============== Add New Fields Changes ==========
				For Iterator = 0 To ubound(FC_TriggerField) Step 1
					GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnNew")
					GUI_SwfEdit_Set objAddFieldChanges.SwfEdit("swfname:=txtFind"),FC_TriggerField(iterator)
					GUI_SwfButton_Click objAddFieldChanges.SwfButton("swfname:=btnFind")
					wait g_ShortWaitSmall
					GUI_SwfButton_Click objAddFieldChanges.SwfButton("swfname:=btnOK")
				Next
			Case "SC"
			
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=advCond"), "ON"		
				fieldCount=0
				SC_TriggerField = FRM_DS_GetValue(objData, "SC_TriggerField")				
				If instr(1,SC_TriggerField,"|") Then
					SC_TriggerField=split(SC_TriggerField,"|")
					
					fieldCount=ubound(SC_TriggerField)
				Else
					SC_TriggerField=split(SC_TriggerField,"")
					fieldCount=ubound(SC_TriggerField)
				End If

				GUI_SwfButton_Click objSetupContainer.SwfButton("swfname:=btnSearch")
				'=============== Delete Existing Fields Changes ==========
				strTotalRows=0
				strTotalRows=GUI_List_GetNumberofRows (objAddSpecificConditions.SwfObject("swfname:=gvFilters"))
				If strTotalRows>0 Then
					For Iterator = strTotalRows To 1 Step -1
						GUI_List_ActOnRow objAddSpecificConditions.SwfObject("swfname:=gvFilters"), Iterator, False, false, false, "Single"
						'GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Fields",FC_TriggerField(iterator), True, False, False, "Single"
						wait g_ShortWaitSmall
						GUI_SwfObject_Click objAddSpecificConditions.SwfObject("swfname:=btnRemoveFilter")
						objAddSpecificConditions.Dialog("text:=Encompass").WinButton("text:=&Yes").Click

					Next	
				End If
				'=============== Add New Specific Changes ==========
				For i = 0 To ubound(SC_TriggerField) Step 1
					SC_TriggerFieldnValues=split(SC_TriggerField(i),";")
					GUI_SwfObject_Click objAddSpecificConditions.SwfObject("swfname:=btnAddFilter")
					GUI_SwfObject_Click objAddEditFilterDialog.SwfObject("swfname:=btnFieldList")
					GUI_SwfEdit_Set ReportFieldSelector.SwfEdit("swfname:=txtFind"),SC_TriggerFieldnValues(0)
					GUI_SwfButton_Click ReportFieldSelector.SwfButton("swfname:=btnFind")
					wait g_ShortWaitSmall
					GUI_SwfButton_Click ReportFieldSelector.SwfButton("swfname:=btnOK")	
					objAddEditFilterDialog.highlight						
					GUI_SwfComboBox_Select objAddEditFilterDialog.SwfComboBox("swfname:=cboOperator"),cstr(SC_TriggerFieldnValues(1))
					'Sometimes the Add/Edit Search Filter disappears, hence this if condition
					If objAddEditFilterDialog.Exist(6) Then
					Else
						objAddSpecificConditions.SwfObject("swfname:=gvFilters").highlight
						GUI_List_ActOnRow objAddSpecificConditions.SwfObject("swfname:=gvFilters"), 1, False, False, False, "Double"
					End If
					'objAddEditFilterDialog.highlight
					objAddEditFilterDialog.SwfEdit("swfname:=txtStringValue").highlight
					GUI_SwfEdit_Set objAddEditFilterDialog.SwfEdit("swfname:=txtStringValue"),cstr(SC_TriggerFieldnValues(2))
					GUI_SwfButton_Click objAddEditFilterDialog.SwfButton("swfname:=btnOK")
				Next

				GUI_SwfButton_Click objAddSpecificConditions.SwfButton("swfname:=btnOK")
		End Select	
	Next
	'Save the Scenario
	GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnSave")
		
	Set objSetupContainer = nothing
	Set objAddFieldChanges=nothing
	Set objAddSpecificConditions=nothing
	Set objAddEditFilterDialog=nothing
	Set ReportFieldSelector=nothing
	Set objData =nothing

End Function

'This function is used to deactivate specific scenario of fee rule
'Created by - Gaurav Keni
'@code
'     BIZ_DDM_DeActivateSpecificFieldScenario (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet FeeRule

 Function BIZ_DDM_DeActivateSpecificFieldScenario(strRowID)
 	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	Set objLoanPgmPage = objRulesEditPage.SwfWindow("Swfname:=TemplateSelectionDialog")

	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	strScenarioName = FRM_DS_GetValue(objData, "ScenarioName")
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
	
	'intRownNum = GUI_List_GetRowIndex(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),"Field Scenario Name",strScenarioName)
	intRownNum = GUI_List_GetRowIndex(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),1,strScenarioName)
	strRowStatus=GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRownNum,"Status")
	If intRownNum>=0 and strRowStatus = "Active"  Then			
		GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRownNum, True, False, False, "Single"
		GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
		FRM_Logger_ReportInfoEvent "Deactivate existing Scenario:"&strScenarioName, "Scenario status now changed as Inactive",Null	
	ElseIf intRownNum>=0 and strRowStatus = "Inactive"  Then				
		FRM_Logger_ReportInfoEvent "Deactivate existing Scenario:"&strScenarioName, "Scenario status is already Inactive",Null	
	Else
		FRM_Logger_ReportFailEvent "Deactivate existing Scenario:"&strScenarioName, "Scenario could NOT be deactivated", null	
	End If
	
	GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")	
	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesAddFields= Nothing
	Set objRulesEditPage= Nothing
	Set objLoanPgmPage = Nothing
End function

'This function is used to activate specific scenario of fee rule
'Created by - Gaurav Keni
'@code
'     BIZ_DDM_ActivateSpecificFieldScenario (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet FeeRule

 Function BIZ_DDM_ActivateSpecificFieldScenario(strRowID)
 	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objRulesPage= objSetupContainer.SwfWindow("swfname:=FieldRulesDlg")
	Set objRulesAddFields= objRulesPage.SwfWindow("swfname:=AddFields")	
	Set objRulesEditPage= objSetupContainer.SwfWindow("swfname:=FieldScenarioRules")
	Set objLoanPgmPage = objRulesEditPage.SwfWindow("Swfname:=TemplateSelectionDialog")

	'Get Rule related test data
	Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID) 
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	strScenarioName = FRM_DS_GetValue(objData, "ScenarioName")
	'Check whether rule already exists with same name
	boolExists = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Double")
	
	'intRownNum = GUI_List_GetRowIndex(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),"Field Scenario Name",strScenarioName)
	intRownNum = GUI_List_GetRowIndex(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),1,strScenarioName)
	strRowStatus=GUI_List_GetCellData(objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRownNum,"Status")
	If intRownNum>=0 and strRowStatus = "Inactive"  Then			
		GUI_List_ActOnRow objRulesEditPage.SwfObject("swfname:=gvLineScenarios"),intRownNum, True, False, False, "Single"
		GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=btnDeactivate")
		FRM_Logger_ReportInfoEvent "Activate existing Scenario:"&strScenarioName, " Scenario status now changed as Active",Null			
	ElseIf intRownNum>=0 and strRowStatus = "Active"  Then		
		FRM_Logger_ReportInfoEvent "Activate existing Scenario:"&strScenarioName, "Scenario is already Active",Null
	Else
		FRM_Logger_ReportFailEvent "Activate existing Scenario:"&strScenarioName, "Scenario could NOT be activated", null	
	End If
	
	GUI_SwfButton_Click objRulesEditPage.SwfButton("swfname:=button1")	
	
	Set objSetupContainer= Nothing
	Set objRulesPage= Nothing
	Set objRulesAddFields= Nothing
	Set objRulesEditPage= Nothing
	Set objLoanPgmPage = Nothing
End function


'This function is used to export data table
'Created by - Gaurav Keni
'@code
'     BIZ_DDM_ExportDataTable (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet FeeRule

Function BIZ_DDM_ExportDataTable(strRowId)
	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists,fieldCount
    
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objDataTablePage  = objSetupContainer.SwfWindow("swfname:=listViewOptions")
    Set objDataTableAddPage  = objSetupContainer.SwfWindow("swfname:=DataTableDlg")
    
    Set objData           = FRM_DS_GetTestData("DDM", "DataTable", strRowID)     
    '====================== Export a New Data Table =========================    
    FRM_Logger_ReportInfoEvent "Export data table to a location","Start exporting data table", Null
	 
	'Get All the Values From Xl Sheet
	strDataTableName=FRM_DS_GetValue(objData, "DataTableName")
	strFileName=FRM_DS_GetValue(objData, "FileName")&".csv"
	intDataTableRowName = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listViewOptions"),"Name",strDataTableName)
	If intDataTableRowName>-1 Then        
		GUI_List_ClickRow objSetupContainer.SwfObject("swfname:=listViewOptions"), objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strDataTableName, True, False, False, "Single"
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconButtonExport")
		strAbsolutePath = Pathfinder.Locate("Test Report\") & strFileName
		Set objFile = CreateObject("Scripting.FileSystemObject")
		If objFile.FileExists(strAbsolutePath) Then
			objFile.DeleteFile(strAbsolutePath)
		End If
		GUI_WinEdit_Type 		objSetupContainer.Dialog("text:=Save As").WinEdit("nativeclass:=Edit","attached text:=File name:"), strAbsolutePath
		GUI_WinButton_Click 	objSetupContainer.Dialog("text:=Save As").WinButton("text:=&Save")    
    End If
	Set objSetupContainer = Nothing
	Set objDataTablePage  = Nothing
	Set objDataTableAddPage  = Nothing
	Set objData =Nothing	
	Set objFile= nothing 
End Function

'This function is used to Import data table
'Created by - Gaurav Keni
'@code
'     BIZ_DDM_ImportDataTable (strRowID)
'@endcode
'@param strRowID - row id for data
' strRowID - User should provide test data to create rule in Excel file DDM.xls and worksheet FeeRule
Function BIZ_DDM_ImportDataTable(strRowId)
	Dim objSetupContainer, objRulesPage, objRulesEditPage, objData, strRuleName, boolExists,fieldCount
    Dim strOutput, arrOutput, strFieldVal
    Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objDataTablePage  = objSetupContainer.SwfWindow("swfname:=listViewOptions")
    Set objDataTableAddPage  = objSetupContainer.SwfWindow("swfname:=DataTableDlg")
    Set objImportPage=objSetupContainer.SwfWindow("swfname:=DataTableImportParameters")
    set objUpdatePage=objImportPage.swfwindow("swfname:=DataTableDlg")
   	Set objClosePage= SwfWindow("swfname:=DataTableSetupDlg")
    Set objDataTableOutputColumn=objUpdatePage.SwfWindow("swfname:=DataTableOutputColumnSetupDialog")
	
    Set objData = FRM_DS_GetTestData("DDM", "DataTable", strRowID) 
    strDataTableName=FRM_DS_GetValue(objData, "DataTableName")
	
    '====================== Import a New Data Table =========================    
    FRM_Logger_ReportInfoEvent "Import data table from a location","Start importing data table "&strDataTableName, Null
	 
	'Get All the Values From Xl Sheet
	strOutput=FRM_DS_GetValue(objData, "Output")
	arrOutput=Split(strOutput,"|")
	If ubound(arrOutput)=0 Then
		strOutputCol=ubound(arrOutput)+1&" Output Column"
	Else	
		strOutputCol=ubound(arrOutput)+1&" Output Columns"
	End If	
	strFileName=FRM_DS_GetValue(objData, "FileName")&".csv"
	strAbsolutePath = Pathfinder.Locate("Test Report\") & strFileName
	GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnImport")
	
	GUI_Object_WaitTillExist objSetupContainer.Dialog("text:=Open").WinEdit("attached text:=File &name:","index:=0")	
	Set winEditChildObj = Description.Create()
	winEditChildObj("micclass").value = "WinEdit"
	winEditChildObj("attached text").value = "File &name:"
	Set winEditChildObj1 = objSetupContainer.Dialog("text:=Open").ChildObjects(winEditChildObj)
	winEditChildObj1(0).type strFileName	
	GUI_WinButton_Click objSetupContainer.Dialog("text:=Open").Winbutton("text:=&Open")	
	Set winEditChildObj = Nothing
	Set winEditChildObj1 = Nothing
	'GUI_SwfButton_Click objImportPage.swfButton("swfname:=btnNext")				
	GUI_SwfEdit_Set objImportPage.SwfEdit("swfname:=tbxTableName"),strDataTableName
	GUI_SwfEdit_Set objImportPage.SwfEdit("swfname:=tbxTableDescription"),"Automation Creation"	
	GUI_SwfComboBox_Select objImportPage.SwfComboBox("swfname:=outputColComboBox"), strOutputCol
	GUI_SwfButton_Click objImportPage.swfButton("swfname:=btnNext")
	wait 2
	GUI_SwfButton_Click objUpdatePage.SwfButton("swfname:=btnUpdate")
	wait 2
	strNoOfOutputCol= GUI_Object_GetPropertyValue(objDataTableOutputColumn.SwfComboBox("swfname:=numberOfOutputColumns"),"selection")	
	If ubound(arrOutput)+1=cint(strNoOfOutputCol) then
		FRM_Logger_ReportPassEvent "Output column validation","Output column count on Add Data Table wizard is same as that selected in Data Table Import wizard", Null
	Else
		FRM_Logger_ReportFailEvent "Output column validation","Output column count on Add Data Table wizard is different from that selected in Data Table Import wizard", Null
	End If	
	GUI_SwfButton_Click objDataTableOutputColumn.SwfButton("swfname:=btnSave")
	GUI_SwfButton_Click objClosePage.swfbutton("swfname:=btnClose")
	Set objSetupContainer = Nothing
	Set objDataTablePage  = Nothing
	Set objDataTableAddPage  = Nothing
	Set objData =Nothing
	Set objImportPage=nothing
	Set objClosePage=nothing
	Set objDataTableOutputColumn=Nothing
End Function

'This function is used to Export Fee/Field Rule
'Created by - Abhishek Gupta
'@code
'     BIZ_DDM_ExportFeeFieldRule (strRowID,strOption)
'@endcode
'@param
' strRowID - User should provide test data to create rule in Excel file DDM.xls 
' strOption - Should be either Fee or Field
Function BIZ_DDM_ExportFeeFieldRule(strRowId,strOption)
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	If strOption="Fee" Then
		Set objData = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
		strRuleName=FRM_DS_GetValue(objData, "FeeRuleName")
		FRM_Logger_ReportInfoEvent "Export fee rule to a location","Start exporting fee rule "&strRuleName, Null
		strFileName="DDM_DDMFeeRules_"&strRuleName&".zip"	
		Set	objRulesList=objSetupContainer.SwfObject("swfname:=gvFeeRulesList")		
	ElseIf strOption="Field" Then		
		Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID)
		strRuleName=FRM_DS_GetValue(objData, "RuleName")
		FRM_Logger_ReportInfoEvent "Export field rule to a location","Start exporting field rule "&strRuleName, Null
		strFileName="DDM_DDMFieldRules_"&strRuleName&".zip"
		Set	objRulesList=objSetupContainer.SwfObject("swfname:=listViewOptions")	
	End If
    '====================== Export Rule =========================	
	boolExists = GUI_List_ClickRow(objRulesList, objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
    If boolExists Then	
		GUI_SwfButton_Click objSetupContainer.SwfObject("swfname:=stdBtnExport")
		strAbsolutePath = Pathfinder.Locate("Test Report\") & strFileName
		Set objFile = CreateObject("Scripting.FileSystemObject")
		If objFile.FileExists(strAbsolutePath) Then
			objFile.DeleteFile(strAbsolutePath)
		End If
		GUI_WinEdit_Type 		Dialog("text:=Save As").WinEdit("nativeclass:=Edit","attached text:=File name:"), strAbsolutePath		
		GUI_WinButton_Click 	Dialog("text:=Save As").WinButton("text:=&Save")	
		FRM_Logger_ReportInfoEvent "Export rule to a location","Rule "&strRuleName&" has been exported at: "&Pathfinder.Locate("Test Report\"), Null
	Else	
		FRM_Logger_ReportInfoEvent "Export rule to a location","No rule "&strRuleName&" exists to export", Null
	End If 
	Set objFile = Nothing
	Set objSetupContainer= Nothing
	Set objData = Nothing
End Function

          
'This function is used to Import Fee/Field Rule
'Created by - Abhishek Gupta
'@code
'     BIZ_DDM_ImportFeeFieldRule (strRowID,strOption,strValidateDep)
'@endcode
'@param 
' strRowID - User should provide test data to import rule in Excel file DDM.xls and worksheet FeeRule
' strOption - Should be either Fee or Field
' strValidateDep - Whether validate dependency check is required. Should be either TRUE or FALSE
Function BIZ_DDM_ImportFeeFieldRule(strRowId,strOption,strValidateDep)
	Set objSetupContainer= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")		
	If strOption="Fee" Then
		Set objData = FRM_DS_GetTestData("DDM", "FeeRule", strRowID) 
		strRuleName=FRM_DS_GetValue(objData, "FeeRuleName")
		strFileName="DDM_DDMFeeRules_"&strRuleName&".zip"
		FRM_Logger_ReportInfoEvent "Import fee rule to a location","Start importing fee rule "&strRuleName, Null
		Set	objRulesList=objSetupContainer.SwfObject("swfname:=gvFeeRulesList")
	ElseIf strOption="Field" Then		
		Set objData = FRM_DS_GetTestData("DDM", "DDMFieldRule", strRowID)
		strRuleName=FRM_DS_GetValue(objData, "RuleName")
		strFileName="DDM_DDMFieldRules_"&strRuleName&".zip"
		FRM_Logger_ReportInfoEvent "Import field rule to a location","Start importing field rule "&strRuleName, Null
		Set	objRulesList=objSetupContainer.SwfObject("swfname:=listViewOptions")		
	End If    
    '====================== Import Rule =========================
	boolExists = GUI_List_ClickRow(objRulesList, objSetupContainer.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
    If Not boolExists Then	
		GUI_SwfButton_Click objSetupContainer.SwfObject("swfname:=stdBtnImport")		
		strAbsolutePath = Pathfinder.Locate("Test Report\") & strFileName
		Set objFile = CreateObject("Scripting.FileSystemObject")
		If objFile.FileExists(strAbsolutePath) Then
			GUI_Object_WaitTillExist objSetupContainer.Dialog("text:=Open").WinEdit("attached text:=File &name:","index:=0")
			GUI_WinEdit_Type objSetupContainer.Dialog("text:=Open").WinEdit("nativeclass:=Edit","attached text:=File &name:","index:=0"), strAbsolutePath
			GUI_WinButton_Click objSetupContainer.Dialog("text:=Open").Winbutton("text:=&Open")
			GUI_Dialog_Encompass_Click "4","One or more dependencies have failed validation","OK"
			'====check to validate dependencies before importing rule
			'Set objRuleImport= objSetupContainer.SwfWindow("swfname:=DDMRuleImportInfoDlg")
			Set objRuleImport= SwfWindow("swfname:=DDMRuleImportInfoDlg")
			strEnabled= GUI_Object_GetPropertyValue(objRuleImport.SwfButton("swfname:=importRule_btn"),"enabled")
			If strEnabled="False" Then
				If strValidateDep Then
					'Valdate Dependency=True i.e. verifying positive scenario
					FRM_Logger_ReportFailEvent "Validate dependencies on rule import","Rule "&strRuleName&" cannot be imported due to failed dependencies", Null
				Else
					'Valdate Dependency=False i.e. verifying negative scenario
					FRM_Logger_ReportPassEvent "Validate dependencies on rule import","Rule "&strRuleName&" cannot be imported due to failed dependencies", Null
				End If				
				GUI_SwfComboBox_Select objRuleImport.SwfComboBox("swfname:=filter_comboBox"), "View failed dependecies"
				rowCnt=GUI_List_GetRowCount(objRuleImport.SwfObject("swfname:=gvDependencies"),5,"Required")
				For i = 0 to rowCnt-1
					strScenarioName = GUI_List_GetCellData(objRuleImport.SwfObject("swfname:=gvDependencies"),i,1)
					strDependencyOn = GUI_List_GetCellData(objRuleImport.SwfObject("swfname:=gvDependencies"),i,2)
					strIdentifier   = GUI_List_GetCellData(objRuleImport.SwfObject("swfname:=gvDependencies"),i,3)				
					If strValidateDep Then
						'Valdate Dependency=True i.e. verifying positive scenario
						FRM_Logger_ReportFailEvent "Failed dependency "&i+1,"Scenario Name:'"&strScenarioName&"' ;Dependency On:'"&strDependencyOn&"' ;Identifier:'"&strIdentifier&"'", Null
					Else
						'Valdate Dependency=False i.e. verifying negative scenario
						FRM_Logger_ReportPassEvent "Failed dependency "&i+1,"Scenario Name:'"&strScenarioName&"' ;Dependency On:'"&strDependencyOn&"' ;Identifier:'"&strIdentifier&"'", Null
					End If
				Next
				GUI_SwfButton_Click objRuleImport.SwfButton("swfname:=cancel_btn")
			Else
				GUI_SwfButton_Click objSetupContainer.SwfWindow("swfname:=DDMRuleImportInfoDlg").SwfButton("swfname:=importRule_btn")
				GUI_Dialog_Encompass_Click "4","has been successfully imported","OK"
				FRM_Logger_ReportPassEvent "Rule import","Rule "&strRuleName&" has been successfully imported", Null
			End If
		Else
			FRM_Logger_ReportInfoEvent "Import rule to a location","No rule "&strFileName&" exists at location "&Pathfinder.Locate("Test Report\"), Null	
		End If	
	Else	
		FRM_Logger_ReportInfoEvent "Import rule to a location","Rule "&strRuleName&" to import already exists", Null
	End If 
	Set objFile = Nothing
	Set objSetupContainer= Nothing
	Set	objRulesList=Nothing
	Set objRuleImport=Nothing
	Set objData = Nothing
End Function
'@}
'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\DynamicDataManagement\DynamicDataManagement.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\eFolder\Documents.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Documents BIZ_eFolder_Documents
'List of functions:
'@code
'   Function BIZ_Documents_SendRequest(strRowID)
'   Function BIZ_Documents_VerifyDocumentExist(strRowID)
'   Function BIZ_Documents_DocumentManager_VerifyDocumentExist(strRowID)
'   Function BIZ_Documents_AddCondition(ConditionTab, ConditionName)
'   Function BIZ_Documents_SendeDisclosure(strSelectPackageTypeRowID, strSelectDisclosureDocRowID, strSendDisclosureRowID)
'   Function BIZ_Documents_SelectPackageTypeAndPlanCode(strRowID)
'   Function BIZ_Documents_AddPlanCode(strRowID)
'   Function BIZ_Documents_SelecteDisclosureDocs(strRowID)
'   Function BIZ_Documents_VerifyConditionExist(ConditionTab, strRowID)
'   Function BIZ_Documents_VerifyConditionInDocumentManagerExist(strRowID)
'   Function BIZ_Documents_SendeConsent(bolBorrower, bolCoBorrower)
'   Function BIZ_Documents_SetDocumentsStatus(strRowID)
'	Function BIZ_Documents_CloseeDisclosure()
'	Function BIZ_Documents_DocuSignSignDocument()
'	Function BIZ_Documents_SelectCheckBoxesOfAllDocuments(strMileStoneName)
'	Function BIZ_Document_SetDocumentStatusForMileStone(strMileStoneName)
'	Function BIZ_Documents_SelectCheckBoxesOfAllTasks(strMileStoneName)
'	Function BIZ_Document_AttachMandatoryDocuments(strMilestone)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for send request document
'@code
'    BIZ_Documents_SendRequest(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_SendRequest(strRowID)
        
    FRM_Logger_ReportInfoEvent "eFolder Documents Tab", "Send request document using Row Id '"&strRowID&"' in the Request datasheet", Null
    
	Set objData = FRM_DS_GetTestData("eFolder_Tab", "SetSendRequestData", strRowID) 
    GUI_SwfTab_Click SwfWindow("swfname:=eFolderDialog").SwfTab("swfname:=tabMain"), "Documents"
    GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnRequest")
    
    Dim objDoc, objDocScrollbar, objRequestWindow, objSendRequest, arrStrDocument
    'Add Document
    Set objRequestWindow = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=RequestBorrowerDialog")
    GUI_SwfObject_Click objRequestWindow.SwfObject("swfname:=btnAddDocument")
    Set objDoc = objRequestWindow.SwfWindow("swfname:=AddRequestDialog").SwfObject("swfname:=gvTemplates")
    Set objDocScrollbar = objRequestWindow.SwfWindow("swfname:=AddRequestDialog").SwfScrollBar("swfname:=vPanelScrollBar")
    arrStrDocument = Split(objData.Item("documents"), ";")
    objDoc.Type  micCtrlDwn
    
    For i=LBound(arrStrDocument) to UBound(arrStrDocument)
        GUI_List_ClickRow objDoc, objDocScrollbar, "Name", arrStrDocument(i), True, False, False, "Single"
    Next
    
    objDoc.Type  micCtrlUp
    GUI_SwfButton_Click objRequestWindow.SwfWindow("swfname:=AddRequestDialog").SwfButton("swfname:=btnAdd")
    GUI_Object_WaitTillEnabled objRequestWindow.SwfButton("swfname:=btnSend", "index:=0")
    
    'Send Request
    Wait g_LongWaitLarge+g_LongWaitLarge
	Set objSendRequest = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=RequestBorrowerDialog").SwfWindow("swfname:=SendRequestDialog")
	blnRequestScreenOpen = 1
	blnYesDisplayed = 1
	While (blnRequestScreenOpen = 1 and blnYesDisplayed = 1) 
		If(GUI_Object_IsExist(objRequestWindow.SwfButton("swfname:=btnSend", "index:=0")) and Not GUI_Object_IsExist(objSendRequest))Then 
			objRequestWindow.SwfButton("swfname:=btnSend", "index:=0").Highlight
			GUI_SwfButton_Click objRequestWindow.SwfButton("swfname:=btnSend", "index:=0")
			wait 10
		End If
		If(GUI_Object_IsExist(Dialog("text:=Encompass").WinButton("text:=&Yes")))Then 
			GUI_Dialog_Encompass_Click 2, "", "Yes"
			blnYesDisplayed = 0
			Wait g_TinyWaitMedium
		End If
		If(GUI_Object_IsExist(objSendRequest))Then
			blnRequestScreenOpen = 0
		End If
	Wend 
   	If(GUI_Object_IsExistX(SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=RequestBorrowerDialog").SwfWindow("swfname:=SendRequestDialog"), 180))Then
		
    	GUI_Dialog_Encompass_Click 20, "", "Yes"
	  
		If UTIL_String_IsNotEmpty(objData.Item("BorrowerSigningOption")) Then 
			GUI_SwfComboBox_Select objSendRequest.SwfComboBox("swfname:=cboSigningOption"), objData.Item("BorrowerSigningOption")
		End If 
    
		If UTIL_String_IsNotEmpty(objData.Item("Borrower")) Then 
			GUI_SwfEdit_Set objSendRequest.SwfEdit("swfname:=txtBorrower"), objData.Item("Borrower")
		End If
    
		If UTIL_String_IsNotEmpty(objData.Item("CoBorrower")) Then 
			GUI_SwfEdit_Set objSendRequest.SwfEdit("swfname:=txtCoborrower"), objData.Item("CoBorrower")
		End If
    
		If UTIL_String_IsNotEmpty(objData.Item("Subject")) Then 
			GUI_SwfEdit_Set objSendRequest.WinEdit("nativeclass:=Edit", "Location:=1"), objData.Item("Subject")
		End If 
    
		If UTIL_String_IsNotEmpty(objData.Item("AuthorizationMethod")) Then 
			GUI_List_Select objSendRequest.SwfComboBox("swfname:=cboAuthentication"), objData.Item("AuthorizationMethod")
		End If  
    
		If UTIL_String_IsNotEmpty(objData.Item("BorrowerAuthorizationCode")) Then 
			GUI_SwfEdit_Set objSendRequest.SwfEdit("swfname:=txtBorrPassword"), objData.Item("BorrowerAuthorizationCode")
		End If
    
		If UTIL_String_IsNotEmpty(objData.Item("CoBorrowerAuthorizationCode")) Then 
			GUI_SwfEdit_Set objSendRequest.SwfEdit("swfname:=txtCoBorrPassword"), objData.Item("CoBorrowerAuthorizationCode")
		End If 
    
		GUI_SwfButton_Click objSendRequest.SwfButton("swfname:=btnSend")
		'added for efolder prb by francesca
		wait 10
		If(GUI_Object_IsExist(objSendRequest.Dialog("text:=Encompass"))) Then 
			strMessage = GUI_Object_GetPropertyValue(objSendRequest.Dialog("text:=Encompass").Static("nativeclass:=Static","index:=1"), "text")
			If(InStr(strErrorMessage, "Originator eSignable") > 0) Then
				GUI_WinButton_Click objSendRequest.Dialog("text:=Encompass").WinButton("text:=&Yes")
				
			End If
		End If
		'''''
		GUI_Dialog_Encompass_Yes(Null)
		GUI_Dialog_Encompass_OK ""
		BIZ_Documents_SendRequest = 0
		If(GUI_Object_IsExist(objSendRequest.SwfWindow("swfname:=LoanCenterClient").Dialog("text:=Encompass"))) Then 
			strErrorMessage = GUI_Object_GetPropertyValue(objSendRequest.SwfWindow("swfname:=LoanCenterClient").Dialog("text:=Encompass").Static("nativeclass:=Static","index:=1"), "text")
			If(InStr(strErrorMessage, "error occurred") > 0) Then
				FRM_Logger_ReportFailEvent "e Disclosure", strErrorMessage  & " is displayed", Null
				GUI_WinButton_Click objSendRequest.SwfWindow("swfname:=LoanCenterClient").Dialog("text:=Encompass").WinButton("text:=OK")
				GUI_SwfButton_Click objSendRequest.SwfButton("text:=Cancel")
				GUI_SwfButton_Click objRequestWindow.SwfButton("swfname:=btnCancel")
				BIZ_Documents_SendRequest = 1
			End If
		Else
			While GUI_Object_IsExist(objSendRequest.SwfWindow("swfname:=LoanCenterClient"))
			Wend
	
			GUI_Dialog_Encompass_OK ""
	
			boolexist = GUI_Object_IsExistX(objSendRequest.SwfWindow("swfname:=DocuSignSigning"),10)
	
			If boolexist = True Then
				objSendRequest.SwfWindow("swfname:=DocuSignSigning").Close
			End If

			'This package includes one or more documents that require the Originator's eSignature. 
			'The originator, sven officer, will be notified via email. Originator eSignable Documents: 1003 - URLA '
			'GUI_Dialog_Encompass_OKX 20, ""
			GUI_Dialog_Encompass_OKX 90, "has been sent"
			BIZ_Documents_SendRequest = 0
		End If
	End If
    Set objRequestWindow = Nothing
    Set objDoc  = Nothing
    Set objData = Nothing   
    Set objDocScrollbar = Nothing
    Set objSendRequest  = Nothing
	
	GUI_Dialog_Encompass_OKX 50, ""
End Function



'This function is for verify Document exist in the Documents list 
'@code
'    BIZ_Documents_VerifyDocumentExist(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_VerifyDocumentExist(strRowID)

    Wait 20
    Dim objDocuments, arrStrDocument, boolExist, objData
    FRM_Logger_ReportInfoEvent "eFolder Documents Tab", "Verify document exist using Row Id '"&strRowID&"' in the VerifyDocument datasheet", Null

    ' documents listed in the Documents tab
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "VerifyDocumentExist", strRowID)
    Set objDocuments = SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvDocuments")
    arrStrDocument = Split(objData.Item("documents"), ";")
    
    For i=LBound(arrStrDocument) To UBound(arrStrDocument)
        boolExist = GUI_List_TextExists (objDocuments, "Name", arrStrDocument(i))
        FRM_VerifyTrue boolExist, "Verify Document Exist in eFolder documents tab", "Document: [" & arrStrDocument(i) & "] exist in the documents list"
    Next
     
    Set objDocuments = Nothing
    Set objData      = Nothing
    
End Function



'This function is for verify Document exist in the DocumentManager
'@code
'    BIZ_Documents_DocumentManager_VerifyDocumentExist(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_DocumentManager_VerifyDocumentExist(strRowID)
    
    Dim objDocList, arrStrDocument, objData
    FRM_Logger_ReportInfoEvent "eFolder Document Manager", "Verify document exist in Document Manager window using Row Id '"&strRowID&"' in the VerifyDocument datasheet", Null
    
    GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnDocuments")
    'documents listed in the Document Manager window
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "VerifyDocumentExist", strRowID)
    Set objDocList = SwfWindow("swfname:=AllDocumentsDialog").SwfObject("swfname:=gvDocuments")
    arrStrDocument = split(objData.Item("documents"), ";")
    
    For i=LBound(arrStrDocument) to UBound(arrStrDocument)
        boolExist = GUI_List_TextExists (objDocList, "Name", arrStrDocument(i))
        FRM_VerifyTrue boolExist, "Verify Document Exist in eFolder Document Manager window", "Document: [" & arrStrDocument(i) & "] exist in the documents list"
    Next
    GUI_SwfButton_Click SwfWindow("swfname:=AllDocumentsDialog").SwfButton("swfname:=btnClose")
     
    Set objDocList = Nothing
    Set objData    = Nothing
    
End Function



'This function is for add condition in condition Tab in Tools->eFolder Dialog
'@code
'    BIZ_Documents_AddCondition(strConditionTab, strConditionName)
'@endcode
'@param strConditionTab The Condition tab in Encompass360 eFolder
'@param strConditionName New add Condition Name

Function BIZ_Documents_AddCondition(strConditionTab, strConditionName)

    FRM_Logger_ReportInfoEvent "Add Condition", "Add a new condition '" & strConditionName & "' in the " & strConditionTab, Null

    GUI_SwfTab_Click SwfWindow("swfname:=eFolderDialog").SwfTab("swfname:=tabMain"), strConditionTab
    GUI_SwfObject_Click SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=btnNew")
    GUI_SwfRadioButton_Click SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=AddPreliminaryDialog").SwfRadioButton("swfname:=rdoNew")
    GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=AddPreliminaryDialog").SwfButton("swfname:=btnOK")

    Dim objConditionDetails

    Select Case strConditionTab
           Case "Preliminary Conditions" Set objConditionDetails = SwfWindow("swfname:=PreliminaryDetailsDialog")
           Case "Underwriting Conditions" Set objConditionDetails = SwfWindow("swfname:=UnderwritingDetailsDialog")
           Case "Post-Closing Conditions" Set objConditionDetails = SwfWindow("swfname:=PostClosingDetailsDialog")
    End Select

    GUI_SwfComboBox_Select objConditionDetails.SwfComboBox("swfname:=cboTitle"), strConditionName
    GUI_SwfButton_Click objConditionDetails.SwfButton("swfname:=btnClose")

    Set objConditionDetails = Nothing

End Function    



'This function is for send eDisclosure
'@code
'    BIZ_Documents_SendeDisclosure(strSelectPackageTypeRowID, strSelectDisclosureDocRowID, strSendDisclosureRowID)
'@endcode
'@param strSelectPackageTypeRowID
'@param strSelectDisclosureDocRowID
'@param strSendDisclosureRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_SendeDisclosure(strSelectPackageTypeRowID, strSelectDisclosureDocRowID, strSendDisclosureRowID)
    
    FRM_Logger_ReportInfoEvent "eFolder Documents Tab", "Send disclosure document using Row Id '"&strSendDisclosureRowID&"' in the Disclosure datasheet", Null
    
    GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnDisclosures")
    
    Dim objSendeDisclosure, objPlanCodeConfict, objEncompassDlg, objSelectDocument
    
    Set objSendeDisclosure = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog")
    Set objPlanCodeConfict = objSendeDisclosure.SwfWindow("swfname:=PlanCodeConflictDialog")
    Set objEncompassDlg = objPlanCodeConfict.Dialog("index:=0")    
    
    BIZ_Documents_SelectPackageTypeAndPlanCode strSelectPackageTypeRowID
    
    '========= Click Order eDisclosure button ==========
    GUI_SwfButton_Click objSendeDisclosure.SwfButton("swfname:=processBtn") 
    
	'========== Optional Message - This borrower pair has already received all of available disclosures.  Would you like to send them again? ==========
    GUI_Dialog_Encompass_YesX 15, ""
			
    '========= Plan Code Conflict, Some values in the selected plan code do not match the values in this loan. ==========
    If GUI_Object_IsExistX(objPlanCodeConfict,30) Then
       '========== Click Skip Import button ==========
       GUI_SwfButton_Click objPlanCodeConfict.SwfButton("swfname:=btnSkipImport")
       '========== Are you sure you want to apply the Plan code without importing... ==========
       GUI_WinButton_Click objEncompassDlg.WinButton("micclass:=WinButton","text:=&Yes")
    End If
		
    '========== "Order eDisclosures" button ==========
    If GUI_Object_IsExistX(SwfWindow("swfname:=AuditDialog"), 60) Then
        GUI_SwfButton_Click SwfWindow("swfname:=AuditDialog").SwfButton("swfname:=orderBtn")
    End If
    Wait 5
		
	'===== Adding this part to handle the Print Rule Dialog, after clicking on print button, we can proceed further ====
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm"),60) Then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfButton("swfname:=btn_print")
	End If
    
	GUI_Dialog_Encompass_OKX 50,""
	
    If GUI_Object_IsExistX(SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog"), 300) Then
       Set objSelectDocument = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog")
    ElseIf GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectionDialog"), 300) Then
       Set objSelectDocument = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectionDialog")
    End If
    
    bflag=False
    
    Set objFormFailureParent=objSelectDocument.SwfWindow("swfname:=.*ErrorDialog")
    
    If objFormFailureParent.Exist(2) Then
    	
    	
   
		Set objFormFailure=objFormFailureParent.ChildObjects(oDesc)(0)
		
		
		For i = 1 To (objFormFailure.Object.Items.count/5)
			if instr(objFormFailure.Object.Items.Item(i+((i-1)*5)).SubItems.Item(1).text,strFormType) then 
				bflag=True
			
		 		FRM_Logger_ReportFailEvent "Verify PDF Preview window","Form failure received for "&strFormType, Null
				Exit for
			End If
		Next 
		
		If not(bflag) Then
			objFormFailureParent.SwfButton("swfname:=btnClose").Click
		End If
	
 End If
  

    
    GUI_Object_WaitTillVisible objSelectDocument.SwfButton("swfname:=btnAddDocs")
    
    '============ Select the sent eDisclosure documents ============
    BIZ_Documents_SelecteDisclosureDocs strSelectDisclosureDocRowID
    GUI_SwfButton_Click objSelectDocument.SwfButton("swfname:=btnSend")
    
	'Handles optonal popup 
	'There are documetns included in this request that have Loan Originator signing points, but a Loan Originator is not 
	'currently assigned to the loan.  Do you want to continue?
	GUI_Dialog_Encompass_YesX 150, ""
	
    Dim objSend, objData    
    Set objSend = SwfWindow("swfname:=SendDisclosuresDialog")
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strSendDisclosureRowID)

	If GUI_Object_IsExistX(objSend.SwfCheckBox("swfname:=chkFulfillment"), 10) Then
		GUI_SwfCheckBox_Set objSend.SwfCheckBox("swfname:=chkFulfillment"), "OFF"
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Borrower"))Then
       GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtBorrower"), FRM_DS_GetValue(objData, "Borrower")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrower"))Then
       GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtCoborrower"), FRM_DS_GetValue(objData, "CoBorrower")
    End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SigningOption"))Then
	   GUI_SwfComboBox_Select objSend.SwfComboBox("swfname:=cboSigningOption"), FRM_DS_GetValue(objData, "SigningOption")
	End If
	
	If UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "SigningOption"))Then
	
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AuthenticationMethod"))Then
		  GUI_SwfComboBox_Select objSend.SwfComboBox("swfname:=cboAuthentication"), FRM_DS_GetValue(objData, "AuthenticationMethod")
	   End If
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerCode"))Then
		  GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtBorrPassword"), FRM_DS_GetValue(objData, "BorrowerCode")
	   End If
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrowerCode")) and _
		  GUI_Object_IsExistX(objSend.SwfEdit("swfname:=txtCoBorrPassword"), 10) Then
		  
		  If GUI_Object_GetPropertyValue(objSend.SwfEdit("swfname:=txtCoBorrPassword"), "enabled") Then
			 GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtCoBorrPassword"), FRM_DS_GetValue(objData, "CoBorrowerCode")
		  End If	
	   End If
		
	End If
   	
	'========== Log email text ============
	FRM_Logger_ReportInfoEvent "Email text to "&objSend.SwfEdit("swfname:=txtBorrower").GetROProperty("text"), objSend.Page("index:=0").WebTable("index:=0").GetROProperty("outertext"), Null
	
    GUI_SwfButton_Click objSend.SwfButton("swfname:=btnSend")
	'========== This package includes one or more documents that you must eSign before you can retrieve the borrower-signed documents. 
	'========== It is strongly recommended that you sign prior to the borrowers. Click "Yes" to apply your eSignature to the documents now. 
	'========== Click "No" to receive an email with a link to a secure website where you can eSign later. Originator eSignable Documents: 1003 - URLA
    GUI_Dialog_Encompass_Click 30, "", "No"
    '========== Message - The disclosure package has been sent to the borrower '==========
	If(objSend.Dialog("text:=Encompass").Exist(60)) Then
		objSend.Dialog("text:=Encompass").Highlight
		If(objSend.Dialog("text:=Encompass").WinButton("text:=OK").Exist(1) or objSend.Dialog("text:=Encompass").WinButton("text:=Cancel").Exist(1)) Then
			objSend.Dialog("text:=Encompass").WinButton("text:=OK").Highlight 
			objSend.Dialog("text:=Encompass").WinButton("text:=OK").Click
			
		End If
	End If
    'GUI_Dialog_Encompass_Click 60, "", "OK"

	If(GUI_Object_IsExist(objSend.SwfWindow("swfname:=LoanCenterClient").Dialog("text:=Encompass"))) Then 
	   strErrorMessage = GUI_Object_GetPropertyValue(objSend.SwfWindow("swfname:=LoanCenterClient").Dialog("text:=Encompass").Static("nativeclass:=Static","index:=1"), "text")
	   
	   If(InStr(strErrorMessage, "error occurred") > 0) Then
		  FRM_Logger_ReportFailEvent "e Disclosure", strErrorMessage  & " is displayed", Null
		  GUI_WinButton_Click objSend.SwfWindow("swfname:=LoanCenterClient").Dialog("text:=Encompass").WinButton("text:=OK")
	      GUI_SwfButton_Click objSend.SwfButton("text:=Cancel")
		  GUI_SwfButton_Click objSelectDocument.SwfButton("swfname:=btnCancel")
		  BIZ_Documents_SendeDisclosure = 1
	   ElseIf GUI_Object_IsExistX(SwfWindow("swfname:=SendDisclosuresDialog").Dialog("Micclass:=Dialog"), 160) Then
			SwfWindow("swfname:=SendDisclosuresDialog").Dialog("Micclass:=Dialog").Highlight
			If(SwfWindow("swfname:=SendDisclosuresDialog").Dialog("Micclass:=Dialog").Exist(1)) Then 
				strDialogText =  SwfWindow("swfname:=SendDisclosuresDialog").Dialog("Micclass:=Dialog").Static("index:=1").GetROProperty("text")
				If(InStr(strDialogText, "has been sent") > 0) Then
					FRM_Logger_ReportPassEvent "Send eDisclosure",strDialogText, Null
					BIZ_Documents_SendeDisclosure = 0
				End If
   			End If
			GUI_WinButton_Click SwfWindow("swfname:=SendDisclosuresDialog").Dialog("Micclass:=Dialog").WinButton("text:=OK")
		
			If GUI_object_IsExist(objSelectDocument) Then
				GUI_SwfButton_Click objSelectDocument.SwfButton("swfname:=btnCancel")
			End If
		ElseIf(GUI_Object_IsExist(SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog").SwfWindow("swfname:=SendDisclosuresDialog").Dialog("text:=Encompass"))) Then
   			Set objeDisclosureDialog = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog").SwfWindow("swfname:=SendDisclosuresDialog")
			GUI_Object_ValidateText objeDisclosureDialog.Dialog("Micclass:=Dialog").Static("index:=1") , "The disclosure package has been sent to the borrower.", Null  
   			GUI_WinButton_Click objeDisclosureDialog.Dialog("Micclass:=Dialog").WinButton("text:=OK")
			BIZ_Documents_SendeDisclosure = 0
			If GUI_object_IsExist(objSelectDocument) Then
				GUI_SwfButton_Click objSelectDocument.SwfButton("swfname:=btnCancel")
			End If
		End If
	End If
	GUI_Dialog_Encompass_Click 60, "", "OK"

    Set objSendeDisclosure = Nothing
    Set objPlanCodeConfict = Nothing
    Set objEncompassDlg    = Nothing
    Set objSelectDocument  = Nothing
    Set objSend = Nothing
    Set objData = Nothing
    
End Function    



'This function is for select Package Type and Plan Code
'@code
'    BIZ_Documents_SelectPackageTypeAndPlanCode(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_SelectPackageTypeAndPlanCode(strRowID)
    
    FRM_Logger_ReportInfoEvent "Select Package Type and Plan Code", "Select Package Type and Plan Code using Row Id '"&strRowID&"' in the PackageTypeAndPlanCode datasheet", Null
    
    Dim objSendeDisclosure, objPackageType, objPlanCodesList, objData, isFound
    Set objSendeDisclosure = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog")
    Set objPackageTypeList = objSendeDisclosure.SwfObject("swfname:=gvOptions") 
    Set objPlanCodesList = objSendeDisclosure.SwfObject("swfname:=gvPlanCodes")
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "SelectPackageTypeAndPlanCode", strRowID)
    
    '====== Select Package Type =======
    If GUI_Object_IsExistX(objPackageTypeList, 20) Then
        GUI_List_ClickCheckbox objPackageTypeList, Null, objData.Item("PackageType"), 1, False, False, "Single", True
    End If
    
    Wait g_TinyWaitSmall
    '========== Select the plan code (if not exist add the plan code) ==========
    GUI_SwfButton_Click objSendeDisclosure.SwfButton("swfname:=btnClearFilter")
	Wait g_TinyWaitMedium
	GUI_List_ClickOnCell objPlanCodesList, objPlanCodesList.SwfScrollBar("swfname:=vPanelScrollBar"), 2, 1, True, True, False, "Single"
    isFound = GUI_List_ClickRow(objPlanCodesList, objPlanCodesList.SwfScrollBar("swfname:=vPanelScrollBar"), 1, objData.Item("PlanCodeDescrition"), True, True, False, "Single")
    
    If Not isFound Then
           GUI_SwfObject_Click objSendeDisclosure.SwfObject("swfname:=btnAddPlanCode")
           BIZ_Documents_AddPlanCode strRowID
    End If
    
	If UTIL_String_IsNotEmpty(objData.Item("BorrowerPair"))Then
       GUI_SwfComboBox_Select objSendeDisclosure.SwfComboBox("swfname:=cboBorrowerPairs"), objData.Item("BorrowerPair")
    End If 

    Set objSendeDisclosure = Nothing
    Set objPlanCodesList   = Nothing
    Set objData = Nothing
    
End Function



'This function is for select Package Type and Plan Code
'@code
'    BIZ_Documents_AddPlanCode(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_AddPlanCode(strRowID)
    
    FRM_Logger_ReportInfoEvent "Add Plan Code", "Add Plan Code using Row Id '"&strRowID&"' in the SelectPlanCode datasheet", Null
    
    Dim objSendeDisclosure, objSelectPlanCode, objSelectCodeList, objSelectScrollbar, objData
    
    Set objSendeDisclosure = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog")
    Set objSelectPlanCode = objSendeDisclosure.SwfWindow("swfname:=PlanCodeSelectListAddDialog")
    Set objSelectCodeList = objSelectPlanCode.SwfObject("swfname:=gvPlanCodes")
    Set objSelectScrollbar = objSelectPlanCode.SwfScrollBar("swfname:=vPanelScrollBar")
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "SelectPlanCode", strRowID)
    
    GUI_SwfComboBox_Select objSelectPlanCode.SwfComboBox("swfname:=cboInvestor"), objData.Item("SelectInvestor")
    GUI_List_ClickRow objSelectCodeList, objSelectScrollbar, 1, objData.Item("PlanCodeDescrition"), True, True, False, "Single"
    GUI_SwfButton_Click objSelectPlanCode.SwfButton("swfname:=btnAddPlans")
    GUI_WinButton_Click objSelectPlanCode.Dialog("index:=0").WinButton("micclass:=WinButton","text:=&Yes")
    
    Set objSendeDisclosure = Nothing
    Set objSelectPlanCode  = Nothing
    Set objSelectCodeList  = Nothing
    Set objSelectScrollbar = Nothing
    Set objData = Nothing
    
End Function



'This function is for select eDisclosure documents
'@code
'    BIZ_Documents_SelecteDisclosureDocs(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_SelecteDisclosureDocs(strRowID)
    bflag=False
    FRM_Logger_ReportInfoEvent "Select eDisclosure documents", "Select eDisclosure documents using Row Id '"&strRowID&"' in the SelectPlanCode datasheet", Null
        
    Dim objSelectDocument, objDocsList, objDocScroll, objAddAditionalDocs, obAdditionaljDocumentList,_
    obAdditionaljDocScrollbar, objData, arrDocs, isFound
             
    If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectionDialog").Exist(20) Then
       Set objSelectDocument = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectionDialog")
    ElseIf SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog").Exist(20) Then
       Set objSelectDocument = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog")
    End If
    
    Set objDocsList = objSelectDocument.SwfObject("swfname:=gvDocuments")
    Set objDocScroll = objSelectDocument.SwfScrollBar("swfname:=vPanelScrollBar")
    Set objAddAditionalDocs = objSelectDocument.SwfWindow("swfname:=PdfDocumentSelectionDialog")
    Set obAdditionaljDocumentList = objAddAditionalDocs.SwfObject("swfname:=gvForms")
    Set obAdditionaljDocScrollbar = objAddAditionalDocs.SwfScrollBar("swfname:=vPanelScrollBar")
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "SelecteDisclosureDocs", strRowID)
   
    'Un-check all documents before clicking on "Add Additional Docs"
	For i = 0 To objDocsList.Object.Items.Count - 1
		objDocsList.Object.Items.Item(i).Subitems.Item(2).Checked = False
	Next
	'l = -1
	't = -1
	'r = -1
	'b = -1	
	'boolResult = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog").SwfObject("swfname:=gvDocuments").GetTextLocation("Document Title", l, t,r, b)
	'example - l=53, t=3, r=120, b=16
	'GUI_SwfObject_ClickXY objDocsList, l-7, (t+b)/2
    
    arrDocs = Split(objData.Item("Docs"), ";")
    
    For i = LBound(arrDocs) to UBound(arrDocs)
        isFound = GUI_List_ClickRow(objDocsList, objDocScroll, "Document Title", arrDocs(i), True, False, False,"Single")
        
        If Not isFound Then
               GUI_SwfButton_Click objSelectDocument.SwfButton("swfname:=btnAddDocs")
               
		       If UTIL_String_IsNotEmpty(objData.Item("BorrowerPair"))Then
        		  GUI_SwfComboBox_Select objAddAditionalDocs.SwfComboBox("swfname:=cboFormBorrower"), objData.Item("BorrowerPair")
	           End If 
	           
               GUI_List_ClickRow obAdditionaljDocumentList, obAdditionaljDocScrollbar, 0, arrDocs(i), True, False, False, "Single"  
               GUI_SwfButton_Click objAddAditionalDocs.SwfButton("swfname:=btnAdd")
               
               If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm"), 5) Then
		          GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfButton("swfname:=btnCompleteFields")
				  GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfWindow("swfname:=FieldQuickEditForm").SwfEdit("swfname:=b_748"), Date
				  GUI_SwfButton_click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfWindow("swfname:=FieldQuickEditForm").SwfButton("swfname:=btnOK")
				  GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfButton("swfname:=btn_print")
				  Wait 5
	    	   End If

               If GUI_Object_IsExist(objSelectDocument.Dialog("text:=Encompass Docs")) Then
                  '====== The selected document(s) have been added to the list based on the current stacking order ... ====== 
                  GUI_WinButton_Click objSelectDocument.Dialog("text:=Encompass Docs").WinButton("text:=OK")
               End If
        Else
               objDocsList.Object.SelectedItems.Item(0).SubItems.Item(2).Checked = True
        End If
    Next
    
   
	
    
    Set objSelectDocument         = Nothing
    Set objDocsList               = Nothing
    Set objDocScroll              = Nothing
    Set objAddAditionalDocs       = Nothing
    Set obAdditionaljDocumentList = Nothing
    Set obAdditionaljDocScrollbar = Nothing
    Set objData                   = Nothing
    
End Function



'This function is for check if previously added condition appear in condition list of eFolder condition tab 
'@code
'    BIZ_Documents_VerifyConditionExist(strRowID)
'@endcode
'@param strConditionTab Verify which condition tab exist
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_VerifyConditionExist(strConditionTab, strRowID)
    
    FRM_Logger_ReportInfoEvent "eFolder Condition Tab", "Verify Condition exist using Row Id '"&strRowID&"' in the " & strConditionTab, Null
    
    GUI_SwfTab_Click SwfWindow("swfname:=eFolderDialog").SwfTab("swfname:=tabMain"), strConditionTab
    
    Dim objConditionList, objData, boolExist, arrStrConditionName, i    
    Set objConditionList = SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvConditions")
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "VerifyConditionExist", strRowID)
    arrStrConditionName = Split(objData.Item("Condition Name"), ";")

    For i=LBound(arrStrConditionName) to UBound(arrStrConditionName)
        boolExist = GUI_List_TextExists (objConditionList, "Name", arrStrConditionName(i))
        FRM_VerifyTrue boolExist, "Verify Condition Exist in eFolder condition tab", "Condition: [" & arrStrConditionName(i) & "] exist in the Condition list"
    Next

    Set objConditionList = Nothing
    Set objData          = Nothing

End Function



'This function is for check if previously added condition appear in condition list of Document Manager
'@code
'    BIZ_Documents_VerifyConditionInDocumentManagerExist(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_VerifyConditionInDocumentManagerExist(strRowID)
    
    FRM_Logger_ReportInfoEvent "Condition In Document Manager", "Verify Condition In Document Manager exist using Row Id '"&strRowID&"' in the" & ConditionTab, Null
    
    Dim objConditionList, objData, boolExist, arrStrConditionName, i

    GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnDocuments")
    GUI_Object_ValidateProperty SwfWindow("swfname:=AllDocumentsDialog").SwfComboBox("swfname:=cboCondType"), "selection", "Preliminary", "Conditions"

    Set objConditionList = SwfWindow("swfname:=AllDocumentsDialog").SwfObject("swfname:=gvConditions")
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "VerifyConditionExist", strRowID)

    arrStrConditionName = Split(objData.Item("Condition Name"), ";")

    For i=LBound(arrStrConditionName) to UBound(arrStrConditionName)
        boolExist = GUI_List_TextExists (objConditionList, "Name", arrStrConditionName(i))
        FRM_VerifyTrue boolExist, "Verify Condition Exist in Document Manager", "Condition: [" & arrStrConditionName(i) & "] exist in the Condition list of Document Manager"
    Next

    GUI_SwfButton_Click SwfWindow("swfname:=AllDocumentsDialog").SwfButton("swfname:=btnClose")

    Set objConditionList = Nothing
    Set objData          = Nothing

End Function



'This function is to send eConsent to Borrower or CoBorrower
'@code
'    BIZ_Documents_SendeConsent(bolBorrower, bolCoBorrower)
'@endcode
'@param bolBorrower send to Borrower 
'@param bolCoBorrower send to CoBorrower 

Function BIZ_Documents_SendeConsent(bolBorrower, bolCoBorrower)

    FRM_Logger_ReportInfoEvent "Send eConsent", "Send to Borrower-"&bolBorrower&", CoBorrower-"&bolCoBorrower, Null
   
    GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnConsent")
	
	If(GUI_Object_isExist(SwfWindow("swfname:=eFolderDialog").Dialog("text:=Application Error"))) Then 
	   SwfWindow("swfname:=eFolderDialog").Dialog("text:=Application Error").WinButton("text:=&Ignore").Click
	   FRM_Logger_ReportFailEvent "Send eConsent", "Application Error is displayed", Null
	Else
	   If SwfWindow("swfname:=SendConsentRequestDialog").Exist(1) Then
		  Set objSendeConsent = SwfWindow("swfname:=SendConsentRequestDialog")
	   Else
		  Set objSendeConsent = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=SendConsentRequestDialog")
	   End If
	
	   If bolBorrower = True Then
		  GUI_SwfCheckbox_Set objSendeConsent.SwfCheckbox("swfname:=chkBorrName"),"ON"
	   End IF

	   If bolCoBorrower = True Then
		  GUI_SwfCheckbox_Set objSendeConsent.SwfCheckbox("swfname:=chkCoBorrName"),"ON"
	   End If

	   If objSendeConsent.SwfCheckbox("swfname:=chkNboName").Exist(2) Then
		  GUI_SwfCheckbox_Set objSendeConsent.SwfCheckbox("swfname:=chkNboName"),"ON"
	   End If

	   GUI_SwfButton_Click objSendeConsent.SwfButton("swfname:=btnSend")
	
	   Set objSendeConsent = nothing
	End If
	
End Function



'This function is to Set status for all the documents
'@code
'    BIZ_Documents_SetDocumentsStatus(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_SetDocumentsStatus(strRowID)

	FRM_Logger_ReportInfoEvent "Set Documents Status", "Set Documents Status on the eFolder->Documents Tab using using Row Id '"&strRowID&"' in the SetDocumentsStatus datasheet", Null
    
    If not GUI_Object_isExist(SwfWindow("swfname:=eFolderDialog")) Then
    	   BIZ_Nav_eFoler_Open
    End If
	
	Dim objDocumentsList,objScrolBar,objData,arrStrStatus,objDocumentDetails
	Set objDocumentsList =  SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvDocuments")
	Set objScrollBar     =  SwfWindow("swfname:=eFolderDialog").SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData          = FRM_DS_GetTestData("eFolder_Tab","SetDocumentsStatus",strRowID)

    'Select the Document Group
	GUI_SwfComboBox_Select SwfWindow("swfname:=eFolderDialog").SwfComboBox("swfname:=cboDocumentGroup"),FRM_DS_GetValue(objData,"DocumentGroup")	
	arrStrStatus=Split(FRM_DS_GetValue(objData,"Status"),";")
	
	'Open every Document below the Document Group and check every checkbox of Status Array(In the Test data eFolder_Tab->SetDocumentsStatus, the Status using ";" as delimeter, such as "Received;Reviewed")
	For i = 0 To objDocumentsList.Object.Items.Count - 1 
		Wait g_TinyWaitMedium
		GUI_List_ClickOnCell  objDocumentsList,objScrollBar,i,2,True,True,False,"Double"
		Wait g_TinyWaitSmall
		Set objDocumentDetails = SwfWindow("swfname:=DocumentDetailsDialog")
		If GUI_Object_IsExist(objDocumentDetails) Then 
			objDocumentDetails.Maximize
		
			For j = 0 To UBound(arrStrStatus)
				Select Case arrStrStatus(j)
		    	   Case "Requested"
		    	        GUI_SwfCheckBox_Set objDocumentDetails.SwfCheckBox("swfname:=chkRequested"),"ON"
		    	   Case "Re-requested"
		    	        GUI_SwfCheckBox_Set objDocumentDetails.SwfCheckBox("swfname:=chkRerequested"),"ON"
		    	   Case "Received"  
		    	        GUI_SwfCheckBox_Set objDocumentDetails.SwfCheckBox("swfname:=chkReceived"),"ON"
		    	   Case "Reviewed"
		    	        GUI_SwfCheckBox_Set objDocumentDetails.SwfCheckBox("swfname:=chkReviewed"),"ON"
		    	   Case "Ready for UW"
		    	        GUI_SwfCheckBox_Set objDocumentDetails.SwfCheckBox("swfname:=chkUnderwritingReady"),"ON"
		    	   Case "Ready for Ship"
		    	        GUI_SwfCheckBox_Set objDocumentDetails.SwfCheckBox("swfname:=chkShippingReady"),"ON"
				End Select
			Next
     
			GUI_SwfButton_Click objDocumentDetails.SwfButton("swfname:=btnClose")
		End If
	Next
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "UserRole")) And UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "UserName")) Then
	   GUI_SwfObject_Click objDocumentDetails.SwfObject("swfname:=btnReceivedBy")
	   Set UserSelectionDialog = objDocumentDetails.SwfWindow("swfname:=UserSelectionDialog")
       GUI_SwfComboBox_Select UserSelectionDialog.SwfComboBox("swfname:=cboRole"), FRM_DS_GetValue(objData, "UserRole")
       Set objAvailableUsers  = UserSelectionDialog.SwfObject("swfname:=gvUsers")
	   Set objScrollBar = objAvailableUsers.SwfScrollBar("swfname:=vPanelScrollBar")
	   GUI_List_ClickRow objAvailableUsers, objScrollBar, 0, FRM_DS_GetValue(objData, "UserName"), True, False, False, "Single"
	   GUI_SwfButton_Click UserSelectionDialog.SwfButton("swfname:=btnOK")
	   
	   Set UserSelectionDialog = Nothing
	   Set objScrollBar        = Nothing
	   Set objAvailableUsers   = Nothing
	End If

    Set objDocumentDetails = Nothing 
    Set objDocumentsList   = Nothing
    Set objScrollBar       = Nothing
    Set objData            = Nothing
End Function



'This function is to close the eDisclosure window
'@code
'    BIZ_Documents_CloseeDisclosure()
'@endcode

Function BIZ_Documents_CloseeDisclosure()

	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog").SwfButton("swfname:=cancelBtn"), 120) Then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog").SwfButton("swfname:=cancelBtn")
	End If
	
	wait g_TinyWaitLarge
	GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnClose")
	
End Function



'This function is to process signing document for DocuSign
'@code
'    BIZ_Documents_DocuSignSignDocument()
'@endcode

Function BIZ_Documents_DocuSignSignDocument()

        FRM_Logger_ReportInfoEvent "eSign Document", "User is going to sign DocuSign document",Null 
        Set objDocuSign = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=RequestBorrowerDialog").SwfWindow("swfname:=SendRequestDialog").SwfWindow("swfname:=DocuSignSigning")
	    
	    If objDocuSign.Page("title:=.*").WebButton("html id:=action-bar-btn-continue","innertext:=Next","index:=0").Exist(10) Then
		   objDocuSign.Page("title:=.*").WebButton("html id:=action-bar-btn-continue","innertext:=Next","index:=0").Click
		End If
		
		If objDocuSign.Page("title:=.*").WebButton("html id:=.*navnexttext.*","innertext:=START","index:=0").Exist(10) Then
		   objDocuSign.Page("title:=.*").WebButton("html id:=.*navnexttext.*","innertext:=START","index:=0").Click
		End If
			
		k = 0
		n = 0
		Do
			If objDocuSign.Page("title:=.*").Frame("html id:=signingIframe").Image("title:=Sign Here","index:=" & k).Exist(4) Then
			   objDocuSign.Page("title:=.*").Frame("html id:=signingIframe").Image("title:=Sign Here","index:=" & k).Click
			   Wait g_TinyWaitLarge
				k = k + 1
			Else
                Exit Do	
			End If	

            If objDocuSign.Page("title:=.*").WebButton("name:=ADOPT AND SIGN","index:=0").Exist(4) Then
               objDocuSign.Page("title:=.*").WebButton("name:=ADOPT AND SIGN","index:=0").Click
   			   Wait g_TinyWaitLarge
            End If
            
	        If objDocuSign.Page("title:=.*").WebButton("html id:=action-bar-bottom-btn-finish","innertext:=FINISH").Exist(5) Then	
			   objDocuSign.Page("title:=.*").WebButton("html id:=action-bar-bottom-btn-finish","innertext:=FINISH").Click    
			   FRM_Logger_ReportPassEvent "eSign Document", "DocuSign Document Signed",Null 
			   Exit Do
			Else
	                FRM_Logger_ReportFailEvent "eSign Document", "DocuSign Document NOT Signed",Null 		
			End If
            
		    n = n + 1
		    If n > 15  Then
		       Exit do
		    End If
		Loop 
	
End Function



'This function is used to attach documents for the list of documents
'@code
'    BIZ_Documents_AttachDocuments(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Documents_AttachDocuments(strRowID)

	FRM_Logger_ReportInfoEvent "Attached Documents", "Attach Documents for the list of documents", Null
    
    If Not GUI_Object_isExist(SwfWindow("swfname:=eFolderDialog")) Then
    	   BIZ_Nav_eFoler_Open
    End If
	
	Dim objDocumentsList,objScrolBar,objData,arrStrStatus,objDocumentDetails
	Set objDocumentsList = SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvDocuments")
	Set objScrollBar     = SwfWindow("swfname:=eFolderDialog").SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData          = FRM_DS_GetTestData("eFolder_Tab","AttachDocuments",strRowID)

    'Select the Document Group
	GUI_SwfComboBox_Select SwfWindow("swfname:=eFolderDialog").SwfComboBox("swfname:=cboDocumentGroup"),FRM_DS_GetValue(objData,"DocumentGroup")	
		
	'Open every Document below the Document Group and check every checkbox of Status Array(In the Test data eFolder_Tab->SetDocumentsStatus, the Status using ";" as delimeter, such as "Received;Reviewed")
	For i = 0 To objDocumentsList.Object.Items.Count - 1 
		GUI_List_ClickOnCell  objDocumentsList,objScrollBar,i,2,True,True,False,"Double"
		Set objDocumentDetails = SwfWindow("swfname:=DocumentDetailsDialog")
		If(objDocumentDetails.Exist) Then 
			objDocumentDetails.Maximize
			objDocumentDetails.SwfObject("swfname:=btnAttachBrowse").Click
			Wait g_TinyWaitHigh
			GUI_SwfEdit_Set SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinEdit("attachedtext:=File &name:","nativeclass:=Edit"), FRM_RT_DataDirPath()
     	    GUI_SwfButton_Click SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinButton("text:=&Open")
	        Wait g_TinyWaitHigh
			GUI_WinEdit_Set objDocumentDetails.Dialog("text:=Browse and Attach").WinEdit("attachedtext:=File &name:","nativeclass:=Edit"), FRM_DS_GetValue(objData,"DocumentName")
			GUI_WinButton_Click objDocumentDetails.Dialog("text:=Browse and Attach").WinButton("text:=&Open")
 			Wait g_TinyWaitHigh
			GUI_SwfButton_Click objDocumentDetails.SwfButton("swfname:=btnClose")
			Wait g_TinyWaitHigh
		End If
	Next
	
	Set objDocumentDetails = Nothing 
    Set objDocumentsList   = Nothing
    Set objScrollBar       = Nothing
    Set objData            = Nothing
    
End Function



'This function is used to attach documents for the list of documents
'@code
'    BIZ_Documents_VerifyDocumentStatus(strDocumentName, strDocumentStatus)
'@endcode
'@param strDocumentName The document that needs to be verified
'@param strDocumentStatus - Status of the document

Function BIZ_Documents_VerifyDocumentStatus(strDocumentName, strDocumentStatus)

	If Not GUI_Object_isExist(SwfWindow("swfname:=eFolderDialog")) Then
		   BIZ_Nav_eFoler_Open()
	End If

	StatusColIndex = GUI_List_GetColumnIndex(SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvDocuments"),"Status")
	CountOfReceivedDocuments = 0
	RowCount = GUI_List_GetNumberofRows(SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvDocuments"))
	
	For RowNumber = 0 To RowCount-1 Step 1
		DocumentNumber =  GUI_List_GetCellData(SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvDocuments"), RowNumber,2)
		DocumentStatus = GUI_List_GetCellData(SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvDocuments"), RowNumber, StatusColIndex)
		
		If(InStr(DocumentNumber,strDocumentName) > 0 and InStr(DocumentStatus, strDocumentStatus) > 0) Then 
		   FRM_Logger_ReportPassEvent "In e-folder you can see the attachment for the title with received status.", "all three title orders must have received status", Null
		   CountOfReceivedDocuments = CountOfReceivedDocuments + 1
		   Exit For
		End If
	Next
 
	If(CountOfReceivedDocuments > 0)Then
	   BIZ_Documents_VerifyDocumentStatus = True
	Else
	   BIZ_Documents_VerifyDocumentStatus = False
	End If
	
	BIZ_Nav_eFoler_Close()
	
End Function



'This function is used to select the check boxes of all the documents for milestone
'@code
'    BIZ_Documents_SelectCheckBoxesOfAllDocuments(strMileStoneName)
'@endcode
'@param strMileStoneName - Name of the Milestone

Function BIZ_Documents_SelectCheckBoxesOfAllDocuments(strMileStoneName)

	FRM_Logger_ReportInfoEvent "Select the documents of Milestone", "Check the all check boxes of all Documents under documents section", Null
	BIZ_AlertsAndLog_ClickOnRecord "Log", strMileStoneName

	Set objList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridViewDocs")
	objList.Highlight
	RowCount = GUI_List_GetNumberofRows(objList)
	
	For RowNumber = 0 To RowCount-1 Step 1
		GUI_List_SelectCheckBoxinCell objList, 1, RowNumber
	Next
	
End Function



'This function is used to select the check boxes of all the tasks for milestone
'@code
'    BIZ_Documents_SelectCheckBoxesOfAllTasks(strMileStoneName)
'@endcode
'@param strMileStoneName - Name of the Milestone

Function BIZ_Documents_SelectCheckBoxesOfAllTasks(strMileStoneName)

	FRM_Logger_ReportInfoEvent "Select the Tasks of Milestone", "Check the all check boxes of all Tasks under Tasks section", Null
	Set objList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridViewTasks")
	
	RowCount = GUI_List_GetNumberofRows(objList)
	
	For RowNumber = 0 To RowCount-1 Step 1
		GUI_List_SelectCheckBoxinCell objList, 1, RowNumber
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("Swfname:=LoanPage").SwfButton("swfname:=btnList")
	wait g_TinyWaitSmall
	Set objTaskListContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MilestoneTaskListContainer")
	intNumberofRows = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MilestoneTaskListContainer").SwfObject("swfname:=gridViewTasks"))
	For RowNumber = 0 To intNumberofRows-1 Step 1
		GUI_List_ClickOnCell objTaskListContainer.SwfObject("swfname:=gridViewTasks"), objTaskListContainer.SwfScrollBar("swfname:=vPanelScrollBar"), RowNumber, 1, True, False, False, "Double"
		Wait g_TinyWaitSmall
		GUI_SwfCheckbox_Set objTaskListContainer.SwfWindow("swfname:=MilestoneTaskWorksheetContainer").SwfCheckBox("swfname:=chkComplete"), "ON"
		GUI_SwfButton_Click objTaskListContainer.SwfWindow("swfname:=MilestoneTaskWorksheetContainer").SwfButton("swfname:=btnOK")
		Wait g_TinyWaitMedium
	Next
	GUI_SwfButton_Click objTaskListContainer.SwfButton("swfname:=btnClose")
End Function 



'This function is used to set Document status under the milestone
'@code
'    BIZ_Document_SetDocumentStatusForMileStone(strMileStoneName)
'@endcode
'@param strMileStoneName - Name of the Milestone

Function BIZ_Document_SetDocumentStatusForMileStone(strMileStoneName)

	'====== Selects the Checkbox of Received box for each document ======
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
	Set objList = objMain.SwfObject("swfname:=gridViewDocs")
	RowCount = GUI_List_GetNumberofRows(objList)
	
	For RowNumber = 0 To RowCount-1 Step 1
		objList.Object.Items.item(0).Subitems.item(1).Checked = True
		GetCellData = GUI_List_GetCellData (objList, RowNumbers,1)
		GUI_List_ClickOnCellData objList, 0, 1, True, False, False, "Double"
		GUI_SwfObject_Click SwfWindow("swfname:=DocumentDetailsDialog").SwfObject("swfname:=btnAttachBrowse")
		GUI_SwfEdit_Set SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinEdit("attachedtext:=File &name:","nativeclass:=Edit"), "Appraisal Document.pdf"
		GUI_SwfButton_Click SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinButton("text:=&Open")
		GUI_Object_IsExistX objDocumentDetailsDialog.SwfCheckBox("swfname:=chkRequested"), 240
		GUI_SwfCheckbox_Set objDocumentDetailsDialog.SwfCheckBox("swfname:=chkRequested"), "On"
		GUI_SwfButton_Click objDocumentDetailsDialog.SwfButton("swfname:=btnClose")
	Next
End Function



'This function is used to set Document status under the milestone
'@code
'    BIZ_Document_AttachMandatoryDocuments(strMilestone, strRowID)
'@endcode

Function BIZ_Document_AttachMandatoryDocuments(strMilestone, strRowID)

	FRM_Logger_ReportInfoEvent "Attached Documents", "Attach Documents for the list of mandatory documents", Null
	'====== Navigate to log and select the milestone ======
	BIZ_AlertsAndLog_ClickOnRecord "Log",strMilestone
	Set objData = FRM_DS_GetTestData("Loans", "MilestoneDocument", strRowID) 
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
    Set objList = objMain.SwfObject("swfname:=gridViewDocs")
    Set objDocumentDetailsDialog = SwfWindow("swfname:=DocumentDetailsDialog") 
    Set objScrollBar =  objMain.SwfScrollBar("swfname:=vPanelScrollBar","swfname path:=vPanelScrollBar;gridViewDocs;groupContainer1;RequiredDocumentsControl;panelDocumentTracking;panelLeft;panelDocList;panel1;MilestoneWS;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm")
   	intRowCount = GUI_List_GetNumberofRows(objList)
      
    For RowNumber = 0 To intRowCount-1 Step 1
    	objList.Object.Items.item(RowNumber).Subitems.item(1).Checked = True
        AttachmentRequired = objList.Object.Items.item(RowNumber).Subitems.item(0).ImageIndex
        
        If(AttachmentRequired = 1) then
        
           If(GUI_Object_IsExist(objScrollBar)) Then 
        	  intPosition = GUI_List_ClickOnCell(objList, objScrollBar, RowNumber, 1, False, False, False, "Double")
           Else
        	  intPosition = GUI_List_ClickOnCell(objList, Null, RowNumber, 1, False, False, False, "Double")
           End If
           
           GUI_Object_WaitTillExistX SwfWindow("swfname:=DocumentDetailsDialog").SwfObject("swfname:=btnAttachBrowse"),200
       	   TitleofDocument = GUI_Object_GetPropertyValue(SwfWindow("swfname:=DocumentDetailsDialog"), "text")
       	   GUI_SwfObject_Click SwfWindow("swfname:=DocumentDetailsDialog").SwfObject("swfname:=btnAttachBrowse")
	       GUI_SwfEdit_Set SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinEdit("attachedtext:=File &name:","nativeclass:=Edit"), FRM_RT_DataDirPath()
     	   
		   GUI_SwfButton_Click SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinButton("text:=&Open")
	       Wait g_TinyWaitMedium
	       GUI_SwfEdit_Set SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinEdit("attachedtext:=File &name:","nativeclass:=Edit"), FRM_DS_GetValue(objData,"DocumentName")
     	   GUI_SwfButton_Click SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinButton("text:=&Open")
		   Wait g_TinyWaitHigh + g_TinyWaitHigh + g_TinyWaitSmall
		   objDocumentDetailsDialog.Close
           Wait g_TinyWaitSmall
        End If
    Next
	'As the documents are getting jumbled, need to attach the documents again
	For RowNumber = 0 To intRowCount-1 Step 1
    	objList.Object.Items.item(RowNumber).Subitems.item(1).Checked = True
        AttachmentRequired = objList.Object.Items.item(RowNumber).Subitems.item(0).ImageIndex
        
        If(AttachmentRequired = 1) Then
           If(GUI_Object_IsExist(objScrollBar)) Then 
        	  intPosition = GUI_List_ClickOnCell(objList, objScrollBar, RowNumber, 1, False, False, False, "Double")
           Else
        	  intPosition = GUI_List_ClickOnCell(objList, Null, RowNumber, 1, False, False, False, "Double")
           End If
            
           GUI_Object_WaitTillExistX SwfWindow("swfname:=DocumentDetailsDialog").SwfObject("swfname:=btnAttachBrowse"),200
       	   TitleofDocument = GUI_Object_GetPropertyValue(SwfWindow("swfname:=DocumentDetailsDialog"), "text")
       	   GUI_SwfObject_Click SwfWindow("swfname:=DocumentDetailsDialog").SwfObject("swfname:=btnAttachBrowse")
	       GUI_SwfEdit_Set SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinEdit("attachedtext:=File &name:","nativeclass:=Edit"), FRM_RT_DataDirPath()
     	   GUI_SwfButton_Click SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinButton("text:=&Open")
	       Wait g_TinyWaitHigh
	       GUI_SwfEdit_Set SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinEdit("attachedtext:=File &name:","nativeclass:=Edit"), FRM_DS_GetValue(objData,"DocumentName")

     	   GUI_SwfButton_Click SwfWindow("swfname:=DocumentDetailsDialog").Dialog("text:=Browse and Attach").WinButton("text:=&Open")
		   Wait g_TinyWaitHigh + g_TinyWaitHigh + g_TinyWaitSmall
           objDocumentDetailsDialog.Close
           Wait g_TinyWaitSmall
        End If
    Next	
End Function



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\eFolder\Documents.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\eFolder\PostClosingConditions.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_eFolder_PostClosingConditions BIZ_eFolder_PostClosingConditions
'List of functions:
'@code
'   Function BIZ_PostClosingConditions_AddConditionsFromSet(strRowID)
'   Function BIZ_PostClosingConditions_SetAllConditionsStatus(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Add Post-Closing Conditons from Condition Set on eFolder->Post-Closing Conditions tab
'@code
'    Function BIZ_PostClosingConditions_AddConditionsFromSet(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_PostClosingConditions_AddConditionsFromSet(strRowID)

	FRM_Logger_ReportInfoEvent "Add Post-Closing Conditions From Conditons Set", "Add Post-Closing Conditions From Conditons Set using using Row Id '"&strRowID&"' in the AddConditionsFromSet datasheet", Null
    	
	Dim objeFolder,objAddConditionWindow,objConditionSetsDialog,objData,arrStrConditionName,strConditionSet
	Set objeFolder =  SwfWindow("swfname:=eFolderDialog")
	Set objAddConditionWindow = objeFolder.SwfWindow("swfname:=AddPostClosingDialog")
	Set objConditionSetsDialog = objAddConditionWindow.SwfWindow("swfname:=ConditionSetsDialog")
	Set objScrollBar =  objConditionSetsDialog.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData = FRM_DS_GetTestData("eFolder_Tab","AddConditionsFromSet",strRowID)
	
	arrStrConditionName = Split(FRM_DS_GetValue(objData,"ConditionsName"),";")
	strConditionSet = FRM_DS_GetValue(objData,"ConditionSet")
	
	GUI_SwfObject_Click objeFolder.SwfObject("swfname:=btnNew")
	Wait g_TinyWaitSmall
    GUI_SwfRadioButton_Click objAddConditionWindow.SwfRadioButton("swfname:=rdoSet")
    GUI_SwfButton_Click objAddConditionWindow.SwfButton("swfname:=btnOK")
	Wait g_TinyWaitSmall
    
    GUI_SwfComboBox_Select objConditionSetsDialog.SwfComboBox("swfname:=cboSet"),strConditionSet

    For i = 0 To UBound(arrStrConditionName) Step 1
    	GUI_List_ClickRow objConditionSetsDialog.SwfObject("swfname:=gvAvailable"),objScrollBar,"Name",arrStrConditionName(i),True,False,False,"Single"
        GUI_SwfButton_Click objConditionSetsDialog.SwfButton("swfname:=btnAdd")
        Wait g_TinyWaitSmall
    Next
    
    GUI_SwfButton_Click objConditionSetsDialog.SwfButton("swfname:=btnOK")

	Set objeFolder   = Nothing
	Set objScrollBar = Nothing
	Set objData      = Nothing 
	Set objAddConditionWindow  = Nothing
	Set objConditionSetsDialog = Nothing
	
End Function



'This function is used to set status for all Conditons on eFolder->Post-Closing Conditions tab
'@code
'    Function BIZ_PostClosingConditions_SetAllConditionsStatus(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_PostClosingConditions_SetAllConditionsStatus(strRowID)

    FRM_Logger_ReportInfoEvent "Set Post-Closing Conditions Status", "Set Post-Closing Conditions Status on the eFolder->Post-Closing Conditions Tab using Row Id '"&strRowID&"' in the SetAllPostClosingConditionsStatus datasheet", Null
    
    Dim objConditionsList,objScrollBar,objData,arrStrStatus,objConditionDetails
	Set objConditionsList =  SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvConditions")
	Set objScrollBar      =  SwfWindow("swfname:=eFolderDialog").SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData           = FRM_DS_GetTestData("eFolder_Tab","SetPostClosingConditionsStatus",strRowID)
	
	arrStrStatus=Split(FRM_DS_GetValue(objData,"Status"),";")
	For i = 0 To objConditionsList.Object.Items.Count - 1 
		GUI_List_ClickOnCell  objConditionsList,objScrollBar,i,2,True,True,False,"Double"
		Set objConditionDetails = SwfWindow("swfname:=PostClosingDetailsDialog")
		objConditionDetails.Maximize
		
		For j = 0 To UBound(arrStrStatus)
		    Select Case arrStrStatus(j)
		    	   Case "Requested"
		    	        GUI_SwfCheckBox_Set objConditionDetails.SwfCheckBox("swfname:=chkRequested"),"ON"
		    	   Case "Re-requested"
		    	        GUI_SwfCheckBox_Set objConditionDetails.SwfCheckBox("swfname:=chkRerequested"),"ON"
		    	   Case "Received"  
		    	        GUI_SwfCheckBox_Set objConditionDetails.SwfCheckBox("swfname:=chkReceived"),"ON"
		    	   Case "Sent"
		    	        GUI_SwfCheckBox_Set objConditionDetails.SwfCheckBox("swfname:=chkSent"),"ON"
		    	   Case "Cleared"
		    	        GUI_SwfCheckBox_Set objConditionDetails.SwfCheckBox("swfname:=chkCleared"),"ON"
		    End Select
	    Next
     
        GUI_SwfButton_Click objConditionDetails.SwfButton("swfname:=btnClose")
	Next
	
    Set objConditionDetails = Nothing 
    Set objConditionsList   = Nothing
    Set objScrollBar        = Nothing
    Set objData             = Nothing	
    
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\eFolder\PostClosingConditions.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\eFolder\PreliminaryConditions.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_eFolder_PreliminaryConditions
'List of functions:
'@code
'   Function BIZ_PreliminaryConditions_Fulfilled(strConditionName)
'   Function BIZ_PreliminaryConditions_VerifyConditionFulFilled(strConditionName)
'   Function BIZ_PreliminaryConditions_AddNewAutomatedCondition(strConditionName,strValue)
'	Function BIZ_PreliminaryConditions_FulfilledByConditionDescription(strConditionDescription)
'	Function BIZ_PreliminaryConditions_AddConditionsFromSet(strRowID)
'	Function BIZ_PreliminaryConditions_SetAllConditionsStatus(strRowID)
'	Function BIZ_PreliminaryConditions_VerifyAllConditionStatus(strStatus)
'	Function BIZ_PreliminaryConditions_AddDUFindings()
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is to fulfill the Condition
'@code
'    BIZ_PreliminaryConditions_Fulfilled(strConditionName)
'@endcode
'@param strConditionName The Condition Name which will be fulfilled

Function BIZ_PreliminaryConditions_Fulfilled(strConditionName)

	FRM_Logger_ReportInfoEvent "eFoler -> Preliminary Condtions", "Fulfill the condition '"&strConditionName&"'", Null

    Dim objConditionsList,objPreliminaryDetails,objScrollBar
    Set objConditionsList = SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvConditions")
    Set objScrollBar = SwfWindow("swfname:=eFolderDialog").SwfScrollBar("swfname:=vPanelScrollBar")
    GUI_List_ClickRow objConditionsList,objScrollBar,"Name",strConditionName,True,True,False,"Double"

    Set objPreliminaryDetails = SwfWindow("swfname:=PreliminaryDetailsDialog")
    GUI_SwfCheckbox_Set objPreliminaryDetails.SwfCheckBox("swfname:=chkFulfilled"),"ON" 
    GUI_SwfButton_Click objPreliminaryDetails.SwfButton("swfname:=btnClose") 
    
    Set objPreliminaryDetails = Nothing
    Set objConditionsList     = Nothing
    Set objScrollBar          = Nothing
    
End Function



'This function is to verify the condition is fulfilled
'@code
'    BIZ_PreliminaryConditions_VerifyConditionFulFilled(strConditionName)
'@endcode
'@param strConditionName The Condition Name

Function BIZ_PreliminaryConditions_VerifyConditionFulFilled(strConditionName)

    FRM_Logger_ReportInfoEvent "eFolder -> Preliminary Conditions", "Verify the condition '"&strConditionName&"' is Fulfilled", Null	
	
	Dim objConditionsList,intRowNum,intColNum,strStatus
    Set objConditionsList = SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvConditions")
    
    intRowNum = GUI_List_GetRowIndex(objConditionsList,"Name",strConditionName)
    intColNum = GUI_List_GetColumnIndex(objConditionsList,"Status")
    strStatus = GUI_List_GetCellData(objConditionsList,intRowNum,intColNum)
    
    UTIL_AssertEqual strStatus,"Fulfilled","Verify the Condition '"&strConditionName&"' is Fulfilled","Status of the Condition '"&strConditionName&"'"
End Function  



'This function is used to add new Automated Condition rule
'@code
'	Function BIZ_PreliminaryConditions_AddNewAutomatedCondition(strConditionName,strValue)
'@endcode
'@param strConditionName - Automated Condition name that needs to be added
'@param strValue - Value that needs to be selected

Function BIZ_PreliminaryConditions_AddNewAutomatedCondition(strConditionName,strValue)
	
	FRM_Logger_ReportInfoEvent "Add new Automated Condition", "Add new Automated Condition in Preliminay Condition: " & strConditionName, Null
	
	Dim objConditionsList,objPreliminaryDetails,objScrollBar, objImportAutomatedCondition
    Set objConditionsList = SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvConditions")
    Set objScrollBar = SwfWindow("swfname:=eFolderDialog").SwfScrollBar("swfname:=vPanelScrollBar")
    Set objImportAutomatedCondition =  SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=AddPreliminaryDialog").SwfWindow("swfname:=AutomatedConditionDialog")
    Set objImportConditionsList = objImportAutomatedCondition.SwfObject("swfname:=gridViewRules")
    
    GUI_SwfObject_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnNew")
    GUI_SwfRadioButton_Click SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=AddPreliminaryDialog").SwfRadioButton("swfname:=rdoRule")
    GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=AddPreliminaryDialog").SwfButton("swfname:=btnOK")
    
    intRowCount = objImportConditionsList.Object.Items.Count
	For i = 0 To (intRowCount - 1)		
		If objImportConditionsList.Object.Items.Item(i).Text = strConditionName Then
		
			If strValue = "ON" OR strValue = "1" OR strValue = "True"  Then
			
			   If Not objImportConditionsList.Object.Items.Item(i).Checked Then
					  GUI_List_ClickRow objImportConditionsList,Null,0,strConditionName,True,False,True,"Single"
			   End If
			   
			ElseIf strValue = "OFF" OR strValue = "0" OR strValue = "False" Then
			
				   If objImportConditionsList.Object.Items.Item(i).Checked Then
					  GUI_List_ClickRow objImportConditionsList,Null,0,strConditionName,True,False,True,"Single"
				   End If
			End If
			
		End If
	Next
    
    GUI_SwfButton_Click objImportAutomatedCondition.SwfButton("swfname:=btnOK")
    
    Set objConditionsList 			= Nothing
    Set objScrollBar      			= Nothing
    Set objImportAutomatedCondition =  Nothing
    Set objImportConditionsList     = Nothing
    
End Function



'This function is to fulfill the Condition
'@code
'    BIZ_PreliminaryConditions_FulfilledByConditionDescription(strConditionDescription)
'@endcode
'@param strConditionDescription The Condition Description which will be fulfilled

Function BIZ_PreliminaryConditions_FulfilledByConditionDescription(strConditionDescription)

	FRM_Logger_ReportInfoEvent "eFoler -> Preliminary Condtions", "Fulfill the condition '"&strConditionDescription&"'", Null

    Dim objConditionsList,objPreliminaryDetails,objScrollBar
	
    Set objConditionsList = SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvConditions")
    Set objScrollBar 	  = SwfWindow("swfname:=eFolderDialog").SwfScrollBar("swfname:=vPanelScrollBar")
    GUI_List_ClickRow objConditionsList,objScrollBar,"Description",strConditionDescription,True,True,False,"Double"
	Wait g_TinyWaitLarge

    Set objPreliminaryDetails = SwfWindow("swfname:=PreliminaryDetailsDialog")
    GUI_SwfCheckbox_Set objPreliminaryDetails.SwfCheckBox("swfname:=chkFulfilled"),"ON" 
	Wait g_TinyWaitLarge
	objPreliminaryDetails.Highlight
    GUI_SwfButton_Click objPreliminaryDetails.SwfButton("swfname:=btnClose") 
    
    Set objPreliminaryDetails = Nothing
    Set objConditionsList     = Nothing
    Set objScrollBar          = Nothing
    
End Function



'This function is used to Add Preliminary Conditons from Condition Set on eFolder->Preliminary Conditions tab
'@code
'    Function BIZ_PreliminaryConditions_AddConditionsFromSet(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_PreliminaryConditions_AddConditionsFromSet(strRowID)

	FRM_Logger_ReportInfoEvent "Add Preliminary Conditions From Conditons Set", "Add Preliminary Conditions From Conditons Set using using Row Id '"&strRowID&"' in the AddConditionsFromSet datasheet", Null
    	
	Dim objeFolder,objAddConditionWindow,objConditionSetsDialog,objData,arrStrConditionName,strConditionSet
	
	Set objeFolder			   = SwfWindow("swfname:=eFolderDialog")
	Set objAddConditionWindow  = objeFolder.SwfWindow("swfname:=AddPreliminaryDialog")
	Set objConditionSetsDialog = objAddConditionWindow.SwfWindow("swfname:=ConditionSetsDialog")
	Set objScrollBar 		   =  objConditionSetsDialog.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData 			   = FRM_DS_GetTestData("eFolder_Tab","AddConditionsFromSet",strRowID)
	arrStrConditionName 	   = Split(FRM_DS_GetValue(objData,"ConditionsName"),";")
	strConditionSet 		   = FRM_DS_GetValue(objData,"ConditionSet")
	
	GUI_SwfObject_Click objeFolder.SwfObject("swfname:=btnNew")
	Wait g_TinyWaitSmall
    GUI_SwfRadioButton_Click objAddConditionWindow.SwfRadioButton("swfname:=rdoSet")
    GUI_SwfButton_Click objAddConditionWindow.SwfButton("swfname:=btnOK")
	Wait g_TinyWaitSmall
    
    GUI_SwfComboBox_Select objConditionSetsDialog.SwfComboBox("swfname:=cboSet"),strConditionSet

    For i = 0 To UBound(arrStrConditionName) Step 1
    	GUI_List_ClickRow objConditionSetsDialog.SwfObject("swfname:=gvAvailable"),objScrollBar,"Name",arrStrConditionName(i),True,False,False,"Single"
        GUI_SwfButton_Click objConditionSetsDialog.SwfButton("swfname:=btnAdd")
        Wait g_TinyWaitSmall
    Next
    
    GUI_SwfButton_Click objConditionSetsDialog.SwfButton("swfname:=btnOK")

	Set objeFolder             = Nothing
	Set objScrollBar           = Nothing
	Set objData                = Nothing 
	Set objAddConditionWindow  = Nothing
	Set objConditionSetsDialog = Nothing
	
End Function



'This function is used to set status for all Conditons on eFolder->Preliminary Conditions tab
'@code
'    Function BIZ_PreliminaryConditions_SetAllConditionsStatus(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_PreliminaryConditions_SetAllConditionsStatus(strRowID)

    FRM_Logger_ReportInfoEvent "Set Post-Closing Conditions Status", "Set Post-Closing Conditions Status on the eFolder->Post-Closing Conditions Tab using Row Id '"&strRowID&"' in the SetAllPostClosingConditionsStatus datasheet", Null
    
    Dim objConditionsList,objScrollBar,objData,arrStrStatus,objConditionDetails, strConditionName
	
	Set objConditionsList = SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvConditions")
	Set objScrollBar	  = SwfWindow("swfname:=eFolderDialog").SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData 		  = FRM_DS_GetTestData("eFolder_Tab","SetPreliminaryConditionStatus",strRowID)
	arrStrStatus		  = Split(FRM_DS_GetValue(objData,"Status"),";")
	
	For i = 0 To objConditionsList.Object.Items.Count - 1 
		GUI_List_ClickOnCell  objConditionsList,objScrollBar,i,2,True,True,False,"Double"
		Set objConditionDetails = SwfWindow("swfname:=PreliminaryDetailsDialog")
		objConditionDetails.Maximize
		strConditionName = objConditionDetails.WinEdit("nativeclass:=Edit").GetROProperty("text")
		
		For j = 0 To UBound(arrStrStatus)
		    Select Case arrStrStatus(j)
		    	   Case "Fullfilled"
		    	        GUI_SwfCheckBox_Set objConditionDetails.SwfCheckBox("swfname:=chkFulfilled"),"ON"
						 FRM_Logger_ReportInfoEvent "Set Post-Closing Conditions Status", strConditionName & " is fullfilled", Null
		    End Select
	    Next
     
        GUI_SwfButton_Click objConditionDetails.SwfButton("swfname:=btnClose")
	Next
	
    Set objConditionDetails = Nothing 
    Set objConditionsList   = Nothing
    Set objScrollBar = Nothing
    Set objData      = Nothing
    
End Function



'This function is used to set status for all Conditons on eFolder->Preliminary Conditions tab
'@code
'    Function BIZ_PreliminaryConditions_VerifyAllConditionStatus(strStatus)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_PreliminaryConditions_VerifyAllConditionStatus(strStatus)

	Dim blnConditionFullfilled, ConditionName
	blnConditionFullfilled = True
	
	For RowNumber = 0 To RowCount -1  Step 1
		strConditionName = GUI_List_GetCellData(SwfWindow("swfname:=eFolderDialog").SwfObject("swfname:=gvConditions"), RowNumber, 7)
		
		If (strConditionName <> strStatus) Then
			blnConditionFullfilled = False
		End If
	Next

	If (blnConditionFullfilled = True) Then 
		FRM_Logger_ReportPassEvent "Check the " & strStatus & " condition for each Preliminary Condtion", "Preliminary Conditions are ", Null
	Else
		FRM_Logger_ReportPassEvent "Check the " &strStatus& " condition for each Preliminary Condtion", "Preliminary Conditions are not fulfilled", Null
	End If
	
End Function


'This function is used to add DU Findings 
'@code
'    Function BIZ_PreliminaryConditions_AddDUFindings()
'@endcode
Function BIZ_PreliminaryConditions_AddDUFindings()

	Set objPreliminaryDialog = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=AddPreliminaryDialog")
	Set objImportCondition   =  objPreliminaryDialog.SwfWindow("swfname:=ImportConditionsDialog")
	Set objLVconditions      = objImportCondition.SwfListView("swfname:=lvConditions")
	BIZ_Nav_eFoler_Open

	'Add Preliminary Conditions in eFolder 
	GUI_SwfTab_Click SwfWindow("swfname:=eFolderDialog").SwfTab("swfname:=tabMain"), "Preliminary Conditions"
	GUI_SwfObject_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnNew")
	
	If (GUI_Object_IsExistX(objPreliminaryDialog, 50))Then  
		'Check radio option for "Add Conditions from DU findings
		FRM_Logger_ReportPassEvent "Go to e-folder and click preliminary conditions.Click add", "Add condition pop up window should open", Null
		Wait g_TinyWaitSmall 'wait for object to appear
		GUI_SwfRadioButton_Click objPreliminaryDialog.SwfRadioButton("swfname:=rdoFannieMae")
		GUI_SwfButton_Click objPreliminaryDialog.SwfButton("swfname:=btnOK")
		GUI_List_Select objLVconditions,1
		GUI_SwfButton_Click objImportCondition.SwfButton("swfname:=btnImport")
	End If
	FRM_Logger_ReportInfoEvent "Select add conditions from DU findings radio button and click 'Ok'", "Condition should be added", Null
	'Close eFolder
	BIZ_Nav_eFoler_Close
	
	Set objPreliminaryDialog = Nothing
	Set objImportCondition   =  Nothing
	Set objLVconditions      = Nothing
End Function



'@}	''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\eFolder\PreliminaryConditions.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\1003Page.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_1003Page
'List of functions:
'@code
'	Function BIZ_1003Page1_SetEmployment(strRowID)
' 	Function BIZ_1003Page1_VerifyEmployment(strRowID)
'	Function BIZ_Common_1003Page1_VerifyEmployment(objParentObject, strRowID)  
'	Function BIZ_1003Page1_SetBorrower(strRowID)
'	Function BIZ_1003Page3_SetBorrower(strRowId)
'	Function BIZ_1003Page1_VerifyBorrower(strRowID)
'	Function BIZ_Common_1003Page1_VerifyBorrower(objParentObject, strRowID)  
'	Function BIZ_Common_1003Page1_SetBorrower(objParentObject, strRowID)
'	Function BIZ_Common_1003Page1_SetEmployment(objParentObject, strRowID)
'	Function BIZ_1003Page1_SetBorrower(strRowID)
'	Function BIZ_Common_1003Page1_SetBorrower(objParentObject, strRowID)
'   Function BIZ_1003Page2_SetVODData(strRowID)
'   Function BIZ_1003Page1_SetData(strRowID)
'   Function BIZ_1003Page3_SetDetailsTransaction(strRowID)
'   Function BIZ_1003Page1_VerifyProperty(strRowID)
'	Function BIZ_1003Page2_SetMonthlyIncomeExpensesDate(strRowID)
'	Function BIZ_1003Page3_SetDeclarations(strRowID)
'   Function BIZ_1003Page1_ClickEditIconFor1045()
'   Function BIZ_Common_1003Page3_SetDeclarations(objParentObject, strRowID)
'	Function BIZ_1003Page2_SetLiabilities(strRowID)
'	Function BIZ_1003Page3_SetLoanOriginator(strRowID)
'	Function BIZ_Common_1003Page3_SetLoanOriginator(objParentObject, strRowID)
'	Function BIZ_1003Page3_VerifyTransactionDetails(strRowID)
'   Function BIZ_1003Page1_SetTitleDetails(strRowID)
' 	Function BIZ_1003Page1_VerifyTitleDetails(strRowID
'	Function BIZ_1003Page2_VerifyMonthlyIncomeExpensesData(strRowID)
' 	Function BIZ_1003Page2_SetAutomobilesOwned(strRowID)
'	Function BIZ_1003Page3_SetLoanOriginator(strRowID)
'	Function BIZ_Common_1003Page3_SetLoanOriginator(objParentObject, strRowID)
'	Function BIZ_1003Page3_VerifyTransactionDetails(strRowID)
'   Function BIZ_1003Page3_SetBorrower(strRowId)
'	Function BIZ_1003Page3_SetLoanOriginator(strRowID)
'	Function BIZ_Common_1003Page3_SetLoanOriginator(objParentObject, strRowID)
'	Function BIZ_1003Page3_VerifyTransactionDetails(strRowID)
'	Function BIZ_1003Page3_SetBorrower(strRowId)
'   Function BIZ_1003Page1_Buttoncheck()
'	Function BIZ_Forms_Buttoncheck(Buttonid,Desc,Dialog)
'	Function BIZ_Forms_Dialogcheck(Buttonid,Desc,Dialogtxt)
'	Function BIZ_1003Page2_BorrowerBaseButtoncheck()
'	Function BIZ_1003Page3_ShowAllVOMButtoncheck()
'	Function BIZ_Forms_Respatila_ClosingRegzButtoncheck()
'   Function BIZ_1003Page1_SetTitleDetails(strRowID)
'	Function BIZ_1003Page3_VerifyAssetsandLiabilities(strRowID)
'	Function BIZ_Common_1003Page3_VerifyAssetsandLiabilities(objParentObject,strRowID)
'   Function BIZ_1003Page1_SetMailingAddress(strRowID)
' 	Function BIZ_Common_1003Page1_SetMiandPiDetails(strRowID)
'	Function BIZ_1003Page1_SetMiandPiDetails(strRowID)
'	Function BIZ_Common_1003Page2_VerifyFeeData(strRowID) 
'   Function BIZ_1003Page1_MIDetails_SetTotalLoanAmountPremium(strRowID)
'   Function BIZ_1003Page1_MIDetails_SetTotLoanAmt(strRefund,strRowID)
'   Function BIZ_1003Page2_DeleteVODData(strRowID)
'   Function BIZ_1003Page2_UpdateVODData(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Employment info on 1003 page 1
'@code
'    BIZ_1003Page1_SetEmployment(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_SetEmployment(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page1", "Set employment info using Row Id '"&strRowID&"' in '1003Page'", Null
    Dim obj1003Page
   	BIZ_Forms_Open "1003 Page 1"
   	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")

	BIZ_Common_1003Page1_SetEmployment obj1003Page, strRowID	
    Set obj1003Page = Nothing

End Function



'This function is a common function for set Employment info  on 1003 page 1 form 
'@code
'    BIZ_Common_1003Page1_SetEmployment(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject

Function BIZ_Common_1003Page1_SetEmployment(objParentObject, strRowID)  

	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetEmployment", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0115_SelfEmployed")) Then
		GUI_WebCheckBox_Set  objParentObject.WebCheckBox("html id:=__cid_CheckBox35_Ctrl"), FRM_DS_GetValue(objData, "FE0115_SelfEmployed")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0102_Employer")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0102"), FRM_DS_GetValue(objData, "FE0102_Employer")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0104_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0104"), FRM_DS_GetValue(objData, "FE0104_Address")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0105_City")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0105"), FRM_DS_GetValue(objData, "FE0105_City")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0106_State")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0106"), FRM_DS_GetValue(objData, "FE0106_State")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0107_Zip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0107"), FRM_DS_GetValue(objData, "FE0107_Zip")
		If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities")))Then 
			Set CitiesGrid = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities")
			GUI_List_ClickRow CitiesGrid, Null, "City Name", FRM_DS_GetValue(objData, "FE0105_City"), True, False, False, "Double"
			Set CitiesGrid = Nothing
		End If
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0110_Position")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0110"), FRM_DS_GetValue(objData, "FE0110_Position")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0117_Phone")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0117"), FRM_DS_GetValue(objData, "FE0117_Phone")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0113_YearsonJob")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0113"), FRM_DS_GetValue(objData, "FE0113_YearsonJob")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0133_Months")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0133"), FRM_DS_GetValue(objData, "FE0133_Months")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0116_Years")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0116"), FRM_DS_GetValue(objData, "FE0116_Years")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0125_SelfEmployed")) Then
		GUI_WebCheckBox_Set  objParentObject.WebCheckBox("html id:=__cid_CheckBox36_Ctrl"), FRM_DS_GetValue(objData, "FE0125_SelfEmployed")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0202_Employer")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0202"), FRM_DS_GetValue(objData, "FE0202_Employer")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0204_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0204"), FRM_DS_GetValue(objData, "FE0204_Address")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0205_City")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0205"), FRM_DS_GetValue(objData, "FE0205_City")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0206_State")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0206"), FRM_DS_GetValue(objData, "FE0206_State")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0207_Zip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0207"), FRM_DS_GetValue(objData, "FE0207_Zip")
		If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities")))Then 
			Set CitiesGrid = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities")
			GUI_List_ClickRow CitiesGrid, Null, "City Name", FRM_DS_GetValue(objData, "FE0205_City"), True, False, False, "Double"
			Set CitiesGrid = Nothing
		End If
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0210_Position")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0210"), FRM_DS_GetValue(objData, "FE0210_Position")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0217_Phone")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0217"), FRM_DS_GetValue(objData, "FE0217_Phone")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0213_YearsonJob")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0213"), FRM_DS_GetValue(objData, "FE0213_YearsonJob")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0233_Months")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0233"), FRM_DS_GetValue(objData, "FE0233_Months")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0216_Years")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0216"), FRM_DS_GetValue(objData, "FE0216_Years")
	End If
		
End Function



'This function is for set Borrower on 1003 page 1
'@code
'    BIZ_1003Page1_SetBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_SetBorrower(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page1", "Set Borrower using Row Id '"&strRowID&"' in '1003Page'", Null
    
    BIZ_Forms_Open "1003 Page 1"
    Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")

	BIZ_Common_1003Page1_SetBorrower obj1003Page, strRowID	

    Set obj1003Page = Nothing

End Function



'This function is for set Mailing Address on 1003 page 1
'@code
'    BIZ_1003Page1_SetMailingAddress(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_SetMailingAddress(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page1", "Set Mailing Address using Row Id '"&strRowID&"' in '1003Page'", null
    
    BIZ_Forms_Open "1003 Page 1"
    Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")

	BIZ_Common_1003Page1_SetMailingAddress obj1003Page, strRowID	

    Set obj1003Page = Nothing

End Function



'This function is a common function for set Borrower on 1003 page 1 form 
'@code
'    BIZ_Common_1003Page1_SetBorrower(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject

Function BIZ_Common_1003Page1_SetBorrower(objParentObject, strRowID)  

	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetBorrower", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4000_FirstName")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_36"), FRM_DS_GetValue(objData, "4000_FirstName")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4001_Middle")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "4001_Middle")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4002_LastName")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_37"), FRM_DS_GetValue(objData, "4002_LastName")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "65_SSN")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_65"), FRM_DS_GetValue(objData, "65_SSN")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1402_DOB")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1402"), FRM_DS_GetValue(objData, "1402_DOB")
	End If	

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1240_Email")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "1240_Email")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MaritalStatus")) Then
		GUI_WebList_Select  objParentObject.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "MaritalStatus")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1416_MailingAddress")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1416"), FRM_DS_GetValue(objData, "1416_MailingAddress") 
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1417_MailingCity")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1417"), FRM_DS_GetValue(objData, "1417_MailingCity") 
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1418_MailingState")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1418"), FRM_DS_GetValue(objData, "1418_MailingState") 
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1419_MailingZip")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1419"), FRM_DS_GetValue(objData, "1419_MailingZip") 
        If objParentObject.SwfWindow("swfname:=ZipcodeSelectorDialog").Exist(5)=True Then
            GUI_List_ClickRow objParentObject.SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities"), Null, "City Name", FRM_DS_GetValue(objData,"1419_MailingZip"), True, False, False, "Double"
        End If    
    End If  

End Function



'This function is a common function for set Mailing Address on 1003 page 1 form 
'@code
'    BIZ_Common_1003Page1_SetMailingAddress(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page1_SetMailingAddress(objParentObject, strRowID)  

	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page1", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1416_MailingAddress")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1416"), FRM_DS_GetValue(objData, "1416_MailingAddress")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1417_MailingCity")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1417"), FRM_DS_GetValue(objData, "1417_MailingCity")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1418_MailingState")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1418"), FRM_DS_GetValue(objData, "1418_MailingState")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1419_MailingZip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1419"), FRM_DS_GetValue(objData, "1419_MailingZip")
	End If
	   
End Function



'This function is for set CoBorrower on 1003 page 1
'@code
'    BIZ_1003Page1_SetCoBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_SetCoBorrower(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page1", "Set CoBorrower using Row Id '"&strRowID&"' in '1003Page'", null
    
    BIZ_Forms_Open "1003 Page 1"
    Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")

	BIZ_Common_1003Page1_SetCoBorrower obj1003Page, strRowID	

    Set obj1003Page = Nothing

End Function



'This function is a common function for set CoBorrower on 1003 page 1 form 
'@code
'    BIZ_Common_1003Page1_SetCoBorrower(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject

Function BIZ_Common_1003Page1_SetCoBorrower(objParentObject, strRowID)  

	Dim objData
	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetCoBorrower", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4004_FirstName")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_68"), FRM_DS_GetValue(objData, "4004_FirstName")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4006_LastName")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_69"), FRM_DS_GetValue(objData, "4006_LastName")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "97_SSN")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_97"), FRM_DS_GetValue(objData, "97_SSN")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1268_Email")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "1268_Email")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1519_MailingAddress")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1519"), FRM_DS_GetValue(objData, "1519_MailingAddress")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1520_MailingCity")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1520"), FRM_DS_GetValue(objData, "1520_MailingCity")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1521_MailingState")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1521"), FRM_DS_GetValue(objData, "1521_MailingState")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1522_MailingZip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html tag:=INPUT","Index:=81","type:=text"), FRM_DS_GetValue(objData, "1522_MailingZip")
	End If	
	
	Set objData = Nothing
End Function



'This function is for set VOD data in 1003 page 2
'@code
'    BIZ_1003Page2_SetVODData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page2_SetVODData(strRowID)

    FRM_Logger_ReportInfoEvent "1003 Page2", "Set VOD data using Row Id '"&strRowID&"' in the BasicData datasheet", null
    
    BIZ_Forms_Open "1003 Page 2"
    GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=Button9")
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfObject("swfname:=btnNew")

	Dim objVODPage
    Set objVODPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("micClass:=Page")

	BIZ_Common_SetVODData objVODPage, strRowID
	
	Wait g_TinyWaitMedium
    
    GUI_SwfButton_Click Window("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")

	Set objVODPage = Nothing

End Function	



'This function is for set  data in 1003 page 1
'@code
'    BIZ_1003Page1_SetData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_SetData(strRowID)

    FRM_Logger_ReportInfoEvent "1003 Page1", "Set data using Row Id '"&strRowID&"' in the 1003Page1 datasheet", null    
    BIZ_Forms_Open "1003 Page 1"
	
	Set obj1003Page = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page1", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyAddress")) Then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_11"), FRM_DS_GetValue(objData, "PropertyAddress") 	'SubjectPropertyAddress
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyCity")) Then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_12"), FRM_DS_GetValue(objData, "PropertyCity") 	'SubjectPropertyCity
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyState")) Then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_14"), FRM_DS_GetValue(objData, "PropertyState") 'SubjectPropertyState
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyCounty")) Then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_13"), FRM_DS_GetValue(objData, "PropertyCounty") 	'County
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyZip")) Then	
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_15"), FRM_DS_GetValue(objData, "PropertyZip")     'SubjectPropertyZip
    End If
	if SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Exist(3) then
	    SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Click
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyType")) then 
		GUI_WebList_Select obj1003Page.WebList("html id:=DropdownBox4","index:=0"), FRM_DS_GetValue(objData, "PropertyType")   'PropertyType
	End if	
	val = FRM_DS_GetValue(objData, "NoUnits") 	    
	If UTIL_String_IsNotEmpty(val) Then	
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_16","index:=0"), val
	End If
    val = FRM_DS_GetValue(objData, "LegalDescription") 
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_17","index:=0"), val
	End If
    val = FRM_DS_GetValue(objData, "YearBuilt") 
    If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_18","index:=0"), val
	End If 	
    val = FRM_DS_GetValue(objData, "ExistingLien/UPB") 
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_26","index:=0"), val
	End If
    val = FRM_DS_GetValue(objData, "DescribeImprovements")
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_205","index:=0"), val
	End If
    val = FRM_DS_GetValue(objData, "Made")
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebCheckBox_Set SwfWindow("swfname:=MainForm").Page("title:=.*").WebCheckBox("html id:=__cid_CheckBox14_Ctrl","index:=0"), val
	End If	
    val = FRM_DS_GetValue(objData, "ToBeMade")
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebCheckBox_Set SwfWindow("swfname:=MainForm").Page("title:=.*").WebCheckBox("html id:=__cid_CheckBox21_Ctrl","index:=0"), val
	End If	
    val = FRM_DS_GetValue(objData, "Cost")
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_29","index:=0"), val
	End If	
	
	val = FRM_DS_GetValue(objData, "1172_LoanType")
    If UTIL_String_IsNotEmpty(val) Then	
        GUI_WebCheckBox_Set obj1003Page.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
    End If    
    val = FRM_DS_GetValue(objData, "420_LienPosition")
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebCheckBox_Set obj1003Page.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
	End If	
	val = FRM_DS_GetValue(objData, "608_AmortizationType")
    If UTIL_String_IsNotEmpty(val) Then	
        GUI_WebCheckBox_Set obj1003Page.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"	
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "136_PurchasePrice")) Then	
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_136"), FRM_DS_GetValue(objData, "136_PurchasePrice") 
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1109_LoanAmount")) Then	    
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_1109","index:=0"), FRM_DS_GetValue(objData, "1109_LoanAmount")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3_InterestRate")) Then	    
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_3"), FRM_DS_GetValue(objData, "3_InterestRate")    
    End If      
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1014_QualRate")) Then	    
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_1014"), FRM_DS_GetValue(objData, "1014_QualRate")    'QualRate
    End If    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4_Term")) Then	
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_4"), FRM_DS_GetValue(objData, "4_Term")          'Term
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "325_DueIn")) Then	
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_325"), FRM_DS_GetValue(objData, "325_DueIn")    'DueIn
    End If    
	val = FRM_DS_GetValue(objData, "19_PurposeOfLoan")
    If UTIL_String_IsNotEmpty(val) Then	
        GUI_WebCheckBox_Set obj1003Page.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
    End If    
	val = FRM_DS_GetValue(objData, "1811_PropertyWillBe")
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebCheckBox_Set obj1003Page.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "24_YearsAqd")) Then
       	GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_24"), FRM_DS_GetValue(objData, "24_YearsAqd")
   	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "25_OriginalCost")) Then
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_25"), FRM_DS_GetValue(objData, "25_OriginalCost")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "26_ExistingLein")) Then
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_26"), FRM_DS_GetValue(objData, "26_ExistingLein")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "29_Cost")) Then
        GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_29"), FRM_DS_GetValue(objData, "29_Cost")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PurposeOfRefinance")) Then
		obj1003Page.WebElement("innerhtml:=Refinance Loan").Highlight
		GUI_WinEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WinEdit("nativeclass:=Edit","index:=0"), FRM_DS_GetValue(objData, "PurposeOfRefinance")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1819_CHK_MailingAdd")) Then	
        GUI_WebCheckBox_Set obj1003Page.WebCheckbox("html id:=__cid_CheckBox26_Ctrl"), FRM_DS_GetValue(objData, "1819_CHK_MailingAdd")
    End If  
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1177_InterestOnly"))) Then 
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=TextBox12"), Trim(FRM_DS_GetValue(objData, "1177_InterestOnly"))
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "21_OriginalCost")) Then
	GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_21"), FRM_DS_GetValue(objData, "21_OriginalCost")
	End If	

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "10_ExistingLien")) Then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_10"), FRM_DS_GetValue(objData, "10_ExistingLien")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "22_PresentalueofLot")) Then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_22"), FRM_DS_GetValue(objData, "22_PresentalueofLot")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "23_CostofImprovements")) Then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=l_23"), FRM_DS_GetValue(objData, "23_CostofImprovements")
	End If
	
	'Mailing Address checkbox for co-borrower
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1820_CHK_MailingAdd")) Then	
        GUI_WebCheckBox_Set obj1003Page.WebCheckbox("html id:=__cid_CheckBox30_Ctrl"), FRM_DS_GetValue(objData, "1820_CHK_MailingAdd")
    End If  

	Set objData = Nothing	

End Function



'This function is for set VII. Details of Transaction section data in 1003 page 3
'@code
'    BIZ_1003Page3_SetDetailsTransaction(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page3_SetDetailsTransaction(strRowID)

    FRM_Logger_ReportInfoEvent "Set VII. Details of Transaction section data", "Set data using Row Id '"&strRowID&"' in the Forms_1003Page datasheet", null    
    
    Set obj1003Page3 = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    BIZ_Common_1003Page3_SetDetailsTransaction obj1003Page3, strRowID
    
    Set obj1003Page3 = Nothing

End Function



'This function is for set VII. Details of Transaction 
'@code
'    BIZ_Common_1003Page3_SetDetailsTransaction(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page3_SetDetailsTransaction(objParentObject, strRowID)
    
    Dim objData
    Set objData = FRM_DS_GetTestData("Forms_1003page", "SetDetailsTransaction", strRowID)
	
    'List 1
    If FRM_DS_TestDataColumnExists(objData, "I_List1") Then	
        GUI_WinEdit_Set objParentObject.WinEdit("regexpwndclass:=Edit","index:=0"), FRM_DS_GetValue(objData, "I_List1")
	End If
    If FRM_DS_TestDataColumnExists(objData, "I_Text1") Then	
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_141","index:=0"), FRM_DS_GetValue(objData, "I_Text1")
	End If

    'List 2		
    If FRM_DS_TestDataColumnExists(objData, "202_List2") Then	
        GUI_WinEdit_Set objParentObject.WinEdit("regexpwndclass:=Edit","index:=1"), FRM_DS_GetValue(objData, "202_List2")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1095_Text") Then	
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1095","index:=0"), FRM_DS_GetValue(objData, "1095_Text")
	End If

    'List 3
    If FRM_DS_TestDataColumnExists(objData, "202_List3") Then	
        GUI_WinEdit_Set objParentObject.WinEdit("regexpwndclass:=Edit","index:=2"), FRM_DS_GetValue(objData, "202_List3")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1115_Text") Then	
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1115","index:=0"), FRM_DS_GetValue(objData, "1115_Text")
	End If

    'List 4		
    If FRM_DS_TestDataColumnExists(objData, "202_List4") Then	
        GUI_WinEdit_Set objParentObject.WinEdit("regexpwndclass:=Edit","index:=3"), FRM_DS_GetValue(objData, "202_List4")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1647_Text") Then	
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1647","index:=0"), FRM_DS_GetValue(objData, "1647_Text")
	End If
    
	Set objData = Nothing	

End Function



'This function is for verify Property Information on 1003 p1
'@code
'    BIZ_1003Page1_VerifyProperty(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_VerifyProperty(strRowID)

    FRM_Logger_ReportInfoEvent "1003 Page 1", "Validate Property Information using Row Id '"&strRowID&"' in the Forms_1003Page datasheet", null
	
	BIZ_Forms_Open "1003 Page 1"
	
	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page1", strRowID)
	If FRM_DS_TestDataColumnExists(objData, "YearBuilt") Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_18","index:=0"), FRM_DS_GetValue(objData, "YearBuilt"), "Year Built"
	End If
	If FRM_DS_TestDataColumnExists(objData, "NoUnits") Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_16","index:=0"), FRM_DS_GetValue(objData, "NoUnits"), "Number of Units"
	End If
	If FRM_DS_TestDataColumnExists(objData, "LegalDescription") Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_17","index:=0"), FRM_DS_GetValue(objData, "LegalDescription"), "Legal Description"
	End If	
	
	Set objData = Nothing	
	
End Function



'This function is for set Income and Expense data in 1003 page 2
'@code
'    BIZ_1003Page2_SetMonthlyIncomeExpensesData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page2_SetMonthlyIncomeExpensesData(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page2", "Set Expense IncomeDropdownBox1 Detail data using Row Id '"&strRowID&"' in the Set Expense Income Detail datasheet", null
    
    BIZ_Forms_Open "1003 Page 2"
    Set obj1003Page2 =  SwfWindow("swfname:=MainForm").Page("index:=0")

	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page2", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "101_Base")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_101"), FRM_DS_GetValue(objData, "101_Base")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "102_Overtime")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_102"), FRM_DS_GetValue(objData, "102_Overtime")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "103_Bonuses")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_103"), FRM_DS_GetValue(objData, "103_Bonuses")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "104_Commissions")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_104"), FRM_DS_GetValue(objData, "104_Commissions")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "105_DivInterest")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_105"), FRM_DS_GetValue(objData, "105_DivInterest")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "106_NetRent")) Then
		GUI_WebButton_Click obj1003Page2.WebButton("html id:=FieldLock1")
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_106"), FRM_DS_GetValue(objData, "106_NetRent")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "107_Other")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_107"), FRM_DS_GetValue(objData, "107_Other")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "110_Base")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_110"), FRM_DS_GetValue(objData, "110_Base")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "111_Overtime")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_111"), FRM_DS_GetValue(objData, "111_Overtime")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "112_Bonuses")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_112"), FRM_DS_GetValue(objData, "112_Bonuses")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "113_Commissions")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_113"), FRM_DS_GetValue(objData, "113_Commissions")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "114_DivInterest")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_114"), FRM_DS_GetValue(objData, "114_DivInterest")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "115_NetRent")) Then
		GUI_WebButton_Click obj1003Page2.WebButton("html id:=FieldLock1")
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_115"), FRM_DS_GetValue(objData, "115_NetRent")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "116_Other")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_116"), FRM_DS_GetValue(objData, "116_Other")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "119_Rent")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_119"), FRM_DS_GetValue(objData, "119_Rent")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "120_FirstMortgage")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_120"), FRM_DS_GetValue(objData, "120_FirstMortgage")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "228_FirstMortgage")) Then
		GUI_WebButton_Click obj1003Page2.WebButton("html id:=FieldLock2")
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_228"), FRM_DS_GetValue(objData, "228_FirstMortgage")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "121_OtherFinance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_121"), FRM_DS_GetValue(objData, "121_OtherFinance")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "229_OtherFinance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_229"), FRM_DS_GetValue(objData, "229_OtherFinance")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "122_HazardInsurance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_122"), FRM_DS_GetValue(objData, "122_HazardInsurance")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "230_HazardInsurance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_230"), FRM_DS_GetValue(objData, "230_HazardInsurance")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "123_RETaxes")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_123"), FRM_DS_GetValue(objData, "123_RETaxes")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1405_RETaxes")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_1405"), FRM_DS_GetValue(objData, "1405_RETaxes")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "124_MortgageInsurance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_124"), FRM_DS_GetValue(objData, "124_MortgageInsurance")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "125_AssociationDues")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_125"), FRM_DS_GetValue(objData, "125_AssociationDues")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "233_AssociationDues")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_233","index:=0"), FRM_DS_GetValue(objData, "233_AssociationDues")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "126_Other")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_126"), FRM_DS_GetValue(objData, "126_Other")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "144_OtherBC")) Then
		GUI_WebEdit_Set obj1003Page2.WebEdit("html id:=l_144"),  FRM_DS_GetValue(objData, "144_OtherBC")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OtherDescription")) Then
		SwfWindow("swfname:=MainForm").Page("index:=0").WinEdit("nativeclass:=Edit","index:=0").Set FRM_DS_GetValue(objData, "OtherDescription")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "146_OtherMonthlyIncome")) Then
		GUI_WebEdit_Set obj1003Page2.WebEdit("html id:=l_146"),  FRM_DS_GetValue(objData, "146_OtherMonthlyIncome")
	End If
		
End Function



'This function is for set Declarations on 1003 page 3
'@code
'    BIZ_1003Page3_SetDeclarations(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page3_SetDeclarations(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page3", "Set Declarations using Row Id '"&strRowID&"' in '1003Page'", null
    
    BIZ_Forms_Open "1003 Page 3"
    Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")

	BIZ_Common_1003Page3_SetDeclarations obj1003Page, strRowID	

    Set obj1003Page = Nothing

End Function



'This function is a common function for set Declarations on 1003 page 3 form or Data Templates
'@code
'    BIZ_Common_1003Page3_SetDeclarations(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page3_SetDeclarations(objParentObject, strRowID)  

	Set objData = FRM_DS_GetTestData("Forms_1003page", "Declarations", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OutstandingJudgement_169_B")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_169","index:=0"), FRM_DS_GetValue(objData, "OutstandingJudgement_169_B")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OutstandingJudgement_175_C")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_175","index:=0"), FRM_DS_GetValue(objData, "OutstandingJudgement_175_C")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BankruptIn7Years_B_265")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_265","index:=0"), FRM_DS_GetValue(objData, "BankruptIn7Years_B_265")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BankruptIn7Years_C_266")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_266","index:=0"), FRM_DS_GetValue(objData, "BankruptIn7Years_C_266")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Forclosure_B_170")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_170","index:=0"), FRM_DS_GetValue(objData, "Forclosure_B_170")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Forclosure_C_176")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_176","index:=0"), FRM_DS_GetValue(objData, "Forclosure_C_176")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Lawsuit_B_172")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_172","index:=0"), FRM_DS_GetValue(objData, "Lawsuit_B_172")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Lawsuit_C_178")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_178","index:=0"), FRM_DS_GetValue(objData, "Lawsuit_C_178")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ObligatedOnAnyLoan_B_1057")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1057","index:=0"), FRM_DS_GetValue(objData, "ObligatedOnAnyLoan_B_1057")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ObligatedOnAnyLoan_C_1197")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1197","index:=0"), FRM_DS_GetValue(objData, "ObligatedOnAnyLoan_C_1197")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Delinquent_B_463")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_463","index:=0"), FRM_DS_GetValue(objData, "Delinquent_B_463")
	End If			
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Delinquent_C_464")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_464","index:=0"), FRM_DS_GetValue(objData, "Delinquent_C_464")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Alimony_B_173")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_173","index:=0"), FRM_DS_GetValue(objData, "Alimony_B_173")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Alimony_C_179")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_179","index:=0"), FRM_DS_GetValue(objData, "Alimony_C_179")
	End If			
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowedDownPayment_B_174")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_174","index:=0"), FRM_DS_GetValue(objData, "BorrowedDownPayment_B_174")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowedDownPayment_C_180")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_180","index:=0"), FRM_DS_GetValue(objData, "BorrowedDownPayment_C_180")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoMakerOnANote_B_171")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_171","index:=0"), FRM_DS_GetValue(objData, "CoMakerOnANote_B_171")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoMakerOnANote_C_177")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_177","index:=0"), FRM_DS_GetValue(objData, "CoMakerOnANote_C_177")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "USCitizen_B_965")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_965","index:=0"), FRM_DS_GetValue(objData, "USCitizen_B_965")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "USCitizen_C_985")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_985","index:=0"), FRM_DS_GetValue(objData, "USCitizen_C_985")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PermanentResident_B_466")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_466","index:=0"), FRM_DS_GetValue(objData, "PermanentResident_B_466")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PermanentResident_C_467")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_467","index:=0"), FRM_DS_GetValue(objData, "PermanentResident_C_467")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PrimaryResidence_B_418")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_418","index:=0"), FRM_DS_GetValue(objData, "PrimaryResidence_B_418")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PrimaryResidence_C_1343")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1343","index:=0"), FRM_DS_GetValue(objData, "PrimaryResidence_C_1343")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OwnershipIn3Years_B_403")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_403","index:=0"), FRM_DS_GetValue(objData, "OwnershipIn3Years_B_403")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OwnershipIn3Years_C_1108")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1108","index:=0"), FRM_DS_GetValue(objData, "OwnershipIn3Years_C_1108")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TypeOfProperty_B_981")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_981","index:=0"), FRM_DS_GetValue(objData, "TypeOfProperty_B_981")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TypeOfProperty_C_1015")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1015","index:=0"), FRM_DS_GetValue(objData, "TypeOfProperty_C_1015")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TypeOfTitleHold_B_1069")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1069","index:=0"), FRM_DS_GetValue(objData, "TypeOfTitleHold_B_1069")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TypeOfTitleHold_C_1070")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1070","index:=0"), FRM_DS_GetValue(objData, "TypeOfTitleHold_C_1070")
	End If

    Set objData = Nothing

End Function 



'This function is to click the "Edit" icon for field 1045 on the 1003 Page 1
'@code
'    BIZ_1003Page1_ClickEditIconFor1045()
'@endcode
Function BIZ_1003Page1_ClickEditIconFor1045()
    GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=StandardButton2")
End Function



'This function is to set Liabilities.
'@code
'    BIZ_1003Page2_SetLiabilities(strRowID)
'@endcode

Function BIZ_1003Page2_SetLiabilities(strRowID)

	Dim objData, obj1003Page2
	BIZ_Forms_Open "1003 Page 2"
	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetLiabilities", strRowID)
	
	Set obj1003Page2 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Type")) then 
		GUI_WebList_Select obj1003Page2.WebList("html id:=DropdownBox9","index:=0"), FRM_DS_GetValue(objData, "Type")
	End if	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Balance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0113","index:=0"), FRM_DS_GetValue(objData, "Balance")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "l_FL0111_Payment")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0111","index:=0"), FRM_DS_GetValue(objData, "l_FL0111_Payment")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "l_FL0112_MosLeft")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0112","index:=0"), FRM_DS_GetValue(objData, "l_FL0112_MosLeft")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaidOffIndicator")) Then
		GUI_WebCheckBox_Set obj1003Page2.WebCheckBox("html id:=__cid_CheckBox3_Ctrl","index:=0"),FRM_DS_GetValue(objData, "PaidOffIndicator")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0202_CompanyName")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0202","index:=0"), FRM_DS_GetValue(objData, "FL0202_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2_Type")) then 
		GUI_WebList_Select obj1003Page2.WebList("html id:=DropdownBox2","index:=0"), FRM_DS_GetValue(objData, "2_Type")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1_FL0213_Balance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0213","index:=0"), FRM_DS_GetValue(objData, "1_FL0213_Balance")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "l_FL0211_Payment")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0211","index:=0"), FRM_DS_GetValue(objData, "l_FL0211_Payment")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "l_FL0212_MosLeft")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0212","index:=0"), FRM_DS_GetValue(objData, "l_FL0212_MosLeft")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaidOffIndicator")) Then
		GUI_WebCheckBox_Set obj1003Page2.WebCheckBox("html id:=__cid_CheckBox4_Ctrl","index:=0"),FRM_DS_GetValue(objData, "PaidOffIndicator")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1604_CompanyNameAndAccount")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_1604","index:=0"), FRM_DS_GetValue(objData, "1604_CompanyNameAndAccount")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1605_Value")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_1605","index:=0"), FRM_DS_GetValue(objData, "1605_Value")
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "221_Description")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_221","index:=0"), FRM_DS_GetValue(objData, "221_Description")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "222_Value")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_222","index:=0"), FRM_DS_GetValue(objData, "222_Value")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0102_CompanyName")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0102","index:=0"), FRM_DS_GetValue(objData, "FL0102_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0108_LiabilityType")) Then
		GUI_WebList_Select obj1003Page2.WebList("html id:=DropdownBox9","index:=0"), FRM_DS_GetValue(objData, "FL0108_LiabilityType")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0113_Balance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0113","index:=0"), FRM_DS_GetValue(objData, "FL0113_Balance")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0111_Payment")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0111","index:=0"), FRM_DS_GetValue(objData, "FL0111_Payment")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0112_MosLeft")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0112","index:=0"), FRM_DS_GetValue(objData, "FL0112_MosLeft")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0118_PaidOff")) Then
		GUI_WebCheckBox_Set obj1003Page2.WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), FRM_DS_GetValue(objData, "FL0118_PaidOff")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0202_CompanyName")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0202","index:=0"), FRM_DS_GetValue(objData, "FL0202_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0208_LiabilityType")) Then
		GUI_WebList_Select obj1003Page2.WebList("html id:=l_FL0208|DropdownBox2","index:=0"), FRM_DS_GetValue(objData, "FL0208_LiabilityType")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0213_Balance")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0213","index:=0"), FRM_DS_GetValue(objData, "FL0213_Balance")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0211_Payment")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0211","index:=0"), FRM_DS_GetValue(objData, "FL0211_Payment")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0212_MosLeft")) Then
		GUI_WebEdit_Set  obj1003Page2.WebEdit("html id:=l_FL0212","index:=0"), FRM_DS_GetValue(objData, "FL0212_MosLeft")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0218_PaidOff")) Then
		GUI_WebCheckBox_Set obj1003Page2.WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), FRM_DS_GetValue(objData, "FL0218_PaidOff")
	End If

	Set objData = Nothing
	
	Set obj1003Page2 = Nothing
	
End Function



'This function is for set Loan Originator on 1003 page 3
'@code
'    BIZ_1003Page3_SetLoanOriginator(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page3_SetLoanOriginator(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page3", "Set Loan Originator using Row Id '"&strRowID&"' in '1003Page'", null
    
    	BIZ_Forms_Open "1003 Page 3"
    	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")

	BIZ_Common_1003Page3_SetLoanOriginator obj1003Page, strRowID	

    Set obj1003Page = Nothing

End Function



'This function is a common function for set Loan Originator on 1003 page 3 form 
'@code
'    BIZ_Common_1003Page3_SetLoanOriginator(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page3_SetLoanOriginator(objParentObject, strRowID)  

	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetLoanOriginator", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "InfoProvidedBy")) Then
		GUI_WebList_Select  objParentObject.WebList("html id:=DropdownBox5"), FRM_DS_GetValue(objData, "InfoProvidedBy")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1612_LoanOriginatorName")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1612"), FRM_DS_GetValue(objData, "1612_LoanOriginatorName")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3238_NMLSLoanOriginatorID")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=I_3238"), FRM_DS_GetValue(objData, "3238_NMLSLoanOriginatorID")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1823_LoanOriginatorPhone")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_1823"), FRM_DS_GetValue(objData, "1823_LoanOriginatorPhone")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3968_LoanOriginatorEmail")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "3968_LoanOriginatorEmail")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2306_LOStateLicenseNumber")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "2306_LOStateLicenseNumber")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3261_1003SignatureDate")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "3261_1003SignatureDate")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "315_CompanyName")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_315"), FRM_DS_GetValue(objData, "315_CompanyName")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3237_NMLSID")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=I_3237"), FRM_DS_GetValue(objData, "3237_NMLSID")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "319_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_319"), FRM_DS_GetValue(objData, "319_Address")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "313_City")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_313"), FRM_DS_GetValue(objData, "313_City")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "321_State")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_321"), FRM_DS_GetValue(objData, "321_State")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "323_Zip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_323"), FRM_DS_GetValue(objData, "323_Zip")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3629_CompanyStateLicenseNumber")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "3629_CompanyStateLicenseNumber")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "324_Phone")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_324"), FRM_DS_GetValue(objData, "324_Phone")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "326_Fax")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_326"), FRM_DS_GetValue(objData, "326_Fax")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1969_CopyToLender")) Then
		GUI_WebCheckBox_Set  objParentObject.WebCheckBox("html id:=__cid_CheckBox22_Ctrl"), FRM_DS_GetValue(objData, "1969_CopyToLender")
	End If	

End Function



'This function is for verify transaction details on 1003 page 3
'@code
'    BIZ_1003Page3_VerifyTransactionDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page3_VerifyTransactionDetails(strRowID)

    FRM_Logger_ReportInfoEvent "1003 Page 3", "Validate Property Information using Row Id '"&strRowID&"' in the Forms_1003Page datasheet", null
	
	Dim obj1003Page3
	
	Set obj1003Page3 = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Forms_Open "1003 Page 3"
	
	BIZ_Common_1003Page3_VerifyTransactionDetails obj1003Page3,strRowID
	
	Set obj1003Page3 = Nothing
	Set objData 	 = Nothing

End Function



'This function is for verify transaction details on 1003 page 3
'@code
'    BIZ_Common_1003Page3_VerifyTransactionDetails(objParentObject,strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page3_VerifyTransactionDetails(objParentObject,strRowID)
	
	FRM_Logger_ReportInfoEvent "1003 Page 3", "Validate Property Information using Row Id '"&strRowID&"' in the Forms_1003Page datasheet", null
	
	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page3", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "137_EstimatedClosingCost")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_137"), FRM_DS_GetValue(objData, "137_EstimatedClosingCost"), "EstimatedClosingCost"
	End If	

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1093_Discount")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1093"), FRM_DS_GetValue(objData, "1093_Discount"), "Discount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "136_PurchasePrice")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_136"), FRM_DS_GetValue(objData, "136_PurchasePrice"), "Field136:PurchasePrice"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1092_Refinance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1092"), FRM_DS_GetValue(objData, "1092_Refinance"), "F1092:Refinance"
	End If
	
	Set objData = Nothing
	
End Function



'This function is a  for set Borrower on 1003 page 3 form 
'@code
'    BIZ_1003Page3_SetBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page3_SetBorrower(strRowId)
	FRM_Logger_ReportInfoEvent "1003 Page3", "Set Borrower using Row Id '"&strRowID&"' in '1003Page'", null
    
    	BIZ_Forms_Open "1003 Page 3"
    	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page3", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Borrower_Ethnicity")) Then
		GUI_WebList_Select  obj1003Page.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "Borrower_Ethnicity")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1524_AmericanIndian")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox4_Ctrl"), FRM_DS_GetValue(objData, "1524_AmericanIndian")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1525_Asian")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox5_Ctrl"), FRM_DS_GetValue(objData, "1525_Asian")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1526_Black")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox6_Ctrl"), FRM_DS_GetValue(objData, "1526_Black")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1527_NativeHawaiian")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox7_Ctrl"), FRM_DS_GetValue(objData, "1527_NativeHawaiian")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1528_White")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox8_Ctrl"), FRM_DS_GetValue(objData, "1528_White")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1529_NoInformation")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"), FRM_DS_GetValue(objData, "1529_NoInformation")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1530_NotApplicable")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"), FRM_DS_GetValue(objData, "1530_NotApplicable")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Borrower_Sex")) Then
		GUI_WebList_Select  obj1003Page.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "Borrower_Sex")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrower_Ethnicity")) Then
		GUI_WebList_Select  obj1003Page.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "CoBorrower_Ethnicity")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1533_AmericanIndian")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox13_Ctrl"), FRM_DS_GetValue(objData, "1533_AmericanIndian")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1534_Asian")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox14_Ctrl"), FRM_DS_GetValue(objData, "1534_Asian")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1535_Black")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox15_Ctrl"), FRM_DS_GetValue(objData, "1535_Black")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1536_NativeHawaiian")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox16_Ctrl"), FRM_DS_GetValue(objData, "1536_NativeHawaiian")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1537_White")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox17_Ctrl"), FRM_DS_GetValue(objData, "1537_White")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1538_NoInformation")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox18_Ctrl"), FRM_DS_GetValue(objData, "1538_NoInformation")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1539_NotApplicable")) Then
		GUI_WebCheckBox_Set  obj1003Page.WebCheckBox("html id:=__cid_CheckBox19_Ctrl"), FRM_DS_GetValue(objData, "1539_NotApplicable")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrower_Sex")) Then
		GUI_WebList_Select  obj1003Page.WebList("html id:=DropdownBox6"), FRM_DS_GetValue(objData, "CoBorrower_Sex")
	End If
End Function



'This function is a  used for entering details in 1003 Page Form 
'@code
'    BIZ_1003Page1_SetTitleDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_SetTitleDetails(strRowID)
	FRM_Logger_ReportInfoEvent "1003 Page1", "Set title info using Row Id '"&strRowID&"' in '1003Page'", null
    
   	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")
	
	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetTitleDetails", strRowID)
	
	BIZ_Forms_Open "1003 Page 1"
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TitleManner")) then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_31")
		GUI_WinEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").ActiveX("progid:=JedCombo2.ComboFull.1","Location:=0").WinEdit("nativeclass:=Edit"), "Single man"
		SwfWindow("swfname:=MainForm").Page("index:=0").ActiveX("progid:=JedCombo2.ComboFull.1","Location:=0").WinEdit("nativeclass:=Edit").Click
	End if
	
    Set SourceOfDownPymt = obj1003Page.WebList("html id:=DropdownBox2")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DownPaymentSource")) then
		GUI_WebList_Select SourceOfDownPymt, FRM_DS_GetValue(objData, "DownPaymentSource")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ExpanDownPayment")) then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=MultilineTextBox1","title:=191*.*"), FRM_DS_GetValue(objData, "ExpanDownPayment")
	End if
	'If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EstateWillBeHeldIn")) then
	'	SwfWindow("swfname:=MainForm").Page("index:=0").WebElement("html tag:=TD","innertext:=Estate will be held in").Highlight
	'	GUI_WebList_Select obj1003Page.WebList("html tag:=SELECT","name:=select","index:=0"), FRM_DS_GetValue(objData, "EstateWillBeHeldIn")
	'End if

    Set obj1003Page = Nothing

 End Function
 
 
 
 'This function is a  used for entering details in 1003 Page Form 
'@code
'    BIZ_1003Page1_SetTitleDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_SetCreditScores(strRowID)
	FRM_Logger_ReportInfoEvent "1003 Page1", "Set Credit Score using Row Id '"&strRowID&"' in '1003Page'", null
    
   	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")
	
	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetTitleDetails", strRowID)
	
	BIZ_Forms_Open "1003 Page 1"
 	obj1003Page.WebEdit("html id:=l_205").Highlight
    Set ActXObject  = obj1003Page.ActiveX("progid:=JedCombo2.ComboFull.1","index:=1","nativeclass:=ATL:*.*").Object
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TitleManner")) then
		GUI_ActiveX_SetTextInComobox ActXObject, FRM_DS_GetValue(objData, "TitleManner")
	End if
	
    Set SourceOfDownPymt = obj1003Page.WebList("html id:=DropdownBox2")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DownPaymentSource")) then
		GUI_WebList_Select SourceOfDownPymt, FRM_DS_GetValue(objData, "DownPaymentSource")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ExpanDownPayment")) then
		GUI_WebEdit_Set obj1003Page.WebEdit("html id:=MultilineTextBox1","title:=191*.*"), FRM_DS_GetValue(objData, "ExpanDownPayment")
	End if

    Set obj1003Page = Nothing

 End Function

 
 
 'This function is for verify Employment info on 1003 page 1
'@code
'    BIZ_1003Page1_VerifyEmployment(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_VerifyEmployment(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page1", "Verify employment info using Row Id '"&strRowID&"' in '1003Page'", null
    
   	BIZ_Forms_Open "1003 Page 1"
   	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")

	BIZ_Common_1003Page1_VerifyEmployment obj1003Page, strRowID	

    Set obj1003Page = Nothing

End Function



'This function is a common function for Verify Employment info  on 1003 page 1 form 
'@code
'    BIZ_Common_1003Page1_VerifyEmployment(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page1_VerifyEmployment(objParentObject, strRowID)  

	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetEmployment", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0115_SelfEmployed")) Then
		GUI_Object_ValidateValue objParentObject.WebCheckBox("html id:=__cid_CheckBox35_Ctrl"), FRM_DS_GetValue(objData, "FE0115_SelfEmployed"), "Self Employed"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0102_Employer")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0102"), FRM_DS_GetValue(objData, "FE0102_Employer"), "Employer"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0104_Address")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0104"), FRM_DS_GetValue(objData, "FE0104_Address"), "Address"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0105_City")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0105"), FRM_DS_GetValue(objData, "FE0105_City"), "City"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0106_State")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0106"), FRM_DS_GetValue(objData, "FE0106_State"), "State"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0107_Zip")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0107"), FRM_DS_GetValue(objData, "FE0107_Zip"), "Zip"
		If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities")))Then 
			Set CitiesGrid = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities")
			GUI_List_ClickRow CitiesGrid, Null, "City Name", FRM_DS_GetValue(objData, "FE0105_City"), True, False, False, "Double"
			Set CitiesGrid = Nothing
		End If
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0110_Position")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0110"), FRM_DS_GetValue(objData, "FE0110_Position"), "Position"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0117_Phone")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0117"), FRM_DS_GetValue(objData, "FE0117_Phone"), "Phone"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0113_YearsonJob")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0113"), FRM_DS_GetValue(objData, "FE0113_YearsonJob"), "Years on Job"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0133_Months")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0133"), FRM_DS_GetValue(objData, "FE0133_Months"), "Months"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0116_Years")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_FE0116"), FRM_DS_GetValue(objData, "FE0116_Years"), "Years"
	End If
End Function



'This function is for Verify Borrower on 1003 page 1
'@code
'    BIZ_1003Page1_VerifyBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_VerifyBorrower(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page1", "Verify Borrower using Row Id '"&strRowID&"' in '1003Page'", null
    
    	BIZ_Forms_Open "1003 Page 1"
    	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")

	BIZ_Common_1003Page1_VerifyBorrower obj1003Page, strRowID	

    Set obj1003Page = Nothing

End Function



'This function is a common function for Verify Borrower on 1003 page 1 form 
'@code
'    BIZ_Common_1003Page1_VerifyBorrower(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page1_VerifyBorrower(objParentObject, strRowID)  

	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetBorrower", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4000_FirstName")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_36"), FRM_DS_GetValue(objData, "4000_FirstName"), "First Name"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4001_Middle")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "4001_Middle"), "Middle"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4002_LastName")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_37"), FRM_DS_GetValue(objData, "4002_LastName"), "Last Name"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "65_SSN")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_65"), FRM_DS_GetValue(objData, "65_SSN"), "SSN"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1402_DOB")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1402"), FRM_DS_GetValue(objData, "1402_DOB"), "DOB"
	End If	

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1240_Email")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "1240_Email"), "Email"
	End If	

End Function



'This function is a  used for verifying title details in 1003 Page Form 
'@code
'    BIZ_1003Page1_VerifyTitleDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_VerifyTitleDetails(strRowID)
	FRM_Logger_ReportInfoEvent "1003 Page1", "Verify title info using Row Id '"&strRowID&"' in '1003Page'", null
    
   	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")
	
	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetTitleDetails", strRowID)
	
	BIZ_Forms_Open "1003 Page 1"
 	obj1003Page.WebEdit("html id:=l_205").Highlight

	if UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ExpanDownPayment")) then
		GUI_Object_ValidateValue obj1003Page.WebEdit("html id:=MultilineTextBox1","title:=191*.*"), FRM_DS_GetValue(objData, "ExpanDownPayment"), "Expan Down Payment"
	End if

    Set obj1003Page = Nothing

 End Function
 
 
 
 'This function is for verify Income and Expense data in 1003 page 2
'@code
'    BIZ_1003Page2_VerifyMonthlyIncomeExpensesData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page2_VerifyMonthlyIncomeExpensesData(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page2", "Verify Expense Income Detail data using Row Id '"&strRowID&"' in the Set Expense Income Detail datasheet", null
    
    	BIZ_Forms_Open "1003 Page 2"
   	Set obj1003Page2 =  SwfWindow("swfname:=MainForm").Page("index:=0")

	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page2", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "101_Base")) Then
		GUI_Object_ValidateValue obj1003Page2.WebEdit("html id:=l_101"), FRM_DS_GetValue(objData, "101_Base"), "Base"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "102_Overtime")) Then
		GUI_Object_ValidateValue obj1003Page2.WebEdit("html id:=l_102"), FRM_DS_GetValue(objData, "102_Overtime"), "Over Time"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "103_Bonuses")) Then
		GUI_Object_ValidateValue obj1003Page2.WebEdit("html id:=l_103"), FRM_DS_GetValue(objData, "103_Bonuses"), "Bonuses"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "104_Commissions")) Then
		GUI_Object_ValidateValue obj1003Page2.WebEdit("html id:=l_104"), FRM_DS_GetValue(objData, "104_Commissions"), "Commissions"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "105_DivInterest")) Then
		GUI_Object_ValidateValue obj1003Page2.WebEdit("html id:=l_105"), FRM_DS_GetValue(objData, "105_DivInterest"), "Div Interest"
	End If	
	if UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "107_Other")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_107"), FRM_DS_GetValue(objData, "107_Other"), "Other"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "111_Base")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_111"), FRM_DS_GetValue(objData, "111_Base"), "Base"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "112_Overtime")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_112"), FRM_DS_GetValue(objData, "112_Overtime"), "Overtime"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "113_Bonuses")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_113"), FRM_DS_GetValue(objData, "113_Bonuses"), "Bonuses"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "114_Commissions")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_114"), FRM_DS_GetValue(objData, "114_Commissions"), "Commissions"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "115_DivInterest")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_115"), FRM_DS_GetValue(objData, "115_DivInterest"), "Div Interest"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "117_Other")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_117"), FRM_DS_GetValue(objData, "117_Other"), "Other"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "119_Rent")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_119"), FRM_DS_GetValue(objData, "119_Rent"), "Rent"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "120_FirstMortgage")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_120"), FRM_DS_GetValue(objData, "120_FirstMortgage"), "First Mortgage"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "121_OtherFinance")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_121"), FRM_DS_GetValue(objData, "121_OtherFinance"), "Other Finance"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "229_OtherFinance")) Then
		GUI_Object_ValidateValue   obj1003Page2.WebEdit("html id:=l_229"), FRM_DS_GetValue(objData, "229_OtherFinance"), "Other Finance"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "122_HazardInsurance")) Then
		GUI_Object_ValidateValue   obj1003Page2.WebEdit("html id:=l_122"), FRM_DS_GetValue(objData, "122_HazardInsurance"), "Hazard Insurance"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "230_HazardInsurance")) Then
		GUI_Object_ValidateValue   obj1003Page2.WebEdit("html id:=l_230"), FRM_DS_GetValue(objData, "230_HazardInsurance"), "Hazard Insurance"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "123_RETaxes")) Then
		GUI_Object_ValidateValue  obj1003Page2.WebEdit("html id:=l_123"), FRM_DS_GetValue(objData, "123_RETaxes"), "RETaxes"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1405_RETaxes")) Then
		GUI_Object_ValidateValue   obj1003Page2.WebEdit("html id:=l_1405"), FRM_DS_GetValue(objData, "1405_RETaxes"), "RETaxes"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "124_MortgageInsurance")) Then
		GUI_Object_ValidateValue   obj1003Page2.WebEdit("html id:=l_124"), FRM_DS_GetValue(objData, "124_MortgageInsurance"), "Mortgage Insurance"
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "125_AssociationDues")) Then
		GUI_Object_ValidateValue   obj1003Page2.WebEdit("html id:=l_125"), FRM_DS_GetValue(objData, "125_AssociationDues"), "Association Dues"
	End If		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "233_AssociationDues")) Then
		GUI_Object_ValidateValue   obj1003Page2.WebEdit("html id:=l_233","index:=0"), FRM_DS_GetValue(objData, "233_AssociationDues"), "Association Dues"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "126_Other")) Then
		GUI_Object_ValidateValue   obj1003Page2.WebEdit("html id:=l_126"), FRM_DS_GetValue(objData, "126_Other"), "Other"
	End If		

End Function



 'This function is for Set AutomobilesOwned in 1003 page 2
'@code
'    BIZ_1003Page2_SetAutomobilesOwned(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page2_SetAutomobilesOwned(strRowID)

	FRM_Logger_ReportInfoEvent "1003 Page2", "Set  Expense Income Detail data using Row Id '"&strRowID&"' in the Set Expense Income Detail datasheet", null
    
	BIZ_Forms_Open "1003 Page 2"
   	Set obj1003Page2 =  SwfWindow("swfname:=MainForm").Page("index:=0")

	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page2", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "214_MakeAndYear")) then
		GUI_WebEdit_Set obj1003Page2.WebEdit("html id:=l_214"), FRM_DS_GetValue(objData, "214_MakeAndYear")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "215_Value")) then
		GUI_WebEdit_Set obj1003Page2.WebEdit("html id:=l_215"), FRM_DS_GetValue(objData, "215_Value")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "216_MakeAndYear")) then
		GUI_WebEdit_Set obj1003Page2.WebEdit("html id:=l_216"), FRM_DS_GetValue(objData, "216_MakeAndYear")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "217_Value")) then
		GUI_WebEdit_Set obj1003Page2.WebEdit("html id:=l_217"), FRM_DS_GetValue(objData, "217_Value")
	End if
	Set obj1003Page2 =  Nothing
	Set objData =  Nothing
	
End Function



'This function is for set VOL data in 1003 page 2
'@code
'    BIZ_1003Page2_SetVOLData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page2_SetVOLData(strRowID)

    FRM_Logger_ReportInfoEvent "1003 Page2", "Set VOD data using Row Id '"&strRowID&"' in the BasicData datasheet", null
    
    BIZ_Forms_Open "1003 Page 2"
    GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=Button13")
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfObject("swfname:=btnNew")

	Dim objVOLPage
    Set objVOLPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("micClass:=Page")
	BIZ_Common_SetVOLData objVOLPage, strRowID
    
	Wait g_TinyWaitSmall
	
    GUI_SwfButton_Click Window("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
	
	Wait g_TinyWaitSmall

	Set objVODPage = Nothing

End Function



'This function is Verify Assets and Liabilities in 1003 page 3
'@code
'    BIZ_1003Page3_VerifyAssetsandLiabilities(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page3_VerifyAssetsandLiabilities(strRowID)
	
	FRM_Logger_ReportInfoEvent "1003 Page 3", "Validate Assets and Liabilitiesusing Row Id '"&strRowID&"' in the Forms_1003Page datasheet", Null
	
	Dim obj1003Page3
	
	Set obj1003Page3 = SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0")	
	BIZ_Common_1003Page3_VerifyAssetsandLiabilities obj1003Page3,strRowID
	
	Set obj1003Page3 = Nothing

End Function



'This function is Verify Assets and Liabilities in 1003 page 3
'@code
'    BIZ_Common_1003Page3_VerifyAssetsandLiabilities(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page3_VerifyAssetsandLiabilities(objParentObject,strRowID)
	
	FRM_Logger_ReportInfoEvent "1003 Page 3", "Validate Assets and Liabilitiesusing Row Id '"&strRowID&"' in the Forms_1003Page datasheet", Null
	
	Dim objData
	
	Set objData = FRM_DS_GetTestData("Forms_1003page", "1003Page3", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"919_MarketValue")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_919"),FRM_DS_GetValue(objData,"919_MarketValue"),"F919_Market Value"
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"920_AmountofMtg")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_920"),FRM_DS_GetValue(objData,"920_AmountofMtg"),"F920_Amount of Marketing"
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"922_MtgPayment")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_922"),FRM_DS_GetValue(objData,"922_MtgPayment"),"F922_Marketing Payment"
	End If
			
	Set objData = Nothing
		
End Function



'This function is to SetMiandPiDetails in 1003 page 1
'@code
'    BIZ_1003Page1_SetMiandPiDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page1_SetMiandPiDetails(strRowID)

	BIZ_Forms_Open "1003 Page 1"
	BIZ_Common_1003Page1_SetMiandPiDetails strRowID

End Function



'This function is to SetMiandPiDetails in 1003 page 1
'@code
'    BIZ_Common_1003Page1_SetMiandPiDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1003Page1_SetMiandPiDetails(strRowID)

	FRM_Logger_ReportInfoEvent "Set MiandPi Details in 1003Page1","Set MI and Pi details in 1003 Page 1 i using row id:"&strRowID&"",Null

	Dim objData,objMIPWin,obj1003Page
	
	Set objData = FRM_DS_GetTestData("Forms_1003Page", "SetMiandPiDetails", strRowID)
	Set obj1003Page = SwFwindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objMIPWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
	
	GUI_WebButton_Click obj1003Page.WebButton("html id:=StandardButton2")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1107_MIP/Funding/Guarantee")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData, "1107_MIP/Funding/Guarantee")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1198_Months")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=monthMI1Txt"),FRM_DS_GetValue(objData, "1198_Months")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1199_Interest Rate")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMI1Txt"),FRM_DS_GetValue(objData, "1199_Interest Rate")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1209_Cancelat")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData, "1209_Cancelat")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1201_InterestRate")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMI2Txt"),FRM_DS_GetValue(objData, "1201_InterestRate")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1200_Months")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=monthMI2Txt"),FRM_DS_GetValue(objData, "1200_Months")
	End If 
	
	GUI_SwfButton_Click objMIPWin.SwfButton("swfname:=okBtn")
	
	Set objData   	= Nothing
	Set objMIPWin 	= Nothing
	Set obj1003Page = Nothing
	
End Function



'This function is used to Verify fee data in 1003 page 2
'@code
'    BIZ_Common_1003Page2_VerifyFeeData(strRowID) 
'@endcode
'@param strRowID- Row Id of test data in excel spreadsheet	

Function BIZ_Common_1003Page2_VerifyFeeData(strRowID) 

	FRM_Logger_ReportInfoEvent "Verify Fee details in 1003 page 2","Verify few details using Row id"&strRowID,Null	

	Dim objData,objFeeDetailsPage,objHazTax,objRETax
	
	Set objFeeDetailsPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objHazTax		  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=InsuranceDialog")
	Set objRETax    	  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RETaxesDialog")
	Set objData 	   	  = FRM_DS_GetTestData("Forms_1003Page", "1003Page2", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "230_HazIns")) Then
		GUI_WebButton_Click objFeeDetailsPage.WebButton("html id:=StandardButton4") 
		GUI_Object_ValidateText objHazTax.SwfComboBox("swfname:=typeCombo"),FRM_DS_GetValue(objData, "AmountType"),"AmountType is "&FRM_DS_GetValue(objData, "AmountType")&""
		GUI_SwfButton_Click objHazTax.SwfButton("swfname:=okBtn")
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=l_230"),FRM_DS_GetValue(objData, "230_HazardInsurance"),"F230_HazardInsurance "&FRM_DS_GetValue(objData, "230_HazardInsurance")	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1405_RETaxes")) Then
		GUI_WebButton_Click objFeeDetailsPage.WebButton("html id:=StandardButton5") 
		GUI_Object_ValidateText objRETax.SwfComboBox("swfname:=typeCombo"),FRM_DS_GetValue(objData, "AmountType"),"AmountType is "&FRM_DS_GetValue(objData, "AmountType")&""
		GUI_SwfButton_Click objRETax.SwfButton("swfname:=okBtn")
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=l_1405"),FRM_DS_GetValue(objData, "1405_RETaxes"),"F1405_RETaxes "&FRM_DS_GetValue(objData, "1405_RETaxes")	
	End If 
	
	Set objData  	      = Nothing
	Set objFeeDetailsPage = Nothing
	Set objHazTax		  = Nothing
	Set objRETax 		  = Nothing
	
End Function



'This function is used to Set MI amount in 1003Page1 
'@code
'    Function BIZ_1003Page1_MIDetails_SetTotLoanAmt(strRefund,strRowID)
'@endcode
'@Param strRowID  points row in excel 
Function BIZ_1003Page1_MIDetails_SetTotLoanAmt(strRefund,strRowID)
    
    FRM_Logger_ReportInfoEvent "MI Details", "Set Total Loan Amount Premium and Refund in MI Section of Page1 ", Null
	Dim objMainWindow,objMIFFButton,objData	
	
	Set objMainWindow 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
	Set objMIFFButton 	= SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=StandardButton2") 
	Set objData 		= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID) 
    Set objRefund 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfCheckBox("swfname:=chkRefundUnearned")
    strPremium			= FRM_DS_GetValue(objData, "Premium")
    
    GUI_WebButton_Click(objMIFFButton)	
    Wait  g_TinyWaitLarge ' Explicit wait added due to sync  
	
	Select Case UCase(strRefund)
		Case "ON"
			If (GUI_Object_GetPropertyValue(objRefund,"Checked")) Then	
				FRM_Logger_ReportInfoEvent "Refund prorated unearned Up Front MI Premiums","Refund prorated unearned Up Front MI Premiums  Set ON", null		
			Else	
				GUI_SwfCheckbox_Set objRefund, "ON"	
			End If 
			GUI_Object_ValidateChecked objRefund, "True"," Verified Refund prorated unearned Up Front MI Premiums  Set ON"	
		Case "OFF"
			If (GUI_Object_GetPropertyValue(objRefund,"Checked")) Then	
				GUI_SwfCheckbox_Set objRefund, "OFF"	
			Else	
				FRM_Logger_ReportInfoEvent "Enforce Loan Limits","Enforce Loan Limits  Set OFF", null	
			End If 
			GUI_Object_ValidateChecked objRefund, "False","Verified Refund prorated unearned Up Front MI Premiums  Set OFF"
	End Select
	
	If UTIL_String_IsNotEmpty(strPremium) Then    
	   GUI_WebEdit_Set objMainWindow.SwfEdit("swfname:=rateFundingTxt"), strPremium
	End If
	util_win_sendkey "{TAB}"
	GUI_SwfButton_Click(objMainWindow.SwfButton("swfname:=okBtn"))
	
	Set objMainWindow	= Nothing
	Set objMIFFButton 	= Nothing
	Set objData 		= Nothing
	Set objRefund 		= Nothing
	
End Function



'This function is used to Set MI amount in 1003Page1 
'@code
'    Function BIZ_1003Page1_MIDetails_SetTotalLoanAmountPremium(strRowID)
'@endcode
'@Param strRowID  points row in excel 
Function BIZ_1003Page1_MIDetails_SetTotalLoanAmountPremium(strRowID)
    
    FRM_Logger_ReportInfoEvent "MI Details", "Set Total Loan Amount Premium in MI Section of Page1 ", Null
    BIZ_Forms_Open "1003 Page 1"
    FRM_Logger_ReportInfoEvent "MI Details", "Set Total Loan Amount MI Section in Page1 ", Null
	Dim objMainWindow,objMIFFButton,objData	
	
	Set objMainWindow 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
	Set objMIFFButton 	= SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=StandardButton2") 
	Set objData 		= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID) 

    GUI_WebButton_Click(objMIFFButton)
    Wait  g_TinyWaitLarge ' Explicit wait added due to sync    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Premium")) Then    
	   GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfEdit("swfname:=rateFundingTxt"), FRM_DS_GetValue(objData, "Premium")
	End If
	util_win_sendkey "{TAB}"
	GUI_SwfButton_Click(objMainWindow.SwfButton("swfname:=okBtn"))
	
	Set objMainWindow	= Nothing
	Set objMIFFButton 	= Nothing
	Set objData 		= Nothing

End Function



'This function is used to Delete the deposit from the VOD Form
'@code
'    Function BIZ_1003Page2_DeleteVODData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page2_DeleteVODData(strRowID)
	FRM_Logger_ReportInfoEvent "1003 Page2", "Delete VOD data using Deposit Name " & strDepositName, null
    
    BIZ_Forms_Open "1003 Page 2"

	SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=Button9").Click
	BIZ_VOD_DeleteVODDeposit strRowID
End Function



'This function is used to update VOD deposit value in 1003 page 2
'@code
'    BIZ_1003Page2_UpdateVODData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1003Page2_UpdateVODData(strRowID)

    FRM_Logger_ReportInfoEvent "1003 Page2", "Update VOD data using Row Id '"&strRowID&"' in the BasicData datasheet", null
    
    BIZ_Forms_Open "1003 Page 2"
    GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=Button9")
   
  	BIZ_VOD_UpdateVODData strRowID

End Function



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\1003Page.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\1098MortgageInterest.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_1098MortgageInterest BIZ_Forms_1098MortgageInterest
'List of functions here
'@code
'
'   Function BIZ_1098MortgageInterest_SetMortgageInterest(strRowID)
'   Function BIZ_Common_1098MortgageInterest_SetMortgageInterest(objPArent, strRowID)
'
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Mortgage Interest information on 1098 Mortgage Interest Page
'@code
'    BIZ_1098MortgageInterest_SetMortgageInterest(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_1098MortgageInterest_SetMortgageInterest(strRowID)

    FRM_Logger_ReportInfoEvent "1098 Mortgage Interest", "Set data using Row Id '"&strRowID&"' in the SetMortgageInterest datasheet", null
	
	BIZ_Forms_Open "1098 Mortgage Interest"
	BIZ_Common_1098MortgageInterest_SetMortgageInterest SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0"),strRowID
End Function



'This function is common function for set Mortgage Interest information on 1098 Mortgage Interest Page
'@code
'    BIZ_Common_1098MortgageInterest_SetMortgageInterest(objPArent, strRowID)
'@endcode
'@param objParent object for the page
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_1098MortgageInterest_SetMortgageInterest(objParent, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_1098MortgageInterest", "SetMortgageInterest", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2553_MortgageOriginationDate")) Then	
	GUI_WebEdit_Set objParent.WebEdit("html id:=I_2553","index:=0"), FRM_DS_GetValue(objData, "2553_MortgageOriginationDate") 	
End If	
	
	Set objData = Nothing	
	
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\1098MortgageInterest.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\2010Itemization.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_2010Itemization
'List of functions here
'@code
'   Function BIZ_2010Itemization_Set1000Section(strRowID)
'	Function BIZ_Common_2010Itemization_Set900Section(objParentObject, strRowID)
'	Function BIZ_Common_2010Itemization_Set800Section(objParentObject, strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set 1000 line section data in 2010 Itemization page.
'@code
'    BIZ_2010Itemization_Set1000Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet


Function BIZ_2010Itemization_Set1000Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set 1000 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2010Itemization datasheet", null
	
    Dim obj2010ItemzationPage, objData
    Set obj2010ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_2010Itemization", "Set1000Section", strRowID)
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1007_Mths")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_1629"), FRM_DS_GetValue(objData, "1007_Mths")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1007_Reserve")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_1630"), FRM_DS_GetValue(objData, "1007_Reserve")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1008_Mths")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_340"), FRM_DS_GetValue(objData, "1008_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1008_Reserve")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_253"), FRM_DS_GetValue(objData, "1008_Reserve")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1009_Mths")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_341"), FRM_DS_GetValue(objData, "1009_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1009_Reserve")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_254"), FRM_DS_GetValue(objData, "1009_Reserve")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1010_Mths")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=TextBox376"), FRM_DS_GetValue(objData, "1010_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1010_USDAAnnualFee")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_X1707"), FRM_DS_GetValue(objData, "1010_USDAAnnualFee")
	End If

	Set obj2010ItemzationPage = Nothing
	Set objData = Nothing	
	
End Function



'This function is for set 800 line section data in 2010 Itemization page.
'@code
'    BIZ_Common_2010Itemization_Set800Section(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2010Itemization_Set800Section(objParentObject, strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_Common_2010Itemization_Set800Section", "Setting the data in 800 section 2010 Itemization form", null
	
    Dim objData
    Set objData = FRM_DS_GetTestData("Forms_2010Itemization", "Set800Section", strRowID)
    
    '801
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801a_LoanOriginationFees")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "801a_LoanOriginationFees")
    End If 
   
   	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801b_ApplicationFees")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L228"), FRM_DS_GetValue(objData, "801b_ApplicationFees")
	End If
	
	'802
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X1139_Specify")) And  FRM_DS_GetValue(objData, "X1139_Specify")="OFF"  Then
		
		If (GUI_Object_GetPropertyValue(objParentObject.WebCheckBox("html id:=__cid_CheckBox162_Ctrl"),"Checked")) Then	
			GUI_SwfCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox162_Ctrl"), "OFF"	
		Else	
			FRM_Logger_ReportInfoEvent "Adjusted Origination Charge Details ","Adjusted Origination Charge Details Set  OFF", null	
		End If 	
		GUI_Object_ValidateChecked objParentObject.WebCheckBox("html id:=__cid_CheckBox162_Ctrl"), "0","Adjusted Origination Charge Details OFF "
			
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X715_OriginationCredit")) And  FRM_DS_GetValue(objData, "X715_OriginationCredit")="ON"  Then
		
		If (GUI_Object_GetPropertyValue(objParentObject.WebCheckBox("html id:=__cid_CheckBox26_Ctrl"),"Checked")) Then			
		FRM_Logger_ReportInfoEvent "Origination Credit ","Origination Credit  Already ON", null			
		Else	
		GUI_SwfCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox26_Ctrl"), "ON"	
		End If 
		GUI_Object_ValidateChecked objParentObject.WebCheckBox("html id:=__cid_CheckBox26_Ctrl"), "1","Origination Credit ON"
		
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X734_OriginationCredit")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox120"), FRM_DS_GetValue(objData, "X734_OriginationCredit")
	End If
	
	'805
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanOriginationFees_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox134"), FRM_DS_GetValue(objData, "LoanOriginationFees_Seller")
	End If
	
	Set objData = Nothing	
	
End Function



'This function is for set 900 line section data in 2010 Itemization page.
'@code
'    BIZ_Common_2010Itemization_Set900Section(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2010Itemization_Set900Section(objParentObject, strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_Common_2010Itemization_Set900Section", "Setting the data in 900 section 2010 Itemization form", null
	
    Dim objData 
    Set objData = FRM_DS_GetTestData("Forms_2010Itemization", "Set900Section", strRowID)
	
	'905
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "905_Borrower")) Then
		GUI_WebButton_Click objParentObject.WebButton("html id:=FieldLock5")
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1050"), FRM_DS_GetValue(objData, "905_Borrower")
	End If

   	Set objData = Nothing	
	
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\2010Itemization.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\2015Itemization.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_2015Itemization BIZ_Forms_2015Itemization
'
' List of functions here
' @code
'
'   Function BIZ_2015Itemization_SetFeeDetails_700Section(strRowID)
'   Function BIZ_2015Itemization_SetE2EBasicData(strRowID)
'   Function BIZ_2015Itemization_Set800Section(strRowID)
'   Function BIZ_2015Itemization_Set900Section(strRowID)
'   Function BIZ_2015Itemization_Set1000Section(strRowID)
'   Function BIZ_2015Itemization_Set1100Section(strRowID)
'   Function BIZ_2015Itemization_Set1200Section(strRowID)
'   Function BIZ_2015Itemization_Set1300Section(strRowID)
'   Function BIZ_2015Itemization_Set700Section(strRowID)
'   Function BIZ_2015Itemization_SetFeeDetails(strLine,strRowID)
'   Function BIZ_2015Itemization_FeeDetails_ClickCheckbox(StrLine,ArrStrCheckbox)
'   Function BIZ_2015Itemization_SelectPaidTo(strHtmlId,strPaidToValue)
'   Function BIZ_2015Itemization_FeeDetails_VerifySec32PointsandFees(strLine,strRowID)
'   Function BIZ_Common_2015Itemization_Set800Section(objParentObject, strRowID)
'   Function BIZ_Common_2015Itemization_Set900Section(objParentObject, strRowID)
'	Function BIZ_Common_2015Itemization_Set1000Section(objParentObject, strRowID)
'	Function BIZ_Common_2015Itemization_Set1100Section(objParentObject, strRowID)
'	Function BIZ_Common_2015Itemization_Set1200Section(objParentObject, strRowID)
'	Function BIZ_Common_2015Itemization_Set1300Section(objParentObject, strRowID)
'   Function BIZ_Common_2015Itemization_SetFeeDetails(objParent,strLine,strRowID)
'   Function BIZ_Common_2015Itemization_FeeDetails_ClickCheckbox(objParent,strLine,arrStrCheckbox)
'   Function BIZ_2015Itemization_VerifyDailyInterest(strRowID)
'	Function BIZ_2015Itemization_TotalEstimatedFunds(strRowID)
'	Function BIZ_Forms_2015Itemization_InitiaEscrowAccWindow_SetDueDate(strRowID)
'	Function BIZ_Forms_2015Itemization_1004_EditButtonTaxWin_SetRate(strRowID)
'	Function BIZ_Forms_2015Itemization_EditFieldValueButton_SetRate(strRowID,strFieldButton)
'	Function BIZ_Common_2015Itemization_VerifyFeeData(strRowID)
'	Function BIZ_2015Itemization_VerifyClosingCostsSummary(strRowID)
'	Function BIZ_Common_2015Itemization_VerifyClosingCostsSummary(objParentObject,strRowID)
'	Function BIZ_2015Itemization_VerifyTotalEstimatedFunds(strRowID)
'	Function BIZ_Common_2015Itemization_VerifyTotalEstimatedFunds(objParentObject,strRowID)	
'	Function BIZ_Itemization2015_FeeDetails902(strRowID)
'	Function BIZ_2015Itemization_800SectionImageBtn_SetFeeDetails(strLinehtmlId,strRowID)
'	Function BIZ_Common_2015Itemization_800SectionImageBtn_SetFeeDetails(objParentObject,strLinehtmlId,strRowID)
'	Function BIZ_Common_2015Itemization_FeeDetails_SetCheckBox(objWebButton,arrStrCheckbox)
'	Function BIZ_2015Itemization_ValidateFeeDetails(strLine,strRowID)
'	Function BIZ_2015Itemization_VerifyMIPGuaranteeFeeCalculation(strLine,strRowID)
'	Function BIZ_2015Itemization_EditFieldButton_SetMiandPiDetails(strButtonId,strRowID)
''	Function BIZ_2015Itemization_FeeDecreases110012001300Section(strRowID)
' 	Function BIZ_2015Itemization_SetHOEPAStatus 'Added by Savik
'   BIZ_2015Itemization_ConstrFeeClctedPostConsumation(strRowID) 'Added by Savik
'	
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''

'This function is for set Fee details for one line in section 700 of 2015 Itemization page.
'@code
'    BIZ_2015Itemization_SetFeeDetails_700Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_SetFeeDetails_700Section(strRowID)
    
	Dim obj2015ItemizationPage
	BIZ_Forms_Open "2015 Itemization"
	Set obj2015ItemizationPage = SwfWindow("swfname:=MainForm").Page("index:=0")  
    
    FRM_Logger_ReportInfoEvent "Set Fee Details for RowID "&strRowID, "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	Dim objFeeDetailsBtn,objFeeDetailsPage, objData
    Set objFeeDetailsPage=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0")
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "SetFeeDetails", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeDescription")) Then        
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtLineDesc"), FRM_DS_GetValue(objData, "FeeDescription")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaidToType")) Then        
        GUI_List_Select objFeeDetailsPage.WebList("html id:=cboPaidToType"), FRM_DS_GetValue(objData, "PaidToType")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaidToName")) Then        
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtPaidToName"), FRM_DS_GetValue(objData, "PaidToName")        		
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "mths")) Then        
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtMonths"), FRM_DS_GetValue(objData, "mths")        		
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "monthlyfee")) Then
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtUnitBorPaid"), FRM_DS_GetValue(objData, "monthlyfee")		
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Borrower")) Then
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBorPaid"), FRM_DS_GetValue(objData, "Borrower")	
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Seller")) Then
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtSelPaid"), FRM_DS_GetValue(objData, "Seller")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Bor_Financed")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBorFinanced"), FRM_DS_GetValue(objData, "Bor_Financed")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Bor_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBorPOC"), FRM_DS_GetValue(objData, "Bor_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Seller_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtSellerPOC"), FRM_DS_GetValue(objData, "Seller_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Broker_PAC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBrokerPAC"), FRM_DS_GetValue(objData, "Broker_PAC")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Broker_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBrokerPOC"), FRM_DS_GetValue(objData, "Broker_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Lender_PAC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtLenderPAC"), FRM_DS_GetValue(objData, "Lender_PAC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Lender_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtLenderPOC"), FRM_DS_GetValue(objData, "Lender_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Other_PAC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtOtherPAC"), FRM_DS_GetValue(objData, "Other_PAC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Other_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtOtherPOC"), FRM_DS_GetValue(objData, "Other_POC")
	End If
	
	Set objFeeDetailsPage = Nothing
	Set objData = Nothing	
	
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
	
	Set obj2015ItemizationPage= Nothing
End Function


'This function is for set Disclosure information
'@code
'    BIZ_2015Itemization_SetE2EBasicData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_SetE2EBasicData(strRowID)

    FRM_Logger_ReportInfoEvent "2015 Itemization", "Set E2E basic Information using Row Id '"&strRowID&"' in the BasicData datasheet", null

	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "SetBasicData", strRowID)	
    Dim obj2015ItemzationPage
	BIZ_Forms_Open "2015 Itemization"
    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801a_LoanOriginationFess")) Then
	    obj2015ItemzationPage.WebEdit("html id:=TextBox12").Highlight
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "801a_LoanOriginationFess")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801b_ApplicationFees")) Then    
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_L228"), FRM_DS_GetValue(objData, "801b_ApplicationFees")
    End If    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801a_ProcessingFees")) Then 
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData, "801a_ProcessingFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801b_UnderwritingFees")) Then
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox67"), FRM_DS_GetValue(objData, "801b_UnderwritingFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "804_AppraisalFees")) Then
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_640"), FRM_DS_GetValue(objData, "804_AppraisalFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "805_CreditReport")) Then
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox50A"), FRM_DS_GetValue(objData, "805_CreditReport")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "806_TaxService")) Then
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_336"), FRM_DS_GetValue(objData, "806_TaxService")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "807_FloodCertification")) Then
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_L230"), FRM_DS_GetValue(objData, "807_FloodCertification")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802a_Percent")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox588"), FRM_DS_GetValue(objData, "802a_Percent")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802a_Amount")) Then    
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox589"), FRM_DS_GetValue(objData, "802a_Amount")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802e_Amount")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox598"), FRM_DS_GetValue(objData, "802e_Amount")
    End If 

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802e_Seller")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox650"), FRM_DS_GetValue(objData, "802e_Seller")
    End If 
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "901_Chargesdays")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_332"), FRM_DS_GetValue(objData, "901_Chargesdays")
    End If                
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "901_Interestfrom")) Then    
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_L244"), FRM_DS_GetValue(objData, "901_Interestfrom")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "903_mths")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_L251"), FRM_DS_GetValue(objData, "903_mths")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1002_mths")) Then    
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_1387"), FRM_DS_GetValue(objData, "1002_mths")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1003_mths")) Then    
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_1296"), FRM_DS_GetValue(objData, "1003_mths")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1004_mths")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_1386"), FRM_DS_GetValue(objData, "1004_mths")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_Borrower")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox161"), FRM_DS_GetValue(objData, "1101a_Borrower")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_Seller")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox172"), FRM_DS_GetValue(objData, "1101a_Seller")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101b_Borrower")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox162"), FRM_DS_GetValue(objData, "1101b_Borrower")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101b_Seller")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox173"), FRM_DS_GetValue(objData, "1101b_Seller")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Borrower")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox35"), FRM_DS_GetValue(objData, "1202_Borrower")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1203_Borrower")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox15"), FRM_DS_GetValue(objData, "1203_Borrower")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1204_Borrower")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox36"), FRM_DS_GetValue(objData, "1204_Borrower")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1302_Borrower")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_339"), FRM_DS_GetValue(objData, "1302_Borrower")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1303_Borrower")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_644"), FRM_DS_GetValue(objData, "1303_Borrower")
    End If 
	Set obj2015ItemzationPage = Nothing
	Set objData = Nothing	
	
End Function	


'This function is for set 800 line section data in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_Set800Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_Set800Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set 800 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim obj2015ItemzationPage
	BIZ_Forms_Open "2015 Itemization"
    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    BIZ_Common_2015Itemization_Set800Section obj2015ItemzationPage, strRowID
   
	Set obj2015ItemzationPage = Nothing
	
End Function

'This function is for set converting a loan through High Cost Loan (HOEPA)  in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_SetHOEPA()
'@endcode
'@param This Function doesn't accept any param as it used to increase the percentage depending on Section 32 HOEPA data

Function BIZ_2015Itemization_SetHOEPAStatus()

    FRM_Logger_ReportInfoEvent "Set HOEPA Loan", "Set Loan as High Cost Mortgage Through Forms_2015Itemization", null
	
    Dim obj2015ItemzationPage,objSection32HOEPAPage,MaxPercentage
    
    BIZ_Forms_Open "Section 32 HOEPA"
    Set objSection32HOEPAPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    MaxPercentage=GUI_Object_GetPropertyValue(objSection32HOEPAPage.WebEdit("html id:=l_S32DISCX100"),"value")
	BIZ_Forms_Open "2015 Itemization"
	Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	'Set the Loan Origination Fees within 2015 Itemization as .5 greater so that it could be considered as HOEPA Loan
	GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox12"),MaxPercentage+.500


   
	Set obj2015ItemzationPage = Nothing
	
End Function



'This function is for set 800 line section data in 2015 Itemization page.
'@code
'    BIZ_Common_2015Itemization_Set800Section(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2015Itemization_Set800Section(objParentObject, strRowID)
	
    Dim objData
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set800Section", strRowID)
    Set objFieldLock = objParentObject.WebButton("html id:=FieldLock1")
    
    '801
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801a_LoanOriginationFess")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "801a_LoanOriginationFess")
    End If 
  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801a_SysX17")) Then
        GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox14_Ctrl"), FRM_DS_GetValue(objData, "801a_SysX17")
    End If 
   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanOriginationFeesByBorrower")) Then
        
        If GUI_Object_IsExist(objFieldLock.Image("file name:=field-unlock.png","index:=2")) Then
			GUI_WebButton_Click objFieldLock
			GUI_Object_WaitTillExist objFieldLock.Image("file name:=field-lock.png","index:=2")
		End If
        
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_454"), FRM_DS_GetValue(objData, "LoanOriginationFeesByBorrower")
    End If 
   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801a_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox119"), FRM_DS_GetValue(objData, "801a_PaidBy")
	End If
   
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801a_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox122"), FRM_DS_GetValue(objData, "801a_PaidTo")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801b_ApplicationFees")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L228"), FRM_DS_GetValue(objData, "801b_ApplicationFees")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801b_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox68"), FRM_DS_GetValue(objData, "801b_PaidTo")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801b_PaidBy")) Then
       ' GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox106"), "#0"
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox106"), FRM_DS_GetValue(objData, "801b_PaidBy")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801c_ProcessingFees")) Then 
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData, "801c_ProcessingFees")
	End If
   
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801d_UnderwritingFees")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox67"), FRM_DS_GetValue(objData, "801d_UnderwritingFees")
	End If
   
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801c_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox83"), FRM_DS_GetValue(objData, "801c_PaidTo")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801c_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox108"), FRM_DS_GetValue(objData, "801c_PaidBy")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801d_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox114"), FRM_DS_GetValue(objData, "801d_PaidBy")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801g_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox25"), FRM_DS_GetValue(objData, "801g_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801g_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox65"), FRM_DS_GetValue(objData, "801g_Borrower")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801h_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox92"), FRM_DS_GetValue(objData, "801h_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801h_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox93"), FRM_DS_GetValue(objData, "801h_Borrower")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801i_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox116"), FRM_DS_GetValue(objData, "801i_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "801i_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox123"), FRM_DS_GetValue(objData, "801i_Borrower")
	End If
	
	
   

   '802 
   
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802a_Percent")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox588"), FRM_DS_GetValue(objData, "802a_Percent")
	End If 
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802b_Percent")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox590"), FRM_DS_GetValue(objData, "802b_Percent")
	End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802c_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox592"), FRM_DS_GetValue(objData, "802c_Borrower")
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802d_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox595"), FRM_DS_GetValue(objData, "802d_Borrower")
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802e_Percent")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox597"), FRM_DS_GetValue(objData, "802e_Percent")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802e_AdditionalAmount")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox598"), FRM_DS_GetValue(objData, "802e_AdditionalAmount")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802f_Percent")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox601"), FRM_DS_GetValue(objData, "802f_Percent")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802f_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox655"), FRM_DS_GetValue(objData, "802f_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802g_Percent")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox607"), FRM_DS_GetValue(objData, "802g_Percent")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802g_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox656"), FRM_DS_GetValue(objData, "802g_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802h_Percent")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox608"), FRM_DS_GetValue(objData, "802h_Percent")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802h_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox657"), FRM_DS_GetValue(objData, "802h_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802e_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox229"), FRM_DS_GetValue(objData, "802e_PaidBy")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802f_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox231"), FRM_DS_GetValue(objData, "802f_PaidBy")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "802g_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox232"), FRM_DS_GetValue(objData, "802g_PaidBy")
	End If

    '804
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "804_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_640"), FRM_DS_GetValue(objData, "804_Borrower")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "804_AppraisalFees")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_617"), FRM_DS_GetValue(objData, "804_AppraisalFees")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "804_PaidBy")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox85"), "#0"
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox85"), FRM_DS_GetValue(objData, "804_PaidBy")
	End If
    
	'805
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "805_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox50A"), FRM_DS_GetValue(objData, "805_Borrower")
	End If
	
	'806
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SYS.X268")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox8"), FRM_DS_GetValue(objData,"SYS.X268")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "806_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_336"), FRM_DS_GetValue(objData, "806_Borrower")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "807_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L230"), FRM_DS_GetValue(objData, "807_Borrower")
	End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanOriginationFees_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox134"), FRM_DS_GetValue(objData, "LoanOriginationFees_Seller")
	End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationFees_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox135"), FRM_DS_GetValue(objData, "ApplicationFees_Seller")
	End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ProcessingFees_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox136"), FRM_DS_GetValue(objData, "ProcessingFees_Seller")
	End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "UnderwritingFees_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox137"), FRM_DS_GetValue(objData, "UnderwritingFees_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "389_BrokerFees")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_389"), FRM_DS_GetValue(objData, "389_BrokerFees")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1620_BrokerFees")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1620"), FRM_DS_GetValue(objData, "1620_BrokerFees")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AppraisalFees_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox124"), FRM_DS_GetValue(objData, "AppraisalFees_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CreditReport_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox125"), FRM_DS_GetValue(objData, "CreditReport_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TaxService_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox126"), FRM_DS_GetValue(objData, "TaxService_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FloodCert_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox127"), FRM_DS_GetValue(objData, "FloodCert_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FloodCert_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L230"), FRM_DS_GetValue(objData, "FloodCert_Borrower")
	End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "819_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_X1301"), FRM_DS_GetValue(objData, "819_Borrower")
	End If
	
	'807
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "807_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L230"), FRM_DS_GetValue(objData, "807_Borrower")
	End If
	
	'809
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "809_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_371"), FRM_DS_GetValue(objData, "809_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "809_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_372"), FRM_DS_GetValue(objData, "809_Borrower")
	End If

	Set objData = Nothing	
	
End Function



'This function is for set 900 line section data in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_Set900Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_Set900Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set 900 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim obj2015ItemzationPage
	BIZ_Forms_Open "2015 Itemization"
    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    BIZ_Common_2015Itemization_Set900Section obj2015ItemzationPage, strRowID
    
	Set obj2015ItemzationPage = Nothing	
	
End Function


'This function is for set 900 line section data in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_Set900Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2015Itemization_Set900Section(objParentObject, strRowID)
    	
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set900Section", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "901_Chargesdays")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_332"), FRM_DS_GetValue(objData, "901_Chargesdays")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "901_InterestFrom")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L244"), FRM_DS_GetValue(objData, "901_InterestFrom")
	End If

   	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "901_InterestTo")) Then
		BlnButtonStatus = GUI_Object_GetPropertyValue(objParentObject.WebButton("html id:=FieldLock2"), "title")
		If(InStr(BlnButtonStatus, "Use the Calculated Value") > 0) Then 
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L245"), FRM_DS_GetValue(objData, "901_InterestTo")
		Else
			GUI_WebButton_Click objParentObject.WebButton("html id:=FieldLock2")
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L245"), FRM_DS_GetValue(objData, "901_InterestTo")
		End If
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "901_SellerAmount")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_561"), FRM_DS_GetValue(objData, "901_SellerAmount")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "902_PaidTo")) Then
		GUI_WebList_Select	SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebList("html id:=DropdownBox93"), FRM_DS_GetValue(objData, "902_PaidTo")
	End If

	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "903_Borrower")) Then
    
	    If  GUI_Object_IsExistX(objParentObject.WebButton("html id:=FieldLock4","title:=Enter Data Manually"), 5)  Then
		GUI_WebButton_Click objParentObject.WebButton("html id:=FieldLock4")
	    End IF
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_642") ,FRM_DS_GetValue(objData, "903_Borrower")
		
	End If
	
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "903_mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L251"), FRM_DS_GetValue(objData, "903_mths")
	End If
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "903_CompanyName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L252"), FRM_DS_GetValue(objData, "903_CompanyName")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "903_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox94"),FRM_DS_GetValue(objData, "903_PaidTo")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "904_Recipient")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox227"), FRM_DS_GetValue(objData, "904_Recipient")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "904_mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox658"), FRM_DS_GetValue(objData, "904_mths")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "904_Taxes")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox666"), FRM_DS_GetValue(objData, "904_Taxes")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "905_Borrower")) Then
		GUI_WebButton_Click objParentObject.WebButton("html id:=FieldLock5")
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1050"), FRM_DS_GetValue(objData, "905_Borrower")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "906_FloodIns")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1500"), FRM_DS_GetValue(objData, "906_FloodIns")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "906_Mnths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox659"), FRM_DS_GetValue(objData, "906_Mnths")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "906_FloodInsPremium")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox667"), FRM_DS_GetValue(objData, "906_FloodInsPremium")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "907_mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox660"), FRM_DS_GetValue(objData, "907_mths")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "907_Taxes")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox668"), FRM_DS_GetValue(objData, "907_Taxes")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "908_mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox661"), FRM_DS_GetValue(objData, "908_mths")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "908_Taxes")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox669"), FRM_DS_GetValue(objData, "908_Taxes")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "911_mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox664"), FRM_DS_GetValue(objData, "911_mths")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "911_Taxes")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox672"), FRM_DS_GetValue(objData, "911_Taxes")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "912_mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox665"), FRM_DS_GetValue(objData, "912_mths")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "912_Taxes")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox673"), FRM_DS_GetValue(objData, "912_Taxes")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "904_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1850"), FRM_DS_GetValue(objData, "904_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "907_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox43"), FRM_DS_GetValue(objData, "907_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "908_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox56"), FRM_DS_GetValue(objData, "908_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "911_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox359"), FRM_DS_GetValue(objData, "911_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "912_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox358"), FRM_DS_GetValue(objData, "912_Seller")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NEWHUDX591_Taxes")) Then
		If GUI_Object_GetPropertyValue(objParentObject.WebEdit("html id:=l_1849"),"readonly")=0 Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1849"), FRM_DS_GetValue(objData, "NEWHUDX591_Taxes")
		Else
			GUI_WebButton_Click objParentObject.WebButton("html id:=FieldLock29")
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1849"), FRM_DS_GetValue(objData, "NEWHUDX591_Taxes")
		End If
	End If
	
	'NEWHUD.X584  -- line 910 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"910_MiscPrepaidFee")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData,"910_MiscPrepaidFee")
	End If
	
	'NEWHUD2.X4407 --line 910
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"910_Months")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox663"), FRM_DS_GetValue(objData,"910_Months")
	End If
	
	'NEWHUD2.X4408 --line 910
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"910_MonthlyFeeAmount")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox671"), FRM_DS_GetValue(objData,"910_MonthlyFeeAmount")
	End If
	
	'NEWHUD.X626 --line 910
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "910_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox4"),FRM_DS_GetValue(objData, "910_PaidTo")
	End If
	
	'Added
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "562_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_562"), FRM_DS_GetValue(objData, "562_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "B_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox121"),FRM_DS_GetValue(objData, "B_PaidBy")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "578_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_578"), FRM_DS_GetValue(objData, "578_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox26"),FRM_DS_GetValue(objData, "L_PaidBy")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "594_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1850"), FRM_DS_GetValue(objData, "594_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "O_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox28"),FRM_DS_GetValue(objData, "O_PaidBy")
	End If
		
	
	
End Function


'This function is for set 1000 line section data in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_Set1000Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_2015Itemization_Set1000Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set 1000 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim obj2015ItemzationPage
    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    BIZ_Common_2015Itemization_Set1000Section obj2015ItemzationPage, strRowID
   
	Set obj2015ItemzationPage = Nothing
	
End Function



'This function is for set 1000 line section data in 2015 Itemization page.
'@code
'    BIZ_Common_2015Itemization_Set1000Section(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_Common_2015Itemization_Set1000Section(objParentObject, strRowID)

    FRM_Logger_ReportInfoEvent "Set 1000 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim objData
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set1000Section", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1002_mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1387"), FRM_DS_GetValue(objData, "1002_mths")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1002_Ins")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_230"), FRM_DS_GetValue(objData, "1002_Ins")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1003_Mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1296"), FRM_DS_GetValue(objData, "1003_Mths")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1003_MI")) Then
		objParentObject.WebEdit("html id:=l_1296").Highlight
		BlnButtonStatus = GUI_Object_GetPropertyValue(objParentObject.WebButton("html id:=FieldLock7"), "title")
		Wait g_TinyWaitSmall
		If(InStr(BlnButtonStatus, "Use the Calculated Value") > 0) Then 
			GUI_WebEdit_Set objParentObject.WebEdit("index:=324","name:=WebEdit"), FRM_DS_GetValue(objData, "1003_MI")
		Else
		    Wait g_TinyWaitSmall
			GUI_WebButton_Click objParentObject.WebButton("html id:=FieldLock7")
			Wait g_TinyWaitSmall
			If objParentObject.WebEdit("html id:=l_232").GetROProperty("visible") = True Then
				GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_232"), FRM_DS_GetValue(objData, "1003_MI")
			ElseIf objParentObject.WebEdit("html id:=l_HUD54").GetROProperty("visible") = True Then
					GUI_WebButton_Click objParentObject.WebButton("html id:=FieldLock22")
					Wait g_TinyWaitSmall
					GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_HUD54"), FRM_DS_GetValue(objData, "1003_MI")
			End If
			
		End If
	End If
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1003_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox385"), FRM_DS_GetValue(objData, "1003_Seller")
	End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1004_mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1386"), FRM_DS_GetValue(objData, "1004_mths")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1004_Taxes")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_231"), FRM_DS_GetValue(objData, "1004_Taxes")
	End If
 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1005_Taxes")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L268"), FRM_DS_GetValue(objData, "1005_Taxes")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1006_Insurance")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_235"), FRM_DS_GetValue(objData, "1006_Insurance")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1007_Misc_Description")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1628"), FRM_DS_GetValue(objData, "1007_Misc_Description")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1007_Mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1629"), FRM_DS_GetValue(objData, "1007_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1007_Reserve")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1630"), FRM_DS_GetValue(objData, "1007_Reserve")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1008_Misc_Description")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_660"), FRM_DS_GetValue(objData, "1008_Misc_Description")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1008_Mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_340"), FRM_DS_GetValue(objData, "1008_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1008_Reserve")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_253"), FRM_DS_GetValue(objData, "1008_Reserve")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1009_Misc_Description")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_661"), FRM_DS_GetValue(objData, "1009_Misc_Description")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1009_Mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_341"), FRM_DS_GetValue(objData, "1009_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1009_Reserve")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_254"), FRM_DS_GetValue(objData, "1009_Reserve")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1010_Mths")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox376"), FRM_DS_GetValue(objData, "1010_Mths")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1010_USDAAnnualFee")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_X1707"), FRM_DS_GetValue(objData, "1010_USDAAnnualFee")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1010_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox387"), FRM_DS_GetValue(objData, "1010_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1002_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox386"), FRM_DS_GetValue(objData, "1002_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1004_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox384"), FRM_DS_GetValue(objData, "1004_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "596_Value")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox386"), FRM_DS_GetValue(objData, "596_Value")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "317_Value")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox41"),FRM_DS_GetValue(objData, "317_Value")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "563_Value")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox385"), FRM_DS_GetValue(objData, "563_Value")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "319_Value")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox42"),FRM_DS_GetValue(objData, "319_Value")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "595_Value")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox384"), FRM_DS_GetValue(objData, "595_Value")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "323_Value")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox43"),FRM_DS_GetValue(objData, "323_Value")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1004_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox43"),FRM_DS_GetValue(objData, "1004_PaidBy")
	End If
	   
	Set objData = Nothing	
	
End Function



'This function is for set 1100 line section data in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_Set1100Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_Set1100Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set 1100 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null

    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
		
	BIZ_Common_2015Itemization_Set1100Section obj2015ItemzationPage, strRowID 	
	
	Set obj2015ItemzationPage = Nothing	
End Function



'This function is for set 1200 line section data in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_Set1200Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_2015Itemization_Set1200Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set 1200 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null

    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
		
	BIZ_Common_2015Itemization_Set1200Section obj2015ItemzationPage, strRowID 	
	
	Set obj2015ItemzationPage = Nothing	

End Function



'This function is for set 1200 line section data in 2015 Itemization page.
'@code
'    BIZ_Common_2015Itemization_Set1200Section(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2015Itemization_Set1200Section(objParentObject,strRowID)

    FRM_Logger_ReportInfoEvent "Set 1200 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim objData
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set1200Section", strRowID)
    Set objRecordingFee = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RecordingFeeDialog")
    Set objQuickEntryDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0")
	Set objFeeDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FeeListDialog")
    Set objFeeList = objFeeDialog.SwfObject("swfname:=gridFeeList")
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1206_PaidBy")) Then
		GUI_WebList_Select	objParentObject.WebList("html id:=DropdownBox65"), FRM_DS_GetValue(objData, "1206_PaidBy")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Desc1")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_373"), FRM_DS_GetValue(objData, "Desc1")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "StateTaxStamps")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1638"), FRM_DS_GetValue(objData, "StateTaxStamps")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TransferTaxes")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox149"), FRM_DS_GetValue(objData, "TransferTaxes")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CityCountyStamps")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1637"), FRM_DS_GetValue(objData, "CityCountyStamps")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Borrower")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox35"), FRM_DS_GetValue(objData, "1202_Borrower")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Deed")) Or UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Mortgage")) or UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Releases")) Then
	GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton16", "index:=0")
	GUI_Object_WaitTillExistX objRecordingFee, 30
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Deed")) Then
		GUI_SwfEdit_Set objRecordingFee.SwfEdit("swfname:=textBox1"), FRM_DS_GetValue(objData, "1202_Deed")
	End If
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Mortgage")) Then
		GUI_SwfEdit_Set objRecordingFee.SwfEdit("swfname:=textBox2"), FRM_DS_GetValue(objData, "1202_Mortgage")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Releases")) Then
		GUI_SwfEdit_Set objRecordingFee.SwfEdit("swfname:=textBox3"), FRM_DS_GetValue(objData, "1202_Releases")
	End If
	
	GUI_SwfButton_Click objRecordingFee.SwfButton("swfname:=buttonOK")
   End If 

    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1203_Borrower")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox15"), FRM_DS_GetValue(objData, "1203_Borrower")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1204_Borrower")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox36"), FRM_DS_GetValue(objData, "1204_Borrower")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_Borrower")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox38"), FRM_DS_GetValue(objData, "1205_Borrower")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "373_1206")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_373"), FRM_DS_GetValue(objData, "373_1206")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "374_1206_Borrower")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "374_1206_Borrower")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_Seller")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox44"), FRM_DS_GetValue(objData, "1202_Seller")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1203_Seller")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox133"), FRM_DS_GetValue(objData, "1203_Seller")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1204_Seller")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox114"), FRM_DS_GetValue(objData, "1204_Seller")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_Seller")) Then
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox115"), FRM_DS_GetValue(objData, "1205_Seller")
    End If 

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1204_Deed")) Or UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1204_Mortgage")) Then
	GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton17", "index:=0")
	GUI_Object_WaitTillExistX objRecordingFee, 30
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1204_Deed")) Then
		GUI_SwfEdit_Set objRecordingFee.SwfEdit("swfname:=textBox1"), FRM_DS_GetValue(objData, "1204_Deed")
	End If
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1204_Mortgage")) Then
		GUI_SwfEdit_Set objRecordingFee.SwfEdit("swfname:=textBox2"), FRM_DS_GetValue(objData, "1204_Mortgage")
	End If
	
	GUI_SwfButton_Click objRecordingFee.SwfButton("swfname:=buttonOK")
   End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_Deed")) Or UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_Mortgage")) Then
		GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton18", "index:=0")
		GUI_Object_WaitTillExistX objRecordingFee, 30
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_Deed")) Then
			GUI_SwfEdit_Set objRecordingFee.SwfEdit("swfname:=textBox1"), FRM_DS_GetValue(objData, "1205_Deed")
		End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_Mortgage")) Then
			GUI_SwfEdit_Set objRecordingFee.SwfEdit("swfname:=textBox2"), FRM_DS_GetValue(objData, "1205_Mortgage")
		End If
	
		GUI_SwfButton_Click objRecordingFee.SwfButton("swfname:=buttonOK")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1204_PaidToName")) Then
		GUI_WebButton_Click objParentObject.WebButton("html id:=btnPop1204","index:=0")
		GUI_Object_WaitTillExistX objQuickEntryDialog, 30
		GUI_WebEdit_Set objQuickEntryDialog.WebEdit("html id:=txtPaidToName"), FRM_DS_GetValue(objData, "1204_PaidToName")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_PaidToName")) Then
		GUI_WebButton_Click objParentObject.WebButton("html id:=btnPop1205","index:=0")
		GUI_Object_WaitTillExistX objQuickEntryDialog, 30
		GUI_WebEdit_Set objQuickEntryDialog.WebEdit("html id:=txtPaidToName"), FRM_DS_GetValue(objData, "1205_PaidToName")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeName")) Then
		GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton1","index:=0")
		GUI_Object_WaitTillExistX objFeeDialog, 30
		GUI_List_ClickRow objFeeList, objFeeList.SwfScrollBar("swfname:=vPanelScrollBar"), "Fee Name", FRM_DS_GetValue(objData, "FeeName"), True, False, False, "Single"
		GUI_SwfButton_Click objFeeDialog.SwfButton("swfname:=okBtn")
	End If
	
	Set objQuickEntryDialog = Nothing
	Set objRecordingFee 	= Nothing
	Set objData 			= Nothing	
	
End Function


'This function is for set 1300 line section data in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_Set1300Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_2015Itemization_Set1300Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set 1300 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null

    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
		
	BIZ_Common_2015Itemization_Set1300Section obj2015ItemzationPage, strRowID 	
	
	Set obj2015ItemzationPage = Nothing	
End Function



'This function is for set 1300 line section data in 2015 Itemization page.
'@code
'    BIZ_Common_2015Itemization_Set1300Section(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_Common_2015Itemization_Set1300Section(objParentObject,strRowID)

    FRM_Logger_ReportInfoEvent "Set 1300 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim obj2015ItemzationPage, objData
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set1300Section", strRowID)
    
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1302_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_REGZGFEX15"), FRM_DS_GetValue(objData, "1302_Text")
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1302_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_339"), FRM_DS_GetValue(objData, "1302_Borrower")
	End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1302_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox69"), FRM_DS_GetValue(objData, "1302_PaidBy")
	End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1303_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_644"), FRM_DS_GetValue(objData, "1303_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1304_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_645"), FRM_DS_GetValue(objData, "1304_Borrower")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1302_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_564"), FRM_DS_GetValue(objData, "1302_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1303_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_590"), FRM_DS_GetValue(objData, "1303_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1304_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_591"), FRM_DS_GetValue(objData, "1304_Seller")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1310_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox16"), FRM_DS_GetValue(objData, "1310_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1310_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "1310_Borrower")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1311_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_X253"), FRM_DS_GetValue(objData, "1311_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1311_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "1311_Borrower")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1312_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox336"), FRM_DS_GetValue(objData, "1312_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1312_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox368"), FRM_DS_GetValue(objData, "1312_Borrower")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1313_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox337"), FRM_DS_GetValue(objData, "1313_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1313_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox369"), FRM_DS_GetValue(objData, "1313_Borrower")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1314_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox343"), FRM_DS_GetValue(objData, "1314_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1314_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox370"), FRM_DS_GetValue(objData, "1314_Borrower")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1315_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox342"), FRM_DS_GetValue(objData, "1315_Text")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1315_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox371"), FRM_DS_GetValue(objData, "1315_Borrower")
	End If
	
	'NEWHUD.X274 -- line 1302
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1302_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox129"), FRM_DS_GetValue(objData, "1302_PaidTo")
	End If
	
	'650 -- line 1303
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1303_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox130"), FRM_DS_GetValue(objData, "1303_PaidTo")
	End If
	
	'SYS.X375 -- line 1303
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1303_MiscServiceFeeName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_650"), FRM_DS_GetValue(objData, "1303_MiscServiceFeeName")
	End If
	
	Set objData = Nothing	
	
End Function



'@Test Story: Automate Core Regression Story ENC-26773 Update Field CD3.X1 Calc Logic to use the same calc logic as Field CD2.XSTJ
'@Added by Sameer Gupta as of 12/23/2015
'This function is for set 700 line section data in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_Set700Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_Set700Section(strRowID)

	FRM_Logger_ReportInfoEvent "Set 700 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null

    Dim obj2015ItemzationPage, objData
    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set700Section", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "701_Borrower")) Then
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox85"), FRM_DS_GetValue(objData, "701_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "702_Borrower")) Then
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox86"), FRM_DS_GetValue(objData, "702_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "704_Borrower")) Then
		GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_L218"), FRM_DS_GetValue(objData, "704_Borrower")
	End If
    
End Function


'@Test Story: TA-4586
'@Added by Emily Cheng as of 01/10/2016
'This function is for set Fee details for one line in 2015 Itemization page.
'@code
'    BIZ_2015Itemization_SetFeeDetails(strLine,strRowID)
'@endcode
'@param strLine The line number for which you will set fee details
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_SetFeeDetails(strLine,strRowID)
    FRM_Logger_ReportInfoEvent "BIZ_2015Itemization_SetFeeDetails "&strLine, "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
    
	Dim obj2015ItemizationPage
	Set obj2015ItemizationPage = SwfWindow("swfname:=MainForm").Page("index:=0")  
    
    BIZ_Common_2015Itemization_SetFeeDetails obj2015ItemizationPage,strLine,strRowID
	
	Set obj2015ItemizationPage= Nothing
	
End Function

'@Test Story: TA-4586
'@Added by Emily Cheng as of 01/10/2016
'This function is for set Fee details for one line in 2015 Itemization page.
'@code
    'BIZ_2015Itemization_FeeDetails_ClickCheckbox(StrLine,ArrStrCheckbox)
'@endcode
'@param strLine The line number for which the fee detail popup window will be open
'@param ArrStrCheckbox The array of checkbox that will be checked, such as "Borrower Can Shop","Borrower Did Shop","Impact APR","Seller Obligated","Property Taxes","Homeowner's Insurance","Other","Escrowed"

Function BIZ_2015Itemization_FeeDetails_ClickCheckbox(StrLine,ArrStrCheckbox)
    FRM_Logger_ReportInfoEvent "2015 Itemization Page", "Click checkbox on Fee Details window of line "&strLine, null

	Dim obj2015ItemizationPage
	Set obj2015ItemizationPage = SwfWindow("swfname:=MainForm").Page("index:=0")
      
    BIZ_Common_2015Itemization_FeeDetails_ClickCheckbox obj2015ItemizationPage,strLine,arrStrCheckbox
	
	Set obj2015ItemizationPage = Nothing
	
End Function

'@Test Story: TA-4586
'@Added by Emily Cheng as of 01/11/2016
'This function is for select "Paid To" value for one line in 2015 Itemization page.
'@code
'   BIZ_2015Itemization_SelectPaidTo(strHtmlId,strPaidToValue)
'@endcode
'@param StrHtmlId The html ID of the "Paid To" checkbox
'@param StrPaidToValue The selected item name from "Paid To" dropdown list

Function BIZ_2015Itemization_SelectPaidTo(strHtmlId,strPaidToValue)
    Dim objPaidToList
    Set objPaidToList=SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:="&strHtmlId)
    GUI_List_Select objPaidToList,strPaidToValue	
End Function


'@	Test Story: TA-4586
'@	Added by Emily Cheng as of 01/11/2016
'This function is for verify "Sec 32 Points and Fees" value on fee details popup of one line in 2015 Itemization page.
'@code
    'BIZ_2015Itemization_FeeDetails_VerifySec32PointsandFees(strLine,strRowID)
'@endcode
'@param strLine The line number for which the fee details popup window will be open
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_2015Itemization_FeeDetails_VerifySec32PointsandFees(strLine,strRowID)
	FRM_Logger_ReportInfoEvent "Verify Section 32 Points and Fees value for line"&strLine, "Use Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	Dim objFeeDetailsBtn,objSec32WebEdit,objData
    Set objFeeDetailsBtn=SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=btnPop"&StrLine)
    GUI_WebButton_Click objFeeDetailsBtn
    Set objSec32WebEdit=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0").WebEdit("html id:=txtSec32Amt")
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "VerifySec32PointsandFees", strRowID)
 
    GUI_Object_ValidateValue objSec32WebEdit,FRM_DS_GetValue(objData,"Sec32PointsandFees"),"'Section 32 Points and Fees'"    
    GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
End Function



'This function is for set 1100 line section data in 2015 Itemization page.
'@code
'    BIZ_Common_2015Itemization_Set1100Section(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2015Itemization_Set1100Section(objParentObject, strRowID)

    FRM_Logger_ReportInfoEvent "Set 1100 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set1100Section", strRowID)
    '1101
	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set1100Section", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_TitleServiceName")) Then
		SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=pklist_NEWHUDX951").Click
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FieldRuleDropdownDialog").SwfList("swfname:=listBoxValues").Select FRM_DS_GetValue(objData, "1101a_TitleServiceName")
	End If
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox166"), FRM_DS_GetValue(objData, "1101a_Text")
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox161"), FRM_DS_GetValue(objData, "1101a_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox198_Ctrl"), FRM_DS_GetValue(objData, "1101a_PaidByBorrower")
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101b_TitleServiceName")) Then
		SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=pklist_NEWHUDX960").Click
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FieldRuleDropdownDialog").SwfList("swfname:=listBoxValues").Select FRM_DS_GetValue(objData, "1101b_TitleServiceName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101b_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox167"), FRM_DS_GetValue(objData, "1101b_Text")
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101b_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox162"), FRM_DS_GetValue(objData, "1101b_Borrower")
	End If
      If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101b_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox182_Ctrl"), FRM_DS_GetValue(objData, "1101b_PaidByBorrower")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101c_TitleServiceName")) Then
		SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=pklist_NEWHUDX969").Click
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FieldRuleDropdownDialog").SwfList("swfname:=listBoxValues").Select FRM_DS_GetValue(objData, "1101c_TitleServiceName")
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101c_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox168"), FRM_DS_GetValue(objData, "1101c_Text")
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101c_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox163"), FRM_DS_GetValue(objData, "1101c_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101c_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox185_Ctrl"), FRM_DS_GetValue(objData, "1101c_PaidByBorrower")
	End If	    

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101d_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox169"), FRM_DS_GetValue(objData, "1101d_Text")
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101d_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox164"), FRM_DS_GetValue(objData, "1101d_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101d_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox173_Ctrl"), FRM_DS_GetValue(objData, "1101d_PaidByBorrower")
	End If	
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101e_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox170"), FRM_DS_GetValue(objData, "1101e_Text")
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101e_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox165"), FRM_DS_GetValue(objData, "1101e_Borrower")
	End If
      If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101e_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox191_Ctrl"), FRM_DS_GetValue(objData, "1101e_PaidByBorrower")
	End If	
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101f_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox184"), FRM_DS_GetValue(objData, "1101f_Text")
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101f_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox171"), FRM_DS_GetValue(objData, "1101f_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101f_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox194_Ctrl"), FRM_DS_GetValue(objData, "1101f_PaidByBorrower")
	End If	
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Itemizefeeswhenprint")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox188_Ctrl"), FRM_DS_GetValue(objData, "Itemizefeeswhenprint")
	End If	
	'1102
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102a_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox144"), FRM_DS_GetValue(objData, "1102a_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102a_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox145"), FRM_DS_GetValue(objData, "1102a_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102a_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox26_Ctrl"), FRM_DS_GetValue(objData, "1102a_PaidByBorrower")
	End If	
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102b_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox488"), FRM_DS_GetValue(objData, "1102b_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102b_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox148"), FRM_DS_GetValue(objData, "1102b_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102b_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox159_Ctrl"), FRM_DS_GetValue(objData, "1102b_PaidByBorrower")
	End If		
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102c_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox489"), FRM_DS_GetValue(objData, "1102c_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102c_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox424"), FRM_DS_GetValue(objData, "1102c_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102c_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox162_Ctrl"), FRM_DS_GetValue(objData, "1102c_PaidByBorrower")
	End If		
		
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102d_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox604"), FRM_DS_GetValue(objData, "1102d_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102d_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox425"), FRM_DS_GetValue(objData, "1102d_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102d_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox282_Ctrl"), FRM_DS_GetValue(objData, "1102d_PaidByBorrower")
	End If		
		
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102e_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox605"), FRM_DS_GetValue(objData, "1102e_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102e_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox618"), FRM_DS_GetValue(objData, "1102e_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102e_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox285_Ctrl"), FRM_DS_GetValue(objData, "1102e_PaidByBorrower")
	End If		
		
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102f_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox611"), FRM_DS_GetValue(objData, "1102f_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102f_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox619"), FRM_DS_GetValue(objData, "1102f_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102f_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox288_Ctrl"), FRM_DS_GetValue(objData, "1102f_PaidByBorrower")
	End If		
		
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102g_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox612"), FRM_DS_GetValue(objData, "1102g_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102g_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox620"), FRM_DS_GetValue(objData, "1102g_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102g_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox291_Ctrl"), FRM_DS_GetValue(objData, "1102g_PaidByBorrower")
	End If		
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102h_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox613"), FRM_DS_GetValue(objData, "1102h_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102h_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox621"), FRM_DS_GetValue(objData, "1102h_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102h_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox294_Ctrl"), FRM_DS_GetValue(objData, "1102h_PaidByBorrower")
	End If		
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102i_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L290"), FRM_DS_GetValue(objData, "1102i_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102i_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox61"), FRM_DS_GetValue(objData, "1102i_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102i_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox31_Ctrl"), FRM_DS_GetValue(objData, "1102i_PaidByBorrower")
	End If		
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102j_Text")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L293"), FRM_DS_GetValue(objData, "1102j_Text")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102j_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox29"), FRM_DS_GetValue(objData, "1102j_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102j_PaidByBorrower")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox41_Ctrl"), FRM_DS_GetValue(objData, "1102j_PaidByBorrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1103_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox61"), FRM_DS_GetValue(objData, "1103_Borrower")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1104_Borrower")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox29"), FRM_DS_GetValue(objData, "1104_Borrower")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox172"), FRM_DS_GetValue(objData, "1101a_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101b_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox173"), FRM_DS_GetValue(objData, "1101b_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101c_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox174"), FRM_DS_GetValue(objData, "1101c_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102a_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox633"), FRM_DS_GetValue(objData, "1102a_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102b_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox634"), FRM_DS_GetValue(objData, "1102b_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102c_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox635"), FRM_DS_GetValue(objData, "1102c_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1103_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox129"), FRM_DS_GetValue(objData, "1103_Seller")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1104_Seller")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox130"), FRM_DS_GetValue(objData, "1104_Seller")
	End If
	
	'NEWHUD.X955 -- line 1101a
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox148"), FRM_DS_GetValue(objData, "1101a_PaidBy")
	End If
	
	'NEWHUD.X959 -- line 1101a
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox149"), FRM_DS_GetValue(objData, "1101a_PaidTo")
	End If
	
	'NEWHUD2.X78 -- line 1102c
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102c_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox241"), FRM_DS_GetValue(objData, "1102c_PaidBy")
	End If
	
	'NEWHUD2.X3109 -- line 1102c
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102c_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox242"), FRM_DS_GetValue(objData, "1102c_PaidTo")
	End If
	
	'NEWHUD.X745 -- line 1104
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1104_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox51"), FRM_DS_GetValue(objData, "1104_PaidBy")
	End If
	
	'NEWHUD.X805 -- line 1104
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1104_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox123"), FRM_DS_GetValue(objData, "1104_PaidTo")
	End If
	
	'NEWHUD.X208 -- line 1109
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1109_MiscTitleChargeName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_X208"), FRM_DS_GetValue(objData, "1109_MiscTitleChargeName")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1109_PaidBy")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox54"), FRM_DS_GetValue(objData, "1109_PaidBy")
	End If

	'NEWHUD.X215 -- line 1109
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1109_BorrowerFee")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_646"), FRM_DS_GetValue(objData, "1109_BorrowerFee")
	End If
	
	'NEWHUD.X244 -- line 1109
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1109_PaidTo")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox59"), FRM_DS_GetValue(objData, "1109_PaidTo")
	End If
	
	Set objData = Nothing		
End Function



'This function is for set Fee details for one line in 2015 Itemization page.
'@code
'    BIZ_Common_2015Itemization_SetFeeDetails(strLine,strRowID)
'@endcode
'@param strLine The line number for which you will set fee details
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2015Itemization_SetFeeDetails(objParent,strLine,strRowID)
    FRM_Logger_ReportInfoEvent "Set Fee Details for line "&strLine, "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	Dim objFeeDetailsBtn,objFeeDetailsPage, objData
    Set objFeeDetailsBtn=objParent.WebButton("html id:=btnPop"&StrLine)

    GUI_WebButton_Click objFeeDetailsBtn

    Set objFeeDetailsPage=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0")
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "SetFeeDetails", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeDescription")) Then        
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtLineDesc"), FRM_DS_GetValue(objData, "FeeDescription")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaidToType")) Then        
        GUI_List_Select objFeeDetailsPage.WebList("html id:=cboPaidToType"), FRM_DS_GetValue(objData, "PaidToType")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaidToName")) Then        
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtPaidToName"), FRM_DS_GetValue(objData, "PaidToName")        		
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "mths")) Then        
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtMonths"), FRM_DS_GetValue(objData, "mths")        		
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "monthlyfee")) Then
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtUnitBorPaid"), FRM_DS_GetValue(objData, "monthlyfee")		
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Borrower")) Then
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBorPaid"), FRM_DS_GetValue(objData, "Borrower")	
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Seller")) Then
        GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtSelPaid"), FRM_DS_GetValue(objData, "Seller")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Bor_Financed")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBorFinanced"), FRM_DS_GetValue(objData, "Bor_Financed")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Bor_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBorPOC"), FRM_DS_GetValue(objData, "Bor_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Seller_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtSellerPOC"), FRM_DS_GetValue(objData, "Seller_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Broker_PAC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBrokerPAC"), FRM_DS_GetValue(objData, "Broker_PAC")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Broker_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBrokerPOC"), FRM_DS_GetValue(objData, "Broker_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Lender_PAC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtLenderPAC"), FRM_DS_GetValue(objData, "Lender_PAC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Lender_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtLenderPOC"), FRM_DS_GetValue(objData, "Lender_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Other_PAC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtOtherPAC"), FRM_DS_GetValue(objData, "Other_PAC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Other_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtOtherPOC"), FRM_DS_GetValue(objData, "Other_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TaxInterestRate")) Then
		
		Set objTax  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfWindow("swfname:=InsuranceDialog")
		
			If GUI_Object_IsExist(objFeeDetailsPage.WebButton("html id:=btnEditBorPaid")) Then
				GUI_WebButton_Click objFeeDetailsPage.WebButton("html id:=btnEditBorPaid")		
			ElseIf  GUI_Object_IsExist(objFeeDetailsPage.WebButton("html id:=btnUnitEditor"))  Then
				GUI_WebButton_Click objFeeDetailsPage.WebButton("html id:=btnUnitEditor")
			Else
				FRM_Logger_ReportFailEvent "Click on Edit Button","Button not found",Null
			End If
		
		GUI_Object_WaitTillExist objTax
		GUI_WebEdit_Set objTax.SwfEdit("swfname:=rateTxt"),FRM_DS_GetValue(objData, "TaxInterestRate")
		GUI_SwfButton_Click objTax.SwfButton("swfname:=okBtn")
		GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog"),30
	End If
	
	Set objFeeDetailsPage = Nothing
	Set objData = Nothing	
	
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
End Function


'This function is for clicking checkboxes on Fee details for one line in 2015 Itemization page.
'@code
'   BIZ_2015Itemization_FeeDetails_ClickCheckbox(StrLine,ArrStrCheckbox)
'@endcode
'@param strLine The line number for which the fee detail popup window will be open
'@param ArrStrCheckbox The array of checkbox that will be checked, such as "Borrower Can Shop","Borrower Did Shop","Impact APR","Seller Obligated","Property Taxes","Homeowner's Insurance","Other","Escrowed"

Function BIZ_Common_2015Itemization_FeeDetails_ClickCheckbox(objParent,strLine,arrStrCheckbox)
    Dim objFeeDetailsBtn,objFeeDetailsPage,strHtmlId,objClickedCheckbox
    Set objFeeDetailsBtn = objParent.WebButton("html id:=btnPop"&strLine)
    If Not(IsNull(ArrStrCheckbox)) Then
        GUI_WebButton_Click objFeeDetailsBtn
        Set objFeeDetailsPage=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0")
        For i = 0 To UBound(arrStrCheckbox)
          Select Case ArrStrCheckbox(i)
            Case "Borrower Can Shop": strHtmlId="__cid_chkBorShop_Ctrl"
            Case "Borrower Did Shop": strHtmlId="__cid_chkBorDidShop_Ctrl"
            Case "Impacts APR": strHtmlId="__cid_chkImpactAPR_Ctrl"
            Case "Seller Obligated": strHtmlId="__cid_chkSellerObligated_Ctrl"
            Case "Property Taxes": strHtmlId="__cid_chkPropertyCheck_Ctrl"
            Case "Homeowner's Insurance": strHtmlId="__cid_chkInsurance_Ctrl"
            Case "Other": strHtmlId="__cid_chkTaxes_Ctrl"
            Case "Escrowed": strHtmlId="__cid_chkEscrowed_Ctrl"  
            Case "Optional": strHtmlId="__cid_chkOptional_Ctrl" 
          End Select
      
       
      If not instr(ArrStrCheckbox(i),"Seller Obligated")>0  Then
          Set objClickedCheckbox=objFeeDetailsPage.WebCheckBox("html id:="&strHtmlId)	
          GUI_WebCheckbox_Set objClickedCheckbox,"ON"
      End If
        Next
        GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
    End If
	
	Set objFeeDetailsBtn = Nothing
	
End Function

'This function is for clicking checkboxes on Fee details for one line in 2015 Itemization page.
'@code
'   BIZ_Common_2015Itemization_FeeDetails_SetCheckBox(objWebButton,arrStrCheckbox)
'@endcode
'@param objWebButton - Description object for WebButton along with parent object
'@param arrStrCheckbox The array of checkbox that will be checked, such as "Borrower Can Shop","Borrower Did Shop","Impact APR","Seller Obligated","Property Taxes","Homeowner's Insurance","Other","Escrowed"
Function BIZ_Common_2015Itemization_FeeDetails_SetCheckBox(objWebButton,arrStrCheckbox)
    Dim objFeeDetailsBtn,objFeeDetailsPage,strHtmlId,objClickedCheckbox
    Set objFeeDetailsBtn =objWebButton
    If Not(IsNull(arrStrCheckbox)) Then
        GUI_WebButton_Click objFeeDetailsBtn
        Set objFeeDetailsPage=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0")
        For i = 0 To UBound(arrStrCheckbox)
          Select Case ArrStrCheckbox(i)
            Case "Borrower Can Shop": strHtmlId="__cid_chkBorShop_Ctrl"
            Case "Borrower Did Shop": strHtmlId="__cid_chkBorDidShop_Ctrl"
            Case "Impacts APR": strHtmlId="__cid_chkImpactAPR_Ctrl"
            Case "Seller Obligated": strHtmlId="__cid_chkSellerObligated_Ctrl"
            Case "Property Taxes": strHtmlId="__cid_chkPropertyCheck_Ctrl"
            Case "Homeowner's Insurance": strHtmlId="__cid_chkInsurance_Ctrl"
            Case "Other": strHtmlId="__cid_chkTaxes_Ctrl"
            Case "Escrowed": strHtmlId="__cid_chkEscrowed_Ctrl"  
            Case "Optional": strHtmlId="__cid_chkOptional_Ctrl" 
          End Select
      
          Set objClickedCheckbox=objFeeDetailsPage.WebCheckBox("html id:="&strHtmlId)	
          GUI_WebCheckbox_Set objClickedCheckbox,"ON"
        Next
        GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
    End If
	
	Set objFeeDetailsBtn = Nothing
	
End Function

'This function is for verify Daily interest on 2015 Itemization
'@code
'    BIZ_2015Itemization_VerifyDailyInterest(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_VerifyDailyInterest(strRowID)

    	FRM_Logger_ReportInfoEvent "2015 Itemization", "Validate daily interest using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
	BIZ_Forms_Open "2015 Itemization"
	
	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "VerifyDailyInterest", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "333_DailyInterest")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=l_L248"), FRM_DS_GetValue(objData, "333_DailyInterest"), "Daily Interest"
	End If
	
	Set objData = Nothing	
	
End Function



'This function is to set values in Total Estimated Funds section on 2015 Itemization form
'@code
'    Function BIZ_2015Itemization_TotalEstimatedFunds(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_TotalEstimatedFunds(strRowID)
	
	FRM_Logger_ReportInfoEvent "2015 Itemization", "Set Total Estimated Funds using Row Id '"&strRowID&"' in the TotalEstimatedFunds datasheet", null

	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "TotalEstimatedFunds", strRowID)	
    Dim obj2015ItemzationPage
    Set obj2015ItemzationPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "136_PurchasePrice")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_136"), FRM_DS_GetValue(objData, "136_PurchasePrice")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1092_Refinance")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_1092"), FRM_DS_GetValue(objData, "1092_Refinance")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "138_EstimatedPrepaidItems")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_138"), FRM_DS_GetValue(objData, "138_EstimatedPrepaidItems")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "137_EstimatedClosingCosts")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_137"), FRM_DS_GetValue(objData, "137_EstimatedClosingCosts")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "969_PMIMIPFundingFee")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_969"), FRM_DS_GetValue(objData, "969_PMIMIPFundingFee")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1073_TotalCosts")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_1073"), FRM_DS_GetValue(objData, "1073_TotalCosts")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "143_CCPaidBySeller")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=TextBox643"), FRM_DS_GetValue(objData, "143_CCPaidBySeller")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1852_CCPaidByBrokerLenderAndOther")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_1852"), FRM_DS_GetValue(objData, "1852_CCPaidByBrokerLenderAndOther")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "142_CashToBorrower")) Then
        GUI_WebEdit_Set obj2015ItemzationPage.WebEdit("html id:=l_142"), FRM_DS_GetValue(objData, "142_CashToBorrower")
    End If
    
    Set objData = Nothing
    Set obj2015ItemzationPage = Nothing
    
End Function



'This function is to set Due date in InitiaEscrowAccWindow of 2015Itemization  Page
'@code
'    BIZ_Forms_2015Itemization_InitiaEscrowAccWindow_SetDueDate(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Forms_2015Itemization_InitiaEscrowAccWindow_SetDueDate(strRowID)
	
	FRM_Logger_ReportInfoEvent "Set Due Date", "Set Due Date using Row Id '"&strRowID&"' in the Set1000Section", Null

	Dim objIniEscAccSetup,objData,intItemsCount,intColumnCount,arrIniEscAccColumns
	
	Set objPage			  = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData 		  = FRM_DS_GetTestData("Forms_2015Itemization", "Set1000Section", strRowID)

	GUI_WebButton_Click objPage.WebButton("html id:=Button12","name:=Aggregate Setup")
	Set objIniEscAccSetup = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=HUD1ESSetupDialog")
	GUI_Object_WaiTTillExist objIniEscAccSetup
	
	If GUI_Object_IsExist(objIniEscAccSetup) Then
		FRM_Logger_ReportPassEvent "Verify Initial Escrow Account Pop up window","Initial Escrow Account Pop up window displayed",Null
	Else
		FRM_Logger_ReportFailEvent "Verify Initial Escrow Account Pop up window","Initial Escrow Account Pop up window not displayed",Null	
	End If
	
	arrIniEscAccColumns = Split(FRM_DS_GetValue(objData,"InitialEscAccColumns"),";")
	
	For intItemsCount = 0 to Ubound(arrIniEscAccColumns)
		intColumnCount = "9"
		intColumnCount = intColumnCount + intItemsCount 
		intDate=UTIL_Date_FormatDateByPattern(arrIniEscAccColumns(intItemsCount), "mm/dd/yyyy")
		GUI_WebEdit_Set objIniEscAccSetup.SwfEdit("swfname:=box_"&intColumnCount), intDate     'Indexes of the edit boxes are from 9 to 17	
	Next
	
	GUI_SwfButton_Click objIniEscAccSetup.SwfButton("swfname:=okBtn")
	
	Set objIniEscAccSetup = Nothing 
	Set objData 		  = Nothing
	Set objPage           = Nothing
	
End Function



'This function is to set rate in EditButtonTaxWin of 2015Itemization  Page
'@code
'    BIZ_Forms_2015Itemization_1004_EditButtonTaxWin_SetRate(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Forms_2015Itemization_1004_EditButtonTaxWin_SetRate(strRowID)
	
	Dim objPage,objTax,objData
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objTax  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=InsuranceDialog")
	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set1000Section", strRowID)
	
	If GUI_Object_IsExist(objPage.WebButton("html id:=StandardButton6")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=StandardButton6")
	Else
		FRM_Logger_ReportFailEvent "Click on 1004 line Edit Button","Button not Found"
	End If
	
	GUI_Object_WaitTillExist objTax
	GUI_SwfEdit_Set objTax.SwfEdit("swfname:=rateTxt"),FRM_DS_GetValue(objData,"Rate")
	GUI_SwfButton_Click objTax.SwfButton("swfname:=okBtn")
	
	Set objPage = Nothing
	Set objTax  = Nothing
	Set objData = Nothing

End Function



'This function is to SetRate in Edit
'@code
'     BIZ_Forms_2015Itemization_EditFieldValueButton_SetRate(strRowID,strFieldButton)
'@endcode
'@param strRowID Row id of testdata in excel spread sheet
'@param strFieldButton Edit field Button HaZins,RETaxes etc

Function BIZ_Forms_2015Itemization_EditFieldValueButton_SetRate(strRowID,strFieldButton)
	
	Dim objBorrowerPage,objData,strPropVal
	
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		    = FRM_DS_GetTestData("Forms_2015Itemization", "Set1000Section", strRowID)
	
	Select Case strFieldButton	
		Case "Insurance"
			strButtonPropVal    = "StandardButton4"
			strEditFieldPropVal = "Insurance"
		Case "RETaxes"
			strButtonPropVal 	= "StandardButton5"
			strEditFieldPropVal = "RETaxes"
		Case Else
			FRM_Logger_ReportFailEvent "Select edit field Button","No field button found"
	End Select
	
	GUI_WebButton_Click objBorrowerPage.WebButton("html id:="&Trim(strButtonPropVal))
	GUI_Object_WaitTillExistX objBorrowerPage.SwfWindow("swfname:="&strEditFieldPropVal&"Dialog"), 40
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HazIns_Combo")) Then
		GUI_SwfList_Select objBorrowerPage.SwfWindow("swfname:="&strEditFieldPropVal&"Dialog").SwfComboBox("swfname:=typeCombo"), FRM_DS_GetValue(objData, "HazIns_Combo")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Rate")) Then
		GUI_SwfEdit_Set objBorrowerPage.SwfWindow("swfname:="&strEditFieldPropVal&"Dialog").SwfEdit("swfname:=rateTxt"), FRM_DS_GetValue(objData, "Rate")
	End If
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:="&strEditFieldPropVal&"Dialog").SwfButton("swfname:=okBtn")
	
	Set objBorrowerPage = Nothing
	Set objData			= Nothing

End Function



'This function is used to Verify fee data in 2015 Itemization 
'@code
'    BIZ_Common_2015Itemization_VerifyFeeData(strRowID)
'@endcode
'@param strRowID- Row Id of test data in excel spreadsheet	
	
Function BIZ_Common_2015Itemization_VerifyFeeData(strRowID)
	
    FRM_Logger_ReportInfoEvent "Verify Fee details in 2015 Itemization page", "Verify few details using Row id '"&strRowID&"'", Null	
	
	Dim objFeeDetailsPage,objData 
	
	Set objFeeDetailsPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		      = FRM_DS_GetTestData("Forms_2015Itemization", "SetFeeDetails", strRowID)
	 
	'900 section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "230_HomeInsurance")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=l_230_2"),FRM_DS_GetValue(objData, "230_HomeInsurance"),"230_HomeInsurance"&FRM_DS_GetValue(objData, "230_HomeInsurance")	
	End If
	
	'1004 section 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "231_PropertTaxes")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=l_231"),FRM_DS_GetValue(objData, "231_PropertTaxes"),"F231_PropertTaxes"&FRM_DS_GetValue(objData, "231_PropertTaxes")	
	End If 
	
	Set objFeeDetailsPage = Nothing
	Set objData			  = Nothing
	
End Function



'This function is for verify Closing Costs Summary
'@code
'    BIZ_2015Itemization_VerifyClosingCostsSummary(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_VerifyClosingCostsSummary(strRowID)

 	FRM_Logger_ReportInfoEvent "Verify Closing Costs Summary in 1400 Section", "Get data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim obj2015Item
   
    Set obj2015Item = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    BIZ_Forms_Open "2015 Itemization"
	BIZ_Common_2015Itemization_VerifyClosingCostsSummary obj2015Item,strRowID

	Set obj2015Item = Nothing

End Function



'This function is to Verify Closing Costs Summary
'@code
'    BIZ_Common_2015Itemization_VerifyClosingCostsSummary(objParentObject,strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2015Itemization_VerifyClosingCostsSummary(objParentObject,strRowID)

 	FRM_Logger_ReportInfoEvent "Verify Closing Costs Summary in 1400 Section", "Get data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim objData
   
   	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "VerifyClosingCostsSummary", strRowID)
    
    If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"LENPCC_TotLenPaidCC")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_LENPCC"),FRM_DS_GetValue(objData,"LENPCC_TotLenPaidCC"),"LENPCC_Total Lender Paid CC"
    End If
   
    If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"TNBPCC_TotNonBorrowerPaidCC")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_TNBPCC"),FRM_DS_GetValue(objData,"TNBPCC_TotNonBorrowerPaidCC"),"TNBPCC_Total Non Borrower Paid CC"
    End If
    
     If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"TotLenderCredit")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox649"),FRM_DS_GetValue(objData,"TotLenderCredit"),"NEWHUDX1149_Total Lender Credit"
    End If
    
    If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"TotClosingCosts")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_TOTPCC"),FRM_DS_GetValue(objData,"TotClosingCosts"),"TOTPCC_TotalClosing Costs"
    End If
    
     If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"TotCashToBorrower")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_142"),FRM_DS_GetValue(objData,"TotCashToBorrower"),"TOTcashToBorrower"
    End If
    
    Set objData 	= Nothing

End Function



'This function is to Verify Total Estimated Funds
'@code
'    BIZ_Common_2015Itemization_TotalEstimatedFunds(objParentObject,strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_VerifyTotalEstimatedFunds(strRowID)

	FRM_Logger_ReportInfoEvent "Verify Total Estimated Fundsin 1400 Section", "Get data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim obj2015Item
   
    Set obj2015Item = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Forms_Open "2015 Itemization"
	BIZ_Common_2015Itemization_VerifyTotalEstimatedFunds obj2015Item,strRowID

	Set obj2015Item = Nothing

End Function



'This function is to Verify Total Estimated Funds
'@code
'    BIZ_Common_2015Itemization_VerifyTotalEstimatedFunds(objParentObject,strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_2015Itemization_VerifyTotalEstimatedFunds(objParentObject,strRowID)

	FRM_Logger_ReportInfoEvent "Verify Closing Costs Summary in 1400 Section", "Get data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
    Dim objData
   
   	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "VerifyTotalEstimatedFunds", strRowID)
    
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"136_PurchasePrice")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_136"),FRM_DS_GetValue(objData,"136_PurchasePrice"),"136_Purchase price"
    End If
    
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"1073_TotalCosts")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1073"),FRM_DS_GetValue(objData,"1073_TotalCosts"),"1073_Total Costs"
    End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"141_LenderCredit")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_141"),FRM_DS_GetValue(objData,"141_LenderCredit"),"141_Lender Credit"
    End If
    
    If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"1852_CCPaidByBLO")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1852"),FRM_DS_GetValue(objData,"1852_CCPaidByBLO"),"1852_CC Paid By Borrower; Lender; Other"
    End If
    
    If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"1844_TotalCredits")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1844"),FRM_DS_GetValue(objData,"1844_TotalCredits"),"1844_Total Credits"
    End If

    If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"142_CashFromBorrower")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_142"),FRM_DS_GetValue(objData,"142_CashFromBorrower"),"142_Total Credits"
    End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"1092_Refinance")) Then
    	 GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1092"),FRM_DS_GetValue(objData,"1092_Refinance"),"1092_Refinance"
    End If
    
 	Set objData = Nothing

End Function


'This function is for set 902 line Fee Details in 2015 Itemization page.
'@code
'    BIZ_Itemization2015_FeeDetails902(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Itemization2015_FeeDetails902(strRowID)

    FRM_Logger_ReportInfoEvent "Itemization2015 Section 902", "Set 902 FeeDetails ", Null
	Dim objFeeDetails,objData
	
	Set objFeeDetails = SwfWindow("swfname:=MainForm").SwfWindow("text:=Fee Details - 902").Page("title:=.*","index:=0")
	Set objData 	  = FRM_DS_GetTestData("Forms_2015Itemization", "Set900Section", strRowID) 
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebButton("html id:=btnPop902")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "562_Seller")) Then	
	GUI_WebEdit_Set objFeeDetails.WebEdit("html id:=txtSelPaid"), FRM_DS_GetValue(objData, "562_Seller") 	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "x2195_Broker")) Then	
	GUI_WebEdit_Set objFeeDetails.WebEdit("html id:=txtBrokerPAC"), FRM_DS_GetValue(objData, "x2195_Broker") 	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "x2198_Lender")) Then	
	GUI_WebEdit_Set objFeeDetails.WebEdit("html id:=txtLenderPAC"), FRM_DS_GetValue(objData, "x2198_Lender") 	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "x2201_Other")) Then	
	GUI_WebEdit_Set objFeeDetails.WebEdit("html id:=txtOtherPAC"), FRM_DS_GetValue(objData, "x2201_Other") 	
	End If
		
	'Changing due to resolution issue
	'GUI_WebButton_Click SwfWindow("swfname:=MainForm").SwfWindow("text:=Fee Details - 902").SwfButton("swfname:=btnClose")
    SwfWindow("swfname:=MainForm").SwfWindow("text:=Fee Details - 902").SwfButton("swfname:=btnClose").Object.PerformClick
	
    Set objFeeDetails =  Nothing   
    Set objData 	  =  Nothing
    
End Function 



'This function is for set Fee details for one line in 2015 Itemization page in 800 section 
'@code
'    BIZ_2015Itemization_SetFeeDetails(strLine,strRowID)
'@endcode
'@param strLinehtmlId The line number for which you will set fee details
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_800SectionImageBtn_SetFeeDetails(strLinehtmlId,strRowID)
   
   FRM_Logger_ReportInfoEvent "BIZ_2015Itemization_SetFeeDetails in 800 Section for Image Button id "&strLinehtmlId, "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
    
	Dim obj2015ItemizationPage
	
	Set obj2015ItemizationPage = SwfWindow("swfname:=MainForm").Page("index:=0")  
    
    BIZ_Common_2015Itemization_800SectionImageBtn_SetFeeDetails obj2015ItemizationPage,strLinehtmlId,strRowID
	
	Set obj2015ItemizationPage = Nothing
	
End Function



'This function is for set Fee details for one line in 2015 Itemization page.
'@code
'   BIZ_Common_2015Itemization_800SectionImageBtn_SetFeeDetails(strLinehtmlId,strRowID)
'@endcode
'@param strLine The line number for which you will set fee details
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objparent parent object name

Function BIZ_Common_2015Itemization_800SectionImageBtn_SetFeeDetails(objParentObject,strLinehtmlId,strRowID)
	
 	FRM_Logger_ReportInfoEvent "Set Fee Details window  for line "&strLinehtmlId, "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
	Dim objFeeDetailsBtn,objFeeDetailsPage, objData
    
    Set objFeeDetailsPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("micclass:=Page","index:=0")
    Set objFeeDetailsBtn  = objParentObject.WebButton("html id:="&strLinehtmlId)
	Set objData 		  = FRM_DS_GetTestData("Forms_2015Itemization", "SetFeeDetails", strRowID)
	
    GUI_WebButton_Click objFeeDetailsBtn   
  
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Broker_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBrokerPOC"), FRM_DS_GetValue(objData, "Broker_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Bor_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtBorPOC"), FRM_DS_GetValue(objData, "Broker_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Lender_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtLenderPOC"), FRM_DS_GetValue(objData, "Lender_POC")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Other_POC")) Then
		GUI_WebEdit_Set objFeeDetailsPage.WebEdit("html id:=txtOtherPOC"), FRM_DS_GetValue(objData, "Other_POC")
	End If

	Set objFeeDetailsBtn  = Nothing
	Set objData           = Nothing
	
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
	
End Function



'This function is used to Validate Fee details
'@code
'    BIZ_2015Itemization_ValidateFeeDetails(strLine,strRowID)
'@endcode
'@param strRowID - RowId of test data in Excel spread sheet

Function BIZ_2015Itemization_ValidateFeeDetails(strLine,strRowID)
    
    FRM_Logger_ReportInfoEvent "Set Fee Details for line "&strLine, "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	
	Dim objFeeDetailsBtn,objFeeDetailsPage, objData
    
    Set objFeeDetailsBtn  = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0").WebButton("html id:=btnPop"&StrLine)
	Set objFeeDetailsPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0")
    Set objData           = FRM_DS_GetTestData("Forms_2015Itemization", "VerifyFeeDetails", strRowID)
    
    GUI_WebButton_Click objFeeDetailsBtn
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"BorrowerPaid")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=txtBorPaid"),FRM_DS_GetValue(objData,"BorrowerPaid"),"Borrower Paid"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"SellerPaid")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=txtSelPaid"),FRM_DS_GetValue(objData,"SellerPaid"),"Seller Paid"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"BrokerAmtPaid")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=txtBrokerAmtPaid"),FRM_DS_GetValue(objData,"BrokerAmtPaid"),"Broker Amount Paid"
	End If 
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LenderAmtPaid")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=txtLenderAmtPaid"),FRM_DS_GetValue(objData,"LenderAmtPaid"),"Lender Amount Paid"
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"OtherAmtPaid")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=txtOtherAmtPaid"),FRM_DS_GetValue(objData,"OtherAmtPaid"),"Other Amount Paid"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TotalPaidBy")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=txtTotalPaidBy"),FRM_DS_GetValue(objData,"TotalPaidBy"),"Total paid By B/L/O"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TotalFeeAmt")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=txtFeeAmt2"),FRM_DS_GetValue(objData,"TotalFeeAmt"),"Total Fee Amount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Section32Pts")) Then
		GUI_Object_ValidateValue objFeeDetailsPage.WebEdit("html id:=txtSec32Amt"),FRM_DS_GetValue(objData,"Section32Pts"),"Section 32 Points and Fees"
	End If
	
	Set objFeeDetailsBtn  = Nothing
	Set objFeeDetailsPage = Nothing
	Set objData 		  = Nothing	
	
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
	
End Function



'This function for verifying data in MIP/PMI/Guarantee Fee Calculation Window accessed from Borrower Summary Origination Form
'@code
'	Function BIZ_2015Itemization_VerifyMIPGuaranteeFeeCalculation(strLine,strRowID)
'@endcode
'@param objMipDialog - description object for MIP Guarantee Fee Calculation dialog
'@param strRowID -  corresponding test data row Id from Excel sheet

Function BIZ_2015Itemization_VerifyMIPGuaranteeFeeCalculation(strLine,strRowID)

	FRM_Logger_ReportInfoEvent "2015 - Itemization", "Verify MIP/PMI/Guarantee Fee Calculation using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet",Null

	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "VerifyMIPGuaranteeFeeCalc",strRowID)
	
	If strLine = "902" Then
		GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=StandardButton3")
	ElseIf strLine = "903" Then
		GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=StandardButton4")
	End If
	
	'click Edit icon for Mtg. Ins
	Set objMipDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
	GUI_Object_WaitTillVisibleX objMipDialog,25
	
	'1107
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1107_MIPFundingGuarantee")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData, "1107_MIPFundingGuarantee"),"Field 1107"	
	End If
	
	'1199 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1199_MMIPercent")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=rateMI1Txt"),FRM_DS_GetValue(objData, "1199_MMIPercent"),"Field 1199"
	End If
	
	'1198 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1198_MMIMonths")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=monthMI1Txt"),FRM_DS_GetValue(objData, "1198_MMIMonths"),"Field 1198"
	End If
	
	'1201 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1201_MMIPercent")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=rateMI2Txt"),FRM_DS_GetValue(objData, "1201_MMIPercent"),"Field 1201"
	End If
	
	'1200 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1200_MMIMonths")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=monthMI2Txt"),FRM_DS_GetValue(objData, "1200_MMIMonths"),"Field 1200"
	End If
	
	'1205 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_CancelAt")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData, "1205_CancelAt"),"Field 1205"
	End If
	
	'3561_Guarantee Fee Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3561_GuaranteeFeeAmount")) Then 
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtAllFee"),FRM_DS_GetValue(objData,"3561_GuaranteeFeeAmount"),"Field 3561 'Guarantee Fee Amount'"
	End If
	
	'3562_Total Loan Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3562_TotalLoanAmount")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtAllTotalAmount"),FRM_DS_GetValue(objData,"3562_TotalLoanAmount"),"Field 3562 'Total Loan Amount'"
	End If
	
	'1205 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_CancelAtDisabled")) Then
		GUI_Object_ValidateDisabled objMipDialog.SwfEdit("swfname:=rateMICancelTxt"),"Field 1205"
	End If
	
	'3563 Amount of Guarantee Fee Financed
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3563_AmtGuaranteeFeeFinanced")) And FRM_DS_GetValue(objData,"3563_AmtGuaranteeFeeFinanced")<>"Null" Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtPortionFinancedAmount"),FRM_DS_GetValue(objData,"3563_AmtGuaranteeFeeFinanced"),"Field 3563 'Amount of Guarantee Fee Financed'"
	ElseIf FRM_DS_GetValue(objData,"3563_AmtGuaranteeFeeFinanced")="Null" Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtPortionFinancedAmount"),"","Field 3563 'Amount of Guarantee Fee Financed'"
	End If
	
	'3564_Guarantee Fee Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3564_GuaranteeFeeAmount")) Then 
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtPortionFee"),FRM_DS_GetValue(objData,"3564_GuaranteeFeeAmount"),"Field 3564 'Guarantee Fee Amount'"
	End If
	
	'3565_Total Loan Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3565_TotalLoanAmount")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtPortionTotalLoanAmount"),FRM_DS_GetValue(objData,"3565_TotalLoanAmount"),"Field 3565 'Total Loan Amount'"
	End If
		
	'Close MIP/PMI/Guarantee Fee Calculation Window
	GUI_SwfButton_Click objMipDialog.SwfButton("swfname:=okBtn")
	
	Set objData 	 = Nothing
	Set objMipDialog = Nothing

End Function



'This function is used to set MI and PI details Mortgagae Insurance and Principal Interest Wwindow
'@code
'    BIZ_2015Itemization_EditFieldButton_SetMiandPiDetails(strButtonId,strRowID)
'@endcode
'@param strRowID - RowId of test data in Excel spread sheet
'@param strButtonId Button id of edit dialog button

Function BIZ_2015Itemization_EditFieldButton_SetMiandPiDetails(strButtonId,strRowID)

        FRM_Logger_ReportInfoEvent "Set MiandPi Details in 900 Section 902 line","Set MI and PI details in 900 section 902 Line using row id:"&strRowID&"",Null

        Dim objData,objMIPWin,objPage
        
        Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set900Section", strRowID)
        Set objPage = SwFwindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
        Set objMIPWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
        
        GUI_WebButton_Click objPage.WebButton("html id:=StandardButton"&strButtonId)

        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1107_MIP/Funding/Guarantee")) Then
            GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData, "1107_MIP/Funding/Guarantee")
        End If 
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1198_Months")) Then
             GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=monthMI1Txt"),FRM_DS_GetValue(objData, "1198_Months")
        End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1199_Interest Rate")) Then
            GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMI1Txt"),FRM_DS_GetValue(objData, "1199_Interest Rate")
        End If 
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1209_Cancelat")) Then
            GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData, "1209_Cancelat")
        End If 
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1201_InterestRate")) Then
           GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMI2Txt"),FRM_DS_GetValue(objData, "1201_InterestRate")
        End If 
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1200_Months")) Then
            GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=monthMI2Txt"),FRM_DS_GetValue(objData, "1200_Months")
        End If 
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_CancelAt")) Then
            GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData, "1205_CancelAt")
        End If  
        
        GUI_SwfButton_Click objMIPWin.SwfButton("swfname:=okBtn")
        
        Set objData       = Nothing
        Set objMIPWin 	  = Nothing
        Set obj1003Page   = Nothing
                
End Function



'This function is used to set MI and PI details Mortgagae Insurance and Principal Interest Wwindow
'@code
'    BIZ_2015Itemization_FeeDecreases110012001300Section(strRowID)
'@endcode
'@param strRowID - RowId of test data in Excel spread sheet
Function BIZ_2015Itemization_FeeDecreases110012001300Section(strRowID)
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set1100Section", strRowID)
    '1101
	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "Set1100Section", strRowID)
	feevalue =  objParentObject.WebEdit("html id:=TextBox161").GetROProperty("value")
	If(Len(feevalue) > 0) Then 
	   	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101a_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox161"), FRM_DS_GetValue(objData, "1101a_Borrower")
		End If
	End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox162").GetROProperty("value")
	If(Len(feevalue) > 0) Then  
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101b_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox162"), FRM_DS_GetValue(objData, "1101b_Borrower")
		End If
	End If
	feevalue =  objParentObject.WebEdit("html id:=TextBox162").GetROProperty("value")
	If(Len(feevalue) > 0) Then 
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101c_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox163"), FRM_DS_GetValue(objData, "1101c_Borrower")
		End If
	End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox164").GetROProperty("value")
	If(Len(feevalue) > 0) Then 
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101d_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox164"), FRM_DS_GetValue(objData, "1101d_Borrower")
		End If
	End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox165").GetROProperty("value")
	If(Len(feevalue) > 0) Then 
   		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101e_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox165"), FRM_DS_GetValue(objData, "1101e_Borrower")
		End If
    End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox171").GetROProperty("value")
	If(Len(feevalue) > 0) Then
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1101f_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox171"), FRM_DS_GetValue(objData, "1101f_Borrower")
		End If
	End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox145").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102a_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox145"), FRM_DS_GetValue(objData, "1102a_Borrower")
		End If
	End If
    feevalue =  SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox148").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102b_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox148"), FRM_DS_GetValue(objData, "1102b_Borrower")
		End If
	End If
    feevalue =  SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox424").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102c_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox424"), FRM_DS_GetValue(objData, "1102c_Borrower")
		End If
	End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox425").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102d_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox425"), FRM_DS_GetValue(objData, "1102d_Borrower")
		End If
	End If
  	feevalue =  objParentObject.WebEdit("html id:=TextBox618").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102e_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox618"), FRM_DS_GetValue(objData, "1102e_Borrower")
		End If
	End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox619").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102f_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox619"), FRM_DS_GetValue(objData, "1102f_Borrower")
		End If
	End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox620").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102g_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox620"), FRM_DS_GetValue(objData, "1102g_Borrower")
		End If
	End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox621").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102h_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox621"), FRM_DS_GetValue(objData, "1102h_Borrower")
		End If
    End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox61").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102i_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox61"), FRM_DS_GetValue(objData, "1102i_Borrower")
		End If
    End If
    feevalue =  objParentObject.WebEdit("html id:=TextBox29").GetROProperty("value")
	If(Len(feevalue) > 0) Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1102j_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox29"), FRM_DS_GetValue(objData, "1102j_Borrower")
		End If
    End if
    feevalue =  objParentObject.WebEdit("html id:=TextBox29").GetROProperty("value")
	If(Len(feevalue) > 0) Then
   		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1104_Borrower")) Then
			GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox29"), FRM_DS_GetValue(objData, "1104_Borrower")
		End If
	End If

	Set objParentObject = Nothing
	Set objData       = Nothing

End Function 
'This function is for set fees for "Construction Fees collected Post Consummation" for  2015 Itemization page.
'@code
'    BIZ_2015Itemization_ConstrFeeClctedPostConsumation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_2015Itemization_ConstrFeeClctedPostConsumation(strRowID)
    
	Dim obj2015ItemizationPage
	BIZ_Forms_Open "2015 Itemization"
	Set obj2015ItemizationPage = SwfWindow("swfname:=MainForm").Page("index:=0")  
    
    FRM_Logger_ReportInfoEvent "Set Fee Paid by Borrower for RowID "&strRowID, "Set data using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null
	Dim objData
    
    Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "SetPCData", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PC1_Borrower")) Then        
        GUI_WebEdit_Set obj2015ItemizationPage.WebEdit("html id:=TextBox315"), FRM_DS_GetValue(objData, "PC1_Borrower")        		
	End If
	
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PC1_PaidBy")) Then        
        GUI_WebList_Select obj2015ItemizationPage.WebList("html id:=DropdownBox270"), FRM_DS_GetValue(objData, "PC1_PaidBy")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PC2_Borrower")) Then        
        GUI_WebEdit_Set obj2015ItemizationPage.WebEdit("html id:=TextBox319"), FRM_DS_GetValue(objData, "PC2_Borrower")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PC2_PaidBy")) Then        
        GUI_WebList_Select obj2015ItemizationPage.WebList("html id:=DropdownBox272"), FRM_DS_GetValue(objData, "PC2_PaidBy")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PC3_Borrower")) Then        
        GUI_WebEdit_Set obj2015ItemizationPage.WebEdit("html id:=TextBox322"), FRM_DS_GetValue(objData, "PC3_Borrower")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PC3_PaidBy")) Then        
        GUI_WebList_Select obj2015ItemizationPage.WebList("html id:=DropdownBox275"), FRM_DS_GetValue(objData, "PC3_PaidBy")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PC4_Borrower")) Then        
        GUI_WebEdit_Set obj2015ItemizationPage.WebEdit("html id:=TextBox328"), FRM_DS_GetValue(objData, "PC4_Borrower")        		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PC4_PaidBy")) Then        
        GUI_WebList_Select obj2015ItemizationPage.WebList("html id:=DropdownBox276"), FRM_DS_GetValue(objData, "PC4_PaidBy")        		
	End If
	
	BIZ_Loan_Save()	
	
	Set objFeeDetailsPage = Nothing
	Set obj2015ItemizationPage = Nothing

	
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\2015Itemization.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\203kMaxMortgageWS.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_203kMaxMortgageWS BIZ_Forms_203kMaxMortgageWS
'
' List of functions here
' @code
'   Function BIZ_203kMaxMortgageWS_SetBorrowser(strRowID)
'   Function BIZ_203kMaxMortgageWS_SetPropertyInfo(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is to set  BIZ_203kMaxMortgageWS_Borrower_Details
'@code
'    BIZ_FHAManagement_Details(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_203kMaxMortgageWS_SetBorrowser(strRowID)

	FRM_Logger_ReportInfoEvent "203k Max Mortgage WS Borrower Information", "Set 203k Max Mortgage WS Details Information using Row Id '"&strRowID&"' in the 203k Max Mortgage WS Details datasheet", null

	Set objData = FRM_DS_GetTestData("Forms_203kMaxMortgageWS", "SetBorrower", strRowID)

	Dim objPage
	Set objPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")

	BIZ_Forms_Open "203k Max Mortgage WS"

	GUI_WebEdit_Set objPage.WebEdit("html id:=l_1040"), FRM_DS_GetValue(objData, "FHACase")  
	GUI_WebEdit_Set objPage.WebEdit("html id:=l_16"), FRM_DS_GetValue(objData, "#OfUnits") 
    val = FRM_DS_GetValue(objData, "HUD-Owned")
	If UTIL_String_IsNotEmpty(val) Then		
		GUI_WebCheckBox_Set objPage.Webcheckbox("html id:=__cid_CheckBox1_Ctrl","val:="&val),"ON"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Type")) Then
		GUI_WebList_Select objPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "Type")
	End If
    val = FRM_DS_GetValue(objData, "PurchaseSalesContactDate")
	If  UTIL_String_IsNotEmpty(val) Then
		GUI_WebEdit_Set objPage.WebEdit("html id:=l_1518"), val
	End If

End Function



'This function is to set  BIZ_203kMaxMortgageWS_SetPropertyInfo
'@code
'    BIZ_203kMaxMortgageWS_SetPropertyInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_203kMaxMortgageWS_SetPropertyInfo(strRowID)
		 
	FRM_Logger_ReportInfoEvent "203kMaxMortgageWS Property Information", "Set 2203kMaxMortgageWS Property Information using Row Id '"&strRowID&"'", null

	Set objData = FRM_DS_GetTestData("Forms_203kMaxMortgageWS", "SetPropertyInfo", strRowID)

	Dim objPage
	Set  objPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
    If GUI_Object_IsEnabled(objPage.WebEdit("html id:=l_MAX23KX40")) Then
        GUI_WebEdit_Set objPage.WebEdit("html id:=l_MAX23KX40"), FRM_DS_GetValue(objData, "ContractSalePrice")  	
    End If    
    GUI_WebEdit_Set objPage.WebEdit("html id:=l_MAX23KX5"), FRM_DS_GetValue(objData, "As-IsValue")    	
    GUI_WebEdit_Set objPage.WebEdit("html id:=l_MAX23KX6"),FRM_DS_GetValue(objData, "AfterImprovedValue")
    GUI_WebEdit_Set objPage.WebEdit("html id:=l_MAX23KX8"), FRM_DS_GetValue(objData, "AllowableEnergyImprovements") 
    GUI_WebEdit_Set objPage.WebEdit("html id:=l_MAX23KX70"), FRM_DS_GetValue(objData, "TotalCostofRepairsincludesA6") 

End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\203kMaxMortgageWS.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\AffiliatedBusinessArrangements.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_AffiliatedBusinessArrangements BIZ_Forms_AffiliatedBusinessArrangements
'
'List of functions here
'@code
'	Function BIZ_AffiliatedBusinessArrangements_AddNewAffiliate(strRowID)
'   Function BIZ_Common_AffiliatedBusinessArrangements_AddNewAffiliate(objParentObject, strRowID)
'	Function BIZ_Verify_AffiliatedBusinessArrangements_AffiliateDetail(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for Adding a new affiliate
'@code
'    BIZ_AffiliatedBusinessArrangements_AddNewAffiliate(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_AffiliatedBusinessArrangements_AddNewAffiliate(strRowID)
	
	FRM_Logger_ReportInfoEvent "Affiliated Business Arrangements", "Set Affiliated Business Arrangements data using Row Id '"&strRowID&"'", null
    
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnIconAdd")
    Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	BIZ_Common_AffiliatedBusinessArrangements_AddNewAffiliate objPage, strRowID	 
	
	Set objPage = Nothing	
      
End Function	



'This function is for set information on Affiliated Business Arrangements form
'@code
'    BIZ_Common_AffiliatedBusinessArrangements_AddNewAffiliate(objParentObject, strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_AffiliatedBusinessArrangements_AddNewAffiliate(objParentObject, strRowID)
    
    Set objData = FRM_DS_GetTestData("Forms_AffiliatedBusinessArrangements", "AffiliatedBusinessArrangement", strRowID)
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LenderName")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox1","index:=0"), FRM_DS_GetValue(objData, "LenderName") 	'LenderName
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Address") ) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox4","index:=0"), FRM_DS_GetValue(objData, "Address") 	'Address
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_ABX5","index:=0"), FRM_DS_GetValue(objData, "Zip") 	'Zip
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AffiliateName")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox2","index:=0"), FRM_DS_GetValue(objData, "AffiliateName") 	'AffiliateName
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NatureOfRelationship")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox3","index:=0"), FRM_DS_GetValue(objData, "NatureOfRelationship") 	'NatureOfRelationship
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PercentageOfOwnershipInterest")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "PercentageOfOwnershipInterest") 	'PercentageOfOwnershipInterest
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Settlement")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl","index:=0"), Cint(FRM_DS_GetValue(objData, "Settlement")) 'Settlement
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PurchaseSaleRefinance")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox1_Ctrl","index:=0"), Cint(FRM_DS_GetValue(objData, "PurchaseSaleRefinance")) 'PurchaseSaleRefinance
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine1Desc")) then 
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_ABX10","index:=0"), FRM_DS_GetValue(objData, "ServiceLine1Desc")   'ServiceLine1Desc
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine1Charge")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_AFFX8","index:=0"), FRM_DS_GetValue(objData, "ServiceLine1Charge")	'ServiceLine1Charge
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine1RequiredUse")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox3_Ctrl","index:=0"), Cint(FRM_DS_GetValue(objData, "ServiceLine1RequiredUse")) 'ServiceLine1RequiredUse
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine2Desc")) then 
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_ABX11","index:=0"), FRM_DS_GetValue(objData, "ServiceLine2Desc")  'ServiceLine2Desc
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine2Charge")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_AFFX10","index:=0"), FRM_DS_GetValue(objData, "ServiceLine2Charge")	'ServiceLine2Charge
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine2RequiredUse")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox4_Ctrl","index:=0"), Cint(FRM_DS_GetValue(objData, "ServiceLine2RequiredUse")) 'ServiceLine2RequiredUse
	End If

	Set objData = Nothing		
    
End Function



'This function is for verify information on Affiliated Business Arrangements form
'@code
'    BIZ_Verify_AffiliatedBusinessArrangements_AffiliateDetail(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Verify_AffiliatedBusinessArrangements_AffiliateDetail(strRowID)
    
    FRM_Logger_ReportInfoEvent "Affiliated Business Arrangements", "Verify Affiliated Business Arrangement data using Row Id '"&strRowID&"'", null
    
    Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_AffiliatedBusinessArrangements", "AffiliatedBusinessArrangement", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LenderName")) Then	
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox1","index:=0"), FRM_DS_GetValue(objData, "LenderName"), "LenderName"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Address") ) Then	
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox4","index:=0"), FRM_DS_GetValue(objData, "Address"), "Address"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then	
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_ABX5","index:=0"), FRM_DS_GetValue(objData, "Zip"), "Zip"
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AffiliateName")) Then	
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox2","index:=0"), FRM_DS_GetValue(objData, "AffiliateName"), "AffiliateName"
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NatureOfRelationship")) Then	
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox3","index:=0"), FRM_DS_GetValue(objData, "NatureOfRelationship"), "NatureOfRelationship"
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PercentageOfOwnershipInterest")) Then	
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "PercentageOfOwnershipInterest"), "PercentageOfOwnershipInterest"
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Settlement")) Then		
		GUI_Object_ValidateProperty objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl","index:=0"), "checked", FRM_DS_GetValue(objData, "Settlement"), "Settlement"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PurchaseSaleRefinance")) Then		
		GUI_Object_ValidateProperty objParentObject.WebCheckBox("html id:=__cid_CheckBox1_Ctrl","index:=0"), "checked", FRM_DS_GetValue(objData, "PurchaseSaleRefinance"), "PurchaseSaleRefinance"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine1Desc")) then 
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_ABX10","index:=0"), FRM_DS_GetValue(objData, "ServiceLine1Desc"), "ServiceLine1Desc"
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine1Charge")) Then	
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_AFFX8","index:=0"), FRM_DS_GetValue(objData, "ServiceLine1Charge"), "ServiceLine1Charge"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine1RequiredUse")) Then		
		GUI_Object_ValidateProperty objParentObject.WebCheckBox("html id:=__cid_CheckBox3_Ctrl","index:=0"), "checked", FRM_DS_GetValue(objData, "ServiceLine1RequiredUse"), "ServiceLine1RequiredUse"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine2Desc")) then 
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_ABX11","index:=0"), FRM_DS_GetValue(objData, "ServiceLine2Desc"), "ServiceLine2Desc"
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine2Charge")) Then	
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_AFFX10","index:=0"), FRM_DS_GetValue(objData, "ServiceLine2Charge"), "ServiceLine2Charge"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceLine2RequiredUse")) Then		
		GUI_Object_ValidateProperty objParentObject.WebCheckBox("html id:=__cid_CheckBox4_Ctrl","index:=0"), "checked", FRM_DS_GetValue(objData, "ServiceLine2RequiredUse"), "ServiceLine2RequiredUse"
	End If
    
	Set objData = Nothing
    Set objParentObject = Nothing

End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\AffiliatedBusinessArrangements.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\AggregateEscrowAccount.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'List of functions here
'@code
'	Function BIZ_AggregateEscrowAccount_SetData(strRowID)
'	Function BIZ_AggregateEscrowAccount_InitialEscrowAccountSetUp_SetData(strRowID)
'	Function BIZ_Forms_AggregateEscrowAccount_SetData(strRowID)
'	Function BIZ_Common_Forms_AggregateEscrowAccount_SetData(strRowID)
'   Function BIZ_Forms_AggregateEscrowAccount_SetUp(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set data in Aggregate Escrow Screen
'@code
'    BIZ_AggregateEscrowAccount_SetData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_AggregateEscrowAccount_SetData(strRowID)

	FRM_Logger_ReportInfoEvent "BIZ_AggregateEscrowAccount_SetData", "Set the data in Aggregate Escrow Account Screen using rowid '"&strRowID&"'", null
	
	BIZ_Forms_Open "Aggregate Escrow Account"
	
	Dim objEscrowScreen, objData, objFieldLock
	Set objEscrowScreen = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData 		= FRM_DS_GetTestData("Forms_AggregateEscrowAccount", "SetData", strRowID)
	Set objFieldLock	= objEscrowScreen.WebButton("html id:=FieldLock10")
	
	'Set 1st Payment date
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "682_1stPaymentDate")) Then
		GUI_WebEdit_Set  objEscrowScreen.WebEdit("html id:=l_682", "index:=0"), FRM_DS_GetValue(objData, "682_1stPaymentDate")
	End If	
	
	'Set the data for monthly tax field(231)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "231_Tax")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "231_Tax")&"' in Tax field", Null
		GUI_WebEdit_Set  objEscrowScreen.WebEdit("html id:=l_1405", "index:=0"), FRM_DS_GetValue(objData, "231_Tax")
	End If	
	
	'Set the data for monthly Hazard Insurance field(230)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "230_HazardInsurance")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "230_HazardInsurance")&"' in Hazard Insurance field", Null
		GUI_WebEdit_Set  objEscrowScreen.WebEdit("html id:=l_230", "index:=0"), FRM_DS_GetValue(objData, "230_HazardInsurance")
	End If	
	
	'Set 1st Payment Date(682)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "682_FirstPaymentDate")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "682_FirstPaymentDate")&"' in First Payment Date field", Null
		GUI_WebEdit_Set  objEscrowScreen.WebEdit("html id:=l_682", "index:=0"), FRM_DS_GetValue(objData, "682_FirstPaymentDate")
	End If
	
	'Set Escrow 1st Payment Date Basis
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EscrowFirstPaymentDateBasis")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "EscrowFirstPaymentDateBasis")&"' in Escrow First Payment Date Basis field", Null
		GUI_WebList_Select objEscrowScreen.WebList("html id:=DropdownBox1", "index:=0"), FRM_DS_GetValue(objData, "EscrowFirstPaymentDateBasis")
	End If
	
	'Set the data for monthly Mortgage Insurance field(232)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "232_MortgageInsurance")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "232_MortgageInsurance")&"' in Mortagage Insurance field", Null
		If GUI_Object_IsExist(objFieldLock.Image("file name:=field-unlock.png","index:=0")) Then
			GUI_WebButton_Click objFieldLock
			GUI_Object_WaitTillExist objFieldLock.Image("file name:=field-lock.png","index:=0")
		End If	
		GUI_WebEdit_Set objEscrowScreen.WebEdit("html id:=l_232", "index:=0"), FRM_DS_GetValue(objData, "232_MortgageInsurance")
	End If
	
	'Set the data for monthly Flood Insurance field(235)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "235_FloodInsurance")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "235_FloodInsurance")&"' in Flood Insurance field", Null
		GUI_WebEdit_Set objEscrowScreen.WebEdit("html id:=l_235", "index:=0"), FRM_DS_GetValue(objData, "235_FloodInsurance")
	End If
	
	'Set the data for monthly City Property Tax(L268)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L268_CityPropertyTax")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "L268_CityPropertyTax")&"' in City Property Tax field", Null
		GUI_WebEdit_Set objEscrowScreen.WebEdit("html id:=l_L268", "index:=0"), FRM_DS_GetValue(objData, "L268_CityPropertyTax")
	End If
	
	'set data for 1630_Tax1
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1630_Tax1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "1630_Tax1")&"' in 1630_Tax1 Date1 field", Null
		GUI_WebEdit_Set objEscrowScreen.WebEdit("html id:=l_1630"), FRM_DS_GetValue(objData, "1630_Tax1")
	End If
	
	'set data for 253_Tax2
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "253_Tax2")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "253_Tax2")&"' in 253_Tax2 field", Null
		GUI_WebEdit_Set objEscrowScreen.WebEdit("html id:=l_253"), FRM_DS_GetValue(objData, "253_Tax2")
	End If
	
	'set data for 254_Tax3
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "254_Tax3")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "254_Tax3")&"' in 254_Tax3 field", Null
		GUI_WebEdit_Set objEscrowScreen.WebEdit("html id:=l_254"), FRM_DS_GetValue(objData, "254_Tax3")
	End If
	
	'set data for NEWHUD.X1707
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NEWHUD.X1707")) Then
		GUI_WebEdit_Set objEscrowScreen.WebEdit("html id:=TextBox58"), FRM_DS_GetValue(objData, "NEWHUD.X1707")
	End If
	
	'set data for USDA annual Fee
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "USDAAnnualFee")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "USDAAnnualFee")&"' in  USDA annual Fee field", Null
		GUI_WebEdit_Set objEscrowScreen.WebEdit("html id:=TextBox58"), FRM_DS_GetValue(objData, "USDAAnnualFee")
	End If
	
	Set objEscrowScreen	= Nothing
	Set objData			= Nothing
	Set objFieldLock	= Nothing
	
End Function



'This function is for set data in initial Escrow Account SetUp Screen
'@code
'    BIZ_AggregateEscrowAccount_InitialEscrowAccountSetUp_SetData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_AggregateEscrowAccount_InitialEscrowAccountSetUp_SetData(strRowID)

	FRM_Logger_ReportInfoEvent "BIZ_AggregateEscrowAccount_InitialEscrowAccountSetUp_SetData", "Set the data in Initial Escrow Account SetUp Screen using rowid '"&strRowID&"'", null
	
	Dim objEscrowScreen, objData, objEscrowSetUpScreen, objEscrowSetUpScreenList
	Set objEscrowScreen 		 = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData 				 = FRM_DS_GetTestData("Forms_AggregateEscrowAccount", "SetData", strRowID)
	Set objEscrowSetUpScreen 	 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=HUD1ESSetupDialog")
	Set objEscrowSetUpScreenList = objEscrowSetUpScreen.SwfListView("swfname:=controlListViewSetup")
	
	GUI_WebButton_Click objEscrowScreen.WebButton("html id:=Button1", "index:=0")
	GUI_Object_WaitTillExistX objEscrowSetUpScreen, 30
	
	'set data for Cushion Tax
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "Tax_Cushion"))) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "Tax_Cushion")&"' in Cushion Tax field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_0"), FRM_DS_GetValue(objData, "Tax_Cushion")
	End If
	
	'set data for Cushion Haz Ins
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "Haz_Ins_Cushion"))) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "Haz_Ins_Cushion")&"' in Cushion Haz Ins field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_1"), FRM_DS_GetValue(objData, "Haz_Ins_Cushion")
	End If
	
	'set data for Cushion User #1
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "Tax_User_1"))) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "Tax_User_1")&"' in Cushion User #1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_5"), FRM_DS_GetValue(objData, "Tax_User_1")
	End If
	
	'set data for Due Date1 Tax
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "Tax_DueDate1"))) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "Tax_DueDate1")&"' in Tax Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_9"), FRM_DS_GetValue(objData, "Tax_DueDate1")
	End If	
	
	'set data for Due Date2 Tax
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Tax_DueDate2")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "Tax_DueDate2")&"' in Tax Due Date2 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_18"), FRM_DS_GetValue(objData, "Tax_DueDate2")
	End If	
	
	'set data for Due Date1 Haz Ins
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HazIns_DueDate1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "HazIns_DueDate1")&"' in Haz Ins Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_10"), FRM_DS_GetValue(objData, "HazIns_DueDate1")
	End If
	
	'set data for Due Date2 Haz Ins
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HazIns_DueDate2")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "HazIns_DueDate2")&"' in Haz Ins Due Date2 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_19"), FRM_DS_GetValue(objData, "HazIns_DueDate2")
	End If
	
	'set data for Due Date1 Mtg Ins
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MtgIns_DueDate1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "MtgIns_DueDate1")&"' in Mtg Ins Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_11"), FRM_DS_GetValue(objData, "MtgIns_DueDate1")
	End If
	
	'set data for Due Date1 Fld Ins
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FldIns_DueDate1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "FldIns_DueDate1")&"' in Fld Ins Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_12"), FRM_DS_GetValue(objData, "FldIns_DueDate1")
	End If
	
	'set data for Due Date1 City Tax 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CityTaxes_DueDate1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "CityTaxes_DueDate1")&"' in City Tax Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_13"), FRM_DS_GetValue(objData, "CityTaxes_DueDate1")
	End If
	
	'set data for Due Date1 User#1 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "User#1_DueDate1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "User#1_DueDate1")&"' in User#1 Tax Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_14"), FRM_DS_GetValue(objData, "User#1_DueDate1")
	End If
	
	'set data for Due Date1 User#2
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "User#2_DueDate1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "User#2_DueDate1")&"' in User#2 Tax Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_15"), FRM_DS_GetValue(objData, "User#2_DueDate1")
	End If
	
	'set data for Due Date1 User#3
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "User#3_DueDate1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "User#3_DueDate1")&"' in User#3 Tax Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_16"), FRM_DS_GetValue(objData, "User#3_DueDate1")
	End If
	
	'set data for Due Date1 AnnualFee
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AnnualFee_DueDate1")) Then
		FRM_Logger_ReportInfoEvent "Set Data", "Set the value '"&FRM_DS_GetValue(objData, "AnnualFee_DueDate1")&"' in AnnualFee_DueDate1 Tax Due Date1 field", Null
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_17"), FRM_DS_GetValue(objData, "AnnualFee_DueDate1")
	End If
	
	GUI_SwfButton_Click objEscrowSetUpScreen.SwfButton("swfname:=okBtn")
	
	Set objEscrowScreen		 	 = Nothing
	Set objData				 	 = Nothing
	Set objEscrowSetUpScreen	 = Nothing
	Set objEscrowSetUpScreenList = Nothing
	
End Function



'This function is to set data in Aggregate Escrow Account form
'@code
'   BIZ_Forms_AggregateEscrowAccount_SetEscrowDetails(strRowID)
'@endcode
'@param strRowID - row id of test data in excel spread sheet

Function BIZ_Forms_AggregateEscrowAccount_SetData(strRowID)
	
	FRM_Logger_ReportInfoEvent "Set Escrow Details", "Set Escrow details in using Row Id '"&strRowID&"' in the Forms_AggregateEscrowAccount datasheet", Nul
	
	BIZ_Forms_Open "Aggregate Escrow Account"
	BIZ_Common_Forms_AggregateEscrowAccount_SetData strRowID

End Function



'This function is to set data in Aggregate Escrow Account form
'@code
'    BIZ_Common_Forms_AggregateEscrowAccount_SetData(strRowID)
'@endcode
'@param strRowID - row id of test data

Function BIZ_Common_Forms_AggregateEscrowAccount_SetData(strRowID)
	
	Dim objAggEscAccPage,objData
	
	Set objAggEscAccPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData		     = FRM_DS_GetTestData("Forms_AggregateEscrowAccount", "SetData", strRowID)
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "HUD68_Escrow1stPaymentDt"))) Then
		GUI_WebEdit_Set objAggEscAccPage.WebEdit("html id:=TextBox108","index:=0"), Trim(FRM_DS_GetValue(objData, "HUD68_Escrow1stPaymentDt"))
	End If
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "EscrowFirstPaymentDateBasis"))) Then
		GUI_WebList_Select objAggEscAccPage.WebList("html id:=DropdownBox1","index:=0"), Trim(FRM_DS_GetValue(objData, "EscrowFirstPaymentDateBasis"))
	End If
	
	Set objAggEscAccPage 	= Nothing
	Set objData		    	= Nothing
	
End Function


'This function is to set data in initial Escrow Account SetUp Screen
'@code
'    BIZ_Forms_AggregateEscrowAccount_SetUp(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Forms_AggregateEscrowAccount_SetUp(strRowID)

	Set objEscrowScreen 		 = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData 				 = FRM_DS_GetTestData("Forms_AggregateEscrowAccount", "SetData", strRowID)
	Set objEscrowSetUpScreen 	 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=HUD1ESSetupDialog")
	Set objEscrowSetUpScreenList = objEscrowSetUpScreen.SwfListView("swfname:=controlListViewSetup")
	
	GUI_WebButton_Click objEscrowScreen.WebButton("html id:=Button1", "index:=0")
	intRowIndex = GUI_List_GetRowIndex (objEscrowSetUpScreenList,"Date", FRM_DS_GetValue(objData, "Date"))
	GUI_Object_WaitTillExistX objEscrowSetUpScreen, 30

	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "Tax"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9), FRM_DS_GetValue(objData, "Tax")
	End If
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "HaxIns"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9+1), FRM_DS_GetValue(objData, "HaxIns")
	End If
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "MtgIns"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9+2), FRM_DS_GetValue(objData, "MtgIns")
	End If
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "FldIns"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9+3), FRM_DS_GetValue(objData, "FldIns")
	End If
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "CityTaxes"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9+4), FRM_DS_GetValue(objData, "CityTaxes")
	End If
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "User#1"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9+5), FRM_DS_GetValue(objData, "User#1")
	End If
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "User#2"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9+6), FRM_DS_GetValue(objData, "User#2")
	End If
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "User#3"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9+7), FRM_DS_GetValue(objData, "User#3")
	End If
	If UTIL_String_IsNotEmpty((FRM_DS_GetValue(objData, "AnnualFee"))) Then
		GUI_SwfEdit_Set objEscrowSetUpScreenList.SwfEdit("swfname:=box_"&intRowIndex*9+8), FRM_DS_GetValue(objData, "AnnualFee")
	End If
	
	GUI_SwfButton_Click objEscrowSetUpScreen.SwfButton("swfname:=okBtn")
	
End Function


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\AggregateEscrowAccount.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ATRQMManagement.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_ATRQMManagement BIZ_Forms_ATRQMManagement
'
'List of functions here
'@code
'   Function BIZ_ATRQMManagement_SetCreditInformation(strRowID)
'   Function BIZ_Common_ATRQMManagement_SetCreditInformation(objParent, strRowID)
'   Function BIZ_ATRQMManagement_SetQualification(strRowID)
'   Function BIZ_Common_ATRQMManagement_SetQualification(objPArent, strRowID)
'	Function BIZ_ATRQMManagement_SetATRQMEligibility(strRowID)
'	Function BIZ_ATRQMManagement_CreateBorrower(strRowID)
'   Function BIZ_ATRQMManagement_Verify_TotalSection32PointsAndFees (strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set creidt information on ATR/QM Management Page
'@code
'    BIZ_ATRQMManagement_SetCreditInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ATRQMManagement_SetCreditInformation(strRowID)

    FRM_Logger_ReportInfoEvent "ATR/QM Management", "Set data using Row Id '"&strRowID&"' in the SetCreditInformation datasheet", null
	
	BIZ_Forms_Open "ATR/QM Management"
	BIZ_Common_ATRQMManagement_SetCreditInformation SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0"), strRowID
End Function



'This function is common function for set creidt information on ATR/QM Management Page
'@code
'    BIZ_Common_ATRQMManagement_SetCreditInformation(objParent, strRowID)
'@endcode
'@param objPArent object for the page
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_ATRQMManagement_SetCreditInformation(objParent, strRowID)


    	Set objData = FRM_DS_GetTestData("Forms_ATRQMManagement", "SetCreditInformation", strRowID)

    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VASUMM.X23_CreditScore")) Then	
		GUI_WebEdit_Set objParent.WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "VASUMM.X23_CreditScore") 	
	End If	
	
	Set objData = Nothing	
	
End Function



'This function is for set qualification information on ATR/QM Management Page
'@code
'    BIZ_ATRQMManagement_SetQualification(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ATRQMManagement_SetQualification(strRowID)

    FRM_Logger_ReportInfoEvent "ATR/QM Management", "Set data using Row Id '"&strRowID&"' in the SetQualification datasheet", null
	
	BIZ_Forms_Open "ATR/QM Management"
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "Qualification"
	BIZ_Common_ATRQMManagement_SetQualification SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0"),strRowID
End Function



'This function is common function for set qualification information on ATR/QM Management Page
'@code
'    BIZ_Common_ATRQMManagement_SetQualification(objParent, strRowID)
'@endcode
'@param objPArent object for the page
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_ATRQMManagement_SetQualification(objParent, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_ATRQMManagement", "SetQualification", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "761_RateLockDate")) Then	
		GUI_WebEdit_Set objParent.WebEdit("html id:=TextBox44","index:=0"), FRM_DS_GetValue(objData, "761_RateLockDate") 	
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3293_UndiscountedRate")) Then	
		GUI_WebEdit_Set objParent.WebEdit("html id:=TextBox4","index:=0"), FRM_DS_GetValue(objData, "3293_UndiscountedRate") 	
	End If	
	
	Set objData = Nothing	
	
End Function



'This function is for set eligbility information on ATR/QM Management Page
'@code
'    BIZ_ATRQMManagement_SetATRQMEligibility(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ATRQMManagement_SetATRQMEligibility(strRowID)
	Set objData = FRM_DS_GetTestData("Forms_ATRQMManagement", "SetATRQMEligibility", strRowID)
	
	Set objMain = SwfWindow("swfname:=MainForm").Page("micClass:=Page")

	'=== Open ATR/QM Management Form ===
	BIZ_Forms_Open "ATR/QM Management"

	'=== Fill details in ATR/QM Management form ====
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "ATR/QM Eligibility"
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "QualifiedMortgageLoanType")) Then
		If GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X24"),"disabled") = 0 Then
			GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X24"), FRM_DS_GetValue(objData, "QualifiedMortgageLoanType")
		Else
			GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=FieldLock2")
			GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X24"), FRM_DS_GetValue(objData, "QualifiedMortgageLoanType")
		End If
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TransactionIsExtended")) Then
		GUI_WebCheckbox_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebCheckBox("html id:=__cid_CheckBox1_Ctrl"), FRM_DS_GetValue(objData, "TransactionIsExtended")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CreditorType")) Then
		GUI_WebCheckbox_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebCheckBox("html id:=__cid_CheckBox2_Ctrl"), "ON"
		GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "CreditorType")
	End If
	
	'Ability to repay Loan Type QM.X23
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "QMX23_AbilityToRepay")) Then 
		If GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X23"),"disabled") = 1 Then
			GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=FieldLock1")
			GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X23"), FRM_DS_GetValue(objData, "QMX23_AbilityToRepay")
		Else
			GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X23"), FRM_DS_GetValue(objData, "QMX23_AbilityToRepay")
		End If
	End If
	
	'Is Loan Eligible for Safe Harbor? QM.X25
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "QMX25_SafeHarborEligible")) Then 
		If GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X25"),"disabled") = 1 Then
			GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=FieldLock3")
			GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X25"), FRM_DS_GetValue(objData, "QMX25_SafeHarborEligible")
		Else
			GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=l_X25"), FRM_DS_GetValue(objData, "QMX25_SafeHarborEligible")
		End If
	End If
	
	'Loan Program under ATR/QM Exemption Eligibility section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanProgram")) Then
		GUI_WebCheckbox_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), "ON"
		GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=DropdownBox4"), FRM_DS_GetValue(objData, "LoanProgram")
	End If
	
	'Unit Count under ATR/QM Exemption Eligibility section QM.X108
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "QMX108")) Then
		If GUI_Object_GetPropertyValue(objMain.WebCheckBox("html id:=__cid_CheckBox4_Ctrl"),"disabled") = 1 Then
			GUI_WebCheckbox_Set objMain.WebCheckBox("html id:=__cid_CheckBox1_Ctrl"),"ON"
			GUI_WebCheckbox_Set objMain.WebCheckBox("html id:=__cid_CheckBox4_Ctrl"),FRM_DS_GetValue(objData, "QMX108")
		Else
			GUI_WebCheckbox_Set objMain.WebCheckBox("html id:=__cid_CheckBox4_Ctrl"),FRM_DS_GetValue(objData, "QMX108")
		End If
	End If
	
	'Credit Type under ATR/QM Exemption Eligibility section QM.X110
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "QMX110")) Then
		If GUI_Object_GetPropertyValue(objMain.WebCheckBox("html id:=__cid_CheckBox5_Ctrl"),"disabled") = 1 Then
			GUI_WebCheckbox_Set objMain.WebCheckBox("html id:=__cid_CheckBox1_Ctrl"),"ON"
			GUI_WebCheckbox_Set objMain.WebCheckBox("html id:=__cid_CheckBox5_Ctrl"),FRM_DS_GetValue(objData, "QMX110")
		Else
			GUI_WebCheckbox_Set objMain.WebCheckBox("html id:=__cid_CheckBox5_Ctrl"),FRM_DS_GetValue(objData, "QMX110")
		End If
	End If
	Set objData = Nothing
End Function 



'This function is for Creating New Borrower
'@code
'    BIZ_ATRQMManagement_CreateBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ATRQMManagement_CreateBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "ATR/QM Management Create Borrower", "Set data using Row Id '"&strRowID&"' in the SetBorrowerInfo datasheet", null
    
	Dim objMain, objData, objManageBorrower
	Set objMain				=	SwfWindow("swfname:=MainForm")
	Set objData 			= 	FRM_DS_GetTestData("Forms_ATRQMManagement", "SetBorrowerInfo", strRowID)
	Set objManageBorrower	=	objMain.SwfWindow("swfname:=SwapBorrowerPairForm")
	
	GUI_Object_WaitTillExistX objMain, 120	'@ Handling Sync Related Issues
	GUI_SwfObject_Click objMain.SwfObject("swfname:=btnEditBorrowerPair")
	
	If GUI_Object_IsExistX (objManageBorrower, 120) Then
		FRM_Logger_ReportPassEvent "Encompass Dialog", "Manage Borrowers Dialog box exists", Null
		GUI_SwfObject_Click objManageBorrower.SwfObject("swfname:=btnAdd")
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstName")) Then	
			GUI_SwfEdit_Set objManageBorrower.SwfEdit("swfname:=txtBorFirst"), Trim(FRM_DS_GetValue(objData, "FirstName"))
			GUI_Object_ValidateText objManageBorrower.SwfEdit("swfname:=txtBorFirst"), Trim(FRM_DS_GetValue(objData, "FirstName")), "First Name Entered"
		End If	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastName")) Then	
			GUI_SwfEdit_Set objManageBorrower.SwfEdit("swfname:=txtBorLast"), Trim(FRM_DS_GetValue(objData, "LastName"))
			GUI_Object_ValidateText objManageBorrower.SwfEdit("swfname:=txtBorLast"), Trim(FRM_DS_GetValue(objData, "LastName")), "Last Name Entered"
		End If
		strBorrowerInList	=	Trim(FRM_DS_GetValue(objData, "LastName"))&", "&Trim(FRM_DS_GetValue(objData, "FirstName"))
		GUI_List_TextExists objManageBorrower.SwfObject("swfname:=gridViewPairs"), "Borrower", strBorrowerInList
		GUI_SwfButton_Click objManageBorrower.SwfButton("swfname:=btnOK")
		
		strBorrowerName	=	Trim(FRM_DS_GetValue(objData, "FirstName"))&" "&Trim(FRM_DS_GetValue(objData, "LastName"))
		BIZ_ATRQMManagement_CreateBorrower	=	strBorrowerName
	Else
		FRM_Logger_ReportFailEvent "Encompass Dialog", "Manage Borrowers Dialog box doesn't exists", Null
	End If
		
	Set objMain				=	Nothing
	Set objData 			= 	Nothing
	Set objManageBorrower	=	Nothing
	
End Function



'This function is used to Verify TotalSection32PointsAndFees in ATRQMManagement Qualification page 
'@code
'    Function BIZ_ATRQMManagement_Verify_TotalSection32PointsAndFees (strRowID)
'@endcode
'@Param strRowID  points row in excel 

Function BIZ_ATRQMManagement_Verify_TotalSection32PointsAndFees (strRowID)

    FRM_Logger_ReportInfoEvent "ATR/QM Management -Qualification ", "Verify Total Section32 Points And Fees ", Null
    
    Dim strSectionPoints,objData,strValue
    Set objData = FRM_DS_GetTestData("Section32", "ARTQM_Eligible", strRowID) 
    strValue 	= FRM_DS_GetValue(objData, "l_S32DISCX48")
    
    BIZ_Forms_Open "ATR/QM Management"
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "Qualification"
	strSectionPoints=GUI_Object_GetPropertyValue( SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_S32DISCX48"), "value")
	
	If strValue="0" Then
		FRM_VerifyEqual strSectionPoints, "", "Section32", "Section32 Points And Fees"
	Else
    	FRM_VerifyEqual FormatNumber(strValue,2), FormatNumber(strSectionPoints,2), "Section32", "Section32 Points And Fees"	
	End If
	
	Set objData = Nothing 
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ATRQMManagement.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\BorrowerInformationVesting.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_BorrowerInformationVesting BIZ_Forms_BorrowerInformationVesting
'
' List of functions here
' @code
'   Function BIZ_BorrowerInformationVesting_ClickBuildFinalVesting()
'	Function BIZ_BorrowerInformationVesting_VerifyFinalVestingToRead(strRowid)
'	Function BIZ_BorrowerInformationVesting_SetVestingInformation(strRowid)
'	Function BIZ_BorrowerVesting_SearchMannerDropDownValNotEqual(strMannerDropDownValToBeSearched, strEstateHeldInVal, strFormName)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for click on 'Build Final Vesting' button 
'@code
'    BIZ_BorrowerInformationVesting_ClickBuildFinalVesting()
'@endcode

Function BIZ_BorrowerInformationVesting_ClickBuildFinalVesting()
	FRM_Logger_ReportInfoEvent "Borrower Information - Vesting", "Click on 'Build Final Vesting' button ", Null
	
	 '=== Open ATR/QM Management Form ===
	BIZ_Forms_Open "Borrower Information - Vesting"
    
	Set objBIVPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	 
    SwfWindow("swfname:=MainForm").SwfObject("swfname:=customPanel").VScroll micPageNext
    
	GUI_SwfButton_Click objBIVPage.SwfButton("swfname:=btnFinal")
	
	Set objBIVPage = Nothing
    
End Function



'This function is for verifying value in Final Vesting To Read 
'@code
'    BIZ_BorrowerInformationVesting_VerifyFinalVestingToRead(strRowid)
'@endcode
'@param strRowid rowID in testdata file

Function BIZ_BorrowerInformationVesting_VerifyFinalVestingToRead(strRowid)
	
	FRM_Logger_ReportInfoEvent "Verify Final Vesting to Read", "Verify whether correct info is populated in Final Vesting to Read", Null
	
	Dim objBIVPage,objData, strDisplayedName
	
	Set objBIVPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objData = FRM_DS_GetTestData("Forms_BorrowerInformationVesting", "VerifyBIVesting", strRowid)
	'Get populated borrower name from Final Vesting To Read Editor
	strDisplayedName = GUI_Object_GetPropertyValue(objBIVPage.SwfEditor("swfname:=txtFinalVesting"), "text")
	'Verify if correct info is populated in Final Vesting to Read
	FRM_VerifyTrue FRM_DS_GetValue(objData,"1867_FinalVestingToRead")=strDisplayedName, "Final Vesting to Read",_
	"Correct borrower name is populated in 'Final Vesting To Read': "& FRM_DS_GetValue(objData,"1867_FinalVestingToRead")
	
	Set objBIVPage = Nothing
	Set objData = Nothing
	strDisplayedName = Null
End Function



'This function is for verifying value in Final Vesting To Read 
'@code
'    BIZ_BorrowerInformationVesting_SetVestingInformation(strRowid)
'@endcode
'@param strRowid rowID in testdata file

Function BIZ_BorrowerInformationVesting_SetVestingInformation(strRowid)
	
	FRM_Logger_ReportInfoEvent "Set Final Vesting to Read", "Set the Final Vesting Information", Null
	Dim objData
	
	'=== Open ATR/QM Management Form ===
	BIZ_Forms_Open "Borrower Information - Vesting"
	Set objData = FRM_DS_GetTestData("Forms_BorrowerInformationVesting", "SetVestingInformation", strRowid)
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=customPanel").VScroll micPageNext
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MannerInWhichToBeHeld")) Then
		GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboTitle"), FRM_DS_GetValue(objData,"MannerInWhichToBeHeld")
	End If
	
	Set objData = Nothing
End Function 



'This function is to verify the manner dropdown value not present in the dropdown
'@code
'    BIZ_BorrowerVesting_SearchMannerDropDownValNotEqual(strMannerDropDownValToBeSearched, strEstateHeldInVal, strFormName)
'@endcode
'@param strMannerDropDownValToBeSearched The field value which needs to be searched and validate not to present
'@param strEstateHeldInVal to enter estate held in value dropdown
'@param strFormName form to be opened

Function BIZ_BorrowerVesting_SearchMannerDropDownValNotEqual(strMannerDropDownValToBeSearched, strEstateHeldInVal, strFormName)
	
	Dim objMain, objMannerDropDown
	
	Set objMain		=	SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
		
	Select Case Ucase(strFormName)
		Case "1003 PAGE 1"
			Set objMannerDropDown	=	objMain.WinObject("regexpwndclass:=ATL:COMBOBOX","index:=0")
			BIZ_Forms_Open "1003 Page 1"
			str = ""
			GUI_Object_WaitTillExistX objMain.WebList("html id:=DropdownBox1"), 60	'@ To Handle Sync Related Issues
			GUI_WebList_Select objMain.WebList("html id:=DropdownBox1"), strEstateHeldInVal		'@ To Select Value to move control
			objMannerDropDown.highlight
			GUI_WinObject_Click objMannerDropDown	'@ Clicks on manner drop down
		Case "FNMA STREAMLINED 1003"
			Set objMannerDropDown	=	objMain.WinObject("regexpwndclass:=ATL:COMBOBOX","index:=1")
			BIZ_Forms_Open "FNMA Streamlined 1003"
			str = ""
			GUI_Object_WaitTillExistX objMain.WebList("html id:=DropdownBox3"), 60	'@ To Handle Sync Related Issues
			GUI_WebList_Select objMain.WebList("html id:=DropdownBox3"), strEstateHeldInVal		'@ To Select Value to move control
			'Highlighting Field 1602 which is above field 33 'Manner' to bring focus
			objMain.WebEdit("html id:=l_1602").Highlight
			'objMannerDropDown.highlight
			GUI_WinObject_Click objMannerDropDown	'@ Clicks on manner drop down
		Case "USDA MANAGEMENT"
			Set objMannerDropDown	=	objMain.WinObject("regexpwndclass:=ATL:COMBOBOX","index:=1")
			BIZ_Forms_Open "USDA Management"
			str = ""
			GUI_Object_WaitTillExistX objMain.WebList("html id:=DropdownBox1"), 60	'@ To Handle Sync Related Issues
			GUI_WebList_Select objMain.WebList("html id:=DropdownBox1"), strEstateHeldInVal		'@ To Select Value to move control
			objMannerDropDown.highlight
			GUI_WinObject_Click objMannerDropDown	'@ Clicks on manner drop down			
	End Select

	Wait g_TinyWaitMedium	'@ To Handle Sync Related Issues
	Do    
	    UTIL_Win_SendKey "{Down}"
	    Wait g_TinyWaitSmall	'@ To Handle Sync Related Issues
	    str	=	GUI_Object_GetPropertyValue (objMannerDropDown, "text")
	    str	=	Trim(str)
	    Wait g_TinyWaitSmall	'@ To Handle Sync Related Issues

	    FRM_VerifyNotEqual str, strMannerDropDownValToBeSearched, "Verify Manner Drop Down values",_
	    "Value: '"&str&"' not equal to '"&strMannerDropDownValToBeSearched&"' "		'@ Validation
	Loop While str <> ""
	
	Set objMain				=	Nothing
	Set objMannerDropDown	=	Nothing
	
End Function



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\BorrowerInformationVesting.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\BorrowerSummaryOrigination.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_BorrowerSummaryOrigination BIZ_Forms_BorrowerSummaryOrigination
'
' List of functions here
' @code
'
'   Function BIZ_BorrowerSummaryOrigination_SetSSNVerification_Borrower(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_SetCreditInformation(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifyCreditInformation(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_SetBorrower(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_SetCoBorrower(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifyCoBorrower(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_SetProperty(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_SetTransactionDetails(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_TotalMonthlyPayment(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifyCreditScores(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifyBorrower(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifyTransactionDetails(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifyProperty(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_SetHeadInfo(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_SetLoanNumber(strLoanNumber)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetSSNVerification_Borrower(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifySSNVerification_Borrower(strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetCreditInformation(objParentObject, strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetBorrower(objParentObject, strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetCoBorrower(objParentObject, strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetProperty(objParentObject, strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetTransactionDetails(objParentObject, strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetBorrowerIncome(objParentObject1, objParentObject2, strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetHeadInfo(objParentObject, strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifyHeadInfo(strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_SetLoanNumber(objParentObject, strLoanNumber)
'   Function BIZ_BorrowerSummaryOrigination_SetCreditScores(strRowID)
'   Function BIZ_Common_BorrowerSummaryOrigination_VerifyProperty(objParentObject, strRowID)
'   Function BIZ_BorrowerSummaryOrigination_VerifyProperty(strRowID)
'	Function BIZ_BorrowerSummaryOrigination_VerifySubFinancing(strRowID)
' 	Function BIZ_BorrowerSummaryOrigination_CheckIfMERSMINValueExists()
'	Function BIZ_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation(strRowID)
'	Function BIZ_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation(strRowID)
'	Function BIZ_Common_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation(objMipDialog,strRowID)
'	Function BIZ_Common_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation(objMipDialog,strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''



'This function is for set SSN Verification Information 
'@code
'    BIZ_BorrowerSummaryOrigination_SetSSNVerification_Borrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetSSNVerification_Borrower(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set SSN Verification Information using Row Id '"&strRowID&"' in the Borrower datasheet", null

    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    BIZ_Common_BorrowerSummaryOrigination_SetSSNVerification_Borrower objSummaryPage, strRowID
    
    Set objSummaryPage = Nothing
End Function

'This function is for verify SSN Verification Information 
'@code
'    BIZ_BorrowerSummaryOrigination_VerifySSNVerification_Borrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_VerifySSNVerification_Borrower(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Verify SSN Verification Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
   
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    
    BIZ_Common_BorrowerSummaryOrigination_VerifySSNVerification_Borrower objSummaryPage, strRowID
    
    Set objSummaryPage = Nothing
End Function


'This function is for verify SSN Verification Information 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_VerifySSNVerification_Borrower(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_VerifySSNVerification_Borrower(objParentObject, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetSSNVerificationBorrower", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3249_Purpose")) Then
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_3249"), FRM_DS_GetValue(objData, "3249_Purpose"), "Purpose"
    End If
    
    Set objSummaryPage = Nothing
End Function

'This function is for set Credit Information 
'@code
'    BIZ_BorrowerSummaryOrigination_SetCreditInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetCreditInformation(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set Credit Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
	
	Dim objSummaryPage

    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    BIZ_Common_BorrowerSummaryOrigination_SetCreditInformation objSummaryPage, strRowID
    
    Set objSummaryPage = Nothing
End Function
'This function is to initiate Subfinancing window for validation of CLTV, HCLTV for HELOC
'@code
'    BIZ_BorrowerSummaryOrigination_VerifySubFinancing(PageName)
'@endcode
'@param PageName The numeric or string unique ID that used to represent the page name

Function BIZ_BorrowerSummaryOrigination_VerifySubFinancing(PageName)

    FRM_Logger_ReportInfoEvent PageName, "Click on the Sub Financing Button" , null
      

	Set Form1003Page = SwfWindow("swfname:=MainForm").Page("index:=0")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "subfin_click")) Then
		GUI_WebButton_Click Form1003Page.WebCheckBox("html id:=Button10","name:=Sub. Financing")
	End If

    
    Set objData = Nothing   
    
End Function  

'This function is for verification of Credit Information 
'@code
'    BIZ_BorrowerSummaryOrigination_VerifyCreditInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_VerifyCreditInformation(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Validate Credit Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetCreditInformation", strRowID)  

	Set Form1003Page = SwfWindow("swfname:=MainForm").Page("index:=0")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4073_AuthorizedCreditReport")) Then
		GUI_Object_ValidateProperty Form1003Page.WebCheckBox("html id:=__cid_CheckBox48_Ctrl"), "checked", FRM_DS_GetValue(objData, "4073_AuthorizedCreditReport"), "Authorized Credit Report"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4074_DateAuthorized")) Then
		GUI_Object_ValidateValueAsDate Form1003Page.WebEdit("html id:=TextBox32"), FRM_DS_GetValue(objData, "4074_DateAuthorized"), "Date Authorized"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4075_AuthorizationMethod")) Then
		GUI_Object_ValidateValue Form1003Page.WebList("html id:=DropdownBox8"), FRM_DS_GetValue(objData, "4075_AuthorizationMethod"), "Authorization Method"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4076_AuthorizedCreditReport")) Then
		GUI_Object_ValidateProperty Form1003Page.WebCheckBox("html id:=__cid_CheckBox49_Ctrl"), "checked", FRM_DS_GetValue(objData, "4076_AuthorizedCreditReport"), "Authorized Credit Report"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4077_DateAuthorized")) Then
		GUI_Object_ValidateValueAsDate Form1003Page.WebEdit("html id:=TextBox31"), FRM_DS_GetValue(objData, "4077_DateAuthorized"), "Date Authorized"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4078_AuthorizationMethod")) Then
		GUI_Object_ValidateValue Form1003Page.WebList("html id:=DropdownBox9"), FRM_DS_GetValue(objData, "4078_AuthorizationMethod"), "Authorization Method"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4079_Comments")) Then
		GUI_Object_ValidateValue Form1003Page.WebEdit("html id:=MultilineTextBox1"), FRM_DS_GetValue(objData, "4079_Comments"), "Comments"
	end if
    
    Set objData = Nothing   
    
End Function    

'This function is for set Borrower Information 
'@code
'    BIZ_BorrowerSummaryOrigination_SetBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set Borrower Information using Row Id '"&strRowID&"' in the Borrower datasheet", null

    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    BIZ_Common_BorrowerSummaryOrigination_SetBorrower objSummaryPage, strRowID
    
    Set objSummaryPage = Nothing
End Function


'This function is for set Co-Borrower Information 
'@code
'    BIZ_BorrowerSummaryOrigination_SetCoBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetCoBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set Co-Borrower Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
    
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("index:=0")
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    BIZ_Common_BorrowerSummaryOrigination_SetCoBorrower objSummaryPage, strRowID
    
    Set objSummaryPage = Nothing    
    
End Function    


'This function is for verification Co-Borrower Information 
'@code
'    BIZ_BorrowerSummaryOrigination_VerifyCoBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@see GUI_Object_ValidateValue

Function BIZ_BorrowerSummaryOrigination_VerifyBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Validate Borrower Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)   
    'GUI_Object_ValidateText SwfWindow("EncompassMenu").SwfLabel("User Defined Custom FIELD"), "Borrower Summary - Origination", "Label"
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstName")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_36"), FRM_DS_GetValue(objData, "FirstName"), "FirstName"
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastName")) Then
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_37"), FRM_DS_GetValue(objData, "LastName"), "LastName"
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SSN")) Then
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_65"), FRM_DS_GetValue(objData, "SSN"), "SSN"
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomePhone")) Then
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_66"), FRM_DS_GetValue(objData, "HomePhone"), "HomePhone"   
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeEmail")) Then
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_1240"), FRM_DS_GetValue(objData, "HomeEmail"), "HomeEmail"
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentAddress")) Then
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_FR0104"), FRM_DS_GetValue(objData, "PresentAddress"), "PresentAddress"
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentCity")) Then
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_FR0106"), FRM_DS_GetValue(objData, "PresentCity"), "PresentCity"
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentState")) Then
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_FR0107"), FRM_DS_GetValue(objData, "PresentState"), "PresentState"
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentZip")) Then
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_FR0108"), FRM_DS_GetValue(objData, "PresentZip"), "PresentZip"
    End If
	Set objData = Nothing   
    
End Function    


'This function is for verification Co-Borrower Information 
'@code
'    BIZ_BorrowerSummaryOrigination_VerifyCoBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@see GUI_Object_ValidateValue

Function BIZ_BorrowerSummaryOrigination_VerifyCoBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Validate Co-Borrower Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox7"), FRM_DS_GetValue(objData, "BorrowerType"), "BorrowerType"
    'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_68"), FRM_DS_GetValue(objData, "FirstName") ,"FirstName"      
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "LastName"), "LastName"    
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_97"), FRM_DS_GetValue(objData, "SSN"), "SSN"   
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_FR0204"), FRM_DS_GetValue(objData, "PresentAddress"), "PresentAddress"
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_FR0206"), FRM_DS_GetValue(objData, "PresentCity"), "PresentCity"   
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_FR0207"), FRM_DS_GetValue(objData, "PresentState"), "PresentState" 
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_FR0208"), FRM_DS_GetValue(objData, "PresentZip"), "PresentZip" 
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=l_98"), FRM_DS_GetValue(objData, "HomePhone"), "HomePhone"       
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "MaritalStatus"), "MaritalStatus"
    Set objData = Nothing   
    
End Function    


'This function is for set Subject Property Information 
'@code
'    BIZ_BorrowerSummaryOrigination_SetProperty(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetProperty(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set Property Information using Row Id '"&strRowID&"' in the Property datasheet", null

	BIZ_Forms_Open "Borrower Summary - Origination"
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")    
    
    BIZ_Common_BorrowerSummaryOrigination_SetProperty objSummaryPage, strRowID
     
    Set objSummaryPage = Nothing        
End Function


'This function is for set Transaction Details Information 
'@code
'    BIZ_BorrowerSummaryOrigination_SetTransactionDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetTransactionDetails(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set Transaction Details Information using Row Id '"&strRowID&"' in the TransactionDetails datasheet", null
    
	Dim objSummaryPage
    
	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

    BIZ_Common_BorrowerSummaryOrigination_SetTransactionDetails objSummaryPage, strRowID
    
    Set objSummaryPage = Nothing    
    
End Function    


'This function is for fill out Monthly Payment Information 
'@code
'    BIZ_BorrowerSummaryOrigination_TotalMonthlyPayment(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_TotalMonthlyPayment(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set Total Monthly Payment Information using Row Id '"&strRowID&"' in the TotalMonthlyPayment datasheet", null 

    Dim objSummaryPage, objTotalMonthlyPayment, objTotalMonthlyPaymentPage, objGuaranteeFee, objOtherHousingExpense
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*")
    Set objTotalMonthlyPayment = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
    Set objTotalMonthlyPaymentPage = objTotalMonthlyPayment.Page("title:=.*")
    Set objGuaranteeFee = objTotalMonthlyPayment.SwfWindow("swfname:=MIPDialog")
    Set objOtherHousingExpense = objTotalMonthlyPayment.SwfWindow("swfname:=OtherExpenseDialog")
    
    '==========then click on the Edit icon next to field 912=============
    GUI_WebButton_Click objSummaryPage.WebButton("html id:=StandardButton5")
    
    '=====thenenter the appropriate date in each of the fields: 229, 230, 1405, 232, 233, 234=========
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTotalMonthlyPayment", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OtherFinancalPayment")) Then
        GUI_WebEdit_Set objTotalMonthlyPaymentPage.WebEdit("html id:=l_229"), FRM_DS_GetValue(objData, "OtherFinancalPayment")  
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HazardInsurance")) Then
        GUI_WebEdit_Set objTotalMonthlyPaymentPage.WebEdit("html id:=l_230"), FRM_DS_GetValue(objData, "HazardInsurance")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Taxes")) Then
        GUI_WebEdit_Set objTotalMonthlyPaymentPage.WebEdit("html id:=l_1405"), FRM_DS_GetValue(objData, "Taxes")
    End If
    
    GUI_WebButton_Click objTotalMonthlyPaymentPage.WebButton("html id:=StandardButton5")
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MIPFundingGuarantee")) Then
        GUI_WebEdit_Set objGuaranteeFee.SwfEdit("swfname:=rateFundingTxt"), FRM_DS_GetValue(objData, "MIPFundingGuarantee")
    End If
    GUI_WebButton_Click objGuaranteeFee.SwfButton("swfname:=okBtn") 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HOADues")) Then
        GUI_WebEdit_Set objTotalMonthlyPaymentPage.WebEdit("html id:=l_233"), FRM_DS_GetValue(objData, "HOADues")
    End If
    GUI_WebButton_Click objTotalMonthlyPaymentPage.WebButton("html id:=StandardButton6")
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OtherHousingExpense_Other")) Then
        GUI_SwfEdit_Set objOtherHousingExpense.SwfEdit("swfname:=otherTxt"), FRM_DS_GetValue(objData, "OtherHousingExpense_Other")  
    End If
        
    GUI_SwfButton_Click objOtherHousingExpense.SwfButton("swfname:=okBtn")
    GUI_SwfButton_Click objTotalMonthlyPayment.SwfButton("swfname:=btnClose")
    
    Set objSummaryPage = Nothing
    Set objTotalMonthlyPayment = Nothing
    Set objTotalMonthlyPaymentPage = Nothing
    Set objGuaranteeFee = Nothing
    Set objOtherHousingExpense = Nothing
    Set objData = Nothing   
    
End Function



'This function is for verify Credit Score Information 
'@code
'    BIZ_BorrowerSummaryOrigination_VerifyCreditScores(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_VerifyCreditScores(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Verify Credit Scores Information using Row Id '"&strRowID&"' in the VerifyCreditScores datasheet", null

    BIZ_Nav_SelectLoanTab()
    
    '=========Make sure the credit scores for the applicants should populate into fields once the credit report is imported into the loan file: 67, 1450, 1414, 60, 1452, 1415===========   
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "VerifyCreditScores", strRowID)
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_67"), FRM_DS_GetValue(objData, "FICO"), "FICO"
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_1450"), FRM_DS_GetValue(objData, "TransUnion"), "TransUnion"
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_1414"), FRM_DS_GetValue(objData, "Equifax"), "Equifax"
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_60"), FRM_DS_GetValue(objData, "Co-Borower_FICO"), "Co-Borower_FICO"
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_1452"), FRM_DS_GetValue(objData, "Co-Borrower_TransUnion"), "Co-Borrower_TransUnion"
    GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_1415"), FRM_DS_GetValue(objData, "Co-Borrower_Equifax"), "Co-Borrower_Equifax"
    Set objData = Nothing
    
End Function



'This function is for verify Transaction Details Information 
'@code
'    BIZ_BorrowerSummaryOrigination_VerifyTransactionDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_VerifyTransactionDetails(strRowID)


    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Validate Transaction details Information using Row Id '"&strRowID&"' in the TransactionDetais datasheet", null
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanAmount")) Then
        GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_1109","index:=0"), FRM_DS_GetValue(objData, "LoanAmount"), "LoanAmount"
    End If
    val = FRM_DS_GetValue(objData, "LoanPurpose")
    If UTIL_String_IsNotEmpty(val) Then
        GUI_Object_ValidateChecked SwfWindow("swfname:=MainForm").Page("url:=.*").WebCheckbox("index:=0", "value:="&val), "1", "LoanPurpose"
    End If
    val = FRM_DS_GetValue(objData, "LoanType")
    If UTIL_String_IsNotEmpty(val) Then
        GUI_Object_ValidateChecked SwfWindow("swfname:=MainForm").Page("url:=.*").WebCheckbox("index:=0", "value:="&val), "1", "LoanType"
    End If
    val = FRM_DS_GetValue(objData, "PropertyWillBe")
    If UTIL_String_IsNotEmpty(val) Then     
        GUI_Object_ValidateChecked SwfWindow("swfname:=MainForm").Page("url:=.*").WebCheckbox("index:=0", "value:="&val), "1", PropertyWillBe
    End If
    val = FRM_DS_GetValue(objData, "AmortizationType")
    If UTIL_String_IsNotEmpty(val) Then     
        GUI_Object_ValidateChecked SwfWindow("swfname:=MainForm").Page("url:=.*").WebCheckbox("index:=0", "value:="&val), "1", "AmortizationType"
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NoteRate")) Then
        GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("url:=.*").WebEdit("html id:=l_3"), FRM_DS_GetValue(objData, "NoteRate"), "NoteRate"
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Term")) Then
        GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("url:=.*").WebEdit("html id:=l_4"), FRM_DS_GetValue(objData, "Term"), "Term"   
    End If      
    
    
    Set objData = Nothing
End Function    



'This function is for set Borrower Income 
'@code
'    BIZ_BorrowerSummaryOrigination_SetBorrowerIncome(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetBorrowerIncome(strRowID)

    FRM_Logger_ReportInfoEvent "BorrowerIncome", "Set Borrower Income using Row Id '"&strRowID&"' on Borrower Summary Origination page", null
    
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objIncomePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0") 
    
    BIZ_Common_BorrowerSummaryOrigination_SetBorrowerIncome objSummaryPage, objIncomePage, strRowID
    
    Do Until (Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose", "index:=0").Exist(1))
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose", "index:=0")
    Loop    
	
    Set objSummaryPage = Nothing
    Set objIncomePage = Nothing

End Function



'This function is for set head part Information including Channel, CurrentStatus, ApplicationDate and Date fields
'@code
'    BIZ_BorrowerSummaryOrigination_SetHeadInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetHeadInfo(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set Date and Current Status using Row Id '"&strRowID&"' in the Borrower datasheet", null
    
    BIZ_Forms_Open "Borrower Summary - Origination"
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    BIZ_Common_BorrowerSummaryOrigination_SetHeadInfo objSummaryPage, strRowID

    Set objSummaryPage = Nothing
    
End Function



'This function is for set loan number.  
'It always append the current date to the provided string
'@param strLoanNumber 

Function BIZ_BorrowerSummaryOrigination_SetLoanNumber(strLoanNumber)

    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    BIZ_Common_BorrowerSummaryOrigination_SetLoanNumber objSummaryPage, strLoanNumber
    
    Set objSummaryPage = nothing
End Function 

'This function is for set SSN Verification Information 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_SetSSNVerification_Borrower(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_SetSSNVerification_Borrower(objParentObject, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetSSNVerificationBorrower", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3249_Purpose")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_3249"), FRM_DS_GetValue(objData, "3249_Purpose")
    End If
    
    Set objData = Nothing       
End Function


'This function is for set Credit Information 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_SetCreditInformation(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_SetCreditInformation(objParentObject, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetCreditInformation", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4073_AuthorizedCreditReport")) Then
		objParentObject.WebElement("innertext:=Authorized Credit Report","index:=0","html tag:=SPAN").Highlight
        GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox48_Ctrl"), FRM_DS_GetValue(objData, "4073_AuthorizedCreditReport")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4074_DateAuthorized")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox32"), FRM_DS_GetValue(objData, "4074_DateAuthorized")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4075_AuthorizationMethod")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox8"), FRM_DS_GetValue(objData, "4075_AuthorizationMethod")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4076_AuthorizedCreditReport")) Then
        GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox49_Ctrl"), FRM_DS_GetValue(objData, "4076_AuthorizedCreditReport")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4077_DateAuthorized")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox31"), FRM_DS_GetValue(objData, "4077_DateAuthorized")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4078_AuthorizationMethod")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox9"), FRM_DS_GetValue(objData, "4078_AuthorizationMethod")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4079_Comments")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=MultilineTextBox1"), FRM_DS_GetValue(objData, "4079_Comments")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3515_BorrowerDemonstration")) Then
        GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox6_Ctrl"), FRM_DS_GetValue(objData, "3515_BorrowerDemonstration")
    End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "67_Experian")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_67"), FRM_DS_GetValue(objData, "67_Experian")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1450_TransUnion")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1450"), FRM_DS_GetValue(objData, "1450_TransUnion")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1414_Equifax")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1414"), FRM_DS_GetValue(objData, "1414_Equifax")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1484_MinimumRequiredFICO")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1484"), FRM_DS_GetValue(objData, "1484_MinimumRequiredFICO")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CreditScore")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "CreditScore")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4079_Comments")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=MultilineTextBox1"), FRM_DS_GetValue(objData, "4079_Comments")
    End If

    Set objData = Nothing       
End Function


'This function is for set Borrower Information 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_SetBorrower(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_SetBorrower(objParentObject, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerType")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox5"), FRM_DS_GetValue(objData, "BorrowerType")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstName")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_36"), FRM_DS_GetValue(objData, "FirstName")  
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MiddleName")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox10"), FRM_DS_GetValue(objData, "MiddleName")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastName")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_37"), FRM_DS_GetValue(objData, "LastName")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Suffix")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "Suffix")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SSN")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_65"), FRM_DS_GetValue(objData, "SSN")
		If(Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").Exist(3)) then 
			Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").SwfCheckBox("swfname:=chkNotShowAgain").Set "On"
			Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").SwfButton("swfname:=btnCancel").Click
		End If
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomePhone")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_66"), FRM_DS_GetValue(objData, "HomePhone") 
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WorkPhone")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FE0117"), FRM_DS_GetValue(objData, "WorkPhone") 
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CellPhone")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1490"), FRM_DS_GetValue(objData, "CellPhone") 
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentAddress")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0104"), FRM_DS_GetValue(objData, "PresentAddress") 
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentCity")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0106"), FRM_DS_GetValue(objData, "PresentCity") 
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentState")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0107"), FRM_DS_GetValue(objData, "PresentState") 
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentZip")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0108"), FRM_DS_GetValue(objData, "PresentZip") 
		If objParentObject.SwfWindow("swfname:=ZipcodeSelectorDialog").Exist(5)=True Then
			GUI_List_ClickRow objParentObject.SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities"), Null, "City Name", FRM_DS_GetValue(objData,"PresentCity"), True, False, False, "Double"
		End If	
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FR0112_NumberofYears")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0112"), FRM_DS_GetValue(objData, "FR0112_NumberofYears") 
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FR0124_NumberofMonths")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0124"), FRM_DS_GetValue(objData, "FR0124_NumberofMonths") 
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FR0115_Own")) Then
        GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox1_Ctrl"), FRM_DS_GetValue(objData, "FR0115_Own") 
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FR0315_Rent")) Then
        GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl"), FRM_DS_GetValue(objData, "FR0315_Rent") 
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DOB")) Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1402"), FRM_DS_GetValue(objData, "DOB")
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MaritalStatus")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "MaritalStatus")
    End If      
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeMail")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1240","index:=0"), FRM_DS_GetValue(objData, "HomeMail")
    End If 
	'Francesca
	Set objSettings         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDialog           = objSettings.SwfWindow("swfname:=LoanProgramDialog")
    strLoanPurpose = CStr(FRM_DS_GetValue(objData, "LoanPurpose"))
	If UTIL_String_IsNotEmpty(strLoanPurpose) Then
		GUI_WebList_Select objDialog.Page("index:=14").WebList("html id:=DropdownBox3","index:=14"),strLoanPurpose
	End If

	strLoanType = CStr(FRM_DS_GetValue(objData, "LoanType"))
	If UTIL_String_IsNotEmpty(strLoanType) Then
		GUI_WebList_Select objDialog.Page("index:=8").WebList("html id:=DropdownBox12","index:=8"),strLoanType
	End If
    Set objData = Nothing  
	Set objDialog = Nothing
	Set objSettings = Nothing
End Function


'This function is for set Co-Borrower Information 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_SetCoBorrower(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_SetCoBorrower(objParentObject, strRowID)
    
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetCoBorrower", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerType")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox7"), FRM_DS_GetValue(objData, "BorrowerType")
    End If
    
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstName")) Then  
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_68"), FRM_DS_GetValue(objData, "FirstName")
    End If 
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastName")) Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "LastName") 
    End If
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SSN")) Then    
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_97"), FRM_DS_GetValue(objData, "SSN")
    End If
	If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomePhone")) Then 
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_98"), FRM_DS_GetValue(objData, "HomePhone")
	End If
	If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WorkPhone")) Then 
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FE0217"), FRM_DS_GetValue(objData, "WorkPhone")
	End If
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DOB")) Then    
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1403"), FRM_DS_GetValue(objData, "DOB")
    End If  
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MaritalStatus")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "MaritalStatus")
    End If
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentAddress")) Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0204"), FRM_DS_GetValue(objData, "PresentAddress")
    End If
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentCity")) Then    
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0206"), FRM_DS_GetValue(objData, "PresentCity")
    End If
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentState")) Then   
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0207"), FRM_DS_GetValue(objData, "PresentState")
    End If  
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresentZip")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0208"), FRM_DS_GetValue(objData, "PresentZip")
    End If  
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeMail")) Then   
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1268"), FRM_DS_GetValue(objData, "HomeMail")
    End If  
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FR0212_NumberofYears")) Then   
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0212"), FRM_DS_GetValue(objData, "FR0212_NumberofYears")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FR0224_NumberofMonths")) Then   
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FR0224"), FRM_DS_GetValue(objData, "FR0224_NumberofMonths")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FR0215_Own")) Then
        GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox31_Ctrl"), FRM_DS_GetValue(objData, "FR0215_Own") 
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FR0215_Rent")) Then
        GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox32_Ctrl"), FRM_DS_GetValue(objData, "FR0215_Rent") 
    End If

	Set objData = Nothing   
End Function    


'This function is for set Subject Property Information 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_SetProperty(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_SetProperty(objParentObject, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetProperty", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyAddress")) Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_11"), FRM_DS_GetValue(objData, "PropertyAddress")   'SubjectPropertyAddress
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyCity")) Then    
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_12"), FRM_DS_GetValue(objData, "PropertyCity")  'SubjectPropertyCity
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyState")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_14"), FRM_DS_GetValue(objData, "PropertyState") 'SubjectPropertyState       
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyZip")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_15"), FRM_DS_GetValue(objData, "PropertyZip")     'SubjectPropertyZip
        If GUI_Object_IsExistX(Swfwindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog"), 1) Then
           GUI_SwfButton_Click Swfwindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfButton("text:=.*OK")
        End If
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyType")) then 
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox4","index:=0"), FRM_DS_GetValue(objData, "PropertyType")   'PropertyType
    End if  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EstimatedValue")) Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1821"), FRM_DS_GetValue(objData, "EstimatedValue")  'EstimatedValue
    End If      
    'l_356 - appraised value
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AppraisedValue")) Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_356"), FRM_DS_GetValue(objData, "AppraisedValue")   'AppraisedValue
    End If
    
    Set objData = Nothing       
End Function



'This function is for set Transaction Details Information 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_SetTransactionDetails(objParentObject, strRowID)
'@endcode
'@param objParentObject the parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_SetTransactionDetails(objParentObject, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1264_Lender")) Then
    	GUI_Image_Click objParentObject.Image("html id:=Rolodex1","html tag:=IMG","alt:=Rolodex")
	wait 1
    	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RxBusinessContact").SwfObject("swfname:=gvContactList"), Null, "Company", FRM_DS_GetValue(objData, "1264_Lender"), True, True, False, "Double"
	wait 1
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1401_LoanProgram")) Then
        GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton1")
		GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect").SwfComboBox("swfname:=cboFolder"), 30
		GUI_Dialog_Encompass_OKX 5, ""
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanProgramFolder")) Then
			SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect").SwfComboBox("swfname:=cboFolder").Select FRM_DS_GetValue(objData, "LoanProgramFolder")
			Wait g_TinyWaitLarge
			GUI_Dialog_Encompass_OKX 8, ""
		end if
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SubFolder")) Then
        	SubFolderList = Split(FRM_DS_GetValue(objData, "SubFolder"),"\")
        	For SubFolderListNo = 0 To UBound(SubFolderList) Step 1
        		 GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect").SwfObject("swfname:=gvDirectory"), Null, "Name", SubFolderList(SubFolderListNo) , True, False, False, "Double"
                 Wait g_TinyWaitLarge
        	Next
        End If 
        GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect").SwfObject("swfname:=gvDirectory"), Null, "Name", FRM_DS_GetValue(objData, "1401_LoanProgram"), True, False, False, "Double"
		Wait g_TinyWaitLarge
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1785_ClosingCost")) Then
		Wait g_TinyWaitLarge
        GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton2")
		GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfComboBox("swfname:=cmbBoxFolder"), 30
		GUI_Dialog_Encompass_OKX 5, ""
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ClosingCostFolder")) Then
			SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfComboBox("swfname:=cmbBoxFolder").Highlight
			SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfComboBox("swfname:=cmbBoxFolder").Select FRM_DS_GetValue(objData, "ClosingCostFolder")
			Wait g_TinyWaitLarge
			GUI_Dialog_Encompass_OKX 8, ""
		end if
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ClosingCostSubFolder")) Then
        	SubFolderList = Split(FRM_DS_GetValue(objData, "ClosingCostSubFolder"), "\")
        	For SubFolderNumber = 0 To UBound(SubFolderList) Step 1
				SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfObject("swfname:=gvDirectory").Highlight
        		 GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfObject("swfname:=gvDirectory"), Null, "Name", SubFolderList(SubFolderNumber), True, False, False, "Double"
                 Wait g_ShortWaitSmall
        	Next
        End If 
        GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfObject("swfname:=gvDirectory"), Null, "Name", FRM_DS_GetValue(objData, "1785_ClosingCost") , True, False, False, "Double"
		Wait g_TinyWaitLarge
	End If 
    val = FRM_DS_GetValue(objData, "LoanPurpose")
    If UTIL_String_IsNotEmpty(val) Then 
		If Lcase(val) = "other" Then
			GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val,"index:=0"), "ON"
		Else
        	GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
        End If
    End If      
    val = FRM_DS_GetValue(objData, "LoanType")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val,"index:=1"), "ON"
    End If    
    val = FRM_DS_GetValue(objData, "LienPosition")
    If UTIL_String_IsNotEmpty(val) Then     
        GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
    End If  
    val = FRM_DS_GetValue(objData, "PropertyWillBe")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
    End If    
    val = FRM_DS_GetValue(objData, "AmortizationType")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"  
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ARMTypeName")) Then
       	GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton3")
		GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ARMTypeDetails").SwfListView("swfname:=armListView"), 30
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ARMTypeDetails").SwfListView("swfname:=armListView").Select FRM_DS_GetValue(objData, "ARMTypeName")
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ARMTypeDetails").SwfButton("swfname:=okBtn").Click
		Wait g_TinyWaitSmall
	End If
	val=FRM_DS_GetValue(objData, "EnforceCountyLoanLimit")
	If UTIL_String_IsNotEmpty(val) Then
		GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_chkCountyLimit_Ctrl"), val
		If UCase(val) = "ON" then
			val = "1"
		Else 
			val = "0"
		END IF
		GUI_Object_ValidateProperty objParentObject.WebCheckbox("html id:=__cid_chkCountyLimit_Ctrl"), "checked", val, "Enforce County Loan Limit"
	End if
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PurchasePrice")) Then   
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_136"), FRM_DS_GetValue(objData, "PurchasePrice") 'PurchasePrice
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanAmount")) Then      
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1109","index:=0"), FRM_DS_GetValue(objData, "LoanAmount")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DownPayment")) Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1335"), FRM_DS_GetValue(objData, "DownPayment") 'DownPayment
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DownPaymentPercent")) Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1771"), FRM_DS_GetValue(objData, "DownPaymentPercent") 'DownPayment
    End If 	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NoteRate")) Then    
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_3"), FRM_DS_GetValue(objData, "NoteRate")   'NoteRate
    End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "QualRate")) Then        
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1014"), FRM_DS_GetValue(objData, "QualRate")    'QualRate
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Term")) Then    
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_4"), FRM_DS_GetValue(objData, "Term")          'Term
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DueIn")) Then   
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_325"), FRM_DS_GetValue(objData, "DueIn")    'DueIn
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanNumber")) Then  
      If NOT GUI_Object_GetPropertyValue(objParentObject.WebEdit("html id:=l_364"),"readonly") = 1 Then 
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_364"), FRM_DS_GetValue(objData, "LoanNumber")
      End If    
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DocumentationType")) Then
        objparentobject.WebEdit("html id:=l_1051").click
     	util_win_sendkey "{TAB}"
        objParentObject.WinEdit("nativeclass:=Edit").Type FRM_DS_GetValue(objData, "DocumentationType")
        UTIL_Win_SendKey "{TAB}"
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "InterestOnlyMonth")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1177"), FRM_DS_GetValue(objData, "InterestOnlyMonth")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EstimatedClosingDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_763"), FRM_DS_GetValue(objData, "EstimatedClosingDate")
    End If    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4114_BorrowerEstClosingDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox33"), FRM_DS_GetValue(objData, "4114_BorrowerEstClosingDate")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "QualifyUsingPI")) Then
        GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox30_Ctrl"), FRM_DS_GetValue(objData, "QualifyUsingPI")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "736_Income")) Then 
        GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton4")
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "101_Base")) Then 
            GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*").WebEdit("html id:=l_101"), FRM_DS_GetValue(objData, "101_Base")
        End If
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1177_InterestOnly")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1177"), FRM_DS_GetValue(objData, "1177_InterestOnly")
    End If
	
	val = FRM_DS_GetValue(objData, "4084_ConstructionPermDisclose")
    If UTIL_String_IsNotEmpty(val) Then 
        GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox21_Ctrl", "value:="&val), "ON"
    End If 
	
	'761 "Lock Date" 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "761_LockDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_761"), FRM_DS_GetValue(objData, "761_LockDate")
    End If
	
    Set objData = Nothing   
    
End Function 



'This function is for set Borrower Income 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_SetBorrowerIncome(objParentObject1, objParentObject2, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject1 the parent object
'@param objParentObject2 the other parent object

Function BIZ_Common_BorrowerSummaryOrigination_SetBorrowerIncome(objParentObject1, objParentObject2, strRowID)
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetIncome", strRowID)
    
    GUI_Image_Click objParentObject1.WebButton("html id:=StandardButton4").Image("file name:=edit.png") 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BaseIncome")) Then
        GUI_WebEdit_Set objParentObject2.WebEdit("html id:=l_101"), FRM_DS_GetValue(objData, "BaseIncome")  'BaseIncome
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Overtime")) Then
        GUI_WebEdit_Set objParentObject2.WebEdit("html id:=l_102"), FRM_DS_GetValue(objData, "Overtime")    'Overtime
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Bonuses")) Then
        GUI_WebEdit_Set objParentObject2.WebEdit("html id:=l_103"), FRM_DS_GetValue(objData, "Bonuses")     'Bonuses
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Commissions")) Then
        GUI_WebEdit_Set objParentObject2.WebEdit("html id:=l_104"), FRM_DS_GetValue(objData, "Commissions")     'Commissions
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DivInterest")) Then
        GUI_WebEdit_Set objParentObject2.WebEdit("html id:=l_105"), FRM_DS_GetValue(objData, "DivInterest")     'DivInterest
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NetRentIncome")) And FRM_DS_GetValue(objData, "NetRentIncome") = "Y" Then
        GUI_Image_Click objParentObject2.WebButton("html id:=StandardButton2").Image("file name:=edit.png") 
        GUI_WebEdit_Set objParentObject2.WebEdit("html id:=l_1005"), FRM_DS_GetValue(objData, "GrossRentIncome")    'GrossRentIncome
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Other1")) Then
        GUI_WebEdit_Set objParentObject2.WebEdit("html id:=l_107"), FRM_DS_GetValue(objData, "Other1")  'Other1
    End If  
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DivInterest")) Then
        GUI_WebEdit_Set objParentObject2.WebEdit("html id:=l_105"), FRM_DS_GetValue(objData, "DivInterest")     'DivInterest
    End If  
    
    Set objData = Nothing
        
End Function



'This function is for set head part Information including Channel, CurrentStatus, ApplicationDate and Date fields
'@code
'    BIZ_Common_BorrowerSummaryOrigination_SetHeadInfo(objParentObject, strRowID)
'@endcode
'@param objParentObject the parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_SetHeadInfo(objParentObject, strRowID)
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strRowID)   
    
    'Set Channel
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then
		If  GUI_Object_IsExistX(objParentObject.WebList("html id:=DropdownBox6"), 10) Then
			GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox6"), FRM_DS_GetValue(objData, "Channel")
		End If
    End If
    'Set Current Status
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CurrentStatus")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "CurrentStatus") 
    End If
    'Set Application Date
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox14"), FRM_DS_GetValue(objData, "ApplicationDate") 
    End If
    'Set Date   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Date")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_749"), FRM_DS_GetValue(objData, "Date") 
    End If  

    Set objData = Nothing   
End Function

'This function is for verify header information in borrower summary origination
'@code
'    BIZ_BorrowerSummaryOrigination_VerifyHeadInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_VerifyHeadInfo(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary Origination", "Validate Header Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
	
    BIZ_Forms_Open "Borrower Summary - Origination"
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strRowID)  
	
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    'Validate Channel
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then
        GUI_Object_ValidateValue objParentObject.WebList("html id:=DropdownBox6"), FRM_DS_GetValue(objData, "Channel"), "Channel"
    End If
    'Validate Current Status
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CurrentStatus")) Then
        GUI_Object_ValidateValue objParentObject.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "CurrentStatus"), "Current Status"
    End If
    'Validate Application Date
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationDate")) Then
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox14"), FRM_DS_GetValue(objData, "ApplicationDate"), "Application Date"
    End If
    'Validate Date   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Date")) Then
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_749"), FRM_DS_GetValue(objData, "Date"), "Date" 
    End If  

	Set objData = Nothing
End Function


'This function is for set loan number.  
'It always append the current date to the provided string
'@param objParentObject the parent object
'@param strLoanNumber 

Function BIZ_Common_BorrowerSummaryOrigination_SetLoanNumber(objParentObject, strLoanNumber)
    If UTIL_String_IsNotEmpty(strLoanNumber) Then       
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_364"), strLoanNumber&"_"&UTIL_Date_Now_mmddyyyy_HHnnss()
    End If  
End Function 

'This function is for Set Credit Score Information 
'@code
'    BIZ_BorrowerSummaryOrigination_SetCreditScores(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_SetCreditScores(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set Credit Scores Information using Row Id '"&strRowID&"'", null
	
	Dim objData,objBorrowerSummaryOrg

    BIZ_Nav_SelectLoanTab()
    
    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetCreditInformation", strRowID)
    Set objBorrowerSummaryOrg = SwfWindow("swfname:=MainForm").Page("title:=.*")
	objBorrowerSummaryOrg.WebElement("innerhtml:=Credit Score for Decision Making","html tag:=SPAN").Highlight
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CreditScore")) Then
		If(Len(GUI_Object_GetPropertyValue(objBorrowerSummaryOrg.WebEdit("html id:=TextBox6"), "value")) = 0) Then 
        	GUI_WebEdit_Set objBorrowerSummaryOrg.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "CreditScore")
        End If
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4079_Comments")) Then
        GUI_WebEdit_Set objBorrowerSummaryOrg.WebEdit("html id:=MultilineTextBox1"), FRM_DS_GetValue(objData, "4079_Comments")
    End If
    Set objData = Nothing
	Set objBorrowerSummaryOrg = Nothing
    
End Function

'This function is for verify Property Information 
'@code
'    BIZ_BorrowerSummaryOrigination_VerifyProperty(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryOrigination_VerifyProperty(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Verify Property Information using Row Id '"&strRowID&"' in the Property datasheet", null

    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")    
    
    BIZ_Common_BorrowerSummaryOrigination_SetProperty objSummaryPage, strRowID
     
    Set objSummaryPage = Nothing        
End Function


'This function is for verify Property Information 
'@code
'    BIZ_Common_BorrowerSummaryOrigination_VerifyProperty(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryOrigination_VerifyProperty(objParentObject, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetProperty", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyAddress")) Then 
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_11"), FRM_DS_GetValue(objData, "PropertyAddress"), "SubjectPropertyAddress"
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyCity")) Then    
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_12"), FRM_DS_GetValue(objData, "PropertyCity"), "SubjectPropertyCity"
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyState")) Then
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_14"), FRM_DS_GetValue(objData, "PropertyState"), "SubjectPropertyState"
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyZip")) Then
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_15"), FRM_DS_GetValue(objData, "PropertyZip"), "SubjectPropertyZip"
    End If  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyType")) then 
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox4","index:=0"), FRM_DS_GetValue(objData, "PropertyType"), "PropertyType"
    End if  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EstimatedValue")) Then 
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1821"), FRM_DS_GetValue(objData, "EstimatedValue"), "EstimatedValue"
    End If      
    'l_356 - appraised value
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AppraisedValue")) Then 
        GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_356"), FRM_DS_GetValue(objData, "AppraisedValue"), "AppraisedValue"
    End If
    
    Set objData = Nothing       
End Function

'This function is for verify Property Information 
'@code
'    BIZ_BorrowerSummaryOrigination_CheckIfMERSMINValueExists()
'@endcode
Function BIZ_BorrowerSummaryOrigination_CheckIfMERSMINValueExists()
	BIZ_Forms_Open "Borrower Summary - Origination"
	Wait g_TinyWaitMedium
	strMERSMIN = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("title:=.*").WebEdit("html id:=l_1051"), "value")
	strLender =  GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebEdit("html id:=l_1264"), "value")
	If(Len(strMERSMIN) >  0  and Len(strLender) > 0) Then
		FRM_Logger_ReportPassEvent "Validate MERS MIN value after Product and Pricing",  strMERSMIN & " MERS MIN value is displayed in Borrower Summary Origination Screen", null
		FRM_Logger_ReportPassEvent "Validate Lender value after Product and Pricing",  strLender & " Lender value is displayed in Borrower Summary Origination Screen", null
	Else
		FRM_Logger_ReportFailEvent "Validate MERS MIN or Lender value after performning Product and Pricing", "MERS MIN value or Lender is not displayed in Borrower Summary Origination Screen", null
	End If
End Function

'This function is for setting data in MIP/PMI/Guarantee Fee Calculation Window accessed from Borrower Summary Origination Form
'@code
'	BIZ_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation(strRowID)
'@endcode
'@param strRowID - test data row Id from Excel sheet
Function BIZ_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation(strRowID)
	
	FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Set MIP/PMI/Guarantee Fee Calculation using Row Id '"&strRowID&"' in the Borrower datasheet",Null
	
	Set objMipDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfWindow("swfname:=MIPDialog")
	
	BIZ_Common_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation objMipDialog,strRowID

	Set objMipDialog = Nothing
	
End Function


'This function for verifying data in MIP/PMI/Guarantee Fee Calculation Window accessed from Borrower Summary Origination Form
'@code
'	BIZ_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation(strRowID)
'@endcode
'@param strRowID -  corresponding test data row Id from Excel sheet
Function BIZ_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation(strRowID)

	FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Verify MIP/PMI/Guarantee Fee Calculation using Row Id '"&strRowID&"' in the Borrower datasheet",Null
	
	Set objMipDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfWindow("swfname:=MIPDialog")
	
	BIZ_Common_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation objMipDialog,strRowID
	
	Set objMipDialog = Nothing
End Function


'This function is for setting data in MIP/PMI/Guarantee Fee Calculation Window accessed from Borrower Summary Origination Form
'@code
'	BIZ_Common_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation(objMipDialog,strRowID)
'@endcode
'@param objMipDialog - description object for MIP Guarantee Fee Calculation dialog
'@param strRowID - test data row Id from Excel sheet
Function BIZ_Common_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation(objMipDialog,strRowID)
	
	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetMIPGuaranteeFeeCalculation",strRowID)

	'click on Edit icon for Total Monthly Payment 
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=StandardButton5")
	
	'click Edit icon for Mtg. Ins
	GUI_WebButton_Click SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0").WebButton("html id:=StandardButton5")
	
	GUI_Object_WaitTillVisibleX objMipDialog,25
	
	'1107
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1107_MIPFundingGuarantee")) Then
		GUI_SwfEdit_Set objMipDialog.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData, "1107_MIPFundingGuarantee")	
	End If
	
	'1199 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1199_MMIPercent")) Then
		GUI_SwfEdit_Set objMipDialog.SwfEdit("swfname:=rateMI1Txt"),FRM_DS_GetValue(objData, "1199_MMIPercent")
	End If
	
	'1198 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1198_MMIMonths")) Then
		GUI_SwfEdit_Set objMipDialog.SwfEdit("swfname:=monthMI1Txt"),FRM_DS_GetValue(objData, "1198_MMIMonths")
	End If
	
	'1201 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1201_MMIPercent")) Then
		GUI_SwfEdit_Set objMipDialog.SwfEdit("swfname:=rateMI2Txt"),FRM_DS_GetValue(objData, "1201_MMIPercent")
	End If
	
	'1200 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1200_MMIMonths")) Then
		GUI_SwfEdit_Set objMipDialog.SwfEdit("swfname:=monthMI2Txt"),FRM_DS_GetValue(objData, "1200_MMIMonths")
	End If
	
	'1205 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_CancelAt")) Then
		GUI_SwfEdit_Set objMipDialog.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData, "1205_CancelAt")
	End If
	
	'3560 (Guarantee Fee Percentage)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3560_GuaranteeFeePercentage")) Then
		GUI_SwfComboBox_Select objMipDialog.SwfComboBox("swfname:=cboUSDAPercent"),FRM_DS_GetValue(objData, "3560_GuaranteeFeePercentage")
	End If
	
	'Financed Guarantee Fee (Checkbox)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FinancedGuaranteeFee_chkbox")) Then
		GUI_SwfCheckbox_Set objMipDialog.SwfCheckBox("swfname:=chkAll"),FRM_DS_GetValue(objData, "FinancedGuaranteeFee_chkbox")
	End If
	
	'Portion or none of the Guarantee Fee Financed (checkbox)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PortionOfGuaranteeFee_chkbox")) Then
		GUI_SwfCheckbox_Set objMipDialog.SwfCheckBox("swfname:=chkPortion"),FRM_DS_GetValue(objData, "PortionOfGuaranteeFee_chkbox")
	End If
	
	'Close MIP/PMI/Guarantee Fee Calculation Window
	GUI_SwfButton_Click objMipDialog.SwfButton("swfname:=okBtn")
	
	Set objData = Nothing
	
End Function

'This function for verifying data in MIP/PMI/Guarantee Fee Calculation Window accessed from Borrower Summary Origination Form
'@code
'	BIZ_Common_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation(objMipDialog,strRowID)
'@endcode
'@param objMipDialog - description object for MIP Guarantee Fee Calculation dialog
'@param strRowID -  corresponding test data row Id from Excel sheet
Function BIZ_Common_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation(objMipDialog,strRowID)

	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "VerifyMIPGuaranteeFeeCalc",strRowID)
	
	'click Edit icon for Mtg. Ins
	GUI_WebButton_Click SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0").WebButton("html id:=StandardButton5")
	
	GUI_Object_WaitTillVisibleX objMipDialog,25
	
	'1107
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1107_MIPFundingGuarantee")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData, "1107_MIPFundingGuarantee"),"Field 1107"	
	End If
	
	'1199 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1199_MMIPercent")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=rateMI1Txt"),FRM_DS_GetValue(objData, "1199_MMIPercent"),"Field 1199"
	End If
	
	'1198 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1198_MMIMonths")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=monthMI1Txt"),FRM_DS_GetValue(objData, "1198_MMIMonths"),"Field 1198"
	End If
	
	'1201 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1201_MMIPercent")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=rateMI2Txt"),FRM_DS_GetValue(objData, "1201_MMIPercent"),"Field 1201"
	End If
	
	'1200 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1200_MMIMonths")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=monthMI2Txt"),FRM_DS_GetValue(objData, "1200_MMIMonths"),"Field 1200"
	End If
	
	'1205 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_CancelAt")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData, "1205_CancelAt"),"Field 1205"
	End If
	
	'3561_Guarantee Fee Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3561_GuaranteeFeeAmount")) Then 
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtAllFee"),FRM_DS_GetValue(objData,"3561_GuaranteeFeeAmount"),"Field 3561 'Guarantee Fee Amount'"
	End If
	
	'3562_Total Loan Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3562_TotalLoanAmount")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtAllTotalAmount"),FRM_DS_GetValue(objData,"3562_TotalLoanAmount"),"Field 3562 'Total Loan Amount'"
	End If
	
	'1205 in Monthly Mortgage section
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_CancelAtDisabled")) Then
		GUI_Object_ValidateDisabled objMipDialog.SwfEdit("swfname:=rateMICancelTxt"),"Field 1205"
	End If
	
	'3563 Amount of Guarantee Fee Financed
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3563_AmtGuaranteeFeeFinanced")) And FRM_DS_GetValue(objData,"3563_AmtGuaranteeFeeFinanced")<>"Null" Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtPortionFinancedAmount"),FRM_DS_GetValue(objData,"3563_AmtGuaranteeFeeFinanced"),"Field 3563 'Amount of Guarantee Fee Financed'"
	ElseIf FRM_DS_GetValue(objData,"3563_AmtGuaranteeFeeFinanced")="Null" Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtPortionFinancedAmount"),"","Field 3563 'Amount of Guarantee Fee Financed'"
	End If
	
	'3564_Guarantee Fee Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3564_GuaranteeFeeAmount")) Then 
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtPortionFee"),FRM_DS_GetValue(objData,"3564_GuaranteeFeeAmount"),"Field 3564 'Guarantee Fee Amount'"
	End If
	
	'3565_Total Loan Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3565_TotalLoanAmount")) Then
		GUI_Object_ValidateText objMipDialog.SwfEdit("swfname:=txtPortionTotalLoanAmount"),FRM_DS_GetValue(objData,"3565_TotalLoanAmount"),"Field 3565 'Total Loan Amount'"
	End If
	
	
	'Close MIP/PMI/Guarantee Fee Calculation Window
	GUI_SwfButton_Click objMipDialog.SwfButton("swfname:=okBtn")
	
	Set objData = Nothing
	Set objMipDialog = Nothing
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\BorrowerSummaryOrigination.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\BorrowerSummaryProcessing.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_BorrowerSummaryProcessing BIZ_Forms_BorrowerSummaryProcessing
'List of functions here
'@code
'	Function BIZ_BorrowerSummaryProcessing_SetCreditInformation(strRowID)
'	Function BIZ_BorrowerSummaryProcessing_VerifyCreditInformation(strRowID)
'	Function BIZ_Common_BorrowerSummaryProcessing_SetCreditInformation(objParentObject, strRowID)
'
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Credit Information 
'@code
'    BIZ_BorrowerSummaryProcessing_SetCreditInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryProcessing_SetCreditInformation(strRowID)

    FRM_Logger_ReportInfoEvent "Borrower Summary - Processing", "Set Credit Information using Row Id '"&strRowID&"' in the Borrower datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
	BIZ_Forms_Open "Borrower Summary - Processing"
	BIZ_Common_BorrowerSummaryProcessing_SetCreditInformation objSummaryPage, strRowID
	
	Set objSummaryPage = Nothing
End Function



'This function is for verification of Credit Information 
'@code
'    BIZ_BorrowerSummaryProcessing_VerifyCreditInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_BorrowerSummaryProcessing_VerifyCreditInformation(strRowID)

    	FRM_Logger_ReportInfoEvent "Borrower Summary - Processing", "Validate Credit Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
	
	BIZ_Forms_Open "Borrower Summary - Processing"
	
	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryProcessing", "SetCreditInformation", strRowID)	

	GUI_Object_ValidateProperty SwfWindow("swfname:=MainForm").Page("index:=0").WebCheckBox("html id:=__cid_CheckBox48_Ctrl"), "checked", FRM_DS_GetValue(objData, "4073_AuthorizedCreditReport"), "Authorized Credit Report"
	GUI_Object_ValidateValueAsDate SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox31"), FRM_DS_GetValue(objData, "4074_DateAuthorized"), "Date Authorized"
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox8"), FRM_DS_GetValue(objData, "4075_AuthorizationMethod"), "Authorization Method"
	GUI_Object_ValidateProperty SwfWindow("swfname:=MainForm").Page("index:=0").WebCheckBox("html id:=__cid_CheckBox49_Ctrl"), "checked", FRM_DS_GetValue(objData, "4076_AuthorizedCreditReport"), "Authorized Credit Report"
	GUI_Object_ValidateValueAsDate SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox32"), FRM_DS_GetValue(objData, "4077_DateAuthorized"), "Date Authorized"
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox9"), FRM_DS_GetValue(objData, "4078_AuthorizationMethod"), "Authorization Method"
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=MultilineTextBox1"), FRM_DS_GetValue(objData, "4079_Comments"), "Comments"
	
	Set objData = Nothing	
	
End Function	



'This function is for set Credit Information 
'@code
'    BIZ_Common_BorrowerSummaryProcessing_SetCreditInformation(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_BorrowerSummaryProcessing_SetCreditInformation(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryProcessing", "SetCreditInformation", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4073_AuthorizedCreditReport")) Then
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox48_Ctrl"), FRM_DS_GetValue(objData, "4073_AuthorizedCreditReport")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4074_DateAuthorized")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox31"), FRM_DS_GetValue(objData, "4074_DateAuthorized")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4075_AuthorizationMethod")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox8"), FRM_DS_GetValue(objData, "4075_AuthorizationMethod")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4076_AuthorizedCreditReport")) Then
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox49_Ctrl"), FRM_DS_GetValue(objData, "4076_AuthorizedCreditReport")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4077_DateAuthorized")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox32"), FRM_DS_GetValue(objData, "4077_DateAuthorized")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4078_AuthorizationMethod")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox9"), FRM_DS_GetValue(objData, "4078_AuthorizationMethod")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4079_Comments")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=MultilineTextBox1"), FRM_DS_GetValue(objData, "4079_Comments")
	End If

	Set objData = Nothing		
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\BorrowerSummaryProcessing.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ClosingConditions.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_ClosingConditions BIZ_Forms_ClosingConditions
'
' List of functions here
' @code
'   Function BIZ_ClosingDisclosurePage3_SetClosingConditons(strRowID)
'   Function BIZ_ClosingConditions_SetClosingConditionsData(strRowID)
'   Function BIZ_ClosingConditions_AddClosingConditions(strRowID)
'   Function BIZ_ClosingConditions_VerifyClosingConditionsAdded(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is use to set test data for Closing Conditions.
'@code
'    BIZ_ClosingDisclosurePage3_SetClosingConditons(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_SetClosingConditons(strRowID)

    FRM_Logger_ReportInfoEvent "Set Closing Conditions", "Set data using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

    Dim objClosingConditoins, objData
    Set objClosingConditoins = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_ClosingConditions", "SetClosingConditions", strRowID)
    
    If FRM_DS_TestDataColumnExists(objData, "L827_DrawCity") Then
		GUI_WebEdit_Set objClosingConditoins.WebEdit("html id:=l_L827"), FRM_DS_GetValue(objData, "L827_DrawCity")
	End If
    If FRM_DS_TestDataColumnExists(objData, "L812_DrawState") Then
		GUI_WebEdit_Set objClosingConditoins.WebEdit("html id:=l_L812"), FRM_DS_GetValue(objData, "L812_DrawState")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1949_ClosingCountry") Then
		GUI_WebEdit_Set objClosingConditoins.WebEdit("html id:=l_1949"), FRM_DS_GetValue(objData, "1949_ClosingCountry")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1952_ClosingState") Then
		GUI_WebEdit_Set objClosingConditoins.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "1952_ClosingState")
	End If
    
    Set objClosingConditoins = Nothing
    Set objData = Nothing

End Function



'This function is use to set Closing Conditions data.
'@code
'    BIZ_ClosingConditions_SetClosingConditionsData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingConditions_SetClosingConditionsData(strRowID)
FRM_Logger_ReportInfoEvent "Set Closing Conditions data", "Set data using Row Id '"&strRowID&"' in the SetClosingConditions datasheet", null

    Dim objClosingConditions, objData
    Set objClosingConditions = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_ClosingConditions", "SetClosingConditions", strRowID)
    
    If FRM_DS_TestDataColumnExists(objData, "L827_DrawCity") Then
		GUI_WebEdit_Set objClosingConditions.WebEdit("html id:=l_L827"), FRM_DS_GetValue(objData, "L827_DrawCity")
	End If
    If FRM_DS_TestDataColumnExists(objData, "L812_DrawState") Then
		GUI_WebEdit_Set objClosingConditions.WebEdit("html id:=l_L812"), FRM_DS_GetValue(objData, "L812_DrawState")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1949_ClosingCountry") Then
		GUI_WebEdit_Set objClosingConditions.WebEdit("html id:=l_1949"), FRM_DS_GetValue(objData, "1949_ClosingCountry")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1952_ClosingState") Then
		GUI_WebEdit_Set objClosingConditions.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "1952_ClosingState")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1950_HoursDocumentsNeeded") Then
		GUI_WebEdit_Set objClosingConditions.WebEdit("html id:=l_1950"), FRM_DS_GetValue(objData, "1950_HoursDocumentsNeeded")
	End If
    If FRM_DS_TestDataColumnExists(objData, "L493_TermitReportRequired") Then
		GUI_WebList_Select objClosingConditions.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "L493_TermitReportRequired")
	End If
	If FRM_DS_TestDataColumnExists(objData, "1952_ClosingInstructions") Then
		GUI_WebEdit_Set objClosingConditions.WebEdit("html id:=MultilineTextBox1"), FRM_DS_GetValue(objData, "1952_ClosingInstructions")
	End If
    Set objClosingConditions = Nothing
    Set objData = Nothing	
    
End Function



'This function is use to add Closing Conditions.
'@code
'    BIZ_ClosingConditions_AddClosingConditions(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingConditions_AddClosingConditions(strRowID)
    FRM_Logger_ReportInfoEvent "Closing Conditions", "Add Closing Instructions/Conditions using Row Id '"&strRowID&"' in the AddClosingConditions datasheet", null
    
    Dim objConditionList, arrStrCondition,objData,objCCCopyDialog,objCCAddDialog,objScrollBar
    Set objData = FRM_DS_GetTestData("Forms_ClosingConditions", "AddClosingConditions", strRowID)
    arrStrCondition = Split(FRM_DS_GetValue(objData,"Conditions"), ";")
    
    GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=btnNew")
    Set objCCCopyDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingConditionCopyDialog")
    GUI_SwfButton_Click objCCCopyDialog.SwfButton("swfname:=okBtn")
    
    Set objCCAddDialog = objCCCopyDialog.SwfWindow("swfname:=ClosingConditionAddDialog")
    Set objConditionList = objCCAddDialog.SwfObject("swfname:=gvAvailable")
    'Set objScrollBar = objCCAddDialog.SwfScrollBar("vPanelScrollBar")
	
	'Select required Cond. Set folder to add conditions
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Cond. Set")) Then
		GUI_SwfComboBox_Select objCCAddDialog.SwfComboBox("swfname:=cboSet"),FRM_DS_GetValue(objData,"Cond. Set")
    End If
	
    For i = LBound(arrStrCondition) To UBound(arrStrCondition)
        GUI_List_ClickRow objConditionList,Null,"Name",arrStrCondition(i),True,False,False,"Single"
        GUI_SwfButton_Click objCCAddDialog.SwfButton("swfname:=btnAdd")
    Next
    GUI_SwfButton_Click objCCAddDialog.SwfButton("swfname:=btnOK")
   
    Set objConditionList = Nothing
    Set objScrollBar = Nothing
    Set objCCCopyDialog = Nothing
    Set objCCAddDialog = Nothing
    Set objData = Nothing
End Function



'This function is use to verify Closing Conditions are added.
'@code
'    BIZ_ClosingConditions_VerifyClosingConditionsAdded(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingConditions_VerifyClosingConditionsAdded(strRowID)
    FRM_Logger_ReportInfoEvent "Closing Conditions", "Verify Closing Instructions/Conditions are added using Row Id '"&strRowID&"' in the VerifyClosingConditionsAdded datasheet", null
    
    Dim arrStrCondition,objData,strConditions,objClosingConditonsTextArea
    Set objData = FRM_DS_GetTestData("Forms_ClosingConditions", "AddClosingConditions", strRowID)
    arrStrCondition = Split(FRM_DS_GetValue(objData,"Conditions"), ";")
      
    Set objClosingConditonsTextArea = SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=MultilineTextBox1")

    For i = LBound(arrStrCondition) To UBound(arrStrCondition)
        strConditions = strConditions&arrStrCondition(i)&":"
    Next
    GUI_Object_ValidateProperty objClosingConditonsTextArea,"value",strConditions,GUI_Object_Desc(objClosingConditonsTextArea) 

    Set objClosingConditonsTextArea = Nothing 
    Set objData = Nothing	
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ClosingConditions.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ClosingDisclosure.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_ClosingDsiclosure BIZ_Forms_ClosingDsiclosure
'
'List of functions here
'@code
'   Function BIZ_ClosingDisclosurePage2_VerifyPrepaidInterest(strRowID)
'   BIZ_ClosingDisclosurePage2_VerifyTotalBorPaid(strRowID)
'   Function BIZ_ClosingDisclosurePage3_SetSellerTransaction(strRowID)
'   Function BIZ_ClosingDisclosurePage3_SetBorrowerTransaction(strRowID)
'   Function BIZ_ClosingDisclosurePage1_SetClosingInformation(strRowID)
'   Function BIZ_ClosingDisclosurePage1_SetCDDateIssue(strRowID)
'	Function BIZ_ClosingDisclosurePage5_SetLoanCalculations(strRowID)
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X131()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X93()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X123()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X88()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X87()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X130()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X96()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X124()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X125()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X128()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X99()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X127()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X98()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X126()
'   Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X97()
'   Function BIZ_ClosingDisclosurePage3_SetCalculatingCashtoClose(strRowID)
'   function BIZ_Common_ClosingDisclosurePage3_SetCalculatingCashtoClose(objParentPage,strRowID)
'   Function BIZ_ClosingDisclosurePage3_VerTotalPayOffPmnt(strRowID)
'   Function BIZ_Common_ClosingDisclosurePage3_VerifyPayOffandPayment(objParentPage,strRowID)
'   function BIZ_ClosingDisclosurePage1_SetToleranceCure(strRowID)
'   Function BIZ_ClosingDisclosurePage5_SetLender(strRowID)
'   Function BIZ_Common_ClosingDisclosurePage5_SetLender(objParentPage,strRowID)
'	Function BIZ_ClosingDisclosurePage1_SetLender(strRowID)
'   Function BIZ_Common_ClosingDisclosurePage1_SetLender(objParentPage,strRowID)
'	Function BIZ_ClosingDisclosurePage3_VerifyCalculatingCashtoClose(strRowID)
'	Function BIZ_ClosingDisclosurePage3_VerifyBorrowersTransaction(strRowID)
'	Function BIZ_ClosingDisclosurePage3_VerifySellersTransaction(strRowID)
'	Function BIZ_ClosingDisclosurePage3_VerifyChangeIndicators(strRowID)
'   Function BIZ_ClosingDisclosurePage4_SetData(strRowID)
'   Function BIZ_Common_ClosingDisclosurePage4_SetData(objParent, strRowID)
'	Function BIZ_ClosingDisclosurePage1_SetDisclosureInfo(strRowID)
'	Function BIZ_ClosingDisclosurePage3_AdjustmentsAndOtherDetails_SetSecK_Data(strRowID)
'	Function BIZ_ClosingDisclosurePage3_AdjustmentsAndOtherDetails_SetSecL_Data(strRowID)
'	Function BIZ_ClosingDisclosurePage5_VerifyLoanCalculations(strRowID)
'	Function BIZ_Forms_ClosingDisclosurePage1_ProjectedPaymentTable_Validate(strRowID)
'	Function BIZ_Common_Forms_ClosingDisclosurePage1_ProjectedPaymentTable_Validate(objParentObject,strRowID)
'	Function BIZ_Forms_ClosingDisclosurePage5_ClickCopyFrom1003Page(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for verify Prepaid interest on Closing Disclosure Page 2
'@code
'    BIZ_ClosingDisclosurePage2_VerifyPrepaidInterest(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage2_VerifyPrepaidInterest(strRowID)

    	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 2", "Validate prepaid interest using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null
	
	BIZ_Forms_Open "Closing Disclosure Page 2"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerifyPrepaidInterest", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Prepaids3A1_PrepaidInterest")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=Prepaids3A1"), FRM_DS_GetValue(objData, "Prepaids3A1_PrepaidInterest"), "Prepaid Interest"
	End If
	
	Set objData = Nothing	
	
End Function

'This function is for verify Total Borrower Paid Amount on Closing Disclosure Page 2
'@code
'    BIZ_ClosingDisclosurePage2_VerifyTotalBorPaid(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage2_VerifyTotalBorPaid(strRowID)

    FRM_Logger_ReportInfoEvent "Closing Disclosure Page 2", "Validate Total borrower paid amount using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null
	
	BIZ_Forms_Open "Closing Disclosure Page 2"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerifyPrepaidInterest", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalBorPaid")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=totalBorrowerTxt"), FRM_DS_GetValue(objData, "TotalBorPaid"), "Total Borrower Paid"
	End If
	

	
	Set objData = Nothing	
	
End Function



'This function is for set Seller's Transaction data in Closing Disclosure Page3.
'@code
'    BIZ_ClosingDisclosurePage3_SetSellerTransaction(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_SetSellerTransaction(strRowID)

    FRM_Logger_ReportInfoEvent "Set Seller's Transaction data", "Set data using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

    Dim objCDPage3, objData
    Set objCDPage3 = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetSellerTransaction", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L80_SalePricePersonalProperty")) Then
		GUI_WebEdit_Set objCDPage3.WebEdit("html id:=TextBoxCD34"), FRM_DS_GetValue(objData, "L80_SalePricePersonalProperty")
	End If
    
    Set objCDPage3 = Nothing
    Set objData = Nothing

End Function



'This function is for set Borrower's Transaction data in Closing Disclosure Page3.
'@code
'    BIZ_ClosingDisclosurePage3_SetBorrowerTransaction(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_SetBorrowerTransaction(strRowID)

    FRM_Logger_ReportInfoEvent "SetBorrower's Transaction data", "Set data using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

    Dim objCDPage3, objData
    Set objCDPage3 = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetBorrowerTransaction", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Deposit")) Then
		GUI_WebEdit_Set objCDPage3.WebEdit("html id:=TextBoxCD16"), FRM_DS_GetValue(objData, "Deposit")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1416_Address"))Then
		GUI_WebEdit_Set objCDPage3.WebEdit("html id:=TextBox16"), FRM_DS_GetValue(objData, "1416_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1417_City")) Then
		GUI_WebEdit_Set objCDPage3.WebEdit("html id:=TextBox17"), FRM_DS_GetValue(objData, "1417_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1418_State")) Then
		GUI_WebEdit_Set objCDPage3.WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "1418_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1419_Zip")) Then
		GUI_WebEdit_Set objCDPage3.WebEdit("html id:=I_FR0108"), FRM_DS_GetValue(objData, "1419_Zip")
		If GUI_Object_IsExistX(Swfwindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog"), 1) Then
    	   GUI_SwfButton_Click Swfwindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfButton("text:=.*OK")
    	End If
	End If
	
    Set objCDPage3 = Nothing
    Set objData = Nothing

End Function



'This function is for set Borrower Income 
'@code
'    BIZ_ClosingDisclosurePage1_SetClosingInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage1_SetClosingInformation(strRowID)

    FRM_Logger_ReportInfoEvent "Closing Information", "Set Closing Information using Row Id '"&strRowID&"' on Closing Disclosure page 1", null
    
	BIZ_Forms_Open "Closing Disclosure Page 1"
    
    Dim objCDPage1, objData
	Set objCDPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetClosingInformation", strRowID)
	GUI_Object_WaitTillExistX objCDPage1.WebEdit("html id:=I_748"), 180	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ClosingDate")) Then
		GUI_WebEdit_Set objCDPage1.WebEdit("html id:=I_748"), FRM_DS_GetValue(objData, "ClosingDate") 	'ClosingDate
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DisbursementDate")) Then
		GUI_WebEdit_Set objCDPage1.WebEdit("html id:=I_2553"), FRM_DS_GetValue(objData, "DisbursementDate") 	'DisbursementDate
	End If

	Set objCDPage1 = Nothing
	Set objData    = Nothing
End Function



'This function is for set CD Date Issued in Closing Disclosure Page 1.
'@code
'    BIZ_ClosingDisclosurePage1_SetCDDateIssue(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage1_SetCDDateIssue(strRowID)

    FRM_Logger_ReportInfoEvent "Closing Disclosure Page 1", "Set CD1.X1 field using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

	Dim objData, objSummaryPage
    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetCDDateIssue", strRowID)
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	'Set LE1.X1 field
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "CDDate") 
	End If	
	
    Set objData = Nothing
    Set objSummaryPage = Nothing

End Function



'This function is for set Loan Calculations in Closing Disclosure Page 5.
'@code
'    BIZ_ClosingDisclosurePage5_SetLoanCalculations(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage5_SetLoanCalculations(strRowID)
	
	FRM_Logger_ReportInfoEvent "CD Page 5", "Click Lock Icon, set values for Loan Calculations Section", null
	
	BIZ_Forms_Open "Closing Disclosure Page 5"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetLoanCalculations", strRowID)
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalofPayments")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock3")
		GUI_WebEdit_Set objPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "TotalofPayments") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FinanceCharge")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock5")
		GUI_WebEdit_Set objPage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "FinanceCharge") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AmountFinanced")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock4")
		GUI_WebEdit_Set objPage.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "AmountFinanced") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock1")
		GUI_WebEdit_Set objPage.WebEdit("html id:=TxtApr"), FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock2")
		GUI_WebEdit_Set objPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)") 	
	End If
	
	Set objData = nothing
	Set objPage = Nothing
End Function



'This function is to click the lock icon for field CD3.X123 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X123()
'@endcode
	
Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X123()
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock2")
End Function



'This function is to click the lock icon for field CD3.X93 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X93()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X93()
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock13")
End Function



'This function is to click the lock icon for field CD3.X131 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X131()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X131()
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock11")
End Function



'This function is to click the lock icon for field CD3.X88 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X88()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X88()
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock10")
End Function



'This function is to click the lock icon for field CD3.X130 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X130()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X130()
    GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock19")
End Function



'This function is to click the lock icon for field CD3.X87 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X87()
'@endcode
Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X87()
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock9")
End Function


'This function is to click the lock icon for field CD3.X96 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X96()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X96()
    GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock4")
End Function



'This function is to click the lock icon for field CD3.X124 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X124()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X124()
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock15")
End Function



'This function is to click the lock icon for field CD3.X125 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X125()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X125()
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock14")
End Function



'This function is to click the lock icon for field CD3.X128 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X128()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X128()
	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock18")

End Function



'This function is to click the lock icon for field CD3.X99 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X99()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X99()
	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock7")

End Function



'This function is to click the lock icon for field CD3.X127 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X127()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X127()
	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock17")

End Function



'This function is to click the lock icon for field CD3.X98 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X98()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X98()
	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock6")

End Function



'This function is to click the lock icon for field CD3.X126 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X126()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X126()
	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock16")

End Function



'This function is to click the lock icon for field CD3.X97 in Closing Disclosure Page 3.
'@code
'    BIZ_ClosingDisclosurePage3_ClickLockForCD3X97()
'@endcode

Function BIZ_ClosingDisclosurePage3_ClickLockForCD3X97()
	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock5")

End Function



'This function is to Set the "Calculating Cash to Close" value on Forms->the Closing Disclosure Page 3
'@code
'    BIZ_ClosingDisclosurePage3_SetCalculatingCashtoClose(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_SetCalculatingCashtoClose(strRowID)
	FRM_Logger_ReportInfoEvent "Set CalculatingCashtoClose data", "Set data using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

    Dim objCDPage3    
    Set objCDPage3 = SwfWindow("swfname:=MainForm").Page("index:=0")
    
    BIZ_Common_ClosingDisclosurePage3_SetCalculatingCashtoClose objCDPage3,strRowID
    
    Set objCDPage3 = Nothing  
    
End Function


'This function is to Verify  the "Total PayOff and Payment" value on Forms->the Closing Disclosure Page 3
'@code
'    BIZ_ClosingDisclosurePage3_VerTotalPayOffPmnt(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_VerTotalPayOffPmnt(strRowID)
	FRM_Logger_ReportInfoEvent "Verify Total PayOff and Payment", "Verify data using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

    Dim objCDPage3    
    Set objCDPage3 = SwfWindow("swfname:=MainForm").Page("index:=0")
    BIZ_Forms_Open "Closing Disclosure Page 3"
    BIZ_Common_ClosingDisclosurePage3_VerifyPayOffandPayment objCDPage3,strRowID
    
    Set objCDPage3 = Nothing  
    
End Function




'This function is the common function to Set the "Calculating Cash to Close" 
'@code
'    BIZ_Common_ClosingDisclosurePage3_SetCalculatingCashtoClose(objParentPage,strRowID)
'@endcode
'@param objParentPage the Parent Page object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_ClosingDisclosurePage3_SetCalculatingCashtoClose(objParentPage,strRowID)
    Dim objData
    
    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerCalculatingCashtoClose", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X93_TotalClosingCost")) Then
    	BIZ_ClosingDisclosurePage3_ClickLockForCD3X93
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox1"),FRM_DS_GetValue(objData, "CD3X93_TotalClosingCost")
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X96_FundsFromBorrower")) Then
    	BIZ_ClosingDisclosurePage3_ClickLockForCD3X96
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox7"),FRM_DS_GetValue(objData, "CD3X96_FundsFromBorrower")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X97_Deposit")) Then
        BIZ_ClosingDisclosurePage3_ClickLockForCD3X97 
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox9"),FRM_DS_GetValue(objData, "CD3X97_Deposit")
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X98_FundsForBorrower")) Then
        BIZ_ClosingDisclosurePage3_ClickLockForCD3X98
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox11"),FRM_DS_GetValue(objData, "CD3X98_FundsForBorrower")
	End If
  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X99_SellerCredit")) Then
        BIZ_ClosingDisclosurePage3_ClickLockForCD3X99
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox13"),FRM_DS_GetValue(objData, "CD3X99_SellerCredit")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X87_LoanAmount")) Then
		BIZ_ClosingDisclosurePage3_ClickLockForCD3X87
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox161"),FRM_DS_GetValue(objData, "CD3X87_LoanAmount")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X88_TotalClosingCost")) Then
		BIZ_ClosingDisclosurePage3_ClickLockForCD3X88
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox163"),FRM_DS_GetValue(objData, "CD3X88_TotalClosingCost")
	End If
	
    Set objData = Nothing
End Function


'This function is the common function to Set the "PayOffs and Payments" 
'@code
'    BIZ_Common_ClosingDisclosurePage3_SetPayOffandPayment(objParentPage,strRowID)
'@endcode
'@param objParentPage the Parent Page object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_ClosingDisclosurePage3_VerifyPayOffandPayment(objParentPage,strRowID)
    Dim objData
    
    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerifyCalculatingCashtoClose", strRowID)
    
    
     
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X88_TotalClosingCost")) Then

        GUI_Object_ValidateValue  objParentPage.WebEdit("html id:=TextBox163"),FRM_DS_GetValue(objData, "CD3X88_TotalClosingCost"), "Total Closing Cost-CD3X88"
    End If

	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X90_TotalPayOffs")) Then
        GUI_Object_ValidateValue objParentPage.WebEdit("html id:=TextBox167"),FRM_DS_GetValue(objData, "CD3X90_TotalPayOffs"),"Total PayOffs and Payments_CD3X90"
    End If
    
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X82_TotalClosingCost")) Then
        GUI_Object_ValidateValue objParentPage.WebEdit("html id:=l_CD3X82"),FRM_DS_GetValue(objData, "CD3X82_TotalClosingCost"),"Total PayOffs and Payments-CD3X82"
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X84_FinalTotalPayOffs")) Then
        GUI_Object_ValidateValue objParentPage.WebEdit("html id:=l_CD3X84"),FRM_DS_GetValue(objData, "CD3X84_FinalTotalPayOffs"),"Total PayOffs and Payments_CD3X84"
    End If
    
    'GUI_WebButton_Click objParentPage.WebButton("html id:=Button4")
    
    'Set objWindow=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PayoffsAndPaymentsDialog")
   
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X92_CashToClose")) Then
        GUI_Object_ValidateValue objParentPage.WebEdit("html id:=TextBox205"),FRM_DS_GetValue(objData, "CD3X92_CashToClose"), "Cash To Close To-CD3X92"
	End If
    
     If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X83_PaidBeforeClosing")) Then
        GUI_Object_ValidateValue objParentPage.WebEdit("html id:=l_CD3X83"),FRM_DS_GetValue(objData, "CD3X83_PaidBeforeClosing"), "Closing Cost paid before Closing-CD3X83"
	End If
    

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X91_CashToCloseAmnt")) Then
        GUI_Object_ValidateValue objParentPage.WebEdit("html id:=TextBox169"),FRM_DS_GetValue(objData, "CD3X91_CashToCloseAmnt"), "CashToClose Amount-CD3X91"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X85_CashToCloseAmnt")) Then
        GUI_Object_ValidateValue objParentPage.WebEdit("html id:=TextBox170"),FRM_DS_GetValue(objData, "CD3X85_CashToCloseAmnt"), "CashToClose Amount Final-CD3X85"
	End If
  
		'GUI_SwfButton_Click objWindow.SwfButton("swfname:=okBtn")
    Set objData = Nothing
End Function

'This function is the common function to Set the "Tolerance Cure" section value on the Closing Disclosure Page 1
'@code
'    BIZ_ClosingDisclosurePage1_SetToleranceCure(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage1_SetToleranceCure(strRowID)

	FRM_Logger_ReportInfoEvent "Set Tolerance Cure Data", "Set data using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

    Dim objCDPage1, objData    
    Set objCDPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetToleranceCure", strRowID)  
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FVX366_AppliedCureAmount")) Then
        GUI_WebEdit_Set objCDPage1.WebEdit("html id:=edit1"),FRM_DS_GetValue(objData, "FVX366_AppliedCureAmount")
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3171_Date")) Then
    	GUI_WebEdit_Set objCDPage1.WebEdit("html id:=edit2"),FRM_DS_GetValue(objData, "3171_Date")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ToleranceCure")) Then
    	GUI_WebCheckbox_Set objCDPage1.WebCheckbox("html id:=__cid_chk_CD1X57_Ctrl"),FRM_DS_GetValue(objData, "ToleranceCure")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ChangedCircumstances")) Then
		GUI_WebCheckbox_Set objCDPage1.WebCheckbox("html id:=__cid_chk_CD1X61_Ctrl"),FRM_DS_GetValue(objData, "ChangedCircumstances")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Circumstances")) Then
	
		GUI_WebButton_Click objCDPage1.WebButton("html id:=stdbtn_CD1X64")
		
		intRowNum = GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions"),"Changed Circumstance",FRM_DS_GetValue(objData, "Circumstances"))

		GUI_List_ClickOnCellData SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions"),intRowNum,1,True,False,False,"Single"

		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").swfButton("swfname:=btnOK")
	
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3172_Comments")) Then
        
        GUI_WebEdit_Set objCDPage1.WebEdit("html id:=MultilineTextBox1"),FRM_DS_GetValue(objData, "3172_Comments")
	End If
    
    Set objCDPage1 = Nothing
    Set objData = Nothing
End Function



'This function is used to Set the Lender informaiton of "Contact Information" section on the Closing Disclosure Page 5
'@code
'    BIZ_Common_ClosingDisclosurePage5_SetLender(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage5_SetLender(strRowID)

	FRM_Logger_ReportInfoEvent "Set Lender", "Set data using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

    Dim objCDPage5
    Set objCDPage5 = SwfWindow("swfname:=MainForm").Page("index:=0")
    
	BIZ_Common_ClosingDisclosurePage5_SetLender objCDPage5, strRowID
    
    Set objCDPage5 = Nothing
    
End Function



'This function is the common function to Set the Lender informaiton of "Contact Information" section
'@code
'    BIZ_Common_ClosingDisclosurePage5_SetLender(objParentPage,strRowID)
'@endcode
'@param objParentPage the Parent Page object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_ClosingDisclosurePage5_SetLender(objParentPage,strRowID)

    Dim objData
    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetLender", strRowID)  
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X7_Name")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=l_X7"),FRM_DS_GetValue(objData, "CD5.X7_Name")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X8_Address")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox8"),FRM_DS_GetValue(objData, "CD5.X8_Address")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X9_City")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox9"),FRM_DS_GetValue(objData, "CD5.X9_City")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X10_State")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox10"),FRM_DS_GetValue(objData, "CD5.X10_State")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X11_Zip")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=l_11"),FRM_DS_GetValue(objData, "CD5.X11_Zip")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X12_NMLSID")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox14"),FRM_DS_GetValue(objData, "CD5.X12_NMLSID")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X13_STLicenseID")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox15"),FRM_DS_GetValue(objData, "CD5.X13_STLicenseID")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X14_Contact")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox16"),FRM_DS_GetValue(objData, "CD5.X14_Contact")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X15_ContactNMLSID")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox12"),FRM_DS_GetValue(objData, "CD5.X15_ContactNMLSID")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X16_ContactSTLicenseID")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox13"),FRM_DS_GetValue(objData, "CD5.X16_ContactSTLicenseID")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X17_Email")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox17"),FRM_DS_GetValue(objData, "CD5.X17_Email")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD5.X18_Phone")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox18"),FRM_DS_GetValue(objData, "CD5.X18_Phone")
    End If
    
    Set objData = Nothing
    
End Function



'This function is used to Set the Lender informaiton of "Contact Information" section on the Closing Disclosure Page 5
'@code
'    BIZ_Common_ClosingDisclosurePage1_SetLender(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage1_SetLender(strRowID)

	FRM_Logger_ReportInfoEvent "Set Lender CD Page 1", "Set data using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null

    Dim objCDPage1
    Set objCDPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
    
	BIZ_Common_ClosingDisclosurePage1_SetLender objCDPage1, strRowID
    
    Set objCDPage5 = Nothing
    
End Function



'This function is the common function to Set the Lender informaiton of "Contact Information" section
'@code
'    BIZ_Common_ClosingDisclosurePage1_SetLender(objParentPage,strRowID)
'@endcode
'@param objParentPage the Parent Page object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_ClosingDisclosurePage1_SetLender(objParentPage,strRowID)

    Dim objData
    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetLenderCDPage1", strRowID)  
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1264_Name")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox30"),FRM_DS_GetValue(objData, "1264_Name")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1257_Address")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox48"),FRM_DS_GetValue(objData, "1257_Address")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1258_City")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox93"),FRM_DS_GetValue(objData, "1258_City")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1259_State")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=TextBox94"),FRM_DS_GetValue(objData, "1259_State")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1260_Zip")) Then
        GUI_WebEdit_Set objParentPage.WebEdit("html id:=I_1260"),FRM_DS_GetValue(objData, "1260_Zip")
    End If
    
    Set objData = Nothing
    
End Function



'This function is for verify Calculating CashtoClose on Closing Disclosure Page 3
'@code
'    BIZ_ClosingDisclosurePage3_VerifyCalculatingCashtoClose(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_VerifyCalculatingCashtoClose(strRowID)

    	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 3", "Validate calculating cash to close using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null
	
	BIZ_Forms_Open "Closing Disclosure Page 3"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerifyCalculatingCashtoClose", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X102_TotalClosingCosts")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "CD3X102_TotalClosingCosts"), "Total closing costs"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X103_TotalCostsPaidbeforeClosing")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=l_CD3X103"), FRM_DS_GetValue(objData, "CD3X103_TotalCostsPaidbeforeClosing"), "Total costs paid before closing"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X104_ClosingCostsFinanced")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=l_CD3X104"), FRM_DS_GetValue(objData, "CD3X104_ClosingCostsFinanced"), "Closing costs financed"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X105_DownPayment")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=l_CD3X105"), FRM_DS_GetValue(objData, "CD3X105_DownPayment"), "Down payment"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X106_Deposit")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=l_CD3X106"), FRM_DS_GetValue(objData, "CD3X106_Deposit"), "Deposit"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X107_BorrowerFunds")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=l_CD3X107"), FRM_DS_GetValue(objData, "CD3X107_BorrowerFunds"), "Borrower funds"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X108_SellerCredit")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox14"), FRM_DS_GetValue(objData, "CD3X108_SellerCredit"), "Seller credit"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X109_Adjustments")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox16"), FRM_DS_GetValue(objData, "CD3X109_Adjustments"), "Adjustments"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X45_CashtoClose")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "CD3X45_CashtoClose"), "Cash to close"
	End If

	
	Set objData = Nothing	
	
End Function



'This function is for verify Borrower transaction on Closing Disclosure Page 3
'@code
'    BIZ_ClosingDisclosurePage3_VerifyBorrowersTransaction(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_VerifyBorrowersTransaction(strRowID)

    	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 3", "Validate Borrowers transaction using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null
	
	BIZ_Forms_Open "Closing Disclosure Page 3"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerifyBorrowersTransaction", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X41_Subtotal")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox50"), FRM_DS_GetValue(objData, "CD3X41_Subtotal"), "Subtotal"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X1_ClosingCostsPaid")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBoxCD3"), FRM_DS_GetValue(objData, "CD3X1_ClosingCostsPaid"), "Closing costs paid"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X42_Subtotal")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox115"), FRM_DS_GetValue(objData, "CD3X42_Subtotal"), "Subtotal"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X21_TotalDue")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox155"), FRM_DS_GetValue(objData, "CD3X21_TotalDue"), "Total Due"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X22_TotalPaid")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox156"), FRM_DS_GetValue(objData, "CD3X22_TotalPaid"), "Total Paid"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X23_Cash")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox157"), FRM_DS_GetValue(objData, "CD3X23_Cash"), "Cash"
	End If
	
	Set objData = Nothing	
	
End Function



'This function is for verify Selleres Transaction on Closing Disclosure Page 3
'@code
'    BIZ_ClosingDisclosurePage3_VerifySellersTransaction(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_VerifySellersTransaction(strRowID)

    	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 3", "Validate Sellers transaction using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null
	
	BIZ_Forms_Open "Closing Disclosure Page 3"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerifySellersTransaction", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X43_Subtotal")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox81"), FRM_DS_GetValue(objData, "CD3X43_Subtotal"), "Subtotal"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X44_Subtotal")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox145"), FRM_DS_GetValue(objData, "CD3X44_Subtotal"), "Subtotal"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X38_TotalDuetoSeller")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox158"), FRM_DS_GetValue(objData, "CD3X38_TotalDuetoSeller"), "Total due to seller"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X39_TotalDuefromSeller")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox159"), FRM_DS_GetValue(objData, "CD3X39_TotalDuefromSeller"), "Total due from seller"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X40_Cash")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox160"), FRM_DS_GetValue(objData, "CD3X40_Cash"), "Cash"
	End If
	
	Set objData = Nothing	
	
End Function



'This function is for verify Change Indicators on Closing Disclosure Page 3
'@code
'    BIZ_ClosingDisclosurePage3_VerifyChangeIndicators(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_VerifyChangeIndicators(strRowID)

    	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 3", "Validate Change Indicators using Row Id '"&strRowID&"' in the Forms_ClosingDisclosurePage datasheet", null
	
	BIZ_Forms_Open "Closing Disclosure Page 3"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerifyChangeIndicators", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X111_TotalClosingCosts")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox214"), FRM_DS_GetValue(objData, "CD3X111_TotalClosingCosts"), "Total closing costs"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X112_ClosingCostsPaidbeforeClosing")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox215"), FRM_DS_GetValue(objData, "CD3X112_ClosingCostsPaidbeforeClosing"), "Closing costs paid before closing"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X134_ClosingCostsFinanced")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox213"), FRM_DS_GetValue(objData, "CD3X134_ClosingCostsFinanced"), "Closing costs financed"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X113_DownPayment")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox216"), FRM_DS_GetValue(objData, "CD3X113_DownPayment"), "Down payment"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X114_Deposit")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox217"), FRM_DS_GetValue(objData, "CD3X114_Deposit"), "Deposit"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X115_BorrowerFunds")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox218"), FRM_DS_GetValue(objData, "CD3X115_BorrowerFunds"), "Borrower funds"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X116_SellerCredit")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox219"), FRM_DS_GetValue(objData, "CD3X116_SellerCredit"), "Seller credit"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD3X117_Adjustments")) Then
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*", "index:=0").WebEdit("html id:=TextBox220"), FRM_DS_GetValue(objData, "CD3X117_Adjustments"), "Adjustments"
	End If

	
	Set objData = Nothing	
	
End Function



'This function is the  function to Set the data on CD Page 4
'@code
'    BIZ_ClosingDisclosurePage4_SetData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage4_SetData(strRowID)

    Dim objData

	BIZ_Forms_Open "Closing Disclosure Page 4"
    BIZ_Common_ClosingDisclosurePage4_SetData SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0"), strRowID
End Function



'This function is the  common function to Set the data on CD Page 4
'@code
'    BIZ_Common_ClosingDisclosurePage4_SetData(objParent, strRowID)
'@endcode
'@param objParent object for the page
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_ClosingDisclosurePage4_SetData(objParent, strRowID)

    Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "CDPage4", strRowID)  
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "674_LateCharge")) Then
        GUI_WebEdit_Set objParent.WebEdit("html id:=TextBox2"),FRM_DS_GetValue(objData, "674_LateCharge")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1719_LateCharge")) Then
        GUI_WebList_Select objParent.WebList("html id:=DropdownBox1"),FRM_DS_GetValue(objData, "1719_LateCharge")
    End If
    Set objData = Nothing
    
End Function



'This function is for setting "Disclosure Information" section in Closing Disclosure Page1
'@code
'    BIZ_ClosingDisclosurePage1_SetDisclosureInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage1_SetDisclosureInfo(strRowID)
	 BIZ_Forms_Open "Closing Disclosure Page 1"
	 
	 FRM_Logger_ReportInfoEvent "Closing Disclosure", "Set Disclosure Info section using Row Id '"&strRowID&"' on Closing Disclosure page 1", null
	 Dim objCDPage1, objData
	 Set objCDPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	 Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetDisclosureInfo", strRowID)
	 GUI_Object_WaitTillExistX objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X61_Ctrl"), 120
	 
	 'Changed Circumstance
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1X61_ChangedCircumstance")) Then
		GUI_WebCheckbox_Set objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X61_Ctrl"),FRM_DS_GetValue(objData,"CD1X61_ChangedCircumstance")
	 End If
	 
	 'Change in Loan product
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1X53_ChangeInLoanProduct")) Then
		GUI_WebCheckbox_Set objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X53_Ctrl"),FRM_DS_GetValue(objData,"CD1X53_ChangeInLoanProduct")
	 End If

	 'Prepayment penality added
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1X54_PrepaymentPenality")) Then
		GUI_WebCheckbox_Set objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X54_Ctrl"),FRM_DS_GetValue(objData,"CD1X54_PrepaymentPenality")
	 End If
	 
	 'Revisions Requested
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1X66_RevisionsRequested")) Then
		GUI_WebCheckbox_Set objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X66_Ctrl"),FRM_DS_GetValue(objData,"CD1X66_RevisionsRequested")
	 End If

	 'Changed Circumstance - Eligibility 
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1X68_Reason")) Then
		GUI_WebCheckbox_Set objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X68_Ctrl"),FRM_DS_GetValue(objData,"CD1X68_Reason")
	 End If
	 
	 'changes received date (use only when CD1X61_ChangedCircumstance is checked, otherwise it is disabled by default)
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD1X62_ChangesReceivedDate")) Then
		GUI_WebEdit_Set objCDPage1.WebEdit("html id:=I_CD1X62"), FRM_DS_GetValue(objData, "CD1X62_ChangesReceivedDate") 	
	 End If
	 
	 'Change in APR checkbox
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1X52_APRChange")) Then
		GUI_WebCheckbox_Set objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X52_Ctrl"),FRM_DS_GetValue(objData,"CD1X52_APRChange")
	 End If
	 
	 'Tolerance Cure checkbox
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1X57_ToleranceCure")) Then
		GUI_WebCheckbox_Set objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X57_Ctrl"),FRM_DS_GetValue(objData,"CD1X57_ToleranceCure")
	 End If
	 
	 'CD164 Changed Circumstance Description (use only when CD1X61_ChangedCircumstance is checked, otherwise it is disabled by default) 
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1X64_Description")) Then
	 	GUI_WebButton_Click objCDPage1.WebButton("html id:=stdbtn_CD1X64")
		GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions"),15
		
		GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions"),_
		Null,"Code",FRM_DS_GetValue(objData,"CD1X64_Description"),True,False,False,"Double"
	 End If
	 
	 Set objCDPage1=Nothing
	 Set objData=Nothing
End Function



'This function is for setting data for K5 to K15 section
'@code
'    BIZ_ClosingDisclosurePage3_AdjustmentsAndOtherDetails_SetSectionK(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_AdjustmentsAndOtherDetails_SetSectionK(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_ClosingDisclosurePage3_AdjustmentsAndOtherDetails_SetSectionK", "Setting the data for Section K from K5 - K15", Null
	
	Dim objClosingDiscPage3, objAdjDetails, objData
	Set objClosingDiscPage3 = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Set objAdjDetails		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("MicClass:=Page")
	Set objData 			= FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "Page3_AdjustmentAndOtherCredits", strRowID)
	
	GUI_WebButton_Click objClosingDiscPage3.WebButton("html id:=StdBtnAdjustments")
	
	If GUI_Object_IsExistX(objAdjDetails, 30) Then
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K05_L89")) Then
			FRM_Logger_ReportInfoEvent "K05_L89", "Set the value '"&FRM_DS_GetValue(objData, "K05_L89")&"' for K05 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox5","index:=0"), FRM_DS_GetValue(objData, "K05_L89")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K06_CD3.X3")) Then
			FRM_Logger_ReportInfoEvent "K06_CD3.X3", "Set the value '"&FRM_DS_GetValue(objData, "K06_CD3.X3")&"' for K06 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox94","index:=0"), FRM_DS_GetValue(objData, "K06_CD3.X3")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K07_CD3.X232")) Then
			FRM_Logger_ReportInfoEvent "K07_CD3.X232", "Set the value '"&FRM_DS_GetValue(objData, "K07_CD3.X232")&"' for K07 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox100","index:=0"), FRM_DS_GetValue(objData, "K07_CD3.X232")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K08_L94")) Then
			FRM_Logger_ReportInfoEvent "K08_L94", "Set the value '"&FRM_DS_GetValue(objData, "K08_L94")&"' for K08 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "K08_L94")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K09_L100")) Then
			FRM_Logger_ReportInfoEvent "K09_L100", "Set the value '"&FRM_DS_GetValue(objData, "K09_L100")&"' for K09 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox6","index:=0"), FRM_DS_GetValue(objData, "K09_L100")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K10_L106")) Then
			FRM_Logger_ReportInfoEvent "K10_L106", "Set the value '"&FRM_DS_GetValue(objData, "K10_L106")&"' for K10 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox113","index:=0"), FRM_DS_GetValue(objData, "K10_L106")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K11_L111")) Then
			FRM_Logger_ReportInfoEvent "K11_L111", "Set the value '"&FRM_DS_GetValue(objData, "K11_L111")&"' for K11 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox16","index:=0"), FRM_DS_GetValue(objData, "K11_L111")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K12_L115")) Then
			FRM_Logger_ReportInfoEvent "K12_L115", "Set the value '"&FRM_DS_GetValue(objData, "K12_L115")&"' for K12 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox117","index:=0"), FRM_DS_GetValue(objData, "K12_L115")
	    End If
			
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K13_L119")) Then
			FRM_Logger_ReportInfoEvent "K13_L119", "Set the value '"&FRM_DS_GetValue(objData, "K13_L119")&"' for K13 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox121","index:=0"), FRM_DS_GetValue(objData, "K13_L119")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K14_L123")) Then
			FRM_Logger_ReportInfoEvent "K14_L123", "Set the value '"&FRM_DS_GetValue(objData, "K14_L123")&"' for K14 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox125","index:=0"), FRM_DS_GetValue(objData, "K14_L123")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "K15_CD3.X7")) Then
			FRM_Logger_ReportInfoEvent "K15_CD3.X7", "Set the value '"&FRM_DS_GetValue(objData, "K15_CD3.X7")&"' for K15 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox129","index:=0"), FRM_DS_GetValue(objData, "K15_CD3.X7")
	    End If
	    
	    GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
	Else
		FRM_Logger_ReportFailEvent "Adjustments and other details window should open", "Adjustments and other details window is not opened", Null
	End If
	
	Set objClosingDiscPage3 = Nothing
	Set objAdjDetails		= Nothing
	Set objData				= Nothing
	
End Function



'This function is for setting data for L04 to L17 section
'@code
'    BIZ_ClosingDisclosurePage3_AdjustmentsAndOtherDetails_SetSectionL(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage3_AdjustmentsAndOtherDetails_SetSectionL(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_ClosingDisclosurePage3_AdjustmentsAndOtherDetails_SetSectionL", "Setting the data for Section L, L04 and L06 - L17 ", Null
	
	Dim objClosingDiscPage3, objAdjDetails, objData
	Set objClosingDiscPage3 = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Set objAdjDetails		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("MicClass:=Page")
	Set objData 			= FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "Page3_AdjustmentAndOtherCredits", strRowID)
	
	GUI_WebButton_Click objClosingDiscPage3.WebButton("html id:=StdBtnAdjustments")
	
	If GUI_Object_IsExistX(objAdjDetails, 30) Then
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L04_CD3.X280")) Then
			FRM_Logger_ReportInfoEvent "L04_CD3.X280", "Set the value '"&FRM_DS_GetValue(objData, "L04_CD3.X280")&"' for L04 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox135","index:=0"), FRM_DS_GetValue(objData, "L04_CD3.X280")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L06_CD3.X10")) Then
			FRM_Logger_ReportInfoEvent "L06_CD3.X10", "Set the value '"&FRM_DS_GetValue(objData, "L06_CD3.X10")&"' for L06 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox11","index:=0"), FRM_DS_GetValue(objData, "L06_CD3.X10")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L07_CD3.X12")) Then
			FRM_Logger_ReportInfoEvent "L07_CD3.X12", "Set the value '"&FRM_DS_GetValue(objData, "L07_CD3.X12")&"' for L07 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox141","index:=0"), FRM_DS_GetValue(objData, "L07_CD3.X12")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L08_CD3.X14")) Then
			FRM_Logger_ReportInfoEvent "L08_CD3.X14", "Set the value '"&FRM_DS_GetValue(objData, "L08_CD3.X14")&"' for L08 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox20","index:=0"), FRM_DS_GetValue(objData, "L08_CD3.X14")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L09_CD3.X16")) Then
			FRM_Logger_ReportInfoEvent "L09_CD3.X16", "Set the value '"&FRM_DS_GetValue(objData, "L09_CD3.X16")&"' for L09 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox155","index:=0"), FRM_DS_GetValue(objData, "L09_CD3.X16")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L10_CD3.X18")) Then
			FRM_Logger_ReportInfoEvent "L10_CD3.X18", "Set the value '"&FRM_DS_GetValue(objData, "L10_CD3.X18")&"' for L10 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox159","index:=0"), FRM_DS_GetValue(objData, "L10_CD3.X18")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L11_CD3.X20")) Then
			FRM_Logger_ReportInfoEvent "L11_CD3.X20", "Set the value '"&FRM_DS_GetValue(objData, "L11_CD3.X20")&"' for L11 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox165","index:=0"), FRM_DS_GetValue(objData, "L11_CD3.X20")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L12_L158")) Then
			FRM_Logger_ReportInfoEvent "L12_L158", "Set the value '"&FRM_DS_GetValue(objData, "L12_L158")&"' for L12 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox21","index:=0"), FRM_DS_GetValue(objData, "L12_L158")
	    End If
			
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L13_L164")) Then
			FRM_Logger_ReportInfoEvent "L13_L164", "Set the value '"&FRM_DS_GetValue(objData, "L13_L164")&"' for L13 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox24","index:=0"), FRM_DS_GetValue(objData, "L13_L164")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L14_L170")) Then
			FRM_Logger_ReportInfoEvent "L14_L170", "Set the value "&FRM_DS_GetValue(objData, "L14_L170")&" for L14 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox174","index:=0"), FRM_DS_GetValue(objData, "L14_L170")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L15_L175")) Then
			FRM_Logger_ReportInfoEvent "L15_L175", "Set the value '"&FRM_DS_GetValue(objData, "L15_L175")&"' for L15 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox26","index:=0"), FRM_DS_GetValue(objData, "L15_L175")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L16_L179")) Then
			FRM_Logger_ReportInfoEvent "L16_L179", "Set the value '"&FRM_DS_GetValue(objData, "L16_L179")&"' for L16 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox178","index:=0"), FRM_DS_GetValue(objData, "L16_L179")
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L17_L183")) Then
			FRM_Logger_ReportInfoEvent "L17_L183", "Set the value '"&FRM_DS_GetValue(objData, "L17_L183")&"' for L17 field", Null
			GUI_WebEdit_Set objAdjDetails.WebEdit("html id:=TextBox186","index:=0"), FRM_DS_GetValue(objData, "L17_L183")
	    End If
	    
	  	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
	Else
		FRM_Logger_ReportFailEvent "Adjustments and other details window should open", "Adjustments and other details window is not opened", Null
	End If
	
	Set objClosingDiscPage3 = Nothing
	Set objAdjDetails		= Nothing
	Set objData				= Nothing
	
End Function



'This function is for verify Loan Calculations in Closing Disclosure Page 5.
'@code
'    BIZ_ClosingDisclosurePage5_VerifyLoanCalculations(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingDisclosurePage5_VerifyLoanCalculations(strRowID)
	
	FRM_Logger_ReportInfoEvent "CD Page 5", "Click Lock Icon, set values for Loan Calculations Section", null
	
	BIZ_Forms_Open "Closing Disclosure Page 5"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "VerifyLoanCalculations", strRowID)
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalofPayments")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox1"), FormatNumber(FRM_DS_GetValue(objData, "TotalofPayments"),2),"Total of  Payments" 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FinanceCharge")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox2"), FormatNumber(FRM_DS_GetValue(objData, "FinanceCharge")),"Finanace Charge"	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AmountFinanced")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox3"), FormatNumber(FRM_DS_GetValue(objData, "AmountFinanced")),"Amount Finanaced"	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TxtApr"), FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)"),"Annual Percentage Rate" 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox5"), FormatNumber(FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)"),3),"Toatal interest percentage"	
	End If
	
	Set objData = Nothing
	Set objPage = Nothing

End Function


'This function is for verify Projected payment Table in Closing Disclosure Page 1
'@code
'    BIZ_Forms_ClosingDisclosurePage1_ProjectedPaymentTable_Validate(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Forms_ClosingDisclosurePage1_ProjectedPaymentTable_Validate(strRowID)

	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 1", "Verify ProjectedPaymentTable", Null
	
	Dim objPage
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	'Navigate to LE page 1
	BIZ_Forms_Open "Closing Disclosure Page 1"
	BIZ_Common_Forms_ClosingDisclosurePage1_ProjectedPaymentTable_Validate objPage,strRowID
	
	Set objPage = Nothing
	
End Function 
		


'This function is for verify Projected payment Table in Closing Disclosure Page 1
'@code
'    BIZ_Common_Forms_ClosingDisclosurePage1_ProjectedPaymentTable_Validate(objParentObject,strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_Forms_ClosingDisclosurePage1_ProjectedPaymentTable_Validate(objParentObject,strRowID)
	
	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 1", "Verify ProjectedPaymentTable field values using row id "&strRowID&" ", Null
	
	Dim objData
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "ProjectedPayments", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDX11MortInsurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox59"), FRM_DS_GetValue(objData, "CDX11MortInsurance"), "CDX11 Monthly Mortgage Insurance"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDX20MortInsurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData, "CDX20MortInsurance"), "CDX20 Monthly Mortgage Insurance"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDX29MortInsurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData, "CDX29MortInsurance"), "CDX29 Monthly Mortgage Insurance"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDX38MortInsurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox73"), FRM_DS_GetValue(objData, "CDX38MortInsurance"), "CDX38 Monthly Mortgage Insurance"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDX12EstEscrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox58"), FRM_DS_GetValue(objData, "CDX12EstEscrow"), "CDX12 Monthly Estimated Escrow "
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDX21EstEscrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox51"), FRM_DS_GetValue(objData, "CDX21EstEscrow"),  "CDX21 Monthly Estimated Escrow"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDX30EstEscrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox65"), FRM_DS_GetValue(objData, "CDX30EstEscrow"), "CDX30 Monthly Estimated Escrow"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDX39EstEscrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox72"), FRM_DS_GetValue(objData, "CDX39EstEscrow"), "CDX39 Monthly Estimated Escrow"
	End If
	
	Set objData = Nothing
	
End Function 



'This function is for verify Projected payment Table in Closing Disclosure Page 1
'@code
'    BIZ_Forms_ClosingDisclosurePage5_ClickCopyFrom1003Page(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Forms_ClosingDisclosurePage5_ClickCopyFrom1003Page(strRowID)

	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 5", "Clicks on 'Copy From 1003' Button", Null
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetContactInformation", strRowID)
	
	BIZ_Forms_Open "Closing Disclosure Page 5"

	SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=Button1").Click

	SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox18").Set FRM_DS_GetValue(objData, "CD5X18_PhoneNumber")
	Set objData = Nothing
End Function 



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ClosingDisclosure.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ClosingVendorInformation.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_ClosingVendorInformation BIZ_Forms_ClosingVendorInformation
'
' List of functions here
' @code
'   Function BIZ_ClosingVendorInformation_SetTitleInsuranceCompany(strRowID)
'   Function BIZ_ClosingVendorInformation_SetEscrowCompany(strRowID)
'   Function BIZ_ClosingVendorInformation_SetDocsPreparedBy(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is to Set Title Insurance Company data
'@code
'    BIZ_ClosingVendorInformation_SetTitleInsuranceCompany(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingVendorInformation_SetTitleInsuranceCompany(strRowID)
    FRM_Logger_ReportInfoEvent "Set Title Insurance Company data", "Set data using Row Id '"&strRowID&"' in the SetTitleInsuranceCompany datasheet", null

    Dim objClosingVendorInfoPage, objData
    Set objClosingVendorInfoPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_ClosingVendorInformation", "SetTitleInsuranceCompany", strRowID)
    
    If FRM_DS_TestDataColumnExists(objData, "411_CompanyName") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_411"), FRM_DS_GetValue(objData, "411_CompanyName")
	End If
    If FRM_DS_TestDataColumnExists(objData, "412_Address") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_412"), FRM_DS_GetValue(objData, "412_Address")
	End If
    If FRM_DS_TestDataColumnExists(objData, "413_City") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_413"), FRM_DS_GetValue(objData, "413_City")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1174_State") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_1174"), FRM_DS_GetValue(objData, "1174_State")
	End If
    If FRM_DS_TestDataColumnExists(objData, "414_Zip") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_414"), FRM_DS_GetValue(objData, "414_Zip")
	End If
	If FRM_DS_TestDataColumnExists(objData, "416_OfficerName") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_416"), FRM_DS_GetValue(objData, "416_OfficerName")
	End If
    
	
    Set objClosingVendorInfoPage = Nothing
    Set objData = Nothing	
End Function



'This function is to set data for Escrow Company Section in Closing Vendor Information
'@code
'    BIZ_ClosingVendorInformation_SetEscrowCompany(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingVendorInformation_SetEscrowCompany(strRowID)
    FRM_Logger_ReportInfoEvent "Set Escrow Company data", "Set data using Row Id '"&strRowID&"' in the SetEscrowCompany datasheet", null

    Dim objClosingVendorInfoPage, objData
    Set objClosingVendorInfoPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_ClosingVendorInformation", "SetEscrowCompany", strRowID)
    
    If FRM_DS_TestDataColumnExists(objData, "610_CompanyName") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_610"), FRM_DS_GetValue(objData, "610_CompanyName")
	End If
	If FRM_DS_TestDataColumnExists(objData, "611_OfficerName") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_611"), FRM_DS_GetValue(objData, "611_OfficerName")
	End If
    If FRM_DS_TestDataColumnExists(objData, "612_Address") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_612"), FRM_DS_GetValue(objData, "612_Address")
	End If
    If FRM_DS_TestDataColumnExists(objData, "613_City") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_613"), FRM_DS_GetValue(objData, "613_City")
	End If
    If FRM_DS_TestDataColumnExists(objData, "1175_State") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_1175"), FRM_DS_GetValue(objData, "1175_State")
	End If
    If FRM_DS_TestDataColumnExists(objData, "614_Zip") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_614"), FRM_DS_GetValue(objData, "614_Zip")
	End If
    
	
    Set objClosingVendorInfoPage = Nothing
    Set objData = Nothing		
End Function



'This function is to set Date For Docs Prepared By Section in Closing Vendor Information
'@code
'    BIZ_ClosingVendorInformation_SetDocsPreparedBy(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingVendorInformation_SetDocsPreparedBy(strRowID)
    FRM_Logger_ReportInfoEvent "Set Docs Prepared By data", "Set data using Row Id '"&strRowID&"' in the SetDocsPreparedBy datasheet", null

    Dim objClosingVendorInfoPage, objData
    Set objClosingVendorInfoPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_ClosingVendorInformation", "SetDocsPreparedBy", strRowID)
    
    If FRM_DS_TestDataColumnExists(objData, "VENDX310_CompanyName") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_VENDX310"), FRM_DS_GetValue(objData, "VENDX310_CompanyName")
	End If
    If FRM_DS_TestDataColumnExists(objData, "VENDX311_Address") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_VENDX311"), FRM_DS_GetValue(objData, "VENDX311_Address")
	End If
    If FRM_DS_TestDataColumnExists(objData, "VENDX312_City") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_VENDX312"), FRM_DS_GetValue(objData, "VENDX312_City")
	End If
    If FRM_DS_TestDataColumnExists(objData, "VENDX313_State") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_VENDX313"), FRM_DS_GetValue(objData, "VENDX313_State")
	End If
    If FRM_DS_TestDataColumnExists(objData, "VENDX314_Zip") Then
		GUI_WebEdit_Set objClosingVendorInfoPage.WebEdit("html id:=l_VENDX314"), FRM_DS_GetValue(objData, "VENDX314_Zip")
	End If
    
	
    Set objClosingVendorInfoPage = Nothing
    Set objData = Nothing	
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ClosingVendorInformation.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\Dialog_MIP.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_USDAMangement
'
'List of functions here
'@code
'
'   Function BIZ_MIPDialog_ClickOk()
'   Function BIZ_MIPDialog_SetDetails(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'@ This function is to close the MIP popup winodw
'@code
'    BIZ_MIPDialog_ClickOk()
'@endcode

Function BIZ_MIPDialog_ClickOk()
    FRM_Logger_ReportInfoEvent "MIP Dialog", "Click Ok button to close the dialog", null
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfButton("swfname:=okBtn")
End Function



'@ This function is to close the MIP popup winodw
'@code
'    BIZ_MIPDialog_SetDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_MIPDialog_SetDetails(strRowID)
	FRM_Logger_ReportInfoEvent "Set MIP/Funding/Guarantee Fee", "Set data using Row Id '"&strRowID&"' in the Dialog_MIP datasheet", null
	Dim objMIPFeeWindow, objData
	
	Set objMIPFeeWindow=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
    Set objData = FRM_DS_GetTestData("Dialog_MIP", "SetFeeDetails", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1107_MIPFundingGuaranteePercent")) Then
    	GUI_SwfEdit_Set objMIPFeeWindow.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData,"1107_MIPFundingGuaranteePercent")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1765_Lock")) Then
        If FRM_DS_GetValue(objData,"1765_Lock")="Y" Then
        	GUI_SwfCheckbox_Set objMIPFeeWindow.SwfCheckBox("swfname:=lockChkbox"),"ON"
        End If
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1199_Percent")) Then
    	GUI_SwfEdit_Set objMIPFeeWindow.SwfEdit("swfname:=rateMI1Txt"),FRM_DS_GetValue(objData,"1199_Percent")
    End If   
   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1198_Mths")) Then
    	GUI_SwfEdit_Set objMIPFeeWindow.SwfEdit("swfname:=monthMI1Txt"),FRM_DS_GetValue(objData,"1198_Mths")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1201_Percent")) Then
    	GUI_SwfEdit_Set objMIPFeeWindow.SwfEdit("swfname:=rateMI2Txt"),FRM_DS_GetValue(objData,"1201_Percent")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1200_Mths")) Then
    	GUI_SwfEdit_Set objMIPFeeWindow.SwfEdit("swfname:=monthMI2Txt"),FRM_DS_GetValue(objData,"1200_Mths")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1205_Percent")) Then
    	GUI_SwfEdit_Set objMIPFeeWindow.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData,"1205_Percent")  
    End If
	
	Set objMIPFeeWindow=Nothing
	Set objData=Nothing
End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\Dialog_MIP.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\FHAManagement.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_FHAManagement BIZ_Forms_FHAManagement
'
' List of functions here
' @code
'
'   Function BIZ_FHAManagement_BasicInfo(strRowID)
'   Function BIZ_FHAManagement_BasicFHAInfonew(strRowID)
'   Function BIZ_FHAManagement_Prequalification_CalcUFMIP()
'	Function BIZ_FHAManagement_SetFHA203k(strRowID)
'	Function BIZ_FHAManagement_VerifyFHA203k(strRowID)
'
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is to set FHA Management Details on Basic Info Tab
'@code
'    BIZ_FHAManagement_BasicInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FHAManagement_BasicInfo(strRowID)

	FRM_Logger_ReportInfoEvent "FHA Management", "Set FHAManagement Basic Info tab using Row Id '"&strRowID&"' in the FHA Mgmt Details datasheet", null
    
    BIZ_Forms_Open "FHA Management"
	Set objData = FRM_DS_GetTestData("Forms_FHAManagement", "BasicInfo", strRowID)
    
	Set objFHAManagementPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
    strPropertyType = FRM_DS_GetValue(objData, "PropertyType")
    Select Case strPropertyType
        Case "1 Unit"
            GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox38_Ctrl"), "ON"
        Case "2 Unit"
            GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox39_Ctrl"), "ON"
        Case "3 - 4 Units"
            GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox40_Ctrl"), "ON"
        Case "Condominium"
            GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox41_Ctrl"), "ON"
        Case "Cooperative"
            GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox42_Ctrl"), "ON"
        Case "Manufactured Housing"
            GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox43_Ctrl"), "ON"
        Case Else
    End Select	
	
    val = FRM_DS_GetValue(objData, "LoanPurpose")
	If UTIL_String_IsNotEmpty(val) Then 
        Select Case val
            Case "203K"    
                GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox7_Ctrl"), "ON"
			Case "StreamLineRefinanceWithAppraisal"    
                GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox2_Ctrl"), "ON"
            Case "Other"    
                GUI_WebCheckBox_Set objFHAManagementPage.Webcheckbox("html id:=__cid_CheckBox14_Ctrl"), "ON"
            Case Else
        End Select	                
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FHAStreamlineType")) Then
		GUI_WebList_Select objFHAManagementPage.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "FHAStreamlineType")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstTimeBuyer")) Then
		SwfWindow("swfname:=MainForm").Page("index:=0").WebElement("innertext:=First-Time Homebuyer").Highlight
		If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=FieldLock1").Image("file name:=field-unlock.png")))Then 
			SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html tag:=Button","type:=button","index:=11").Click
		End If
		If(GUI_Object_IsExist(objFHAManagementPage.WebList("html id:=l_934")))Then 
			GUI_WebList_Select objFHAManagementPage.WebList("html id:=l_934"), FRM_DS_GetValue(objData, "FirstTimeBuyer")
		End If
		If(GUI_Object_IsExist(objFHAManagementPage.WebList("html id:=DropdownBox1")))Then 
			GUI_WebList_Select objFHAManagementPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "FirstTimeBuyer")
		End If
		
	End If
	'748_ClosingDate
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "748_ClosingDate")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=l_748"),FRM_DS_GetValue(objData, "748_ClosingDate") 
	End If
End Function



'This function is to set FHA Management Details on Basic FHA Info Tab
'@code
'    BIZ_FHAManagement_BasicFHAInfonew(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FHAManagement_BasicFHAInfonew(strRowID)

	FRM_Logger_ReportInfoEvent "FHA Management", "Set FHAManagement Basic Info tab using Row Id '"&strRowID&"' in the FHA Mgmt Details datasheet", null

	BIZ_Forms_Open "FHA Management"
	
	Dim objMIPPMIGuaranteeFeeCalPage
    
	Set objMIPPMIGuaranteeFeeCalPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
	Set objData = FRM_DS_GetTestData("Forms_FHAManagement", "BasicInfo", strRowID)
	Set objFHAManagementPage = SwfWindow("swfname:=MainForm").Page("index:=0")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyType")) Then
		GUI_WebCheckbox_Set objFHAManagementPage.WebCheckbox("html id:=__cid_CheckBox38_Ctrl"),FRM_DS_GetValue(objData, "PropertyType") 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FHACase")) Then
	   GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox11"),FRM_DS_GetValue(objData, "FHACase") 
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Chums")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox39"),FRM_DS_GetValue(objData, "Chums")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FHALenderID")) Then
	   GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox22"),FRM_DS_GetValue(objData, "FHALenderID")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SOA")) Then	      
		objFHAManagementPage.WebEdit("html id:=TextBox11").Click
		GUI_WinEdit_Type objFHAManagementPage.WinEdit("nativeclass:=Edit","index:=0"), FRM_DS_GetValue(objData, "SOA")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SponderID")) Then
	   GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox23"),FRM_DS_GetValue(objData, "SponderID")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FundingDate")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox13"), FRM_DS_GetValue(objData, "FundingDate")
	End If
	
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"),"Prequalification"
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "UFMIP")) Then
		SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=StandardButton1").Image("name:=Image").Click
	
		GUI_SwfEdit_Set objMIPPMIGuaranteeFeeCalPage.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData, "UFMIP")
		Wait g_ShortWaitMedium
	
		GUI_SwfButton_Click objMIPPMIGuaranteeFeeCalPage.SwfButton("swfname:=okBtn")
		Wait g_TinyWaitSmall
		GUI_SwfButton_Click objMIPPMIGuaranteeFeeCalPage.SwfButton("swfname:=cancelBtn")
	End If
End Function



'This function is to calculate UFMIP on Prequalification Tab of FHA Management form
'@code
'    BIZ_FHAManagement_Prequalification_CalcUFMIP()
'@endcode

Function BIZ_FHAManagement_Prequalification_CalcUFMIP()

	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"),"Prequalification"
    'button next to UFMIP
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0").WebButton("html id:=StandardButton1")

	Dim objMIPPMIGuaranteeFeeCalPage
	Set objMIPPMIGuaranteeFeeCalPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")

	GUI_SwfButton_Click objMIPPMIGuaranteeFeeCalPage.SwfButton("swfname:=btnGetMI")
	If objMIPPMIGuaranteeFeeCalPage.SwfWindow("swfname:=MIRecordsSelectForm").Exist(10) Then
		GUI_SwfObject_ClickXY objMIPPMIGuaranteeFeeCalPage.SwfWindow("swfname:=MIRecordsSelectForm").SwfObject("swfname:=listViewMI"),25, 25
		GUI_SwfButton_Click objMIPPMIGuaranteeFeeCalPage.SwfWindow("swfname:=MIRecordsSelectForm").SwfButton("swfname:=tbnSelect")
	End If

	GUI_SwfButton_Click objMIPPMIGuaranteeFeeCalPage.SwfButton("swfname:=okBtn") 

End Function



'This function is to set FHA Management Details on FHA 203k tab
'@code
'    BIZ_FHAManagement_SetFHA203k(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FHAManagement_SetFHA203k(strRowID)

	FRM_Logger_ReportInfoEvent "FHA Management", "Set FHAManagement FHA 203k tab using Row Id '"&strRowID&"' in the FHA203k datasheet", null
    
	Set objData = FRM_DS_GetTestData("Forms_FHAManagement", "SetFHA203k", strRowID)
    
	Set objFHAManagementPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"), "FHA 203k"
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX80_ConstructionCost")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "MAX23KX80_ConstructionCost")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX80_ConstructionCostCashLoans")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=l_max23kx80"), FRM_DS_GetValue(objData, "MAX23KX80_ConstructionCostCashLoans")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX80_ConstructionCostLtdLoans")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox51"), FRM_DS_GetValue(objData, "MAX23KX80_ConstructionCostLtdLoans")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX19_ProfessionalFees")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=l_max23kx19"), FRM_DS_GetValue(objData, "MAX23KX19_ProfessionalFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX20_ConsultationlFees")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "MAX23KX20_ConsultationlFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX113_InspectionFees")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=l_max23kx113"), FRM_DS_GetValue(objData, "MAX23KX113_InspectionFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX114_UpdateFees")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox54"), FRM_DS_GetValue(objData, "MAX23KX114_UpdateFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX113_InspectionFees1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "MAX23KX113_InspectionFees1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX114_UpdateFees1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "MAX23KX114_UpdateFees1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX21_PermitFees")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "MAX23KX21_PermitFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX21_PermitFees1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox53"), FRM_DS_GetValue(objData, "MAX23KX21_PermitFees1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX81_FeasibilityStudy")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "MAX23KX81_FeasibilityStudy")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX10_ContingencyReserves")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "MAX23KX10_ContingencyReserves")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX10_ContingencyReserves1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox62"), FRM_DS_GetValue(objData, "MAX23KX10_ContingencyReserves1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX17_PaymentReserves")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox13"), FRM_DS_GetValue(objData, "MAX23KX17_PaymentReserves")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX26_DiscountPoints")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox61"), FRM_DS_GetValue(objData, "MAX23KX26_DiscountPoints")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX26_DiscountPoints1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "MAX23KX26_DiscountPoints1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAXWPUR29_InducementToPurchase")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox20"), FRM_DS_GetValue(objData, "MAXWPUR29_InducementToPurchase")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX5_PropertyValue")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "MAX23KX5_PropertyValue")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX5_PropertyValue1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox19"), FRM_DS_GetValue(objData, "MAX23KX5_PropertyValue1")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX6_ImprovedValue")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox16"), FRM_DS_GetValue(objData, "MAX23KX6_ImprovedValue")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX6_ImprovedValue1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox68"), FRM_DS_GetValue(objData, "MAX23KX6_ImprovedValue1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX89_MortgageLimit")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox24"), FRM_DS_GetValue(objData, "MAX23KX89_MortgageLimit")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX8_ImprovementsAmount")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox35"), FRM_DS_GetValue(objData, "MAX23KX8_ImprovementsAmount")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX97_SystemActualCost")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox33"), FRM_DS_GetValue(objData, "MAX23KX97_SystemActualCost")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX95_BorrowersFunds")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox57"), FRM_DS_GetValue(objData, "MAX23KX95_BorrowersFunds")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX95_BorrowersFunds1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox57"), FRM_DS_GetValue(objData, "MAX23KX95_BorrowersFunds1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX91_MaterialCosts")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox42"), FRM_DS_GetValue(objData, "MAX23KX91_MaterialCosts")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX92_50PercentCosts")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox70"), FRM_DS_GetValue(objData, "MAX23KX92_50PercentCosts")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX92_50PercentCosts1")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox40"), FRM_DS_GetValue(objData, "MAX23KX92_50PercentCosts1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3052_ExistingDebtAmount")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox21"), FRM_DS_GetValue(objData, "3052_ExistingDebtAmount")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23K108_FeesWithLoans")) Then
		GUI_WebEdit_Set objFHAManagementPage.WebEdit("html id:=TextBox19"), FRM_DS_GetValue(objData, "MAX23K108_FeesWithLoans")
	End If
End Function



'This function is to Verify FHA Management Details on FHA 203k tab
'@code
'    BIZ_FHAManagement_VerifyFHA203k(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FHAManagement_VerifyFHA203k(strRowID)

	FRM_Logger_ReportInfoEvent "FHA Management", "Verify FHAManagement FHA 203k tab using Row Id '"&strRowID&"' in the FHA203k datasheet", null
    
	BIZ_Forms_Open "FHA Management"

	Set objData = FRM_DS_GetTestData("Forms_FHAManagement", "VerifyFHA203k", strRowID)
    
	Set objFHAManagementPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX82_MortgageFeesTotal")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=TextBox63"), FRM_DS_GetValue(objData, "MAX23KX82_MortgageFeesTotal"), "Mortgage Fees Total"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX44_OriginationFees")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=l_X44_1"), FRM_DS_GetValue(objData, "MAX23KX44_OriginationFees"), "Origination Fees"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX27_DiscountPoints")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=TextBox60"), FRM_DS_GetValue(objData, "MAX23KX27_DiscountPoints"), "Discount Points"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX84_PurchasePriceLessInducement")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=l_X84"), FRM_DS_GetValue(objData, "MAX23KX84_PurchasePriceLessInducement"), "Purchase Price Less Inducement"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX30_AdjustedAsIsValue")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=TextBox17"), FRM_DS_GetValue(objData, "MAX23KX30_AdjustedAsIsValue"), "Adjusted As-Is Value"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX7_2Fx110Percent")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=l_X7"), FRM_DS_GetValue(objData, "MAX23KX7_2Fx110Percent"), "2F X 110%"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX93_InitialDrawClosingTotal")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData, "MAX23KX93_InitialDrawClosingTotal"), "Initial Draw Closing Total"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX44_OriginationFees_InitialDraw")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=TextBox72"), FRM_DS_GetValue(objData, "MAX23KX44_OriginationFees_InitialDraw"), "Origination Fees"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MAX23KX27_DiscountPoints_InitialDraw")) Then
		GUI_Object_ValidateValue objFHAManagementPage.WebEdit("html id:=TextBox71"), FRM_DS_GetValue(objData, "MAX23KX27_DiscountPoints_InitialDraw"), "Discount points"
	End If

End Function



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\FHAManagement.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\FNMAStreamlined.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_FNMAStreamlined BIZ_Forms_FNMAStreamlined
'
' List of functions here
'@code
'   Function BIZ_FNMAStreamlined_SetData(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set information on FNMA Streamlined page
'@code
'    BIZ_FNMAStreamlined_SetData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FNMAStreamlined_SetData(strRowID)

    FRM_Logger_ReportInfoEvent "FNMA Streamlined 1003", "Set data using Row Id '"&strRowID&"' in the FNMAStreamlined datasheet", null
	
    Set objData = FRM_DS_GetTestData("Forms_FNMAStreamlined", "FNMAStreamlined", strRowID)	
	BIZ_Forms_Open "FNMA Streamlined 1003"
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DiscountPoints")) then 
        If 	objPage.Webbutton("html id:=FieldLock2","index:=0").Exist(5) Then
		    If objPage.WebEdit("html id:=l_1093","index:=0").GetROProperty("readonly") = 1 Then
               objPage.WebButton("html id:=FieldLock2","index:=0").Click
            End If   
		End If
		GUI_WebEdit_Set objPage.WebEdit("html id:=l_1093","index:=0"), FRM_DS_GetValue(objData, "DiscountPoints") 	
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MIPRefund")) then 	
		GUI_WebEdit_Set objPage.WebEdit("html id:=l_1134","index:=0"), FRM_DS_GetValue(objData, "MIPRefund") 	
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IndexMargin")) then 
		GUI_WebEdit_Set objPage.WebEdit("html id:=l_689"), FRM_DS_GetValue(objData, "IndexMargin")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IndexValue")) then
		GUI_WebEdit_Set objPage.WebEdit("html id:=l_688"), FRM_DS_GetValue(objData, "IndexValue")		
    End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AmortizationType")) Then	
        GUI_WebCheckBox_Set objPage.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&FRM_DS_GetValue(objData, "AmortizationType")), "ON"
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LenderCase")) then 	
		GUI_WebEdit_Set objPage.WebEdit("html id:=l_305","index:=0"), FRM_DS_GetValue(objData, "LenderCase") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RefinanceType")) then 	
		SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebElement("innerhtml:=Title will be held").Highlight
		GUI_WebList_Select objPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "RefinanceType")
	End If
	'Set Heloc Credit Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CASASRN.X168_HelocCreditLimit")) then 
		valHelocCreditLimit=FRM_DS_GetValue(objData, "CASASRN.X168_HelocCreditLimit")	
		GUI_WebEdit_Set objPage.WebEdit("html id:=I_CASASRNX168"), valHelocCreditLimit
		FRM_logger_ReportInfoEvent "CASASRN.X168_HelocCreditLimit","Field CASASRN.X168_HelocCreditLimit has been set as " &valHelocCreditLimit& " ", null		
	End If
	Set objData = Nothing
	Set objPage  = Nothing	
	
End Function


'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\FNMAStreamlined.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\Forms.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms BIZ_Forms
'
' List of functions here
' @code
'	Function BIZ_Forms_ShowAll()
'	Function BIZ_Forms_GetFormTitle()
'	Function BIZ_Forms_Open(strFormName)
'	Function BIZ_Forms_CheckFieldID(objMain, strFieldID)
'	Function BIZ_Forms_VerifyFieldExists(strFieldname, intDelay)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for select Forms tab and show all forms in order
'@code
'    BIZ_Forms_ShowAll()
'@endcode

Function BIZ_Forms_ShowAll()
	GUI_list_Select SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"), "Forms"
	If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=chkAlphaForms"), 10))Then
		GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=chkAlphaForms"), "ON"
		GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=allFormBox"), "ON"
	End If
End Function



'This function is for get Title of Form
'@code
'    BIZ_Forms_GetFormTitle()
'@endcode

Function BIZ_Forms_GetFormTitle()
	Set objLabel = SwfWindow("swfname:=MainForm").SwfLabel("swfname:=titleLbl|labelTitle")
	If objLabel.Exist(10) Then
		BIZ_Forms_GetFormTitle = objLabel.GetROProperty("text")
	Else
		BIZ_Forms_GetFormTitle = ""
	End If
    set objLabel = Nothing
End Function



'This function is for set Borrower Information 
'@code
'    BIZ_Forms_Open(strFormName)
'@endcode
'@param strFormName string Title of the Form to open

Function BIZ_Forms_Open(strFormName)

    FRM_Logger_ReportInfoEvent "Open Form", "Form to open is  '"&strFormName&"'", null
    
    GUI_list_Select SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"), "Forms"
    BIZ_Forms_ShowAll
	Wait g_TinyWaitSmall
    If(InStr(BIZ_Forms_GetFormTitle(), strFormName) = 0) Then
        GUI_List_Select SwfWindow("swfname:=MainForm").SwfList("swfname:=emFormMenuBox"), strFormName
	End If	
	
End Function



'This function is for Check Field ID 
'@code
'    BIZ_Forms_CheckFieldID(objMain, strFieldID)
'@endcode
'@param objMain main object 
'@param strFieldID the field id of main object

Function BIZ_Forms_CheckFieldID(objMain, strFieldID)
	FRM_Logger_ReportInfoEvent "Check Field ID", "Field ID is '"&strFieldID&"'", null
	
	Set objWndFieldHelpDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FieldHelpDialog")
	Set objMerury = Createobject("Mercury.DeviceReplay")
	
	objMerury.KeyDown "29"
	objMain.FireEvent "onclick"
	objMerury.KeyUp "29" 
	
	intIdLength = Len(strFieldID)
	strActualText = GUI_Object_GetPropertyValue(objWndFieldHelpDialog.SwfLabel("swfname:=lblText"), "text")
	isMatch = StrComp(strFieldID, Left(strActualText, intIdLength))
	
	If isMatch = 0 Then
		FRM_Logger_ReportPassEvent "Check Field ID", "Field ID is '"&strFieldID&"'", 	null
	Else
		FRM_Logger_ReportFailEvent "Check Field ID", "Field ID isn't '"&strFieldID&"'", 	null 
	End If		
	BIZ_Forms_CheckFieldID = isMatch
	GUI_Window_Close objWndFieldHelpDialog
	
	Set objWndFieldHelpDialog= nothing
	Set objMerury = nothing
End Function



'This function is to verify if the field exists in the form 
'@code
'    BIZ_Forms_VerifyFieldExists(strFieldName, intDelay)
'@endcode
'@param strFieldName - Field ID in Encompass 
'@param intDelay - Number of seconds to wait

Function BIZ_Forms_VerifyFieldExists(strFieldname, intDelay)
	SwfWindow("swfname:=MainForm").Type micCtrlDwn + "g" + micCtrlUp
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FieldGoToDialog").SwfEdit("swfname:=findTxt"), strFieldname
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FieldGoToDialog").SwfButton("swfname:=findBtn")
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("index:=0").Static("text:=Encompass was unable to find.*"), intDelay) Then		
		BIZ_VerifyFieldExists = False
		GUI_Dialog_Encompass_OK ""
	Else
		BIZ_VerifyFieldExists = True
	End If
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\Forms.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\FreddieMacAdditionalData.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_FHAManagement BIZ_Forms_FHAManagement
'
' List of functions here
'@code
'   Function BIZ_SetLenderInformation(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is to set FHA Management Details on Basic Info Tab
'@code
'    BIZ_SetLenderInformation(strRowID)
'@endcode

Function BIZ_SetLenderInformation(strRowID)

	FRM_Logger_ReportInfoEvent "Freddie Mac Additional Data", "Set Lender Information tab in the Freddie Mac Additional data datasheet", null
    
    BIZ_Forms_Open "Freddie Mac Additional Data"
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	Set objData = FRM_DS_GetTestData("Forms_FreddieMacAdditionalData", "LendorInformation", strRowID)	
    
	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_682"), FRM_DS_GetValue(objData, "682_FirstPaymentDate") 

	FRM_Logger_ReportPassEvent "Freddie Mac Additional Data", "Lender Details are entered for the Loan", null

End Function

'@} ''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\FreddieMacAdditionalData.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\HMDAInformation.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_HMDAInformation BIZ_Forms_HMDAInformation
'
' List of functions here
' @code

'   Function BIZ_HMDAInformation_SetNMLSInfo(strRowID)
'   Function BIZ_HMDAInformation_2018DemographicInfo(strRowID)
'   Function BIZ_Common_HMDAInformation_2018DemographicInfo(objHMDA2018Page, strRowID)
'   Function BIZ_HMDAPageObj()
'   Function BIZ_HMDAInformation_2018Ethnicity(strRowID)
'   Function BIZ_Common_HMDAInformation_2018Ethnicity(strRowID)
'   Function BIZ_HMDAInformation_2018Race(strRowID)
'   Function BIZ_Common_HMDAInformation_2018Race(strRowID)
'   Function BIZ_HMDA_2018Sex(StrRowID)
'   Function BIZ_Common_HMDAInformation_2018Sex(strRowID)
'   Function BIZ_HMDA_SetHMDAYear(strRowID)
'   Function BIZ_HMDA_GovtMonitoring(strRowID)
'   Function BIZ_HMDA_Verify2WayMapping(strRowID)
'   Function BIZ_HMDA_2018LoanAndOriginationInformation(strRowID)


'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set NMLS information on HMDA Information Page
'@code
'    BIZ_HMDAInformation_SetNMLSInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_HMDAInformation_SetNMLSInfo(strRowID)

    FRM_Logger_ReportInfoEvent "HMDA Information", "Set data using Row Id '"&strRowID&"' in the SetNMLSInfo datasheet", null
	
	BIZ_Forms_Open "HMDA Information"
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Set objData = FRM_DS_GetTestData("Forms_HMDAInformation", "SetNMLSInfo", strRowID)
	strvalue=""
	If SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm").Exist(1) Then
		strvalue = SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm").GetSelection
	End If
	
	If  instr(1,strvalue,"Purchased Loans") > 0 Then
		GUI_WebButton_click objPage.WebButton("html id:=Button6")
	else
		GUI_WebButton_click objPage.WebButton("html id:=Button1")
	End If	

    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NMLS.X9_BrachLocationID")) Then	
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "NMLS.X9_BrachLocationID") 	
	End If	
    	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "InitialApplicationAmount")) Then	
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=TextBox8","index:=0"), FRM_DS_GetValue(objData, "InitialApplicationAmount") 	
	End If
	
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NetInitial_Final")) Then	
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=TextBox10","index:=0"), FRM_DS_GetValue(objData, "NetInitial_Final") 	
	End If

		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HMDA.X11_PropertyType")) Then	
		GUI_WebList_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebList("html id:=DropdownBox12","index:=0"), FRM_DS_GetValue(objData, "HMDA.X11_PropertyType") 	
	End If	
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "353_LTV")) Then	
		GUI_WebButton_click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebButton("html id:=FieldLock11","index:=0")
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=l_353","index:=0"), FRM_DS_GetValue(objData, "353_LTV") 	
	End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "976_CLTV")) Then	
		GUI_WebButton_click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebButton("html id:=FieldLock12","index:=0")
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=l_976","index:=0"), FRM_DS_GetValue(objData, "976_CLTV") 	
	End If	
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HMDA.X11_PropertyType")) Then	
		GUI_WebList_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebList("html id:=DropdownBox12","index:=0"), FRM_DS_GetValue(objData, "HMDA.X11_PropertyType") 	
	End If	
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "353_LTV")) Then	
		GUI_WebButton_click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebButton("html id:=FieldLock11","index:=0")
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=l_353","index:=0"), FRM_DS_GetValue(objData, "353_LTV") 	
	End If	

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Loan Purpose")) Then	
		GUI_WebList_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebList("html id:=DropdownBox1","index:=0"), FRM_DS_GetValue(objData, "Loan Purpose") 	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Loan Type")) Then	
		strPurpose="value:="&FRM_DS_GetValue(objData, "Loan Type")
		GUI_WebCheckbox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebCheckBox("html id:=__cid_CheckBox.*",strPurpose), "ON"	
	End If

	
	IF GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("Text:=Encompass").WinButton("Text:=OK"), 5) Then	
	
	  GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("Text:=Encompass").WinButton("Text:=OK")
	
	End IF
	
	
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Lien Status")) Then	
		GUI_WebList_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebList("html id:=DropdownBox11","index:=0"), FRM_DS_GetValue(objData, "Lien Status") 	
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NMLS Loan Type")) Then	
		GUI_WebButton_click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebButton("html id:=FieldLock3","index:=0")
		GUI_WebList_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebList("html id:=l_NMLSX1","index:=0"), FRM_DS_GetValue(objData, "NMLS Loan Type") 	
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Reverse Mortgage Type")) Then	
		GUI_WebList_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebList("html id:=DropdownBox5","index:=0"), FRM_DS_GetValue(objData, "Reverse Mortgage Type") 	
	End If
	

  	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Repurchased Date")) Then	
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=TextBox1","index:=0"), FRM_DS_GetValue(objData, "Repurchased Date") 	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Repurchased Cost")) Then	
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=TextBox2","index:=0"), FRM_DS_GetValue(objData, "Repurchased Cost") 	
	End If


   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Loan Production checkbox")) Then		
		Set objServiceCheckBox= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebCheckBox("html id:=__cid_CheckBox5_Ctrl","index:=0")	
	       	If FRM_DS_GetValue(objData, "Loan Production checkbox")="ON" Then    	
			       	If (GUI_Object_GetPropertyValue(objServiceCheckBox,"Checked")) Then		
					   FRM_Logger_ReportInfoEvent "Servicing Released Check Box","Servicing Released Check Box Already Set ON", null		       				
					Else	
						GUI_SwfCheckbox_Set objServiceCheckBox, "ON"	
					End If 
	       	        GUI_Object_ValidateChecked objServiceCheckBox, "1","Verified Servicing Released Check Box  Set ON"	       	
					ElseIf FRM_DS_GetValue(objData, "Loan Production checkbox")="OFF" Then
	                If (GUI_Object_GetPropertyValue(objServiceCheckBox,"Checked")) Then		
						GUI_SwfCheckbox_Set objServiceCheckBox, "OFF"       				
					Else	
						FRM_Logger_ReportInfoEvent "Servicing Released Check Box","Servicing Released Check Box Already Set OFF", null		
					End If 
	       	        GUI_Object_ValidateChecked objServiceCheckBox, "0","Verified Servicing Released Check Box  Set OFF"
	       	End If    
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NMLS ID")) Then	
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0").WebEdit("html id:=I_3238","index:=0"), FRM_DS_GetValue(objData, "NMLS ID") 	
	End If
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
	
	

	Set objPage 			= Nothing	
	Set objServiceCheckBox	= Nothing
	Set objData 			= Nothing

	
	
End Function
'This function is for set 2018 Demographic information for HDMA Information PAge
'@code
'    BIZ_HMDAInformation_2018DemographicInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_HMDAInformation_2018DemographicInfo(strRowID)
   FRM_Logger_ReportInfoEvent "HMDA Information Page","Set HMDA 2018 DemographicInfo '" &strRowID& "' in HMDA Information Page",null
   BIZ_Forms_open "HMDA Information"
   Set objHMDA2018Page =  SwfWindow("swfname:=MainForm").Page("index:=0")
   BIZ_Common_HMDAInformation_2018DemographicInfo objHMDA2018Page, strRowID
End Function


'This function is a common function for set Declarations on 1003 page 3 form or Data Templates
'@code
'    BIZ_Common_1003Page3_SetDeclarations(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_HMDAInformation_2018DemographicInfo(objHMDA2018Page, strRowID)
	Dim objData
	FRM_Logger_ReportInfoEvent "Set 2018 Demographoc information in HMDA infomation page","Set 2018 Demographic information in HMDA page using row id:"&strRowID&" ",Null
	Set objData = FRM_DS_GetTestData("Forms_HMDAInformation","2018DemographicInfoProvThru",strRowID)
  ' Borrower Demographic Info
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4143_BorDemographicInformationProvided")) Then
	     val=FRM_DS_GetValue(objData,"4143_BorDemographicInformationProvided")
   		 GUI_WebCheckbox_Set objHMDA2018Page.WebCheckBox("value:="&val,"title:=.*borrower demographic information.*"),"ON"	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4121_BorEthnicity")) Then 
	    GUI_WebList_Select objHMDA2018Page.WebList("html id:=DropdownBox13"), FRM_DS_GetValue(objData,"4121_BorEthnicity")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4122_BorRace")) Then 
	    GUI_List_Select objHMDA2018Page.WebList("html id:=DropdownBox37"), FRM_DS_GetValue(objData,"4122_BorRace")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4123_BorSex")) Then 
	End If
	
	
	'Co-Borrower Demographic Info
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4131_CoborDemographicInformationProvided")) Then
	     val=FRM_DS_GetValue(objData,"4131_CoborDemographicInformationProvided")
   		 GUI_WebCheckbox_Set objHMDA2018Page.WebCheckBox("value:="&val,"title:=.*co-borrower demographic information.*"),"ON"	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4132_CoborEthnicity")) Then 
	    GUI_WebList_Select objHMDA2018Page.WebList("html id:=DropdownBox39"), FRM_DS_GetValue(objData,"4132_CoborEthnicity")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4133_CoborRace")) Then 
	    GUI_List_Select objHMDA2018Page.WebList("html id:=DropdownBox40"), FRM_DS_GetValue(objData,"4133_CoborRace")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4134_CoborSex")) Then 
	    GUI_List_Select objHMDA2018Page.WebList("html id:=DropdownBox41"), FRM_DS_GetValue(objData,"4134_CoborSex")
	End If
	
	'Co-borrower no co-applicant
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3840_CoborNoCoapplicant")) Then
   		 GUI_WebCheckbox_Set objHMDA2018Page.WebCheckBox("html id:=__cid_CheckBox8_Ctrl"),FRM_DS_GetValue(objData,"3840_CoborNoCoapplicant")	
	End If
	
	Set objData=nothing
	
End Function




' This function has common page object for the HMDA page
'@code
'   BIZ_HMDAPageObj()
'@endcode
  
Function BIZ_HMDAPageObj()
	set BIZ_HMDAPageObj= SwfWindow("swfname:=MainForm").Page("index:=0")
End Function



'This function is use to set  2018ethnicity information
'@code
'   BIZ_HMDAInformation_2018Ethnicity(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
 
 Function BIZ_HMDAInformation_2018Ethnicity(strRowID)
 	FRM_Logger_ReportInfoEvent "HMDA Information Page","Set HMDA 2018 Ethnicity '" &strRowID& "' in HMDA Information Page",null
   BIZ_Forms_open "HMDA Information"
 '  Set objHMDA2018Page =  SwfWindow("swfname:=MainForm").Page("index:=0")
   BIZ_Common_HMDAInformation_2018Ethnicity strRowID
 End Function
 
 
 
 'This function is use to set values in  2018ethnicity information
'@code
'   BIZ_Common_HMDAInformation_2018Ethnicity(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
 
 Function BIZ_Common_HMDAInformation_2018Ethnicity(strRowID)
	 Dim objData
	 FRM_Logger_ReportInfoEvent "Set 2018 Ethnicity in HMDA information form for borrower and coborrower","Set Ethnicity information in HMDA page using RowID: "&strRowID& " ",null
	set objData = FRM_DS_GetTestData("Forms_HMDAInformation","2018Ethnicity",strRowID)
	 
	 'Borrower Ethnicity fields
	 	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1523_BorEthnicity")) Then
	 	 val=FRM_DS_GetValue(objData,"1523_BorEthnicity")
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox34_Ctrl"),"on"
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4144_BorMexican")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxMexican_Ctrl"),FRM_DS_GetValue(objData,"4144_BorMexican")
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4145_BorPuerto")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxPuertoRican_Ctrl"),FRM_DS_GetValue(objData,"4145_BorPuerto")
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4146_BorCuban")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCuban_Ctrl"),FRM_DS_GetValue(objData,"4146_BorCuban")
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4147_BorOtherHispanic")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxOtherHispanic_Ctrl"),FRM_DS_GetValue(objData,"4147_BorOtherHispanic")
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4125_BorOtherOrigin")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=textboxOtherHispanic"),FRM_DS_GetValue(objData,"4125_BorOtherOrigin")
	 	 End If
	 	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4211_BorNotHispanicorLatino")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox32_Ctrl"),FRM_DS_GetValue(objData,"4211_BorNotHispanicorLatino")
	 	 End If
	 	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4205_BorDoNotWish")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkborrethnicitydonotwish_Ctrl"),FRM_DS_GetValue(objData,"4205_BorDoNotWish")
	 	 End If
	 	 '18.1 Field changes Information Not Provided Field added
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4243_BorInfoNotProvided")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkBorEthInfoNotProvided_Ctrl"),FRM_DS_GetValue(objData,"4243_BorInfoNotProvided")
	 	 End If
 	 
 	 'Co-borrower  Ethnicty fields
 	     If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1531_CoborEthnicity")) Then
 	         val=FRM_DS_GetValue(objData,"1531_CoborEthnicity")
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox45_Ctrl"),"on"
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4159_CoborMexican")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerMexican_Ctrl"),FRM_DS_GetValue(objData,"4159_CoborMexican")
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4160_CoborPuerto")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerPuertoRican_Ctrl"),FRM_DS_GetValue(objData,"4160_CoborPuerto")
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4161_CoborCuban")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerCuban_Ctrl"),FRM_DS_GetValue(objData,"4161_CoborCuban")
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4162_CoborOtherHispanic")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerOtherHispanic_Ctrl"),FRM_DS_GetValue(objData,"4162_CoborOtherHispanic")
	 	 End If
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4136_CoborOtherOrigin")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=textboxCoBorrowerOtherHispanic"),FRM_DS_GetValue(objData,"4136_CoborOtherOrigin")
	 	 End If
	 	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4188_CoborNoCoApplicant")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox22_Ctrl"),FRM_DS_GetValue(objData,"4188_CoborNoCoApplicant")
	 	 End If	 
 		 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4214_CoborNotHispanicorLatino")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox48_Ctrl"),FRM_DS_GetValue(objData,"4214_CoborNotHispanicorLatino")
	 	 End If	
	 	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4206_CoborDoNotWish")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkcoborrethnicitydonotwish_Ctrl"),FRM_DS_GetValue(objData,"4206_CoborDoNotWish")
	 	 End If	
	 	  '18.1 Field changes Information Not Provided Field added
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4246_CoBorInfoNotProvided")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkCoBorEthInfoNotProvided_Ctrl"),FRM_DS_GetValue(objData,"4246_CoBorInfoNotProvided")
	 	 End If
 End Function
 
 

'This function is use to set  2018Race information
'@code
'   BIZ_HMDAInformation_2018Race(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
 
 Function BIZ_HMDAInformation_2018Race(strRowID)
  FRM_Logger_ReportInfoEvent "HMDA Information Page","Set HMDA 2018 Race '" &strRowID& "' in HMDA Information Page",null
   BIZ_Forms_open "HMDA Information"
  BIZ_Common_HMDAInformation_2018Race strRowID 	
 End Function
 
 
 
 
'This function is use to set values in 2018Race 
'@code
'   BIZ_Common_HMDAInformation_2018Race(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet 
 
 Function BIZ_Common_HMDAInformation_2018Race(strRowID)
    Dim objData
 	FRM_Logger_ReportInfoEvent "Set 2018 HMDA Race for borrower and Coborrower","Set HMDA 2018 RAce information using RowID:" &RowID& " ", null
 	set objData = FRM_DS_GetTestData("Forms_HMDAInformation", "2018Race",strRowID)
 	'Enter Race for Borrower
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1524_BorAmericanIndianAlaskaNative")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxAmericanIndian_Ctrl"),FRM_DS_GetValue(objData,"1524_BorAmericanIndianAlaskaNative")
		End If
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4126_BorEnterTribeName")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=textboxAmericanIndian"),FRM_DS_GetValue(objData,"4126_BorEnterTribeName")
	 	End If		
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1525_BorAsian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxAsian_Ctrl"),FRM_DS_GetValue(objData,"1525_BorAsian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4148_BorAsianIndian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxAsianIndian_Ctrl"),FRM_DS_GetValue(objData,"4148_BorAsianIndian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4149_BorChinese")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxChinese_Ctrl"),FRM_DS_GetValue(objData,"4149_BorChinese")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4150_BorFilipino")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxFilipino_Ctrl"),FRM_DS_GetValue(objData,"4150_BorFilipino")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4151_BorJapanese")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxJapanese_Ctrl"),FRM_DS_GetValue(objData,"4151_BorJapanese")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4152_BorKorean")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxKorean_Ctrl"),FRM_DS_GetValue(objData,"4152_BorKorean")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4153_BorVietnamese")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxVietnamese_Ctrl"),FRM_DS_GetValue(objData,"4153_BorVietnamese")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4154_BorOtherAsian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxOtherAsian_Ctrl"),FRM_DS_GetValue(objData,"4154_BorOtherAsian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4128_BorEnterOtherAsianRace")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=textboxOtherAsian"),FRM_DS_GetValue(objData,"4128_BorEnterOtherAsianRace")
	 	End If
	 	
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1526_BorBlackAfricanAmerican")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox33_Ctrl"),FRM_DS_GetValue(objData,"1526_BorBlackAfricanAmerican")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1527_BorNativeHawaiianPacificIslander")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxHawaiian_Ctrl"),FRM_DS_GetValue(objData,"1527_BorNativeHawaiianPacificIslander")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4155_BorNativeHawaiian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxNativeHawaiianIndicator_Ctrl"),FRM_DS_GetValue(objData,"4155_BorNativeHawaiian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4156_BorGuamanian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxGuam_Ctrl"),FRM_DS_GetValue(objData,"4156_BorGuamanian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4157_BorSamoan")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxSamoan_Ctrl"),FRM_DS_GetValue(objData,"4157_BorSamoan")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4158_BorOtherPacificIslanderRace")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxOtherPacific_Ctrl"),FRM_DS_GetValue(objData,"4158_BorOtherPacificIslanderRace")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4130_BorEnterOtherPacificIslanderRace")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=textboxOtherPacific"),FRM_DS_GetValue(objData,"4130_BorEnterOtherPacificIslanderRace")
	 	End If
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1528_BorWhite")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=__cid_CheckBox39_Ctrl"),FRM_DS_GetValue(objData,"1528_BorWhite")
	 	End If
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1529_BorDontWishToProvideInfo")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox40_Ctrl"),FRM_DS_GetValue(objData,"1529_BorDontWishToProvideInfo")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1530_BorNotApplicable")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox41_Ctrl"),FRM_DS_GetValue(objData,"1530_BorNotApplicable")
		End If
		'18.1 Field changes Information Not Provided Field added
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4244_BorInfotNotProvided")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkBorRaceInfoNotProvided_Ctrl"),FRM_DS_GetValue(objData,"4244_BorInfotNotProvided")
	 	 End If
  ' Co-borrower RAce
  
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1532_CoborAmericanIndian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerAmericanIndian_Ctrl"),FRM_DS_GetValue(objData,"1532_CoborAmericanIndian")
		End If
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4137_CoborEnterTribeName")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=textboxCoBorrowerAmericanIndian"),FRM_DS_GetValue(objData,"4137_CoborEnterTribeName")
	 	End If		
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1533_CoborAsian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerAsian_Ctrl"),FRM_DS_GetValue(objData,"1533_CoborAsian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4163_CoborAsianIndian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerAsianIndian_Ctrl"),FRM_DS_GetValue(objData,"4163_CoborAsianIndian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4164_CoborChinese")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerChinese_Ctrl"),FRM_DS_GetValue(objData,"4164_CoborChinese")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4165_CoborFilipino")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerFilipino_Ctrl"),FRM_DS_GetValue(objData,"4165_CoborFilipino")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4166_CoborJapanese")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerJapanese_Ctrl"),FRM_DS_GetValue(objData,"4166_CoborJapanese")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4167_CoborKorean")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerKorean_Ctrl"),FRM_DS_GetValue(objData,"4167_CoborKorean")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4168_CoborVietnamese")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerVietnamese_Ctrl"),FRM_DS_GetValue(objData,"4168_CoborVietnamese")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4169_CoborOtherAsian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerOtherAsian_Ctrl"),FRM_DS_GetValue(objData,"4169_CoborOtherAsian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4139_CoborEnterOtherAsianRace")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=textboxCoBorrowerOtherAsian"),FRM_DS_GetValue(objData,"4139_CoborEnterOtherAsianRace")
	 	End If
	 	
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1534_CoborBlackAfricanAmerican")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox63_Ctrl"),FRM_DS_GetValue(objData,"1534_CoborBlackAfricanAmerican")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1535_CoborNativeHawaiianPacificIslander")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerNativeHawaiianIndicator_Ctrl"),FRM_DS_GetValue(objData,"1535_CoborNativeHawaiianPacificIslander")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4171_CoborNativeHawaiian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerHawaiian_Ctrl"),FRM_DS_GetValue(objData,"4171_CoborNativeHawaiian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4171_CoborGuamanian")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerGuam_Ctrl"),FRM_DS_GetValue(objData,"4171_CoborGuamanian")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4172_CoborSamoan")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerSamoan_Ctrl"),FRM_DS_GetValue(objData,"4172_CoborSamoan")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4173_CoborOtherPacificIslanderRace")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_checkboxCoBorrowerOtherPacific_Ctrl"),FRM_DS_GetValue(objData,"4173_CoborOtherPacificIslanderRace")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4141_CoborEnterOtherPacificIslanderRace")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=textboxCoBorrowerOtherPacific"),FRM_DS_GetValue(objData,"4141_CoborEnterOtherPacificIslanderRace")
	 	End If
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1536_CoborWhite")) Then
	 	 	 GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=__cid_CheckBox69_Ctrl"),FRM_DS_GetValue(objData,"1536_CoborWhite")
	 	End If
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1537_CoborDontWishToProvideInfo")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox54_Ctrl|html id:=__cid_CheckBox70_Ctrl"),FRM_DS_GetValue(objData,"1537_CoborDontWishToProvideInfo")
	   		 'GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox70_Ctrl"),FRM_DS_GetValue(objData,"1537_CoborDontWishToProvideInfo")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1538_CoborNotApplicable")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox71_Ctrl"),FRM_DS_GetValue(objData,"1538_CoborNotApplicable")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"3174_CoborNocoapplicant")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox21_Ctrl"),FRM_DS_GetValue(objData,"3174_CoborNocoapplicant")
		End If
		'18.1 Field changes Information Not Provided Field added
	 	  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4247_CoBorInfotNotProvided")) Then
	 	 	 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkCoBorRaceInfoNotProvided_Ctrl"),FRM_DS_GetValue(objData,"4247_CoBorInfotNotProvided")
	 	 End If
  
 	
 End Function
 
 
 
 'This function is use to set  2018Sex in HMDA page
'@code
'   BIZ_HMDA_2018Sex(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
 
 Function BIZ_HMDA_2018Sex(StrRowID)
  FRM_Logger_ReportInfoEvent "HMDA Information Page","Set HMDA 2018 Sex '" &strRowID& "' in HMDA Information Page",null
  BIZ_Forms_open "HMDA Information"
 '  Set objHMDA2018Page =  SwfWindow("swfname:=MainForm").Page("index:=0")
  BIZ_Common_HMDAInformation_2018Sex strRowID
 End Function
 
 
 
  'This function is use to set values in 2018Sex in HMDA PAge
'@code
'   BIZ_Common_HMDA_2018Sex(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
 
 Function BIZ_Common_HMDAInformation_2018Sex(strRowID)
 Dim objData
 	FRM_Logger_ReportInfoEvent "Set 2018 HMDA Sex for borrower and Coborrower","Set HMDA 2018 Sex information using RowID:" &RowID& " ", null
 	set objData = FRM_DS_GetTestData("Forms_HMDAInformation", "2018Sex",strRowID)
 	'Borrower Sex
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4193_BorFemale")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"),FRM_DS_GetValue(objData,"4193_BorFemale")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4194_BorMale")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox35_Ctrl"),FRM_DS_GetValue(objData,"4194_BorMale")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4195_BorDontWishToProvideInfo")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox36_Ctrl"),FRM_DS_GetValue(objData,"4195_BorDontWishToProvideInfo")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4196_BorNotApplicable")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkborsexnotapplicable_Ctrl"),FRM_DS_GetValue(objData,"4196_BorNotApplicable")
	End If
	'18.1 Field changes Information Not Provided Field added
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4245_BorInfoNotProvided")) Then
		GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkBorSexInfoNotProvided_Ctrl"),FRM_DS_GetValue(objData,"4245_BorInfoNotProvided")
	End If
	
	'Co-borrower Sex
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4197_CoborFemale")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox38_Ctrl"),FRM_DS_GetValue(objData,"4197_CoborFemale")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4198_CoborMale")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox42_Ctrl"),FRM_DS_GetValue(objData,"4198_CoborMale")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4199_CoborDontWishToProvideInfo")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox43_Ctrl"),FRM_DS_GetValue(objData,"4199_CoborDontWishToProvideInfo")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4200_CoborNotApplicable")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkcoborsexnotapplicable_Ctrl"),FRM_DS_GetValue(objData,"4200_CoborNotApplicable")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4189_CoborNoCoApplicant")) Then
	   		 GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"),FRM_DS_GetValue(objData,"4189_CoborNoCoApplicant")
	End If
	'18.1 Field changes Information Not Provided Field added
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4248_CoBorInfoNotProvided")) Then
		GUI_WebCheckbox_Set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_chkCoBorSexInfoNotProvided_Ctrl"),FRM_DS_GetValue(objData,"4248_CoBorInfoNotProvided")
	End If
 End Function
 
 
  'This function is use to set  HMDA year in HMDA information page
'@code
'   BIZ_HMDA_SetHMDAYear(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
 
 Function BIZ_HMDA_SetHMDAYear(strRowID)
 	FRM_Logger_ReportInfoEvent "Set HMDA Reporting Year","Set HMDA Reporting Year using RowID:" &strRowID& " ", null
 	Set objData = FRM_DS_GetTestData("Forms_HMDAInformation", "SetNMLSInfo",strRowID)
 	BIZ_Forms_open "HMDA Information"
	wait(9)
 	If UTIL_String_ISNotEmpty(FRM_DS_GetValue(objData,"HMDA.X27_HmdaReportingYear")) Then
 		If cdbl(BIZ_HMDAPageObj.WebEdit("html id:=l_HMDAX27").GetROProperty("value")) <> FRM_DS_GetValue(objData,"HMDA.X27_HmdaReportingYear") Then
 		    GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=l_699"), ""
   			GUI_Image_Click(BIZ_HMDAPageObj.Image("file name:=field-unlock.png","index:=1"))
   			GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=l_HMDAX27"), ""
   		    GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=l_HMDAX27"), FRM_DS_GetValue(objData,"HMDA.X27_HmdaReportingYear")
			strTabName=SwfWindow("swfname:=MainForm").swfwindow("swfname:=MainScreen").swfwindow("swfname:=LoanPage").SwfTab("swfname:=tabControlForm").GetItem(0)
         	If strTabName="2018 HMDA Originated/Adverse Action Loans" Then
         		FRM_Logger_ReportPassEvent "HMDA 2018 Tab Check", "Successfully opened "& strTabName &" tab", Null
         	Else
         		FRM_Logger_ReportFailEvent "HMDA 2018 Tab Check", "Could not open "& strTabName &" tab", Null
         	End If
         End If
 	End If 
 End Function
 
 
 Function BIZ_HMDA_GovtMonitoring(strRowID)
 	FRM_logger_ReportInfoEvent "HMDA Information Page","Set the print application form using RowID:'" &StrRowID& "'",null
 	 BIZ_Forms_open "HMDA Information"
    BIZ_HMDA_Common_GovtMonitoring strRowID
 End Function
 
 Function BIZ_HMDA_Common_GovtMonitoring(strRowID)
 	FRM_logger_ReportInfoEvent "Set HMDA Print Application","Set HMDA Primt Application using RowID: " &strRowID& " ", null 
 	set objData = FRM_DS_GetTestData("Forms_HMDAInformation", "GovtMonitoring",strRowID)
 	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1825_PrintApplication")))Then
    	val=FRM_DS_GetValue(objData,"1825_PrintApplication")
 	    GUI_WebCheckBox_set BIZ_HMDAPageObj.WebCheckBox("value:="&val,"title:=.*1003 to print."),"on"
 	End If
 	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4142_Use2018DI")))Then
    	GUI_WebCheckBox_set BIZ_HMDAPageObj.WebCheckBox("html id:=__cid_CheckBox47_Ctrl"),"false"
 	End If	
 	
 End Function

'This function is use to set values in Loan And Origination Information form
'@code
'   BIZ_HMDA_2018LoanAndOriginationInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet 
Function BIZ_HMDA_2018LoanAndOriginationInformation(strRowID)
	'Set HMDA Reporting Year to 2018
	BIZ_HMDA_SetHMDAYear strRowID
	
	FRM_logger_ReportInfoEvent "Set HMDA Loan And Origination Information","Set HMDA Loan And Origination Information using RowID: " &strRowID& " ", null 
	Set objData = FRM_DS_GetTestData("Forms_HMDAInformation", "LoanAndOriginationInformation",strRowID)
	'Set Application Date HMDA.X29
	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"HMDA.X29_ApplicationDate"))) Then
    	val=cstr(FRM_DS_GetValue(objData,"HMDA.X29_ApplicationDate"))
		valArr=Split(val,"/")
		If len(valArr(0))=1 Then
			newVal="0"&valArr(0)&"/"
		Else
			newVal=valArr(0)&"/"
		End If		
		If len(valArr(1))=1 Then
			newVal=newVal&"0"&valArr(1)&"/"
		Else
			newVal=newVal&valArr(1)&"/"		
		End If	
		newVal=newVal&valArr(2)
 	    GUI_WebButton_Click BIZ_HMDAPageObj.WebButton("html id:=FieldLock35")
   		GUI_WebEdit_Set BIZ_HMDAPageObj.WebEdit("html id:=l_HMDAX29"), newVal
   		FRM_logger_ReportInfoEvent "HMDA.X29_ApplicationDate","Field HMDA.X29_ApplicationDate has been set as " &val& " ", null 
 	End If
 	'Set Loan Type HMDA.X30
	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"HMDA.X30_LoanType"))) Then
    	val=FRM_DS_GetValue(objData,"HMDA.X30_LoanType")
 	    GUI_WebButton_Click BIZ_HMDAPageObj.WebButton("html id:=FieldLock1")
   		GUI_WebList_Select BIZ_HMDAPageObj.WebList("html id:=DropDownBox1","index:=0"), val
   		FRM_logger_ReportInfoEvent "HMDA.X30_LoanType","Field HMDA.X30_LoanType has been set as " &val& " ", null 
 	End If 
	'Set Action Taken 1393
 	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1393_ActionTaken"))) Then
    	val=FRM_DS_GetValue(objData,"1393_ActionTaken") 	    
   		GUI_WebList_Select BIZ_HMDAPageObj.WebList("html id:=DropDownBox3","index:=4"), val
   		FRM_logger_ReportInfoEvent "1393_ActionTaken","Field 1393_ActionTaken has been set as " &val& " ", null 
 	End If 	
 	'Set Initial Application Amount NMLS.X11
 	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"NMLS.X11_InitialApplicationAmount"))) Then
    	valInitialApplicationAmount=FRM_DS_GetValue(objData,"NMLS.X11_InitialApplicationAmount") 
		'Click on NMLS button    	
    	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=Button1")
    	FRM_logger_ReportInfoEvent "NMLS Button","Clicked on NMLS Button", null
   		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0").WebEdit("html id:=TextBox8"), valInitialApplicationAmount
   		FRM_logger_ReportInfoEvent "NMLS.X11_InitialApplicationAmount","NMLS.X11_InitialApplicationAmount has been set as " &valInitialApplicationAmount& " ", null 
   		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
   		FRM_logger_ReportInfoEvent "Close button","Clicked on Close Button", null 
 	End If
 	'Set Open-End Line of Credit HMDA.X57
 	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"HMDA.X57_OpenEndLineOfCredit"))) Then
    	valOpenEndLineOfCredit=FRM_DS_GetValue(objData,"HMDA.X57_OpenEndLineOfCredit") 	    
   		GUI_WebList_Select BIZ_HMDAPageObj.WebList("html id:=DropdownBox33"), valOpenEndLineOfCredit
   		FRM_logger_ReportInfoEvent "HMDA.X57_OpenEndLineOfCredit","Field HMDA.X57_OpenEndLineOfCredit has been set as " &valOpenEndLineOfCredit& " ", null 
 	End If  
	 	'Set Reason For Denial#1 HMDA.X21
 	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"HMDA.X21_ReasonForDenial#1"))) Then
    	valRsnDen1=FRM_DS_GetValue(objData,"HMDA.X21_ReasonForDenial#1") 	    
   		GUI_WebList_Select BIZ_HMDAPageObj.WebList("html id:=DropdownBox15"), valRsnDen1
   		FRM_logger_ReportInfoEvent "HMDA.X21_ReasonForDenial#1","Field HMDA.X21_ReasonForDenial#1 has been set as " &valRsnDen1& " ", null 
 	End If   	
 	'Set Reason For Denial#2 HMDA.X22
 	If( UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"HMDA.X22_ReasonForDenial#2"))) Then
    	valRsnDen2=FRM_DS_GetValue(objData,"HMDA.X22_ReasonForDenial#2") 	    
   		GUI_WebList_Select BIZ_HMDAPageObj.WebList("html id:=DropdownBox12"), valRsnDen2
   		FRM_logger_ReportInfoEvent "HMDA.X22_ReasonForDenial#2","Field HMDA.X22_ReasonForDenial#2 has been set as " &valRsnDen2& " ", null 
 	End If 

End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\HMDAInformation.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\HomeCounselingProviders.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_HomeCounselingProviders BIZ_Forms_HomeCounselingProviders
'
' List of functions here
'@code
'	Function BIZ_HomeCounselingProviders_AddNewProviders(strRowID)
'   Function BIZ_Common_HomeCounselingProviders_AddNewProviders(objParentObject, strRowID)
'	Function BIZ_Verify_HomeCounselingProviders_ProvidersDetail(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for Adding a new provider
'@code
'    BIZ_HomeCounselingProviders_AddNewProviders(strRowID)
'@endcode

Function BIZ_HomeCounselingProviders_AddNewProviders(strRowID)
	
	FRM_Logger_ReportInfoEvent "Home Counseling Providers", "Set Home Counseling Providers data using Row Id '"&strRowID&"'", null
    
    Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	BIZ_Common_HomeCounselingProviders_AddNewProviders objPage, strRowID	 
	
	Set objPage = Nothing	
      
End Function	



'This function is for set information on Home Counseling Providers form
'@code
'    BIZ_Common_HomeCounselingProviders_AddNewProviders(objParentObject, strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_HomeCounselingProviders_AddNewProviders(objParentObject, strRowID)
    
    Set objData = FRM_DS_GetTestData("Forms_HomeCounselingProviders", "HomeCounselingProviders", strRowID)
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyName")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox1","index:=0"), FRM_DS_GetValue(objData, "AgencyName") 	'AgencyName
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyAdress")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox2","index:=0"), FRM_DS_GetValue(objData, "AgencyAdress") 	'AgencyAdress
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_X6","index:=0"), FRM_DS_GetValue(objData, "Zip") 	'Zip
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyDirectPhone") ) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox6","index:=0"), FRM_DS_GetValue(objData, "AgencyDirectPhone") 	'AgencyDirectPhone
	End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyPhoneTollFree") ) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "AgencyPhoneTollFree") 	'AgencyPhoneTollFree
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyFax") ) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox8","index:=0"), FRM_DS_GetValue(objData, "AgencyFax") 	'AgencyFax
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Distance")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox5","index:=0"), FRM_DS_GetValue(objData, "Distance") 	'Distance
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeCounselingRequired")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl","index:=0"), Cint(FRM_DS_GetValue(objData, "HomeCounselingRequired")) ' HomeCounselingRequired
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeCounselingRequired")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox3_Ctrl","index:=0"), Cint(FRM_DS_GetValue(objData, "HomeCounselingRequired")) ' HomeCounselingRequired
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeCounselingCompletionDate")) then 
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox14","index:=0"), trim(FRM_DS_GetValue(objData, "HomeCounselingCompletionDate"))   'HomeCounselingCompletionDate
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeCounselingDisclosureDate")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox15","index:=0"), FRM_DS_GetValue(objData, "HomeCounselingDisclosureDate")	'HomeCounselingDisclosureDate
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LanguagesSupported")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=MultilineTextBox1","index:=0"), FRM_DS_GetValue(objData, "LanguagesSupported") 	'LanguagesSupported
	End If	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CounselingServicesProvided")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=MultilineTextBox2","index:=0"), FRM_DS_GetValue(objData, "CounselingServicesProvided") 	'CounselingServicesProvided
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyAffiliationDescription")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox13","index:=0"), FRM_DS_GetValue(objData, "AgencyAffiliationDescription")	'AgencyAffiliationDescription
	End If	
	
	Set objData = Nothing		
    
End Function



'This function is for verify information on Home Counseling Providers form
'@code
'    BIZ_Verify_HomeCounselingProviders_ProvidersDetail(strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Verify_HomeCounselingProviders_ProvidersDetail(strRowID)
    
    FRM_Logger_ReportInfoEvent "Home Counseling Providers", "Verify Settlement Service Provider data using Row Id '"&strRowID&"'", null
    
    Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_HomeCounselingProviders", "HomeCounselingProviders", strRowID)
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyName")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox1","index:=0"), FRM_DS_GetValue(objData, "AgencyName"), "AgencyName"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyAdress")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox2","index:=0"), FRM_DS_GetValue(objData, "AgencyAdress"), "AgencyAdress"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=l_X6","index:=0"), FRM_DS_GetValue(objData, "Zip"), "Zip"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyDirectPhone") ) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox6","index:=0"), FRM_DS_GetValue(objData, "AgencyDirectPhone"), "AgencyDirectPhone"
	End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyPhoneTollFree") ) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "AgencyPhoneTollFree"), "AgencyPhoneTollFree"
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyFax") ) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox8","index:=0"), FRM_DS_GetValue(objData, "AgencyFax"), "AgencyFax"
	End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Distance")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox5","index:=0"), FormatNumber(FRM_DS_GetValue(objData, "Distance"), 2), "Distance"
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeCounselingRequired")) Then		
		GUI_Object_ValidateProperty objPage.WebCheckBox("html id:=__cid_CheckBox2_Ctrl","index:=0"), "checked", FRM_DS_GetValue(objData, "HomeCounselingRequired"), "HomeCounselingRequired"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeCounselingRequired")) Then		
		GUI_Object_ValidateProperty objPage.WebCheckBox("html id:=__cid_CheckBox3_Ctrl","index:=0"), "checked", FRM_DS_GetValue(objData, "HomeCounselingRequired"), "HomeCounselingRequired"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeCounselingCompletionDate")) then 
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox14","index:=0"), trim(FRM_DS_GetValue(objData, "HomeCounselingCompletionDate")), "HomeCounselingCompletionDate"
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HomeCounselingDisclosureDate")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox15","index:=0"), FRM_DS_GetValue(objData, "HomeCounselingDisclosureDate"), "HomeCounselingDisclosureDate"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LanguagesSupported")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=MultilineTextBox1","index:=0"), FRM_DS_GetValue(objData, "LanguagesSupported"), "LanguagesSupported"
	End If	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CounselingServicesProvided")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=MultilineTextBox2","index:=0"), FRM_DS_GetValue(objData, "CounselingServicesProvided"), "CounselingServicesProvided"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AgencyAffiliationDescription")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox13","index:=0"), FRM_DS_GetValue(objData, "AgencyAffiliationDescription"), "AgencyAffiliationDescription"
	End If	
	
	Set objData = Nothing
    Set objPage = Nothing

End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\HomeCounselingProviders.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\LoanEstimate.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_LoanEstimate BIZ_Forms_LoanEstimate
'
' List of functions here
' @code
'   Function BIZ_LoanEstimate_CheckIntentToProceedCheckBox()
'   Function BIZ_LoanEstimatePage2_SetCalculatingCashToClose(strRowID)
'   Function BIZ_LoanEstimatePage1_SetLEDateIssue(strRowID)
'   Function BIZ_LoanEstimatePage1_SetReason(strRowID)
'	Function BIZ_LoanEstimatePage3_SetComparisons(strRowID)
'   Function BIZ_LoanEstimatePage2_VerifySectionJ(strRowID)
'   Function BIZ_LoanEstimate_CheckUseAlternate()
'   Function BIZ_LoanEstimatePage3_VerifyLenderInfo(strRowID)
'   Function BIZ_LoanEstimatePage3_VerifyMortgageInfo(strRowID)
'	Function BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod(intEndOfTimePeriodFromLEPage1, strFieldToGetValueFromAmortizationTablePopup)
'	Function BIZ_Forms_LoanEstimate_VerifyEstimatedEscrow(strRowId)
'	Function BIZ_Forms_LoanEstimate_LoanTermsTable_SetData(strRowId)
'	Function BIZ_Forms_LoanEstimatePage1_ProjectedPaymentTable_Validate(strRowID)
'	Function BIZ_Common_Forms_LoanEstimatePage1_ProjectedPaymentTable_Validate(objParentObject,strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for check Intent To Proceed checkbox in LE Page1.
'@code
'    BIZ_LoanEstimate_CheckIntentToProceedCheckBox()
'@endcode

Function BIZ_LoanEstimate_CheckIntentToProceedCheckBox()

    FRM_Logger_ReportInfoEvent "Check Intent To Proceed CheckBox", "Check Intent To Proceed CheckBox in LE Page1", null

	'====== Go to Forms->Loan Estimate Page 1 ======
	BIZ_Forms_Open "Loan Estimate Page 1"

	'====== Check Intent to Proceed checkbox ======
	GUI_WebCheckbox_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebCheckBox("html id:=__cid_CheckBox24_Ctrl")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LEDisclosureSnapshot").SwfButton("swfname:=btnOK")

End Function



'This function is for set Calculating Cash to Close section data in Loan Estimate Page 2.
'@code
'    BIZ_LoanEstimatePage2_SetCalculatingCashToClose(strRowID)
'@endcode

Function BIZ_LoanEstimatePage2_SetCalculatingCashToClose(strRowID)

    FRM_Logger_ReportInfoEvent "Set Calculating Cash to Close section data", "Set data using Row Id '"&strRowID&"' in the Forms_LoanEstimatePage datasheet", null

    Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "SetCalculatingCashToClose", strRowID)
	
	'====== Set Deposit ======
    If FRM_DS_TestDataColumnExists(objData, "Deposit") Then	
        GUI_WebEdit_Set SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebEdit("html id:=I_L128","index:=0"), FRM_DS_GetValue(objData, "Deposit")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE2X30_UseActualDownPayment")) Then
        GUI_WebCheckBox_Set SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebCheckBox("html id:=__cid_l_LE2X30_Ctrl"), FRM_DS_GetValue(objData, "LE2X30_UseActualDownPayment")
    End If
      If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE2X28_UseAlternate")) Then
        GUI_WebCheckBox_Set SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebCheckBox("html id:=__cid_CheckBox4_Ctrl"), FRM_DS_GetValue(objData, "LE2X28_UseAlternate")
    End If
	
    Set objData = Nothing

End Function



'This function is for set LE Date Issued in Loan Estimate Page 1.
'@code
'    BIZ_LoanEstimatePage1_SetLEDateIssue(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LoanEstimatePage1_SetLEDateIssue(strRowID)

    FRM_Logger_ReportInfoEvent "Loan Estimate Page 1", "Set LE1.X1 field using Row Id '"&strRowID&"' in the Forms_LoanEstimatePage datasheet", null
	BIZ_Forms_Open "Loan Estimate Page 1"
	Dim objData, objSummaryPage
    Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "SetLEDateIssue", strRowID)
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	'Set LE1.X1 field
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LEDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "LEDate") 
	End If	
	
    Set objData = Nothing
    Set objSummaryPage = Nothing

End Function



'This function is for set Reason in Loan Estimate Page 1.
'@code
'    BIZ_LoanEstimatePage1_SetReason(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LoanEstimatePage1_SetReason(strRowID)

    FRM_Logger_ReportInfoEvent "Loan Estimate Page 1", "Set Reasons using Row Id '"&strRowID&"' in the Forms_LoanEstimatePage datasheet", null

	Dim objData, objLEPage1
	BIZ_Forms_Open "Loan Estimate Page 1"
    Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "SetReasons", strRowID)
    Set objLEPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	'Set Changed Circumstence - Settlement Charges
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CCSettlementCharges")) Then
		GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X78_Ctrl"), FRM_DS_GetValue(objData, "CCSettlementCharges") 
	End If
	'Set Changed Circumstence - Eligbility
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CCEligbility")) Then
		GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X79_Ctrl"), FRM_DS_GetValue(objData, "CCEligbility") 
	End If	
	'Set Revisions requested by the Consumer
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RevisionsRequest")) Then
		GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X80_Ctrl"), FRM_DS_GetValue(objData, "RevisionsRequest") 
	End If	
	'Set Interest Rate dependent charges
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "InterestRate")) Then
		GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X81_Ctrl"), FRM_DS_GetValue(objData, "InterestRate") 
	End If	
	'Set Expiration
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Expiration")) Then
		GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X82_Ctrl"), FRM_DS_GetValue(objData, "Expiration") 
	End If	
	'Set Delayed Settlement on Construction Loans
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DelayedSettlement")) Then
		GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X83_Ctrl"), FRM_DS_GetValue(objData, "DelayedSettlement") 
	End If	
	'Set Other
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Other")) Then
		GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X84_Ctrl"), FRM_DS_GetValue(objData, "Other") 
	End If	
	'Set Other Content
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OtherContent")) Then
		GUI_WebEdit_Set objLEPage1.WebEdit("html id:=I_LE1X85"), FRM_DS_GetValue(objData, "OtherContent") 
	End If
	
	'Checkbox Changed Circumstance 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3168_ChangedCircumstance")) Then
		GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_3168_Ctrl"),_
		FRM_DS_GetValue(objData, "3168_ChangedCircumstance")
	End If
	
	'3169 Changed Circumstance Description
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3169_ChangedCircumstanceDesc")) Then
		
		'if 3169 is disabled enable by clicking on 3168 checkbox
		If	GUI_Object_GetPropertyValue(objLEPage1.WebButton("html id:=stdbtn_3169"),"disabled")=1 Then
			GUI_WebCheckbox_Set objLEPage1.WebCheckBox("html id:=__cid_chk_3168_Ctrl"),"ON"
		End If
		GUI_WebButton_Click objLEPage1.WebButton("html id:=stdbtn_3169")
		GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions"),15
		
		GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions"),_
		Null,"Code",FRM_DS_GetValue(objData,"3169_ChangedCircumstanceDesc"),True,False,False,"Double"
	End If
	
    Set objData = Nothing
    Set objLEPage1 = Nothing

End Function



'This function is for set Comparisons section in Loan Estimate Page 3.
'@code
'    BIZ_LoanEstimatePage3_SetComparisons(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
	
Function BIZ_LoanEstimatePage3_SetComparisons(strRowID)
	
	FRM_Logger_ReportInfoEvent "Loan Estimate Page 3", "Click Lock Icon, set values for Comparisions Section", null
	
	BIZ_Forms_Open "Loan Estimate Page 3"
	
	Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "SetComparisons", strRowID)
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "In5yearsTotalyouwillhavepaid")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock12")
		GUI_WebEdit_Set objPage.WebEdit("html id:=TextBox17"), FRM_DS_GetValue(objData, "In5yearsTotalyouwillhavepaid") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "In5yearsPrincipalyouwillhavepaid")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock13")		
		GUI_WebEdit_Set objPage.WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "In5yearsPrincipalyouwillhavepaid") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock11")		
		GUI_WebEdit_Set objPage.WebEdit("html id:=TxtApr"), FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)")) Then
		GUI_WebButton_Click objPage.WebButton("html id:=FieldLock14")		
		GUI_WebEdit_Set objPage.WebEdit("html id:=TextBox20"), FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)") 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "674_LatePayment")) Then	
		GUI_WebEdit_Set objPage.WebEdit("html id:=TextBox22"), FRM_DS_GetValue(objData, "674_LatePayment") 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1719_OfthePayment"))  Then
		GUI_WebList_Select objPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "1719_OfthePayment")
	End If 

	
	Set objData = nothing
End Function


	
'This function is for verify section J in Loan Estimate Page 2.
'@code
'    BIZ_LoanEstimatePage2_VerifySectionJ(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
	
Function BIZ_LoanEstimatePage2_VerifySectionJ(strRowID)
	
	FRM_Logger_ReportInfoEvent "Loan Estimate Page 2", "Verify field value correct in section J", null	
	FRM_Logger_ReportInfoEvent "Loan Estimate Page 2", "Verify field value correct in section J", null	
	
	Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "VerifySectionJ", strRowID)
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SubTotal")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox143"), formatnumber(FRM_DS_GetValue(objData, "SubTotal"), 0), "Sub Total"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "D+I")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox144"), formatnumber(FRM_DS_GetValue(objData, "D+I"), 0), "D+ I"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LenderCredits")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox145"), formatnumber(FRM_DS_GetValue(objData, "LenderCredits"), 0), "Lender Credits"
	End If
	
	Set objData = nothing
End Function



'This function is to check "Use Alternate" checkbox in Loan Estimate Page 2.
'@code
'    BIZ_LoanEstimate_CheckUseAlternate()
'@endcode
Function BIZ_LoanEstimate_CheckUseAlternate()
	
	FRM_Logger_ReportInfoEvent "Check Use Alternate CheckBox", "Check 'Use Alternate' CheckBox in LE Page 2", null

	'====== Go to Forms->Loan Estimate Page 2 ======
	BIZ_Forms_Open "Loan Estimate Page 2"

	'====== Check "User Alternate" checkbox ======
	GUI_WebCheckbox_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebCheckBox("html id:=__cid_CheckBox4_Ctrl") 
End Function



'This function is for verify Lender Info in Loan Estimate Page 3
'@code
'    BIZ_LoanEstimatePage3_VerifyLenderInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LoanEstimatePage3_VerifyLenderInfo(strRowID)
	FRM_Logger_ReportInfoEvent "Loan Estimate Page 3", "Verify Lender Info", null	
	
	Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "SetLenderInfo", strRowID)
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE3X24_LoanOfficerLicenseID")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=l_LE3X24"), FRM_DS_GetValue(objData, "LE3X24_LoanOfficerLicenseID"), "Loan Officer License ID"
	End If

End Function



'This function is for verify Mortgage Info in Loan Estimate Page 3
'@code
'    BIZ_LoanEstimatePage3_VerifyMortgageInfo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LoanEstimatePage3_VerifyMortgageInfo(strRowID)

	FRM_Logger_ReportInfoEvent "Loan Estimate Page 3", "Verify Mortgage Info", null	
	
	Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "SetMortgageInfo", strRowID)
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE3X25_LoanOfficerLicenseID")) Then
		GUI_Object_ValidateValue objPage.WebEdit("html id:=l_LE3X25"), FRM_DS_GetValue(objData, "LE3X25_LoanOfficerLicenseID"), "Loan Officer License ID"
	End If

End Function



'This function is used to get Principal/interest/mi/payment/sumofprincipal&Interest values From amortization schedule pop-up when payment schedule is clicked
'@code
'    BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod(intEndOfTimePeriodFromLEPage1, strFieldToGetValueFromAmortizationTablePopup)
'@endcode
'@param: intEndOfTimePeriodFromLEPage1 - End Time Period in Loan Estimation Page 1 _ Col1
'@param: strFieldToGetValueFromAmortizationTablePopup - Field name in Amortization Schedule pop-up

Function BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod(intEndOfTimePeriodFromLEPage1, strFieldToGetValueFromAmortizationTablePopup)
	
	Dim objLoan, objAmortizationPopup, intRowNum, intAmortizationPrincipal, intAmortizationInterest, intAmortizationPrincipalAndInterest, intAmortizationMI, intAmortizationPayment
	
	Set objLoan					=	SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0")
	Set objAmortizationPopup	=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog")
	
	GUI_WebButton_Click objLoan.WebButton("html id:=Button10","name:=View Payment Schedule")
	
	'Formula to Generate Row Number Based On Time Period
	intRowNum = ((intEndOfTimePeriodFromLEPage1-1)*12) + 1
	
	'Checking For Amortization Schedule Pop-up Existance
	If GUI_Object_IsExist ( objAmortizationPopup ) Then
	
		Select Case Lcase(strFieldToGetValueFromAmortizationTablePopup)
			Case Lcase("SumOfPrincipal&Interest")	
				intAmortizationPrincipal = CDbl ( (GUI_List_GetCellData (objAmortizationPopup.SwfObject("swfname:=amortListview"),intRowNum,4)) )
				intAmortizationInterest = CDbl ( (GUI_List_GetCellData (objAmortizationPopup.SwfObject("swfname:=amortListview"),intRowNum,5)) )
				intAmortizationPrincipalAndInterest = CDbl ( intAmortizationPrincipal + intAmortizationInterest )
				BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod = intAmortizationPrincipalAndInterest
			Case Lcase("MI")
				intAmortizationMI =	CDbl ( (GUI_List_GetCellData (objAmortizationPopup.SwfObject("swfname:=amortListview"),intRowNum,6)) )
				BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod = intAmortizationMI
			Case Lcase("Payment")	
				intAmortizationPayment = CDbl ( (GUI_List_GetCellData (objAmortizationPopup.SwfObject("swfname:=amortListview"),intRowNum,3)) )
				BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod = intAmortizationPayment
			Case Lcase("Principal")	
				intAmortizationPrincipal = CDbl ( (GUI_List_GetCellData (objAmortizationPopup.SwfObject("swfname:=amortListview"),intRowNum,4)) )
				BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod = intAmortizationPrincipal
			Case Lcase("Interest")	
				intAmortizationPrincipal = CDbl ( (GUI_List_GetCellData (objAmortizationPopup.SwfObject("swfname:=amortListview"),intRowNum,5)) )
				BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod = intAmortizationPrincipal				
			Case Else
				FRM_Logger_ReportFailEvent "Field name in Amortization Schedule pop-up","Select Valid Field name", Null				
		End Select
		
		If Len(BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod) > 0 Then
			FRM_Logger_ReportInfoEvent "Value Retrieved From Amortization Schedule Pop-up In LE Page1","Value Retrieved From '"&strFieldToGetValueFromAmortizationTablePopup&"' Field Is: '"&BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod&"' ", Null
		Else
			FRM_Logger_ReportFailEvent "Value Retrieved From Amortization Schedule Pop-up In LE Page1","No Value Retrieved From '"&strFieldToGetValueFromAmortizationTablePopup&"'  Field ", Null
		End If
		
		GUI_Window_Close objAmortizationPopup
		
	Else
		FRM_Logger_ReportDebugEvent "Amortization Pop-up","Amortization Schedule Dialog Doesn't Exists", Null
	End If
	
	Set objLoan					=	Nothing
	Set objAmortizationPopup	=	Nothing
	
End Function



'This function is to Verify EstimatedEscrow  in Le page 
'@code
'    BIZ_Forms_LoanEstimate_VerifyEstimatedEscrow(strRowId)
'@endcode
'@param: strRowId - row id of test data in excel spreadsheet

Function BIZ_Forms_LoanEstimate_VerifyEstimatedEscrow(strRowId)
	
	Dim objLEPage,objData
	
	Set objLEPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData   = FRM_DS_GetTestData("Forms_LoanEstimatePage", "VerifyEstimatedEscrow", strRowID)
		
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1X46_EstEscrow1Year")) Then
		GUI_Object_ValidateValue objLEPage.WebEdit("html id:=TextBox58"),FRM_DS_GetValue(objData,"LE1X46_EstEscrow1Year"),"LEX.46 value is"&FRM_DS_GetValue(objData,"LE1X46_EstEscrow1Year")
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1X55_EstEscrow2Years")) Then
		GUI_Object_ValidateValue objLEPage.WebEdit("html id:=TextBox51"),FRM_DS_GetValue(objData,"LE1X55_EstEscrow2Years"),"LEX.55 value is"&FRM_DS_GetValue(objData,"LE1X55_EstEscrow2Years")
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1X64_EstEscrow3Years")) Then
		GUI_Object_ValidateValue objLEPage.WebEdit("html id:=TextBox65"),FRM_DS_GetValue(objData,"LE1X64_EstEscrow3Years"),"LEX.64 value is"&FRM_DS_GetValue(objData,"LE1X64_EstEscrow3Years")
	End If 

	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1X73_EstEscrow4Years")) Then	
		GUI_Object_ValidateValue objLEPage.WebEdit("html id:=TextBox37"),FRM_DS_GetValue(objData,"LE1X73_EstEscrow4Years"),"LEX.73 value is"&FRM_DS_GetValue(objData,"LE1X73_EstEscrow4Years")
	End If 

	Set objLEPage = Nothing
	Set objData   = Nothing

End Function

 
 
'This function is to Set data in LoanTerms Table in LE Page
'@code
'    BIZ_Forms_LoanEstimate_LoanTermsTable_SetData(strRowId)
'@endcode
'@param: strRowId - row id of test data in excel spreadsheet

Function BIZ_Forms_LoanEstimate_LoanTermsTable_SetData(strRowId)
	
	Dim objLEPage,objData
	
	Set objLEPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData   = FRM_DS_GetTestData("Forms_LoanEstimatePage", "LoanTermsTable", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"675_PrepaymentPenalty"))  Then
		GUI_WebList_Select objLEPage.WebList("html id:=DropdownBox11"), FRM_DS_GetValue(objData, "675_PrepaymentPenalty")
	End If 

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1659_BalloonPayment"))  Then
		GUI_WebList_Select objLEPage.WebList("html id:=DropdownBox12"), FRM_DS_GetValue(objData, "1659_BalloonPayment")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"NEWHUD.X6LoanAmount")) Then
	 GUI_WebList_Select objLEPage.WebList("html id:=DropdownBox8"), FRM_DS_GetValue(objData, "NEWHUD.X6LoanAmount")
	End If

	Set objLEPage = Nothing
	Set objData	  = Nothing
	
End Function



'This function is for verify Projected payment Table in Closing Disclosure Page 1
'@code
'    BIZ_Forms_LoanEstimatePage1_ProjectedPaymentTable_Validate(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Forms_LoanEstimatePage1_ProjectedPaymentTable_Validate(strRowID)

	FRM_Logger_ReportInfoEvent "Closing Disclosure Page 1", "Verify ProjectedPaymentTable", Null
	
	Dim objPage
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	'Navigate to LE page 1
	BIZ_Forms_Open "Loan Estimate Page 1"
	BIZ_Common_Forms_LoanEstimatePage1_ProjectedPaymentTable_Validate objPage,strRowID
	
	Set objPage = Nothing
	
End Function 



'This function is for verify Projected payment Table in Loan Estimate Page 1
'@code
'    BIZ_Common_Forms_LoanEstimatePage1_VerifyProjectedPaymentTable(objParentObject,strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_Forms_LoanEstimatePage1_ProjectedPaymentTable_Validate(objParentObject,strRowID)
	
	FRM_Logger_ReportInfoEvent "Loan Estimate Page 1", "Verify ProjectedPaymentTable field values using row id "&strRowID&" ", Null
	
	Dim objData
	
	Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "ProjectedPayments", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE1.X45_Mort.Insurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox59"), FRM_DS_GetValue(objData, "LE1.X45_Mort.Insurance"), "LE1.X45 Monthly Mortgage Insurance"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE1.X54_Mort.Insurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData, "LE1.X54_Mort.Insurance"), "LE1.X54 Monthly Mortgage Insurance"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE1.X63_Mort.Insurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData, "LE1.X63_Mort.Insurance"), "LE1.X63 Monthly Mortgage Insurance"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE1.X72_Mort.Insurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox36"), FRM_DS_GetValue(objData, "LE1.X72_Mort.Insurance"), "LE1.X72 Monthly Mortgage Insurance"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE1.X46_Est.Escrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox58"), FRM_DS_GetValue(objData, "LE1.X46_Est.Escrow"), "LE1.X46 Monthly Estimated Escrow"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE1.X55_Est.Escrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox51"), FRM_DS_GetValue(objData, "LE1.X55_Est.Escrow"),  "LE1.X55 Monthly Estimated Escrow"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE1.X64_Est.Escrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox65"), FRM_DS_GetValue(objData, "LE1.X64_Est.Escrow"), "LE1.X64 Monthly Estimated Escrow"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LE1.X73_Est.Escrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox37"), FRM_DS_GetValue(objData, "LE1.X73_Est.Escrow"), "LE1.X73 Monthly Estimated Escrow"
	End If
	
	Set objData = Nothing
	
End Function 

	
'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\LoanEstimate.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\MLDSCA-GFE.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_MLDSCA-GFE BIZ_MLDSCA-GFE
'
' List of functions here
'@code
'   BIZ_MLDSCAGFE_SetLoanInformation(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Loan Information data in GFE form
'@code
'    BIZ_MLDSCAGFE_SetLoanInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function  BIZ_MLDSCAGFE_SetLoanInformation(strRowID)

	FRM_Logger_ReportInfoEvent "MLDSCA-GFE", "Set GFE data using Row Id '"&strRowID&"'", null
    
	Set objData            = FRM_DS_GetTestData("Forms_MLDSCAGFE", "SetLoanInformation", strRowID)
	
	BIZ_Forms_Open "MLDS - CA GFE"
	Set objPage = SwfWindow("swfname:=MainForm").Page("index:=0")
	If UTIL_String_IsNotEmpty(objData.Item("L244_InterestFrom")) Then
		GUI_SwfEdit_Set objPage.WebEdit("html id:=l_L244"), objData.Item("L244_InterestFrom")
	End If
    
End Function	

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\MLDSCA-GFE.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\PrintWindow.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_PrintWindow BIZ_Forms_PrintWindow
'
' List of functions here
' @code
'	BIZ_Forms_Print_AddForms(strFormsTab, arrFormList)
'	BIZ_Forms_Print_Preview()
'   BIZ_Forms_Print_ChooseLECDDateIssued(ture)
'   BIZ_Forms_Print_ClosePrviewWindow()
'   BIZ_Forms_Print_AddDisclosureRecord(isCreate)
'   BIZ_Forms_Print_ClosePrintPreviewDialogWindow()
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for Add Forms to SelectedForms
'@code
'    BIZ_Forms_Print_AddForms("Standard Forms", Array("Anti-Steering Safe Harbor Disclosure Page 1"))
'@endcode
'@param strFormsTab the formTab style
'@param arrFormList the selected forms

Function BIZ_Forms_Print_AddForms(strFormsTab, arrFormList)

	FRM_Logger_ReportInfoEvent "Safe Harbor Dialog", "Verify All Fields exist in Safe Harbor Dialog are read only", null

	Set objPrintForms = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objPrintFormsTab = objPrintForms.SwfObject("swfname:=tabControlEx1")
	GUI_ClickElement_ByGetTextLocation objPrintFormsTab, strFormsTab
	Set objStandardFormList = objPrintForms.SwfObject("swfname:=gridViewFiles")
	Set objStandardFormListScrollBar = objPrintForms.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDevice = CreateObject("Mercury.DeviceReplay")
	objDevice.KeyDown (29)
	GUI_SwfComboBox_Select objPrintForms.SwfComboBox("swfname:=cboFormTypes"),"Archived Forms"
	For i = Lbound(arrFormList) to UBound(arrFormList)
		GUI_List_ClickRow objStandardFormList, objStandardFormListScrollBar, 0, arrFormList(i), True, False, False, "Single"				
	Next
	objDevice.KeyUp (29)
	GUI_SwfButton_Click objPrintForms.SwfButton("swfname:=btnAdd")	
	GUI_SwfButton_Click objPrintForms.SwfButton("swfname:=btnPreview")
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm"), 5) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfButton("swfname:=btn_print")
	End If
    GUI_Object_WaitTillExist objPrintForms.SwfWindow("swfname:=PdfPreviewDialog")
	GUI_SwfButton_Click objPrintForms.SwfWindow("swfname:=PdfPreviewDialog").SwfButton("swfname:=btnClose")
	If GUI_Object_IsExist(objPrintForms.SwfWindow("swfname:=DisclosureTrackingDialog") )Then
		GUI_SwfButton_Click objPrintForms.SwfWindow("swfname:=DisclosureTrackingDialog").SwfButton("swfname:=btnYes")
	End If
	BIZ_Forms_Print_ClosePrintPreviewDialogWindow()
	
	Set objPrintForms = nothing
	Set objPrintFormsTab= nothing
	Set objStandardFormList = nothing
	Set objStandardFormListScrollBar = nothing
	Set objDevice = nothing
End Function



'This function is for Click on the  button in Print window
'@code
'    BIZ_Forms_Print_Preview()
'@endcode

Function BIZ_Forms_Print_Preview()
    
	FRM_Logger_ReportInfoEvent "BIZ_Forms_Print_Preview", "clicking the preview button.", null
	
    Set objPrintWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	GUI_Object_WaitTillEnabledX objPrintWindow.SwfObject("swfname:=btnPreview"), 30
    objPrintWindow.SwfObject("swfname:=btnPreview").Click
    
    Set objFormFailureParent=objPrintWindow.SwfWindow("swfname:=.*ErrorDialog")
	
	
	If objFormFailureParent.Exist(3) Then
		objFormFailureParent.SwfButton("swfname:=btnClose").Click
	End If
	
	If GUI_Object_IsExist (SwfWindow("swfname:=MainForm").Dialog("regexpwndtitle:=Encompass")) Then
		GUI_Dialog_Encompass_Yes "You must save the loan before you can generate documents with borrower data. Would you like to save it now?"	
	End If
    
    Set objPrintWindow = nothing
End Function



'This function is for Choosing LE Date Issued 
'@code
'    BIZ_Forms_Print_ChooseLECDDateIssued(ture)
'@endcode
'@param isLEDateBlank the field to use current date or LE.X1

Function BIZ_Forms_Print_ChooseLECDDateIssued(isCurentDate)
    
    Set objLEWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=UpdateLECDDateIssued")
    if isCurentDate Then
        GUI_SwfRadioButton_Click objLEWindow.SwfRadioButton("swfname:=rdbCurrent")
    Else
        GUI_SwfRadioButton_Click objLEWindow.SwfRadioButton("swfname:=rdbDate")
    End if
    GUI_SwfButton_Click objLEWindow.SwfButton("swfname:=btnOK")

    Set objLEWindow = nothing
End Function



'This function is for Close Preview window
'@code
'    BIZ_Forms_Print_ClosePrviewWindow()
'@endcode

Function BIZ_Forms_Print_ClosePrviewWindow()
    
    Set objPreviewWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=PdfPreviewDialog")
    GUI_SwfButton_Click objPreviewWindow.SwfButton("swfname:=btnClose")

    Set objPreviewWindow = nothing
End Function



'This function is for create a Disclosure Tracking or not
'@code
'    BIZ_Forms_Print_AddDisclosureRecord(true)
'@endcode
'@param isCreate the field to create or not

Function BIZ_Forms_Print_AddDisclosureRecord(isCreate)
    
    Set objDTWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=DisclosureTrackingDialog")
    
    If objDTWindow.Exist(10) Then
    	If isCurentDate Then
        	GUI_SwfButton_Click objDTWindow.SwfButton("swfname:=btnYes")
    	Else
        	GUI_SwfButton_Click objDTWindow.SwfButton("swfname:=btnNo")
    	End If
	End If
    BIZ_Forms_Print_ClosePrintPreviewDialogWindow()
    Set objDTWindow = nothing
End Function



'This function is for to close print preview window
'@code
'    BIZ_Forms_Print_ClosePrintPreviewDialogWindow()
'@endcode
'@param 

Function BIZ_Forms_Print_ClosePrintPreviewDialogWindow()
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").Exist(30) Then
	   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfButton("swfname:=btnClose")
	End If	
End Function


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\PrintWindow.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\RegZ-CD.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_RegZ_CD BIZ_Forms_RegZ_CD
'
' List of functions here
' @code
'   Function BIZ_RegZ_CD_SetData(strRowID)
'	Function BIZ_RegZ_CD_SetConstructionMortgage(strRowID)
'	Function BIZ_Common_RegZ_CD_SetData(objParentObject, strRowID)
'	Function BIZ_Common_RegZ_CD_SetConstructionMortgage(objParentObject, strRowID)
'   Function BIZ_RegZ_CD_GetLateFee()
'   Function BIZ_RegZ_CD_SetLoanInformation(strRowID)
'   Function BIZ_Common_RegZ_CD_SetLoanInformation(objParentObject, strRowID)
'   Function BIZ_RegZ_CD_OrderDocs(strRowID)
'   Function BIZ_REGZ_CD_SelectLoanProgram(strRowID)
'   Function BIZ_REGZ_CD_SelectPlanCode(strRowID)
'   Function BIZ_REGZ_CD_SetDisclosureInformation(strRowID)
'	Function BIZ_RegZ_CD_AuditOrderDocs(strRowID)
'	Function BIZ_RegZ_CD_SetLoanTerms(strRowID)
'	Function BIZ_Common_RegZ_CD_SetLoanTerms(objParentObject, strRowID)
'	Function BIZ_Common_RegZ_CD_SetMiandPiDetails(strRowID)
'	Function BIZ_RegZ_CD_SetAdjustableRateMortgage(strRowID)
'	Function BIZ_Common_RegZ_CD_SetAdjustableRateMortgage(objParentObject, strRowID)
'   Function BIZ_RegZ_CD_VerData(strRowID)
'   Function BIZ_Common_RegZ_CD_VerData(objParentObject, strRowID) ' added by savik
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set information on RegZ CD page
'@code
'    BIZ_RegZ_CD_SetData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_CD_SetData(strRowID)

    FRM_Logger_ReportInfoEvent "RegZ - CD", "Set data using Row Id '"&strRowID&"' in the RegZ_CD datasheet", null
	
	BIZ_Forms_Open "RegZ - CD"
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	BIZ_Common_RegZ_CD_SetData objPage, strRowID	 
	
	Set objPage = Nothing	
	
End Function


'This function is for verify information on RegZ CD page
'@code
'    BIZ_RegZ_CD_VerData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_CD_VerData(strRowID)

    FRM_Logger_ReportInfoEvent "RegZ - CD", "Verify data using Row Id '"&strRowID&"' in the RegZ_CD datasheet", null
	
	BIZ_Forms_Open "RegZ - CD"
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	BIZ_Common_RegZ_CD_VerData objPage, strRowID	 
	
	Set objPage = Nothing	
	
End Function

'This function is for verify information on RegZ CD page
'@code
'    BIZ_Common_RegZ_CD_VerData(objParentObject, strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RegZ_CD_VerData(objParentObject, strRowID)

    
	
    Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "RegZ_CD", strRowID)

	GUI_Object_WaitTillExistX objParentObject, 180
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "949_PrepaidFinance")) Then	
    	FRM_Logger_ReportInfoEvent "Prepaid Finance Charges", "Verify data using Row Id '"&strRowID&"' in the RegZ_CD datasheet", null
		 
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_949","index:=0"), FRM_DS_GetValue(objData, "949_PrepaidFinance"), "Prepaid Finance Charges"	'Prepaid finance charges validation
	End If	
	
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1207_TotalOfPayments")) Then	
    	FRM_Logger_ReportInfoEvent "Total Of Payments", "Verify data using Row Id '"&strRowID&"' in the RegZ_CD datasheet", null
		 
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_1207","index:=0"), FRM_DS_GetValue(objData, "1207_TotalOfPayments"), "Total Of Payments"	'Total Of Payments validation for C2P
	End If	
	
	
Set objData=Nothing
End Function





'This function is for set data to Construction Mortgage section
'@code
'    BIZ_RegZ_CD_SetConstructionMortgage(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_CD_SetConstructionMortgage(strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - CD", "Set Construction Mortgage section using Row Id '"&strRowID&"' in the SetConstructionMortgage datasheet", null		
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0") 
	BIZ_Common_RegZ_CD_SetConstructionMortgage objPage, strRowID
    
    Set objPage = nothing
End Function



'This function is for set information on RegZ CD page
'@code
'    BIZ_Common_RegZ_CD_SetData(objParentObject, strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RegZ_CD_SetData(objParentObject, strRowID)

    FRM_Logger_ReportInfoEvent "RegZ - CD", "Set data using Row Id '"&strRowID&"' in the RegZ_CD datasheet", null
	
    Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "RegZ_CD", strRowID)
	'GUI_Object_WaitTillExistX objParentObject.WebEdit("html id:=l_682","index:=0"), 180
	GUI_Object_WaitTillExistX objParentObject, 180
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstPaymentDate")) Then	
		 FRM_Logger_ReportInfoEvent "Set Value", "Set the value '"&FRM_DS_GetValue(objData, "FirstPaymentDate")&"' in 1st Payment Date field", null
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_682","index:=0"), FRM_DS_GetValue(objData, "FirstPaymentDate") 	'FirstPaymentDate
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EstClosingDate")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_763","index:=0"), FRM_DS_GetValue(objData, "EstClosingDate") 	'EstClosingDate
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DisbursementDate") ) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L244","index:=0"), FRM_DS_GetValue(objData, "DisbursementDate") 	'DisbursementDate
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ClosingDate")) Then	
		objParentObject.WebEdit("html id:=l_748|I_748","index:=0").Object.focus
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_748|I_748","index:=0"), FRM_DS_GetValue(objData, "ClosingDate") 	'ClosingDate
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DocSigningDate")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1887","index:=0"), FRM_DS_GetValue(objData, "DocSigningDate") 	'DocSigningDate
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DaysPerYear")) then 
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox1","index:=0"), trim(FRM_DS_GetValue(objData, "DaysPerYear"))   'DaysPerYear
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LatePaymentDays")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_672","index:=0"), FRM_DS_GetValue(objData, "LatePaymentDays")	'LatePaymentDays
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WillBeCharged")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_674","index:=0"), FRM_DS_GetValue(objData, "WillBeCharged") 	'WillBeCharged
	End If	  
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ChargedOf")) then 
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox7","index:=0"), FRM_DS_GetValue(objData, "ChargedOf")   'DaysPerYear
	End if
    val = FRM_DS_GetValue(objData, "LoanPurpose")
    If UTIL_String_IsNotEmpty(val) Then 
       FRM_Logger_ReportInfoEvent "Check the checkbox", "Check the checkbox '"&val&"'", null
       GUI_WebCheckBox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox.*_Ctrl", "value:="&val), "ON"
    End If   	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SyncWithPrepaidInterestDate")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox7_Ctrl","index:=0"), FRM_DS_GetValue(objData, "SyncWithPrepaidInterestDate")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1854_AdditionalDetails")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1854","index:=0"), FRM_DS_GetValue(objData, "1854_AdditionalDetails")	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1699_Floor")) Then	
		GUI_Object_WaitTillExistX objParentObject.WebButton("html id:=FieldLock18"), 90
		GUI_WebButton_Click objParentObject.WebButton("html id:=FieldLock18")
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1699","index:=0"), FRM_DS_GetValue(objData, "1699_Floor")	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FloorBasis")) Then	
		objParentObject.WebList("html id:=DropdownBox20").Select FRM_DS_GetValue(objData, "FloorBasis")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "688_FloorVrbg")) Then	
		objParentObject.WebElement("html id:=lblPrincipalIntPayments").Highlight
		objParentObject.WinEdit("nativeclass:=Edit").Set FRM_DS_GetValue(objData, "688_FloorVrbg")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "688_Index")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_688","index:=0"), FRM_DS_GetValue(objData, "688_Index")	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "689_Margin")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_689","index:=0"), FRM_DS_GetValue(objData, "689_Margin")	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "697_1stAdjCap")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_697","index:=0"), FRM_DS_GetValue(objData, "697_1stAdjCap")	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "423_Biweekly")) Then	
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox24_Ctrl","value:=Biweekly"), FRM_DS_GetValue(objData, "423_Biweekly")	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_CancelAt")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1205"), FRM_DS_GetValue(objData, "1205_CancelAt")	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1209_CancelAt")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1209"), FRM_DS_GetValue(objData, "1209_CancelAt")	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1176_Period")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period")	
	End If
	
'	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ClosingDate1")) Then	
'		GUI_WebEdit_Set objParentObject.WebEdit("html id:=I_748","index:=0"), FRM_DS_GetValue(objData, "ClosingDate1") 	'ClosingDate
'	End If
	
	Set objData = Nothing		


End Function



'This function is for set data to Construction Mortgage section
'@code
'    BIZ_Common_RegZ_CD_SetConstructionMortgage(objParentObject, strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RegZ_CD_SetConstructionMortgage(objParentObject, strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - CD", "Set Construction Mortgage section using Row Id '"&strRowID&"' in the SetConstructionMortgage datasheet", null		
	
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "SetConstruction", strRowID)	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Constr.FstIntChgAdj")) Then
        GUI_WebEdit_Set objParentObject.WebList("html id:=DropdownBox13"), FRM_DS_GetValue(objData, "Constr.FstIntChgAdj")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SYS.X6_Est.InterestOn")) Then
        GUI_WebEdit_Set objParentObject.WebList("html id:=DropdownBox14"), FRM_DS_GetValue(objData, "SYS.X6_Est.InterestOn")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1962_NumberofDays")) Then
        GUI_WebEdit_Set objParentObject.WebList("html id:=l_1962"), FRM_DS_GetValue(objData, "1962_NumberofDays")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1176_Period")) Then
    	FRM_Logger_ReportInfoEvent "Set the Construction Mortgage Period value", "Set '"&FRM_DS_GetValue(objData, "1176_Period")&"' value in Construction Mortgage Period field", null
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1677_InterestRate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1677"), FRM_DS_GetValue(objData, "1677_InterestRate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2820_RateType")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox17"), FRM_DS_GetValue(objData, "2820_RateType")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3899_InspectionFee")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox215"), FRM_DS_GetValue(objData, "3899_InspectionFee")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1964_InitialAcquisitionofLand")) Then
        GUI_WebEdit_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox82_Ctrl"), FRM_DS_GetValue(objData, "1964_InitialAcquisitionofLand")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Refinance")) Then
        GUI_WebEdit_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox83_Ctrl"), FRM_DS_GetValue(objData, "Refinance")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "763_Est.ClosingDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_763"), FRM_DS_GetValue(objData, "763_Est.ClosingDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "682_FirstPaymentDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox117"), FRM_DS_GetValue(objData, "682_FirstPaymentDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1961_FinalPaymentDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1961"), FRM_DS_GetValue(objData, "1961_FinalPaymentDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1963_1stAmort.Date")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1963"), FRM_DS_GetValue(objData, "1963_1stAmort.Date")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4080_OccupancyCertDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox32"), FRM_DS_GetValue(objData, "4080_OccupancyCertDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1265_RequiredReserves")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1265"), FRM_DS_GetValue(objData, "1265_RequiredReserves")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4086_RequiredInterestReserve ")) Then
        GUI_WebEdit_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox17_Ctrl"), FRM_DS_GetValue(objData, "4086_RequiredInterestReserve")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4087_CreditorProhibitsBorrower")) Then
        GUI_WebEdit_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox18_Ctrl"), FRM_DS_GetValue(objData, "4087_CreditorProhibitsBorrower")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4088_EstimatedConstructionInterest")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox37"), FRM_DS_GetValue(objData, "4088_EstimatedConstructionInterest")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1404_Description")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=MultilineTextBox2"), FRM_DS_GetValue(objData, "1404_Description")
    End If

	Set objData = nothing	
End Function



'This function is for click Get Late Fee button
'@code
'    BIZ_RegZ_CD_GetLateFee()
'@endcode

Function BIZ_RegZ_CD_GetLateFee()

    FRM_Logger_ReportInfoEvent "RegZ - CD", "Click Get Late Fee button", null
	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebButton("name:=Get Late Fee")
    GUI_Dialog_Encompass_OK(null)
	
End Function



'This function is for set data to Loan Information section
'@code
'    BIZ_RegZ_CD_SetLoanInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_CD_SetLoanInformation(strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - CD", "Set Loan Information section using Row Id '"&strRowID&"' in the SetLoanInformation datasheet", null		
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0") 
	BIZ_Common_RegZ_CD_SetLoanInformation objPage, strRowID
    
    Set objPage = nothing
    
End Function



'This function is for set data to Loan Information section
'@code
'    BIZ_Common_RegZ_CD_SetLoanInformation(objParentObject, strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RegZ_CD_SetLoanInformation(objParentObject, strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - CD", "Set Loan Information section using Row Id '"&strRowID&"' in the SetLoanInformation datasheet", null		
	
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "SetLoanInformation", strRowID)	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L770_DocumentDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L770"), FRM_DS_GetValue(objData, "L770_DocumentDate")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "748_ClosingDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_748"), FRM_DS_GetValue(objData, "748_ClosingDate")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1887_DocSigningDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1887"), FRM_DS_GetValue(objData, "1887_DocSigningDate")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2553_DisbursementDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_L244"), FRM_DS_GetValue(objData, "2553_DisbursementDate")
    End If
	'Added for KBYO2 JIRA CBIZ-15785'
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "682_1stPaymentDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_682"), FRM_DS_GetValue(objData, "682_1stPaymentDate")
    End If
	
	Set objData = nothing	
    
End Function



'This function is for Order Docs
'@code
'    BIZ_RegZ_CD_OrderDocs(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_CD_OrderDocs(strRowID)

    FRM_Logger_ReportInfoEvent "Order Docs", "Order Docs using Row Id '"&strRowID&"' in the RegZ_CD datasheet", null
	
	'====== Click 'Order Docs' button ======
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnOrder")
	
	'====== if popup 'Compliance Alert' window, then close it ======
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog"), 5) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
	End If
	
	'====== wait 'Progress' dialog disappears and 'Encompass' dialog display ======
	'GUI_Object_WaitTillVisible SwfWindow("swfname:=MainForm").Dialog("text:=Encompass")
	GUI_Dialog_Encompass_OK ""
	
	'====== if still exist another 'Encompass' dialog ======
	Dim objSelectPlanCode
	Set objSelectPlanCode = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeSelectionDialog")
	
	If GUI_Object_IsExistX(objSelectPlanCode.Dialog("text:=Encompass"), 5) Then
		GUI_Dialog_Encompass_Yes ""
	End If
	
	'====== Select an Investor ======
	Dim objPlanCodeList, objScrollbar
	Set objPlanCodeList = objSelectPlanCode.SwfObject("swfname:=gvPlanCodes")
	Set objScrollbar = objSelectPlanCode.SwfScrollbar("swfname:=vPanelScrollBar")
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "OrderDocs", strRowID)
	
	If objSelectPlanCode.Exist(3) Then
	   
	   '==========Click on Clear filter button==================
	   GUI_SwfButton_Click objSelectPlanCode.SwfButton("swfname:=btnClearFilter")
	
	   '======Select the plan code===================
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PlanCode"))Then
    
            '====== Select the added Plan code ======
	      GUI_List_ClickRow objPlanCodeList, Null, 1, FRM_DS_GetValue(objData, "PlanCode"), True, True, False, "Single"
	   
       Else
	      If GUI_Object_IsExistX(objSelectPlanCode.SwfComboBox("swfname:=cboInvestor"), 5) Then
	   
		  GUI_SwfComboBox_Select objSelectPlanCode.SwfComboBox("swfname:=cboInvestor"), "Generic"
		
		  '====== Add an Plan Code ======
		  GUI_List_ClickRow objPlanCodeList, objScrollbar, 1, "All Fixed Rate Conventional 1st Lien Loans", True, True, False, "Single"
		  GUI_SwfButton_Click objSelectPlanCode.SwfButton("swfname:=btnAddPlans")
		
		  '====== if popup 'Encompass' dialog ======
		  GUI_Dialog_Encompass_Yes "Add the 1 selected Plan Code(s) to your company list?"
	   End If
	
	   '====== Select the added Plan code ======
	   GUI_List_ClickRow objPlanCodeList, Null, 1, "All Fixed Rate Conventional 1st Lien Loans", True, True, False, "Single"
	End IF
	   
	   GUI_SwfButton_Click objSelectPlanCode.SwfButton("swfname:=btnOK")
	    
	End If
			
	
	'=============Check for Plan code Conflict dialog================
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeConflictDialog").Exist(5) Then
	    GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeConflictDialog").SwfButton("swfname:=btnSkipImport")
	    If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeConflictDialog").Dialog("text:=Encompass").Exist(5) Then
	        GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeConflictDialog").Dialog("text:=Encompass").Winbutton("text:=&Yes")
	    End If
	End If
	
	'====== wait 'Closing Docs Audit' window display ======
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=AuditDialog"),30
	
	'====== Click 'Order Docs' button ======
	GUI_SwfButton_Click SwfWindow("swfname:=AuditDialog").SwfButton("swfname:=orderBtn")
	
	'====== wait 'Select Documents' window display ======
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectionDialog"),50
	
	'====== uncheck all ======
	Dim objSelectDocs, objClosingDocsList
	Set objSelectDocs = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectionDialog")
	Set objClosingDocsList = objSelectDocs.SwfObject("swfname:=gvDocuments")
	
	GUI_SwfObject_ClickXY objClosingDocsList, 39, 10
	
	'====== Add Additional Docs - "Closing Disclosure" ======
	GUI_SwfButton_Click objSelectDocs.SwfButton("swfname:=btnAddDocs")
	
	Dim objAddDocs,objDocList, objAddDocScroll
	Set objAddDocs = objSelectDocs.SwfWindow("swfname:=PdfDocumentSelectionDialog")
	Set objDocList = objAddDocs.SwfObject("swfname:=gvForms")
	Set objAddDocScroll = objAddDocs.SwfScrollbar("swfname:=vPanelScrollBar")
	
	GUI_List_ClickRow objDocList, objAddDocScroll, 0, "Closing Disclosure", True, False, False, "Single"
	GUI_SwfButton_Click objAddDocs.SwfButton("swfname:=btnAdd")
	
	If GUI_Object_IsExistX(objSelectDocs.Dialog("text:=Encompass Docs"), 50) Then
		GUI_WinButton_Click objSelectDocs.Dialog("text:=Encompass Docs").WinButton("text:=OK")
	End If
	
	'====== Send doc ======
	GUI_SwfButton_Click objSelectDocs.SwfButton("swfname:=btnSend")
	
	Dim objSend, objData
	Set objSend = SwfWindow("swfname:=SendMessageDialog")
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Email_To"))Then
		GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtTo"), FRM_DS_GetValue(objData, "Email_To")
	End If
	
	GUI_SwfButton_Click objSend.SwfButton("swfname:=btnSend")
	
	If objSend.SwfWindow("swfname:=UpdateEmailAddress").Exist(10) Then
	    GUI_SwfButton_Click objSend.SwfWindow("swfname:=UpdateEmailAddress").SwfButton("swfname:=btnSkip")
	End If
		
	'====== wait 'Disclosure Tracking Tool' page display ======
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"),60
	
	Set objData = Nothing
	Set objSend = Nothing
	Set objAddDocScroll = Nothing
	Set objDocList = Nothing
	Set objAddDocs = Nothing
	Set objClosingDocsList = Nothing
	Set objSelectDocs = Nothing
	Set objScrollbar = Nothing
	Set objPlanCodeList = Nothing
	Set objSelectPlanCode = Nothing
	
End Function



'This function is to Set Loan Program value on the REGZ-CD page
'@code
'    BIZ_REGZ_CD_SelectLoanProgram(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_REGZ_CD_SelectLoanProgram(strRowID)
	FRM_Logger_ReportInfoEvent "Select Loan Program on REGZ - CD Form", "Select Loan Program using Row Id '"&strRowID&"' in the SelectLoanProgram datasheet", null

    Dim objREGZCDPage,objData,objLoanProgramSelectDialog,objLoanProgramList,objScrollBar
    Set objREGZCDPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_REGZ_CD", "SelectLoanProgram", strRowID)
    
    GUI_WebButton_Click objREGZCDPage.WebButton("html id:=Button19") 
    Set objLoanProgramSelectDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect")
    Set objLoanProgramList = objLoanProgramSelectDialog.SwfObject("swfname:=gvDirectory")
    Set objScrollBar = objLoanProgramSelectDialog.SwfScrollBar("swfname:=vPanelScrollBar")
    
    GUI_List_ClickRow objLoanProgramList,objScrollBar,"Name",FRM_DS_GetValue(objData,"LoanProgramName"),True,False,False,"Double"
    
    Set objREGZCDPage = Nothing
    Set objLoanProgramSelectDialog = Nothing
    Set objLoanProgramList = Nothing
    Set objScrollBar = Nothing
    Set objData = Nothing
End Function



'This function is to Set Plan Code value on the REGZ-CD page
'@code
'    BIZ_REGZ_CD_SelectPlanCode(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_REGZ_CD_SelectPlanCode(strRowID)
    FRM_Logger_ReportInfoEvent "Select Plan Code on REGZ - CD Form", "Select Plan Code using Row Id '"&strRowID&"' in the SelectPlanCode datasheet", null

    Dim objREGZCDPage,objData,objPlanCodeSelectDialog,objPlanCodeSelectListAddDialog,objLoanProgramList,objScrollBar,objSendeDisclosure
    Set objREGZCDPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_REGZ_CD", "SelectPlanCode", strRowID)
    BIZ_Forms_Open "RegZ - CD"
    GUI_WebButton_Click objREGZCDPage.WebButton("html id:=Button1","name:=Plan Code") 
    
    Set objPlanCodeSelectDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeSelectionDialog")
    GUI_Object_WaitTillExist objPlanCodeSelectDialog 
    Set objPlanCodeSelectListAddDialog = objPlanCodeSelectDialog.SwfWindow("swfname:=PlanCodeSelectListAddDialog")
    Set objPlanCodeList = objPlanCodeSelectListAddDialog.SwfObject("swfname:=gvPlanCodes")
    Set objScrollBar = objPlanCodeSelectListAddDialog.SwfScrollBar("swfname:=vPanelScrollBar") 
    Set objSendeDisclosure = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog")
	
    GUI_SwfButton_Click objPlanCodeSelectDialog.SwfButton("swfname:=btnClearFilter")
    Wait g_TinyWaitMedium

    'Select Plan Code
    Dim boolPlanCodeFound
    boolPlanCodeFound = GUI_List_ClickRow(objPlanCodeSelectDialog.SwfObject("swfname:=gvPlanCodes"),Null,"Description",FRM_DS_GetValue(objdata,"Description"),True,True,False,"Double")
    If Not boolPlanCodeFound Then
    	GUI_SwfObject_Click objPlanCodeSelectDialog.SwfObject("swfname:=btnAddPlanCode")
    	GUI_SwfComboBox_Select objPlanCodeSelectListAddDialog.SwfComboBox("swfname:=cboInvestor"),FRM_DS_GetValue(objData,"Investor")
    	GUI_List_ClickRow objPlanCodeList,objScrollBar,"Description",FRM_DS_GetValue(objdata,"Description"),True,True,False,"Double"
    	GUI_SwfButton_Click objPlanCodeSelectDialog.SwfButton("swfname:=btnOK")
    End If
    
    'Import Plan Data
    If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeConflictDialog"),10) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeConflictDialog").SwfButton("swfname:=btnImportAndClose")
		GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PlanCodeConflictDialog").Dialog("text:=Encompass").WinButton("text:=&Yes")
	End If
    Set objREGZCDPage = Nothing
    Set objPlanCodeSelectDialog = Nothing
    Set objPlanCodeSelectListAddDialog = Nothing
    Set objPlanCodeList = Nothing
    Set objScrollBar = Nothing
    Set objData = Nothing 
    
End Function



'This function is for set data to Disclosure Information section
'@code
'    BIZ_RegZ_CD_SetDisclosureInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_CD_SetDisclosureInformation(strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - CD", "Set Disclosure Information section using Row Id '"&strRowID&"' in the SetLoanInformation datasheet", null		
	
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "SetDisclosureInformation", strRowID)	
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebEdit("html id:=l_799"), 180
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "799_CurrentAPR")) Then
		If GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebEdit("html id:=l_799"), "class") = "inputTextNumDisabled" Then
			GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebButton("html id:=FieldLock2")
		End If
        	GUI_WebEdit_Set SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebEdit("html id:=l_799"), FRM_DS_GetValue(objData, "799_CurrentAPR")
	End If 
	
	Set objData = nothing	
    
End Function



'This function is used to perform Audit and order all closing docs
'@code
'	BIZ_RegZ_CD_AuditOrderDocs(strRowID)
'@endcode
'@param strRowID Test data rowID 

Function BIZ_RegZ_CD_AuditOrderDocs(strRowID)
	FRM_Logger_ReportInfoEvent "Perform Audit and Order Docs", "Perform Audit and Order Docs using Row Id '"&strRowID&"' in the RegZ_CD datasheet", null	
	
	'Click "Audit" button
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnAudit")
	
	Dim objData
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "OrderDocs", strRowID)
	
	'If popup 'Compliance Alert' window, then close it
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog"), 10) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
	End If
	
	'Click ok on "Select Report Type" window
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AuditSelectReportType").SwfButton("swfname:=btnOK")
	'Click on 'Order Docs'
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=AuditDialog"), 90
	GUI_SwfButton_Click SwfWindow("swfname:=AuditDialog").SwfButton("swfname:=orderBtn")
	
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=ProgressDialog").SwfWindow("swfname:=LetterPreviewMessage").Dialog("text:=Encompass"),60) Then
		'Click ok on The custom letter "Borrower Appraisal Acknowledgement doc" is no longer available 
		GUI_DialogObject_Encompass_Click SwfWindow("swfname:=ProgressDialog").SwfWindow("swfname:=LetterPreviewMessage").Dialog("text:=Encompass"),5,"","OK"
		
		'Click ok on The custom letter "Loan Applicants Attestation.DOC" is no longer available
		GUI_DialogObject_Encompass_Click SwfWindow("swfname:=ProgressDialog").SwfWindow("swfname:=LetterPreviewMessage").Dialog("text:=Encompass"),5,"","OK"
	End If
	
	
	Dim objSelectDocs
	Set objSelectDocs = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectionDialog")
	'Send doc 
	GUI_SwfButton_Click objSelectDocs.SwfButton("swfname:=btnSend")
	
	GUI_Object_WaitTillExistX objSelectDocs.SwfWindow("swfname:=SendMessageDialog"),40
	Dim objSend
	Set objSend = SwfWindow("swfname:=SendMessageDialog")
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Email_To"))Then
		GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtTo"), FRM_DS_GetValue(objData, "Email_To")
	End If
	
	GUI_SwfButton_Click objSend.SwfButton("swfname:=btnSend")
	
	If objSend.SwfWindow("swfname:=UpdateEmailAddress").Exist(10) Then
	    GUI_SwfButton_Click objSend.SwfWindow("swfname:=UpdateEmailAddress").SwfButton("swfname:=btnSkip")
	End If
		
	'wait 'Disclosure Tracking Tool' page display
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")._
	SwfWindow("swfname:=LoanPage").SwfObject("swfname:=gvHistory"),120
	
	Set objSend = Nothing
	Set objData= Nothing

End Function



'This function is used to set data for Loan Terms section
'@code
'    BIZ_RegZ_CD_SetLoanTerms(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_CD_SetLoanTerms(strRowID)
	
	FRM_Logger_ReportInfoEvent "RegZ - CD", "Set Loan Terms section using Row Id '"&strRowID&"' in SetLoanTerms datasheet", Null	
	
	Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0") 
	BIZ_Common_RegZ_CD_SetLoanTerms objPage,strRowID
	
	Set objPage = Nothing
End Function



'This function is for set data to Loan Terms section
'@code
'    BIZ_Common_RegZ_CD_SetLoanTerms(objParentObject, strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RegZ_CD_SetLoanTerms(objParentObject, strRowID)
	
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "SetLoanTerms", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1177_InterestOnly"))Then
		GUI_SwfEdit_Set objParentObject.WebEdit("html id:=l_1177"),FRM_DS_GetValue(objData, "1177_InterestOnly")
	End If
	
	Set objParentObject=Nothing
	Set objData = Nothing
	
End Function



'This function is to SetMiandPiDetails in RegZ_CD
'@code
'    BIZ_Common_RegZ_CD_SetMiandPiDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RegZ_CD_SetMiandPiDetails(strRowID)

	FRM_Logger_ReportInfoEvent "Set MiandPi Details in ReGZ-CD","Set MI and Pi details in ReGZ-CD using row id:"&strRowID&"",Null

	Dim objData,objMIPWin,obj1003Page
	
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "SetConstruction", strRowID)
	Set obj1003Page = SwFwindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objMIPWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog|MIPUSDADialog")
	
	GUI_WebButton_Click obj1003Page.WebButton("html id:=StandardButton6")
	
	val= FRM_DS_GetValue(objData,"FinanceGuarenteeChckBox")
	If UTIL_String_IsNotEmpty( FRM_DS_GetValue(objData,"FinanceGuarenteeChckBox")) Then
		GUI_SwfCheckBox_Set objMIPWin.SwfCheckBox("swfname:=chkAll","text:="&val),"ON"
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1107_MIP/Funding/Guarantee")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData, "1107_MIP/Funding/Guarantee")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1198_Months")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=monthMI1Txt"),FRM_DS_GetValue(objData, "1198_Months")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1199_Interest Rate")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMI1Txt"),FRM_DS_GetValue(objData, "1199_Interest Rate")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1209_Cancelat")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData, "1209_Cancelat")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1205_Cancelat")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=txtPrepaidMonth"),FRM_DS_GetValue(objData, "1205_Cancelat")
	End If 
	
	GUI_SwfButton_Click objMIPWin.SwfButton("swfname:=okBtn")
	
	Set objData   	= Nothing
	Set objMIPWin 	= Nothing
	Set obj1003Page = Nothing
	
End Function



'This function is for set data to Adjustable Rate Mortgage section
'@code
'    BIZ_RegZ_CD_SetAdjustableRateMortgage(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_CD_SetAdjustableRateMortgage(strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - CD", "Set Adjustable Rate Mortgage section using Row Id '"&strRowID&"' in the SetARM datasheet", null
	
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Common_RegZ_CD_SetAdjustableRateMortgage objParentObject, strRowID
	
    Set objParentObject = nothing

End Function



'This function is for set data to Adjustable Rate Mortgage section
'@code
'    BIZ_Common_RegZ_CD_SetAdjustableRateMortgage(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject - The object to be seted

Function BIZ_Common_RegZ_CD_SetAdjustableRateMortgage(objParentObject, strRowID)
		
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "SetARM", strRowID)	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "697_1stAdjCap")) Then
       	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_697"), FRM_DS_GetValue(objData, "697_1stAdjCap")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "696_1stChange")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_696"), FRM_DS_GetValue(objData, "696_1stChange")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "695_AdjCap")) Then
       	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_695"), FRM_DS_GetValue(objData, "695_AdjCap")
   	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "694_AdjPeriod")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_694"), FRM_DS_GetValue(objData, "694_AdjPeriod")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "247_LifeCap")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_247"), FRM_DS_GetValue(objData, "247_LifeCap")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "689_Margin")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_689"), FRM_DS_GetValue(objData, "689_Margin")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "688_Index")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_688"), FRM_DS_GetValue(objData, "688_Index")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2625_MaxLifeInterestRate")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html Id:=TextBox5"), FRM_DS_GetValue(objData, "2625_MaxLifeInterestRate") 'Sets Max Life interest Rate
    End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1959_ARMIndexType")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox15"), FRM_DS_GetValue(objData, "1959_ARMIndexType") 
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1712_RecastPDStop")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1712"), FRM_DS_GetValue(objData, "1712_RecastPDStop") 'Sets Max Life interest Rate
    End if

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1713_RecastPDStop")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html Id:=l_1713"), FRM_DS_GetValue(objData, "1713_RecastPDStop") 'Sets Max Life interest Rate
    End if
	
	Set objData = nothing
	
End Function


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\RegZ-CD.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\RegZ-LE.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_RegZ_LE BIZ_Forms_RegZ_LE
'
' List of functions here
' @code
'   Function BIZ_RegZ_LE_SetDisclosureInformation(strRowID)
'   Function BIZ_RegZ_LE_SetPrepaymentPenalty(strRowID)
'   Function BIZ_RegZ_LE_GetLateFee()
'	Function BIZ_RegZ_LE_SetInterestOnlyInformation(strRowID)
'	Function BIZ_RegZ_LE_SetLateChargeInformation(strRowID)
'	Function BIZ_RegZ_LE_SetConstructionMortgage(strRowID)
'	Function BIZ_RegZ_LE_SetAdjustableRateMortgage(strRowID)
' 	Function BIZ_RegZ_LE_SetAIRTableInfomration(strRowID)
'	Function BIZ_Common_RegZ_LE_SetDisclosureInformation(objParentObject, strRowID)
'	Function BIZ_Common_RegZ_LE_SetPrepaymentPenalty(objParentObject , strRowID)
'	Function BIZ_Common_RegZ_LE_SetInterestOnlyInformation(objParentObject, strRowID)
'	Function BIZ_Common_RegZ_LE_SetLateChargeInformation(objParentObject, strRowID)
'	Function BIZ_Common_RegZ_LE_SetConstructionMortgage(objParentObject, strRowID)
'	Function BIZ_Common_RegZ_LE_SetAdjustableRateMortgage(objParentObject, strRowID)
'   Function BIZ_Common_RegZ_LE_SetAIRTableInfomration(objParentObject, strRowID)
'	Function BIZ_RegZ_LE_GetARMIndex()
'	Function BIZ_Common_RegZ_LE_VerifyProjectedPayment(objParentObject, strRowID)
'	Function BIZ_RegZ_LE_VerifyProjectedPayment(strRowID)
'	Function BIZ_Common_RegZLE_SetMiandPiDetails(strRowID)
'	Function BIZ_RegZLE_AP_validations(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Disclosure information
'@code
'    BIZ_RegZ_LE_SetDisclosureInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_LE_SetDisclosureInformation(strRowID)

    FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Disclosure Information using Row Id '"&strRowID&"' in the Disclosure datasheet", null

	BIZ_Forms_Open "RegZ - LE"
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    BIZ_Common_RegZ_LE_SetDisclosureInformation objParentObject, strRowID 

	Set objParentObject = Nothing
	
End Function



'This function is for set Prepayment Penalty information
'@code
'    BIZ_RegZ_LE_SetPrepaymentPenalty(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_LE_SetPrepaymentPenalty(strRowID)

    FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Prepayment Penalty Information using Row Id '"&strRowID&"' in the PrepaymentPenalty datasheet", null

    GUI_WebButton_Click	SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebButton("name:=Prepayment Penalty")
	
    Dim objParentObject
    Set objParentObject = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("title:=.*","index:=0")
	BIZ_Common_RegZ_LE_SetPrepaymentPenalty objParentObject, strRowID
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
    
    Set objParentObject = Nothing  
	
End Function



'This function is for click Get Late Fee button
'@code
'    BIZ_RegZ_LE_GetLateFee()
'@endcode
'@param 

Function BIZ_RegZ_LE_GetLateFee()

    FRM_Logger_ReportInfoEvent "RegZ - LE", "Click Get Late Fee button", null
	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebButton("name:=Get Late Fee")
    GUI_Dialog_Encompass_OK(null)
	
End Function	



'This function is for set Disclosure information
'@code
'    BIZ_RegZ_LE_SetInterestOnlyInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_LE_SetInterestOnlyInformation(strRowID)

	FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Interest Only Information using Row Id '"&strRowID&"' in the InterestOnly datasheet", null
	BIZ_Forms_Open "RegZ - LE"
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Common_RegZ_LE_SetInterestOnlyInformation objParentObject, strRowID
    
	Set objParentObject = Nothing
	
End Function



'This function is for set  late charge information
'@code
'    BIZ_RegZ_LE_SetLateChargeInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_LE_SetLateChargeInformation(strRowID)

	FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Late Charge Only Information using Row Id '"&strRowID&"' in the LateCharge datasheet", null

	BIZ_Forms_Open "RegZ - LE"
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Common_RegZ_LE_SetLateChargeInformation objParentObject, strRowID
	
	Set objParentObject = Nothing
	
End Function



'This function is for set data to Construction Mortgage section
'@code
'    BIZ_RegZ_LE_SetConstructionMortgage(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_LE_SetConstructionMortgage(strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Construction Mortgage section using Row Id '"&strRowID&"' in the SetConstructionMortgage datasheet", null
	BIZ_Forms_Open "RegZ - LE"
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Common_RegZ_LE_SetConstructionMortgage objParentObject, strRowID
	
    Set objParentObject = nothing

End Function


'This function is for set data to Adjustable Rate Mortgage section
'@code
'    BIZ_RegZ_LE_SetAdjustableRateMortgage(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_LE_SetAdjustableRateMortgage(strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Adjustable Rate Mortgage section using Row Id '"&strRowID&"' in the SetARM datasheet", null
	
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Common_RegZ_LE_SetAdjustableRateMortgage objParentObject, strRowID
	
    Set objParentObject = nothing

End Function


'This function is for set Disclosure information
'@code
'    BIZ_Common_RegZ_LE_SetDisclosureInformation(objParentObject, strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject - The object to be seted

Function BIZ_Common_RegZ_LE_SetDisclosureInformation(objParentObject, strRowID)

	Dim objData, ClosingCostList
	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "SetDisclosureInformation", strRowID)
	GUI_Object_WaitTillExistX objParentObject.WebEdit("html id:=I_682"), 180
	wait g_TinyWaitSmall

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1stPaymentDate")) Then
		objParentObject.WebEdit("html id:=I_682").Highlight
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=I_682"), FRM_DS_GetValue(objData, "1stPaymentDate")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LEIssuedDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=I_363"), FRM_DS_GetValue(objData, "LEIssuedDate")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1401_LoanProgram")) Then
		GUI_WebButton_Click objParentObject.WebButton("html id:=StandardButton1")
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect").SwfObject("swfname:=gvDirectory"), Null, 0, FRM_DS_GetValue(objData, "1401_LoanProgram"), True, False, False, "Double"
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1785_ClosingCost")) Then
		objParentObject.image("image type:=Plain Image", "html tag:=IMG", "index:=38").Click
		If(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").Exist(10) = True) then
			ClosingCostName = FRM_DS_GetValue(objData, "1785_ClosingCost")
			Set ClosingCostList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").Swfobject("swfname:=gvDirectory")
			GUI_List_ClickRow ClosingCostList, Null, "Name", ClosingCostName, True, False, False, "Double"
			wait 1
			SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfButton("swfname:=cancelBtn").Click
		End If
    End If
	
	Set objData = Nothing
	Set ClosingCostList = Nothing
	
End Function



'This function is for set Prepayment Penalty information
'@code
'    BIZ_Common_RegZ_LE_SetPrepaymentPenalty(objParentObject , strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject - The object to be seted

Function BIZ_Common_RegZ_LE_SetPrepaymentPenalty(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "SetPrepaymentPenalty", strRowID)	

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1stPrepaymentPeriod")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "1stPrepaymentPeriod")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1stPrepaymentPercentage")) Then    
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "1stPrepaymentPercentage")
    End If    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PenaltyBasedOn")) Then    
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox7"), FRM_DS_GetValue(objData, "PenaltyBasedOn")
    End If   
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TypeOfPrepay")) Then    
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "TypeOfPrepay")
    End If 
    
	Set objData = Nothing	
	
End Function
	


'This function is for set Disclosure information
'@code
'    BIZ_Common_RegZ_LE_SetInterestOnlyInformation(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject - The object to be seted

Function BIZ_Common_RegZ_LE_SetInterestOnlyInformation(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "InterestOnly", strRowID)	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "months")) Then
    	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1177"), FRM_DS_GetValue(objData, "months")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Qualify")) Then
    	GUI_WebCheckbox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox23_Ctrl"), FRM_DS_GetValue(objData, "Qualify") 
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "numbersofdayIndex")) Then
    	GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "numbersofdayIndex")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Balloon")) Then
    	GUI_WebCheckbox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox80_Ctrl"), FRM_DS_GetValue(objData, "Balloon") 
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Biweekly")) Then
    	GUI_WebCheckbox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox24_Ctrl"), FRM_DS_GetValue(objData, "Biweekly") 
    End If 
	
	Set objData = Nothing
	
End Function



'This function is for set  late charge information
'@code
'    BIZ_Common_RegZ_LE_SetLateChargeInformation(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject - The object to be seted

Function BIZ_Common_RegZ_LE_SetLateChargeInformation(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "SetLateCharge", strRowID)	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Period")) Then
    	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_672"), FRM_DS_GetValue(objData, "Period")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LateChargePercentage")) Then
    	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_674"), FRM_DS_GetValue(objData, "LateChargePercentage")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LateChargePercentageOf")) Then
    	GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox7"), FRM_DS_GetValue(objData, "LateChargePercentageOf")
    End If
	
	Set objData = Nothing
	
End Function



'This function is for set data to Construction Mortgage section
'@code
'    BIZ_Common_RegZ_LE_SetConstructionMortgage(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject - The object to be seted

Function BIZ_Common_RegZ_LE_SetConstructionMortgage(objParentObject, strRowID)
	
	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "SetConstruction", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Constr.FstIntChgAdj")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox16"), FRM_DS_GetValue(objData, "Constr.FstIntChgAdj")
    End If 

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SYS.X6_Est.InterestOn")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "SYS.X6_Est.InterestOn")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1962_NumberofDays")) Then
    	'BIZ_Forms_Open "Construction Management"                
        'wait g_ShortWaitSmall
        'GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "1962_NumberofDays")        
        'BIZ_Forms_Open "RegZ - LE"
		If GUI_Object_IsEnabled(objParentObject.WebList("html id:=l_1962")) Then
			GUI_WebList_Select objParentObject.WebList("html id:=l_1962"), FRM_DS_GetValue(objData, "1962_NumberofDays")
		Else
			BIZ_Forms_Open "Construction Management"
			objParentObject.WebEdit("html id:=l_const59").Click
			On Error Goto 0  
			Set objWshShell = CreateObject("WScript.Shell")
    
			objWshShell.SendKeys("{TAB}")
			'objWshShell.SendKeys("{ENTER}") 
			Set objWshShell = Nothing
			GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "1962_NumberofDays")
			BIZ_Forms_Open "RegZ - LE"
		End If
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1176_Period")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period")
    End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1677_InterestRate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1677"), FRM_DS_GetValue(objData, "1677_InterestRate")
    End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2820_RateType")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox17"), FRM_DS_GetValue(objData, "2820_RateType")
    End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3899_InspectionFee")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox215"), FRM_DS_GetValue(objData, "3899_InspectionFee")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1964_InitialAcquisitionofLand")) Then
        GUI_WebEdit_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox82_Ctrl"), FRM_DS_GetValue(objData, "1964_InitialAcquisitionofLand")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Refinance")) Then
        GUI_WebEdit_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox83_Ctrl"), FRM_DS_GetValue(objData, "Refinance")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "763_Est.ClosingDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_763"), FRM_DS_GetValue(objData, "763_Est.ClosingDate")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "682_FirstPaymentDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox117"), FRM_DS_GetValue(objData, "682_FirstPaymentDate")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1961_FinalPaymentDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1961"), FRM_DS_GetValue(objData, "1961_FinalPaymentDate")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1963_1stAmort.Date")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1963"), FRM_DS_GetValue(objData, "1963_1stAmort.Date")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4080_OccupancyCertDate")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox22"), FRM_DS_GetValue(objData, "4080_OccupancyCertDate")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1265_RequiredReserves")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1265"), FRM_DS_GetValue(objData, "1265_RequiredReserves")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4086_RequiredInterestReserve ")) Then
        GUI_WebEdit_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox16_Ctrl"), FRM_DS_GetValue(objData, "4086_RequiredInterestReserve")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4087_CreditorProhibitsBorrower")) Then
        GUI_WebEdit_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox17_Ctrl"), FRM_DS_GetValue(objData, "4087_CreditorProhibitsBorrower")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4088_EstimatedConstructionInterest")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox30"), FRM_DS_GetValue(objData, "4088_EstimatedConstructionInterest")
    End If

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1404_Description")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=MultilineTextBox2"), FRM_DS_GetValue(objData, "1404_Description")
    End If
    
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "CONST.X1ConstrPeriodInc"))) Then 
		GUI_WebCheckbox_Set objParentObject.WebCheckbox("html id:=__cid_CheckBox18_Ctrl","index:=0"), "ON"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"1209_CancelAt")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1209"), FRM_DS_GetValue(objData, "1209_CancelAt")
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"SYS.X2NoofDays")) Then
        GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox1"), Cstr(FRM_DS_GetValue(objData, "SYS.X2NoofDays"))
    End If
	
	If UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "1177_InterestOnly"))) Then 
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_1177"), Trim(FRM_DS_GetValue(objData, "1177_InterestOnly"))
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"949_PrepaidFinance")) Then
		GUI_Object_WaitTillExistX objParentObject.WebEdit("html id:=l_949"),40
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_949"), FRM_DS_GetValue(objData,"949_PrepaidFinance"), "PrepaidFinanceCharges:"&FRM_DS_GetValue(objData,"949_PrepaidFinance")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"4088_EstimatedConstInterest")) Then
		GUI_Object_WaitTillExistX objParentObject.WebEdit("html id:=TextBox30"),40
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox30"),FRM_DS_GetValue(objData,"4088_EstimatedConstInterest"), "Estimated Construction Interest:"&FRM_DS_GetValue(objData,"4088_EstimatedConstInterest")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X52_MaxPI")) Then
		GUI_Object_WaitTillExistX objParentObject.WebEdit("html id:=pjtMaxBox21"),40
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox21"),FRM_DS_GetValue(objData,"LE1.X52_MaxPI"), "LE1.X52_MaxPI:"&FRM_DS_GetValue(objData,"LE1.X52_MaxPI")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X43_MaxPI")) Then
		GUI_Object_WaitTillExistX objParentObject.WebEdit("html id:=pjtMaxBox11"),40
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox11"),FRM_DS_GetValue(objData,"LE1.X43_MaxPI"), "LE1.X43_MaxPI:"&FRM_DS_GetValue(objData,"LE1.X43_MaxPI")
	End If
	
	Set objData = nothing
	
End Function



'This function is for set data to Adjustable Rate Mortgage section
'@code
'    BIZ_Common_RegZ_LE_SetAdjustableRateMortgage(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject - The object to be seted

Function BIZ_Common_RegZ_LE_SetAdjustableRateMortgage(objParentObject, strRowID)
		
	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "SetARM", strRowID)	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "697_1stAdjCap")) Then
       	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_697"), FRM_DS_GetValue(objData, "697_1stAdjCap")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "696_1stChange")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_696"), FRM_DS_GetValue(objData, "696_1stChange")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "695_AdjCap")) Then
       	GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_695"), FRM_DS_GetValue(objData, "695_AdjCap")
   	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "694_AdjPeriod")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_694"), FRM_DS_GetValue(objData, "694_AdjPeriod")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "247_LifeCap")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_247"), FRM_DS_GetValue(objData, "247_LifeCap")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "689_Margin")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_689"), FRM_DS_GetValue(objData, "689_Margin")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "688_Index")) Then
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_688"), FRM_DS_GetValue(objData, "688_Index")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2625_MaxLifeInterestRate")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html Id:=TextBox5"), FRM_DS_GetValue(objData, "2625_MaxLifeInterestRate") 'Sets Max Life interest Rate
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1959_ARMIndexType")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox15"), FRM_DS_GetValue(objData, "1959_ARMIndexType") 
	End If
	
	Set objData = nothing
	
End Function

'This function is for set data to Adjustable Interest Rate section
'@code
'    BIZ_RegZ_LE_SetAIRTableInfomration(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RegZ_LE_SetAIRTableInfomration(strRowID)
		
	FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Adjustable Rate Mortgage section using Row Id '"&strRowID&"' in the SetARM datasheet", null
	
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	BIZ_Common_RegZ_LE_SetAIRTableInfomration objParentObject, strRowID
	
    Set objParentObject = Nothing

End Function



'This function is for set data to Adjustable Interest Rate section
'@code
'    BIZ_Common_RegZ_LE_SetAIRTableInfomration(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param objParentObject - The object to be seted

Function BIZ_Common_RegZ_LE_SetAIRTableInfomration(objParentObject, strRowID)

	FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Adjustable Interest Rate AIR Table using Row Id '"&strRowID&"'", null
	
	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "SetAIR", strRowID)
	
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "694_ARMRateAdjPeriod")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=txtLoanInfoARMRateAdjPeriod"),  CInt(FRM_DS_GetValue(objData, "694_ARMRateAdjPeriod"))
	end if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "697_ARMFirstRateAdjCap")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=txtLoanInfoARMFirstRateAdjCap"), CInt(FRM_DS_GetValue(objData, "697_ARMFirstRateAdjCap"))
	end if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "695_ARMRateCap")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=txtLoanInfoARMRateCap"), CInt(FRM_DS_GetValue(objData, "695_ARMRateCap"))
	end if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ARMIndexType")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=dd_1959"),  CStr(FRM_DS_GetValue(objData, "ARMIndexType"))
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IndexNMargin")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox15"),  CStr(FRM_DS_GetValue(objData, "IndexNMargin"))
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ArmMargin")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=txtLoanInfoArmMargin"),  CDbl(FRM_DS_GetValue(objData, "ArmMargin"))
	End if
		
	Set objParentObject = nothing

End Function



'This function is to get Adjustable Interest Rate Index Values
'@code
'    BIZ_RegZ_LE_GetARMIndex()
'@endcode

Function BIZ_RegZ_LE_GetARMIndex()

	FRM_Logger_ReportInfoEvent "RegZ - LE", "Get Index ARM  values", null
	
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	objParentObject.WebButton("html Id:=btnGetIndex").Click

End Function



'This function is to verify the projected payments columns
'@code
'    BIZ_RegZ_LE_VerifyProjectedPayment(strRowID)
'@endcode

Function BIZ_RegZ_LE_VerifyProjectedPayment(strRowID)
	
	FRM_Logger_ReportInfoEvent "RegZ - LE", "Verify Projected Payments Column using using Row Id '"&strRowID&"' in the Projected Payment  datasheet", Null
	
	Set objParentObject=SwfWindow("swfname:=MainForm").SwfWindow("micclass:=Page","index:=0")
	
	'Navigate to RegZ-LE page
	BIZ_Forms_Open "RegZ - LE"
	
	'Verify the Projected payment columns
	BIZ_Common_RegZ_LE_VerifyProjectedPayment objParentObject, strRowID
	
	Set objParentObject = Nothing
	
End Function



'This function is to verify the projected payments columns
'@code
'    BIZ_RegZ_LE_VerifyProjectedPayment(strRowID)
'@endcode

Function BIZ_RegZ_LE_VerifyProjectedPayment(strRowID)
	
	Dim objParentObject
	
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Forms_Open "RegZ - LE"
	
	BIZ_Common_RegZ_LE_VerifyProjectedPayment objParentObject, strRowID
	
	Set objParentObject = Nothing
	
End Function 



'This function is to verify the projected payments columns
'@code
'    BIZ_Common_RegZ_LE_VerifyProjectedPayment(objParentObject, strRowID)
'@endcode

Function BIZ_Common_RegZ_LE_VerifyProjectedPayment(objParentObject, strRowID)
	
	FRM_Logger_ReportInfoEvent "Verify Projected Payment Table","Verify using the RowId "&strRowID&" in Sheet 'VerifyProjectedPayment'" ,Null
	
	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "VerifyProjectedPayment", strRowID)
	
	'Projected payments Column-i validation
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X41_Year")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox191"), FRM_DS_GetValue(objData, "LE1.X41_Year"), "LE1.X41_Year:"&FRM_DS_GetValue(objData, "LE1.X41_Year")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X42_MinPI")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMinBox11"), FRM_DS_GetValue(objData,"LE1.X42_MinPI"), "LE1.X42_MinPI:"&FRM_DS_GetValue(objData,"LE1.X42_MinPI")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD1.X42_MortIns")) Then
		boolCheckBoxFlag = FRM_DS_GetValue(objData,"CD1.X42_MortIns")
		Select Case boolCheckBoxFlag
			Case "0"
				boolCheckBoxFlag = "UnChecked"
			Case "1"
				boolCheckBoxFlag = "Checked"
			Case Else
				FRM_Logger_ReportFailEvent "CD1.X42_MortIns","Value not set in excel spreadsheet",Null
		End Select 
		GUI_Object_ValidateChecked objParentObject.WebCheckbox("html id:=__cid_CheckBox6_Ctrl"), FRM_DS_GetValue(objData,"CD1.X42_MortIns"),"CD1.X42_MortIns"&boolCheckBoxFlag
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X43_MaxPI")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox11"),FRM_DS_GetValue(objData,"LE1.X43_MaxPI"), "LE1.X43_MaxPI:"&FRM_DS_GetValue(objData,"LE1.X43_MaxPI")
	End If
	
	'Validate checkbox checked or unchecked
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X44_InterestOnly")) Then
		boolCheckBoxFlag = FRM_DS_GetValue(objData,"LE1.X44_InterestOnly")
		Select Case boolCheckBoxFlag
			Case "0"
				boolCheckBoxFlag = "UnChecked"
			Case "1"
				boolCheckBoxFlag = "Checked"
			Case Else
				FRM_Logger_ReportFailEvent "LE1.X44_InterestOnly","Value not set in excel spreadsheet",Null
		End Select 
		GUI_Object_ValidateChecked objParentObject.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"), FRM_DS_GetValue(objData,"LE1.X44_InterestOnly"),"LE1.X44_InterestOnly:"&boolCheckBoxFlag
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X45_MortInsurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox1611"), FRM_DS_GetValue(objData,"LE1.X45_MortInsurance"), "LE1.X45_MortInsurance:"&FRM_DS_GetValue(objData,"LE1.X45_MortInsurance")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X46_Est.Escrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox16"), FRM_DS_GetValue(objData,"LE1.X46_Est.Escrow"), "LE1.X46_Est.Escrow:"&FRM_DS_GetValue(objData,"LE1.X46_Est.Escrow")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X47_MinEst.BiWeeklyorMonPay.")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMinBox12"),FRM_DS_GetValue(objData,"LE1.X47_MinEst.BiWeeklyorMonPay."), "LE1.X47_MinEst.BiWeeklyorMonPay:"&FRM_DS_GetValue(objData,"LE1.X47_MinEst.BiWeeklyorMonPay.")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X48_MaxEst.BiWeeklyorMonPay.")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox12"),FRM_DS_GetValue(objData,"LE1.X48_MaxEst.BiWeeklyorMonPay."), "LE1.X48_MaxEst.BiWeeklyorMonPay:"&FRM_DS_GetValue(objData,"LE1.X48_MaxEst.BiWeeklyorMonPay.")
	End If
	
	'Projected payments Column-ii validation
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X49_Year")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox81"), FRM_DS_GetValue(objData,"LE1.X49_Year"), "LE1.X49_Year:"&FRM_DS_GetValue(objData,"LE1.X49_Year")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X50_Year")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox80"), FRM_DS_GetValue(objData,"LE1.X50_Year"), "LE1.X50_Year:"&FRM_DS_GetValue(objData,"LE1.X50_Year")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X51_MinPI")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMinBox21"),FRM_DS_GetValue(objData,"LE1.X51_MinPI"), "LE1.X51_MinPI:"&FRM_DS_GetValue(objData,"LE1.X51_MinPI")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X52_MaxPI")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox21"),FRM_DS_GetValue(objData,"LE1.X52_MaxPI"), "LE1.X52_MaxPI:"&FRM_DS_GetValue(objData,"LE1.X52_MaxPI")
	End If
	
	'Validate checkbox checked or unchecked
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X53_InterestOnly")) Then
		boolCheckBoxFlag = FRM_DS_GetValue(objData,"LE1.X53_InterestOnly")	
		Select Case boolCheckBoxFlag
			Case "0"
				boolCheckBoxFlag = "UnChecked"	
			Case "1"
				boolCheckBoxFlag = "Checked"
			Case Else
				FRM_Logger_ReportFailEvent "LE1.X53_InterestOnly","Value not set in excel spreadsheet",Null
		End Select		
		GUI_Object_ValidateChecked objParentObject.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"), FRM_DS_GetValue(objData,"LE1.X53_InterestOnly"),"LE1.X53_InterestOnly:"&boolCheckBoxFlag
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X54_Mort.Insurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData,"LE1.X54_Mort.Insurance"), "LE1.X54_Mort.Insurance:"&FRM_DS_GetValue(objData,"LE1.X54_Mort.Insurance")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X55_Est.Escrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox51"), FRM_DS_GetValue(objData,"LE1.X55_Est.Escrow"), "LE1.X55_Est.Escrow:"&FRM_DS_GetValue(objData,"LE1.X55_Est.Escrow")
	End If
	
	'Projected payments Column-iii validation
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X56_MinEst.BiWeekMon")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMinBox22"), FRM_DS_GetValue(objData,"LE1.X56_MinEst.BiWeekMon"), "LE1.X56_MinEst.BiWeekMon:"&FRM_DS_GetValue(objData,"LE1.X56_MinEst.BiWeekMon")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X57_MaxEst.BiWeekMon")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox22"), FRM_DS_GetValue(objData,"LE1.X57_MaxEst.BiWeekMon"), "LE1.X57_MaxEst.BiWeekMon:"&FRM_DS_GetValue(objData,"LE1.X57_MaxEst.BiWeekMon")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X58_Years")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox83"), FRM_DS_GetValue(objData,"LE1.X58_Years"), "LE1.X58_Years:"&FRM_DS_GetValue(objData,"LE1.X58_Years")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X59_Years")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox82"), FRM_DS_GetValue(objData,"LE1.X59_Years"), "LE1.X59_Years:"&FRM_DS_GetValue(objData,"LE1.X59_Years")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X60_MinPI")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMinBox31"), FRM_DS_GetValue(objData,"LE1.X60_MinPI"), "LE1.X60_MinPI:"&FRM_DS_GetValue(objData,"LE1.X60_MinPI")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X61_MaxPI")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox31"), FRM_DS_GetValue(objData,"LE1.X61_MaxPI"), "LE1.X61_MaxPI:"&FRM_DS_GetValue(objData,"LE1.X61_MaxPI")
	End If
	
	'Validate checkbox checked or unchecked
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X62_InterestOnly")) Then
		boolCheckBoxFlag = FRM_DS_GetValue(objData,"LE1.X62_InterestOnly")
		Select Case boolCheckBoxFlag
			Case "0"
				boolCheckBoxFlag = "UnChecked"	
			Case "1"
				boolCheckBoxFlag = "Checked"
			Case Else
				FRM_Logger_ReportFailEvent "LE1.X62_InterestOnly","Value not set in excel spreadsheet",Null
		End Select  
		GUI_Object_ValidateChecked objParentObject.WebCheckBox("html id:=__cid_CheckBox11_Ctrl"), FRM_DS_GetValue(objData,"LE1.X62_InterestOnly"),"LE1.X62_InterestOnly:"&boolCheckBoxFlag
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X63_Mort.Insurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData,"LE1.X63_Mort.Insurance"), "LE1.X63_Mort.Insurance:"&FRM_DS_GetValue(objData,"LE1.X63_Mort.Insurance")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X64_Est.Escrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox65"), FRM_DS_GetValue(objData,"LE1.X64_Est.Escrow"), "LE1.X64_Est.Escrow:"&FRM_DS_GetValue(objData,"LE1.X64_Est.Escrow")
	End If
	
	'Projected payments Column-iv validation
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X65_EstBiweekMonPay")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMinBox32"), FRM_DS_GetValue(objData,"LE1.X65_EstBiweekMonPay"), "LE1.X65_EstBiweekMonPay:"&FRM_DS_GetValue(objData,"LE1.X65_EstBiweekMonPay")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X66_EstBiweekMonPay")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox32"), FRM_DS_GetValue(objData,"LE1.X66_EstBiweekMonPay"), "LE1.X66_EstBiweekMonPay:"&FRM_DS_GetValue(objData,"LE1.X66_EstBiweekMonPay")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"CD1.X24_ThirdPayYear")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox32"), FRM_DS_GetValue(objData,"CD1.X24_ThirdPayYear"), "CD1.X24_ThirdPayYear:"&FRM_DS_GetValue(objData,"CD1.X24_ThirdPayYear") 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X67_Years")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox84"), FRM_DS_GetValue(objData,"LE1.X67_Years"), "LE1.X67_Years:"&FRM_DS_GetValue(objData,"LE1.X67_Years")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X68_Years")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox76"), FRM_DS_GetValue(objData,"LE1.X68_Years"), "LE1.X68_Years:"&FRM_DS_GetValue(objData,"LE1.X68_Years")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X69_MinEst.BiWeekMon")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMinBox41"),FRM_DS_GetValue(objData,"LE1.X69_MinEst.BiWeekMon"), "LE1.X69_MinEst.BiWeekMon:"&FRM_DS_GetValue(objData,"LE1.X69_MinEst.BiWeekMon")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X70_MaxEst.BiWeekMon")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox41"),FRM_DS_GetValue(objData,"LE1.X70_MaxEst.BiWeekMon"), "LE1.X70_MaxEst.BiWeekMon:"&FRM_DS_GetValue(objData,"LE1.X70_MaxEst.BiWeekMon")
	End If
	
	'Validate checkbox checked or unchecked
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X71__InterestOnly")) Then
		boolCheckBoxFlag = FRM_DS_GetValue(objData,"LE1.X71__InterestOnly")
		Select Case boolCheckBoxFlag
			Case "0"
				boolCheckBoxFlag = "UnChecked"	
			Case "1"
				boolCheckBoxFlag = "Checked"
			Case Else
				FRM_Logger_ReportFailEvent "LE1.X71__InterestOnly","Value not set in excel spreadsheet",Null
		End Select 
		GUI_Object_ValidateChecked objParentObject.WebCheckBox("html id:=__cid_CheckBox12_Ctrl"), FRM_DS_GetValue(objData,"LE1.X71__InterestOnly"), "LE1.X71__InterestOnly:"&boolCheckBoxFlag
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X72_Mort.Insurance")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox73"), FRM_DS_GetValue(objData,"LE1.X72_Mort.Insurance"), "LE1.X72_Mort.Insurance:"&FRM_DS_GetValue(objData,"LE1.X72_Mort.Insurance")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X73_Est.Escrow")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=TextBox72"),FRM_DS_GetValue(objData,"LE1.X73_Est.Escrow"), "LE1.X73_Est.Escrow:"&FRM_DS_GetValue(objData,"LE1.X73_Est.Escrow")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X74_MinEstBiweekMonPay")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMinBox42"), FRM_DS_GetValue(objData,"LE1.X74_MinEstBiweekMonPay"), "LE1.X74_MinEstBiweekMonPay:"&FRM_DS_GetValue(objData,"LE1.X74_MinEstBiweekMonPay")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"LE1.X75_MaxEstBiweekMonPay")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=pjtMaxBox42"),FRM_DS_GetValue(objData,"LE1.X75_MaxEstBiweekMonPay"), "LE1.X75_MaxEstBiweekMonPay:"&FRM_DS_GetValue(objData,"LE1.X75_MaxEstBiweekMonPay")
	End If
  
	Set objData = Nothing
	
End Function



'This function is to SetMiandPiDetails in RegZ-LE page
'@code
'    BIZ_Common_RegZLE_SetMiandPiDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RegZLE_SetMiandPiDetails(strRowID)

	FRM_Logger_ReportInfoEvent "Set MiandPi Details in RegZLEPage","Set MI and Pi details in RegZLEPage using row id:"&strRowID&"",Null

	Dim objData,objMIPWin,objRegZLEPage
	
	Set objData 	  = FRM_DS_GetTestData("Forms_RegZ-LE", "SetMiandPiDetails", strRowID)
	Set objRegZLEPage = SwFwindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objMIPWin     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
	
	GUI_WebButton_Click objRegZLEPage.WebButton("html id:=StandardButton6")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1107_MIP/Funding/Guarantee")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateFundingTxt"),FRM_DS_GetValue(objData, "1107_MIP/Funding/Guarantee")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1198_Months")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=monthMI1Txt"),FRM_DS_GetValue(objData, "1198_Months")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1199_Interest Rate")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMI1Txt"),FRM_DS_GetValue(objData, "1199_Interest Rate")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1209_Cancelat")) Then
		GUI_SwfEdit_Set objMIPWin.SwfEdit("swfname:=rateMICancelTxt"),FRM_DS_GetValue(objData, "1209_Cancelat")
	End If 
	
	GUI_SwfButton_Click objMIPWin.SwfButton("swfname:=okBtn")
	
	Set objData   	  = Nothing
	Set objMIPWin 	  = Nothing
	Set objRegZLEPage = Nothing
	
End Function

Function BIZ_RegZLE_AP_validations(strRowID)
	
	FRM_Logger_ReportInfoEvent "RegZ - LE", "Validate Adjustable Payment section using Row Id '"&strRowID&"' in the Borrower datasheet", null
    
    BIZ_Forms_Open "RegZ - LE"
    
    Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "VerifyAdjustablePayment", strRowID)  

	Set objRegZLE = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "InterestOnlyFlag")) Then
		GUI_Object_ValidateValue objRegZLE.WebList("html id:=DropdownBox6"), FRM_DS_GetValue(objData, "InterestOnlyFlag"), "Interest only payment"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OptionalFlag")) Then
		GUI_Object_ValidateValue objRegZLE.WebList("html id:=DropdownBox8"), FRM_DS_GetValue(objData, "OptionalFlag"), "Optional Payment"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "StepFlag")) Then
		GUI_Object_ValidateValue objRegZLE.WebList("html id:=stepPayDp"), FRM_DS_GetValue(objData, "StepFlag"), "Step payments"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SeasonalFlag")) Then
		GUI_Object_ValidateValue objRegZLE.WebList("html id:=seasonalPayDp"), FRM_DS_GetValue(objData, "SeasonalFlag"), "Seasonal Payments"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD4.X46_InterestOnlyFirst")) Then
		GUI_Object_ValidateValue objRegZLE.WebEdit("html id:=txtInterestPay"), FRM_DS_GetValue(objData, "CD4.X46_InterestOnlyFirst"), "Interst only payment"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1712_OptionalFirst")) Then
		GUI_Object_ValidateValue objRegZLE.WebEdit("html id:=txtOptionalPay"), FRM_DS_GetValue(objData, "1712_OptionalFirstOptional payment"), "optional payment"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD4.X26_StepFirst")) Then
		GUI_Object_ValidateValue objRegZLE.WebEdit("html id:=TextBox157"), FRM_DS_GetValue(objData, "CD4.X26_StepFirst"), "Step payments"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD4.X30_FirstChangeAmt")) Then
		GUI_Object_ValidateValue objRegZLE.WebEdit("html id:=txtFirstChangeMix"), FRM_DS_GetValue(objData, "CD4.X30_FirstChangeAmt"), "First change Amt"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD4.X33_SubsequestChanges")) Then
		GUI_Object_ValidateValue objRegZLE.WebEdit("html id:=txtSubsequentChanges"), FRM_DS_GetValue(objData, "CD4.X33_SubsequestChanges"), "Subsequest changes"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD4.X34_MaximumPayment")) Then
		GUI_Object_ValidateValue objRegZLE.WebEdit("html id:=txtMaxPayAmt"), FRM_DS_GetValue(objData, "CD4.X34_MaximumPayment"), "Maximum payments"
	End if
    
    Set objData = Nothing   
    


End Function
'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\RegZ-LE.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\RequestforForms.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_RequestforCopyofTaxReturn BIZ_Forms_RequestforTranscriptofTax
'
' List of functions here
'@code
'   Function BIZ_RequestforCopyofTaxReturn_SetAllField(strFormName, strRowID)
'   Function BIZ_Common_RequestforCopyofTaxReturn_SetAllField(objParentObject, strRowID)
'   Function BIZ_RequestforTranscriptofTax_SetAllField(strFormName, strRowID)
'   Function BIZ_Common_RequestforTranscriptofTax_SetAllField(objParentObject, strRowID)
'   Function BIZ_Verify_RequestforCopyofTaxReturn_TaxDetail(strRowID)
'   Function BIZ_Verify_RequestforTranscriptofTax_TaxDetail(strRowID)
'   Function BIZ_RequestforTranscripOfTax_NewFormNUpdateNSaveDetails(strFormName)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'This function is for set fields in Request for Copy of tax Return
'@code
'    BIZ_RequestforCopyofTaxReturn_SetAllField(strFormName, strRowID)
'@endcode
'@param strFormName The form's name
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RequestforCopyofTaxReturn_SetAllField(strFormName, strRowID)

    FRM_Logger_ReportInfoEvent strFormName, "Set all fields using row id '"&strRowID, null
   
	Set objRequestPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Common_RequestforCopyofTaxReturn_SetAllField objRequestPage, strRowID
	
	Set objRequestPage = Nothing
	 	
End Function



'This function is for set fields in Request for Copy of tax Return
'@code
'    BIZ_Common_RequestforCopyofTaxReturn_SetAllField(objParentObject, strRowID)
'@endcode
'@param objParentObject the parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RequestforCopyofTaxReturn_SetAllField(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_Request", "RequestforCopyofTaxReturn", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0101_TaxFormIsfor")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "AR0101_TaxFormIsfor")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0102_FirstName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X2"), FRM_DS_GetValue(objData, "AR0102_FirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0103_LastName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=txt1aLName"), FRM_DS_GetValue(objData, "AR0103_LastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0104_1stSSN")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X4"), FRM_DS_GetValue(objData, "AR0104_1stSSN")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0106_SpouseFirstName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X6"), FRM_DS_GetValue(objData, "AR0106_SpouseFirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0107_SpouseLastName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=txt2aLName"), FRM_DS_GetValue(objData, "AR0107_SpouseLastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0105_2ndSocialSecurity")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X5"), FRM_DS_GetValue(objData, "AR0105_2ndSocialSecurity")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0139_FirstName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X39"), FRM_DS_GetValue(objData, "AR0139_FirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0140_LastName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X40"), FRM_DS_GetValue(objData, "AR0140_LastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0135_Address")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X35"), FRM_DS_GetValue(objData, "AR0135_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0136_City")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X36"), FRM_DS_GetValue(objData, "AR0136_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0137_State")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X37"), FRM_DS_GetValue(objData, "AR0137_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0138_Zip")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X38"), FRM_DS_GetValue(objData, "AR0138_Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0141_Address")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X41"), FRM_DS_GetValue(objData, "AR0141_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0142_City")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X42"), FRM_DS_GetValue(objData, "AR0142_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0143_State")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X43"), FRM_DS_GetValue(objData, "AR0143_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0144_Zip")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X44"), FRM_DS_GetValue(objData, "AR0144_Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0108_Name")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X8"), FRM_DS_GetValue(objData, "AR0108_Name")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0109_Name(con't)")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X9"), FRM_DS_GetValue(objData, "AR0109_Name(con't)")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0145_Phone")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X45"), FRM_DS_GetValue(objData, "AR0145_Phone")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0110_Address")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X10"), FRM_DS_GetValue(objData, "AR0110_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0111_City")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X11"), FRM_DS_GetValue(objData, "AR0111_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0112_State")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X12"), FRM_DS_GetValue(objData, "AR0112_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0113_Zip")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X13"), FRM_DS_GetValue(objData, "AR0113_Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0124_RequestFormName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X24"), FRM_DS_GetValue(objData, "AR0124_RequestFormName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0125_EndDate1")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X25"), FRM_DS_GetValue(objData, "AR0125_EndDate1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0126_EndDate2")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X26"), FRM_DS_GetValue(objData, "AR0126_EndDate2")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0129_EndDate3")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X29"), FRM_DS_GetValue(objData, "AR0129_EndDate3")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0130_EndDate4")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X30"), FRM_DS_GetValue(objData, "AR0130_EndDate4")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0153_EndDate5")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X53"), FRM_DS_GetValue(objData, "AR0153_EndDate5")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0154_EndDate6")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X54"), FRM_DS_GetValue(objData, "AR0154_EndDate6")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0155_EndDate7")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X55"), FRM_DS_GetValue(objData, "AR0155_EndDate7")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0156_EndDate8")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X56"), FRM_DS_GetValue(objData, "AR0156_EndDate8")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0152_Cost")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X52"), FRM_DS_GetValue(objData, "AR0152_Cost")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0131_taxNum")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X31"), FRM_DS_GetValue(objData, "AR0131_taxNum")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0114_Chkbox")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl"), FRM_DS_GetValue(objData, "AR0114_Chkbox")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0128_Title")) Then
	    UTIL_Win_SendKey "{TAB}"
		GUI_WinEdit_Set objParentObject.WinEdit("micClass:=WinEdit", "index:=0"), FRM_DS_GetValue(objData, "AR0128_Title")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0127_PhoneNum")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X27"), FRM_DS_GetValue(objData, "AR0127_PhoneNum")
	End If
	
	Set objData = Nothing
		
End Function



'This function is for set fields in Request for Transcript of tax
'@code
'    BIZ_RequestforTranscriptofTax_SetAllField(strFormName, strRowID)
'@endcode
'@param strRowID The form's name
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_RequestforTranscriptofTax_SetAllField(strFormName, strRowID)

    FRM_Logger_ReportInfoEvent strFormName, "Set all fields using row id '"&strRowID, null
   
	Set objRequestPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	BIZ_Common_RequestforTranscriptofTax_SetAllField objRequestPage, strRowID
	
	Set objRequestPage = Nothing
	 	
End Function



'This function is for set fields in Request for Transcript of tax
'@code
'    BIZ_Common_RequestforTranscriptofTax_SetAllField(objParentObject, strRowID)
'@endcode
'@param objParentObject the parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_RequestforTranscriptofTax_SetAllField(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_Request", "RequestforTranscriptofTax", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0101_TaxFormIsfor")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "IR0101_TaxFormIsfor")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0102_FirstName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X2"), FRM_DS_GetValue(objData, "IR0102_FirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0103_LastName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=txt1aLName"), FRM_DS_GetValue(objData, "IR0103_LastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0104_1stSSN")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X4"), FRM_DS_GetValue(objData, "IR0104_1stSSN")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0106_SpouseFirstName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X6"), FRM_DS_GetValue(objData, "IR0106_SpouseFirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0107_SpouseLastName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=txt2aLName"), FRM_DS_GetValue(objData, "IR0107_SpouseLastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0105_2ndSocialSecurity")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X5"), FRM_DS_GetValue(objData, "IR0105_2ndSocialSecurity")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0139_FirstName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X39"), FRM_DS_GetValue(objData, "IR0139_FirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0140_LastName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X40"), FRM_DS_GetValue(objData, "IR0140_LastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0135_Address")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X35"), FRM_DS_GetValue(objData, "IR0135_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0136_City")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X36"), FRM_DS_GetValue(objData, "IR0136_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0137_State")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X37"), FRM_DS_GetValue(objData, "IR0137_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0138_Zip")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X38"), FRM_DS_GetValue(objData, "IR0138_Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0141_Address")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X41"), FRM_DS_GetValue(objData, "IR0141_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0142_City")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X42"), FRM_DS_GetValue(objData, "IR0142_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0143_State")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X43"), FRM_DS_GetValue(objData, "IR0143_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0144_Zip")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X44"), FRM_DS_GetValue(objData, "IR0144_Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0108_Name")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X8"), FRM_DS_GetValue(objData, "IR0108_Name")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0109_Name(con't)")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X9"), FRM_DS_GetValue(objData, "IR0109_Name(con't)")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0145_Phone")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X45"), FRM_DS_GetValue(objData, "IR0145_Phone")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0110_Address")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X10"), FRM_DS_GetValue(objData, "IR0110_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0111_City")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X11"), FRM_DS_GetValue(objData, "IR0111_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0112_State")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X12"), FRM_DS_GetValue(objData, "IR0112_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0113_Zip")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X13"), FRM_DS_GetValue(objData, "IR0113_Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0124_RequestFormName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X24"), FRM_DS_GetValue(objData, "IR0124_RequestFormName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0146_ReturnTranscript")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox1_Ctrl"), FRM_DS_GetValue(objData, "IR0146_ReturnTranscript")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0147_AccountTranscript")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl"), FRM_DS_GetValue(objData, "IR0147_AccountTranscript")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0148_RecordofAccount")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), FRM_DS_GetValue(objData, "IR0148_RecordofAccount")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0149_VerificationofNonfilling")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox8_Ctrl"), FRM_DS_GetValue(objData, "IR0149_VerificationofNonfilling")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0150_FormTranscript")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox6_Ctrl"), FRM_DS_GetValue(objData, "IR0150_FormTranscript")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0125_EndDate1")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X25"), FRM_DS_GetValue(objData, "IR0125_EndDate1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0126_EndDate2")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X26"), FRM_DS_GetValue(objData, "IR0126_EndDate2")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0129_EndDate3")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X29"), FRM_DS_GetValue(objData, "IR0129_EndDate3")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0130_EndDate4")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X30"), FRM_DS_GetValue(objData, "IR0130_EndDate4")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0128_Title")) Then
	    'in some environments script can't interact with WinEdit until it is visible. Clicking on phone webedit makes our WinEdit visible
		objParentObject.WebEdit("html id:=l_IRS4506X27").Click
		Wait 2
		GUI_WinEdit_Set objParentObject.WinEdit("micClass:=WinEdit", "index:=0"), FRM_DS_GetValue(objData, "IR0128_Title")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0127_PhoneNum")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_IRS4506X27"), FRM_DS_GetValue(objData, "IR0127_PhoneNum")
	End If
	
	Set objData = Nothing
		
End Function



'This function is for verify fields in Request for Copy of tax Return
'@code
'    BIZ_Verify_RequestforCopyofTaxReturn_TaxDetail(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Verify_RequestforCopyofTaxReturn_TaxDetail(strRowID)

    FRM_Logger_ReportInfoEvent "Request for Copy of Tax Return", "Verify Request for Copy of Tax Return data using Row Id '"&strRowID&"'", null

    Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Set objData = FRM_DS_GetTestData("Forms_Request", "RequestforCopyofTaxReturn", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0101_TaxFormIsfor")) Then
		GUI_Object_ValidateProperty objParentObject.WebList("html id:=DropdownBox1"), "selection", FRM_DS_GetValue(objData, "AR0101_TaxFormIsfor"), "TaxFormIsfor"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0102_FirstName")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X2"), FRM_DS_GetValue(objData, "AR0102_FirstName"), "AR0102_FirstName"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0103_LastName")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=txt1aLName"), FRM_DS_GetValue(objData, "AR0103_LastName"), "AR0103_LastName"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0104_1stSSN")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X4"), FRM_DS_GetValue(objData, "AR0104_1stSSN"), "AR0104_1stSSN"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0124_RequestFormName")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X24"), FRM_DS_GetValue(objData, "AR0124_RequestFormName"), "AR0124_RequestFormName"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0125_EndDate1")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X25"), FRM_DS_GetValue(objData, "AR0125_EndDate1"), "AR0125_EndDate1"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0152_Cost")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X52"), FormatNumber(FRM_DS_GetValue(objData, "AR0152_Cost"), 2), "AR0152_Cost"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0131_taxNum")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X31"), FRM_DS_GetValue(objData, "AR0131_taxNum"), "AR0131_taxNum"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AR0114_Chkbox")) Then
        FRM_VerifyTrue GUI_WebCheckbox_IsChecked(objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl")), "Verify AR0114_Chkbox", "The checkbox is checked"
	End If
	
	Set objData = Nothing
    Set objParentObject = Nothing
		
End Function



'This function is for verify fields in Request for Transcript of tax
'@code
'    BIZ_Verify_RequestforTranscriptofTax_TaxDetail(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Verify_RequestforTranscriptofTax_TaxDetail(strRowID)
    
    FRM_Logger_ReportInfoEvent "Request for Transcript of Tax", "Verify Request for Transcript of Tax data using Row Id '"&strRowID&"'", null

    Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Set objData = FRM_DS_GetTestData("Forms_Request", "RequestforTranscriptofTax", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0101_TaxFormIsfor")) Then
		GUI_Object_ValidateProperty objParentObject.WebList("html id:=DropdownBox1"), "selection", FRM_DS_GetValue(objData, "IR0101_TaxFormIsfor"), "IR0101_TaxFormIsfor"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0102_FirstName")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X2"), FRM_DS_GetValue(objData, "IR0102_FirstName"), "IR0102_FirstName"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0103_LastName")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=txt1aLName"), FRM_DS_GetValue(objData, "IR0103_LastName"), "IR0103_LastName"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0104_1stSSN")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X4"), FRM_DS_GetValue(objData, "IR0104_1stSSN"), "IR0104_1stSSN"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0124_RequestFormName")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X24"), FRM_DS_GetValue(objData, "IR0124_RequestFormName"), "IR0124_RequestFormName"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0146_ReturnTranscript")) Then
        FRM_VerifyTrue GUI_WebCheckbox_IsChecked(objParentObject.WebCheckBox("html id:=__cid_CheckBox1_Ctrl")), "Verify IR0146_ReturnTranscript", "The checkbox is checked"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0125_EndDate1")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X25"), FRM_DS_GetValue(objData, "IR0125_EndDate1"), "IR0125_EndDate1"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0128_Title")) Then
	    'in some environments script can't interact with WinEdit until it is visible. Clicking on phone webedit makes our WinEdit visible 
	    objParentObject.WebEdit("html id:=l_IRS4506X27").Click
		Wait 2
		GUI_Object_ValidateTrimText objParentObject.WinEdit("micClass:=WinEdit", "index:=0"), FRM_DS_GetValue(objData, "IR0128_Title"), "IR0128_Title"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IR0127_PhoneNum")) Then
		GUI_Object_ValidateValue objParentObject.WebEdit("html id:=l_IRS4506X27"), FRM_DS_GetValue(objData, "IR0127_PhoneNum"), "IR0127_PhoneNum"
	End If
	
	Set objData = Nothing
    Set objParentObject = Nothing
		
End Function



'This function is used to Copy the Borrower, Co-Borrower Details 
'@code
'    Function BIZ_RequestforTranscripOfTax_NewFormNUpdateNSaveDetails(strFormName)
'@endcode
'@param strFormName The name of the form

Function BIZ_RequestforTranscripOfTax_NewFormNUpdateNSaveDetails(strFormName)
	FRM_Logger_ReportInfoEvent "Request for Transcript of Tax "& strFormName, "Create a New Form And Update the Details for Form "&strFormName, null
    	
	BIZ_Forms_Open "Request for Transcript of Tax"

	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")

	Set RequestForCopyOfTranscriptFrom = SwfWindow("swfname:=MainForm").Page("index:=0")
	GUI_WebList_Select RequestForCopyOfTranscriptFrom.WebList("html id:=DropdownBox1"), "Borrower"
	GUI_WebButton_Click RequestForCopyOfTranscriptFrom.WebButton("html id:=Button1")
	GUI_WebList_Select RequestForCopyOfTranscriptFrom.WebList("html id:=DropdownBox1"), "Co-Borrower"
	GUI_WebButton_Click RequestForCopyOfTranscriptFrom.WebButton("html id:=Button1")

	GUI_WebList_Select RequestForCopyOfTranscriptFrom.WebList("html id:=DropdownBox1"), "Both"
	GUI_WebButton_Click RequestForCopyOfTranscriptFrom.WebButton("html id:=Button1")
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\RequestforForms.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\SelfEmployedIncome.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_SelfEmployedIncome BIZ_Forms_SelfEmployedIncome
'
' List of functions here
' @code
'   Function BIZ_SelfEmployedIncome_SetForm1040(strRowID)
'	Function BIZ_Common_SelfEmplyedIncome_SetForm1040(objParentObject, strRowID)
'   Function BIZ_SelfEmployedIncome_SetForm1065(strRowID)
'	Function BIZ_Common_SelfEmplyedIncome_SetForm1065(objParentObject, strRowID)
'   Function BIZ_SelfEmployedIncome_SetForm1120S(strRowID)
'	Function BIZ_Common_SelfEmplyedIncome_SetForm1120S(objParentObject, strRowID)
'   Function BIZ_SelfEmployedIncome_SetForm1120(strRowID)
'	Function BIZ_Common_SelfEmplyedIncome_SetForm1120(objParentObject, strRowID)
'   Function BIZ_SelfEmployedIncome_SetBusiness(strRowID)
'	Function BIZ_Common_SelfEmplyedIncome_SetBusiness(objParentObject, strRowID)
'   Function BIZ_SelfEmployedIncome_VerifyBusiness(strRowID)
'   Function BIZ_SelfEmployedIncome_VerifyBorrower(strRowID)
'   Function BIZ_SelfEmployedIncome_VerifyCoBorrower(strRowID)
'   Function BIZ_SelfEmployedIncome_VerifyProperty(strRowID)
'   Function BIZ_SelfEmployedIncome_VerifyForm1065(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set For 1040 
'@code
'    BIZ_SelfEmployedIncome_SetForm1040(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_SetForm1040(strRowID)

    FRM_Logger_ReportInfoEvent "Self-Employed income 1084", "Set Form 1040 using Row Id '"&strRowID&"' in the Borrower datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
	BIZ_Forms_Open "Self-Employed Income 1084"
	BIZ_Common_SelfEmployedIncome_SetForm1040 objSummaryPage, strRowID
	
	Set objSummaryPage = Nothing
End Function



'This function is for set Form 1040 
'@code
'    BIZ_Common_SelfEmployedIncome_SetForm1040(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SelfEmployedIncome_SetForm1040(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetForm1040", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X6_IncomeTaxReturnYear")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X6"), FRM_DS_GetValue(objData, "FM1084X6_IncomeTaxReturnYear")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X50_IncomeTaxReturnYear")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X50"), FRM_DS_GetValue(objData, "FM1084X50_IncomeTaxReturnYear")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X7_W2Income")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=textBox3"), FRM_DS_GetValue(objData, "FM1084X7_W2Income")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X51_W2Income")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "FM1084X51_W2Income")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X23_InterestIncome")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "FM1084X23_InterestIncome")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X66_InterestIncome")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "FM1084X66_InterestIncome")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X24_Dividends")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "FM1084X24_Dividends")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X67_Dividends")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox9"), FRM_DS_GetValue(objData, "FM1084X67_Dividends")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X178_NetProfit")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X178"), FRM_DS_GetValue(objData, "FM1084X178_NetProfit")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X179_NetProfit")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X179"), FRM_DS_GetValue(objData, "FM1084X179_NetProfit")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X25_NonRecurring")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X8"), FRM_DS_GetValue(objData, "FM1084X25_NonRecurring")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X68_NonRecurring")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X52"), FRM_DS_GetValue(objData, "FM1084X68_NonRecurring")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X26_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X9"), FRM_DS_GetValue(objData, "FM1084X26_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X69_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X53"), FRM_DS_GetValue(objData, "FM1084X69_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X27_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X10"), FRM_DS_GetValue(objData, "FM1084X27_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X70_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X54"), FRM_DS_GetValue(objData, "FM1084X70_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X28_NondeductibleMeals")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X11"), FRM_DS_GetValue(objData, "FM1084X28_NondeductibleMeals")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X71_NondeductibleMeals")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X55"), FRM_DS_GetValue(objData, "FM1084X71_NondeductibleMeals")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X29_BusinessUse")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X12"), FRM_DS_GetValue(objData, "FM1084X29_BusinessUse")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X72_BusinessUse")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X56"), FRM_DS_GetValue(objData, "FM1084X72_BusinessUse")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X30_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X13"), FRM_DS_GetValue(objData, "FM1084X30_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X73_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X57"), FRM_DS_GetValue(objData, "FM1084X73_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X31_RecurringCapitalGains")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X14"), FRM_DS_GetValue(objData, "FM1084X31_RecurringCapitalGains")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X74_RecurringCapitalGains")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X58"), FRM_DS_GetValue(objData, "FM1084X74_RecurringCapitalGains")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X34_RoyaltiesReceived")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X15"), FRM_DS_GetValue(objData, "FM1084X34_RoyaltiesReceived")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X77_RoyaltiesReceived")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X59"), FRM_DS_GetValue(objData, "FM1084X77_RoyaltiesReceived")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X35_TotalExpenses")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X16"), FRM_DS_GetValue(objData, "FM1084X35_TotalExpenses")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X78_TotalExpenses")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X60"), FRM_DS_GetValue(objData, "FM1084X78_TotalExpenses")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X36_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X17"), FRM_DS_GetValue(objData, "FM1084X36_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X79_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X61"), FRM_DS_GetValue(objData, "FM1084X79_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X180_NetFarmProfit")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox10"), FRM_DS_GetValue(objData, "FM1084X180_NetFarmProfit")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X181_NetFarmProfit")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox16"), FRM_DS_GetValue(objData, "FM1084X181_NetFarmProfit")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X38_NontaxPortion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "FM1084X38_NontaxPortion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X81_NontaxPortion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox17"), FRM_DS_GetValue(objData, "FM1084X81_NontaxPortion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X39_NonrecurringOtherLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "FM1084X39_NonrecurringOtherLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X82_NonrecurringOtherLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "FM1084X82_NonrecurringOtherLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X40_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox13"), FRM_DS_GetValue(objData, "FM1084X40_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X83_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox21"), FRM_DS_GetValue(objData, "FM1084X83_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X41_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox14"), FRM_DS_GetValue(objData, "FM1084X41_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X84_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox22"), FRM_DS_GetValue(objData, "FM1084X84_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X42_BusinessUse")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox15"), FRM_DS_GetValue(objData, "FM1084X42_BusinessUse")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X85_BusinessUse")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox23"), FRM_DS_GetValue(objData, "FM1084X85_BusinessUse")  
	End If
	
	Set objData = Nothing		
End Function



'This function is for set For 1065
'@code
'    BIZ_SelfEmployedIncome_SetForm1065(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_SetForm1065(strRowID)

    FRM_Logger_ReportInfoEvent "Self-Employed income 1084", "Set Form 1065 using Row Id '"&strRowID&"' in the Borrower datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
	BIZ_Common_SelfEmployedIncome_SetForm1065 objSummaryPage, strRowID
	
	Set objSummaryPage = Nothing
End Function



'This function is for set Form 1065
'@code
'    BIZ_Common_SelfEmployedIncome_SetForm1065(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SelfEmployedIncome_SetForm1065(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetForm1065", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X96_IncomeTaxReturnYear")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X6"), FRM_DS_GetValue(objData, "FM1084X96_IncomeTaxReturnYear")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X134_IncomeTaxReturnYear")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM1084X50"), FRM_DS_GetValue(objData, "FM1084X134_IncomeTaxReturnYear")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X44_OrdinaryIncome")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=textBox3"), FRM_DS_GetValue(objData, "FM1084X44_OrdinaryIncome")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X87_OrdinaryIncome")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "FM1084X87_OrdinaryIncome")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X45_NetRental")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "FM1084X45_NetRental")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X88_NetRental")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox21"), FRM_DS_GetValue(objData, "FM1084X88_NetRental")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X46_GuaranteedPayments")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "FM1084X46_GuaranteedPayments")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X89_GuaranteedPayments")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox22"), FRM_DS_GetValue(objData, "FM1084X89_GuaranteedPayments")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X97_OrdinaryLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "FM1084X97_OrdinaryLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X135_OrdinaryLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox23"), FRM_DS_GetValue(objData, "FM1084X135_OrdinaryLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X98_NonRecurringOtherLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "FM1084X98_NonRecurringOtherLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X136_NonRecurringOtherLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox24"), FRM_DS_GetValue(objData, "FM1084X136_NonRecurringOtherLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X99_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox9"), FRM_DS_GetValue(objData, "FM1084X99_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X137_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox25"), FRM_DS_GetValue(objData, "FM1084X137_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X100_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox10"), FRM_DS_GetValue(objData, "FM1084X100_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X138_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox26"), FRM_DS_GetValue(objData, "FM1084X138_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X101_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "FM1084X101_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X139_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox27"), FRM_DS_GetValue(objData, "FM1084X139_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X102_MortgageNotesPayable")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "FM1084X102_MortgageNotesPayable")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X140_MortgageNotesPayable")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox28"), FRM_DS_GetValue(objData, "FM1084X140_MortgageNotesPayable")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X103_NondeductibleTravel")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox13"), FRM_DS_GetValue(objData, "FM1084X103_NondeductibleTravel")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X141_NondeductibleTravel")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox29"), FRM_DS_GetValue(objData, "FM1084X141_NondeductibleTravel")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X105_MultipliedBy")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox16"), FRM_DS_GetValue(objData, "FM1084X105_MultipliedBy")  
	End If
	
	Set objData = Nothing		
End Function



'This function is for set For 1120S
'@code
'    BIZ_SelfEmployedIncome_SetForm1120S(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_SetForm1120S(strRowID)

    FRM_Logger_ReportInfoEvent "Self-Employed income 1084", "Set Form 1120S using Row Id '"&strRowID&"' in the Borrower datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
	BIZ_Common_SelfEmployedIncome_SetForm1120S objSummaryPage, strRowID
	
	Set objSummaryPage = Nothing
End Function



'This function is for set Form 1120S
'@code
'    BIZ_Common_SelfEmployedIncome_SetForm1120S(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SelfEmployedIncome_SetForm1120S(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetForm1120S", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X47_OrdinaryIncome")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox33"), FRM_DS_GetValue(objData, "FM1084X47_OrdinaryIncome")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X90_OrdinaryIncome")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox35"), FRM_DS_GetValue(objData, "FM1084X90_OrdinaryIncome")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X48_NetRental")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=textBox34"), FRM_DS_GetValue(objData, "FM1084X48_NetRental")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X91_NetRental")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox36"), FRM_DS_GetValue(objData, "FM1084X91_NetRental")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X107_NonrecurringOtherLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox41"), FRM_DS_GetValue(objData, "FM1084X107_NonrecurringOtherLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X144_NonrecurringOtherLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox48"), FRM_DS_GetValue(objData, "FM1084X144_NonrecurringOtherLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X108_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox42"), FRM_DS_GetValue(objData, "FM1084X108_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X145_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox49"), FRM_DS_GetValue(objData, "FM1084X145_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X109_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox43"), FRM_DS_GetValue(objData, "FM1084X109_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X146_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox50"), FRM_DS_GetValue(objData, "FM1084X146_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X110_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox44"), FRM_DS_GetValue(objData, "FM1084X110_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X147_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox51"), FRM_DS_GetValue(objData, "FM1084X147_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X111_MortgageNotesPayable")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox45"), FRM_DS_GetValue(objData, "FM1084X111_MortgageNotesPayable")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X148_MortgageNotesPayable")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData, "FM1084X148_MortgageNotesPayable")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X112_NondeductibleTravel")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox46"), FRM_DS_GetValue(objData, "FM1084X112_NondeductibleTravel")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X149_NondeductibleTravel")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox53"), FRM_DS_GetValue(objData, "FM1084X149_NondeductibleTravel")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X114_MultipliedBy")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox37"), FRM_DS_GetValue(objData, "FM1084X114_MultipliedBy")  
	End If
	
	Set objData = Nothing		
End Function



'This function is for set For 1120
'@code
'    BIZ_SelfEmployedIncome_SetForm1120(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_SetForm1120(strRowID)

    FRM_Logger_ReportInfoEvent "Self-Employed income 1084", "Set Form 1120 using Row Id '"&strRowID&"' in the Borrower datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
	BIZ_Common_SelfEmployedIncome_SetForm1120 objSummaryPage, strRowID
	
	Set objSummaryPage = Nothing
End Function



'This function is for set Form 1120
'@code
'    BIZ_Common_SelfEmployedIncome_SetForm1120(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SelfEmployedIncome_SetForm1120(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetForm1120", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X116_TaxableIncome")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox62"), FRM_DS_GetValue(objData, "FM1084X116_TaxableIncome")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X152_TaxableIncome")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox69"), FRM_DS_GetValue(objData, "FM1084X152_TaxableIncome")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X117_TotalTax")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=textBox61"), FRM_DS_GetValue(objData, "FM1084X117_TotalTax")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X153_TotalTax")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox68"), FRM_DS_GetValue(objData, "FM1084X153_TotalTax")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X118_NonrecurringLosses")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox60"), FRM_DS_GetValue(objData, "FM1084X118_NonrecurringLosses")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X154_NonrecurringLosses")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox67"), FRM_DS_GetValue(objData, "FM1084X154_NonrecurringLosses")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X119_NonrecurringOtherLosses")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox59"), FRM_DS_GetValue(objData, "FM1084X119_NonrecurringOtherLosses")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X155_NonrecurringOtherLosses")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData, "FM1084X155_NonrecurringOtherLosses")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X120_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox58"), FRM_DS_GetValue(objData, "FM1084X120_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X156_Depreciation")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox65"), FRM_DS_GetValue(objData, "FM1084X156_Depreciation")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X121_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox57"), FRM_DS_GetValue(objData, "FM1084X121_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X157_Depletion")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox64"), FRM_DS_GetValue(objData, "FM1084X157_Depletion")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X122_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox38"), FRM_DS_GetValue(objData, "FM1084X122_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X158_AmortizationLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox63"), FRM_DS_GetValue(objData, "FM1084X158_AmortizationLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X123_NetOperatingLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox74"), FRM_DS_GetValue(objData, "FM1084X123_NetOperatingLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X159_NetOperatingLoss")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox81"), FRM_DS_GetValue(objData, "FM1084X159_NetOperatingLoss")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X124_MortgageNotesPayable")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox75"), FRM_DS_GetValue(objData, "FM1084X124_MortgageNotesPayable")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X160_MortgageNotesPayable")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox80"), FRM_DS_GetValue(objData, "FM1084X160_MortgageNotesPayable")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X125_NondeductibleTravel")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox73"), FRM_DS_GetValue(objData, "FM1084X125_NondeductibleTravel")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X161_NondeductibleTravel")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox79"), FRM_DS_GetValue(objData, "FM1084X161_NondeductibleTravel")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X129_Dividends")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox71"), FRM_DS_GetValue(objData, "FM1084X129_Dividends")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X164_Dividends")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox77"), FRM_DS_GetValue(objData, "FM1084X164_Dividends")  
	End If

	Set objData = Nothing		
End Function



'This function is for set Business Name
'@code
'    BIZ_SelfEmployedIncome_SetBusiness(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_SetBusiness(strRowID)

    FRM_Logger_ReportInfoEvent "Self-Employed income 1084", "Set Business name using Row Id '"&strRowID&"' in the Borrower datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
	BIZ_Common_SelfEmployedIncome_SetBusiness objSummaryPage, strRowID
	
	Set objSummaryPage = Nothing
End Function



'This function is for set Business Name
'@code
'    BIZ_Common_SelfEmployedIncome_SetBusiness(objParentObject, strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SelfEmployedIncome_SetBusiness(objParentObject, strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetBusiness", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X177_BusinessName")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "FM1084X177_BusinessName")  
	End If
	Set objData = Nothing		
End Function



'This function is for Verify Business Name
'@code
'    BIZ_SelfEmployedIncome_VerifyBusiness(strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_VerifyBusiness(strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetBusiness", strRowID)
	
	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X177_BusinessName")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "FM1084X177_BusinessName"), "Business Name"
	End If
	Set objData = Nothing
	Set objSummarypage = Nothing		
End Function



'This function is for Verify Borrower Information
'@code
'    BIZ_SelfEmployedIncome_VerifyBorrower(strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_VerifyBorrower(strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetBorrower", strRowID)
	
	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4000_FirstName")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_36"), FRM_DS_GetValue(objData, "4000_FirstName"), "First Name"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4002_LastName")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_37"), FRM_DS_GetValue(objData, "4002_LastName"), "Last Name"
	End If

	Set objData = Nothing
	Set objSummarypage = Nothing		
End Function



'This function is for Verify CoBorrower Information
'@code
'    BIZ_SelfEmployedIncome_VerifyCoBorrower(strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_VerifyCoBorrower(strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetCoBorrower", strRowID)
	
	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4004_FirstName")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_68"), FRM_DS_GetValue(objData, "4004_FirstName"), "First Name"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4006_LastName")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_69"), FRM_DS_GetValue(objData, "4006_LastName"), "Last Name"
	End If

	Set objData = Nothing
	Set objSummarypage = Nothing		
End Function



'This function is for Verify Property Information
'@code
'    BIZ_SelfEmployedIncome_VerifyProperty(strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_VerifyProperty(strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetProperty", strRowID)
	
	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "11_Address")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_11"), FRM_DS_GetValue(objData, "11_Address"), "Address"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "12_City")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_12"), FRM_DS_GetValue(objData, "12_City"), "City"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "14_State")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_14"), FRM_DS_GetValue(objData, "14_State"), "State"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "15_Zip")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_15"), FRM_DS_GetValue(objData, "15_Zip"), "Zip"
	End If

	Set objData = Nothing
	Set objSummarypage = Nothing		
End Function



'This function is for Verify Form 1065
'@code
'    BIZ_SelfEmployedIncome_VerifyForm1065(strRowID)
'@endcode
'@param objParentObject parent object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SelfEmployedIncome_VerifyForm1065(strRowID)

	Set objData = FRM_DS_GetTestData("Forms_SelfEmployedIncome", "SetForm1065", strRowID)
	
	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X96_IncomeTaxReturnYear")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_FM1084X6"), FRM_DS_GetValue(objData, "FM1084X96_IncomeTaxReturnYear"), "Income Tax Return Year"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM1084X134_IncomeTaxReturnYear")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_FM1084X50"), FRM_DS_GetValue(objData, "FM1084X134_IncomeTaxReturnYear"), "Income Tax Return Year"
	End If
	Set objData = Nothing
	Set objSummarypage = Nothing		
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\SelfEmployedIncome.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\SettlementServiceProviderList.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_SettlementServiceProviderList BIZ_Forms_SettlementServiceProviderList
'
' List of functions here
'@code
'	Function BIZ_SettlementServiceProviderList_AddNewProvider(strRowID)
'   Function BIZ_Common_SettlementServiceProviderList_AddNewProvider(objParentObject, strRowID)
'	Function BIZ_Verify_SettlementServiceProviderList_ProviderDetail(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for Adding a new provider
'@code
'    BIZ_SettlementServiceProviderList_AddNewProvider(strRowID)
'@endcode

Function BIZ_SettlementServiceProviderList_AddNewProvider(strRowID)
	
	FRM_Logger_ReportInfoEvent "Settlement Service Provider List", "Set Settlement Service Provider data using Row Id '"&strRowID&"'", null
    
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnIconAdd")
    Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	BIZ_Common_SettlementServiceProviderList_AddNewProvider objPage, strRowID	 
	
	Set objPage = Nothing	
      
End Function	


'This function is for set information on Settlement Service Provider List form
'@code
'    BIZ_Common_SettlementServiceProviderList_AddNewProvider(objParentObject, strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SettlementServiceProviderList_AddNewProvider(objParentObject, strRowID)
    
    Set objData = FRM_DS_GetTestData("Forms_SettlementServiceProviderList", "SettlementServiceProvider", strRowID)
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceCategory")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_SP0001","index:=0"), FRM_DS_GetValue(objData, "ServiceCategory") 	'ServiceCategory
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyName")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox2","index:=0"), FRM_DS_GetValue(objData, "CompanyName") 	'CompanyName
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Address") ) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox3","index:=0"), FRM_DS_GetValue(objData, "Address") 	'Address
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_SP0006","index:=0"), FRM_DS_GetValue(objData, "Zip") 	'Zip
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CannotShopFor")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox1_Ctrl","index:=0"), Cint(FRM_DS_GetValue(objData, "CannotShopFor"))
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ContactName")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox6","index:=0"), FRM_DS_GetValue(objData, "ContactName") 	'ContactName
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeLine1Description")) then 
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox10","index:=0"), trim(FRM_DS_GetValue(objData, "FeeLine1Description"))   'FeeLine1Description
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeLine1Amount")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox20","index:=0"), FRM_DS_GetValue(objData, "FeeLine1Amount")	'FeeLine1Amount
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeLine2Description")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox11","index:=0"), FRM_DS_GetValue(objData, "FeeLine2Description") 	'FeeLine2Description
	End If	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeLine2Amount")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox21","index:=0"), FRM_DS_GetValue(objData, "FeeLine2Amount") 	'FeeLine2Amount
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Phone")) Then	
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "Phone") 	'Phone
	End If	
	
	Set objData = Nothing		
    
End Function



'This function is for verify information on Settlement Service Provider List form
'@code
'    BIZ_Verify_SettlementServiceProviderList_ProviderDetail(strRowID)
'@endcode
'@param objParentObject the Parent Object
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Verify_SettlementServiceProviderList_ProviderDetail(strRowID)
    
    FRM_Logger_ReportInfoEvent "Settlement Service Provider List", "Verify Settlement Service Provider data using Row Id '"&strRowID&"'", null
    
    Set objPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_SettlementServiceProviderList", "SettlementServiceProvider", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ServiceCategory")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=l_SP0001","index:=0"), FRM_DS_GetValue(objData, "ServiceCategory"), "ServiceCategory"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyName")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox2","index:=0"), FRM_DS_GetValue(objData, "CompanyName"), "CompanyName"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Address") ) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox3","index:=0"), FRM_DS_GetValue(objData, "Address"), "Address"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=l_SP0006","index:=0"), FRM_DS_GetValue(objData, "Zip"), "Zip"
	End If   
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CannotShopFor")) Then		
		GUI_Object_ValidateProperty objPage.WebCheckBox("html id:=__cid_CheckBox1_Ctrl","index:=0"), "checked", FRM_DS_GetValue(objData, "CannotShopFor"), "Cannot Shop for"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ContactName")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox6","index:=0"), FRM_DS_GetValue(objData, "ContactName"), "ContactName"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeLine1Description")) then 
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox10","index:=0"), FRM_DS_GetValue(objData, "FeeLine1Description"), "FeeLine1Description"
	End if	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeLine1Amount")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox20","index:=0"), FormatNumber(FRM_DS_GetValue(objData, "FeeLine1Amount")), "FeeLine1Amount"
	End If	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeLine2Description")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox11","index:=0"), FRM_DS_GetValue(objData, "FeeLine2Description"), "FeeLine2Description"
	End If	  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeLine2Amount")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox21","index:=0"), FRM_DS_GetValue(objData, "FeeLine2Amount"), "FeeLine2Amount"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Phone")) Then	
		GUI_Object_ValidateValue objPage.WebEdit("html id:=TextBox7","index:=0"), FRM_DS_GetValue(objData, "Phone"), "Phone"
	End If
	
	Set objData = Nothing
    Set objPage = Nothing

End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\SettlementServiceProviderList.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\TransmittalSummary.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_TransmittalSummary BIZ_Forms_TransmittalSummary
'
' List of functions here
'@code
'   Function BIZ_TransmittalSummary_SetProperty(strRowID)
'   Function BIZ_TransmittalSummary_SetUnderwritingInformation(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set property Information 
'@code
'    BIZ_TransmittalSummary_SetProperty(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_TransmittalSummary_SetProperty(strRowID)

    FRM_Logger_ReportInfoEvent "Transmittal Summary", "Set property data using Row Id '"&strRowID&"' in the Borrower datasheet", null

    Set objTransmittalSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    
    BIZ_Forms_Open "Transmittal Summary"

    Set objData = FRM_DS_GetTestData("Forms_TransmittalSummary", "SetProperty", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1553_PropertyType")) Then
        GUI_WebList_Select objTransmittalSummaryPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "1553_PropertyType")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1553_PropertyType")) Then
		objTransmittalSummaryPage.WebCheckBox("html id:=__cid_CheckBox26_Ctrl").Set "On"
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "5_RiskAssessment")) Then
		objTransmittalSummaryPage.WebList("html id:=DropdownBox5").Select  FRM_DS_GetValue(objData, "5_RiskAssessment")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "6_PropertyReview")) Then
		objTransmittalSummaryPage.WebList("html id:=DropdownBox6").Select  FRM_DS_GetValue(objData, "6_PropertyReview")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "7_PropertyFormType")) Then
		objTransmittalSummaryPage.WebList("html id:=DropdownBox7").Select  FRM_DS_GetValue(objData, "7_PropertyFormType")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "l_1216_UnderwriterComments")) Then
		objTransmittalSummaryPage.WebEdit("html id:=l_1216").Set FRM_DS_GetValue(objData, "l_1216_UnderwriterComments")
	end if
    
    set objData = Nothing
    Set objTransmittalSummaryPage = Nothing
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\TransmittalSummary.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ULDDPDD.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_ULDDPDD BIZ_Forms_ULDDPDD
'
' List of functions here
'@code
'   Function BIZ_ULDDPDD_Export(strtab)
'	Function BIZ_ULDDPDD_SetHOEPAStatus(strFannieTab,strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'@description This function is for export the file to local folder Interest Basis Days
'@code
'    BIZ_ULDDPDD_Export(strtab)
'@endcode
'@param strtab The tab that needs to be selected 

Function BIZ_ULDDPDD_Export(strtab)
	FRM_Logger_ReportInfoEvent BIZ_ULDDPDD_Export, strtab & "Export ULDD PDD", Null
	
	'Under forms click on ULDD/PDD.
	BIZ_Forms_Open "ULDD/PDD"
	
	If(InStr(strtab, "Fannnie") = 0) Then 
		GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfTab("swfname:=tabControl").SwfTab("swfname:=tabControlForm"), strtab
	End If
	
	'Click on 'Export' button.
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=Button1")

	GUI_Dialog_Encompass_YesX 10, "" 
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ExportToLocalDialog"), 60
	'Export to Freddie mac' window will open. 
	'Click on magnifying lens 
	Set objExportDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ExportToLocalDialog")
	If GUI_Object_IsExistX(objExportDialog.SwfObject("swfname:=btnFolder"), 5) Then
		objExportDialog.SwfObject("swfname:=btnFolder").Click
	End If

	'select a location where you want to save the file and click 'ok'.(Browse pop up and save)
	GUI_Dialog_Encompass_OKX 40, ""

	'Click 'ok ' in the pop up Fannie window.
	GUI_SwfButton_Click objExportDialog.SwfButton("swfname:=btnOK")
	
	GUI_Dialog_Encompass_YesX 60, ""

	'The Fannie file has been saved at particular location
	GUI_Dialog_Encompass_OKX 40, ""
End Function



'This function is used to Set HOEPA Status 
'@code
'    Function BIZ_ULDDPDD_SetHOEPAStatus(strFannieTab,strRowID)
'@endcode
'@Param strRowID  points row in excel
'@Param strFannieTab    Fannie Mae

Function BIZ_ULDDPDD_SetHOEPAStatus(strFannieTab,strRowID)
		
	FRM_Logger_ReportInfoEvent "BIZ_ULDDPDD_Export", strTab & "Export ULDD PDD", Null
	'Under forms click on ULDD/PDD.
	BIZ_Forms_Open "ULDD/PDD"
	Set objData = FRM_DS_GetTestData("ULDDPDD", "Fannie Mae", strRowID)
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfTab("swfname:=tabControl").SwfTab("swfname:=tabControlForm"), strTab
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HOEPA Status")) Then   
	'Added by Savik to validate the HOEPA status now onwards	
	'GUI_WebList_Select SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebList("html id:=DropdownBox29"), FRM_DS_GetValue(objData, "HOEPA Status")
	GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebList("html id:=DropdownBox29"),FRM_DS_GetValue(objData, "HOEPA Status"),"HOEPA Status"
	End If
	'Set Subject Loan Unpaid Principal Balance Amount
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ULDD.X1_SubjectLoanUnpaidPrincipalBalanceAmount")) Then 
		val=FRM_DS_GetValue(objData, "ULDD.X1_SubjectLoanUnpaidPrincipalBalanceAmount")
		GUI_WebEdit_Set SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").WebEdit("html id:=TextBox1"), val
		FRM_logger_ReportInfoEvent "ULDD.X1_SubjectLoanUnpaidPrincipalBalanceAmount","Field ULDD.X1_SubjectLoanUnpaidPrincipalBalanceAmount has been set as " &val& " ", null
	End If	 
	Set objData = Nothing	
		 
	
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\ULDDPDD.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\USDAManagement.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_USDAMangement BIZ_Forms_USDAMangement
'
' List of functions here
' @code
'   Function BIZ_USDAMangement_SelectInterestBasisDays(strRowID)
'   Function BIZ_Common_USDAMangement_SelectInterestBasisDays(objParentObject, strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'@description This function is for select Interest Basis Days
'@code
'    BIZ_USDAMangement_SelectInterestBasisDays(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_USDAMangement_SelectInterestBasisDays(strRowID)

    FRM_Logger_ReportInfoEvent "USDA Management", "Select Interest Basis Days using Row Id '"&strRowID&"' in the LoanClosingReport datasheet", null

    GUI_List_Select SwfWindow("swfname:=MainForm").SwfList("swfname:=emFormMenuBox"), "USDA Management"
    GUI_Object_WaitProperty SwfWindow("swfname:=MainForm").SwfLabel("swfname:=labelTitle"), "text", "USDA Management"
    
	Dim objLoanWindow, objUSDAManagement, objPageTab
    Set objLoanWindow = SwfWindow("swfname:=MainForm")
	Set objUSDAManagement = objLoanWindow.Page("index:=0")
	Set objPageTab = objLoanWindow.SwfTab("swfname:=tabControlForm")
    
	GUI_SwfTab_Click objPageTab, "Loan Closing Report"
	BIZ_Common_USDAMangement_SelectInterestBasisDays objUSDAManagement, strRowID
	
	Set objLoanWindow = Nothing
    Set objUSDAManagement = Nothing
    Set objPageTab = Nothing	
	
End Function



'@This function is a common function for select Interest Basis Days in USDA Management for or in Data Templates
'@code
'    BIZ_Common_USDAMangement_SelectInterestBasisDays(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_USDAMangement_SelectInterestBasisDays(objParentObject, strRowID)
        
    Set objData = FRM_DS_GetTestData("Forms_USDAManagement", "SelectInterestBasisDays", strRowID)
	GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox8"), Cstr(objData.Item("InterestBasisDays"))
	
	Set objData = Nothing	
	
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\USDAManagement.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VA.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_VA BIZ_Forms_VA
'
' List of functions here
'@code
'   Function BIZ_VALoanSummary_SetVA26_0286(strRowID)
'	Function BIZ_VAReasonableValue_SetVA26_1805(strRowID)
'	Function BIZ_VALoanDisbursement_SetVA26_1820(strRowID)
'	Function BIZ_VALoanAnalysis_SetVA26_6393(strRowID)
'	Function BIZ_VAVeteranStatus_SetVA26_8261A(strRowID)
'	Function BIZ_VAManagement_BasicInfo(strRowID)
'	Function BIZ_VAManagement_Qualification(strRowID)
'	Function BIZ_VAManagement_Tracking(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is to set VA 26-0286 Loan Summary Details
'@code
'    BIZ_VALoanSummary_SetVA26_0286(strRowID)
'@endcode
'@param strRowID
Function BIZ_VALoanSummary_SetVA26_0286(strRowID)

	FRM_Logger_ReportInfoEvent "VALoanSummary", "Set VALoanSummary using Row Id '"&strRowID&"' in the VA LoanSummary Details datasheet", null

	BIZ_Forms_Open "VA 26-0286 Loan Summary"
	Wait g_ShortWaitMedium

	Dim objVAPage, objData
    
	Set objData = FRM_DS_GetTestData("Forms_VA", "VA_26-0286", strRowID)
	Set objVAPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
	
	'VA Case No
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VACaseNo")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_1040"),FRM_DS_GetValue(objData, "VACaseNo") 
	End If
	
	'Veteran Information
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VeteranInformation")) Then
		GUI_WebList_Select  objVAPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "VeteranInformation")
	End If

	'Entitlement Code from VA Cent of Eligibility
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EntitlementCodeVACentofEligibility")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_VASUMMX2"),FRM_DS_GetValue(objData, "EntitlementCodeVACentofEligibility") 
	End If

	'Entitlement Amount
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EntitlementAmount")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_VASUMMX3"),FRM_DS_GetValue(objData, "EntitlementAmount") 
	End If

	'Branch of Service
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BranchofService")) Then
		GUI_WebList_Select  objVAPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "BranchofService")
	End If

    'Status
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Status")) Then
		GUI_WebList_Select  objVAPage.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "Status")
	End If

	'Number of UNits
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NumberofUnits")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_16"),FRM_DS_GetValue(objData, "NumberofUnits") 
	End If

	'Property Address
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyAddress")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_11"),FRM_DS_GetValue(objData, "PropertyAddress") 
	End If
	
	'City
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_12"),FRM_DS_GetValue(objData, "City") 
	End If
	
	'State
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_14"),FRM_DS_GetValue(objData, "State") 
	End If
	
	'Zip
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ZIP")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_15"),FRM_DS_GetValue(objData, "ZIP") 
	End If

	'County
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "County")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_13"),FRM_DS_GetValue(objData, "County") 
	End If
	
End Function



'This function is to set VA 26-1805 Reasonable Value details
'@code
'    BIZ_VAReasonableValue_SetVA26_1805(strRowID)
'@endcode
'@param strRowID

Function BIZ_VAReasonableValue_SetVA26_1805(strRowID)

	FRM_Logger_ReportInfoEvent "VAReasonableValue", "Set VAReasonableValue using Row Id '"&strRowID&"' in the VA Reasonable Value Details datasheet", null

	BIZ_Forms_Open "VA 26-1805 Reasonable Value"
	Wait g_ShortWaitMedium

	Dim objVAPage, objData
    
	Set objData = FRM_DS_GetTestData("Forms_VA", "VA_26-1805", strRowID)
	Set objVAPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
	
	'Name of Appraiser
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NameofAppraiser")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_618"),FRM_DS_GetValue(objData, "NameofAppraiser") 
	End If
	
End Function
	
 

'This function is to set VA 26-1820 Loan Disbursement Value details
'@code
'    BIZ_VALoanDisbursement_SetVA26_1820(strRowID)
'@endcode
'@param strRowID

Function BIZ_VALoanDisbursement_SetVA26_1820(strRowID)

	FRM_Logger_ReportInfoEvent "VALoanDisbursement", "Set VALoanDisbursement using Row Id '"&strRowID&"' in the VA Loan Disbursement Value Details datasheet", null
	
	BIZ_Forms_Open "VA 26-1820 Loan Disbursement"
	Wait g_ShortWaitMedium

	Dim objVAPage, objData
    
	Set objData = FRM_DS_GetTestData("Forms_VA", "VA_26-1820", strRowID)
	Set objVAPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
	
	'Title of property vested in Veteran and spouse
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TitleofPropertyVestedIn")) Then
		GUI_WebCheckbox_Set objVAPage.WebCheckBox("html id:=__cid_CheckBox7_Ctrl"), FRM_DS_GetValue(objData, "TitleofPropertyVestedIn") 
	End If	
	
	'Name of authorized agent
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "322_Name")) Then
		GUI_WebEdit_Set objVAPage.WebEdit("html id:=TextBox53"),FRM_DS_GetValue(objData, "322_Name")
	End If
End Function
	


'This function is to set VA 26-6393 Loan Analysis  Disbursement Value details
'@code
'    BIZ_VALoanAnalysis_SetVA26_6393(strRowID)
'@endcode

Function BIZ_VALoanAnalysis_SetVA26_6393(strRowID)

FRM_Logger_ReportInfoEvent "VALoanAnalysis", "Set VALoanAnalysis using Row Id '"&strRowID&"' in the VA Loan Analysis Disbursement Value Details datasheet", null

BIZ_Forms_Open "VA 26-6393 Loan Analysis"
Wait g_ShortWaitMedium

Dim objVAPage, objData
    
	Set objData = FRM_DS_GetTestData("Forms_VA", "VA_26-6393", strRowID)
	Set objVAPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
	
 	'Utility Included 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "UtilityIncluded")) Then
		GUI_WebList_Select  objVAPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "UtilityIncluded")
	End If
	
	'Federal Inc Tax
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FederalIncTax")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_1306"),FRM_DS_GetValue(objData, "FederalIncTax") 
	End If
	
	'Co-Borrower
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "co-borrower")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=l_1156"),FRM_DS_GetValue(objData, "co-borrower") 
	End If
	
	'Past Credit Report
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PastCreditReport")) Then
		GUI_WebList_Select  objVAPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "PastCreditReport")
	End If
	
	'VA Credit Standards
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VACreditStandards")) Then
		GUI_WebList_Select  objVAPage.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "VACreditStandards")
	End If
	
End Function
	


'This function is to set VA 26-8261A Veteran Status screen details
'@code
'    BIZ_VAVeteranStatus_SetVA26_8261A(strRowID)
'@endcode

Function BIZ_VAVeteranStatus_SetVA26_8261A(strRowID)

	FRM_Logger_ReportInfoEvent "VAVeteranStatus", "Set VAVeteranStatus using Row Id '"&strRowID&"' in the VA Veteran Status Details datasheet", null

	BIZ_Forms_Open "VA 26-8261A Veteran Status"
	Wait g_ShortWaitMedium

	Dim objVAPage, objData
    
	Set objData = FRM_DS_GetTestData("Forms_VA", "VA_26-8261A", strRowID)
	Set objVAPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
	
	'Certification
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Certification")) Then
		GUI_WebList_Select  objVAPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "Certification")
	End If
	
End Function
	
	
	
'This function is to set the data VA Management screen in Basic info tab
'@code
'    BIZ_VAManagement_BasicInfo(strRowID)
'@endcode

Function BIZ_VAManagement_BasicInfo(strRowID)

	FRM_Logger_ReportInfoEvent "VAManagement", "Set VAManagement screen in basic info by using Row Id '"&strRowID&"' in the VA Management screen in basic info Details datasheet", null

	BIZ_Forms_Open "VA Management"
	Wait g_ShortWaitMedium

	Dim objVAPage, objData
    
	Set objData = FRM_DS_GetTestData("Forms_VA", "VAManagement_BasicInfo", strRowID)
	Set objVAPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
	
	'Types of Veteran
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TypeofVeteran")) Then
		GUI_WebList_Select objVAPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "TypeofVeteran")
	End If
	
	'Is this the first use of the VA loan program
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Valoanprogram")) Then
		GUI_WebList_Select objVAPage.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "Valoanprogram")
	End If
	
	'Borrower / Co-Borrower are Married 
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerCo-BorrowerMarried")) Then
		GUI_WebCheckbox_Set objVAPage.WebCheckBox("html id:=__cid_CheckBox1_Ctrl"), FRM_DS_GetValue(objData, "BorrowerCo-BorrowerMarried") 
	End If	
	
	'One or More Borrowers Qualifies as a veteran 
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OneOrMoreBorrowersQualifiesVeteran")) Then
		GUI_WebCheckbox_Set objVAPage.WebCheckBox("html id:=__cid_CheckBox2_Ctrl"), FRM_DS_GetValue(objData, "OneOrMoreBorrowersQualifiesVeteran") 
	End If
	
	'Legal Description
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LegalDescription")) Then
	   GUI_WebEdit_Set objVAPage.WebEdit("html id:=TextBox19"),FRM_DS_GetValue(objData, "LegalDescription") 
	End If
	
End Function
	
	

'This function is to set the data VA Management screen in Qualification tab
'@code
'    BIZ_VAManagement_Qualification(strRowID)
'@endcode

Function BIZ_VAManagement_Qualification(strRowID)

	FRM_Logger_ReportInfoEvent "VAManagement", "Set VAManagement screen in qualification by using Row Id '"&strRowID&"' in the VA Management screen in qualification Details datasheet", null

	BIZ_Forms_Open "VA Management"
	Wait g_ShortWaitLarge

	SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm").Highlight
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"),"Qualification"
	Wait g_ShortWaitLarge

	Dim objVAPage, objData
    
	Set objData = FRM_DS_GetTestData("Forms_VA", "VAManagement_Qualification", strRowID)
	Set objVAPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
	
	'Country Region
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CountryRegion")) Then
		GUI_WebList_Select  objVAPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "CountryRegion")
	End If
	
End Function



'This function is to set the data VA Management screen in Tracking tab
'@code
'    BIZ_VAManagement_Tracking(strRowID)
'@endcode

Function BIZ_VAManagement_Tracking(strRowID)

	FRM_Logger_ReportInfoEvent "VAManagement", "Set VAManagement screen in Tracking details by using Row Id '"&strRowID&"' in the VA Management screen in Tracking Details datasheet", null

	BIZ_Forms_Open "VA Management"
	Wait g_ShortWaitMedium

	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControlForm"),"Tracking"
	Wait g_ShortWaitMedium

	Dim objVAPage, objData
    
	Set objData = FRM_DS_GetTestData("Forms_VA", "VAManagement_Tracking", strRowID)
	Set objVAPage = SwfWindow("swfname:=MainForm").Page("url:=.*","index:=0")
	
	'Flood policy
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FloodPolicy")) Then
		GUI_WebCheckbox_Set objVAPage.WebCheckBox("html id:=__cid_CheckBox8_Ctrl"), FRM_DS_GetValue(objData, "FloodPolicy") 
	End If
	
	'Hazard policy
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HazardPolicy")) Then
		GUI_WebCheckbox_Set objVAPage.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"), FRM_DS_GetValue(objData, "HazardPolicy") 
	End If
	
	'Wood Destroying Policy 
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WoodDestroyingPolicy")) Then
		GUI_WebCheckbox_Set objVAPage.WebCheckBox("html id:=__cid_CheckBox14_Ctrl"), FRM_DS_GetValue(objData, "WoodDestroyingPolicy") 
	End If
	
	'Wind/Hail Policy
 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WindHailPolicy")) Then
		GUI_WebCheckbox_Set objVAPage.WebCheckBox("html id:=__cid_CheckBox12_Ctrl"), FRM_DS_GetValue(objData, "WindHailPolicy") 
	End If
	
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VA.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOD.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_VOD BIZ_Forms_VOD
'
' List of functions here
'@code
'   Function BIZ_VOD_SetVODData(strRowID)
'	Function BIZ_Common_SetVODData(objParentObject, strRowID)
'	Function BIZ_VOD_DeleteVODDeposit(strRowID)
'	Function BIZ_VOD_UpdateVODData(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set VOD data in VOD form
'@code
'    BIZ_VOD_SetVODData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOD_SetVODData(strRowID)

	FRM_Logger_ReportInfoEvent "VOD", "Set VOD data using Row Id '"&strRowID&"'", null
    
    BIZ_Forms_Open "VOD"
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")

	Dim objVODPage
    Set objVODPage = SwfWindow("swfname:=MainForm").Page("micClass:=Page")

	BIZ_Common_SetVODData objVODPage, strRowID
    
	Set objVODPage = Nothing

End Function	



'This function is a common function for set VOD data on 1003 page 2 and VOD form.
'@code
'    BIZ_Common_SetVODData(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SetVODData(objParentObject, strRowID)
	
	Set objData = FRM_DS_GetTestData("Forms_VOD", "SetVODData", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VODIsFor")) Then
		GUI_WebList_Select  objParentObject.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "VODIsFor")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0198_Date")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0098"), FRM_DS_GetValue(objData, "DD0198_Date")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0102_Name")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0002"), FRM_DS_GetValue(objData, "DD0102_Name")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0104_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0004"), FRM_DS_GetValue(objData, "DD0104_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0105_City")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0005"), FRM_DS_GetValue(objData, "DD0105_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0106_State")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0006"), FRM_DS_GetValue(objData, "DD0106_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0107_Zip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0007"), FRM_DS_GetValue(objData, "DD0107_Zip")
		If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities")))Then 
			Set CitiesGrid = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=gvCities")
			GUI_List_ClickRow CitiesGrid, Null, "City Name", FRM_DS_GetValue(objData, "DD0107_Zip"), True, False, False, "Double"
			Set CitiesGrid = Nothing
		End If
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0526_PhoneNumber")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0026"), FRM_DS_GetValue(objData, "DD0526_PhoneNumberr")
	End If
	if SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Exist(3) then
	    SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Click
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0138_PrintUserNameAsTitle")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl"), FRM_DS_GetValue(objData, "DD0138_PrintUserNameAsTitle")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0109_AccountInNameOfLine1")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0009"), FRM_DS_GetValue(objData, "DD0109_AccountInNameOfLine1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0110_AccountNumberLine1")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0010"), FRM_DS_GetValue(objData, "DD0110_AccountNumberLine1")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0111_BalanceLine1")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0011"), FRM_DS_GetValue(objData, "DD0111_BalanceLine1")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AccountTypeLine1")) Then		
		GUI_WinEdit_Type objParentObject.WinEdit("nativeclass:=Edit","index:=0"), FRM_DS_GetValue(objData, "AccountTypeLine1")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0113_AccountInNameOfLine2")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0013"), FRM_DS_GetValue(objData, "DD0113_AccountInNameOfLine2")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0114_AccountNumberLine2")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0014"), FRM_DS_GetValue(objData, "DD0114_AccountNumberLine2")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0115_BalanceLine2")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0015"), FRM_DS_GetValue(objData, "DD0115_BalanceLine2")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AccountTypeLine2")) Then		
		GUI_WinEdit_Type objParentObject.WinEdit("nativeclass:=Edit","index:=1"), FRM_DS_GetValue(objData, "AccountTypeLine2")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0113_AccountInNameOfLine2")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0017"), FRM_DS_GetValue(objData, "DD0117_AccountInNameOfLine3")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0114_AccountNumberLine3")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0018"), FRM_DS_GetValue(objData, "DD0118_AccountNumberLine3")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DD0115_BalanceLine3")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_DD0019"), FRM_DS_GetValue(objData, "DD0119_BalanceLine3")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AccountTypeLine3")) Then		
		GUI_WinEdit_Type objParentObject.WinEdit("nativeclass:=Edit","index:=2"), FRM_DS_GetValue(objData, "AccountTypeLine3")
	End If
	Set objData = Nothing
	
End Function



'This function is used to delete VOD Deposit for the Loan
'@code
'    BIZ_VOD_DeleteVODDeposit(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOD_DeleteVODDeposit(strRowID)
	Dim objVODWindow, objVODList
	Set objData = FRM_DS_GetTestData("Forms_VOD", "DeleteVODData", strRowID)
	Set objVODWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
	Set objVODList = objVODWindow.SwfObject("swfname:=gridList")
	GUI_List_ClickRow objVODList, Null, "Belong To", FRM_DS_GetValue(objData, "DepositName"), True, False, False, "Single"
	objVODWindow.SwfObject("swfname:=btnDelete").Click
	GUI_Dialog_Encompass_YesX 30, "" 
	objVODWindow.SwfButton("swfname:=btnClose").Click
	Set objVODWindow = Nothing
	Set objVODList = Nothing

End Function 



'This function is used to update the VOD data in VOD form.
'@code
'    BIZ_VOD_UpdateVODData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOD_UpdateVODData(strRowID)
	Dim objVODWindow, objVODList
	Set objVODWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
	Set objVODList = objVODWindow.SwfObject("swfname:=gridList")
	Set objData = FRM_DS_GetTestData("Forms_VOD", "UpdateVODData", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DepositName")) Then
		GUI_List_ClickRow objVODList, Null, 1, FRM_DS_GetValue(objData, "DepositName"), True, False, False, "Double"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DepositValue")) Then
		GUI_WebEdit_Set  objVODWindow.Page("index:=0").WebEdit("html id:=l_DD0011"), FRM_DS_GetValue(objData, "DepositValue")
	End If	
	objVODWindow.SwfButton("swfname:=btnClose").Click
	Set objData = Nothing
	Set objVODWindow = Nothing
	Set objVODList = Nothing
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOD.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOE.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_VOE BIZ_Forms_VOE
'
' List of functions here
' @code
'   Function BIZ_VOE_SetVOEData(strRowID)
'	Function BIZ_Common_SetVOEData(objParentObject, strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set VOE data in VOE form
'@code
'    BIZ_VOE_SetVOEData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOE_SetVOEData(strRowID)

	BIZ_Forms_Open "VOE"	
	FRM_Logger_ReportInfoEvent "VOE", "Set VOE data using Row Id '"&strRowID&"'", null
      
    Dim objNewEmloyment
    Set objNewEmloyment = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NewResidenceDialog")
    Set objData = FRM_DS_GetTestData("Forms_VOE", "SetVOEData", strRowID)
    
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")
    Wait g_TinyWaitMedium
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerType")) Then
		If FRM_DS_GetValue(objData, "BorrowerType") = "Borrower" Then
			GUI_SwfRadioButton_Click objNewEmloyment.SwfRadioButton("swfname:=brwBtn")
		ElseIf FRM_DS_GetValue(objData, "BorrowerType") = "CoBorrower" Then
			GUI_SwfRadioButton_Click objNewEmloyment.SwfRadioButton("swfname:=radioButton1")
		End If
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EmploymentStatus")) Then
		If FRM_DS_GetValue(objData, "EmploymentStatus") = "Current" Then
			GUI_SwfRadioButton_Click objNewEmloyment.SwfRadioButton("swfname:=currentBtn")
		ElseIf FRM_DS_GetValue(objData, "EmploymentStatus") = "Prior" Then
			GUI_SwfRadioButton_Click objNewEmloyment.SwfRadioButton("swfname:=priorBtn")
		End If
	End If
	
	GUI_SwfButton_Click objNewEmloyment.SwfButton("swfname:=okBtn")

	Dim objVOEPage
    Set objVOEPage = SwfWindow("swfname:=MainForm").Page("micClass:=Page")

	BIZ_Common_SetVOEData objVOEPage, strRowID
    
	Set objVOEPage = Nothing
	Set objData = Nothing
	Set objNewEmloyment = Nothing

End Function	



'This function is for setting VOE data in VOE and 1003 page 2 form
'@code
'    BIZ_Common_SetVOEData(objParentObject, strRowID)
'@endcode
'@parm objParentObject - Parent object
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SetVOEData(objParentObject, strRowID)
		
	Set objData = FRM_DS_GetTestData("Forms_VOE", "SetVOEData", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0102_Name")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0002"), FRM_DS_GetValue(objData, "BE0102_Name")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0136_PrintsSeeAttachedBorrowerAuthorizationonSignatureLine")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox1_Ctrl"), FRM_DS_GetValue(objData, "BE0136_PrintsSeeAttachedBorrowerAuthorizationonSignatureLine")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0104_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0004"), FRM_DS_GetValue(objData, "BE0104_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0105_City")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0005"), FRM_DS_GetValue(objData, "BE0105_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0106_State")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0006"), FRM_DS_GetValue(objData, "BE0106_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0107_Zip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0007"), FRM_DS_GetValue(objData, "BE0107_Zip")
	End If
	If SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Exist(3) then
	    SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Click
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0138_PrintUserNameAsTitle")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl"), FRM_DS_GetValue(objData, "BE0138_PrintUserNameAsTitle")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0132_BusinessName")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0032"), FRM_DS_GetValue(objData, "BE0132_BusinessName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0119_BasePay")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FE0019"), FRM_DS_GetValue(objData, "BE0119_BasePay")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BadgeNEmployeeID")) Then
		SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=TextBox1").Set FRM_DS_GetValue(objData, "BadgeNEmployeeID")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0030_EmailID")) Then
		SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_FE0030").Set FRM_DS_GetValue(objData, "FE0030_EmailID")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0032_BusinessName")) Then
		SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_FE0032").Set FRM_DS_GetValue(objData, "FE0032_BusinessName")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0028_BusinessPhone")) Then
		SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_FE0028").Set FRM_DS_GetValue(objData, "FE0028_BusinessPhone")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0098_Date")) Then
		SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_FE0098").Set FRM_DS_GetValue(objData, "FE0098_Date") 	
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FE0011_DateHired")) Then
		SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_FE0011").Set FRM_DS_GetValue(objData, "FE0011_DateHired")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0121_Bonus")) Then
		SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_FE0021").Set FRM_DS_GetValue(objData, "BE0121_Bonus")
	End if
	Set objData = Nothing
	
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOE.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOL.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_VOL BIZ_Forms_VOL
'
' List of functions here
' @code
'   Function BIZ_VOL_SetVOLData(strRowID)
'	Function BIZ_Common_SetVOLData(objParentObject, strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for setting VOL data in VOL form
'@code
'    BIZ_VOL_SetVOLData(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOL_SetVOLData(strRowID)

	FRM_Logger_ReportInfoEvent "VOL", "Set VOL data using Row Id '"&strRowID&"'", null
    
    BIZ_Forms_Open "VOL"
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")

	Dim objVOLPage
    Set objVOLPage = SwfWindow("swfname:=MainForm").Page("micClass:=Page")

	BIZ_Common_SetVOLData objVOLPage, strRowID
    
	Set objVOLPage = Nothing

End Function



'This function is a common function for set VOL data on 1003 page 2 and VOL form.
'@code
'    BIZ_Common_SetVOLData(objParentObject, strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SetVOLData(objParentObject, strRowID)
	
	Set objData = FRM_DS_GetTestData("Forms_VOL", "SetVOLData", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VOLIsFor")) Then
		If(GUI_Object_IsExistX(objParentObject.WebList("html id:=DropdownBox1"), 20))Then 
			objParentObject.WebList("html id:=DropdownBox1").Highlight
			GUI_WebList_Select  objParentObject.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "VOLIsFor")
		End If
	End If
	Wait g_TinyWaitSmall
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0102_Name")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0002"), FRM_DS_GetValue(objData, "FL0102_Name")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0104_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0004"), FRM_DS_GetValue(objData, "FL0104_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0105_City")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0005"), FRM_DS_GetValue(objData, "FL0105_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0106_State")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0006"), FRM_DS_GetValue(objData, "FL0106_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0107_Zip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0007"), FRM_DS_GetValue(objData, "FL0107_Zip")
	End If
	If SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Exist(3) then
	    SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Click
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0138_PrintUserNameAsTitle")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox2_Ctrl"), FRM_DS_GetValue(objData, "FL0138_PrintUserNameAsTitle")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0110_AccountNumber")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0010"), FRM_DS_GetValue(objData, "FL0110_AccountNumber")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0113_Balance")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0013"), FRM_DS_GetValue(objData, "FL0113_Balance")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0112_MonthsLeft")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0012"), FRM_DS_GetValue(objData, "FL0112_MonthsLeft")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0118_WillBePaidOff")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), FRM_DS_GetValue(objData, "FL0118_WillBePaidOff")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0117_NotSecuredPayment")) Then		
		If objParentObject.WebCheckBox("html id:=__cid_CheckBox6_Ctrl").GetRoProperty("disabled") = 0 Then
			GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox6_Ctrl"), FRM_DS_GetValue(objData, "FL0117_NotSecuredPayment")
		End If
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0111_Payment")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0011"), FRM_DS_GetValue(objData, "FL0111_Payment")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0117_ExcludeFromURLAPage2LiabilitiesTotal")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox4_Ctrl"), FRM_DS_GetValue(objData, "FL0117_ExcludeFromURLAPage2LiabilitiesTotal")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AccountType")) Then	      
		objParentObject.WebEdit("html id:=l_FL0009").Click
		GUI_WinEdit_Type objParentObject.WinEdit("nativeclass:=Edit","index:=0"), FRM_DS_GetValue(objData, "AccountType")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0116_PayOffAmount")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FL0016"), FRM_DS_GetValue(objData, "FL0116_PayOffAmount")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0002_Name")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FL0002"), FRM_DS_GetValue(objData, "FL0002_Name")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0009_Name")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FL0009"), FRM_DS_GetValue(objData, "FL0009_Name")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0013_Balance")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FL0013"), FRM_DS_GetValue(objData, "FL0013_Balance")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0012_Months")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FL0012"), FRM_DS_GetValue(objData, "FL0012_Months")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0011_Payment")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FL0011"), FRM_DS_GetValue(objData, "FL0011_Payment")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0126_ResubordinatedIndicator")) Then
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox5_Ctrl"),FRM_DS_GetValue(objData, "FL0126_ResubordinatedIndicator")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0127_SubjectProperty")) Then
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox7_Ctrl"),FRM_DS_GetValue(objData, "FL0127_SubjectProperty")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0129_ProposedLienPosition")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox4"), FRM_DS_GetValue(objData, "FL0129_ProposedLienPosition")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FL0108_MortgageType")) Then
		GUI_WinEdit_Clear objParentObject.ActiveX("acx_name:=ComboFull Class","progid:=JedCombo2.ComboFull.1").WinEdit("visible:=True","index:=0")
		GUI_WinEdit_Type  objParentObject.ActiveX("acx_name:=ComboFull Class","progid:=JedCombo2.ComboFull.1").WinEdit("visible:=True","index:=0"),FRM_DS_GetValue(objData, "FL0108_MortgageType")
	End If
	
	Set objData = Nothing

End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOL.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOM.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_VOM BIZ_Forms_VOM
'
' List of functions here
'@code
'   Function BIZ_VOM_SetVOMData(strRowID)
'	Function BIZ_Common_SetVOMData(objParentObject, strRowID)
'	Function BIZ_VOM_SelectLiability(strRowID)
'	Function BIZ_VOM_SetNewLiabilities(strRowID)
'	Function BIZ_VOM_SelectLiabilityBasedOnType(strTypeValue)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set VOM data in VOM form
'@code
'    BIZ_VOM_SetVOMData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOM_SetVOMData(strRowID)

	FRM_Logger_ReportInfoEvent "VOM", "Set VOM data using Row Id '"&strRowID&"'", null
        
    Dim objVOMPage
    Set objVOMPage = SwfWindow("swfname:=MainForm").Page("micClass:=Page")

	BIZ_Common_SetVOMData objVOMPage, strRowID
    
	Set objVOMPage = Nothing

End Function	



'This function is a common function for setting VOM data on 1003 page 2 and VOM form.
'@code
'    BIZ_Common_SetVOMData(objParentObject, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SetVOMData(objParentObject, strRowID)
	
	Set objData = FRM_DS_GetTestData("Forms_VOM", "SetVOMData", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0104_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FM0004"), FRM_DS_GetValue(objData, "FM0104_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0106_City")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FM0006"), FRM_DS_GetValue(objData, "FM0106_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0107_State")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FM0007"), FRM_DS_GetValue(objData, "FM0107_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0108_Zip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FM0008"), FRM_DS_GetValue(objData, "FM0108_Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyIsUsedAs")) Then
		GUI_WebList_Select  objParentObject.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "PropertyIsUsedAs")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0119_PresentMarketValue")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FM0019"), FRM_DS_GetValue(objData, "FM0119_PresentMarketValue")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyStatus")) Then		
		GUI_WinEdit_Type objParentObject.WinEdit("nativeclass:=Edit","index:=0"), FRM_DS_GetValue(objData, "PropertyStatus")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TypeOfProperty")) Then
		GUI_WebList_Select  objParentObject.WebList("html id:=DropdownBox4"), FRM_DS_GetValue(objData, "TypeOfProperty")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0123_PurchasePrice")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FM0023"), FRM_DS_GetValue(objData, "FM0123_PurchasePrice")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0120_GrossRentalIncome")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FM0020"), FRM_DS_GetValue(objData, "FM0120_GrossRentalIncome")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0228_SubjectProperty")) Then
		GUI_WebCheckbox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox3_Ctrl"), FRM_DS_GetValue(objData, "FM0228_SubjectProperty")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyUsedAs")) Then
		GUI_WebList_Select objParentObject.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "PropertyUsedAs")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0222_AcquiredDate")) Then
		GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_FM0022"), FRM_DS_GetValue(objData, "FM0222_AcquiredDate")
	End If

	Set objData = Nothing

End Function



'This function is for select the liability in VOM form
'@code
'    BIZ_VOM_SelectLiability(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOM_SelectLiability(strRowID)
	Dim objData, objNewMortgageDialog
	Set objData = FRM_DS_GetTestData("Forms_VOM", "SetVOMData", strRowID)
	
	Set objMainForm = SwfWindow("swfname:=MainForm")
	Set objNewMortgageDialog = objMainForm.SwfWindow("swfname:=NewMortgageDialog")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LiabilityName")) Then
		objMainForm.SwfWindow("swfname:=MainScreen").SwfObject("swfname:=btnNew").Click
		objNewMortgageDialog.SwfListView("swfname:=liabListView").Select FRM_DS_GetValue(objData, "LiabilityName")
		objNewMortgageDialog.SwfListView("swfname:=liabListView").SetItemState FRM_DS_GetValue(objData, "LiabilityName"), micChecked
	End If
	objNewMortgageDialog.SwfButton("swfname:=okBtn").Click
	Set objMainForm = Nothing
	Set objNewMortgageDialog = Nothing
End Function



'This function is for set New Liabilities for the Loan 
'@code
'    BIZ_VOM_SetNewLiabilities(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOM_SetNewLiabilities(strRowID)
    
		Dim objData,objMainForm,objQuickEntryPopupDialog,objNewMortgageDialog
	
			Set objData 				 = FRM_DS_GetTestData("Forms_VOM", "SetVOMData", strRowID)
			Set objMainForm 			 = SwfWindow("swfname:=MainForm").Page("index:=0")
			Set objQuickEntryPopupDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
			Set objNewMortgageDialog	 = objQuickEntryPopupDialog.SwfWindow("swfname:=NewMortgageDialog")
	
			If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LiabilityName")) Then
				GUI_WebButton_Click objMainForm.WebButton("html id:=Button1")
				Wait g_TinyWaitMedium 'Explicit Wait Added Due to Sync
				GUI_SwfObject_Click objQuickEntryPopupDialog.SwfObject("swfname:=btnNew")
				Wait g_TinyWaitMedium 'Explicit Wait Added Due to Sync
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LiabilityName")) Then
					objNewMortgageDialog.Activate
					objNewMortgageDialog.SwfListView("swfname:=liabListView").SetItemState FRM_DS_GetValue(objData, "LiabilityName"), micChecked
					objNewMortgageDialog.SwfListView("swfname:=liabListView").SetItemState FRM_DS_GetValue(objData, "LiabilityName"), micChecked
				End If
				GUI_WebButton_Click objNewMortgageDialog.SwfButton("swfname:=okBtn")
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FM0128_SubjectProperty")) Then
					objQuickEntryPopupDialog.Page("index:=0").WebCheckBox("html id:=__cid_CheckBox3_Ctrl").Set "On"
					If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyUsedAs")) Then
						GUI_WebList_Select objQuickEntryPopupDialog.Page("index:=0").WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "PropertyUsedAs")
					End If
				End If
				GUI_WebButton_Click objQuickEntryPopupDialog.SwfButton("swfname:=btnClose")
			End If
	
			Set objData 				  = Nothing
			Set objMainForm 			  = Nothing
			Set objQuickEntryPopupDialog  = Nothing
			Set objNewMortgageDialog 	  = Nothing
	
End Function



'This function is for select checkbox on import mortgage from liability popup
'@code
'    BIZ_VOM_SetLiabilityBasedOnType(strTypeValue)
'@endcode
'@param strTypeValue The sring value present in the list to be selected

Function BIZ_VOM_SelectLiabilityBasedOnType(strTypeValue)

	Dim objMainForm, objNewMortgageDialog, objQuickEntryPopupDialog, objMortgageLiabilityList
	
	Set objMainForm 			 =	SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objQuickEntryPopupDialog =	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog")
	Set objNewMortgageDialog	 =	objQuickEntryPopupDialog.SwfWindow("swfname:=NewMortgageDialog")
	Set objMortgageLiabilityList =	objNewMortgageDialog.SwfListView("swfname:=liabListView")
	
	GUI_SwfButton_Click objQuickEntryPopupDialog.SwfObject("swfname:=btnNew")
	GUI_Object_WaitTillExistX objMortgageLiabilityList, 60	'@ To Handle Sync Related Issues
	objMortgageLiabilityList.SetItemState GUI_List_GetRowIndex(objMortgageLiabilityList,"Type", strTypeValue), micChecked
	GUI_SwfButton_Click objNewMortgageDialog.SwfButton("swfname:=okBtn")
	
	Set objMainForm 			 =	Nothing
	Set objQuickEntryPopupDialog =	Nothing
	Set objNewMortgageDialog	 =	Nothing
	Set objMortgageLiabilityList =	Nothing
	
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOM.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOR.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Forms_VOR BIZ_Forms_VOR
'
'List of functions here
'@code
'   Function BIZ_VOR_SetVORData(strRowID)
'	Function BIZ_Common_SetVORData(objParentObject, strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set VOR data in VOR form
'@code
'    BIZ_VOE_SetVORData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_VOR_SetVORData(strRowID)

	BIZ_Forms_Open "VOR"
	
	FRM_Logger_ReportInfoEvent "VOR", "Set VOR data using Row Id '"&strRowID&"'", null
      
    Dim objNewEmloyment
    Set objNewEmloyment = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NewResidenceDialog")
    Set objData = FRM_DS_GetTestData("Forms_VOR", "SetVORData", strRowID)
    
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew")
    	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerType")) Then
		If FRM_DS_GetValue(objData, "BorrowerType") = "Borrower" Then
			GUI_SwfRadioButton_Click objNewEmloyment.SwfRadioButton("swfname:=brwBtn")
		ElseIf FRM_DS_GetValue(objData, "BorrowerType") = "CoBorrower" Then
			GUI_SwfRadioButton_Click objNewEmloyment.SwfRadioButton("swfname:=radioButton1")
		End If
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EmploymentStatus")) Then
		If FRM_DS_GetValue(objData, "EmploymentStatus") = "Current" Then
			GUI_SwfRadioButton_Click objNewEmloyment.SwfRadioButton("swfname:=currentBtn")
		ElseIf FRM_DS_GetValue(objData, "EmploymentStatus") = "Prior" Then
			GUI_SwfRadioButton_Click objNewEmloyment.SwfRadioButton("swfname:=priorBtn")
		End If
	End If
	
	GUI_SwfButton_Click objNewEmloyment.SwfButton("swfname:=okBtn")

	Dim objVORPage
    Set objVORPage = SwfWindow("swfname:=MainForm").Page("micClass:=Page")

	BIZ_Common_SetVORData objVORPage, strRowID
    
	Set objVORPage = Nothing
	Set objData = Nothing
	Set objNewEmloyment = Nothing

End Function	



'This function is for setting VOR data in VOR and 1003 page 2 form
'@code
'    BIZ_Common_SetVORData(objParentObject, strRowID)
'@endcode
'@parm objParentObject - Parent object
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Common_SetVORData(objParentObject, strRowID)
		
	Set objData = FRM_DS_GetTestData("Forms_VOR", "SetVORData", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0198_Date")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0098"), FRM_DS_GetValue(objData, "BR0198_Date")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0102_Name")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0002"), FRM_DS_GetValue(objData, "BR0102_Name")
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0105_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0005"), FRM_DS_GetValue(objData, "BR0105_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0109_City")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0009"), FRM_DS_GetValue(objData, "BR0109_City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0110_State")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0010"), FRM_DS_GetValue(objData, "BR0110_State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0111_Zip")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0011"), FRM_DS_GetValue(objData, "BR0111_Zip")
	End If
	if SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Exist(3) then
	    SwfWindow("swfname:=ZipcodeSelectorDialog").SwfObject("swfname:=dlgButtons").SwfButton("swfname:=btnOK").Click
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0121_LandlordComments")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0021"), FRM_DS_GetValue(objData, "BR0121_LandlordComments")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0104_Address")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0004"), FRM_DS_GetValue(objData, "BR0104_Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0112_NoOfYears")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0012"), FRM_DS_GetValue(objData, "BR0112_NoOfYears")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0124_NoOfMonths")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0024"), FRM_DS_GetValue(objData, "BR0124_NoOfMonths")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BR0116_MnthlyPmt")) Then
		GUI_WebEdit_Set  objParentObject.WebEdit("html id:=l_FR0016"), FRM_DS_GetValue(objData, "BR0116_MnthlyPmt")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BE0115_Rent")) Then		
		GUI_WebCheckBox_Set objParentObject.WebCheckBox("html id:=__cid_CheckBox4_Ctrl"), FRM_DS_GetValue(objData, "BE0115_Rent")
	End If	
	
	Set objData = Nothing
	
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Forms\VOR.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\HMDA\HMDA.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup HMDA
' List of functions here
' @code
'   Function BIZ_HMDA_Settings_SetFields(strSettingsType)
'   Function BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPage(strRowID,strFieldValidation)
'   Function BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPageForPurchasedLoans(strRowID,strFieldValidation)
'	Function BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPageForPurchasedInformation(strRowID,strFieldValidation)
'	Function BIZ_SecondaryMarket_EmploymentCheck(boolCheck)
'	Function BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPage_ActionValidation(strRowID,strFieldValidation)
'	Function BIZ_HMDA_SelectAndValidateFieldsInCreditScoreModel(strRowID,strFieldValidation)
'	Function BIZ_HMDA_ValidateFieldsInHMDA(strRowID,strRowID1,strCheckBox)
'	Function BIZ_HMDA_NMLSValidateFieldsInHMDA(strRowID,strDropdownbox1,strDropdownbox2)
'	Function BIZ_HMDA_AddNewHMDAProfile(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Disclosure information
'@code
'    BIZ_HMDA_Settings_SetFields(strSettingsType)
'@endcode
'@param strSettingsType - 

Function BIZ_HMDA_Settings_SetFields(strSettingsType)

	FRM_Logger_ReportInfoEvent "Set the Fields in HMDA Settings Page","Start Set the Fields in HMDA Settings Page----"&strSettingsType, Null
	
	Dim objSetupContainer,objFindSelectPage
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objFindSelectPage = objSetupContainer.SwfWindow("swfname:=ReportFieldSelector")
	
	GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLoansNoChannel"), "Correspondent"
	GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLoansCorrespondent"), "Retail"
	
	Select Case strSettingsType
		Case "745_ApplicationDate"
			strText = GUI_Object_GetPropertyValue(objSetupContainer.SwfComboBox("swfname:=cmbApplicationDate"), "selection")
			If strText = "745 - Application Date"  Then
				FRM_Logger_ReportInfoEvent "Application Date","Application Date for Field already set to "&strText, Null
			Else
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbApplicationDate"), "Other..."
				If GUI_Object_IsExistX(objFindSelectPage, 60) Then
					GUI_swfEdit_Set objFindSelectPage.SwfEdit("swfname:=txtFind"), 745
					GUI_SwfButton_Click objFindSelectPage.SwfButton("swfname:=btnFind")
					GUI_swfButton_Click objFindSelectPage.SwfButton("swfname:=btnOK")
				End If
			End If
		Case "682_FirstPaymentDate"
			strText = GUI_Object_GetPropertyValue(objSetupContainer.SwfComboBox("swfname:=cmbApplicationDate"), "selection")
			If strText = "682 - Trans Details Pymt Date"  Then
				FRM_Logger_ReportInfoEvent "Application Date","Application Date for Field already set to "&strText, Null
			Else
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbApplicationDate"), "Other..."
				If GUI_Object_IsExistX(objFindSelectPage, 60) Then
					GUI_swfEdit_Set objFindSelectPage.SwfEdit("swfname:=txtFind"), 682
					GUI_SwfButton_Click objFindSelectPage.SwfButton("swfname:=btnFind")
					GUI_swfButton_Click objFindSelectPage.SwfButton("swfname:=btnOK")
				End If
			End If
		Case "Report_Income_No"
				objSetupContainer.SwfCheckbox("swfname:=chkRprtAgeCoBorrower").highlight
				GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdBtnRprtIncmNo")
				FRM_Logger_ReportInfoEvent "Report_Income_NO","Report Income Set to 'No'", Null
		Case "Report_Income_Yes"
				objSetupContainer.SwfCheckbox("swfname:=chkRprtAgeCoBorrower").highlight
				GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdBtnRprtIncmYes")
				FRM_Logger_ReportInfoEvent "Report_Income_Yes","Report Income Set to 'Yes'", Null
		Case "Borrower_Co-BorrowerAge_Check"
				GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdBtnRprtIncmYes")
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckbox("swfname:=chkRprtAgeBorrower"),"ON"
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckbox("swfname:=chkRprtAgeCoBorrower"),"ON"
		Case "Borrower_Co-BorrowerAge_Uncheck"
				GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdBtnRprtIncmYes")
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckbox("swfname:=chkRprtAgeBorrower"),"OFF"
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckbox("swfname:=chkRprtAgeCoBorrower"),"OFF"
		Case Else
			FRM_Logger_ReportFailEvent "Field Type ","Field Type is not exists--"&strSettingsType, Null
	End Select
	If GUI_Object_IsEnabled(objSetupContainer.SwfButton("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSetupContainer.SwfButton("swfname:=stdIconBtnSave")
	End If
	GUI_Window_Close objSetupContainer
	
	Set objSetupContainer = Nothing
	Set objFindSelectPage = Nothing
	
End Function



'This function is used for Select and validate the Fields in HMDA Information Page
'@code
'    BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPage(strRowID,strFieldValidation)
'@endcode
'@param strRowID           - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strFieldValidation - Operation to be performed

Function BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPage(strRowID,strFieldValidation)

	FRM_Logger_ReportInfoEvent "Select and validate the Fields in HMDA Information Page","Start Select and validate the Fields in HMDA Information Page", Null
	
	Dim objData,objSummaryPage,objLoanPage,arrActValues
	
	Set objData           = FRM_DS_GetTestData("HMDA", "HMDA_Validation", strRowID) 
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("micclass:=page")
	Set objLoanPage       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfTab("swfname:=tabControlForm")
	
	BIZ_Forms_Open "HMDA Information"

	If GUI_Object_IsExistX(objSummaryPage.Image("file name:=field-unlock.png"), 60) Then
		GUI_Image_Click objSummaryPage.Image("file name:=field-unlock.png")
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_HMDAX27"), Year(Date)+1
		BIZ_Loan_Save()
	End If
	
	arrActValues = Cstr(FRM_DS_GetValue(objData, "ActionValues1"))
	objSummaryPage.WebList("html id:=DropdownBox3","index:=0").highlight
				
	If Util_String_IsNOtEmpty(arrActValues) Then
		arrActSplitValues = Split(arrActValues, ";")
		For i=0 to ubound(arrActSplitValues)-1
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1"), 60) Then
				SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1").Select arrActSplitValues(i)
				FRM_Logger_ReportInfoEvent "Action Taken List Value", "Action Taken List Value is Selected '"&arrActSplitValues(i)&"'", Null
				wait 5
				Select Case strFieldValidation
					Case "745_ApplicationDate"
						strActApplicateDate = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_HMDAX29"), "value")
						FRM_VerifyEqual strActApplicateDate, BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "ApplicationDate")), "Applicatio Date", "'Application Date=745 Application Date'---"&strActApplicateDate
					Case "682_FirstPaymentDate"
						strActApplicateDate = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_HMDAX29"), "value")
						FRM_VerifyEqual strActApplicateDate, BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "ApplicationDate")), "First Payment Date", "'Application Date = 682 First Payment Date'---"&strActApplicateDate
					Case "Report_Income_No"
						strReportIncome = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox10"), "value")
						If UTIL_String_IsMatch(strReportIncome,FRM_DS_GetValue(objData, "ExpectedTextValues1")) Then
							FRM_Logger_ReportPassEvent "Report Income No", "Report Income displayed in application "&strReportIncome, Null
						Else
							FRM_Logger_ReportFailEvent "Report Income No", "Report Income is not displayed in application "&strReportIncome, Null
						End If
						
					Case "Report_Income_Yes"
						strReportIncome = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox10"), "value")
						If UTIL_String_IsMatch(strReportIncome,Cstr(FRM_DS_GetValue(objData, "ExpectedTextValues1"))) Then
							FRM_Logger_ReportPassEvent "Report Income Yes", "Report Income displayed in application "&strReportIncome, Null
						Else
							FRM_Logger_ReportFailEvent "Report Income Yes", "Report Income is not displayed in application "&strReportIncome, Null
						End If
					Case "Credit_Score"
						objSummaryPage.WebElement("html id:=Label27").highlight
						strCreditScore = GUI_Object_GetPropertyValue(objSummaryPage.WinEdit("nativeclass:=Edit","index:=0"), "text")
						FRM_VerifyEqual Cstr(Trim(strCreditScore)), Cstr(Trim(FRM_DS_GetValue(objData, "CreditValue"))), "Credit Score Decision Making", "Credit Score Decision Making for Borrower is displayed "
					
						strCreditScore1 = GUI_Object_GetPropertyValue(objSummaryPage.WinEdit("nativeclass:=Edit","index:=1"), "text")
						FRM_VerifyEqual Cstr(Trim(strCreditScore1)), Cstr(Trim(FRM_DS_GetValue(objData, "CreditValue"))), "Credit Score Decision Making", "Credit Score Decision Making for Co-Borrower is displayed "
						
						
						strCreditScore2 = GUI_Object_GetPropertyValue(objSummaryPage.WebList("html id:=l_4175_2017","index:=0"), "default value")
						FRM_VerifyEqual Cstr(Trim(strCreditScore2)), Cstr(Trim(FRM_DS_GetValue(objData, "CreditValue"))), "Credit Scoring Model", "Credit Scoring Model for Borrower is displayed "
						
						strCreditScore3 = GUI_Object_GetPropertyValue(objSummaryPage.WebList("html id:=l_4178_2017","index:=0"), "default value")
						FRM_VerifyEqual Cstr(Trim(strCreditScore3)), Cstr(Trim(FRM_DS_GetValue(objData, "CreditValue"))), "Credit Scoring Model", "Credit Scoring Model for Co-Borrower is displayed "
						
					Case "Borrower_Co-BorrowerAge_Check"
						intBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox6"), "value")
						intBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox7"), "value")
						intCoBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox8"), "value")
						intCoBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox9"), "value")
						intDateBorrower = DateDiff("YYYY", intBorowwerDOB, FRM_DS_GetValue(objData, "ApplicationDate"))
						FRM_VerifyEqual cint(intDateBorrower), cint(intBorowwerAge), "Borower Age", "Borower Age displayed----"&intDateBorrower
						intDateCoBorrower = DateDiff("YYYY", intCoBorowwerDOB, FRM_DS_GetValue(objData, "ApplicationDate"))
						FRM_VerifyEqual cint(intDateCoBorrower), cint(intCoBorowwerAge),"Co Borower Age", "Co Borower Age displayed----"&intDateCoBorrower
					Case "Borrower_Co-BorrowerAge_Uncheck"
						intBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox6"), "value")
						intBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox7"), "value")
						intCoBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox8"), "value")
						intCoBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox9"), "value")
						intDateBorrower = DateDiff("YYYY", intBorowwerDOB, FRM_DS_GetValue(objData, "ApplicationDate"))
						FRM_VerifyEqual cint(intDateBorrower), cint(intBorowwerAge), "Borower Age", "Borower Age displayed----"&intDateBorrower
						intDateCoBorrower = DateDiff("YYYY", intCoBorowwerDOB, FRM_DS_GetValue(objData, "ApplicationDate"))
						FRM_VerifyEqual cint(intDateCoBorrower), cint(intCoBorowwerAge),"Co Borower Age", "Co Borower Age displayed----"&intDateCoBorrower
					Case "ReasonForDenial_NotApplicable"
						objSummaryPage.WebList("html id:=DropdownBox15").highlight
						Wait g_LongWaitLarge
						GUI_Object_ValidateValue objSummaryPage.WebList("html id:=DropdownBox15","name:=select","index:=8","items count:=11"),Cstr(Trim(FRM_DS_GetValue(objData, "ExpectedTextValues1"))),"Reason For Denial #1"
					Case "ReasonForDenial_NullValue"
						objSummaryPage.WebList("html id:=DropdownBox15").highlight
						Wait g_LongWaitLarge
						strReasonForDenial = GUI_Object_GetPropertyValue(objSummaryPage.WebList("html id:=DropdownBox15","name:=select","index:=8"), "Default Value")
						FRM_VerifyEqual Cstr(Trim(strReasonForDenial)), Cstr(Trim(FRM_DS_GetValue(objData, "ExpectedTextValues1"))), "Reason For Denial", "Reason For Denial is displayed with Blank/Null value "
				
				End Select
			Else
				FRM_Logger_ReportFailEvent "Action Taken List", "Action Taken List is not dispaying", Null
			End If
		Next
	End If
	
	Set objData        = Nothing
	Set objSummaryPage = Nothing
	Set objLoanPage    = Nothing
	
End Function



'This function is used for Select and validate the Fields in HMDA Information Page for Purchased Loans
'@code
'    BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPageForPurchasedLoans(strRowID,strFieldValidation)
'@endcode
'@param strRowID           - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strFieldValidation - Operation to be performed

Function BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPageForPurchasedLoans(strRowID,strFieldValidation)

	FRM_Logger_ReportInfoEvent "Select and validate the Fields in HMDA Information Page for Purchased Loans","Select and validate the Fields in HMDA Information Page  for Purchased Loans", Null
	
	Dim objData,objSummaryPage,objLoanPage
	
	Set objData           = FRM_DS_GetTestData("HMDA", "HMDA_Validation", strRowID) 
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("micclass:=page")
	Set objLoanPage       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfTab("swfname:=tabControlForm")
	
	If Util_String_IsNOtEmpty(FRM_DS_GetValue(objData, "ActionValuesPurchased1")) Then
		If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1"), 60) Then
			SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1").Select Cstr(FRM_DS_GetValue(objData, "ActionValuesPurchased1"))
			Wait g_LongWaitLarge
			If GUI_Object_IsExistX(objLoanPage, 60) Then
			 intTabCount = objLoanPage.GetItemsCount
				If intTabCount = 1 Then
					strTab1 = objLoanPage.GetItem(0)
					FRM_verifyEqual strTab1, "2018 HMDA Purchased Loans", "2018 HMDA Purchased Loans tab", "2018 HMDA Purchased Loans tab"
				Else
					FRM_Logger_ReportFailEvent "Tab Count", "Tabs are not displayed as Expected", Null
				End If
			Else
				 FRM_Logger_ReportFailEvent "Tab Verification", "Tab doesn't Exist", Null
				
			End If
		
		Select Case strFieldValidation
			Case "Borrower_Co-BorrowerAge_Check"
				intBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_1402"), "value")
				intBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_4183"), "value")
				intCoBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_1403"), "value")
				intCoBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_4184"), "value")
				FRM_VerifyEqual cint(FRM_DS_GetValue(objData, "ExpectedTextValues1")), cint(intBorowwerAge), "Borower Age", "Borower Age displayed----"&intDateBorrower
				FRM_VerifyEqual cint(FRM_DS_GetValue(objData, "ExpectedTextValues2")), cint(intCoBorowwerAge),"Co Borower Age", "Co Borower Age displayed----"&intDateCoBorrower
			Case "Borrower_Co-BorrowerAge_Uncheck"
				intBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_1402"), "value")
				intBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_4183"), "value")
				intCoBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_1403"), "value")
				intCoBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_4184"), "value")
				FRM_VerifyEqual cint(FRM_DS_GetValue(objData, "ExpectedTextValues2")), cint(intBorowwerAge), "Borower Age", "Borower Age displayed----"&intDateBorrower
				FRM_VerifyEqual cint(FRM_DS_GetValue(objData, "ExpectedTextValues2")), cint(intCoBorowwerAge),"Co Borower Age", "Co Borower Age displayed----"&intDateCoBorrower
			Case "Report_Income_Yes"
				strReportIncome = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_HMDAX32"), "value")
				If UTIL_String_IsMatch(strReportIncome,FRM_DS_GetValue(objData, "ExpectedTextValues2")) Then
					FRM_Logger_ReportPassEvent "Report Income Yes", "Report Income displayed in application "&strReportIncome, Null
				Else
					FRM_Logger_ReportFailEvent "Report Income Yes", "Report Income is not displayed in application "&strReportIncome, Null
				End If
			Case "Report_Income_No"
				strReportIncome = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_HMDAX32"), "value")
				If UTIL_String_IsMatch(strReportIncome,FRM_DS_GetValue(objData, "ExpectedTextValues2")) Then
					FRM_Logger_ReportPassEvent "Report Income No", "Report Income displayed in application "&strReportIncome, Null
				Else
					FRM_Logger_ReportFailEvent "Report Income No", "Report Income is not displayed in application "&strReportIncome, Null
				End If
			
		End Select
		End If
	End If
	
	Set objData        = Nothing
	Set objSummaryPage = Nothing
	Set objLoanPage    = Nothing
	
End Function



'This function is used for Select and validate the Fields in HMDA Information Page for Purchased Information
'@code
'    BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPageForPurchasedInformation(strRowID,strFieldValidation)
'@endcode
'@param strRowID           - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strFieldValidation - Operation to be performed

Function BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPageForPurchasedInformation(strRowID,strFieldValidation)

	FRM_Logger_ReportInfoEvent "Select and validate the Fields in HMDA Information Page","Select and validate the Fields in HMDA Information Page", Null
	
	Dim objData,objSummaryPage,objLoanPage
	
	Set objData           = FRM_DS_GetTestData("HMDA", "HMDA_Validation", strRowID) 
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("micclass:=page")
	Set objLoanPage       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfTab("swfname:=tabControlForm")
	
	BIZ_Forms_Open "HMDA Information"

	If GUI_Object_IsExistX(objSummaryPage.Image("file name:=field-unlock.png"), 60) Then
		GUI_Image_Click objSummaryPage.Image("file name:=field-unlock.png")
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_HMDAX27"), Year(Date)+1
		BIZ_Loan_Save()
	End If
	
	If GUI_Object_IsExistX(objLoanPage, 60) Then
		intTabCount = objLoanPage.GetItemsCount
		If intTabCount = 2 Then
			objLoanPage.GetItem(0)
			objLoanPage.GetItem(1)
		Else
			FRM_Logger_ReportFailEvent "Tab Count", "Tabs are not displayed as Expected", Null
		End If
	
	Else
		FRM_Logger_ReportFailEvent "Tab Verification", "Tab doesn't Exist", Null
		
	End If
	
	BIZ_Forms_Open "1003 Page 1"
 
	arrActValues = FRM_DS_GetValue(objData, "ActionValues1")
	
	If Util_String_IsNOtEmpty(arrActValues) Then
		arrActSplitValues = Split(arrActValues, ";")
		For i=0 to ubound(arrActSplitValues)
			If GUI_Object_IsExistX(objSummaryPage.WebList("html id:=DropdownBox3","index:=0"), 60) Then
				objSummaryPage.WebList("html id:=DropdownBox3","index:=0").highlight
				GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox3","index:=0"), arrActSplitValues(i)
				Wait g_LongWaitLarge
				Select Case strFieldValidation
					Case "745_ApplicationDate"
						strActApplicateDate = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_HMDAX29"), "value")
						FRM_VerifyEqual strActApplicateDate, BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "ApplicationDate")), "Applicatio Date", "Application Date displayed in the 745 Field---"&strActApplicateDate
					Case "682_ApplicationDate"
						strActApplicateDate = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_HMDAX29"), "value")
						FRM_VerifyEqual strActApplicateDate, BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "ApplicationDate")), "Applicatio Date", "Application Date displayed in the 745 Field---"&strActApplicateDate
					Case "Report_Income_No"
						strReportIncome = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox10"), "value")
						FRM_VerifyEqual Cint(strReportIncome), Cint(FRM_DS_GetValue(objData, "ExpectedTextValues1")), "Report Income No", "Report Income displayed in application "&strReportIncome
					Case "Report_Income_Yes"
						strReportIncome = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox10"), "value")
						FRM_VerifyEqual Cint(strReportIncome), Cint(FRM_DS_GetValue(objData, "ExpectedTextValues1")), "Report Income Yes", "Report Income displayed in application "&strReportIncome
					Case "Credit_Score"
						strCreditScore = GUI_Object_GetPropertyValue(objSummaryPage.WinEdit("nativeclass:=Edit","index:=0"), "text")
						FRM_VerifyEqual strCreditScore, Null, "CreditScore", "CreditScore is displayed"
					Case "Borrower_Co-BorrowerAge_Check"
						intBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox6"), "value")
						intBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox7"), "value")
						intCoBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox8"), "value")
						intCoBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox9"), "value")
						intDateBorrower = DateDiff("YYYY", intBorowwerDOB, FRM_DS_GetValue(objData, "ApplicationDate"))
						FRM_VerifyEqual intDateBorrower, intDateBorrower, "Borower Age", "Borower Age displayed----"&intDateBorrower
						intDateCoBorrower = DateDiff("YYYY", intCoBorowwerDOB, FRM_DS_GetValue(objData, "ApplicationDate"))
						FRM_VerifyEqual intDateCoBorrower, intCoBorowwerAge,"Co Borower Age", "Co Borower Age displayed----"&intDateCoBorrower
					Case "Borrower_Co-BorrowerAge_Uncheck"
						intBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox6"), "value")
						intBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox7"), "value")
						intCoBorowwerDOB = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox8"), "value")
						intCoBorowwerAge = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=TextBox9"), "value")
						intDateBorrower = DateDiff("YYYY", intBorowwerDOB, FRM_DS_GetValue(objData, "ApplicationDate"))
						FRM_VerifyEqual intDateBorrower, intDateBorrower, "Borower Age", "Borower Age displayed----"&intDateBorrower
						intDateCoBorrower = DateDiff("YYYY", intCoBorowwerDOB, FRM_DS_GetValue(objData, "ApplicationDate"))
						FRM_VerifyEqual intDateCoBorrower, intCoBorowwerAge,"Co Borower Age", "Co Borower Age displayed----"&intDateCoBorrower
					Case Else
						FRM_Logger_ReportFailEvent "Search value ", "Search value are not displayed ", Null
					
				End Select
			Else
				FRM_Logger_ReportFailEvent "Action Taken List", "Action Taken List is not dispaying", Null
			End If
		Next
	End If
	
	arrActValues1 = FRM_DS_GetValue(objData, "ActionValues2")
	If Util_String_IsNOtEmpty(arrActValues) Then
		arrActSplitValues = Split(arrActValues, ";")
		For i=0 to ubound(arrActSplitValues)
			If GUI_Object_IsExistX(objSummaryPage.WebList("html id:=DropdownBox3","index:=0"), 60) Then
				objSummaryPage.WebList("html id:=DropdownBox3","index:=0").highlight
				GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox3","index:=0"), arrActSplitValues(i)
				Wait g_LongWaitLarge
				Select Case strFieldValidation
					Case "Credit_Score"
						strCreditScore = GUI_Object_GetPropertyValue(objSummaryPage.WinEdit("nativeclass:=Edit","index:=0"), "text")
						FRM_VerifyEqual strCreditScore, (FRM_DS_GetValue(objData, "ExpectedTextValues2")), "CreditScore", "CreditScore is displayed for"&arrActSplitValues(i)
					
					Case Else
						FRM_Logger_ReportFailEvent "Search value ", "Search value are not displayed ", Null
					
				End Select
			Else
				FRM_Logger_ReportFailEvent "Action Taken List", "Action Taken List is not dispaying", Null
			End If
		Next
	End If
	
	
	Set objData        = Nothing
	Set objSummaryPage = Nothing
	Set objLoanPage    = Nothing
	
End Function



'This function is used to check Employment details
'@code
'   BIZ_SecondaryMarket_EmploymentCheck(boolCheck)
'@endcode
'@param boolCheck  - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_SecondaryMarket_EmploymentCheck(boolCheck)

	FRM_Logger_ReportInfoEvent "Employment details","Employment details checkbox", Null
	
	Dim intCheckVal
	
	BIZ_SecondaryMarket_ToolsNavigation "Underwriter Summary"

	intCheckVal = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=page").WebCheckBox("html id:=__cid_CheckBox20_Ctrl"), "checked")
	If boolCheck =1 and intCheckVal =0 Then
		GUI_WebCheckBox_Click SwfWindow("swfname:=MainForm").Page("micclass:=page").WebCheckBox("html id:=__cid_CheckBox20_Ctrl")
		FRM_Logger_ReportPassEvent "Employment CheckBox","Employment check box checked", Null
	ElseIf boolCheck =1 and intCheckVal =1 Then
		FRM_Logger_ReportPassEvent "Employment ChecckBox","Employment check box checked", Null
	ElseIf boolCheck =0 and intCheckVal =0 Then
		FRM_Logger_ReportPassEvent "Employment CheckBox","Employment check box Unchecked", Null
	ElseIf boolCheck =0 and intCheckVal =1 Then
		GUI_WebCheckBox_Click SwfWindow("swfname:=MainForm").Page("micclass:=page").WebCheckBox("html id:=__cid_CheckBox20_Ctrl")
		FRM_Logger_ReportPassEvent "Employment CheckBox","Employment check box Unchecked", Null
	End If
	
	BIZ_Loan_Save()

End Function



'This function is used for Select and validate the Fields in HMDA Information Page 
'@code
'    BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPage_ActionValidation(strRowID,strFieldValidation)
'@endcode
'@param strRowID           - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strFieldValidation - Operation to be performed

Function BIZ_HMDA_SelectAndValidateFieldsInHMDAInformationPage_ActionValidation(strRowID,strFieldValidation)

	FRM_Logger_ReportInfoEvent "Select and validate the Fields in HMDA Information Page","Select and validate the Fields in HMDA Information Page", Null
	
	Dim objData,objSummaryPage,objLoanPage,arrActValues,arrActSplitValues
	
	Set objData           = FRM_DS_GetTestData("HMDA", "HMDA_Validation", strRowID) 
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("micclass:=page")
	Set objLoanPage       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfTab("swfname:=tabControlForm")
	
	arrActValues = FRM_DS_GetValue(objData, "ActionValues2")
	
	If Util_String_IsNOtEmpty(arrActValues) Then
		arrActSplitValues = Split(arrActValues, ";")
		For i=0 to ubound(arrActSplitValues)-1
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1"), 60) Then
				SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1").Select arrActSplitValues(i)
				FRM_Logger_ReportInfoEvent "Action Taken List Value", "Action Taken List Value is Selected '"&arrActSplitValues(i)&"'", Null
				Wait g_LongWaitLarge
				Select Case strFieldValidation
					
					Case "Credit_Score"
						objSummaryPage.WebElement("html id:=Label27").highlight
						strCreditScore = GUI_Object_GetPropertyValue(objSummaryPage.WinEdit("nativeclass:=Edit","index:=0"), "text")
						FRM_VerifyEqual Cstr(Trim(strCreditScore)), Cstr(Trim(FRM_DS_GetValue(objData, "CreditValue1"))), "Credit score Decision Making", "Credit score Decision Making for Borrower"
						
						
						strCreditScore1 = GUI_Object_GetPropertyValue(objSummaryPage.WinEdit("nativeclass:=Edit","index:=1"), "text")
						FRM_VerifyEqual Cstr(Trim(strCreditScore1)), Cstr(Trim(FRM_DS_GetValue(objData, "CreditValue1"))), "Credit score Decision Making", "Credit score Decision Making for Co-Borrower"
						
						
						strCreditScore2 = GUI_Object_GetPropertyValue(objSummaryPage.WebList("html id:=l_4175_2017"), "selection")
						FRM_VerifyEqual Cstr(Trim(strCreditScore2)), Cstr(Trim(FRM_DS_GetValue(objData, "CreditValue2"))), "Credit score model", "Credit score model for Borrower"
						
						
						strCreditScore3 = GUI_Object_GetPropertyValue(objSummaryPage.WebList("html id:=l_4178_2017"), "selection")
						FRM_VerifyEqual Cstr(Trim(strCreditScore3)), Cstr(Trim(FRM_DS_GetValue(objData, "CreditValue2"))), "Credit score model", "Credit score model for Co-Borrower"
					
				End Select
			Else
				FRM_Logger_ReportFailEvent "Action Taken List", "Action Taken List is not dispaying", Null
			End If
		Next
	End If
	
	Set objData        = Nothing
	Set objSummaryPage = Nothing
	Set objLoanPage    = Nothing
	
End Function



'This function is used for Select and Validate the Fields in Credit Score Model
'@code
'    BIZ_HMDA_SelectAndValidateFieldsInCreditScoreModel(strRowID,strFieldValidation)
'@endcode
'@param strRowID           - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strFieldValidation - Operation to be performed

Function BIZ_HMDA_SelectAndValidateFieldsInCreditScoreModel(strRowID,strFieldValidation)

	FRM_Logger_ReportInfoEvent "Select and validate the Fields in Credit Score Model","Select and validate the Fields in Credit Score Model", Null
	
	Dim objData,objSummaryPage,objLoanPage,arrActValues,arrActSplitValues
	
	Set objData           = FRM_DS_GetTestData("HMDA", "HMDA_Validation", strRowID) 
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("micclass:=page")
	Set objLoanPage       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfTab("swfname:=tabControlForm")
	
	BIZ_Forms_Open "HMDA Information"

	If GUI_Object_IsExistX(objSummaryPage.Image("file name:=field-unlock.png"), 60) Then
		GUI_Image_Click objSummaryPage.Image("file name:=field-unlock.png")
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_HMDAX27"), Year(Date)+1
		BIZ_Loan_Save()
	End If
	
	arrActValues = Cstr(FRM_DS_GetValue(objData, "CreditScoringValues"))
	
	Select Case strFieldValidation
			Case "Credit_Score_Borrower"
			
				If GUI_Object_IsExist(objSummaryPage.WebButton("html id:=FieldLock22").Image("file name:=field-unlock.png")) Then
					GUI_WebButton_Click objSummaryPage.WebButton("html id:=FieldLock22")
				End If
				arrActSplitValues = Split(arrActValues, ";")
				For i = 0 to ubound(arrActSplitValues)-1
				SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=l_4175_2017").Select arrActSplitValues(i)
				FRM_Logger_ReportInfoEvent "Action Taken List Value", "Action Taken List Value is Selected '"&arrActSplitValues(i)&"'", Null
				Wait g_LongWaitLarge
				GUI_Object_ValidateDisabled objSummaryPage.WebEdit("html id:=TextBox13"),"Other Credit Scoring Model"
				Next
			Case "Credit_Score_Co-Borrower"
			
				If GUI_Object_IsExist(objSummaryPage.WebButton("html id:=FieldLock23").Image("file name:=field-unlock.png")) Then
					GUI_WebButton_Click objSummaryPage.WebButton("html id:=FieldLock23")
				End If
				arrActSplitValues = Split(arrActValues, ";")
				For i = 0 to ubound(arrActSplitValues)-1
				SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=l_4175_2017").Select arrActSplitValues(i)
				FRM_Logger_ReportInfoEvent "Action Taken List Value", "Action Taken List Value is Selected '"&arrActSplitValues(i)&"'", Null
				Wait g_LongWaitLarge
				GUI_Object_ValidateDisabled objSummaryPage.WebEdit("html id:=TextBox15"),"Other Credit Scoring Model"
				Next
			Case "Credit_Score_DecisionMaking_Borrower"
				SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=l_4175_2017").Select arrActValues
				FRM_Logger_ReportInfoEvent "Action Taken List Value", "Action Taken List Value is Selected '"&arrActValues&"'", Null
				GUI_Object_ValidateEnabled objSummaryPage.WebEdit("html id:=TextBox13"),"Other Credit Scoring Model"		
				IntOtherScoringModel = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox13"),"max length")
				FRM_VerifyEqual IntOtherScoringModel, FRM_DS_GetValue(objData, "MaxLength"), "MaxLength", "'"&arrActValues&"' Field is Enabled and MaxLength is verified"
			Case "Credit_Score_DecisionMaking_Co-Borrower"
				SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=l_4178_2017").Select arrActValues
				FRM_Logger_ReportInfoEvent "Action Taken List Value", "Action Taken List Value is Selected '"&arrActValues&"'", Null
				GUI_Object_ValidateEnabled objSummaryPage.WebEdit("html id:=TextBox15"),"Other Credit Scoring Model"		
				IntOtherScoringModel = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox15"),"max length")
				FRM_VerifyEqual IntOtherScoringModel, FRM_DS_GetValue(objData, "MaxLength"), "MaxLength", "'"&arrActValues&"' Field is Enabled and MaxLength is verified"
			
			Case Else
				 FRM_Logger_ReportFailEvent "Action Taken List", "Action Taken List is not dispaying", Null
			
		End Select
	
	Set objData        = Nothing
	Set objSummaryPage = Nothing
	Set objLoanPage    = Nothing
	
End Function



'This function is used to Validate the Fields in HMDA Page
'@code
'    BIZ_HMDA_ValidateFieldsInHMDA(strRowID,strRowID1,strCheckBox)
'@endcode
'@param strRowID  - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strRowID1 - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strRowID1 - Checkbox On/Off

Function BIZ_HMDA_ValidateFieldsInHMDA(strRowID,strRowID1,strCheckBox)

	FRM_Logger_ReportInfoEvent "Validate the Fields in HMDA Page","Validate the Fields in HMDA Page using '"&strRowID&"' and '"&strRowID1&"'", Null
	
	Dim objData,objData1,objSummaryPage,objLoanPage,arrActValues,arrActSplitValues,strAddress1,strPropertyCity1,strPropertyState1,strZipCode1,strAddress2,strPropertyCity2,strPropertyState2,strZipCode2
	
	Set objData           = FRM_DS_GetTestData("HMDA", "HMDA_Validation", strRowID)
	Set objData1          = FRM_DS_GetTestData("Forms_1003Page", "1003Page1", strRowID1)
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("micclass:=page")
	Set objLoanPage       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfTab("swfname:=tabControlForm")
	
	BIZ_Forms_Open "HMDA Information"

	If GUI_Object_IsExistX(objSummaryPage.Image("file name:=field-unlock.png"), 60) Then
		GUI_Image_Click objSummaryPage.Image("file name:=field-unlock.png")
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_HMDAX27"), Year(Date)+1
		BIZ_Loan_Save()
	Else
		FRM_Logger_ReportInfoEvent "Set HMDA Reporting Year", "Value=2018 Set to HMDA Reporting Year", Null
	End If
	
	BIZ_1003Page1_SetData strRowID1
	
	BIZ_Forms_Open "HMDA Information"
	
	arrActValues = FRM_DS_GetValue(objData, "ActionValues1")
	objSummaryPage.WebList("html id:=DropdownBox3","index:=0").highlight
				
	If Util_String_IsNOtEmpty(arrActValues) Then
		arrActSplitValues = Split(arrActValues, ";")
		For i=0 to ubound(arrActSplitValues)-1
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1"), 60) Then
				SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1").Select arrActSplitValues(i)
				FRM_Logger_ReportInfoEvent "Action Taken List Value", "Action Taken List Value is Selected '"&arrActSplitValues(i)&"'", Null
				Wait g_LongWaitLarge
			End If
		Next
	End If
	
	If GUI_Object_IsExistX(objLoanPage, 60) Then
		intTabCount = objLoanPage.GetItemsCount
		If intTabCount = 1 Then
			strTab = objLoanPage.GetItem(0)
			FRM_Logger_ReportInfoEvent "Tab Count", "Tab is displayed as '"&strTab&"'", Null
		Else
			FRM_Logger_ReportFailEvent "Tab Count", "Tabs are not displayed as Expected", Null
		End If
	
	Else
		FRM_Logger_ReportFailEvent "Tab Verification", "Tab doesn't Exist", Null
		
	End If
				
	strAddress1 = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_11","title:=HMDA.*"), "value")
	FRM_VerifyEqual Cstr(Trim(strAddress1)), Cstr(Trim(FRM_DS_GetValue(objData1, "PropertyAddress"))), "Property Address", "Property Address is displayed "
	strPropertyCity1 = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_12"), "value")
	FRM_VerifyEqual Cstr(Trim(strPropertyCity1)), Cstr(Trim(FRM_DS_GetValue(objData1, "PropertyCity"))), "Property City", "Property City is displayed "
	strPropertyState1 = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox1|l_14"), "value")
	FRM_VerifyEqual Cstr(Trim(strPropertyState1)), Cstr(Trim(FRM_DS_GetValue(objData1, "PropertyState"))), "Property State", "Property State is displayed "
	strZipCode1 = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox26|l_HMDAX87"), "value")
	FRM_VerifyEqual Cstr(Trim(strZipCode1)), Cstr(Trim(FRM_DS_GetValue(objData1, "PropertyZip"))), "Property Zip", "Property Zip is displayed "

	If strCheckBox = "PropertyInformation" Then	
		GUI_WebCheckBox_Set objSummaryPage.WebCheckBox("html id:=__cid_CheckBox7_Ctrl","index:=0"), Cstr(Trim(FRM_DS_GetValue(objData, "CheckboxOff")))
	Else
		GUI_WebCheckBox_Set objSummaryPage.WebCheckBox("html id:=__cid_CheckBox11_Ctrl","index:=0"), Cstr(Trim(FRM_DS_GetValue(objData, "CheckboxOff")))
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyAddress")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_11"), Cstr(FRM_DS_GetValue(objData, "PropertyAddress")) 	'SubjectPropertyAddress
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyCity")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_12"), Cstr(FRM_DS_GetValue(objData, "PropertyCity")) 	'SubjectPropertyCity
	End If
	
	If strCheckBox = "PropertyInformation" Then	
		GUI_WebCheckBox_Set objSummaryPage.WebCheckBox("html id:=__cid_CheckBox7_Ctrl","index:=0"), Cstr(Trim(FRM_DS_GetValue(objData, "CheckboxOn")))
	Else
		GUI_WebCheckBox_Set objSummaryPage.WebCheckBox("html id:=__cid_CheckBox11_Ctrl","index:=0"), Cstr(Trim(FRM_DS_GetValue(objData, "CheckboxOn")))
	End If
	
	strAddress2 = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_11"), "value")
	FRM_VerifyEqual Cstr(Trim(strAddress2)), Cstr(Trim(FRM_DS_GetValue(objData1, "PropertyAddress"))), "Property Address", "Property Address is displayed"
	strPropertyCity2 = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_12"), "value")
	FRM_VerifyEqual Cstr(Trim(strPropertyCity2)), Cstr(Trim(FRM_DS_GetValue(objData1, "PropertyCity"))), "Property City", "Property City is displayed "
	strPropertyState2 = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox1|l_14"), "value")
	FRM_VerifyEqual Cstr(Trim(strPropertyState2)), Cstr(Trim(FRM_DS_GetValue(objData1, "PropertyState"))), "Property State", "Property State is displayed "
	strZipCode2 = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox26|l_HMDAX87"), "value")
	FRM_VerifyEqual Cstr(Trim(strZipCode2)), Cstr(Trim(FRM_DS_GetValue(objData1, "PropertyZip"))), "Property Zip", "Property Zip is displayed "
					
	Set objData        = Nothing
	Set objData1       = Nothing
	Set objSummaryPage = Nothing
	Set objLoanPage    = Nothing
	
End Function



'This function is used to Validate the Fields in HMDA Page
'@code
'    BIZ_HMDA_HMDAInfo_UpdateYear()
'@endcode

Function BIZ_HMDA_HMDAInfo_UpdateYear()
	
	FRM_Logger_ReportInfoEvent "BIZ_HMDA_HMDAInfo_UpdateYear", "Update the reporting year", Null
	
	Dim objSummaryPage
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("micclass:=page")
	
	BIZ_Forms_Open "HMDA Information"

	If GUI_Object_IsExistX(objSummaryPage.Image("file name:=field-unlock.png"), 60) Then
		GUI_Image_Click objSummaryPage.Image("file name:=field-unlock.png")
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_HMDAX27"), Year(Date)+1
		BIZ_Loan_Save()
	End If

	Set objSummaryPage    = Nothing
	
End Function



'This function is used to Validate the Fields in HMDA Page
'@code
'    BIZ_HMDA_NMLSValidateFieldsInHMDA(strRowID,strDropdownbox1,strDropdownbox2)
'@endcode
'@param strRowID        - The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strDropdownbox1 - operation to be performed
'@param strDropdownbox2 - operation to be performed

Function BIZ_HMDA_NMLSValidateFieldsInHMDA(strRowID,strDropdownbox1,strDropdownbox2)

	FRM_Logger_ReportInfoEvent "Validate the Fields in HMDA Page","Validate the Fields in HMDA Page using '"&strRowID&"' ", Null
	
	Dim objData,objSummaryPage,objLoanPage,arrActValues,arrActSplitValues,strLoanAmount,strLAmount,strApplicationLoanAmount1,strApplicationLoanAmount2
	
	Set objData           = FRM_DS_GetTestData("HMDA", "HMDA_Validation", strRowID)
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("micclass:=page")
	Set objLoanPage       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfTab("swfname:=tabControlForm")
	
	Wait g_LongWaitLarge
	BIZ_Forms_Open "HMDA Information"

	If GUI_Object_IsExistX(objSummaryPage.Image("file name:=field-unlock.png","index:=1"), 60) Then
		GUI_Image_Click objSummaryPage.Image("file name:=field-unlock.png","index:=1")
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_HMDAX27"), Year(Date)+1
		BIZ_Loan_Save()
	Else
		FRM_Logger_ReportInfoEvent "Set HMDA Reporting Year", "Value=2018 Set to HMDA Reporting Year", Null
	End If
	Wait g_LongWaitLarge
	If GUI_Object_IsExistX(objSummaryPage.WebButton("html id:=Button1"),30)Then
		GUI_WebButton_Click objSummaryPage.WebButton("html id:=Button1")
	ElseIf GUI_Object_IsExistX(objSummaryPage.WebButton("html id:=Button6"),30)Then 
		GUI_WebButton_Click objSummaryPage.WebButton("html id:=Button6")
	End If
	
	GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("micclass:=page").WebEdit("html id:=TextBox8"), Cstr(FRM_DS_GetValue(objData, "InitialApplicationAmount"))
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
	
	BIZ_Forms_Open "FNMA Streamlined 1003"
	GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_CASASRNX168"), Cstr(FRM_DS_GetValue(objData, "HELOCCreditLimit"))
	
	BIZ_Forms_Open "ULDD/PDD"
	Wait g_LongWaitLarge
	objSummaryPage.WebEdit("html id:=TextBox26").highlight
	GUI_WebEdit_Set objSummaryPage.WebTable("column names:=Loan Details","index:=0").WebEdit("html id:=TextBox1","index:=0"), Cstr(FRM_DS_GetValue(objData, "BalanceAmount"))
	
	BIZ_Forms_Open "HMDA Information"
	Wait g_LongWaitLarge
	GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox34|l_HMDAX56","index:=0"),strDropdownbox1
	GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox33|l_HMDAX57","index:=1"),strDropdownbox2
	Wait g_LongWaitLarge
	arrActValues = cstr(trim(FRM_DS_GetValue(objData, "ActionValues1")))
	objSummaryPage.WebEdit("html id:=l_HMDAX27").highlight
				
	If Util_String_IsNOtEmpty(arrActValues) Then
		arrActSplitValues = Split(arrActValues, ";")
		For i=0 to ubound(arrActSplitValues)-1
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=l_1393","index:=1"), 60) Then
				SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=l_1393","index:=1").Select arrActSplitValues(i)
			ElseIf GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1"), 60) Then
				strActionTaken =trim(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1"),"Value"))
				If strActionTaken = "Not applicable" Then
					SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=l_1393","index:=1").Select arrActSplitValues(i)
				Else
					SwfWindow("swfname:=MainForm").Page("micclass:=page").WebList("name:=select","html id:=DropdownBox3","index:=1").Select arrActSplitValues(i)
				End If
			
			End If
			FRM_Logger_ReportInfoEvent "Action Taken List Value", "Action Taken List Value is Selected '"&arrActSplitValues(i)&"'", Null
			Wait g_LongWaitLarge
			strLoanAmount = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=TextBox4|l_HMDAX31"), "value")
			strLAmount = "$"&strLoanAmount
			If strDropdownbox1 = "#0" and strDropdownbox2 = "#0" Then
				GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=page").WebButton("html id:=Button1")
				strApplicationLoanAmount1 = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("micclass:=page").WebEdit("html id:=TextBox8"), "value")
				GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
				FRM_VerifyEqual Cstr(Trim(strLoanAmount)), Cstr(Trim(strApplicationLoanAmount1)), "Loan Amount", "Loan Amount is verified"
			ElseIf strDropdownbox1 = "2. Not a reverse mortgage" and strDropdownbox2 = "1. Open-end line of credit" Then
				strApplicationLoanAmount2 = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfLabel("swfname:=lblLoanAmount"), "text")
				FRM_VerifyEqual Cstr(Trim(strLAmount)), Cstr(Trim(strApplicationLoanAmount2)), "Loan Amount", "Loan Amount is verified"
			ElseIf strDropdownbox1 = "#0" and strDropdownbox2 = "1. Open-end line of credit" Then
				FRM_VerifyEqual Cstr(Trim(strLoanAmount)), FormatNumber (Cstr(Trim(FRM_DS_GetValue(objData, "HELOCCreditLimit")))), "Loan Amount", "Loan Amount is verified"
			ElseIf strDropdownbox1 = "1. Reverse mortgage" and strDropdownbox2 = "#0" Then
				FRM_VerifyEqual Cstr(Trim(strLoanAmount)), FormatNumber (Cstr(Trim(FRM_DS_GetValue(objData, "InitialApplicationAmount")))), "Loan Amount", "Loan Amount is verified"
			End If
		Next
	End If
	
	Wait g_LongWaitLarge   'Due to sync issue
	If GUI_Object_IsExistX(objLoanPage, 60) Then
		intTabCount = objLoanPage.GetItemsCount
		If intTabCount > 0 Then
			strTab = objLoanPage.GetItem(0)
			FRM_Logger_ReportInfoEvent "Tab Count", "Tab is displayed as '"&strTab&"'", Null
		Else
			FRM_Logger_ReportFailEvent "Tab Count", "Tabs are not displayed as Expected", Null
		End If
	
	Else
		FRM_Logger_ReportFailEvent "Tab Verification", "Tab doesn't Exist", Null
		
	End If
								
	Set objData        = Nothing
	Set objSummaryPage = Nothing
	Set objLoanPage    = Nothing
	
End Function

'This function is used to create a HMDA Profile
'@code
'    BIZ_HMDA_AddNewHMDAProfile(strRowID)
'@endcode
'@param strRowID        - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_HMDA_AddNewHMDAProfile(strRowID)

	BIZ_Nav_HierarchyTree "Loan Setup","HMDA Profiles"	
	Set objProfileList1 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvHMDAProfile")
	'Set objProfileList2 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AddEditOrgDialog").SwfWindow("swfname:=AddEditLEIDialog").SwfObject("swfname:=gvHMDAProfile")
	Set objScrollBar = objProfileList1.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objProfileDetails=FRM_DS_GetTestData("HMDA","HMDA_Profile_Creation",strRowID) 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ProfileName")) Then
		selectionText = trim(FRM_DS_GetValue(objProfileDetails,"ProfileName"))		
	Else
		FRM_Logger_ReportFailEvent "HMDA Profile Name", "Could not fetch HMDA profile name from worksheet", Null	
	End If
	'Get the position of column "Profile Name"
	intColNum = GUI_List_GetColumnIndex(objProfileList1, "Profile Name")	
	intRowCount = objProfileList1.Object.Items.Count
	For i = 0 To intRowCount - 1
		strActualWord = objProfileList1.Object.Items.Item(i).Subitems.Item(intColNum).Text
		If lcase(strActualWord) = lcase(selectionText) Then
			boolFind = True	
'				objScrollBar.Set "0"
'				Pagecount = objScrollBar.GetROProperty("LargeChange")
'				Scrollline = intRowCount-Pagecount
'				If i<Scrollline OR Scrollline < 0 Then 'Not the last page, then it's the first row after scroll
'					objScrollBar.NextLine i
'					intPosition = 0
'				Else
'					objScrollBar.NextLine Scrollline 'last page, 
'					intPosition = i-Scrollline
'				End If
			Exit For
		End If	
	Next
	If boolFind Then
	Else 	
		'if we are here that means we have to create a new profile
		Set objProfileDetails=FRM_DS_GetTestData("HMDA","HMDA_Profile_Creation",strRowID) 

		'click an add new profile button			
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdButtonNew")

		'Set HMDA Profile Name		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ProfileName")) Then		
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtProfileName"),trim(FRM_DS_GetValue(objProfileDetails,"ProfileName"))				
		End If
		'Set Respondent ID
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"RespondentID")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtRespondentID"),trim(FRM_DS_GetValue(objProfileDetails,"RespondentID"))
		End If	
		'Set Tax ID
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"TaxID")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtTaxID"),trim(FRM_DS_GetValue(objProfileDetails,"TaxID"))
		End If
		'Set Agency
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"Agency")) Then
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbAgency"),trim(FRM_DS_GetValue(objProfileDetails,"Agency"))
		End If
		'Set LEI
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"LEI")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtLEI"),trim(FRM_DS_GetValue(objProfileDetails,"LEI"))
		End If
		'Set Respondent Company Name
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"CompanyName")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtCompanyName"),trim(FRM_DS_GetValue(objProfileDetails,"CompanyName"))
		End If
		'Set Contact Person Name
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ContactPersonName")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtName"),trim(FRM_DS_GetValue(objProfileDetails,"ContactPersonName"))
		End If
		'Set Contact Person Address
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ContactPersonAddress")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtAddress"),trim(FRM_DS_GetValue(objProfileDetails,"ContactPersonAddress"))
		End If
		'Set Contact Person City
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ContactPersonCity")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtCity"),trim(FRM_DS_GetValue(objProfileDetails,"ContactPersonCity"))
		End If
		'Set Contact Person State
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ContactPersonState")) Then
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbState"),trim(FRM_DS_GetValue(objProfileDetails,"ContactPersonState"))
		End If		
		'Set Contact Person Zip
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ContactPersonZip")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtZip"),trim(FRM_DS_GetValue(objProfileDetails,"ContactPersonZip"))
		End If
		'Set Contact Person Phone
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ContactPersonPhone")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtPhone"),trim(FRM_DS_GetValue(objProfileDetails,"ContactPersonPhone"))
		End If
		'Set Contact Person Fax
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ContactPersonFax")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtFax"),trim(FRM_DS_GetValue(objProfileDetails,"ContactPersonFax"))
		End If
		'Set Contact Person Email
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ContactPersonEmail")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtEmail"),trim(FRM_DS_GetValue(objProfileDetails,"ContactPersonEmail"))
		End If
		'Set Parent Mailing Name
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ParentMailingName")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtParentMailingName"),trim(FRM_DS_GetValue(objProfileDetails,"ParentMailingName"))
		End If	
		'Set Parent Mailing Address
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ParentMailingAddress")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtParentMailingAddress"),trim(FRM_DS_GetValue(objProfileDetails,"ParentMailingAddress"))
		End If
		'Set Parent Mailing City
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ParentMailingCity")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtParentMailingCity"),trim(FRM_DS_GetValue(objProfileDetails,"ParentMailingCity"))
		End If	
		'Set Parent Mailing State
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ParentMailingState")) Then
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbParentMailingState"),trim(FRM_DS_GetValue(objProfileDetails,"ParentMailingState"))
		End If			
		'Set Parent Mailing Zip
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ParentMailingZip")) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("swfname:=txtParentMailingZip"),trim(FRM_DS_GetValue(objProfileDetails,"ParentMailingZip"))
		End If	
		'Set HMDA Application Date
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"HMDAApplicationDate")) Then
			Set objFindSelectPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ReportFieldSelector")
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbApplicationDate"),"Other..."
			If GUI_Object_IsExistX(objFindSelectPage, 60) Then
				GUI_swfEdit_Set objFindSelectPage.SwfEdit("swfname:=txtFind"), Mid(FRM_DS_GetValue(objProfileDetails,"HMDAApplicationDate"),1,3)
				GUI_SwfButton_Click objFindSelectPage.SwfButton("swfname:=btnFind")
				GUI_swfButton_Click objFindSelectPage.SwfButton("swfname:=btnOK")
			End If
			
		End If	
		'x = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=panel1").GetROProperty ("abs_x")
		y = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=panel1").GetROProperty ("abs_y")
		
		'Scroll down the form			
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=panel1").VScroll micsetpos, y

		'Set Purchase Loans
		If trim(ucase(FRM_DS_GetValue(objProfileDetails,"PurchaseLoans")))="NO" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdBtnPurchaseLoansNo")
		ElseIf trim(ucase(FRM_DS_GetValue(objProfileDetails,"PurchaseLoans")))="YES" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdBtnPurchaseLoansYes")				
		End If		
		'Set Channel Option 1
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ChannelOption1")) Then
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbLoansNoChannel"),trim(FRM_DS_GetValue(objProfileDetails,"ChannelOption1"))
		End If
		'Set Channel Option 2
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"ChannelOption2")) Then
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbLoansCorrespondent"),trim(FRM_DS_GetValue(objProfileDetails,"ChannelOption2"))
		End If
		'Set DTI
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"DTI")) Then
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cboDTI"),trim(FRM_DS_GetValue(objProfileDetails,"DTI"))
		End If
		'Set CLTV
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"CLTV")) Then
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cboCLTV"),trim(FRM_DS_GetValue(objProfileDetails,"CLTV"))
		End If			
		'Set Income
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objProfileDetails,"Income")) Then
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cboIncome"),trim(FRM_DS_GetValue(objProfileDetails,"Income"))
		End If				
		'Set Report Information
		If trim(ucase(FRM_DS_GetValue(objProfileDetails,"ReportInformation")))="NO" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdBtnReportInfoNo")
		ElseIf trim(ucase(FRM_DS_GetValue(objProfileDetails,"ReportInformation")))="YES" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdBtnReportInfoYes")				
		End If	
		'Set Report Income
		If trim(ucase(FRM_DS_GetValue(objProfileDetails,"ReportIncome")))="NO" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdBtnRprtIncmNo")
		ElseIf trim(ucase(FRM_DS_GetValue(objProfileDetails,"ReportIncome")))="YES" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdBtnRprtIncmYes")
			If trim(ucase(FRM_DS_GetValue(objProfileDetails,"ReportBorrowerAge")))="YES" Then
				GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdButtonBorrowerAgeYes")
			ElseIf trim(ucase(FRM_DS_GetValue(objProfileDetails,"ReportBorrowerAge")))="NO" Then
				GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdButtonBorrowerAgeNo")
			End If			
			If trim(ucase(FRM_DS_GetValue(objProfileDetails,"ReportCoBorrowerAge")))="YES" Then
				GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdButtonCoBorrowerAgeYes")
			ElseIf trim(ucase(FRM_DS_GetValue(objProfileDetails,"ReportCoBorrowerAge")))="NO" Then
				GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdButtonCoBorrowerAgeNo")
			End If			

		End If				
		'Set Rate Spread
		If trim(ucase(FRM_DS_GetValue(objProfileDetails,"RateSpread")))="NO" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdBtnRateSpreadNo")
		ElseIf trim(ucase(FRM_DS_GetValue(objProfileDetails,"RateSpread")))="YES" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfRadioButton("swfname:=rdBtnRateSpreadYes")				
		End If	

		'Click on save button
		GUI_swfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdButtonSave")
		If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Application Error"), 3) Then
			GUI_winButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Application Error").WinButton("text:=.*Retry")
		End If
		FRM_Logger_ReportInfoEvent "HMDA Profile Creation",objProfileDetails.Item("ProfileName")&"-HMDA Profile Created successfully", Null
	End If
		
	'Close HMDA Profiles form
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnClose")
	
	Set objProfileDetails=Nothing
	Set objProfileList1=Nothing	
	Set objScrollBar=Nothing		
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\HMDA\HMDA.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\KBYO2\KBYO2.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup KBYO2
' List of functions here
' @code
'   Function BIZ_KBYO2_removetz(sText)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'The purpose of this function is to remove trailing zeros of field values (particularly in CD and LE pages)
'@code
'    Function BIZ_KBYO2_removetz(sText)
'@endcode
'@param sText - String value of a field

Function BIZ_KBYO2_removetz(sText)
BIZ_KBYO2_removetz=sText
sDelimiter="."
array1 = Split(sText,sDelimiter)
If (ubound(array1)>0) Then
	x=array1(1)
End If
if UTIL_String_IsMatch(x,"000") then
	BIZ_KBYO2_removetz=array1(0)
end if
	x1=right(x,2)
	x2=left(x,1)
if (x2<>"0" AND UTIL_String_IsMatch(x1,"00")) then
	BIZ_KBYO2_removetz=array1(0)&"."&left(array1(1),1)
end if
	x1=right(x,1)
	x2=left(x,2)
if (x2<>"00" AND UTIL_String_IsMatch(x1,"0")) then
	BIZ_KBYO2_removetz=array1(0)&"."&left(array1(1),2)
end if
End Function
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\KBYO2\KBYO2.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Loan\AlertsAndLog.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Loan_AlertsAndLog BIZ_Loan_AlertsAndLog
'List of functions here
'@code
'   Function BIZ_AlertsAndLog_VerifyItemExist(strTab, strItemName)
'   Function BIZ_AlertsAndLog_VerifyItemNotExist(strTab, strItemName)
'   Function BIZ_AlertsAndLog_ClickOnRecord(strTab, strItemName)
'   Function BIZ_AlertsAndLog_UpdateGoodFaithFeeVarianceViolated(strRowID)
'	Function BIZ_AlertsAndLog_VerifyRecordExist(strTab, strItemName, strSubItemName)
'   Function BIZ_AlertsAndLog_VerifyAndClickRecordExist(strTab, strItemName, strSubItemName)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for Verify the item exist in the list
'@code
'    BIZ_AlertsAndLog_VerifyItemExist(strTab, strItemName)
'@endcode
'@param strTab      - The tab(Log or Alerts & Messages)
'@param strItemName - The Item name

Function BIZ_AlertsAndLog_VerifyItemExist(strTab, strItemName)
	
	FRM_Logger_ReportInfoEvent strTab, "Verify '"&strItemName& "' exists in '"&strTab&"' tab", Null
	Dim isExist
	isExist = BIZ_AlertsAndLog_ClickOnRecord(strTab, strItemName)
	
	If isExist Then
	   FRM_Logger_ReportPassEvent "Verify '"&strItemName& "' exists in '"&strTab&"' tab", "Alert or Log Exists", Null
	Else
	   FRM_Logger_ReportFailEvent "Verify '"&strItemName& "' exists in '"&strTab&"' tab", " Alert or Log Not Exists", Null
	End If
End Function



'This function is for verify the item Not exist in the list
'@code
'    BIZ_AlertsAndLog_VerifyItemNotExist(strTab, strItemName)
'@endcode
'@param strTab      - The tab(Log or Alerts & Messages)
'@param strItemName - The Item name
Function BIZ_AlertsAndLog_VerifyItemNotExist(strTab, strItemName)
	
	FRM_Logger_ReportInfoEvent strTab, "Verify '"&strItemName& "' Not exist in '"&strTab&"' tab", Null
	Dim isExist
	isExist = BIZ_AlertsAndLog_ClickOnRecord(strTab, strItemName)
	
	If Not isExist Then
		FRM_Logger_ReportPassEvent "Verify '"&strItemName& "' Not exist in '"&strTab&"' tab", "Alert or Log Not Exists", Null
	Else
		FRM_Logger_ReportFailEvent "Verify '"&strItemName& "' Not exist in '"&strTab&"' tab", "Alerts or Log Exists", Null
	End If
	
End Function



'This function is for Click on the item in the list
'@code
'    BIZ_AlertsAndLog_ClickOnRecord(strTab, strItemName)
'@endcode
'@param strTab      - The tab(Log or Alerts & Messages)
'@param strItemName - The Item name

Function BIZ_AlertsAndLog_ClickOnRecord(strTab, strItemName)
	
	FRM_Logger_ReportInfoEvent "Click on '"&strTab&"'", "'"&strItemName&"' exist in the viewlist", Null
	BIZ_Nav_SelectLoanTab() 'Added by savik
	
	BIZ_Nav_LogAlerts_SelectTab strTab
	Dim objMainForm, objMainView, objMainViewScrollBar, isExist
	Set objMainForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	If strTab = "Log" Then	    
	   Set objMainView = objMainForm.SwfObject("swfname:=gvLog")
	   objMainView.Click 147, 47, micRightBtn
	   
	   If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mnuContext"), 5)) Then 
		  SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mnuContext").Select "&Collapse All"
	   End If
	   
	Elseif strTab="Alerts & Messages" Then
	   Set objMainView = objMainForm.SwfObject("swfname:=gvAlerts")
	End If
	
	Set objMainViewScrollBar = objMainView.SwfScrollBar("swfname:=vPanelScrollBar")
	
	isExist = GUI_List_ClickRow(objMainView, objMainViewScrollBar, 0, strItemName, False, False, False, "Single") 
	Wait g_TinyWaitSmall
	BIZ_AlertsAndLog_ClickOnRecord = isExist
	
	Set objMainForm			 = Nothing
	Set objMainView 		 = Nothing
	Set objMainViewScrollBar = Nothing
End Function



'This function is for verify and Click record in the log
'@code
'    BIZ_AlertsAndLog_VerifyAndClickRecordExist(strTab, strItemName, strSubItemName)
'@endcode
'@param strTab 		   - The tab(Log or Alerts & Messages)
'@param strItemName    - The Item name
'@param strSubItemName - The sub item name

Function BIZ_AlertsAndLog_VerifyAndClickRecordExist(strTab, strItemName, strSubItemName)
	
	FRM_Logger_ReportInfoEvent "Validate Record in '"&strTab&"'", "'"&strItemName&"' exist in the viewlist", Null
	BIZ_Nav_LogAlerts_SelectTab strTab
	
	Dim objMainForm, objMainView, objMainViewScrollBar, intRowCount, intGroupItemCount, intFlag
	Set objMainForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	intFlag=0
	If strTab = "Log" Then	    
	   Set objMainView = objMainForm.SwfObject("swfname:=gvLog")
	Else
	   Set objMainView = objMainForm.SwfObject("swfname:=gvAlerts")
	End If
	Set objMainViewScrollBar = objMainView.SwfScrollBar("swfname:=vPanelScrollBar")
	intRowCount = objMainView.Object.Items.Count
	
	For i = 0 To intRowCount - 1
		strActualWord = objMainView.Object.Items.Item(i).Text
		
		If LCase(strActualWord) = LCase(strItemName) Then
		   	intGroupItemCount = objMainView.Object.items.item(i).groupitems.Count
		   	
			For j = 0 To intGroupItemCount-1 Step 1
			   	strActualRecord = objMainView.Object.Items.Item(i).groupitems.item(j).SubItems.item(0).text
			   	
				If (LCase(strSubItemName) = LCase(strActualRecord)) Then
			   		GUI_List_ClickOnCellData objMainView, j+1, 1, False, False, False, "Single"
					wait 10
					BIZ_AlertsAndLog_VerifyAndClickRecordExist = True
					Exit Function
			   End If
		   Next
		End If
	Next
	
	Set objMainForm = Nothing
	Set objMainView = Nothing
	Set objMainViewScrollBar = Nothing
End Function



'This function is for Update Good Faith Fee Variance Violated alert
'@code
'    BIZ_AlertsAndLog_UpdateGoodFaithFeeVarianceViolated(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_AlertsAndLog_UpdateGoodFaithFeeVarianceViolated(strRowID)
	
	FRM_Logger_ReportInfoEvent "GoodFaithFeeVarianceViolated","Update alert using Row Id '"&strRowID&"' in the GoodFaithFeeVarianceViolated datasheet", Null
	
	Dim objMainForm, objGoodFaith, objData
	Set objMainForm = SwfWindow("swfname:=MainForm")
	GUI_SwfButton_Click objMainForm.SwfButton("text:=Cure Variance")
    
	Set objGoodFaith = objMainForm.SwfWindow("swfname:=GoodFaithViolationResolutionDialog")
    Set objData = FRM_DS_GetTestData("AlertAndLog", "GoodFaithFeeVarianceViolated", strRowID)
    
    GUI_SwfEdit_Set objGoodFaith.SwfEdit("swfname:=txtDate"), FRM_DS_GetValue(objData, "DateResolved")
    GUI_SwfEdit_Set objGoodFaith.SwfEdit("swfname:=txtAppliedCureAmount"), FRM_DS_GetValue(objData, "CureAmount")
    GUI_SwfEditor_Type objGoodFaith.SwfEdit("swfname:=txtReason"), FRM_DS_GetValue(objData, "Comment")
	GUI_SwfButton_Click objGoodFaith.SwfButton("text:=&OK")
    
	Set objMainForm  = Nothing
	Set objGoodFaith = Nothing
	Set objData      = Nothing
End Function



'This function is for verify a record in the log
'@code
'    BIZ_AlertsAndLog_VerifyRecordExist(strTab, strItemName, strSubItemName)
'@endcode
'@param strTab 		   - The tab(Log or Alerts & Messages)
'@param strItemName    - The Item name
'@param strSubItemName - The sub item name

Function BIZ_AlertsAndLog_VerifyRecordExist(strTab, strItemName, strSubItemName)
	
	FRM_Logger_ReportInfoEvent "Validate Record in '"&strTab&"'", "'"&strItemName&"' exist in the viewlist", Null
	BIZ_Nav_LogAlerts_SelectTab strTab
	
	Dim objMainForm, objMainView, objMainViewScrollBar, intRowCount, intGroupItemCount
	Set objMainForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	If strTab = "Log" Then	    
	   Set objMainView = objMainForm.SwfObject("swfname:=gvLog")
	   objMainView.Click 147, 47, micRightBtn
	Else
	   Set objMainView = objMainForm.SwfObject("swfname:=gvAlerts")
	End If
	
	Set objMainViewScrollBar = objMainView.SwfScrollBar("swfname:=vPanelScrollBar")
	intRowCount = objMainView.Object.Items.Count
	
	For i = 0 To intRowCount - 1
		strActualWord = objMainView.Object.Items.Item(i).Text
		
		If LCase(strActualWord) = LCase(strItemName) Then
		   intGroupItemCount = objMainView.Object.items.item(i).groupitems.Count
		   
		   For j = 0 To intGroupItemCount-1 Step 1
			   strActualRecord = objMainView.Object.Items.Item(i).groupitems.item(j).SubItems.item(0).text
				
			   If (LCase(strSubItemName) = LCase(strActualRecord)) Then 
				  BIZ_AlertsAndLog_VerifyRecordExist = True
				  Exit Function
			   End If
		   Next
		End If
	Next
	BIZ_AlertsAndLog_VerifyRecordExist = False
	Set objMainForm = Nothing
	Set objMainView = Nothing
	Set objMainViewScrollBar = Nothing
End Function



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Loan\AlertsAndLog.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Loan\Liabilities.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Loan_Liabilities
'List of functions here
'@code
'   Function BIZ_Liabilities_Import()
'   Function BIZ_Liabilities_Verify(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for import Liabilities from the Credit report 
'@code
'    BIZ_Liabilities_Import()
'@endcode

Function BIZ_Liabilities_Import()

    FRM_Logger_ReportInfoEvent "Borrower Summary - Origination", "Import Liabilities from the Crdit report", Null

	'Window("LoanWindow").Page("BorrowerSummary-Origination").WebButton("Import Liabilities").Click
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("html id:=Button19")
	
	'=======Make sure the user should be able to select & import liabilities from the credit report to page 2 of the 1003=========
	'GUI_Object_WaitTillEnabled SwfWindow("EncompassMenu").SwfWindow("Liability Import").SwfButton("Import")	
	'GUI_SwfButton_Click SwfWindow("EncompassMenu").SwfWindow("Liability Import").SwfButton("Import")
	'GUI_Object_WaitTillEnabled SwfWindow("EncompassMenu").SwfWindow("Liability Import").Dialog("Import Liabilities").WinButton("OK")
	'GUI_WinButton_Click SwfWindow("EncompassMenu").SwfWindow("Liability Import").Dialog("Import Liabilities").WinButton("OK")
	
	GUI_Object_WaitTillEnabled SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LiabImportDialog").SwfButton("swfname:=okBtn")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LiabImportDialog").SwfButton("swfname:=okBtn")
	GUI_Object_WaitTillEnabled SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LiabImportDialog").Dialog("text:=Import Liabilities").WinButton("text:=OK")
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LiabImportDialog").Dialog("text:=Import Liabilities").WinButton("text:=OK")
	
End Function



'This function is for Verify Imported Liabilities
'@code
'    BIZ_Liabilities_Verify(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Liabilities_Verify(strRowID)

    FRM_Logger_ReportInfoEvent "1003 Page 2", "Verify Liabilities Information using Row Id '"&strRowID&"' in the VerifyLiabilities datasheet", Null

	BIZ_Forms_Open "1003 Page 2"
	Dim objData, strCompanyName, boolCompanyName, boolBalance, boolPayment
	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "VerifyLiabilities", strRowID)
	
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Balance_FL0113"), objData.Item("Balance_FL0113"),"Balance_FL0113"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Balance_FL0213"), objData.Item("Balance_FL0213"),"Balance_FL0213"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Balance_FL0313"), objData.Item("Balance_FL0313"),"Balance_FL0313"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Balance_FL0413"), objData.Item("Balance_FL0413"),"Balance_FL0413"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Company Name_FL0102"), objData.Item("CompanyName_FL0102"),"CompanyName_FL0102"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Company Name_FL0202"), objData.Item("CompanyName_FL0202"),"CompanyName_FL0202"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Company Name_FL0302"), objData.Item("CompanyName_FL0302"),"CompanyName_FL0302"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Company Name_FL0402"), objData.Item("CompanyName_FL0402"),"CompanyName_FL0402"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Mos LeftFL0112"), objData.Item("MonthLeft_FL0212"),"MonthLeft_FL0112" 
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Mos LeftFL0212"), objData.Item("MonthLeft_FL0212"),"MonthLeft_FL0212"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Mos LeftFL0312"), objData.Item("MonthLeft_FL0312"),"MonthLeft_FL0312"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Mos LeftFL0412"), objData.Item("MonthLeft_FL0412"),"MonthLeft_FL0412"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Payment1_FL0111"), objData.Item("Payment1_FL0111"),"Payment1_FL0111"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Payment2_FL0211"), objData.Item("Payment2_FL0211"),"Payment2_FL0211"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Payment3_FL0311"), objData.Item("Payment3_FL0311"),"Payment3_FL0311"
	'GUI_Object_ValidateValue Window("LoanWindow").Page("1003Page2").WebEdit("Liabilities_Payment4_FL0411"), objData.Item("Payment4_FL0411"),"Payment4_FL0411"
	
	For i = 1 To 7
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyName")) Then
		   'boolCompanyName = GUI_Object_ValidateValue (SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0"&i&"02"), objData.Item("CompanyName"),"CompanyName")
		   strCompanyName = GUI_Object_GetPropertyValue (SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0"&i&"02"), "value")
		   
		   If Trim(FRM_DS_GetValue(objData, "CompanyName")) = Trim(strCompanyName) Then
			  boolCompanyName = True
		   End If
		   
    	End If
    	
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Balance")) Then
		   'boolBalance = GUI_Object_ValidateValue (SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0"&i&"13"), objData.Item("Balance"),"Balance")
		   strBalance = GUI_Object_GetPropertyValue (SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0"&i&"13"), "value")
		   
		   If Trim(FRM_DS_GetValue(objData, "Balance")) = Trim(strBalance) Then
			  boolBalance = True
		   End If
		   
    	End If
    	
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Payment")) Then
		   'boolPayment = GUI_Object_ValidateValue (SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0"&i&"11"), objData.Item("Payment"),"Payment")
		   strPayment = GUI_Object_GetPropertyValue (SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0"&i&"11"), "value")
		   
		   If Trim(FRM_DS_GetValue(objData, "Payment")) = Trim(strPayment) Then
			  boolPayment = True
		   End If
		   
    	End If
    	
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MosLeft")) Then
		   'boolMosLeft = GUI_Object_ValidateValue (SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0"&i&"12"), objData.Item("MosLeft"),"MonthLeft")
		   strMosLeft = GUI_Object_GetPropertyValue (SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0"&i&"12"), "value")
		   
		   If Trim(FRM_DS_GetValue(objData, "MosLeft")) = Trim(strMosLeft) Then
			  boolMosLeft = True
		   End If
		   
    	End If
    	
    	If boolCompanyName = True AND boolBalance = True AND boolPayment = True AND boolMosLeft = True Then
    	   FRM_Logger_ReportPassEvent "Verify Liabilities","Correct liability has been imported",Null
    	   Exit Function
    	End If
	Next
	
	If boolCompanyName = False OR boolBalance = False OR boolPayment = False OR boolMosLeft = False Then
       FRM_Logger_ReportFailEvent "Verify Liabilities","Correct liability hasn't been imported",Null
       Exit Function
    End If
	
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0113"), objData.Item("Balance_FL0113"),"Balance_FL0113"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0213"), objData.Item("Balance_FL0213"),"Balance_FL0213"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0313"), objData.Item("Balance_FL0313"),"Balance_FL0313"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0413"), objData.Item("Balance_FL0413"),"Balance_FL0413"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0102"), objData.Item("CompanyName_FL0102"),"CompanyName_FL0102"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0202"), objData.Item("CompanyName_FL0202"),"CompanyName_FL0202"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0302"), objData.Item("CompanyName_FL0302"),"CompanyName_FL0302"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0402"), objData.Item("CompanyName_FL0402"),"CompanyName_FL0402"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0112"), objData.Item("MonthLeft_FL0112"),"MonthLeft_FL0112"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0212"), objData.Item("MonthLeft_FL0212"),"MonthLeft_FL0212"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0312"), objData.Item("MonthLeft_FL0312"),"MonthLeft_FL0312"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0412"), objData.Item("MonthLeft_FL0412"),"MonthLeft_FL0412"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0111"), objData.Item("Payment1_FL0111"),"Payment1_FL0111"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0211"), objData.Item("Payment1_FL0211"),"Payment1_FL0211"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0311"), objData.Item("Payment1_FL0311"),"Payment1_FL0311"
	'GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebEdit("html id:=l_FL0411"), objData.Item("Payment1_FL0411"),"Payment1_FL0411"
	
	Set objData = Nothing	
	
End Function	



'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Loan\Liabilities.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Loan\Loan.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Loan
'List of function:
'@code
'   Function BIZ_Loan_AddNewBlankLoan()
'   Function BIZ_Loan_AddNewBlankLoanUnderSelectedLoanFolder(strPipelineView,strLoanFolder)
'   Function BIZ_Loan_Save()
'   Function BIZ_Loan_EmailCheckDialog(intSec, boolHideChk)
'   Function BIZ_Loan_MilestoneDiffDialog(intSec)
'   Function BIZ_Loan_Exit(boolSave)
'   Function BIZ_Loan_OpenByLoanNumber(strLoanNumber)
'   Function BIZBIZ_Loan_FinishQualificationMilestone_AssignProcessor(strLoanOpener, strLoanProcessor)
'	Function BIZ_Loan_SearchLoanByColumnValueDisplayLoanInGrid(strColTitle,strColValue)
'	Function BIZ_Loan_AssignOpener(strWorkSheetName, strLoanOpener)
'	Function BIZ_Loan_AssignProcessor(strWorkSheetName, strLoanProcessor)
'	Function BIZ_Loan_FinishMilestone_AssignUser(strMilestone, strLoanUser)
'   Function BIZ_Loan_SaveLoanNumber()
'   Function BIZ_Loan_GetLoanNumber()
'   Function BIZ_Loan_OpenLoanByColFieldValue(strColTitle,strColValue)
'	Function BIZ_Loan_SearchLoanByColumnValue(strColTitle,strColValue)
'   Function BIZ_Loan_SwitchFormVersion(strFormVersion)
'   Function BIZ_Loan_Print()
'   Function BIZ_Loan_SelectLoanByColFieldValueInPiplineView(strColTitle,strColValue)
'	Function BIZ_Loan_ApplyTemplateToNewLoan(strTemplateName)
'   Function BIZ_Loan_AppendLoanTemplateSet(strLoanTemplateSet)
'	Function BIZ_Loan_ApplyLoanProgramToNewLoan(strLoanProgramName, checkboxStatus)
'	Function BIZ_Loan_AddBorrowerPairs(strRowIDBo, strRowIDCoBo, intPairNum)
'   Function BIZ_Loan_AppendDataTemplate(strTemplateName)
'   Function BIZ_Loan_ApplyClosingCostTemplate(strTemplateName)
'   Function BIZ_Loan_DeleteLoan()
'	Function BIZ_Loan_DuplicateLoanCheck()
'   Function BIZ_Loan_AcceptFiles(strMilestone,strNextLoanUser)
'	Function BIZ_Loan_CompleteQualification()
'	Function BIZ_Loan_AssignCurrentUser(strWorkSheetName, strUser)
'	Function BIZ_Loan_AssignNextUser(strWorkSheetName, strUser)
'	Function BIZ_Loan_CompleteProcessing()
'	Function BIZ_Loan_AssignUser(strUserType, strMilestone, strLoanUser)
'	Function BIZ_Loan_SelectMilestoneUser(strLoanUser)
'	Function BIZ_Loan_ApplyTemplateToNewLoanInFolder(strFolderPath, strTemplateName)
'	Function BIZ_Loan_MakeMilestoneTextVisible(strMilestoneName)
'	Function BIZ_Loan_AppendTaskSet(strTemplateName)
'	Function BIZ_Loan_AppendDocumentSet(strTemplateName)
'	Function BIZ_Loan_ApplyInputFormSet(strTemplateName)
'	Function BIZ_Loan_AddDefaultTemplate()
'	Function BIZ_Loan_SelectLoanByColumnValue(strColTitle,strColValue)
'	Function BIZ_Loan_BorrowerSummaryOrigination_SetBorrowerandTransactionDetails_LoanCreate(strRowID)
'	Function BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan(strMilestone)
'	Function BIZ_Loan_VerifyTheMileStoneExistence(strMilestoneName)
'	Function BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestone(strBorrowerName,strNextExpectedMilestone)
'	Function BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestoneAndLoanDetails(strBorrowerName,strNextExpectedMilestone, strLoanPurpose,  strAmortization)
'	Function BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestoneLoanDetails(strBorrowerName,strNextExpectedMilestone, strLoanType, strLoanPurpose,  strAmortization)
'   Function BIZ_Loan_FinishMilestone_AssignUser(strMilestone, strLoanUser, blnChecked)
'	Function BIZ_Loan_Pipeline_CreateTemplate(strRowID)
'	Function BIZ_Loan_NewBlankLoan_CreateFromTemplate(strFolderName,strLoanTemplateName)
'	Function BIZ_Loan_NewLoan_CreationFromTemplate(strRowID)
'	Function BIZ_Loan_EmailCheckWin_SetEmail(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for add a new blank loan 
'@code
'    BIZ_Loan_AddNewBlankLoan()
'@endcode

Function BIZ_Loan_AddNewBlankLoan()

    FRM_Logger_ReportInfoEvent "Add New Loan", "Adding new blank loan", Null
	Dim objFormsTab
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew", "index:=0")
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").SwfWindow("text:=New Loan","index:=0").SwfButton("swfname:=btnNew","index:=0"),30
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("text:=New Loan","index:=0").SwfButton("swfname:=btnNew","index:=0")
	
	If SwfWindow("swfname:=MainForm").Dialog("index:=0").Exist(30) Then
	   GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("index:=0","index:=0").WinButton("text:=&No","index:=0")
	End If
	
	If SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Exist(30) Then
	   GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("text:=&No","index:=0")
	End If
	
	Set objFormsTab = SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl")
	
	If objFormsTab.Exist(30) Then
	   FRM_Logger_ReportPassEvent "Add New Loan", "Created new blank Loan", Null
	Else
	   FRM_Logger_ReportFailEvent "Add New Loan", "New blank loan is not created", Null 
	End If
	
	Set objFormsTab = Nothing
End Function



'This function is for add a new blank loan under selected Loan Folder
'@code
'    BIZ_Loan_AddNewBlankLoanUnderSelectedLoanFolder(strPipelineView,strLoanFolder)
'@endcode
'@param strPipelineView - string pipeline view
'@param strLoanFolder   - string loan folder

Function BIZ_Loan_AddNewBlankLoanUnderSelectedLoanFolder(strPipelineView,strLoanFolder)	

	BIZ_Pipeline_SelectPipelineViewAndLoanFolder strPipelineView, strLoanFolder
    BIZ_Loan_AddNewBlankLoan
	
End Function 



'This function is for Click on the save button when saving a loan, handles the alert boxes 
'@code
'    BIZ_Loan_Save()
'@endcode


Function BIZ_Loan_Save()

	Dim intCount
    intCount = 0
	GUI_Object_WaitTillEnabledX SwfWindow("swfname:=MainForm").SwfObject("swfname:=saveBtn"), 30
    
    If SwfWindow("swfname:=MainForm").SwfWindow("Swfname:=MainScreen").SwfObject("swfname:=saveBtn").Exist(1) Then
    	SwfWindow("swfname:=MainForm").SwfWindow("Swfname:=MainScreen").SwfObject("swfname:=saveBtn").Click
    Else
    	SwfWindow("swfname:=MainForm").SwfObject("swfname:=saveBtn").Click
    End If
	
	
	Do
		If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").Exist(20) Then
		   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
		End If
		If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ImportRatesDialog").Exist(10) Then
		   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ImportRatesDialog").SwfButton("swfname:=btnCancel")
		End If
		BIZ_Loan_EmailCheckDialog 30, True 
		BIZ_Loan_MilestoneDiffDialog(30)
	 
		If SwfWindow("swfname:=MainForm").Dialog("text:=Application Error").Exist(15) Then
		   SwfWindow("swfname:=MainForm").Dialog("text:=Application Error").WinButton("text:=.*Ignore").Click
		   boolErrorFound = True
		End If    
		
		intCount = intCount + 1
		If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboBorrowers","index:=0")) Then
			SwfWindow("swfname:=MainForm").SwfObject("swfname:=pnlHeader").SwfComboBox("swfname:=cboBorrowers","index:=0").Click
		End If
		
        If SwfWindow("swfname:=MainForm").SwfObject("swfname:=pnlHeader").SwfComboBox("swfname:=cboBorrowers","index:=0").GetROproperty("focused") or intCount > 40 Then
		   BIZ_Nav_SelectLoanTab
		   Exit Do
		End If
	Loop
	wait g_LongWaitSmall 'explicit wait added due to sync
	
	BIZ_Loan_SaveLoanNumber()
	
	
End Function



'This funciton clicks OK on the email check dialog
'@code
'    BIZ_Loan_EmailCheckDialog(intSec, boolHideChk)
'@endcode
'@param intSec wait for the number of seconds for the dailog to appear

Function BIZ_Loan_EmailCheckDialog(intSec, boolHideChk)

    If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog").Exist(intSec) Then
       
       If boolHideChk Then
          SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog").SwfCheckBox("swfname:=hideChk").Click
       End If
       
       GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog").SwfButton("swfname:=okBtn","index:=0")   
    End If
    
End Function 



'This funciton clicks OK on the milestone difference dialog
'@code
'    BIZ_Loan_MilestoneDiffDialog(intSec)
'@endcode
'@param intSec wait for the number of seconds for the dailog to appear

Function BIZ_Loan_MilestoneDiffDialog(intSec)

    If SwfWindow("swfname:=MilestoneLogDiff").Exist(intSec) Then
       SwfWindow("swfname:=MilestoneLogDiff").SwfButton("swfname:=btnSelect","index:=0").Click
       
       If SwfWindow("swfname:=LogChangeConfirmation").Exist(10) Then
          GUI_SwfButton_Click SwfWindow("swfname:=LogChangeConfirmation").SwfButton("swfname:=btnYes","index:=0")
       End If   
       
    End If   
	
End Function 



'This function is for exit the opened loan 
'@code
'    BIZ_Loan_Exit(boolSave)
'@endcode
'@param boolSave - Decide whether to save the change when exit

Function BIZ_Loan_Exit(boolSave)

   	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=closeBtn")
	
	If SwfWindow("swfname:=MainForm").Dialog("index:=0").Exist(55) Then	   
	   If boolSave Then
		  If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FailedReviewDialog").SwfButton("swfname:=btnClose").Exist(5) Then 
			SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FailedReviewDialog").SwfButton("swfname:=btnClose").Click
		  End If
          GUI_Dialog_Encompass_YesX 25, "save the changes" 
		  intCount = 0		  
		  Do
			If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").Exist(5) Then
			   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
			End If
			
			GUI_Dialog_Encompass_NoX 5, "notify borrowers" 
			BIZ_Loan_EmailCheckDialog 5, True
			BIZ_Loan_MilestoneDiffDialog(30)            
			GUI_Dialog_Encompass_OKX 5, "" 
			GUI_Dialog_Encompass_NoX 5, ""
			If SwfWindow("Swfname:=MainForm").SwfWindow("swfname:=FailedReviewDialog").Exist(5) Then
				GUI_SwfButton_Click SwfWindow("Swfname:=MainForm").SwfWindow("swfname:=FailedReviewDialog").SwfButton("swfname:=btnClose")
			End If
			intCount = intCount + 1
				
			If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfComboBox("swfname:=cboFolder","index:=0").Exist(5) or intCount > 40 Then
			   BIZ_Nav_SelectPipelineTab
			   Exit Do
			End If			
		  Loop	
	   Else
          GUI_Dialog_Encompass_NoX 5, "" 		
          GUI_Dialog_Encompass_NoX 5, "notify borrowers" 
	   End If	   
	End If

	If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").Dialog("title:=Encompass","Index:=0").WinButton("title:=OK","Index:=0"),5) Then
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Dialog("title:=Encompass","Index:=0").WinButton("title:=OK","Index:=0")
    End If
	Wait  2
End Function



'This function is for Open loan with loan number 
'@code
'    BIZ_Loan_OpenByLoanNumber(strLoanNumber)
'@endcode
'@param strLoanNumber - Loan number

Function BIZ_Loan_OpenByLoanNumber(strLoanNumber)

    'BIZ_Loan_OpenLoanByColFieldValue "Loan Number",strLoanNumber
	BIZ_Loan_SearchLoanByColumnValue "Loan Number",strLoanNumber
	
End Function



'This function is for In Milestones, assign a Loan Opener, finish the Qualification Milestone & assign the file to a Processor 
'@code
'    BIZ_Loan_FinishQualificationMilestone_AssignProcessor(strLoanOpener, strLoanProcessor)
'@endcode
'@param strLoanOpener - Loan Opener name
'@param strLoanProcessor - Loan processor name

Function BIZ_Loan_FinishQualificationMilestone_AssignProcessor(strLoanOpener, strLoanProcessor)

    FRM_Logger_ReportInfoEvent "Loan Milestones", "Finish the Qualification Milestone and assign the file to a Processor '"&strLoanProcessor&"'", Null
	
	BIZ_Nav_SelectLoanTab()
	BIZ_Loan_AssignOpener "Qualification", strLoanOpener

	'================= Finish Qualification milestone ================  
    'SwfWindow("EncompassMenu").SwfCheckBox("Finished").Set "ON"
	GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckbox("swfname:=checkBoxFinished"), "ON"
	BIZ_Loan_AssignProcessor "Processing", strLoanProcessor
	BIZ_Loan_Save()
	
End Function



'This function is for Search loan and Display in GridRow with column field value 
'@code
'    BIZ_Loan_SearchLoanByColumnValueDisplayLoanInGrid(strColTitle,strColValue)
'@endcode
'@param strColTitle - column name
'@param strColValue - column field value
'@Pre-requisite Pipeline View and Loan Folder must be selected before calling this procedure
'@Pre-requisite Coulumn must exist on the view

Function BIZ_Loan_SearchLoanByColumnValueDisplayLoanInGrid(strColTitle,strColValue)

    FRM_Logger_ReportInfoEvent "Open Loan", "Opening loan By " & strColTitle &  " '"&strColValue&"'", Null
    Dim objLoanList, objColumns, intColIndex, intRowCount
    
    Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	
	Set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intColIndex = 0
	intRowCount = objColumns.Object.Items.Count
	
	For i = 0 To (intRowCount - 1)
	
		If objColumns.Object.Items.Item(i).Checked AND objColumns.Object.Items.Item(i).Text = strColTitle Then
		objColumns.Object.Items.Item(i).Selected=True
		   Exit For
		ElseIf objColumns.Object.Items.Item(i).Checked Then
		   objColumns.Object.Items.Item(i).Checked = False
		   intColIndex = intColIndex + 1
		End If
		
	Next
	
	Set objMoveup=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=btnMoveUp")
	
	If objMoveup.GetROProperty("enabled") Then
		objMoveup.Click
	End If
		

		
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=0").Set ""&strColValue&""
	UTIL_Win_SendKey "{ENTER}"
	
	Set objLoanList = Nothing
	Set objColumns  = Nothing
End Function 



'This function assigns the loan file to a Loan Opener
'@code
'    BIZ_Loan_AssignOpener(strWorkSheetName, strLoanOpener)
'@endcode
'@param strWorkSheetName - Worksheet name
'@param strLoanOpener - Loan Opener name

Function BIZ_Loan_AssignOpener(strWorkSheetName, strLoanOpener)
	
	Dim objAvailableUsers, objScrollBar, strEdit
	BIZ_Nav_SelectLoanTab()
	BIZ_Nav_Loan_LogTab_SelectWorksheet strWorkSheetName
	
	strEdit = Replace(SwfWindow("swfname:=MainForm").SwfLabel("text:=Loan Opener","index:=0").GetROProperty("swfname"),"label","")	
	'SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxCurrentLA").Click
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBox"&strEdit).Click
	
	Set objAvailableUsers = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=.*SelectionDialog").SwfObject("swfname:=gvUsers")
	Set objScrollBar = objAvailableUsers.SwfScrollBar("swfname:=vPanelScrollBar")
	
	If GUI_List_TextExists(objAvailableUsers, "User ID", strLoanOpener) Then
	   GUI_List_ClickRow objAvailableUsers, objScrollBar, 0, strLoanOpener, True, False, False, "Single"
	Else
	   GUI_List_ClickRow objAvailableUsers, objScrollBar, 0, strLoanProcessor, True, False, False, "Single"
	End If
	
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=.*SelectionDialog").SwfButton("swfname:=okBtn").Click	
	
	Set objAvailableUsers = Nothing
	Set objScrollBar      = Nothing
	
End Function



'This function assigns the loan file to a Loan Processor 
'@code
'    BIZ_Loan_AssignProcessor(strWorkSheetName, strLoanProcessor)
'@endcode
'@param strWorkSheetName - Worksheet name
'@param strLoanProcessor - Loan processor name

Function BIZ_Loan_AssignProcessor(strWorkSheetName, strLoanProcessor)

	BIZ_AlertsAndLog_ClickOnRecord "Log", strWorkSheetName	
	Dim objAvailableUsers, objScrollBar
	Set objAvailableUsers = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=.*SelectionDialog").SwfObject("swfname:=gvUsers")
	Set objScrollBar      = objAvailableUsers.SwfScrollBar("swfname:=vPanelScrollBar")
	
	If GUI_Object_IsEnabled( SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxNextLA") ) Then
	   SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxNextLA").Click
       GUI_List_ClickRow objAvailableUsers, objScrollBar, 0, strLoanProcessor, True, False, False, "Single"
	   SwfWindow("swfname:=MainForm").SwfWindow("swfname:=.*SelectionDialog").SwfButton("swfname:=okBtn").Click			
	End If
		
	Set objAvailableUsers = Nothing
	Set objScrollBar      = Nothing
	
End Function



'This function is for In Milestones, finish the Specific Milestone & assign the file to a Specific User
'@code
'    BIZ_Loan_FinishMilestone_AssignUser(strMilestone, strLoanUser)
'@endcode
'@param strMilestone -  the Specific Milestone
'@param strLoanUser - Loan User name

Function BIZ_Loan_FinishMilestone_AssignUser(strMilestone, strLoanUser)

    FRM_Logger_ReportInfoEvent "Loan Milestones", "Finish the '"&strMilestone&"' Milestone and assign the file to a User '"&strLoanUser&"'", Null
	
	BIZ_Nav_SelectLoanTab()
	Dim objProcessorSelectionDialog, objuserAvaliable, objSelectUserScrollBar
    	
	'Scroll down the log tab and make the milestone visible
	BIZ_AlertsAndLog_ClickOnRecord "Log", strMilestone
	
	BIZ_Documents_SelectCheckBoxesOfAllDocuments(strMilestone)
	'BIZ_Document_AttachMandatoryDocuments(strMilestone)
	BIZ_Documents_SelectCheckBoxesOfAllTasks strMilestone
	
	'Assign next user for milestone
	BIZ_Loan_AssignUser "NextUser", strMilestone, strLoanUser
	
	GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=checkBoxFinished"),"ON"	
	If(SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=checkBoxFinished").GetROProperty("Value") = "OFF") Then 
		GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=checkBoxFinished"),"ON"	
	End If
	GUI_Dialog_Encompass_OKX 5, ""
End Function



'This function is for retreive loan number value form the page and save it in the Ran Time file 
'@code
'    BIZ_Loan_SaveLoanNumber()
'@endcode

Function BIZ_Loan_SaveLoanNumber()

	Dim strTabSelected
	strTabSelected = SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl.*", "index:=0").GetSelection()
	
	If (InStr(strTabSelected, "Loan") = 0) Then 
	    'Go to Loan Page
	    BIZ_Nav_SelectLoanTab()
	End If
	
	strLoanNo = SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblLoanNumber").GetROProperty("text")	
	FRM_RT_SetPropValue g_FRM_Prop_LoanNo, strLoanNo
	FRM_Logger_ReportInfoEvent "Save Loan Number", strLoanNo, Null
	
End Function



'This function is for get the loan number in the Ran Time file 
'@code
'    BIZ_Loan_GetLoanNumber()
'@endcode

Function BIZ_Loan_GetLoanNumber()

	BIZ_Loan_GetLoanNumber = FRM_RT_GetPropValue(g_FRM_Prop_LoanNo, True)
	
End Function



'This function is for Open loan with column field value 
'@code
'    BIZ_Loan_OpenLoanByColFieldValue(strColTitle,strColValue)
'@endcode
'@param strColTitle - column name
'@param strColValue - column field value
'@Pre-requisite  Pipeline View and Loan Folder must be selected before calling this procedure
'@Pre-requisite Coulumn must exist on the view

Function BIZ_Loan_OpenLoanByColFieldValue(strColTitle,strColValue)

    FRM_Logger_ReportInfoEvent "Open Loan", "Opening loan by " & strColTitle &  " '"&strColValue&"'", Null
    
	Dim objLoanList, objColumns, intColIndex, intRowCount
	Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	Set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intColIndex = 0
	intRowCount = objColumns.Object.Items.Count
	
	For i = 0 To (intRowCount - 1)		
		
		If objColumns.Object.Items.Item(i).Checked AND objColumns.Object.Items.Item(i).Text = strColTitle Then
		   Exit For
		ElseIf objColumns.Object.Items.Item(i).Checked Then
			   objColumns.Object.Items.Item(i).Checked = false
			
		End If
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:="&(intColIndex)).Set ""&strColValue&""
	UTIL_Win_SendKey "{ENTER}"
'	objLoanList.DblClick 300, 50
	GUI_List_ActOnRow objLoanList,0, True, True, False, "Double"
	
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=UnlockLoanDialog").SwfButton("swfname:=btnUnlock", "index:=0").Exist(10) Then
	   SwfWindow("swfname:=MainForm").SwfWindow("swfname:=UnlockLoanDialog").SwfButton("swfname:=btnUnlock", "index:=0").Click
	End If	
	Set objLoanList = Nothing
	'	Dim avaliableLoan
	'	Set avaliableLoan=SwfWindow("EncompassMenu").SwfObject("gvLoans")	
	'	If SwfWindow("EncompassMenu").Dialog("Load Settings").Exist(5) Then
	'		GUI_WinButton_Click SwfWindow("EncompassMenu").Dialog("Load Settings").WinButton("OK")
	'	End If
	'	If SwfWindow("EncompassMenu").SwfWindow("Unlock loan?").Exist(5) Then
	'		GUI_SwfButton_Click SwfWindow("EncompassMenu").SwfWindow("Unlock loan?").SwfButton("Unlock")
	'	End If
	'	If  SwfWindow("EncompassMenu").Dialog("Encompass360").Exist(5) Then
	'		GUI_WinButton_Click SwfWindow("EncompassMenu").Dialog("Encompass360").WinButton("Yes")
	'	End If
	
	'	GUI_Object_WaitTillVisibleX SwfWindow("EncompassMenu").SwfTab("toolsFormsTabControl"),120
End Function



'This function is for Search loan with column field value 
'@code
'    BIZ_Loan_SearchLoanByColumnValue(strColTitle,strColValue)
'@endcode
'@param strColTitle - column name
'@param strColValue - column field value
'@Pre-requisite  Pipeline View and Loan Folder must be selected before calling this procedure
'@Pre-requisite Coulumn must exist on the view

Function BIZ_Loan_SearchLoanByColumnValue(strColTitle,strColValue)

    FRM_Logger_ReportInfoEvent "Open Loan", "Opening loan by " & strColTitle &  " '"&strColValue&"'", Null
    Dim objLoanList, objColumns, intColIndex, intRowCount,chkFlag
    Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intColIndex = 0
	intRowCount = objColumns.Object.Items.Count
	
	'Changed by Savik
	
	For i = 0 To (intRowCount - 1)
	
		If objColumns.Object.Items.Item(i).Checked AND objColumns.Object.Items.Item(i).Text = strColTitle Then
			
		   Exit For
		ElseIf objColumns.Object.Items.Item(i).Text=strColTitle Then
		 		objColumns.Object.Items.Item(i).Checked = True
		ElseIf objColumns.Object.Items.Item(i).Checked Then
			   objColumns.Object.Items.Item(i).Checked = False
			   intColIndex = intColIndex + 1
		End If
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=0").Set ""&strColValue&""
	UTIL_Win_SendKey "{ENTER}"
	objLoanList.DblClick 300, 50
	
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=UnlockLoanDialog").SwfButton("swfname:=btnUnlock", "index:=0").Exist(10) Then
	   SwfWindow("swfname:=MainForm").SwfWindow("swfname:=UnlockLoanDialog").SwfButton("swfname:=btnUnlock", "index:=0").Click
	End If
	Set objLoanList = Nothing
	set objColumns  = Nothing
End Function




'This function is used to switch RESPATILA form version for a loan.
'@code
'    BIZ_Loan_SwitchFormVersion(strFormVersion)
'@endcode
'@param strFormVersion - RESPATILA Form Version(Old GFE and HUD-1/RESPA 2010 GFE and HUD-1/RESPA-TILA 2015 LE and CD)

Function BIZ_Loan_SwitchFormVersion(strFormVersion)

    FRM_Logger_ReportInfoEvent "Switch Form Version", "Switch the loan forms version to " & strFormVersion & "", Null
    
    Dim objMianMenu
    Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
    	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Forms"		
    GUI_SwfToolbar_Select objMianMenu, "Forms;RESPA-TILA Form Version;"&strFormVersion&""
	
    Set objMianMenu = Nothing
    
End Function



'This function is for Click on the Print button for opened form
'@code
'    BIZ_Loan_Print()
'@endcode

Function BIZ_Loan_Print()
	
	FRM_Logger_ReportInfoEvent "BIZ_Loan_Print", "Clicking the print button", Null
	
	GUI_Object_WaitTillEnabledX SwfWindow("swfname:=MainForm").SwfObject("swfname:=printBtn"), 30
    SwfWindow("swfname:=MainForm").SwfObject("swfname:=printBtn").Click
	
End Function



'This function is for Find and Highlite/Select loan in Pipeline 
'@code
'    BIZ_Loan_SelectLoanByColFieldValueInPiplineView(strColTitle,strColValue)
'@endcode
'@param strColTitle - Search Column Name
'@param strColValue - Search field value

Function BIZ_Loan_SelectLoanByColFieldValueInPiplineView(strColTitle,strColValue)

    FRM_Logger_ReportInfoEvent "Select Loan", "Select loan by " & strColTitle &  " '"&strColValue&"'", Null   
	Dim objLoanList
    Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	intColIndex = GUI_List_GetColumnIndexByTitle(objLoanList, strColTitle) 
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=PipelineScreen").SwfEdit("swfname:=txtBox","index:="&(intColIndex)).Set ""&strColValue&""
	UTIL_Win_SendKey "{ENTER}"
	objLoanList.Click 300, 50
	Set objLoanList = Nothing
	
End Function



'This function is for Apply Template To New Loan 
'@code
'    BIZ_Loan_ApplyTemplateToNewLoan(strTemplateName)
'@endcode
'@param strTemplateName name of Loan Template

Function BIZ_Loan_ApplyTemplateToNewLoan(strTemplateName)
	
	FRM_Logger_ReportInfoEvent "Add New Loan", "Apply Template To New Loan", Null
	Dim objWndMainForm, objWndNewLoan, objLoanTemplateList, objScrollBar 
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objWndNewLoan = objWndMainForm.SwfWindow("text:=New Loan","index:=0") 
	Set objLoanTemplateList = objWndNewLoan.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndNewLoan.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_SwfObject_Click objWndMainForm.SwfObject("swfname:=btnNew", "index:=0")
	GUI_Object_WaitTillVisible objWndNewLoan.SwfButton("swfname:=btnSelect","index:=0")
	GUI_List_ClickRow objLoanTemplateList, objScrollBar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfButton_Click objWndNewLoan.SwfButton("swfname:=btnSelect", "index:=0")
	
	If SwfWindow("swfname:=MainForm").Dialog("index:=0").Exist(20) Then
	   GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("index:=0","index:=0").WinButton("text:=&No","index:=0")
	End If
	
	If SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Exist(10) Then
	   GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("text:=&No","index:=0")
	End If
	
	Set objWndMainForm      = nothing 
	Set objWndNewLoan       = nothing 
	Set objLoanTemplateList = nothing 
	Set objScrollBar        = nothing 
	
End Function



'This function is for Apply Loan Template Set To current loan 
'@code
'    BIZ_Loan_AppendLoanTemplateSet(strLoanTemplateSet)
'@endcode
'@param strLoanTemplateSet name of Loan Template Set

Function BIZ_Loan_AppendLoanTemplateSet(strLoanTemplateSet)
     
     FRM_Logger_ReportInfoEvent "Append Loan Template Set", "Loan Template Set to current loan", Null
     
     Dim objMianMenu, objWndMainForm, objWndSelectDataTemplate, objDataTemplateList, objScrollBar
     Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
         
     GUI_SwfToolbar_ShowDropdown objMianMenu,"Loan"        
     GUI_SwfToolbar_Select objMianMenu, "Loan;Apply Loan Template Set..."
     
     Set objWndMainForm = SwfWindow("swfname:=MainForm")
     Set objWndSelectLoanTemplate = objWndMainForm.SwfWindow("text:=Apply Loan Template","index:=0") 
     Set objLoanemplateSetList = objWndSelectLoanTemplate.SwfObject("swfname:=gvDirectory")
     Set objScrollBar = objWndSelectLoanTemplate.SwfScrollBar("swfname:=vPanelScrollBar")
     
     GUI_Object_WaitTillVisible objWndSelectLoanTemplate.SwfButton("swfname:=btnSelect","index:=0")
     GUI_List_ClickRow objLoanemplateSetList, objScrollBar, "Name", strLoanTemplateSet, True, False, False, "Single"
     GUI_SwfButton_Click objWndSelectLoanTemplate.SwfButton("swfname:=btnSelect", "index:=0")
     
     Set objWndMainForm           = Nothing 
     Set objWndSelectDataTemplate = Nothing 
     Set objDataTemplateList      = Nothing 
     Set objScrollBar             = Nothing 
     Set objMianMenu              = Nothing
     
End Function



'This function is for Apply Loan Program To New Loan 
'@code
'    BIZ_Loan_ApplyLoanProgramToNewLoan(strLoanProgramName, checkboxStatus)
'@endcode
'@param strLoanProgramName name of Loan Program
'@param checkboxStatus if the checkbox "Only apply Loan Program Template fields that contain a value" checked or not

Function BIZ_Loan_ApplyLoanProgramToNewLoan(strLoanProgramName, checkboxStatus)
	
	FRM_Logger_ReportInfoEvent "Add New Loan", "Apply Loan Program To New Loan", Null
	Dim objWndMainForm, objWndLoanProgramSelect, objLoanProgramList, objScrollBar
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objWndLoanProgramSelect = objWndMainForm.SwfWindow("swfname:=LoanProgramSelect") 
	Set objLoanProgramList = objWndLoanProgramSelect.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndLoanProgramSelect.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_SwfCheckbox_Set objWndLoanProgramSelect.SwfCheckBox("swfname:=chkAppendLP"), checkboxStatus
	GUI_List_ClickRow objLoanProgramList, objScrollBar, "Name", strLoanProgramName, True, False, False, "Single"
	GUI_SwfButton_Click objWndLoanProgramSelect.SwfButton("swfname:=selectBtn")
	
	Set objWndMainForm          = Nothing 
	Set objWndLoanProgramSelect = Nothing 
	Set objLoanProgramList      = Nothing 
	Set objScrollBar            = Nothing 
	
End Function



'This function is for add borrower pairs
'@code
'    BIZ_Loan_AddBorrowerPairs(strRowIDBo, strRowIDCoBo, intPairNum)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param intPairNum number of borrower pairs you want added

Function BIZ_Loan_AddBorrowerPairs(strRowIDBo, strRowIDCoBo, intPairNum)
	
	FRM_Logger_ReportInfoEvent "Add borrower pair", "Add "&intPairNum&"pairs of borrower", Null
	Dim objToolBar
	Set objToolBar = SwfWindow("swfname:=MainForm").SwfToolBar("swfname:=mainMenu")
	
	For i = 0 To intPairNum - 1 
		GUI_SwfToolbar_ShowDropdown objToolBar,"Loan"		
		GUI_SwfToolbar_Select objToolBar, "Loan;Add Borrower Pair"
		BIZ_BorrowerSummaryOrigination_SetBorrower strRowIDBo
		BIZ_BorrowerSummaryOrigination_SetCoBorrower strRowIDCoBo
	Next
	
	Set objToolBar = Nothing 
	
End Function



'This function is for Append Data Template To current loan 
'@code
'    BIZ_Loan_AppendDataTemplate(strTemplateName)
'@endcode
'@param strTemplateName name of Loan Template

Function BIZ_Loan_AppendDataTemplate(strTemplateName)
	
	FRM_Logger_ReportInfoEvent "Append Data Template", "Append Data Template to current loan", Null
    
    Dim objMianMenu, objWndMainForm, objWndSelectDataTemplate, objDataTemplateList, objScrollBar
    Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
    	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Loan"		
    GUI_SwfToolbar_Select objMianMenu, "Loan;Append Data Template"
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objWndSelectDataTemplate = objWndMainForm.SwfWindow("text:=Select Data Template","index:=0") 
	Set objDataTemplateList = objWndSelectDataTemplate.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndSelectDataTemplate.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillVisible objWndSelectDataTemplate.SwfButton("swfname:=selectBtn","index:=0")
	GUI_List_ClickRow objDataTemplateList, objScrollBar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfButton_Click objWndSelectDataTemplate.SwfButton("swfname:=selectBtn", "index:=0")
	
	Set objWndMainForm           = Nothing 
	Set objWndSelectDataTemplate = Nothing 
	Set objDataTemplateList      = Nothing 
	Set objScrollBar             = Nothing 
    Set objMianMenu              = Nothing
    
End Function



'This function is for Apply Closing Cost Template To current loan 
'@code
'    BIZ_Loan_ApplyClosingCostTemplate(strTemplateName)
'@endcode
'@param strTemplateName name of Loan Template

Function BIZ_Loan_ApplyClosingCostTemplate(strTemplateName)
	
	FRM_Logger_ReportInfoEvent "Apply Closing Cost Template", "Apply Closing Cost Template to current loan", Null
    
    Dim objMianMenu, objWndMainForm, objWndSelectClosingCostTemplate, objClosingCostTemplateList, objScrollBar
    Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
    	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Loan"		
    GUI_SwfToolbar_Select objMianMenu, "Loan;Apply Closing Cost Template..."
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objWndSelectClosingCostTemplate = objWndMainForm.SwfWindow("text:=Select Closing Cost Template","index:=0") 
	Set objClosingCostTemplateList = objWndSelectClosingCostTemplate.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndSelectClosingCostTemplate.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillVisible objWndSelectClosingCostTemplate.SwfButton("swfname:=selectBtn","index:=0")
	GUI_List_ClickRow objClosingCostTemplateList, objScrollBar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfButton_Click objWndSelectClosingCostTemplate.SwfButton("swfname:=selectBtn", "index:=0")
	
	Set objWndMainForm                  = Nothing 
	Set objWndSelectClosingCostTemplate = Nothing 
	Set objClosingCostTemplateList      = Nothing 
	Set objScrollBar                    = Nothing 
    Set objMianMenu                     = Nothing
    
End Function



'This function is for delete loan in pipeline
'@code
'    BIZ_Loan_DeleteLoan()     
'@endcode
	
Function BIZ_Loan_DeleteLoan()

    FRM_Logger_ReportInfoEvent "Delete Loan", "Delete loan in pipeline", Null
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnDelete", "index:=0")
	If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ConfirmDialog").SwfButton("swfname:=yesButton"), 40)) Then 
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ConfirmDialog").SwfButton("swfname:=yesButton")
	End If
    
End Function



'This function is used to click on Duplicate Loan Check 
'@code
'    BIZ_Loan_DuplicateLoanCheck()
'@endcode

Function BIZ_Loan_DuplicateLoanCheck()

    FRM_Logger_ReportInfoEvent "Duplicate Loan Check ", "Click on 'DuplicateLoanCheck'", Null
    
    Dim objMianMenu
    Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
    	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Loan"		
    GUI_SwfToolbar_Select objMianMenu, "Loan;Duplicate Loan Check"
	
    Set objMianMenu = Nothing
    
End Function



'This function is used to click "Accept Files" button for the Milestone which name is strMilestone
'@code
'    BIZ_Loan_AcceptFiles(strMilestone,strNextLoanUser)
'@endcode
'@Param strMilestone The Milestone Name which we will open to accept files
'@Param strNextLoanUser The Next Milestone User ID

Function BIZ_Loan_AcceptFiles(strMilestone,strNextLoanUser)

	FRM_Logger_ReportInfoEvent "Accept Files", "Click 'Accept File' button on the Log->'"&strConditionName&"' Worksheet", Null	

    BIZ_Nav_SelectLoanTab()
   
    Dim objProcessorSelectionDialog, objuserAvaliable, objSelectUserScrollBar
    
	BIZ_AlertsAndLog_ClickOnRecord "Log", strMilestone
	
	If UTIL_String_IsEmpty(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxNextLA"),"text")) Then
	   GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxNextLA")
	   BIZ_Loan_SelectMilestoneUser(strNextLoanUser)
	End If
	
	If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfButton("swfname:=acceptBtn"), 10)) Then 
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=acceptBtn")
	End If
	If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Static("text:=The milestone alert has been cleared."), 90))Then 
	   FRM_Logger_ReportPassEvent "Accept Files", strMilestone & " Milestone Alert is cleared", Null	
	   GUI_Dialog_Encompass_OKX 10, "The milestone alert has been cleared"
	End If
	
End Function



'This function is used to complete Qualification worksheet and Make Loan Estimate Document and Finished checkboxes 'Checked'
'@code
'    BIZ_Loan_CompleteQualification()
'@endcode

Function BIZ_Loan_CompleteQualification()

	FRM_Logger_ReportInfoEvent "Complete Qualification", "Make Loan Estimate Document and Finished checkboxes 'Checked'", Null
	BIZ_AlertsAndLog_ClickOnRecord "Log","Qualification"
	Dim objMain, objList
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
	Set objList = objMain.SwfObject("swfname:=gridViewDocs")
	
	GUI_List_LocateAndSetCheckBox objList ,"Loan Estimate",1,1,True
	objMain.SwfCheckBox("swfname:=checkBoxFinished","index:=0").Set "ON"
	Set objMain = Nothing
	Set objList = Nothing
	
End Function



'This function is used to set current user for the loan worksheet/milestone
'@code
'    BIZ_Loan_AssignCurrentUser(strWorkSheetName, strUser)
'@endcode
'@Param strWorkSheetName - The Milestone Name 
'@Param strUser -  The Current Milestone User ID

Function BIZ_Loan_AssignCurrentUser(strWorkSheetName, strUser)

	Dim objAvailableUsers,objScrollBar
    FRM_Logger_ReportInfoEvent "Set current user on worksheet - " & strWorkSheetName, strUser & " -  Set as current user", Null
	BIZ_Nav_SelectLoanTab()
	BIZ_Nav_Loan_LogTab_SelectWorksheet strWorkSheetName
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=panelCurrent").SwfObject("swfname:=pictureBoxCurrent.*").Click
	
	Set objAvailableUsers = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=.*SelectionDialog").SwfObject("swfname:=gvUsers")
	Set objScrollBar = objAvailableUsers.SwfScrollBar("swfname:=vPanelScrollBar")
	
	If GUI_List_TextExists(objAvailableUsers, "User ID", strUser) Then
	   GUI_List_ClickRow objAvailableUsers, objScrollBar, 0, strUser, True, False, False, "Single"
	Else
	   strUser = "admin" 
	   GUI_List_ClickRow objAvailableUsers, objScrollBar, 0, strUser, True, False, False, "Single"
	End If
	
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=.*SelectionDialog").SwfButton("swfname:=okBtn").Click	
	
	Set objAvailableUsers = Nothing
	Set objScrollBar      = Nothing
	
End Function



'This function is used to set next user for the loan worksheet/milestone
'@code
'   BIZ_Loan_AssignNextUser(strWorkSheetName, strUser)
'@endcode
'@Param strWorkSheetName - The Milestone Name 
'@Param strUser -  The next Milestone User ID

Function BIZ_Loan_AssignNextUser(strWorkSheetName, strUser)

    FRM_Logger_ReportInfoEvent "Set next user on worksheet - " & strWorkSheetName, strUser & " -  Set as next user", Null
    Dim objAvailableUsers, objScrollBar
	BIZ_Nav_SelectLoanTab()
	BIZ_Nav_Loan_LogTab_SelectWorksheet strWorkSheetName
	
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=panelNext").SwfObject("swfname:=pictureBoxNext.*").Click
	Set objAvailableUsers = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=.*SelectionDialog").SwfObject("swfname:=gvUsers")
	Set objScrollBar = objAvailableUsers.SwfScrollBar("swfname:=vPanelScrollBar")
	
	If GUI_List_TextExists(objAvailableUsers, "User ID", strUser) Then
	   GUI_List_ClickRow objAvailableUsers, objScrollBar, 0, strUser, True, False, False, "Single"
	Else
	   strUser = "admin" 
	   GUI_List_ClickRow objAvailableUsers, objScrollBar, 0, strUser, True, False, False, "Single"
	End If
	
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=.*SelectionDialog").SwfButton("swfname:=okBtn").Click	
	
	Set objAvailableUsers = Nothing
	Set objScrollBar      = Nothing
	
End Function	


   
'This function is used to complete Processing worksheet and Make Loan 1003-URLA and Finished checkboxes 'Checked'
'@code
'    BIZ_Loan_CompleteProcessing()
'@endcode

Function BIZ_Loan_CompleteProcessing()

	FRM_Logger_ReportInfoEvent "Complete Processing", "Make 1003-URLA document and Finished checkboxes 'Checked'", Null
	Dim objMain, objList
	BIZ_Nav_Loan_LogTab_SelectWorksheet "Processing"
	
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
	Set objList = objMain.SwfObject("swfname:=gridViewDocs")
	
	GUI_List_LocateAndSetCheckBox objList ,"1003 - URLA",1,1,True
	objMain.SwfCheckBox("swfname:=checkBoxFinished","index:=0").Set "ON"
	
End Function



'This function is used to assign current user to the milestone
'@code
'    BIZ_Loan_AssignUser(strUserType, strMilestone, strLoanUser)
'@endcode
'@Param strUserType - Current User, Previous User, Next User  
'@Param strMilestone - Name of the Milestone 
'@Param strLoanUser - Name of the Loan User 

Function BIZ_Loan_AssignUser(strUserType, strMilestone, strLoanUser)

    FRM_Logger_ReportInfoEvent "Loan Milestones", " Milestone and assign the file to a User '"&strLoanUser&"'", Null
	
	BIZ_Nav_SelectLoanTab()
	Dim objProcessorSelectionDialog, objuserAvaliable, objSelectUserScrollBar
    
	BIZ_AlertsAndLog_ClickOnRecord "Log", strMilestone
	
	If (InStr(strUserType, "CurrentUser") > 0) Then
	
	   If UTIL_String_IsEmpty(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxCurrentLA"),"text")) Then
		  GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxCurrentLA")
		  BIZ_Loan_SelectMilestoneUser(strLoanUser)
		  Wait g_TinyWaitSmall
		  strLabel = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfLabel("swfname:=labelCurrentLA"),"text")
		  strDisplayedLp = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxCurrentLA"), "text")
			
		  If (InStr(strDisplayedLp, strLoanUser) > 0) Then 
			  FRM_Logger_ReportPassEvent "Assign User", strLoanUser & " is selected as "&strLabel, Null
		  End If
		  
	   end If
	end If
	
	If (InStr(strUserType, "PreviousUser") > 0) Then 
	   
	   If UTIL_String_IsEmpty(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxPreviousLA"),"text")) Then
		  GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxPreviousLA")
		  BIZ_Loan_SelectMilestoneUser(strLoanUser)
		  Wait g_TinyWaitSmall
		  strLabel = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfLabel("swfname:=labelPreviousLA"),"text")
		  strDisplayedLp = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxPreviousLA"), "text")
		  
		  If (InStr(strDisplayedLp, strLoanUser) > 0) Then 
		     FRM_Logger_ReportPassEvent "Assign User", strLoanUser & " is selected as "&strLabel, Null
		  End If
	   end If
	end If
	
	If (InStr(strUserType, "NextUser") > 0) Then 
	
	   If UTIL_String_IsEmpty(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxNextLA"),"text")) Then
		  GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxNextLA")
		  BIZ_Loan_SelectMilestoneUser(strLoanUser)
		  Wait g_TinyWaitSmall
		  strLabel = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfLabel("swfname:=labelNextLA"),"text")
		  strDisplayedLp = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxNextLA"), "text")
		  
		  If (InStr(strDisplayedLp, strLoanUser) > 0) Then 
		      FRM_Logger_ReportPassEvent "Assign User", strLoanUser & " is selected as "&strLabel, Null
		  End If
	   end If
	end If

End Function



'This function is used to assign current user to the milestone
'@code
'    BIZ_Loan_SelectMilestoneUser(strLoanUser)
'@endcode
'@Param strLoanUser - Name of the Loan User 

Function BIZ_Loan_SelectMilestoneUser(strLoanUser)

	Dim objProcessorSelectionDialog, objuserAvaliable, objSelectUserScrollBar
	
	Set objProcessorSelectionDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ProcessorSelectionDialog")
    Set objuserAvaliable = objProcessorSelectionDialog.SwfObject("swfname:=gvUsers")
	Set objSelectUserScrollBar = objProcessorSelectionDialog.SwfScrollBar("swfname:=vPanelScrollBar")
    
    If (GUI_Object_IsExistX(objuserAvaliable,3))Then 
	   GUI_List_ClickRow objuserAvaliable, objSelectUserScrollBar, 0, strLoanUser, True, False, False, "Double"
	   Wait g_TinyWaitSmall
		
	   Set objConflictDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ProcessorSelectionDialog").SwfWindow("swfname:=LoanTeamMemberConflictDialog")
		
	   If (GUI_Object_IsExistX(objConflictDialog, 100)) Then 
		  GUI_SwfButton_Click objConflictDialog.SwfButton("swfname:=btnOk")
		  Wait g_TinyWaitSmall
		  
		  If(GUI_Object_IsExist(objConflictDialog.SwfButton("swfname:=btnOk"))) Then
			 GUI_SwfButton_Click objConflictDialog.SwfButton("swfname:=btnOk")
			 Wait g_TinyWaitSmall
		  End If
	   Else
	      If (GUI_Object_IsExistX(objProcessorSelectionDialog.SwfButton("swfname:=okBtn"), 10)) Then 
		      GUI_SwfButton_Click objProcessorSelectionDialog.SwfButton("swfname:=okBtn")
		  End If
	   End If
	   
	Else
	   FRM_Logger_ReportFailEvent "Select Milestone User", "There are no users to select", Null
	End If
	
	Set objProcessorSelectionDialog = Nothing
	Set objuserAvaliable 			= Nothing
	Set objSelectUserScrollBar		= Nothing
	Set objConflictDialog 			= Nothing
	
End Function 



'This function is for Apply Template which is in a folder to New Loan 
'@code
'    BIZ_Loan_ApplyTemplateToNewLoanInFolder(strFolderPath, strTemplateName)
'@endcode
'@param strTemplateName name of Loan Template

Function BIZ_Loan_ApplyTemplateToNewLoanInFolder(strFolderPath, strTemplateName)
	
	FRM_Logger_ReportInfoEvent "Add New Loan", "Apply Template To New Loan", Null
	
	Dim objWndMainForm,objWndNewLoan,objLoanTemplateList,objScrollBar
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objNewLoanWdw = objWndMainForm.SwfWindow("swfname:=LoanTemplateSelectDialog")
	Set objWndNewLoan = objWndMainForm.SwfWindow("text:=New Loan","index:=0") 
	Set objLoanTemplateList = objWndNewLoan.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndNewLoan.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_SwfObject_Click objWndMainForm.SwfObject("swfname:=btnNew", "index:=0")
	GUI_Object_WaitTillVisible objWndNewLoan.SwfButton("swfname:=btnSelect","index:=0")
	strLoanFolderView = GUI_Object_GetPropertyValue(objNewLoanWdw.SwfCheckBox("swfname:=cmbBoxFolder"), "selection")
	
	If Util_String_isMatch(strLoanFolderView, "Public Loan Templates") Then
		GUI_List_ClickRow objLoanTemplateList, objScrollBar, "Name", "Companywide", True, False, False, "Double"
		wait 3
		GUI_List_ClickRow objLoanTemplateList, objScrollBar, "Name", strFolderPath, True, False, False, "Double"
		wait 3
	ElseIf Util_String_isMatch(strLoanFolderView, "Companywide") Then
		GUI_List_ClickRow objLoanTemplateList, objScrollBar, "Name", strFolderPath, True, False, False, "Double"
		wait 3
	End If
	GUI_List_ClickRow objLoanTemplateList, objScrollBar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfButton_Click objWndNewLoan.SwfButton("swfname:=btnSelect", "index:=0")
	
	Set objWndMainForm 		= Nothing 
	Set objWndNewLoan 		= Nothing 
	Set objLoanTemplateList = Nothing 
	Set objScrollBar 		= Nothing 
End Function


'Added as  a part of HMDA Template change in 181
'This function is for Apply Template which is in a folder to New Loan 
'@code
'    BIZ_Loan_ApplyTemplateToNewLoanInFolder(strFolderPath, strTemplateName)
'@endcode
'@param strTemplateName name of Loan Template

Function BIZ_Loan_ApplyTemplateToNewLoanInFolderHMDA(strFolderPath, strTemplateName)
	
	FRM_Logger_ReportInfoEvent "Add New Loan", "Apply New Loan", Null
	
	Dim objWndMainForm,objWndNewLoan,objLoanTemplateList,objScrollBar
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objNewLoanWdw = objWndMainForm.SwfWindow("swfname:=LoanTemplateSelectDialog")
	Set objWndNewLoan = objWndMainForm.SwfWindow("text:=New Loan","index:=0") 
	Set objLoanTemplateList = objWndNewLoan.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndNewLoan.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_SwfObject_Click objWndMainForm.SwfObject("swfname:=btnNew", "index:=0")
	GUI_SwfObject_Click objNewLoanWdw.SwfObject("swfname:=btnNew", "index:=0")
	
	Set objWndMainForm 		= Nothing 
	Set objWndNewLoan 		= Nothing 
	Set objLoanTemplateList = Nothing 
	Set objScrollBar 		= Nothing 
End Function




'This function is for scrolling down the log tab, until the given text is visible
'@code
'	BIZ_Loan_MakeMilestoneTextVisible(strMilestoneName)
'@endcode

Function BIZ_Loan_MakeMilestoneTextVisible(strMilestoneName)
	
	Dim intCount, boolRes, objMainView, objScrollBar, l, t, r, b
	Set objMainView = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLog")
	Set objScrollBar = objMainView.SwfScrollBar("swfname:=vPanelScrollBar")
	l=-1
	t=-1
	r=-1
	b=-1
	
	'Click on log tab
	GUI_SwfObject_ClickXY SwfWindow("swfname:=MainForm").SwfObject("swfname:=tabsLog"), 176, 14
	boolRes = False
	intCount = 0
	boolRes = objMainView.GetTextLocation(strMilestoneName, l, t,r, b)
	
	'Scroll through available milestone names
	While Not(boolRes) And intCount<30
		objScrollBar.NextLine
		boolRes = objMainView.GetTextLocation(strMilestoneName, l, t,r, b)
		intCount = intCount +1
	Wend
	
	Set objMainView = Nothing
	Set objScrollBar = Nothing
End Function



'This function is for Append Task Set To current loan 
'@code
'	BIZ_Loan_AppendTaskSet(strTemplateName)
'@endcode
'@param strTemplateName name of Loan Templat

Function BIZ_Loan_AppendTaskSet(strTemplateName)
	
	FRM_Logger_ReportInfoEvent "Append Task Set", "Append Task Set '"&strTemplateName&"' to current loan", Null
    
    Dim objMianMenu, objWndMainForm, objWndSelectTaskSet, objTaskSetList, objScrollBar
    Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
    	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Loan"		
    GUI_SwfToolbar_Select objMianMenu, "Loan;Append Task Set..."
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objWndSelectTaskSet = objWndMainForm.SwfWindow("text:=Select Task Set Template","index:=0") 
	Set objTaskSetList = objWndSelectTaskSet.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objTaskSetList.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillVisible objWndSelectTaskSet.SwfButton("swfname:=selectBtn","index:=0")
	GUI_List_ClickRow objTaskSetList, objScrollBar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfButton_Click objWndSelectTaskSet.SwfButton("swfname:=selectBtn", "index:=0")
	
	Set objWndMainForm      = Nothing 
	Set objWndSelectTaskSet = Nothing 
	Set objTaskSetList      = Nothing 
	Set objScrollBar        = Nothing 
    Set objMianMenu         = Nothing
    
End Function



'This function is for Append Document Set To current loan 
'@code
'	BIZ_Loan_AppendDocumentSet(strTemplateName)
'@endcode
'@param strTemplateName name of Loan Template

Function BIZ_Loan_AppendDocumentSet(strTemplateName)
	
	FRM_Logger_ReportInfoEvent "Append Document Set", "Append Document Set '"&strTemplateName&"' to current loan", Null
    
    Dim objMianMenu, objWndMainForm, objWndSelectDocumentSet, objDocumentSetList, objScrollBar
    Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
    	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Loan"		
    GUI_SwfToolbar_Select objMianMenu, "Loan;Append Document Set..."
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objWndSelectDocumentSet = objWndMainForm.SwfWindow("text:=Select Document Set Template","index:=0") 
	Set objDocumentSetList = objWndSelectDocumentSet.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndSelectDocumentSet.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillVisible objWndSelectDocumentSet.SwfButton("swfname:=selectBtn","index:=0")
	GUI_List_ClickRow objDocumentSetList, objScrollBar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfButton_Click objWndSelectDocumentSet.SwfButton("swfname:=selectBtn", "index:=0")
	
	Set objWndMainForm          = Nothing 
	Set objWndSelectDocumentSet = Nothing 
	Set objDocumentSetList      = Nothing 
	Set objScrollBar            = Nothing 
    Set objMianMenu             = Nothing
    
End Function



'This function is for Append InputForm Set To current loan 
'@code
'	BIZ_Loan_ApplyInputFormSet(strTemplateName)
'@endcode
'@param strTemplateName name of Loan Template

Function BIZ_Loan_ApplyInputFormSet(strTemplateName)
	
	FRM_Logger_ReportInfoEvent "Append input form Set", "Append input form'"&strTemplateName&"' Set to current loan", Null
    
    Dim objMianMenu, objWndMainForm, objWndSelectDocumentSet, objDocumentSetList, objScrollBar
    Set objMianMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
    	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Loan"		
    GUI_SwfToolbar_Select objMianMenu, "Loan;Apply Input Form Set Template..."
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objWndSelectDocumentSet = objWndMainForm.SwfWindow("text:=Select Input Form Set Template","index:=0") 
	Set objDocumentSetList = objWndSelectDocumentSet.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndSelectDocumentSet.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillVisible objWndSelectDocumentSet.SwfButton("swfname:=selectBtn","index:=0")
	GUI_List_ClickRow objDocumentSetList, objScrollBar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfButton_Click objWndSelectDocumentSet.SwfButton("swfname:=selectBtn", "index:=0")
	
	Set objWndMainForm          = Nothing 
	Set objWndSelectDocumentSet = Nothing 
	Set objDocumentSetList      = Nothing 
	Set objScrollBar            = Nothing 
    Set objMianMenu             = Nothing
    
End Function



'This function is to add default template 
'@code
'	BIZ_Loan_AddDefaultTemplate()
'@endcode

Function BIZ_Loan_AddDefaultTemplate()

    FRM_Logger_ReportInfoEvent "Add Default Template", "Adding Default Template", Null
	Dim objFormsTab
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew", "index:=0")
	GUI_Object_WaitTillVisible SwfWindow("swfname:=MainForm").SwfWindow("text:=New Loan","index:=0").SwfButton("swfname:=btnDefault","index:=0")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("text:=New Loan","index:=0").SwfButton("swfname:=btnDefault","index:=0")
	
	If SwfWindow("swfname:=MainForm").Dialog("index:=0").Exist(20) Then
	   GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("index:=0","index:=0").WinButton("text:=&No","index:=0")
	End If
	
	If SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Exist(20) Then
	   GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("text:=&No","index:=0")
	End If
	
	Set objFormsTab = SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl")
	
	If objFormsTab.Exist(60) Then
	   FRM_Logger_ReportPassEvent "Add Default Template", "Created Default Template", Null
	Else
	   FRM_Logger_ReportFailEvent "Add Default Template", "Default Template is not created", Null 
	End If
	Set objFormsTab = Nothing
End Function



'This function is used to select/highlight (single click) loan with column field value
'@code
'	BIZ_Loan_SelectLoanByColumnValue(strColTitle,strColValue)
'@endcode
'@param strColTitle - column name
'@param strColValue - column field value
'@Pre-requisite  Pipeline View and Loan Folder must be selected before calling this procedure
'@Pre-requisite Column must exist on the view

Function BIZ_Loan_SelectLoanByColumnValue(strColTitle,strColValue)

	Dim objLoanList, objColumns, intColIndex, intRowCount
	Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intColIndex = 0
	intRowCount = objColumns.Object.Items.Count
	
	For i = 0 To (intRowCount - 1)		
		
		If objColumns.Object.Items.Item(i).Checked AND objColumns.Object.Items.Item(i).Text = strColTitle Then
		   Exit For
		ElseIf objColumns.Object.Items.Item(i).Checked Then
			   objColumns.Object.Items.Item(i).Checked = false
			
		End If
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:="&(intColIndex)).Set ""&strColValue&""
	UTIL_Win_SendKey "{ENTER}"
	objLoanList.Click 300, 50
	
	Set objLoanList = Nothing
	set objColumns  = Nothing
	
End Function



'This function is to Create loan by setting values in borrower section and transaction details section in BSO page
'@code
'    BIZ_Loan_BorrowerSummaryOrigination_SetBorrowerandTransactionDetails_LoanCreate(strRowID)
'@endcode
'@param strRowID- row iod test data n spreadsheet excel 

Function BIZ_Loan_BorrowerSummaryOrigination_SetBorrowerandTransactionDetails_LoanCreate(strRowID)
	
	Dim objBorrowerPage
	
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	
	'====== Set Basic Borrower info in borrower section ====== 
	BIZ_Common_BorrowerSummaryOrigination_SetBorrower objBorrowerPage,strRowID
	
	'====== SetTransaction details in transaction section ====== 
	BIZ_Common_BorrowerSummaryOrigination_SetTransactionDetails objBorrowerPage,strRowID
	
	'====== Save Loan ====== 
	BIZ_Loan_Save()
	
	'===== Get Loan Number ======
	BIZ_Loan_GetLoanNumber()
	
	Set objBorrowerPage = Nothing

End Function



'This function is to verify if Milestone is completed
'@code
'    BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan(strMilestone)
'@endcode
'@param strMilestone - milestone name

Function BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan(strMilestone)
	
	Select Case strMilestone
		   Case "FileStarted" 
				BIZ_Tools_Open "Disclosure Tracking"
				eConsentDate =  SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpeSign;gcCompliance;panel1;groupContainer1;DisclosureTracking2015WS;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm","swftypename:=System.Windows.Forms.TextBox").GetROProperty("text")
				blnConsentReceived = BIZ_AlertsAndLog_VerifyRecordExist("Log", "File Started", "Consent requested") 
				blnCreditOrderReceived1 = BIZ_AlertsAndLog_VerifyRecordExist("Log", "File Started", "Credit Report received") 
				blnCreditOrderReceived2 = BIZ_AlertsAndLog_VerifyRecordExist("Log", "Qualification", "Credit Report received")
				blnCreditOrderReceived3 = BIZ_AlertsAndLog_VerifyRecordExist("Log", "Disclosure Tracking", "Credit Report received")
				blnCreditOrderReceived4 = BIZ_AlertsAndLog_VerifyRecordExist("Log", "Processing", "Credit Report received")
				blnCreditOrderReceived5 = BIZ_AlertsAndLog_VerifyRecordExist("Log", "Submittal", "Credit Report received") 
				blnCreditOrderReceived = blnCreditOrderReceived1 or blnCreditOrderReceived2 or blnCreditOrderReceived3 or blnCreditOrderReceived4 or blnCreditOrderReceived5
				blnProductNPricingReceived = BIZ_AlertsAndLog_VerifyRecordExist("Log", "File Started", "Product and Pricing received") 
				blnLockRequestReceived1 =  BIZ_AlertsAndLog_VerifyRecordExist("Log", "File Started", "Price Table - Lock Request received")
				blnLockRequestReceived2 =  BIZ_AlertsAndLog_VerifyRecordExist("Log", "Qualification", "Price Table - Lock Request received")
				blnLockRequestReceived3 =  BIZ_AlertsAndLog_VerifyRecordExist("Log", "Disclosure Tracking", "Price Table - Lock Request received")
				blnLockRequestReceived4 =  BIZ_AlertsAndLog_VerifyRecordExist("Log", "Processing", "Price Table - Lock Request received")
				blnLockRequestReceived5 =  BIZ_AlertsAndLog_VerifyRecordExist("Log", "Submittal", "Price Table - Lock Request received")
				blnLockRequestReceived = blnLockRequestReceived1 or blnLockRequestReceived2 or blnLockRequestReceived3 or blnLockRequestReceived4 or blnLockRequestReceived5
				If((blnConsentReceived = True or UTIL_String_IsNotEmpty(eConsentDate)) and (blnCreditOrderReceived = True) and (blnProductNPricingReceived= True or blnLockRequestReceived = True)) Then
					FRM_Logger_ReportPassEvent "File Started - Milestone","File Started 1 Milestone is completed Successfully - Credit Report is Generated, eConsent is Received, Product and Pricing Received", Null
					BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = True
				Else
					FRM_Logger_ReportFailEvent "File Started - Milestone","File Started 1 Milestone is completed Successfully - Credit Report is Generated - " &blnConsentReceived&"(or) eConsent is Received - "&blnConsentReceived&"(or) Product and Pricing is Received - "& blnProductNPricingReceived &  blnLockRequestReceived & "eConsent Date" & UTIL_String_IsNotEmpty(eConsentDate), Null
					BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = False
				End If
		   Case "Processing"		
				If(BIZ_Loan_VerifyTheMileStoneExistence("Sent to processing")) Then
				   FRM_Logger_ReportPassEvent "Processing - Milestone","Processing Milestone is completed Successfully", Null
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = True
				Else
				   FRM_Logger_ReportFailEvent "Processing - Milestone","Processing Milestone is not completed Successfully", Null
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = False
				End If
		   Case "Qualification"
				BIZ_Tools_Open "Disclosure Tracking"
				strLEReceived=GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname path:=txtDate;dpLEReceived;.*"),"text")
				
				If UTIL_String_IsNotEmpty(strLEReceived) Then
				   FRM_Logger_ReportPassEvent "Qualification - Milestone","Qualification Milestone is completed Successfully - LE Received", Null
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = True
				Else
				   FRM_Logger_ReportFailEvent "Qualification - Milestone","Qualification Milestone is not completed Successfully - LE is not received", Null
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = False
				End If
		   Case "Cond. Approval finished" 
				
				If(BIZ_Loan_VerifyTheMileStoneExistence("Cond. Approval finished"))Then 
				   FRM_Logger_ReportPassEvent "Conditional Approval - Milestone","Conditional Approval Milestone is completed Successfully", Null
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = True
				Else
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = False
				End If
		   Case "Submittal"
				Dim boolFinished
				boolFinished = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=checkBoxFinished"),"checked")
				
				If boolFinished Then
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan  = True
				Else
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = False
				End If
	
		   'Approval
		   Case "Approved"
				boolFinished = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=checkBoxFinished"),"checked")
				BIZ_Tools_Open "Disclosure Tracking"
				'As Disclosure Tracking form is not getting opened, we need to re-call the below statement
				BIZ_Tools_Open "Disclosure Tracking"
				strCDReceived=GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname path:=txtDate;dpCDReceived;.*"),"text")
			
				If UTIL_String_IsNotEmpty(strCDReceived) and boolFinished Then
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan  = True
				   FRM_Logger_ReportPassEvent "Approval - Milestone","Approval Milestone is completed Successfully and CD is Received", Null
				ElseIf boolFinished Then
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan  = True
				   FRM_Logger_ReportPassEvent "Approval - Milestone","Approval Milestone is completed Successfully", Null
				Else
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = False
				   FRM_Logger_ReportFailEvent "Approval - Milestone","Approval Milestone is not completed Successfully", Null
				End If
	
		   'Doc Preparation	
		   Case "Doc Preparation"
				boolFinished = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=checkBoxFinished"),"checked")
				BIZ_Tools_Open "Disclosure Tracking"
				boolClosingDocsOrdered=GUI_List_ClickRow(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"),Null,"Method","Closing Docs Order",True, False, False,"Single")
				
				If boolClosingDocsOrdered and boolFinished Then
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan  = True
				   FRM_Logger_ReportPassEvent "Doc Preparing - Milestone","Doc Preparing Milestone is completed Successfully", Null
				Else
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = False
				   FRM_Logger_ReportFailEvent "Doc Preparing - Milestone","Doc Preparing Milestone is not completed Successfully", Null
				End If			
		   Case Else
				If(BIZ_Loan_VerifyTheMileStoneExistence(strMilestone))Then
				   FRM_Logger_ReportPassEvent "Loan - Milestone",strMilestone, Null
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = True
				Else
				   BIZ_Loan_VerifyIfMilestoneIsCompletedForLoan = False
				End If
	End Select
End Function



'This function is to verify if Milestone is completed
'@code
'    BIZ_Loan_VerifyTheMileStoneExistence(strMilestoneName)
'@endcode

Function BIZ_Loan_VerifyTheMileStoneExistence(strMilestoneName)

	Dim objMainForm, objMainView, intIndex
	Set objMainForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objMainView = objMainForm.SwfObject("swfname:=gvLog")
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLog").Click 147, 47, micRightBtn
	
	If (GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mnuContext"), 5)) Then 
	    SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mnuContext").Select "&Collapse All"
	End If
	
	intIndex = GUI_List_GetRowIndex(objMainView, 0, strMilestoneName)
	
	If intIndex > 0 Then
	   BIZ_Loan_VerifyTheMileStoneExistence = True
	Else
	   BIZ_Loan_VerifyTheMileStoneExistence = False
	End If
	
	Set objMainForm = Nothing
	Set objMainView = Nothing
End Function 



'This function is used to filter loans based on Borrower name and Next Expected Milestone. Make sure Super Admin Default View is selected
'@code
'	BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestone(strBorrowerName,strNextExpectedMilestone)
'@endcode
'@param strBorrowerName - required borrower name
'@param intNextExpectedMilestone - index of item to select in

Function BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestone(strBorrowerName,strNextExpectedMilestone)
	
	Dim objLoanList, objColumns, intColIndex, intRowCount, objMainView
	FRM_Logger_ReportInfoEvent "Loan Search in Pipeline View","Search loan with Borrower Name and Next Expected Milestone",Null
	SwfWindow("swfname:=MainForm").Restore()
	SwfWindow("swfname:=MainForm").Maximize()
	
	Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intColIndex = 0
	intRowCount = objColumns.Object.Items.Count
	
	For i = 0 To (intRowCount - 1)	
	
		If (objColumns.Object.Items.Item(i).Text = "Borrower Name") Then
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Loan Number") Then
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Next Expected Milestone") Then 
			objColumns.Object.Items.Item(i).Checked = True 
			Exit For
		Else
			objColumns.Object.Items.Item(i).Checked = False
		End If
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	If(InStr(strNextExpectedMilestone, "Funding") > 0 and InStr(Environment("ActionName"), "HPFunding") = 0) Then 
		GUI_SwfEdit_Set objMainView.SwfEdit("index:=0","swfname path:=txtBox;SizableTextBox;gvLoans;groupContainer1.*"),strBorrowerName
		UTIL_Win_SendKey "{ENTER}"
	Else
		GUI_SwfEdit_Set objMainView.SwfEdit("index:=1","swfname path:=txtBox;SizableTextBox;gvLoans;groupContainer1.*"),strBorrowerName
		UTIL_Win_SendKey "{ENTER}"
	End If
	
	'selecting index 0 first before selecting required index because of issues during execution
	objMainView.SwfComboBox("index:=0","swfname path:=cboMilestones;MilestoneDropdownBox.*").Select 0
	
	'sending Enter key as combobox list is not getting closed after selecting item with index 0
	UTIL_Win_SendKey "{ENTER}"
	Wait 2
	objMainView.SwfComboBox("index:=0","swfname path:=cboMilestones;MilestoneDropdownBox.*").Select strNextExpectedMilestone
	Wait 2
	UTIL_Win_SendKey "{ENTER}"
	Wait 2
	'Sorts the Loans as per the Loan Number
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans").Click 105,9
	Wait g_TinyWaitSmall
	'Sorts the Loans as per the Loan Number
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans").Click 105,9
	Wait g_TinyWaitSmall
	
	If GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans"))>0 Then
	   GUI_List_ClickOnCell SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans"),Null,0,2,True,True,False,"Double"
	   'If loan locked message shows up Unlock the loan
		If (GUI_Object_IsExistX(Swfwindow("swfname:=MainForm").Swfwindow("swfname:=UnlockLoanDialog"), 40)) then 
			GUI_SwfButton_Click Swfwindow("swfname:=MainForm").Swfwindow("swfname:=UnlockLoanDialog").SwfButton("swfname:=btnUnlock")
		End if
		GUI_Dialog_Encompass_YesX 10,"This loan has Autosave data.*"
		If (GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Static("text:=You only have read.*"), 40))Then
			GUI_Dialog_Encompass_NoX 5,"You only have read.*"
			 FRM_Logger_ReportFailEvent "Loan Privileges","Loan is opened in ReadOnly Mode",Null
			 BIZ_Login_UserLogout()
			 FRM_RT_TearDownTest(Null)
			ExitTest
		Else 
			strLoanNo = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblLoanNumber"), "text")	
			FRM_RT_SetPropValue g_FRM_Prop_LoanNo, strLoanNo
			FRM_Logger_ReportInfoEvent "Save Loan Number", strLoanNo, Null
		End If
	Else 
	   FRM_Logger_ReportFailEvent "No Loans Exist","No Loans are existing with given search criteria",Null
	   BIZ_Login_UserLogout()
	   FRM_RT_TearDownTest(Null)
	   ExitTest
	End If
	
	Set objLoanList = Nothing
	set objColumns  = Nothing
	Set objMainView = Nothing
	
End Function



'This function is used to filter loans based on Borrower name and Next Expected Milestone and Loan Details
'@code
'	 BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestoneAndLoanDetails(strBorrowerName,strNextExpectedMilestone, strLoanPurpose,  strAmortization)
'@endcode
'@param strBorrowerName - required borrower name
'@param strNextExpectedMilestone - Next Expected Milestone
'@param strLoanPurpose - Loan Purpose
'@param strAmortization - Amortization Type

Function  BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestoneAndLoanDetails(strBorrowerName,strNextExpectedMilestone, strLoanPurpose,  strAmortization)

	Dim objLoanList, objColumns, intColIndex, intRowCount, objMainView
	FRM_Logger_ReportInfoEvent "Loan Search in Pipeline View","Search loan with Borrower Name, Next Expected Milestone, Loan Type, Loan Amortization Type",Null
	SwfWindow("swfname:=MainForm").Restore()
	SwfWindow("swfname:=MainForm").Maximize()
	Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intColIndex = 0
	intRowCount = objColumns.Object.Items.Count
	
	For i = 0 To (intRowCount - 1)		
		If (objColumns.Object.Items.Item(i).Text = "Loan Number") Then
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf (objColumns.Object.Items.Item(i).Text = "Borrower Name") Then
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Next Expected Milestone") Then 
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Subject Property Address") Then 
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Loan Purpose") Then 
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Amortization Type") Then 
			objColumns.Object.Items.Item(i).Checked = True
			Exit For
		Else
			objColumns.Object.Items.Item(i).Checked = false
		End If
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	GUI_SwfEdit_Set objMainView.SwfEdit("index:=1","swfname path:=txtBox;SizableTextBox;gvLoans;groupContainer1.*"),strBorrowerName
	UTIL_Win_SendKey "{ENTER}"
	
	'selecting index 0 first before selecting required index because of issues during execution
	objMainView.SwfComboBox("index:=0","swfname path:=cboMilestones;MilestoneDropdownBox.*").Select 0
	objMainView.SwfComboBox("index:=0","swfname path:=cboMilestones;MilestoneDropdownBox.*").Select strNextExpectedMilestone
	Wait g_TinyWaitMedium
	UTIL_Win_SendKey "{ENTER}"
	
	If (Len(strLoanPurpose) > 0) Then
		'selecting index 0 first before selecting required index because of issues during execution
		objMainView.SwfComboBox("index:=0","swfname path:=;gvLoans;groupContainer.*").Select 0
		objMainView.SwfComboBox("index:=0","swfname path:=;gvLoans;groupContainer.*").Select strLoanPurpose
		Wait g_TinyWaitMedium
		UTIL_Win_SendKey "{ENTER}"
	End If
	
	If (Len(strAmortization) > 0) Then 
		'selecting index 0 first before selecting required index because of issues during execution
		objMainView.SwfComboBox("index:=1","swfname path:=;gvLoans;groupContainer1.*").Select 0
		objMainView.SwfComboBox("index:=1","swfname path:=;gvLoans;groupContainer1.*").Select strAmortization
		Wait g_TinyWaitMedium
		UTIL_Win_SendKey "{ENTER}"
	End If
	
	Wait g_TinyWaitMedium
	'Sorts the Loans as per the Loan Number
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans").Click 105,9
	Wait g_TinyWaitSmall
	'Sorts the Loans as per the Loan Number
	SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans").Click 105,9
	Wait g_TinyWaitSmall
	
	If GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans"))>0 Then
	   GUI_List_ClickOnCell SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans"),Null,0,2,True,True,False,"Double"
	Else 
		FRM_Logger_ReportFailEvent "No Loans Exist","No Loans are existing with given search criteria",Null
		BIZ_Login_UserLogout()
		FRM_RT_TearDownTest(Null)
		ExitTest
	End If
	
	Set objLoanList = Nothing
	set objColumns  = Nothing
	Set objMainView = Nothing
End Function



'This function is used to filter loans based on Borrower name and Next Expected Milestone and Loan Details
'@code
'	BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestoneLoanDetails(strBorrowerName,strNextExpectedMilestone, strLoanType, strLoanPurpose,  strAmortization)
'@endcode
'@param strBorrowerName - required borrower name
'@param strNextExpectedMilestone - Next Expected Milestone
'@param strLoanPurpose - Loan Purpose
'@param strAmortization - Amortization Type

Function BIZ_Loan_OpenLoanByBorrNameAndNextExpectedMilestoneLoanDetails(strBorrowerName,strNextExpectedMilestone, strLoanType, strLoanPurpose,  strAmortization)

	Dim objLoanList, objColumns, intColIndex, intRowCount, objMainView
	FRM_Logger_ReportInfoEvent "Loan Search in Pipeline View","Search loan with Borrower Name, Next Expected Milestone, Loan Type, Loan Amortization Type",Null
	SwfWindow("swfname:=MainForm").Restore()
	SwfWindow("swfname:=MainForm").Maximize()
	
	Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intColIndex = 0
	intRowCount = objColumns.Object.Items.Count
	
	For i = 0 To (intRowCount - 1)		
		If (objColumns.Object.Items.Item(i).Text = "Loan Number") Then
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf (objColumns.Object.Items.Item(i).Text = "Borrower Name") Then
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Next Expected Milestone") Then 
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Subject Property Address") Then 
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Loan Type") Then 
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Loan Purpose") Then 
			objColumns.Object.Items.Item(i).Checked = True 
		ElseIf(objColumns.Object.Items.Item(i).Text = "Amortization Type") Then 
			objColumns.Object.Items.Item(i).Checked = True
			Exit For
		Else
			objColumns.Object.Items.Item(i).Checked = false
		End If
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	If(InStr(strNextExpectedMilestone, "Funding") > 0) Then 
		GUI_SwfEdit_Set objMainView.SwfEdit("index:=0","swfname path:=txtBox;SizableTextBox;gvLoans;groupContainer1.*"),strBorrowerName
		UTIL_Win_SendKey "{ENTER}"
	Else
		GUI_SwfEdit_Set objMainView.SwfEdit("index:=1","swfname path:=txtBox;SizableTextBox;gvLoans;groupContainer1.*"),strBorrowerName
		UTIL_Win_SendKey "{ENTER}"
	End If
	
	'selecting index 0 first before selecting required index because of issues during execution
	If(Len(strNextExpectedMilestone) > 0) Then
		objMainView.SwfComboBox("index:=0","swfname path:=cboMilestones;MilestoneDropdownBox.*").Select 0
		objMainView.SwfComboBox("index:=0","swfname path:=cboMilestones;MilestoneDropdownBox.*").Select strNextExpectedMilestone
		Wait g_TinyWaitMedium
		UTIL_Win_SendKey "{ENTER}"
	End If
	
	If(Len(strLoanType) > 0) Then
		'selecting index 0 first before selecting required index because of issues during execution
		objMainView.SwfComboBox("index:=0","swfname path:=;gvLoans;groupContainer.*").Select 0
		objMainView.SwfComboBox("index:=0","swfname path:=;gvLoans;groupContainer.*").Select strLoanType
		Wait g_TinyWaitMedium
		UTIL_Win_SendKey "{ENTER}"
	End If
	
	If(Len(strLoanPurpose) > 0) Then
		'selecting index 0 first before selecting required index because of issues during execution
		objMainView.SwfComboBox("index:=1","swfname path:=;gvLoans;groupContainer.*").Select 0
		objMainView.SwfComboBox("index:=1","swfname path:=;gvLoans;groupContainer.*").Select strLoanPurpose
		Wait g_TinyWaitMedium
		UTIL_Win_SendKey "{ENTER}"
	End If
	
	If(Len(strAmortization) > 0) Then 
		'selecting index 0 first before selecting required index because of issues during execution
		objMainView.SwfComboBox("index:=2","swfname path:=;gvLoans;groupContainer1.*").Select 0
		objMainView.SwfComboBox("index:=2","swfname path:=;gvLoans;groupContainer1.*").Select strAmortization
		Wait g_TinyWaitMedium
		UTIL_Win_SendKey "{ENTER}"
	End If
	
	Wait g_TinyWaitMedium
	If(InStr(strNextExpectedMilestone, "Funding") > 0) Then
		'Sorts the Loans as per the Loan Number
		SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans").Click 600,9
		Wait g_TinyWaitSmall
		'Sorts the Loans as per the Loan Number
		SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans").Click 600,9
		Wait g_TinyWaitSmall
	Else
		'Sorts the Loans as per the Loan Number
		SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans").Click 105,9
		Wait g_TinyWaitSmall
		'Sorts the Loans as per the Loan Number
		SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans").Click 105,9
		Wait g_TinyWaitSmall
	End If
	
	If GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans"))>0 Then
	   GUI_List_ClickOnCell SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans"),Null,0,2,True,True,False,"Double"
	Else 
	   FRM_Logger_ReportFailEvent "No Loans Exist","No Loans are existing with given search criteria",Null
	   BIZ_Login_UserLogout()
	   FRM_RT_TearDownTest(Null)
	   ExitTest
	End If
	
	Set objLoanList = Nothing
	set objColumns  = Nothing
	Set objMainView = Nothing
End Function



'This function is to create new loan template in loan tempalate sets
'@code
'    BIZ_Loan_Pipeline_CreateTemplate(strRowID)
'@endcode
'@param strRowID- row id of test data

Function BIZ_Loan_Pipeline_CreateTemplate(strRowID)
	
	Dim objData, strLoanTemplateName
	
	Set objData = FRM_DS_GetTestData("LoanSetup", "AddLoanFolder", strRowID)
	
	strLoanTemplateName=FRM_DS_GetValue(objData, "TemplateName")
	
	'Create template in Loan tempalte sets
	BIZ_LoanTemplateSets_CreateNew(strLoanTemplateName)
	BIZ_Nav_Settings_Close ()
	
	Set objData = Nothing
	
	BIZ_Loan_Pipeline_CreateTemplate=strLoanTemplateName

End Function



'This function is to create New blank loan from a predefined template created in loan template sets
'@code
'    BIZ_Loan_NewBlankLoan_CreateFromTemplate(strFolderName,strLoanTemplateName)
'@endcode
'@param strFolderName- if exists pass folder name or else pass null
'@param strLoanTemplateName- if exists pass template name or else pass null

Function BIZ_Loan_NewBlankLoan_CreateFromTemplate(strFolderName,strLoanTemplateName)
	
	FRM_Logger_ReportInfoEvent "New Blank Loan Creation from template under folder","Loan Creation under folder predefined",Null
	
	Dim objNewLoanWin
	
	Set objNewLoanWin=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanTemplateSelectDialog")

	BIZ_Nav_SelectPipelineTab()
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew", "index:=0")
	GUI_Object_WaitTillVisible SwfWindow("swfname:=MainForm").SwfWindow("text:=New Loan","index:=0").SwfButton("swfname:=btnNew","index:=0")
	
	If UTIL_String_IsNotEmpty(strFolderName) Then 
		GUI_SwfComboBox_Select objNewLoanWin.SwfComboBox("swfname:=cmbBoxFolder"), strFolderName
	End If 

	If UTIL_String_IsNotEmpty(strLoanTemplateName) Then
		GUI_List_ClickRow objNewLoanWin.SwfObject("swfname:=gvDirectory"), objNewLoanWin.SwfScrollBar("swfname:=vPanelScrollBar"), Trim("Name"), strLoanTemplateName, False, False, False, "Single"	
	End If
	
	GUI_SwfObject_Click objNewLoanWin.SwfButton("swfname:=btnNew")
	
	If GUI_Object_IsExist(SwfWindow("swfname:=Mainform").Dialog("text:=Encompass")) Then				'if encompass dialog pops up exclusively for loan auto save then click yes
		 GUI_DialogObject_Encompass_Yes SwfWindow("swfname:=Mainform").Dialog("text:=Encompass"), ""
	End If 
	
	Set objNewLoanWin = Nothing

End Function



'This function is for creation of loan from new blank loan with template predefined
'@code
'    BIZ_Loan_NewLoan_CreationFromTemplate(strRowID)
'@endcode
'@param strRowID- row id of test data

Function BIZ_Loan_NewLoan_CreationFromTemplate(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create Loan ","Loan Creation using row id" &strRowID,Null
	
	Dim objBorrower, objData, strLoanNumber, strFirstName, intAppDate, arrLoanDetails,strEmailId,strLastName
	
	Set objBorrower = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	Set objData 	= FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)
	
	strFirstName = FRM_DS_GetValue(objData, "FirstName")
	strLastName	 = FRM_DS_GetValue(objData, "LastName")
	intAppDate	 = UTIL_Date_FormatDateByPattern(now, "mm/dd/yyyy")
	strEmailId	 = FRM_DS_GetValue(objData, "Email_Check")
	
	'Navigate to BSO form and set data
	BIZ_BorrowerSummaryOrigination_SetBorrower  strRowID
	
	'Save the created Loan
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=saveBtn")
	
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").Exist(5) Then
		 GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
	End If
  
	'Set Borrower Email after save
	BIZ_Loan_EmailCheckWin_SetEmail(strRowID)
	
	'Verify loan details as entered
	BIZ_Loan_SaveLoanNumber()
	strLoanNumber=BIZ_Loan_GetLoanNumber()
	GUI_Object_ValidateValue objBorrower.WebEdit("html id:=TextBox14"), intAppDate, "Application Date"
	arrLoanDetails=Array(strFirstName, strLastName, intAppDate, strLoanNumber,strEmailId)
	BIZ_Loan_Exit True	
	Wait g_TinyWaitMedium
	
	Set objBorrower = Nothing
	Set objData		= Nothing
	
	BIZ_Loan_NewLoan_CreationFromTemplate = arrLoanDetails
	
End Function



'This function is Set Email Id In Email Window after Save 
'@code
'    BIZ_Loan_EmailCheckWin_SetEmail(strRowID)
'@endcode
'@param strRowID- Row id of Test datya in Excel spread sheet

Function BIZ_Loan_EmailCheckWin_SetEmail(strRowID)
	
	FRM_Logger_ReportInfoEvent "Enter Email Id in Email pop up window","Enter email id using row id "&strRowID&" from sheet set Borrower and column 'Email check'",Null
	
	Dim objEmailWin, objData
	
	Set objEmailWin	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog")
	Set objData 	= FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)
	
	If GUI_Object_IsExist(objEmailWin) Then
		
		If  UTIL_String_IsNotEmpty(Trim(FRM_DS_GetValue(objData, "Email_Check"))) Then
			GUI_SwfEdit_Set objEmailWin.SwfEdit("swfname:=emailTxt"), Trim(FRM_DS_GetValue(objData, "Email_Check"))
		End If 
		FRM_Logger_ReportPassEvent "Verify Email pop up","Email pop up displayed successfully",Null
	Else
		FRM_Logger_ReportFailEvent "Verify Email pop up","Email pop up not displayed ",Null
	End If
		
	GUI_SwfButton_Click objEmailWin.SwfButton("swfname:=okBtn")
	
	Set objEmailWin	= Nothing
	Set objData		= Nothing
	
End Function



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Loan\Loan.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\SecondaryMarket\SecondaryMarket.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_SecondaryMarket BIZ_SecondaryMarket
'List of functionS:
'@code
'	Function BIZ_SecondaryMarket_VerifyAndValidatePriceTable(strLoanType)
'   Function BIZ_SecondaryMarket_VerifyAndValidateAlertsAndLogMessages(strLoanType)
'   Function BIZ_secondaryMarket_VerifyAndValidate_DetailsInBorrrowerSummaryOrigination(strLoanType)
'   Function BIZ_SecondaryMarket_ValidatePreviewWindow(strLoanType)
'   Function BIZ_SecondaryMarket_SubmitRequestForONRPWithAmount_AutoLockOFFWithWarningMsg(strloantype,strLoanNUmber)
'   Function BIZ_SecondaryMarket_SubmitRequestForONRPWithAmount_AutoLockONWithWarningMsg(strloantype,strLoanNUmber)
'   Function BIZ_SecondaryMarket_SubmitRequestForONRPWithAmountDeskLockHours(strLoanType,strLoanNumber)
'   Function BIZ_SecondaryMarket_TPOSettingsForCustomize(strTPOName, strTreeViewName, strRowID)
'   Function BIZ_SecondaryMarket_ChannelLockDeskHOursWithONRP(strChangeDeskLockHours)
'   Function BIZ_SecondaryMarket_ChannelInformation(strChangeDeskLockHours)
'   Function BIZ_SecondaryMarket_ContiniousONRP(strChangeDeskLockHours)
'   Function BIZ_SecondaryMarket_ONRPData(strChangeDeskLockHours)
'   Function BIZ_SecondaryMarket_TPOSettingsForChannelDefault(strTPOName, strTreeViewName)
'   Function BIZ_SecondaryMarket_SubmitRequestForDeskLockHours(strLoanType)
'   Function BIZ_SecondaryMarket_LoanCreationWithLoanOfficerUser(strloantype,strdesklockhours)
'   Function BIZ_SecondaryMarket_LoanCreationDetails(strloantype)
'   Function BIZ_SaveAndGettheLoanNumber()
'   Function BIZ_CloseFromEnCompass()
'   Function BIZ_SecondaryMarket_AutoLockCheck_OnorOff(objCheckBox,boolVal)
'   Function BIZ_SecondaryMarket_PMPSettingForAutoLock(strloantype,strdesklockhours)
'   Function BIZ_SecondaryMarket_ReLock_WarningMessage(strdesklockhours)
'   Function BIZ_SecondaryMarket_ChangeDeskLockHours(strChangeDeskLockHours,strlockType)
'   Function BIZ_SecondaryMarket_Settings_CentralDeskLockHours(strChangeDeskLockHours)
'   Function BIZ_SecondaryMarket_Settings_ChannelDeskLockHours(strChangeDeskLockHours,strlockType, strloantype)
'   Function BIZ_SecondaryMarket_ToolsNavigation(strToolsOpen)
'   Function BIZ_SecondaryMarket_GetPricing(strRowId,strloantype,strLockType)
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockONWithoutWarningMsg()
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockONWithWarningMsg(strloantype)
'   Function BIZ_SecondaryMarket_SubmitRequestForONRP_AutoLockONWithWarningMsg(strloantype)
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockOFFWithoutWarningMsg(strLoanNumber)
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockOFFWithWarningMsg(strloantype)
'   Function BIZ_SecondaryMarket_SubmitRequestForONRP_AutoLockOFFWithWarningMsg(strloantype)
'   Function BIZ_SecondaryMarket_SubmitRequestForDeskLockHours(strLoanType)
'   Function BIZ_SecondaryMarket_SubmitRequestForONRPDeskLockHours(strLoanType)
'   Function BIZ_SecondaryMarket_LoanStatus(Obj,strLoanNumber,strStatusText)
'   Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockONWithoutWarningMsg(strloantype, strLockType)
'   Function BIZ_SecondaryMarket_New_ConformRequestForAutoLockON(strLoanType, strLockType)
'   Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockOFFWithoutWarningMsg(strloantype, strLockType)
'   Function BIZ_SecondaryMarket_New_ConformRequest(strloantype,strLockType)
'   Function BIZ_SecondaryMarket_AlertAndLogValidation(strLockType)
'   Function BIZ_SecondaryMarket_LoanDetails_Validation(strloannumber, strLoanType)
'   Function BIZ_SecondaryMarket_PipeLineAndLoanFolderViewCreationsOrValidations(strPipeLineView, strLoanFolder, strRowID, strTemplateName)
'   Function BIZ_SecondaryMarket_UserProfileCreationsOrValidations(strLoanOfficer,strSecondaryUser)
'   Function BIZ_SecondaryMarket_PersonaValidation(strSecondaryUser)
'   Function BIZ_SecondaryMarket_ConvertDate(strDate)
'   Function BIZ_SecondaryMarket_DenyLock(strLoanNumber)
'   Function BIZ_SecondaryMarket_SubmitRequest_CancelLock(strLoanNumber)
'   Function BIZ_SecondaryMarket_ConfirmRequest_CancelLock()
'   Function BIZ_SecondaryMarket_SubmitRequest_ExtendLock(strRowID)
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockON_ExtendLock(strRowID)
'   Function BIZ_SecondaryMarket_ConformRequest_ExtendLock(strloantype, strRowID, strLockType)
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockOFF_ReLock(strLockType,strLoanType,strLoanNumber,strRowID,strEPPSID)
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockON_ReLock(strLoanType,strLockType,strEPPSID,strRowID)
'   Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockON_ReLock(strLoanType, strLockType)
'   Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockOFF_ReLock(strLoanType, strLockType)
'   Function BIZ_SecondaryMarket_TPOUpdation(strloantype)
'   Function BIZ_SecondaryMarket_ReviseLock(strLoanNumber)
'   Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_ShippingStatus(strRowID)
'   Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_InitialRequests(strRowID)
'   Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_ReturnRequests(strRowID)
'   Function BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification(strRowID, strAutoLockCriteria)
'@endcode
' @{
'******************************************************************************************************


'This function is used for Validate Preview Window for Price Table
'@code
'    BIZ_SecondaryMarket_VerifyAndValidatePriceTable(strLoanType)
'@endcode
'@Param strLoanType - Type of Loan

Function BIZ_SecondaryMarket_VerifyAndValidatePriceTable(strLoanType)
	
	FRM_Logger_ReportInfoEvent "Verify and Validate Alerts and Log PriceTable","Start Verify and Validate Alerts and Log PriceTable", Null

	Dim objPriceTablePage
	Set objPriceTablePage = SwfWindow("swfname:=DocumentDetailsDialog").SwfObject("swfname:=gvFiles")
	
	intRowPrice = GUI_List_GetNumberofRows(objPriceTablePage)
	
	If intRowprice>=0 Then
		strPriceData = GUI_List_GetCellData(objPriceTablePage,intRowPrice-1,"Name")
		FRM_VerifyEqual strPriceData,"Price Table - Lock Request", "Price Table", "Price Table details attached with PDF"
	End If
	'BIZ_SecondaryMarket_ValidatePreviewWindow strLoanType 
	GUI_Window_Close SwfWindow("swfname:=DocumentDetailsDialog")

	Set objPriceTablePage = Nothing
	
End Function



'This function is used for Validate Log Messages
'@code
'    BIZ_SecondaryMarket_VerifyAndValidateAlertsAndLogMessages(strLoanType)
'@endcode
'@Param strLoanType - Type of Loan

Function BIZ_SecondaryMarket_VerifyAndValidateAlertsAndLogMessages(strLoanType)
	FRM_Logger_ReportInfoEvent "Verify and Validate Alerts and Log Messages","Start Verify and Validate Alerts and Log Messages", Null
	
	Dim objHomePage, objDetailsPage, objData
	
	Set objHomePage          = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objMainViewScrollBar = objHomePage.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData              = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)  
	Set objData1             = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strLoanType)  
	
	If SwfWindow("swfname:=MainForm").SwfObject("swfname:=mainPanel").SwfObject("swfname:=pnlLoanInfo").SwfObject("swfname:=lblLockInfo").Exist Then
		strData = SwfWindow("swfname:=MainForm").SwfObject("swfname:=mainPanel").SwfObject("swfname:=pnlLoanInfo").SwfObject("swfname:=lblLockInfo").GetROProperty("text")
		If instr(strData, "29 days")>0 then
			strExpDays = "30"
			strExpBaseRate = DateAdd("d","29",FRM_DS_GetValue(objData, "ApplicationDate"))
		Elseif instr(strData, "28 days")>0 then
			strExpDays = "30"
			strExpBaseRate = DateAdd("d","28",FRM_DS_GetValue(objData, "ApplicationDate"))
		Elseif instr(strData, "88 days")>0 then
			strExpDays = "90"
			strExpBaseRate = DateAdd("d","88",FRM_DS_GetValue(objData, "ApplicationDate"))
		Elseif instr(strData, "89 days")>0 then
			strExpDays = "90"
			strExpBaseRate = DateAdd("d","89",FRM_DS_GetValue(objData, "ApplicationDate"))
		End If
	End If
	strLockDate       = GUI_Object_GetPropertyValue(objHomePage.swfEdit("swfname:=textBox3","index:=1"), "text")
	intLockDays       = GUI_Object_GetPropertyValue(objHomePage.swfEdit("swfname:=textBox4","index:=1"), "text")
	strLockExpireDate = GUI_Object_GetPropertyValue(objHomePage.swfEdit("swfname:=textBox5","index:=1"), "text")
	strBaseRatePrice  = GUI_Object_GetPropertyValue(objHomePage.swfEdit("swfname:=textBox1","index:=1"), "text")

	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationDate")) Then
		strDateExpValue = FRM_DS_GetValue(objData, "ApplicationDate")
		FRM_VerifyEqual BIZ_SecondaryMarket_ConvertDate(strLockDate), BIZ_SecondaryMarket_ConvertDate(strDateExpValue), "Lock Date", "Lock date validated"
	End If
	
	If Util_String_IsNotEmpty(intLockDays) Then
		FRM_Logger_ReportPassEvent "Lock Days", "Lock Days dispalyed in the Page" &intLockDays, Null
	Else
		FRM_Logger_ReportFailEvent "Lock Days", "Lock Days not dispalyed in the Page" &intLockDays, Null
	End If
	'FRM_VerifyEqual intLockDays,strExpDays,"Lock Days","Lock Days validated successfully"
	If Util_String_IsNotEmpty(strLockExpireDate) Then
		FRM_Logger_ReportPassEvent "Lock Expiration Date", "Lock Expiration Date dispalyed in the Page" &strLockExpireDate, Null
	Else
		FRM_Logger_ReportFailEvent "Lock Expiration Date", "Lock Expiration Date not dispalyed in the Page", Null
	End If
	
	'FRM_VerifyEqual BIZ_SecondaryMarket_ConvertDate(strLockExpireDate), BIZ_SecondaryMarket_ConvertDate(strExpBaseRate), "Lock Expiration Date", "Lock Expiration Date validated successfully"
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationDate")) Then
		strDateExpValue = FRM_DS_GetValue(objData, "ApplicationDate")
		FRM_VerifyEqual BIZ_SecondaryMarket_ConvertDate(strLockDate), BIZ_SecondaryMarket_ConvertDate(strDateExpValue), "Lock Date", "Lock date validated"
	End If
	FRM_VerifyEqual strBaseRatePrice, FRM_DS_GetValue(objData1, "NoteRate"), "Base Rate", "Note Rate Data validation"
		
	Set objHomePage          = Nothing
	Set objMainViewScrollBar = Nothing
	
End Function



'This function is used to Verify and Validate Alerts and Log Messages
'@code
'    BIZ_secondaryMarket_VerifyAndValidate_DetailsInBorrrowerSummaryOrigination(strLoanType)
'@endcode
'@Param strLoanType - Type of Loan

Function BIZ_secondaryMarket_VerifyAndValidate_DetailsInBorrrowerSummaryOrigination(strLoanType)
	FRM_Logger_ReportInfoEvent "Verify and Validate Alerts and Log Messages","Start Verify and Validate Alerts and Log Messages", Null
	
	Dim objHomePage, objDetailsPage, objData
	
	Set objHomePage          = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objMainViewScrollBar = objHomePage.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData              = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)  
	
	BIZ_Forms_Open "Borrower Summary - Origination"
    wait g_LongWaitMedium
	wait g_LongWaitMedium
	GUI_Object_WaitTillExistX (objHomePage.WebEdit("html id:=l_761")),30
	
	If SwfWindow("swfname:=MainForm").SwfObject("swfname:=mainPanel").SwfObject("swfname:=pnlLoanInfo").SwfObject("swfname:=lblLockInfo").Exist Then
		strData = SwfWindow("swfname:=MainForm").SwfObject("swfname:=mainPanel").SwfObject("swfname:=pnlLoanInfo").SwfObject("swfname:=lblLockInfo").GetROProperty("text")
		if instr(strData, "29 days")>0 then
			strExpDays = "30"
			strExpBaseRate = DateAdd("d","29",FRM_DS_GetValue(objData, "ApplicationDate"))
		Elseif instr(strData, "28 days")>0 then
			strExpDays = "30"
			strExpBaseRate = DateAdd("d","28",FRM_DS_GetValue(objData, "ApplicationDate"))
		Elseif instr(strData, "88 days")>0 then
			strExpDays = "90"
			strExpBaseRate = DateAdd("d","88",FRM_DS_GetValue(objData, "ApplicationDate"))
		Elseif instr(strData, "89 days")>0 then
			strExpDays = "90"
			strExpBaseRate = DateAdd("d","89",FRM_DS_GetValue(objData, "ApplicationDate"))
		End If
	End If
	
	strLockDate       = GUI_Object_GetPropertyValue(objHomePage.WebEdit("html id:=l_761"), "value")
	intLockDays       = GUI_Object_GetPropertyValue(objHomePage.WebEdit("html id:=l_432"), "value")
	strLockExpireDate = GUI_Object_GetPropertyValue(objHomePage.WebEdit("html id:=l_762"), "value")
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationDate")) Then
		strDateExpValue = FRM_DS_GetValue(objData, "ApplicationDate")
		FRM_VerifyEqual BIZ_SecondaryMarket_ConvertDate(strLockDate), BIZ_SecondaryMarket_ConvertDate(strDateExpValue), "Lock Date", "Lock date validated"
	End If
	If Util_String_IsNotEmpty(intLockDays) Then
		FRM_Logger_ReportPassEvent "Lock Days", "Lock Days dispalyed in the Page" &intLockDays, Null
	Else
		FRM_Logger_ReportFailEvent "Lock Days", "Lock Days not dispalyed in the Page" &intLockDays, Null
	End If
	'FRM_VerifyEqual intLockDays,strExpDays,"Lock Days","Lock Days validated successfully"
	If Util_String_IsNotEmpty(strLockExpireDate) Then
		FRM_Logger_ReportPassEvent "Lock Expiration Date", "Lock Expiration Date dispalyed in the Page" &strLockExpireDate, Null
	Else
		FRM_Logger_ReportFailEvent "Lock Expiration Date", "Lock Expiration Date not dispalyed in the Page", Null
	End If
	
	'FRM_VerifyEqual BIZ_SecondaryMarket_ConvertDate(strLockExpireDate), BIZ_SecondaryMarket_ConvertDate(strExpBaseRate), "Lock Expiration Date", "Lock Expiration Date validated successfully"
	
	Set objHomePage          = Nothing
	Set objMainViewScrollBar = Nothing
	
End Function



'This function is used for Validate Details In price Table PDF
'@code
'    BIZ_SecondaryMarket_ValidatePreviewWindow(strLoanType)
'@endcode
'@Param strLoanType - Type of Loan

Function BIZ_SecondaryMarket_ValidatePreviewWindow(strLoanType)

	FRM_Logger_ReportInfoEvent "Validate Preview Window", "Validate Preview Window using '"&strRowID&"'", null
               
    Dim objData,objprint,objDialog,strProperty,strPropertyCity,intCity
	Set objData              = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)  
	Set objData1             = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strLoanType)  
	
	Swfwindow("swfname:=DocumentDetailsDialog").DblClick 50,50
	For i=0 to 7
		wait 30
	Next
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=DocumentDetailsDialog").WinObject("text:=AVPageView"),60) then
		strProperty = SwfWindow("swfname:=DocumentDetailsDialog").WinObject("text:=AVPageView").GetVisibleText
		If Instr(strProperty,FRM_DS_GetValue(objData, "ApplicationDate"))>=0 Then
			FRM_Logger_ReportPassEvent "Validate Preview Window for Date", "Preview window displays the Date value as '"&FRM_DS_GetValue(objData, "ApplicationDate")&"'", null
		Else
			FRM_Logger_ReportFailEvent "Validate Preview Window for Date", "Preview window is not displays the Date value as'"&FRM_DS_GetValue(objData, "ApplicationDate")&"'", null
		End If
		If Instr(strProperty,FRM_DS_GetValue(objData1, "NoteRate"))>=0 Then
			FRM_Logger_ReportPassEvent "Validate Preview Window for Note Rate", "Preview window displays the Note Rate value as '"&FRM_DS_GetValue(objData1, "NoteRate")&"'", null
		Else
			FRM_Logger_ReportFailEvent "Validate Preview Window for Note Rate", "Preview window is not displays the Note Rate value as'"&FRM_DS_GetValue(objData1, "NoteRate")&"'", null
		End If
		If Instr(strProperty,"30")>=0 Then
			FRM_Logger_ReportPassEvent "Validate Preview Window for Days", "Preview window displays the Days value as 30", null
		Else
			FRM_Logger_ReportFailEvent "Validate Preview Window for Days", "Preview window is not displays the Days value as 30", null
		End If
	Else
		FRM_Logger_ReportFailEvent "Validate Preview Window", "Preview window is not displayed", null
	End If
	
	Set objData              = Nothing  
	Set objData1             = Nothing  
	
End Function



'This function is used for Submit Request with AutoLock OFF and With Warning Msg
'@ code
'    BIZ_SecondaryMarket_SubmitRequestForONRPWithAmount_AutoLockOFFWithWarningMsg(strloantype,strLoanNUmber)
'@ endcode
'@ param strloantype Loan type
'@ param strLoanNUmber Loan Number

Function BIZ_SecondaryMarket_SubmitRequestForONRPWithAmount_AutoLockOFFWithWarningMsg(strloantype,strLoanNUmber)
	FRM_Logger_ReportInfoEvent "Submit Request with AutoLock OFF and With Warning Msg","Start Submit Request with AutoLock OFF and With Warning Msg ", Null
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 30
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
	
	BIZ_SecondaryMarket_SubmitRequestForONRPWithAmountDeskLockHours strloantype, strLoanNUmber	
	
End Function



'This function is used for Submit Request with AutoLock ON and With Warning Msg
'@ code
'    BIZ_SecondaryMarket_SubmitRequestForONRPWithAmount_AutoLockONWithWarningMsg(strloantype,strLoanNUmber)
'@ endcode
'@ param strloantype - Loan type
'@ param strLoanNUmber - Loan Number

Function BIZ_SecondaryMarket_SubmitRequestForONRPWithAmount_AutoLockONWithWarningMsg(strloantype,strLoanNUmber)
	FRM_Logger_ReportInfoEvent "Submit Request with AutoLock OFF and With Warning Msg","Start Submit Request with AutoLock ON and With Warning Msg ", Null
	
	If  GUI_Object_IsExist(SwfWindow("swfname:=MainForm").DiaLog("micclass:=Dialog").Static("index:=1")) Then
		strdataText = SwfWindow("swfname:=MainForm").DiaLog("micclass:=Dialog").Static("index:=1").GetROProperty("text")
		
		If Util_String_IsNotEmpty(strdataText) Then
		  GUI_Dialog_Encompass_OKX 30, null
		   GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"), 60
		
		   If GUI_Object_IsEXistX(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"),60) Then
		      strdataText1 = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1").GetROProperty("text")
		   
		      If Util_String_IsMatch(strdataText1,"The lock has not been confirmed yet.") Then
			     GUI_Dialog_Encompass_OKX 30, null
		      End If
		   End If
		
		wait 10  'Due to application is taking more time
		If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"),60) Then
		   GUI_Dialog_Encompass_OKX 30, null
		End If
		
		GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 60
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
		End If
	End If
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"),60) Then
	   strdataText = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1").GetROProperty("text")
	   
	   If Util_String_IsMatch(strdataText,"The lock has not been confirmed yet.") Then
	   	  GUI_Dialog_Encompass_OKX 30, null
	   	  GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 60
	   	  GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
	   End If
	End If
	
	BIZ_SecondaryMarket_SubmitRequestForONRPWithAmountDeskLockHours strloantype, strLoanNUmber	
	
End Function



'This function is used to validate the warning message for Desk Lock hours
'@ code
'    BIZ_SecondaryMarket_SubmitRequestForONRPWithAmountDeskLockHours(strLoanType,strLoanNumber)
'@ endcode
'@ param strLoanType -  loan Type
'@ param strLoanNUmber - Loan Number

Function BIZ_SecondaryMarket_SubmitRequestForONRPWithAmountDeskLockHours(strLoanType,strLoanNumber)
	
	FRM_Logger_ReportInfoEvent "Start LockDeskHours","Scrpit Name - BIZ_SecondaryMarket_SubmitRequestForONRPWithAmountDeskLockHours", Null
	
	Dim strWarningMsgForLock,objData
	
	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)  
	
	strExpWarningMsgForLock = "Overnight Rate Protection for Loan"
	
	If GUI_Object_IsEXistX(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),60) Then	
	   strWarningMsgForLock = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),"text")
		
	   If instr(strWarningMsgForLock,strExpWarningMsgForLock)>0 Then
	   	  FRM_Logger_ReportPassEvent "Warning Message for TPO Lock Desk Hours","Warning Message displayed- for TPO Lock Desk Hours-"& strWarningMsgForLock, Null
	   	  GUI_Dialog_Encompass_OKX 30, null
	   	  BIZ_CloseFromEnCompass()
	   Else
	   	  FRM_Logger_ReportFailEvent "Warning Message for Desk Lock Hours","Warning Message not displayed for TPO Lock Desk Hours--"&strWarningMsgForLock, Null
	   End If
	End If
	Set objData = Nothing
	
End Function



'This function is used to validate the warning message for Desk Lock hours
'@ code
'    BIZ_SecondaryMarket_TPOSettingsForCustomize(strTPOName, strTreeViewName, strRowID)
'@ endcode
'@ param strTPOName -  name of the TPO
'@ param strTreeViewName -Tree Name what we are selecting
'@ param strRowID - Settings Data

Function BIZ_SecondaryMarket_TPOSettingsForCustomize(strTPOName, strTreeViewName, strRowID)
	
	FRM_Logger_ReportInfoEvent "Start TPO Settings","Scrpit Name - BIZ_SecondaryMarket_TPOSettingsForCustomize", Null
	
	Dim objONRPDetailsPage
	
	Set objONRPDetailsPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog")
	Set objData           = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strRowID)
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "External Company Setup", "Company Details"
	
	GUI_SwfEdit_set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").swfEdit("swfname:=searchTxt","index:=0"), strTPOName
	FRM_Logger_ReportInfoEvent "Enter the Prolifics TPO","Entered the prolifics TPO", Null
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=searchBtn")
	FRM_Logger_ReportInfoEvent "Click on Search","Clicked on Magnify search", Null
	
	GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), strTreeViewName	
	FRM_Logger_ReportInfoEvent "Navigate to Hierarchy Tree","Navigated to Third party Originators", Null
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnEditOrg")
	FRM_Logger_ReportInfoEvent "Click on Edit Object","Clicked on Edit Object", Null
	
	GUI_SwfTab_Click objONRPDetailsPage.SwfTab("swfname:=tabControlExAll"), "ONRP"
	FRM_Logger_ReportInfoEvent "Click on ONRP Tab","Clicked on ONRP Tab", Null
	
	FRM_Logger_ReportInfoEvent "TPO Broker Channel settings","Setting for TPO Broker Customize settings", Null
	GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkBroker"), "On"
	GUI_SwfRadioButton_Click objONRPDetailsPage.SwfRadioButton("swfname:=rbtnBrokerCustom")
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPOWeedayEndTIme")) Then
		strTPOWeedayEndTIme = FRM_DS_GetValue(objData, "strTPOWeedayEndTIme")
		arrTPOWeedayEndTIme = Split(strTPOWeedayEndTIme,":")
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerHr","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerHr","index:=0"), arrTPOWeedayEndTIme(0)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerMin","index:=0"), arrTPOWeedayEndTIme(1)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerAMPM","index:=0"), arrTPOWeedayEndTIme(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for WeekDay","Details are " & arrTPOWeedayEndTIme(0) & vbCrLf & arrTPOWeedayEndTIme(1) & vbCrLf & arrTPOWeedayEndTIme(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPOSaturdayEndTime")) Then
		strTPOSaturdayEndTime = FRM_DS_GetValue(objData, "strTPOSaturdayEndTime")
		arrTPOSaturdayEndTime = Split(strTPOSaturdayEndTime,":")
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerSatHr","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerSatHr","index:=0"), arrTPOSaturdayEndTime(0)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerSatMin","index:=0"), arrTPOSaturdayEndTime(1)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerSatAMPM","index:=0"), arrTPOSaturdayEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for WeekDay","Details are " & arrTPOSaturdayEndTime(0) & vbCrLf & arrTPOSaturdayEndTime(1) & vbCrLf & arrTPOSaturdayEndTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPOSundayEndTime")) Then
		strTPOSundayEndTime = FRM_DS_GetValue(objData, "strTPOSundayEndTime")
		arrTPOSundayEndTime = Split(strTPOSundayEndTime,":")
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerSunHr","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerSunHr","index:=0"), arrTPOSundayEndTime(0)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerSunMin","index:=0"), arrTPOSundayEndTime(1)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbBrokerSunAMPM","index:=0"), arrTPOSundayEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for SaturDay","Details are " & arrTPOSundayEndTime(0) & vbCrLf & arrTPOSundayEndTime(1) & vbCrLf & arrTPOSundayEndTime(2), Null
	End If
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPODollarAmount")) Then
		GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkBrokerNoLimit"), "Off"
		GUI_SwfEdit_set objONRPDetailsPage.SwfEdit("swfname:=txtBrokerDollarLimit"), FRM_DS_GetValue(objData, "strTPODollarAmount")
	End If
	FRM_Logger_ReportInfoEvent "TPO Correspondent Channel settings","Setting for TPO Correspondent Customize settings", Null
	GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkCorrespondent"), "On"
	GUI_SwfRadioButton_Click objONRPDetailsPage.SwfRadioButton("swfname:=rbtnCorrespondentCustom")
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPOWeedayEndTIme")) Then
		strTPOWeedayEndTIme = FRM_DS_GetValue(objData, "strTPOWeedayEndTIme")
		arrTPOWeedayEndTIme = Split(strTPOWeedayEndTIme,":")
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentHr","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentHr","index:=0"), arrTPOWeedayEndTIme(0)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentMin","index:=0"), arrTPOWeedayEndTIme(1)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentAMPM","index:=0"), arrTPOWeedayEndTIme(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for WeekDay","Details are " & arrTPOWeedayEndTIme(0) & vbCrLf & arrTPOWeedayEndTIme(1) & vbCrLf & arrTPOWeedayEndTIme(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPOSaturdayEndTime")) Then
		strTPOSaturdayEndTime = FRM_DS_GetValue(objData, "strTPOSaturdayEndTime")
		arrTPOSaturdayEndTime = Split(strTPOSaturdayEndTime,":")
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentSatHr","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentSatHr","index:=0"), arrTPOSaturdayEndTime(0)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentSatMin","index:=0"), arrTPOSaturdayEndTime(1)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentSatAMPM","index:=0"), arrTPOSaturdayEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for WeekDay","Details are " & arrTPOSaturdayEndTime(0) & vbCrLf & arrTPOSaturdayEndTime(1) & vbCrLf & arrTPOSaturdayEndTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPOSundayEndTime")) Then
		strTPOSundayEndTime = FRM_DS_GetValue(objData, "strTPOSundayEndTime")
		arrTPOSundayEndTime = Split(strTPOSundayEndTime,":")
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentSunHr","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentSunHr","index:=0"), arrTPOSundayEndTime(0)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentSunMin","index:=0"), arrTPOSundayEndTime(1)
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbCorrespondentSunAMPM","index:=0"), arrTPOSundayEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for SaturDay","Details are " & arrTPOSundayEndTime(0) & vbCrLf & arrTPOSundayEndTime(1) & vbCrLf & arrTPOSundayEndTime(2), Null
	End If
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPODollarAmount")) Then
		GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkCorrespondentNoLimit"), "Off"
		GUI_SwfEdit_set objONRPDetailsPage.SwfEdit("swfname:=txtCorrespondentDollarLimit"), FRM_DS_GetValue(objData, "strTPODollarAmount")
	End If
	
	GUI_SwfObject_Click objONRPDetailsPage.SwfObject("swfname:=btnSave")
	
	GUI_Window_Close objONRPDetailsPage
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

	Set objONRPDetailsPage = Nothing
End Function



'This function is used to Change/Update the Channel Desk Lock Hours for Week days, Saturday and sunday
'@ code
'    Function BIZ_SecondaryMarket_ChannelLockDeskHOursWithONRP(strChangeDeskLockHours)
'@ endcode
'@ param strChangeDeskLockHours - get the data from Excel(SecondaryMarket,LockDeskHours)

Function BIZ_SecondaryMarket_ChannelLockDeskHOursWithONRP(strChangeDeskLockHours)
	
	FRM_Logger_ReportInfoEvent "Start Channel Desk Lock Hours", "ChannelDeskLockHours for ChannelDeskLockHours---" & strRowData, Null
	
	Dim objSetupContainer,objData
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData           = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strChangeDeskLockHours)
	
	If GUI_Object_IsExistX(objSetupContainer.SwfTab("swfname:=tabCalendar"),120) Then
		FRM_Logger_ReportPassEvent "Lock DeskSetups","Navigated to Lock DeskSetup", Null
		GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabCalendar"),"Lock Desk Schedule / ONRP"
		FRM_Logger_ReportPassEvent "Lock Desk Schedule / ONRP","Navigation for Lock Desk Schedule / ONRP", Null
		
		If NOT GUI_Object_GetPropertyValue(objSetupContainer.SwfCheckBox("swfname:=chkEnableEncompassLockDesk"),"checked") Then
			GUI_Object_Click objSetupContainer.SwfCheckBox("swfname:=chkEnableEncompassLockDesk"),"SwfCheckBox","Check Enable Encompass Lock Desk"
			GUI_Dialog_Encompass_OKX 30, null
			FRM_Logger_ReportPassEvent "Enable EnCompass Lock Desk","Clicked on Encompass Lock Desk Checck Box", Null
		Else
			FRM_Logger_ReportPassEvent "Enable EnCompass Lock Desk","Already Clicked on Encompass Lock Desk Checck Box", Null
		End If
		
		GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdoChannelLockDeskHours")
		GUI_Dialog_Encompass_OKX 30, null
		 
		FRM_Logger_ReportInfoEvent "Retail ChannelDesk Lock Hours", "Start Retail ChannelDesk Lock Hours", Null
		'Pre Set up for Off Everything
		GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Retail"
		GUI_Object_WaitTillEnabled objSetupContainer.SwfComboBox("swfname path:=cmbLDStartWeekdayHH;panel1;LockDeskHourControl;retailPanel.*")
		'set channel lock desk hours
		BIZ_SecondaryMarket_ChannelInformation strChangeDeskLockHours
		'sometimes settings page is not scrolling itself to operate on elements in ONRP Settings screen. So, scrolling to end
		objSetupContainer.SwfObject("swfname:=panel5").VScroll micScrollEnd
		'check enable ONRP and set ONRP timings
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "On"
		If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strContinousONRP"))  Then
			BIZ_SecondaryMarket_ContiniousONRP strChangeDeskLockHours
		Else
			BIZ_SecondaryMarket_ONRPData strChangeDeskLockHours
		End If
		
		FRM_Logger_ReportInfoEvent "WholeSale ChannelDesk Lock Hours", "Start WholeSale ChannelDesk Lock Hours", Null
		'scroll to top of lock-desk page
		objSetupContainer.SwfObject("swfname:=panel5").VScroll micScrollStart
		'set channel lock-desk hours for wholesale
		GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Wholesale"
		GUI_Object_WaitTillEnabled objSetupContainer.SwfComboBox("swfname path:=cmbLDStartWeekdayHH;panel1;LockDeskHourControl;wholesalePanel.*")
		BIZ_SecondaryMarket_ChannelInformation strChangeDeskLockHours
		'enable and set ONRP settings
		objSetupContainer.SwfObject("swfname:=panel5").VScroll micScrollEnd
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "On"
		If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strContinousONRP"))  Then
			BIZ_SecondaryMarket_ContiniousONRP strChangeDeskLockHours
		Else
			BIZ_SecondaryMarket_ONRPData strChangeDeskLockHours
		End If
	
		'set channel lock desk hours and ONRP settings for Correspondent
		FRM_Logger_ReportInfoEvent "Correspondent ChannelDesk Lock Hours", "Start Correspondent ChannelDesk Lock Hours", Null
		objSetupContainer.SwfObject("swfname:=panel5").VScroll micScrollStart
		GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Correspondent"
		GUI_Object_WaitTillEnabled objSetupContainer.SwfComboBox("swfname path:=cmbLDStartWeekdayHH;panel1;LockDeskHourControl;correspondentPanel.*")
		BIZ_SecondaryMarket_ChannelInformation strChangeDeskLockHours
		objSetupContainer.SwfObject("swfname:=panel5").VScroll micScrollEnd
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "On"
		If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strContinousONRP"))  Then
			BIZ_SecondaryMarket_ContiniousONRP strChangeDeskLockHours
		Else
			BIZ_SecondaryMarket_ONRPData strChangeDeskLockHours
		End If
		
		If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPOdeskHoursWarning")) Then
			GUI_SwfEditor_Type objSetupContainer.SwfEditor("swfname:=txtLockDeskHourMessage","index:=0"), FRM_DS_GetValue(objData, "strTPOdeskHoursWarning")
		End If
		
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnSave")
	Else
		FRM_Logger_ReportFailEvent "Lock DeskSetups","Not Navigated to Lock DeskSetup", Null
	End If
	
	Set objSetupContainer = Nothing
	Set objData           = Nothing
	
End Function



'This function is used to Change/Update the Channel Information
'@code
'   Function BIZ_SecondaryMarket_ChannelInformation(strChangeDeskLockHours)
'@endcode
'@param strChangeDeskLockHours - get the data from Excel(SecondaryMarket,LockDeskHours)

Function BIZ_SecondaryMarket_ChannelInformation(strChangeDeskLockHours)
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData           = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strChangeDeskLockHours)
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strWeekdayStartTime")) Then
		strWeekDayStartTime = FRM_DS_GetValue(objData, "strWeekdayStartTime")
		arrWeekDayStartTime = Split(strWeekDayStartTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayHH","index:=0"), arrWeekDayStartTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayMM","index:=0"), arrWeekDayStartTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayBN","index:=0"), arrWeekDayStartTime(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for WeekDay","Details are " & arrWeekDayStartTime(0) & vbCrLf & arrWeekDayStartTime(1) & vbCrLf & arrWeekDayStartTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strWeekdayEndTime")) Then
		strWeekDayEndTime = FRM_DS_GetValue(objData, "strWeekdayEndTime")
		arrWeekDayEndTime = Split(strWeekDayEndTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayHH","index:=0"), arrWeekDayEndTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayMM","index:=0"), arrWeekDayEndTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayBN","index:=0"), arrWeekDayEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for WeekDay","Details are " & arrWeekDayEndTime(0) & vbCrLf & arrWeekDayEndTime(1) & vbCrLf & arrWeekDayEndTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSaturdayStartTime")) Then
		strSaturdayStartTime = FRM_DS_GetValue(objData, "strSaturdayStartTime")
		arrSaturdayStartTime = Split(strSaturdayStartTime,":")
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkLDSatHours","index:=0"), "On"
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatHH","index:=0"), arrSaturdayStartTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatMM","index:=0"), arrSaturdayStartTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatBN","index:=0"), arrSaturdayStartTime(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for SaturDay","Details are " & arrSaturdayStartTime(0) & vbCrLf & arrSaturdayStartTime(1) & vbCrLf & arrWeekDayStartTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSaturdayEndTime")) Then
		strSaturdayEndTime = FRM_DS_GetValue(objData, "strSaturdayEndTime")
		arrSaturdayEndTime = Split(strSaturdayEndTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatHH","index:=0"), arrSaturdayEndTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatMM","index:=0"), arrSaturdayEndTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatBN","index:=0"), arrSaturdayEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for SaturDay","Details are " & arrSaturdayEndTime(0) & vbCrLf & arrSaturdayEndTime(1) & vbCrLf & arrSaturdayEndTime(2), Null
	End If
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSundayStartTime")) Then
		strSundayStartTime = FRM_DS_GetValue(objData, "strSundayStartTime")
		arrSundayStartTime = Split(strSundayStartTime,":")
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkLDSunHours","index:=0"), "On"
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunHH","index:=0"), arrSundayStartTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunMM","index:=0"), arrSundayStartTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunBN","index:=0"), arrSundayStartTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for Sunday","Details are " & arrSundayStartTime(0) & vbCrLf & arrSundayStartTime(1) & vbCrLf & arrSundayStartTime(2), Null
	End If
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSundayEndTime")) Then
		strSundayEndTime = FRM_DS_GetValue(objData, "strSundayEndTime")
		arrSundayEndTime = Split(strSundayEndTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunHH","index:=0"), arrSundayEndTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunMM","index:=0"), arrSundayEndTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunBN","index:=0"), arrSundayEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for Sunday","Details are " & arrSundayEndTime(0) & vbCrLf & arrSundayEndTime(1) & vbCrLf & arrSundayEndTime(2), Null
	End If

	Set objSetupContainer = Nothing
	Set objData           = Nothing
	
End Function



'This function is used to Continous ONRP Settings
'@code
'   Function BIZ_SecondaryMarket_ContiniousONRP(strChangeDeskLockHours)
'@endcode
'@param strChangeDeskLockHours - get the data from Excel(SecondaryMarket,LockDeskHours)

Function BIZ_SecondaryMarket_ContiniousONRP(strChangeDeskLockHours)
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData           = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strChangeDeskLockHours)
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strContinousONRP")) Then
		GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdoContinuousCoverage", "index:=0")
		FRM_Logger_ReportInfoEvent "Specify radio button should be checked", "specify time radio button is checked", Null
		If Util_String_IsMatch(FRM_DS_GetValue(objData, "strMaximumLimit"),"TRUE") Then
			GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkNoMaxLimit","index:=0"), "On"
		Else
			GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkNoMaxLimit","index:=0"), "Off"
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strSpecifyTimeAndAmount")) Then
				GUI_SwfEdit_Set objSetupContainer.SwfEdit("swfname:=txtDollarLimit","index:=0"), FRM_DS_GetValue(objData, "strSpecifyTimeAndAmount")				
			End If
		End If
	End If
				
	Set objSetupContainer = Nothing
	Set objData           = Nothing
	
End Function



'This function is used to Continous ONRP Data for desk lock hours
'@code
'   Function BIZ_SecondaryMarket_ONRPData(strChangeDeskLockHours)
'@endcode
'@param strChangeDeskLockHours - get the data from Excel(SecondaryMarket,LockDeskHours)

Function BIZ_SecondaryMarket_ONRPData(strChangeDeskLockHours)
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData           = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strChangeDeskLockHours)
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strSpecifyTime")) Then
		GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdoSpecifyTime", "index:=0")
		FRM_Logger_ReportInfoEvent "Specify radio button should be checked", "specify time radio button is checked", Null
		
		If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strONRPweekdayEndTime")) Then
			strONRPweekdayEndTime = FRM_DS_GetValue(objData, "strONRPweekdayEndTime")
			arrWeekDayEndTime = Split(strONRPweekdayEndTime,":")
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpWkdayEndHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpWkdayEndHH","index:=0"), arrWeekDayEndTime(0)
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpWkdayEndMM","index:=0"), arrWeekDayEndTime(1)
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpWkdayEndBN","index:=0"), arrWeekDayEndTime(2)
			FRM_Logger_ReportInfoEvent "Entering the End Time Details for WeekDay","Details are " & arrWeekDayEndTime(0) & vbCrLf & arrWeekDayEndTime(1) & vbCrLf & arrWeekDayEndTime(2), Null
		End If

		If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strONRPSatdayEndTime")) Then
			strONRPSatdayEndTime = FRM_DS_GetValue(objData, "strONRPSatdayEndTime")
			arrSaturdayEndTime = Split(strONRPSatdayEndTime,":")
			GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkOnrpSatHours","index:=0"), "On"
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSatEndHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSatEndHH","index:=0"), arrSaturdayEndTime(0)
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSatEndMM","index:=0"), arrSaturdayEndTime(1)
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSatEndBN","index:=0"), arrSaturdayEndTime(2)
			FRM_Logger_ReportInfoEvent "Entering the End Time Details for SaturDay","Details are " & arrSaturdayEndTime(0) & vbCrLf & arrSaturdayEndTime(1) & vbCrLf & arrSaturdayEndTime(2), Null
		End If
	
	   If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strONRPsundayEndTime")) Then
			strONRPsundayEndTime = FRM_DS_GetValue(objData, "strONRPsundayEndTime")
			arrSundayEndTime = Split(strONRPsundayEndTime,":")
			GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkOnrpSunHours","index:=0"), "On"
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSunEndHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSunEndHH","index:=0"), arrSundayEndTime(0)
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSunEndMM","index:=0"), arrSundayEndTime(1)
			GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSunEndBN","index:=0"), arrSundayEndTime(2)
			FRM_Logger_ReportInfoEvent "Entering the End Time Details for Sunday","Details are " & arrSundayEndTime(0) & vbCrLf & arrSundayEndTime(1) & vbCrLf & arrSundayEndTime(2), Null
		End If
		
		If Util_String_IsMatch(FRM_DS_GetValue(objData, "strMaximumLimit"),"TRUE") Then
			GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkNoMaxLimit","index:=0"), "On"
		Else
			GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkNoMaxLimit","index:=0"), "Off"
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strSpecifyTimeAndAmount")) Then
				GUI_SwfEdit_Set objSetupContainer.SwfEdit("swfname:=txtDollarLimit","index:=0"), FRM_DS_GetValue(objData, "strSpecifyTimeAndAmount")				
			End If
		End If
	End If
				
	Set objSetupContainer = Nothing
	Set objData           = Nothing
	
End Function



'This function is used to validate TPO Settings for default channel
'@code
'   BIZ_SecondaryMarket_TPOSettingsForChannelDefault(strTPOName, strTreeViewName)
'@endcode
'@param strTPOName
'@param strTreeViewName

Function BIZ_SecondaryMarket_TPOSettingsForChannelDefault(strTPOName, strTreeViewName)
	
	FRM_Logger_ReportInfoEvent "Start TPO Settings","Scrpit Name - BIZ_SecondaryMarket_TPOSettingsForChannelDefault", Null
	
	Dim objONRPDetailsPage
	
	Set objONRPDetailsPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog")
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "External Company Setup", "Company Details"
	
	GUI_SwfEdit_set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").swfEdit("swfname:=searchTxt","index:=0"), strTPOName
	FRM_Logger_ReportInfoEvent "Enter the Prolifics TPO","Entered the prolifics TPO", Null
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=searchBtn")
	FRM_Logger_ReportInfoEvent "Click on Search","Clicked on Magnify search", Null
	
	GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), strTreeViewName	
	FRM_Logger_ReportInfoEvent "Navigate to Hierarchy Tree","Navigated to Third party Originators", Null
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnEditOrg")
	FRM_Logger_ReportInfoEvent "Click on Edit Object","Clicked on Edit Object", Null
	
	GUI_SwfTab_Click objONRPDetailsPage.SwfTab("swfname:=tabControlExAll"), "ONRP"
	FRM_Logger_ReportInfoEvent "Click on ONRP Tab","Clicked on ONRP Tab", Null
	
	FRM_Logger_ReportInfoEvent "TPO Broker Channel settings","Setting for TPO Broker default settings", Null
	
	GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkBroker"), "Off"
	GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkBroker"), "On"
	GUI_SwfRadioButton_Click objONRPDetailsPage.SwfRadioButton("swfname:=rbtnBrokerGlobal")
	
	FRM_Logger_ReportInfoEvent "TPO Correspondent Channel settings","Setting for TPO Correspondent default settings", Null
	GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkCorrespondent"), "On"
	GUI_SwfRadioButton_Click objONRPDetailsPage.SwfRadioButton("swfname:=rbtnCorrespondentGlobal")
	
	GUI_SwfObject_Click objONRPDetailsPage.SwfObject("swfname:=btnSave")
	
	GUI_Window_Close objONRPDetailsPage
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

	Set objONRPDetailsPage = Nothing
End Function



'This function is used to validate the warning message for Desk Lock hours
'@code
'   BIZ_SecondaryMarket_SubmitRequestForDeskLockHours(strLoanType)
'@endcode
'@param strLoanType -  loan number

Function BIZ_SecondaryMarket_SubmitRequestForDeskLockHours(strLoanType)
	
	FRM_Logger_ReportInfoEvent "Start LockDeskHours","Scrpit Name - BIZ_SecondaryMarket_SubmitRequestForDeskLockHours", Null
	
	Dim strWarningMsgForLock,objData
	
	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)  
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("micclass:=Dialog").Static("index:=1"),60) Then
		strdataText = SwfWindow("swfname:=MainForm").DiaLog("micclass:=Dialog").Static("index:=1").GetROProperty("text")
		If Util_String_IsNotEmpty(strdataText) Then
			GUI_Dialog_Encompass_OKX 30, null
			GUI_Object_IsExistX SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"), 60
			If GUI_Object_IsEXist(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1")) Then
				strdataText1 = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1").GetROProperty("text")
				If Util_String_IsMatch(strdataText1,"The lock has not been confirmed yet.") Then
					GUI_Dialog_Encompass_OKX 30, null
				End If
			End If
			wait 10  'Due to application is taking more time
			If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1")) Then
				GUI_Dialog_Encompass_OKX 30, null
			End If
			GUI_Object_IsExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 60
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
		End If
	End If
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"),60) Then
		strdataText = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1").GetROProperty("text")
		If Util_String_IsMatch(strdataText,"The lock has not been confirmed yet.") Then
			GUI_Dialog_Encompass_OKX 30, null
			GUI_Object_IsExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 60
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
		End If
	End If
	If Not Util_String_IsMatch(FRM_DS_GetValue(objData, "Channel"),"Banked - Wholesale") then
		strExpWarningMsgForLock = "The Lock Request has been submitted outside of Lock Desk Hours and cannot be accepted. Please reprice and resubmit your Lock Request during Lock Desk Hours."
    Else
		strExpWarningMsgForLock = "Lock Request submitted outside of Lock Desk Hours.  TPO Company in TPO Information tool must be selected in order to be validated for Overnight Rate Protection.  Select the TPO Company and resubmit, or submit the Lock Request during Lock Desk Hours."
	End If
	          
	GUI_Object_IsExistX SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"), 30
	
	If GUI_Object_IsEXistX(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),60) Then	
		strWarningMsgForLock = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),"text")
		
		If UTIL_String_IsMatch(strExpWarningMsgForLock,Replace(strWarningMsgForLock,vbCrLf,"")) Then
			FRM_Logger_ReportPassEvent "Warning Message for Desk Lock Hours","Warning Message displayed--"& strWarningMsgForLock, Null
			GUI_Dialog_Encompass_OKX 30, null
			BIZ_CloseFromEnCompass()
		Else
			FRM_Logger_ReportFailEvent "Warning Message for Desk Lock Hours","Warning Message not displayed--"&strWarningMsgForLock, Null
		End if
	End If	
	Set objData = Nothing
	
End Function



'This function is used to Create the loan with LoanOfficer
'@code
'   BIZ_SecondaryMarket_LoanCreationWithLoanOfficerUser(strloantype,strdesklockhours)
'@endcode
'@param strloantype - Loan Type
'@param boolautolock - Lock enable and disbale
'@param strdesklockhours - type of desk Lock hours Central/Channel/Null

Function BIZ_SecondaryMarket_LoanCreationWithLoanOfficerUser(strloantype,strdesklockhours)
	FRM_Logger_ReportInfoEvent "Loan Creation with LoanOfficer","Start Loan creation ", Null
	
	Dim strLoanNumber,objDeskLockData
	Set objDeskLockData   = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strdesklockhours)  
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	
	'Create a new by applying template
	BIZ_Loan_ApplyTemplateToNewLoanInFolder FRM_DS_GetValue(objDeskLockData, "strPipeLineView"), FRM_DS_GetValue(objDeskLockData, "strLoanFolderName")
	FRM_Logger_ReportInfoEvent "ADD New Loan", "Add Icon clicked for Loan", Null
	GUI_Dialog_Encompass_No ""
	
	'Enters the details in the Header section
	BIZ_BorrowerSummaryOrigination_SetHeadInfo strloantype
	FRM_Logger_ReportInfoEvent "Borrower Summary Organization","Header Information For Borrower summary Organization Successfully Entered", Null
	
	'If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objDeskLockData, "FirstName")) Then
     '   GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_36"), FRM_DS_GetValue(objDeskLockData, "FirstName")
		'If(Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").Exist(3)) then 
		'	Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").SwfCheckBox("swfname:=chkNotShowAgain").Set "On"
		'	Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").SwfButton("swfname:=btnCancel").Click
		'End If
    'End If
	
	strLoanNumber = BIZ_SecondaryMarket_LoanCreationDetails(strloantype)
	
	BIZ_SecondaryMarket_LoanCreationWithLoanOfficerUser = strLoanNumber
	
	Set objDeskLockData   = Nothing
End Function

'This function is used to Create the loan with LoanOfficer
'@code
'   BIZ_SecondaryMarket_LoanCreationWithLoanOfficerUserHMDA(strloantype,strdesklockhours)
'@endcode
'@param strloantype - Loan Type
'@param boolautolock - Lock enable and disbale
'@param strdesklockhours - type of desk Lock hours Central/Channel/Null

Function BIZ_SecondaryMarket_LoanCreationWithLoanOfficerUserHMDA(strloantype,strdesklockhours)
	FRM_Logger_ReportInfoEvent "Loan Creation with LoanOfficer","Start Loan creation ", Null
	
	Dim strLoanNumber,objDeskLockData
	Set objDeskLockData   = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strdesklockhours)  
	Set objBorrowerPage = SwfWindow("swfname:=MainForm").Page("micclass:=Page","index:=0")
	
	'Create a new by applying template
	BIZ_Loan_ApplyTemplateToNewLoanInFolderHMDA FRM_DS_GetValue(objDeskLockData, "strPipeLineView"), FRM_DS_GetValue(objDeskLockData, "strLoanFolderName")
	FRM_Logger_ReportInfoEvent "ADD New Loan", "Add Icon clicked for Loan", Null
	GUI_Dialog_Encompass_No ""
	
	'Enters the details in the Header section
	BIZ_BorrowerSummaryOrigination_SetHeadInfo strloantype
	FRM_Logger_ReportInfoEvent "Borrower Summary Organization","Header Information For Borrower summary Organization Successfully Entered", Null
	
	'If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objDeskLockData, "FirstName")) Then
     '   GUI_WebEdit_Set objBorrowerPage.WebEdit("html id:=l_36"), FRM_DS_GetValue(objDeskLockData, "FirstName")
		'If(Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").Exist(3)) then 
		'	Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").SwfCheckBox("swfname:=chkNotShowAgain").Set "On"
		'	Swfwindow("swfname:=MainForm").Swfwindow("swfname:=MatchedLoanDuplicate").SwfButton("swfname:=btnCancel").Click
		'End If
    'End If
	
	strLoanNumber = BIZ_SecondaryMarket_LoanCreationDetails(strloantype)
	
	BIZ_SecondaryMarket_LoanCreationWithLoanOfficerUserHMDA = strLoanNumber
	
	Set objDeskLockData   = Nothing
End Function

'This function is used to enter the Loan Account information
'@code
'   BIZ_SecondaryMarket_LoanCreationDetails(strloantype)
'@endcode
'@param strloantype

Function BIZ_SecondaryMarket_LoanCreationDetails(strloantype)

	FRM_Logger_ReportInfoEvent "Loan Creation details ","Loan Creation started details", Null
	
	Dim objDeskLockData, objTPOForm, objSummaryPage, objTPOList
	
	Set objDeskLockData   = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strloantype) 
	Set objTPOForm        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanySelectorForm")
	Set objSummaryPage    = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Set objTPOList		  = objTPOForm.SwfObject("swfname:=grd3rdParties")
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objDeskLockData, "TPOName")) Then 
		If UTIL_String_IsMatch(strloantype, "SecondaryMarket_CorrespondentLoan") Then		 
			BIZ_Tools_Open "TPO Information"
			FRM_Logger_ReportInfoEvent "TPO Information","TPO selected in the Tools", Null
			GUI_Object_WaitTillExistX  SwfWindow("swfname:=MainForm").Page("MicClass:=Page").WebButton("html id:=btnLookUpComp"), 30
			GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("MicClass:=Page").WebButton("html id:=btnLookUpComp")
			If GUI_Object_IsExist(objTPOForm) Then
				bool = GUI_List_ClickRow(objTPOList, objTPOList.SwfScrollBar("swfname:=vPanelScrollBar"), "Organization Name", FRM_DS_GetValue(objDeskLockData, "TPOName"), False, True, False, "Single")
				If bool Then
					GUI_SwfButton_Click objTPOForm.SwfButton("swfname:=btnSelect")
					GUI_Dialog_Encompass_YES ""
					FRM_Logger_ReportInfoEvent "TPO Information","TPO selected in the parties", Null
					BIZ_Forms_Open "Borrower Summary - Origination"
					FRM_Logger_ReportInfoEvent "Borrower Summary - Origination","Navigated to Borrower Summary origination", Null
				Else
					FRM_Logger_ReportFailEvent "TPO Details","TPO Details is not Exists for --"&FRM_DS_GetValue(objDeskLockData, "TPOName"), Null
					Exit Function
				End If
			Else
				FRM_Logger_ReportFailEvent "TPO Information Page","TPO Information Page is not Exists", Null
				Exit Function
			End If
		End If
	End If

	BIZ_Loan_Save()
	strLoanNumber = BIZ_Loan_GetLoanNumber
	
	BIZ_SecondaryMarket_LoanCreationDetails = strLoanNumber
	
	Set objDeskLockData   = Nothing
	Set objTPOForm        = Nothing
	Set objSummaryPage    = NOthing
    Set objTPOList		  = Nothing
    
End Function



'This function is used to check the Loan Number and Save the loan number
'@code
'   BIZ_SaveAndGettheLoanNumber()
'@endcode
'@param strloanNumber -  Get the Loan NUmber

Function BIZ_SaveAndGettheLoanNumber()

	FRM_Logger_ReportInfoEvent "Save and Get loan Number","After Entering the Form Details Save and get the Loan Number", Null

	Dim strloanNumber

	GUI_Object_Click swfWindow("swfname:=MainForm").SwfObject("swfname:=saveBtn"), "SWFObject","swfname"
	If GUI_Object_IsExistX(swfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose"),120)  Then
		GUI_SwfButton_Click swfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
	End If
	
	strloanNumber = SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblLoanNumber").GetROProperty("text")
	'BIZ_CloseFromEnCompass()

	BIZ_SaveAndGettheLoanNumber = strloanNumber
	
End Function



'This function is used to CLose the Loan Form
'@code
'   BIZ_CloseFromEnCompass()
'@endcode
'@param

Function BIZ_CloseFromEnCompass()

	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=closeBtn")
	GUI_Dialog_Encompass_YesX 5, ""
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose"),60)  Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
	End If
	
End Function



'This function is used to Check or uncheck the Auto Lock in Secondary Market --> product and Pricing
'@code
'   BIZ_SecondaryMarket_AutoLockCheck_OnorOff(objCheckBox,boolVal)
'@endcode
'@param objCheckBox - Object needs to Check
'@param boolVal - True/False

Function BIZ_SecondaryMarket_AutoLockCheck_OnorOff(objCheckBox,boolVal)

	FRM_Logger_ReportInfoEvent "Enable Auto Lock","Enable the Auto Lock in Secondary Market->Product and Pricing", Null

	Dim objSaveBTN1, strSetupVal
	
	Set objSaveBTN1 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave") 
	
	If GUI_Object_IsExistX(objCheckBox,120) Then
		FRM_Logger_ReportPassEvent "Object Existence","Object Exists in the Page of chkAutoLockRequest", Null
		strSetupVal = GUI_Object_GetPropertyValue(objCheckBox, "checked")
		
		If boolVal Then
			If strSetupVal Then
				FRM_Logger_ReportPassEvent "CheckBox Click", "Check Box already Clicked", Null
			ElseIf NOT strSetupVal Then
				GUI_SwfObject_Click objCheckBox
				GUI_SwfObject_Click objSaveBTN1
				FRM_Logger_ReportPassEvent "CheckBox Click", "Check Box already Clicked", Null
			End If		
			
		ElseIf NOT boolVal Then		
			If strSetupVal Then
				GUI_SwfObject_Click objCheckBox
				GUI_SwfObject_Click objSaveBTN1
				FRM_Logger_ReportPassEvent "CheckBox Click","Check Box Clicked and now the flag is false", Null
			ElseIf strSetupVal=False Then
				FRM_Logger_ReportPassEvent "CheckBox Click","After Checkbox unchecked", Null
			End If	
			
		End If	
		GUI_Dialog_Encompass_OKX 30, null
	Else	
		FRM_Logger_ReportFailEvent "Object Existence","Object not Exists in the Page of chkAutoLockRequest", Null	
	End If
	
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	set objSaveBTN1 = Nothing
	
End Function



'This function is used for PMP Setting for Auto Lock
'@code
'   BIZ_SecondaryMarket_PMPSettingForAutoLock(strloantype,strdesklockhours)
'@endcode
'@param strloantype - Loan Type
'@param strdesklockhours - type of desk Lock hours Central/Channel/Null
'@param strLoanNo - Loan number

Function BIZ_SecondaryMarket_PMPSettingForAutoLock(strloantype,strdesklockhours)

	FRM_Logger_ReportInfoEvent "PMP Setting for Auto Lock","Start PMP Setting for Auto Lock", Null
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDeskLockData   = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strdesklockhours)  
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objDeskLockData, "boolAutoLock")) Then		
		BIZ_Nav_OpenMenuItem "Encompass;Settings..."
		BIZ_Nav_HierarchyTree "Secondary Setup", "Auto-Lock"
		BIZ_SecondaryMarket_AutoLockCheck_OnorOff objSetupContainer.SwfCheckBox("swfname:=chkAutoLockRequest"), FRM_DS_GetValue(objDeskLockData, "boolAutoLock")		
	End If
	If UTIL_String_IsMatch(FRM_DS_GetValue(objDeskLockData, "strlockset"),"Central Lock Desk Hours") Then
		BIZ_SecondaryMarket_ChangeDeskLockHours strdesklockhours,FRM_DS_GetValue(objDeskLockData, "strlockset")
	ElseIf UTIL_String_IsMatch(FRM_DS_GetValue(objDeskLockData, "strlockset"),"Channel Lock Desk Hours") Then
		BIZ_SecondaryMarket_Settings_ChannelDeskLockHours strdesklockhours,FRM_DS_GetValue(objDeskLockData, "strlockset"), strloantype		
	End If
	
	Set objDeskLockData   = Nothing
	Set objSetupContainer = Nothing
End Function



'This function is used for ReLock the Loan
'@code
'   BIZ_SecondaryMarket_ReLock_WarningMessage(strdesklockhours)
'@endcode
'@param strdesklockhours - type of desk Lock hours Central/Channel/Null

Function BIZ_SecondaryMarket_ReLock_WarningMessage(strdesklockhours)
	
	FRM_Logger_ReportInfoEvent "ReLock Warning Message","ReLock Warning Message", Null
	
	Set objDeskLockData   = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strdesklockhours)  
	
	GUI_Dialog_Encompass_OKX 30, null
	GUI_Dialog_Encompass_OKX 30, null
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
	GUI_Object_IsExistX SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"), 30

	If GUI_Object_IsEXist(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1")) Then	
		strWarningMsgForLock = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),"text")

		If Util_String_IsNotEmpty(strWarningMsgForLock) Then
			FRM_Logger_ReportPassEvent "Warning Message for Desk Lock Hours","Warning Message displayed--"& strWarningMsgForLock, Null
			GUI_Dialog_Encompass_OKX 30, null
			BIZ_Loan_Save()
			BIZ_Loan_Exit True
		Else
			FRM_Logger_ReportFailEvent "Warning Message for Desk Lock Hours","Warning Message not displayed--"&strWarningMsgForLock, Null
		End if
	End If
End Function



'This function is used to Change/Update the Desk Lock Hours for Week days, Saturday and sunday in Central
'@code
'   Function BIZ_SecondaryMarket_ChangeDeskLockHours(strChangeDeskLockHours, strlockType)
'@endcode
'@param strChangeDeskLockHours - get the data from Excel(SecondaryMarket,LockDeskHours)
'@param strlockType - Lock Type--Central/Channel

Function BIZ_SecondaryMarket_ChangeDeskLockHours(strChangeDeskLockHours,strlockType)
	
	FRM_Logger_ReportInfoEvent "Start Change Desk Lock Hours", "ChangeDeskLockHours for ChangeDeskLockHours---" & strRowData, Null
	
	Dim objSetupContainer,objData
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData           = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strChangeDeskLockHours)
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
		
	BIZ_Nav_HierarchyTree "Secondary Setup", "Lock Desk Setup"
	
	If GUI_Object_IsExistX(objSetupContainer.SwfTab("swfname:=tabCalendar"),60) Then
		FRM_Logger_ReportPassEvent "Lock DeskSetups","Navigated to Lock DeskSetup", Null
		GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabCalendar"),"Lock Desk Schedule / ONRP"
		FRM_Logger_ReportPassEvent "Lock Desk Schedule / ONRP","Navigation for Lock Desk Schedule / ONRP", Null
		
		If NOT GUI_Object_GetPropertyValue(objSetupContainer.SwfCheckBox("swfname:=chkEnableEncompassLockDesk"),"checked") Then
			GUI_Object_Click objSetupContainer.SwfCheckBox("swfname:=chkEnableEncompassLockDesk"),"SwfCheckBox","Check Enable Encompass Lock Desk"
			GUI_Dialog_Encompass_OK(Null)
			FRM_Logger_ReportPassEvent "Enable EnCompass Lock Desk","Clicked on Encompass Lock Desk Checck Box", Null
		Else
			FRM_Logger_ReportPassEvent "Enable EnCompass Lock Desk","Already Clicked on Encompass Lock Desk Checck Box", Null
		End If
		
		'validate the Weekday, saturday and sunday Hours Labels
		If GUI_Object_IsExistX(objSetupContainer.SwfLabel("swfname:=label1","text:=Weekday Hours","index:=0"),60) Then
			FRM_Logger_ReportPassEvent "Verify Weekday Hours Label","Weekday hours label is exists in the Lock Desk Setup", Null
		Else
			FRM_Logger_ReportFailEvent "Verify Weekday Hours Label","Weekday hours label is not exists in the Lock Desk Setup", Null
		End If
		
		If GUI_Object_IsExistX(objSetupContainer.SwfCheckBox("swfname:=chkLDSatHours","index:=0"),60) Then
			FRM_Logger_ReportPassEvent "Verify Saturday Hours Label","Weekday hours label is exists in the Lock Desk Setup", Null
		Else
			FRM_Logger_ReportFailEvent "Verify Saturday Hours Label","Weekday hours label is not exists in the Lock Desk Setup", Null
		End If
		
		If GUI_Object_IsExistX(objSetupContainer.SwfCheckBox("swfname:=chkLDSunHours","index:=0"),60) Then
			FRM_Logger_ReportPassEvent "Verify Sunday Hours Label","Weekday hours label is exists in the Lock Desk Setup", Null
		Else
			FRM_Logger_ReportFailEvent "Verify Sunday Hours Label","Weekday hours label is not exists in the Lock Desk Setup", Null
		End If
		
		'If NOT GUI_Object_GetPropertyValue(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"),"checked") Then
			
			'Lock Desk Hours Changes
			If Util_String_IsMatch(strlockType,"Central Lock Desk Hours") Then
				'Click on 
				GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdoCentralLockDeskHours")
				'Change the Desk Lock request
				BIZ_SecondaryMarket_Settings_CentralDeskLockHours strChangeDeskLockHours
			End IF
			
		'End If 
		
	Else
		FRM_Logger_ReportFailEvent "Lock DeskSetups","Not Navigated to Lock DeskSetup", Null
	End If
	
	Set objSetupContainer = Nothing
	Set objData           = Nothing
	
End Function



'This function is used to Change/Update the Desk Lock Hours for Week days, Saturday and sunday in Central
'@code
'   Function BIZ_SecondaryMarket_Settings_CentralDeskLockHours(strChangeDeskLockHours))
'@endcode
'@param strChangeDeskLockHours - get the data from Excel(SecondaryMarket,LockDeskHours)

Function BIZ_SecondaryMarket_Settings_CentralDeskLockHours(strChangeDeskLockHours)
	
	FRM_Logger_ReportInfoEvent "Start Change Desk Lock Hours","ChangeDeskLockHours for ChangeDeskLockHours---" & strRowData, Null
	
	Dim objSetupContainer, objData, strWeekStartTime, arrStartTime, strWeekEndTime, arrEndTime, strSatStartTime, arrSatStartTime, strSaturEndTime, arrSatEndTime, strSunStartTime, arrSunStartTime, strSunEndTime, arrSunEndTime
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData           = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strChangeDeskLockHours)
	'Setting to Null for all Desk Lock Hours
	If GUI_Object_IsExistX(objSetupContainer.Dialog("text:=Encompass").WinButton("text:=OK"),30) Then
		GUI_Dialog_Encompass_OKX 30, null
	End If
	GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkLDSatHours","index:=0"), "Off"
	GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkLDSunHours","index:=0"), "Off"
	'Retail ONRP off 
	GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=onrpChannelTab","index:=0"), "Retail"
	GUI_Object_WaitTillExistX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
	If Not GUI_Object_IsEXist(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0")) Then
		GUI_Object_WaitTillVisibleX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
		objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
	Else
		objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
	End If
	
	GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=onrpChannelTab","index:=0"), "Wholesale"
	GUI_Object_WaitTillExistX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
	If Not GUI_Object_IsEXist(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0")) Then
		GUI_Object_WaitTillVisibleX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
		objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
	Else
		objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
	End If
	
	GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=onrpChannelTab","index:=0"), "Correspondent"
	GUI_Object_WaitTillExistX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
	If Not GUI_Object_IsEXist(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0")) Then
		GUI_Object_WaitTillVisibleX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
		objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
	Else
		objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
	End If
	
	'Enter Weekday hours
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strWeekdayStartTime")) Then
		FRM_Logger_ReportInfoEvent "Week Day Start Time Details","Started Week Day Start Time Details Entering" , Null
		strWeekStartTime = FRM_DS_GetValue(objData, "strWeekdayStartTime")
		arrStartTime = Split(strWeekStartTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayHH","index:=0"), arrStartTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayMM","index:=0"), arrStartTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayBN","index:=0"), arrStartTime(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for Week Day","Details are " & arrStartTime(0) & vbCrLf & arrStartTime(1) & vbCrLf & arrStartTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strWeekdayEndTime")) Then
		FRM_Logger_ReportInfoEvent "Week Day End Time Details","Started Week Day End Time Details Entering" , Null
		strWeekEndTime = FRM_DS_GetValue(objData, "strWeekdayEndTime")
		arrEndTime = Split(strWeekEndTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayHH","index:=0"), arrEndTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayMM","index:=0"), arrEndTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayBN","index:=0"), arrEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for Week Day","Details are " & arrEndTime(0) & vbCrLf & arrEndTime(1) & vbCrLf & arrEndTime(2), Null
	End If
	
	'Enter Saturday hours
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSaturdayStartTime")) Then
		FRM_Logger_ReportInfoEvent "SaturDay Start Time Details","Started SaturDay Start Time Details Entering" , Null
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkLDSatHours","index:=0"), "On"
		strSatStartTime = FRM_DS_GetValue(objData, "strSaturdayStartTime")
		arrSatStartTime = Split(strSatStartTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatHH","index:=0"), arrSatStartTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatMM","index:=0"), arrSatStartTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatBN","index:=0"), arrSatStartTime(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for SaturDay","Details are " & arrSatStartTime(0) & vbCrLf & arrSatStartTime(1) & vbCrLf & arrSatStartTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSaturdayEndTime")) Then
		FRM_Logger_ReportInfoEvent "SaturDay End Time Details","Started SaturDay End Time Details Entering" , Null
		strSaturEndTime = FRM_DS_GetValue(objData, "strSaturdayEndTime")
		arrSatEndTime = Split(strSaturEndTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatHH","index:=0"), arrSatEndTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatMM","index:=0"), arrSatEndTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatBN","index:=0"), arrSatEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for SaturDay","Details are " & arrSatEndTime(0) & vbCrLf & arrSatEndTime(1) & vbCrLf & arrSatEndTime(2), Null
	End If
	
	'Enter Sunday hours
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSundayStartTime")) Then
		FRM_Logger_ReportInfoEvent "Sunday Start Time Details","Started Sunday Start Time Details Entering" , Null
		GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkLDSunHours","index:=0"), "On"
		strSunStartTime = FRM_DS_GetValue(objData, "strSundayStartTime")
		arrSunStartTime = Split(strSunStartTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunHH","index:=0"), arrSunStartTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunMM","index:=0"), arrSunStartTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunBN","index:=0"), arrSunStartTime(2)
		FRM_Logger_ReportInfoEvent "Entering the Start Time Details for SunDay","Details are " & arrSunStartTime(0) & vbCrLf & arrSunStartTime(1) & vbCrLf & arrSunStartTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSundayEndTime")) Then
		FRM_Logger_ReportInfoEvent "Sunday End Time Details","Started Sunday End Time Details Entering" , Null
		strSunEndTime = FRM_DS_GetValue(objData, "strSundayEndTime")
		arrSunEndTime = Split(strSunEndTime,":")
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunHH","index:=0"), arrSunEndTime(0)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunMM","index:=0"), arrSunEndTime(1)
		GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunBN","index:=0"), arrSunEndTime(2)
		FRM_Logger_ReportInfoEvent "Entering the End Time Details for SunDay","Details are " & arrSunEndTime(0) & vbCrLf & arrSunEndTime(1) & vbCrLf & arrSunEndTime(2), Null
	End If
	
	If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strTPOdeskHoursWarning")) Then
		GUI_SwfEditor_Type objSetupContainer.SwfEditor("swfname:=txtLockDeskHourMessage","index:=0"), FRM_DS_GetValue(objData, "strTPOdeskHoursWarning")
	End If
	GUI_Object_Click objSetupContainer.SwfObject("swfname:=stdIconBtnSave"), "SWFObject","swfname"
	FRM_Logger_ReportInfoEvent "Save Button Click","Clicked on Save Button" , Null
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	FRM_Logger_ReportInfoEvent "Setup Container Close","Closed Setup container window" , Null
		
	set objSetupContainer = Nothing
	set objData           = Nothing
	
End Function



'This function is used to Change/Update the Channel Desk Lock Hours for Week days, Saturday and sunday
'@code
'   Function BIZ_SecondaryMarket_Settings_ChannelDeskLockHours strdesklockhours,FRM_DS_GetValue(objDeskLockData, "strlockset"), strloantype
'@endcode
'@param strChangeDeskLockHours - get the data from Excel(SecondaryMarket,LockDeskHours)
'@param strlockType - Lock Type--Central/Channel
'@param strloantype - Loan Type

Function BIZ_SecondaryMarket_Settings_ChannelDeskLockHours(strChangeDeskLockHours,strlockType, strloantype)
	
	FRM_Logger_ReportInfoEvent "Start Channel Desk Lock Hours", "ChannelDeskLockHours for ChannelDeskLockHours---" & strRowData, Null
	
	Dim objSetupContainer,objData
	
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData           = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strChangeDeskLockHours)
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
		
	BIZ_Nav_HierarchyTree "Secondary Setup", "Lock Desk Setup"
	
	If GUI_Object_IsExistX(objSetupContainer.SwfTab("swfname:=tabCalendar"),120) Then
		FRM_Logger_ReportPassEvent "Lock DeskSetups","Navigated to Lock DeskSetup", Null
		GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabCalendar"),"Lock Desk Schedule / ONRP"
		FRM_Logger_ReportPassEvent "Lock Desk Schedule / ONRP","Navigation for Lock Desk Schedule / ONRP", Null
		
		If NOT GUI_Object_GetPropertyValue(objSetupContainer.SwfCheckBox("swfname:=chkEnableEncompassLockDesk"),"checked") Then
			GUI_Object_Click objSetupContainer.SwfCheckBox("swfname:=chkEnableEncompassLockDesk"),"SwfCheckBox","Check Enable Encompass Lock Desk"
			GUI_Dialog_Encompass_OKX 30, null
			FRM_Logger_ReportPassEvent "Enable EnCompass Lock Desk","Clicked on Encompass Lock Desk Checck Box", Null
		Else
			FRM_Logger_ReportPassEvent "Enable EnCompass Lock Desk","Already Clicked on Encompass Lock Desk Checck Box", Null
		End If
		
		If NOT GUI_Object_GetPropertyValue(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"),"checked") Then
			
			GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdoChannelLockDeskHours")
			GUI_Dialog_Encompass_OKX 30, null
			 
			'Pre Set up for Off Everything
			GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Retail"
			GUI_Object_WaitTillExistX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
			If Not GUI_Object_IsEXist(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0")) Then
				GUI_Object_WaitTillVisibleX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
				objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
			Else
				objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
			End If
	
			GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Wholesale"
			GUI_Object_WaitTillExistX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
			If Not GUI_Object_IsEXist(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0")) Then
				GUI_Object_WaitTillVisibleX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
				objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
			Else
				objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
			End If
			
			GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Correspondent"
			GUI_Object_WaitTillExistX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
			If Not GUI_Object_IsEXist(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0")) Then
				GUI_Object_WaitTillVisibleX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
				objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
			Else
				objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "Off"
			End If
	
			If Util_String_IsMatch(strloanType,"secondaryMarket_RetailLoan") Then
				GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Retail"
				GUI_Object_WaitTillExist objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP", "text:=Enable ONRP for Retail")
				If Util_string_IsMatch(FRM_DS_GetValue(objData, "strEnableONRP"),"TRUE") Then 
					If Not GUI_Object_IsEXist(objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0")) Then
						GUI_Object_WaitTillVisibleX objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), 30
						objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
						GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "On"
					Else
						objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0").Object.focus
						GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP","index:=0"), "On"
					End If
				End If
			ElseIf Util_String_IsMatch(strloanType,"secondaryMarket_WholeSaleLoan") Then
				GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Wholesale"
				GUI_Object_WaitTillExist objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP", "text:=Enable ONRP for Wholesale")
				If Util_string_IsMatch(FRM_DS_GetValue(objData, "strEnableONRP"),"TRUE") Then 
					GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP", "index:=0"), "On"
				End If
			ElseIf Util_String_IsMatch(strloanType,"SecondaryMarket_CorrespondentLoan") Then
				GUI_SwfTab_Click objSetupContainer.SwfTab("swfname:=tabLockDeskHours","index:=0"), "Correspondent"
				GUI_Object_WaitTillExist objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP", "text:=Enable ONRP for Correspondent")
				If Util_string_IsMatch(FRM_DS_GetValue(objData, "strEnableONRP"),"TRUE") Then 
					GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkEnableONRP", "index:=0"), "On"
				End If
			End If
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strSpecifyTime")) Then
				If GUI_Object_ValidateChecked(objSetupContainer.SwfRadioButton("swfname:=rdoSpecifyTime","index:=0"), False, "specify time radioButton") Then
					GUI_SwfRadioButton_Click objSetupContainer.SwfRadioButton("swfname:=rdoSpecifyTime", "index:=0")
					FRM_Logger_ReportPassEvent "Specify radio button should be checked", "specify time radio button is checked", Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strSpecifyTimeAndAmount")) Then
					GUI_SwfEdit_Set objSetupContainer.SwfEdit("swfname:=txtDollarLimit"), FRM_DS_GetValue(objData, "strSpecifyTimeAndAmount")				
				End If
			End If	
			If Util_String_IsMatch(FRM_DS_GetValue(objData, "strContinousONRP"),"TRUE") Then
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkNoMaxLimit","index:=0"), "On"
			End If
			If Util_String_IsMatch(FRM_DS_GetValue(objData, "strMaximumLimit"),"TRUE") Then
				GUI_Object_ValidateChecked objSetupContainer.SwfCheckBox("swfname:=chkNoMaxLimit","index:=0"), "True", "Verify Maximum limit CheckBox"
			End If
			
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strWeekdayStartTime")) Then
				strWeekDayStartTime = FRM_DS_GetValue(objData, "strWeekdayStartTime")
				arrWeekDayStartTime = Split(strWeekDayStartTime,":")
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayHH","index:=0"), arrWeekDayStartTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayMM","index:=0"), arrWeekDayStartTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartWeekdayBN","index:=0"), arrWeekDayStartTime(2)
				FRM_Logger_ReportInfoEvent "Entering the Start Time Details for WeekDay","Details are " & arrWeekDayStartTime(0) & vbCrLf & arrWeekDayStartTime(1) & vbCrLf & arrWeekDayStartTime(2), Null
			End If
			
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strWeekdayEndTime")) Then
				strWeekDayEndTime = FRM_DS_GetValue(objData, "strWeekdayEndTime")
				arrWeekDayEndTime = Split(strWeekDayEndTime,":")
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayHH","index:=0"), arrWeekDayEndTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayMM","index:=0"), arrWeekDayEndTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndWeekdayBN","index:=0"), arrWeekDayEndTime(2)
				FRM_Logger_ReportInfoEvent "Entering the End Time Details for WeekDay","Details are " & arrWeekDayEndTime(0) & vbCrLf & arrWeekDayEndTime(1) & vbCrLf & arrWeekDayEndTime(2), Null
			End If
			
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSaturdayStartTime")) Then
				strSaturdayStartTime = FRM_DS_GetValue(objData, "strSaturdayStartTime")
				arrSaturdayStartTime = Split(strSaturdayStartTime,":")
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatHH","index:=0"), strSaturdayStartTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatMM","index:=0"), strSaturdayStartTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatBN","index:=0"), strSaturdayStartTime(2)
				FRM_Logger_ReportInfoEvent "Entering the Start Time Details for SaturDay","Details are " & strSaturdayStartTime(0) & vbCrLf & arrSaturdayStartTime(1) & vbCrLf & arrWeekDayStartTime(2), Null
			End If
			
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSaturdayEndTime")) Then
				strSaturdayEndTime = FRM_DS_GetValue(objData, "strSaturdayEndTime")
				arrSaturdayEndTime = Split(strSaturdayEndTime,":")
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkOnrpSatHours"), "On"
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatHH","index:=0"), arrSaturdayEndTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatMM","index:=0"), arrSaturdayEndTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSatBN","index:=0"), arrSaturdayEndTime(2)
				FRM_Logger_ReportInfoEvent "Entering the End Time Details for SaturDay","Details are " & arrSaturdayEndTime(0) & vbCrLf & arrSaturdayEndTime(1) & vbCrLf & arrSaturdayEndTime(2), Null
			End If
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSundayStartTime")) Then
				strSundayStartTime = FRM_DS_GetValue(objData, "strSundayStartTime")
				arrSundayStartTime = Split(strSundayStartTime,":")
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunHH","index:=0"), arrSundayStartTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunMM","index:=0"), arrSundayStartTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSunBN","index:=0"), arrSundayStartTime(2)
				FRM_Logger_ReportInfoEvent "Entering the End Time Details for Sunday","Details are " & arrSundayStartTime(0) & vbCrLf & arrSundayStartTime(1) & vbCrLf & arrSundayStartTime(2), Null
			End If
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strSundayEndTime")) Then
				strSundayEndTime = FRM_DS_GetValue(objData, "strSundayEndTime")
				arrSundayEndTime = Split(strSundayEndTime,":")
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkOnrpSunHours"), "On"
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunHH","index:=0"), arrSundayEndTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunMM","index:=0"), arrSundayEndTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDEndSunBN","index:=0"), arrSundayEndTime(2)
				FRM_Logger_ReportInfoEvent "Entering the End Time Details for Sunday","Details are " & arrSundayEndTime(0) & vbCrLf & arrSundayEndTime(1) & vbCrLf & arrSundayEndTime(2), Null
			End If
			
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strONRPweekdayEndTime")) Then
				strONRPweekdayEndTime = FRM_DS_GetValue(objData, "strONRPweekdayEndTime")
				arrWeekDayEndTime = Split(strONRPweekdayEndTime,":")
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpWkdayEndHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpWkdayEndHH","index:=0"), arrWeekDayEndTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpWkdayEndMM","index:=0"), arrWeekDayEndTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpWkdayEndBN","index:=0"), arrWeekDayEndTime(2)
				FRM_Logger_ReportInfoEvent "Entering the End Time Details for WeekDay","Details are " & arrWeekDayEndTime(0) & vbCrLf & arrWeekDayEndTime(1) & vbCrLf & arrWeekDayEndTime(2), Null
			End If


			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strONRPSatdayEndTime")) Then
				strONRPSatdayEndTime = FRM_DS_GetValue(objData, "strONRPSatdayEndTime")
				arrSaturdayEndTime = Split(strONRPSatdayEndTime,":")
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkOnrpSatHours"), "On"
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSatEndHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSatEndHH","index:=0"), arrSaturdayEndTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSatEndMM","index:=0"), arrSaturdayEndTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbOnrpSatEndBN","index:=0"), arrSaturdayEndTime(2)
				FRM_Logger_ReportInfoEvent "Entering the End Time Details for SaturDay","Details are " & arrSaturdayEndTime(0) & vbCrLf & arrSaturdayEndTime(1) & vbCrLf & arrSaturdayEndTime(2), Null
			End If


		   If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "strONRPsundayEndTime")) Then
				strONRPsundayEndTime = FRM_DS_GetValue(objData, "strONRPsundayEndTime")
				arrSundayEndTime = Split(strONRPsundayEndTime,":")
				GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:=chkOnrpSunHours"), "On"
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatHH","index:=0"), 0  'Save Button is NOT enablaed if entered values are same
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatHH","index:=0"), arrSundayEndTime(0)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatMM","index:=0"), arrSundayEndTime(1)
				GUI_SwfComboBox_Select objSetupContainer.SwfComboBox("swfname:=cmbLDStartSatBN","index:=0"), arrSundayEndTime(2)
				FRM_Logger_ReportInfoEvent "Entering the End Time Details for Sunday","Details are " & arrSundayEndTime(0) & vbCrLf & arrSundayEndTime(1) & vbCrLf & arrSundayEndTime(2), Null
			End If
				
			GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnSave")
			GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
			
		End If 
		
	Else
		FRM_Logger_ReportFailEvent "Lock DeskSetups","Not Navigated to Lock DeskSetup", Null
	End If
	
	Set objSetupContainer = Nothing
	Set objData           = Nothing
	
End Function



'This function is used to navigate Tools Section with the Form what we have selected
'@code
'   BIZ_SecondaryMarket_ToolsNavigation(strToolsOpen)
'@endcode
'@param strToolsOpen - Form name to select

Function BIZ_SecondaryMarket_ToolsNavigation(strToolsOpen)
	
	FRM_Logger_ReportInfoEvent "Navigation to Tools","Start Navigation to Tools- "&strToolsOpen, Null
	wait g_LongWaitMedium
	wait g_LongWaitMedium
	BIZ_Tools_ShowInOrder
	BIZ_Tools_Open(strToolsOpen)

End Function



'This function is used to Enter the pricing information and valdiate the Base rate
'@code
'   BIZ_SecondaryMarket_GetPricing(strRowId,strloantype,strLockType)
'@endcode
'@param strRowId -- Epps detail Row ID
'@param strloantype--Loan type
'@param strLockType--Lock Type

Function BIZ_SecondaryMarket_GetPricing(strRowId,strloantype,strLockType)

	FRM_Logger_ReportInfoEvent "Start Navigation to Lock request Form","navigate to Lock Request Form", Null
	
	Dim objDeskLockData, objRequestDialog,  objData
	
	Set objRequestDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RequestDialog")
	Set objDeskLockData  = FRM_DS_GetTestData("SecondaryMarket", "InputEPPS", strRowId)   
    Set objData 		 = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strloantype)
	
	If Not  Util_String_IsMatch(strLockType, "Re-Lock") Then
		If Util_String_IsMatch(strloantype, "SecondaryMarket_CorrespondentLoan") Then
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Page("MicClass:=Page").WebList("html id:=I_3965","index:=0"),60) Then
				GUI_SwfList_Select SwfWindow("swfname:=MainForm").Page("MicClass:=Page").WebList("html id:=I_3965","index:=0"), "Individual Mandatory"
				FRM_Logger_ReportInfoEvent "Individual best Efforts ","Selected Individual Best efforts in the Lock Request Form", Null
			ElseIf GUI_Object_IsExist(SwfWindow("swfname:=MainForm").Page("MicClass:=Page").WebList("html id:=I_4187","index:=0")) Then
				GUI_SwfList_Select SwfWindow("swfname:=MainForm").Page("MicClass:=Page").WebList("html id:=I_4187","index:=0"), "Mandatory"
				FRM_Logger_ReportInfoEvent "Individual Mandatory ","Selected Individual Mandatory in the Lock Request Form", Null
			End If
			BIZ_Loan_Save()
		End If
	End If	
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Get Pricing")
	GUI_Object_WaitTillExistX objRequestDialog,20
	If GUI_Object_IsExist (objRequestDialog.SwfEdit("swfname:=tbLoginName")) Then
		GUI_SwfEdit_Set objRequestDialog.SwfEdit("swfname:=tbLoginName"), FRM_DS_GetValue(objDeskLockData, "UserName")
		GUI_SwfEdit_Set objRequestDialog.SwfEdit("swfname:=tbPassword"), FRM_DS_GetValue(objDeskLockData, "Password")
		GUI_SwfButton_Click objRequestDialog.SwfButton("swfname:=btnContinue")
		FRM_Logger_ReportInfoEvent "EPPS Details","Details of EPPS Entered", Null	
	End If
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").Link("name:=" & FRM_DS_GetValue(objData, "NoteRate"),"index:=0"), 60
	If GUI_Object_IsExist (SwfWindow("swfname:=MainForm").Page("micclass:=Page").Link("name:=" & FRM_DS_GetValue(objData, "NoteRate"),"index:=0")) Then
		'Now we are able to see the List of rate cards
		GUI_Link_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").Link("name:=" & FRM_DS_GetValue(objData, "NoteRate"),"index:=0")
		If Util_String_IsMatch(strLockType,"New") Then
			GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Update Encompass","index:=0")
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("index:=0"), 60) Then
				GUI_Dialog_Click SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK","index:=0")
			End If
			GUI_Object_IsExistX SwfWindow("swfname:=DifferencesDialog").SwfButton("text:=Close"),60
			If GUI_Object_IsExistX(SwfWindow("swfname:=DifferencesDialog").SwfButton("text:=Close"), 60) Then
				GUI_SwfButton_Click SwfWindow("swfname:=DifferencesDialog").SwfButton("text:=Close")
			End If
		Else
			GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit","index:=0")
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("index:=0"), 60) Then
				GUI_Dialog_Click SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK","index:=0")
			End If
			GUI_Object_IsExistX SwfWindow("swfname:=DifferencesDialog").SwfButton("text:=Close"),60
			If GUI_Object_IsExistX(SwfWindow("swfname:=DifferencesDialog").SwfButton("text:=Close"), 60) Then
				GUI_SwfButton_Click SwfWindow("swfname:=DifferencesDialog").SwfButton("text:=Close")
			End If
		End IF
	End If
	
	Set objDeskLockData  = Nothing
	Set objRequestDialog = Nothing
	Set objData          = Nothing
	
End Function



'This function is used for Submit Request with AutoLock ON and With out Warning Msg
'@code
'   BIZ_SecondaryMarket_SubmitRequest_AutoLockONWithoutWarningMsg()
'@endcode
'@param strloantype - Loan Type

Function BIZ_SecondaryMarket_SubmitRequest_AutoLockONWithoutWarningMsg()
	FRM_Logger_ReportInfoEvent "Submit Request with AutoLock ON and With out Warning Msg","Start Submit Request with AutoLock ON and With out Warning Msg ", Null
	
	GUI_Object_IsExistX SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK","index:=0"),20
	strWarningMsgForLock = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Dialog("index:=0").static("nativeclass:=Static","index:=1"),"text")

	If UTIL_String_IsMatch("The lock has been successfully confirmed.",strWarningMsgForLock) Then
		GUI_Dialog_Click SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK","index:=0")
	End If

	blnDaysExists = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=lblLockInfo"), "text") ' due to <B>Lock Requested</B>
	If (InStr(LCase(blnDaysExists), "days") > 0)  Then 
		FRM_Logger_ReportPassEvent "Lock Request - Update Product Pricing", "Lock icon in the header should be blue and locked with no. of days remaining next to it", Null
	End If
	
	BIZ_Loan_Save()
	BIZ_Loan_Exit True
	
End Function



'This function is used for Submit Request with AutoLock OFF and With Warning Msg
'@code
'   BIZ_SecondaryMarket_SubmitRequest_AutoLockONWithWarningMsg(strloantype)
'@endcode
'@param strloantype Loan Type

Function BIZ_SecondaryMarket_SubmitRequest_AutoLockONWithWarningMsg(strloantype)
	FRM_Logger_ReportInfoEvent "Submit Request with AutoLock ON and With Warning Msg","Start Submit Request with AutoLock ON and With Warning Msg ", Null
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("micclass:=Dialog").Static("index:=1"),120) Then
		strdataText = SwfWindow("swfname:=MainForm").DiaLog("micclass:=Dialog").Static("index:=1").GetROProperty("text")
		If Util_String_IsNotEmpty(strdataText) Then
			GUI_Dialog_Encompass_OK ""
			GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"), 60
			If GUI_Object_IsEXist(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1")) Then
				strdataText1 = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1").GetROProperty("text")
				If Util_String_IsMatch(strdataText1,"The lock has not been confirmed yet.") Then
					GUI_Dialog_Encompass_OK ""
				End If
			End If
			wait 10  'Due to application is taking more time
			If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1")) Then
				GUI_Dialog_Encompass_OK ""
			End If
			GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 60
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
		End If
	End If
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"),60) Then
		strdataText = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1").GetROProperty("text")
		If Util_String_IsMatch(strdataText,"The lock has not been confirmed yet.") Then
			GUI_Dialog_Encompass_OK ""
			GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 60
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
		End If
	End If
	BIZ_SecondaryMarket_SubmitRequestForDeskLockHours strloantype		
	
End Function


'This function is used for Submit Request with AutoLock ON and With Warning Msg
'@code
'   BIZ_SecondaryMarket_SubmitRequestForONRP_AutoLockONWithWarningMsg(strloantype)
'@endcode
'@param strloantype Loan Type

Function BIZ_SecondaryMarket_SubmitRequestForONRP_AutoLockONWithWarningMsg(strloantype)
	FRM_Logger_ReportInfoEvent "Submit Request with AutoLock ON and With Warning Msg","Start Submit Request with AutoLock ON and With Warning Msg ", Null
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("micclass:=Dialog").Static("index:=1"),60) Then
		strdataText = SwfWindow("swfname:=MainForm").DiaLog("micclass:=Dialog").Static("index:=1").GetROProperty("text")
		If Util_String_IsNotEmpty(strdataText) Then
			GUI_Dialog_Encompass_OKX 30, null
			GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"), 60
			If GUI_Object_IsEXist(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1")) Then
				strdataText1 = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1").GetROProperty("text")
				If Util_String_IsMatch(strdataText1,"The lock has not been confirmed yet.") Then
					GUI_Dialog_Encompass_OKX 30, null
				End If
			End If
			wait 10  'Due to application is taking more time
			If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1")) Then
				GUI_Dialog_Encompass_OKX 30, null
			End If
			GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 60
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
		End If
	End If
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1"),60) Then
		strdataText = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass360").Static("index:=1").GetROProperty("text")
		If Util_String_IsMatch(strdataText,"The lock has not been confirmed yet.") Then
			GUI_Dialog_Encompass_OKX 30, null
			GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 60
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
		End If
	End If
	BIZ_SecondaryMarket_SubmitRequestForONRPDeskLockHours strloantype		
	
End Function



'This function is used for Submit Request with AutoLock OFF and With out Warning Msg
'@code
'   BIZ_SecondaryMarket_SubmitRequest_AutoLockOFFWithoutWarningMsg()
'@endcode
'@param

Function BIZ_SecondaryMarket_SubmitRequest_AutoLockOFFWithoutWarningMsg(strLoanNumber)
	FRM_Logger_ReportInfoEvent "Submit Request with AutoLock OFF and With out Warning Msg","Start Submit Request with AutoLock OFF and With out Warning Msg ", Null
	
	Set objMainFormWnd     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 30
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn"), 30
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn")

	FRM_Logger_ReportInfoEvent "Start LoanLock Number","Loan Lock request status Number Validation", Null
	
	GUI_Object_WaitTillExistX objMainFormwnd.SwfObject("swfname:=gvLoans"), 30

	BIZ_Loan_OpenByLoanNumber strLoanNumber			
	FRM_Logger_ReportInfoEvent "Start LoanLock Number","Loan Lock request status Number Validation", Null
	If InStr(GUI_Object_GetPropertyValue(objMainFormwnd.SwfObject("swfname:=lblLockInfo"),"text"),"Lock Requested") > 0 Then
		FRM_Logger_ReportPassEvent "Loan Pricing created", "Loan Lock Request updated with Lock Requested", Null
	Else
		FRM_Logger_ReportFailEvent "Loan Pricing created", "Loan Lock Request not updated with Lock Requested", Null
	End If
	
	BIZ_Loan_Save()
	BIZ_Loan_Exit True
	
End Function



'This function is used for Submit Request with AutoLock OFF and With Warning Msg
'@code
'   BIZ_SecondaryMarket_SubmitRequest_AutoLockOFFWithWarningMsg(strloantype)
'@endcode
'@param strloantype Loan type

Function BIZ_SecondaryMarket_SubmitRequest_AutoLockOFFWithWarningMsg(strloantype)
	FRM_Logger_ReportInfoEvent "Submit Request with AutoLock OFF and With Warning Msg","Start Submit Request with AutoLock OFF and With Warning Msg ", Null
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 30
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
	
	BIZ_SecondaryMarket_SubmitRequestForDeskLockHours strloantype		
	
End Function



'This function is used for Submit Request with AutoLock OFF and With Warning Msg
'@code
'   BIZ_SecondaryMarket_SubmitRequestForONRP_AutoLockOFFWithWarningMsg(strloantype)
'@endcode
'@param strloantype Loan type

Function BIZ_SecondaryMarket_SubmitRequestForONRP_AutoLockOFFWithWarningMsg(strloantype)
	FRM_Logger_ReportInfoEvent "Submit Request with AutoLock OFF and With Warning Msg","Start Submit Request with AutoLock OFF and With Warning Msg ", Null
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0"), 30
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
	
	BIZ_SecondaryMarket_SubmitRequestForONRPDeskLockHours strloantype		
	
End Function



'This function is used to validate the warning message for Desk Lock hours
'@code
'   BIZ_SecondaryMarket_SubmitRequestForDeskLockHours(strLoanType)
'@endcode
'@param strLoanType -  loan number

Function BIZ_SecondaryMarket_SubmitRequestForDeskLockHours(strLoanType)
	
	FRM_Logger_ReportInfoEvent "Start LockDeskHours","Scrpit Name - BIZ_SecondaryMarket_SubmitRequestForDeskLockHours", Null
	
	Dim strWarningMsgForLock,objData
	
	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)  
	
	If Not Util_String_IsMatch(FRM_DS_GetValue(objData, "Channel"),"Banked - Wholesale") then
		strExpWarningMsgForLock = "The Lock Request has been submitted outside of Lock Desk Hours and cannot be accepted. Please reprice and resubmit your Lock Request during Lock Desk Hours."
    Else
		strExpWarningMsgForLock = "Lock Request submitted outside of Lock Desk Hours.  TPO Company in TPO Information tool must be selected in order to be validated for Overnight Rate Protection.  Select the TPO Company and resubmit, or submit the Lock Request during Lock Desk Hours."
	End If
	          
	If GUI_Object_IsEXistX(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),60) Then	
		strWarningMsgForLock = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),"text")
		
		If UTIL_String_IsMatch(strExpWarningMsgForLock,Replace(strWarningMsgForLock,vbCrLf,"")) Then
			FRM_Logger_ReportPassEvent "Warning Message for Desk Lock Hours","Warning Message displayed--"& strWarningMsgForLock, Null
			GUI_Dialog_Encompass_OKX 30, null
			BIZ_CloseFromEnCompass()
		Else
			FRM_Logger_ReportFailEvent "Warning Message for Desk Lock Hours","Warning Message not displayed--"&strWarningMsgForLock, Null
		End if
	Else
			FRM_Logger_ReportFailEvent "Warning Message for Desk Lock Hours","Dialog box Nopt displayed", Null
	End If	
	Set objData = Nothing
	
End Function



'This function is used to validate the warning message for Desk Lock hours
'@code
'   BIZ_SecondaryMarket_SubmitRequestForONRPDeskLockHours(strLoanType)
'@endcode
'@param strLoanType -  loan number

Function BIZ_SecondaryMarket_SubmitRequestForONRPDeskLockHours(strLoanType)
	
	FRM_Logger_ReportInfoEvent "Start LockDeskHours","Scrpit Name - BIZ_SecondaryMarket_SubmitRequestForONRPDeskLockHours", Null
	
	Dim strWarningMsgForLock,objData
	
	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)  
	
	strExpWarningMsgForLock = "Lock Request submitted outside of Overnight Rate Protection window. Lock Request was not accepted. Please reprice and resubmit your Lock Request during normal Lock Desk Hours."
	
	If GUI_Object_IsEXistX(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),60) Then	
		strWarningMsgForLock = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Dialog("text:=EnCompass").static("nativeclass:=Static","index:=1"),"text")
		
		If UTIL_String_IsMatch(strExpWarningMsgForLock,Replace(strWarningMsgForLock,vbCrLf,"")) Then
			FRM_Logger_ReportPassEvent "Warning Message for Desk Lock Hours","Warning Message displayed--"& strWarningMsgForLock, Null
			GUI_Dialog_Encompass_OKX 30, null
			BIZ_CloseFromEnCompass()
		Else
			FRM_Logger_ReportFailEvent "Warning Message for Desk Lock Hours","Warning Message not displayed--"&strWarningMsgForLock, Null
		End if
	End If	
	Set objData = Nothing
	
End Function



'This function is used to Loan lock status verification
'@code
'   BIZ_SecondaryMarket_LoanStatus(Obj,strLoanNumber,strStatusText)
'@endcode
'@param Obj - Object of the Table
'@param strLoanNumber- Loan Number
'@param strStatusText- status need to verify

Function BIZ_SecondaryMarket_LoanStatus(Obj,strLoanNumber,strStatusText)
	
	FRM_Logger_ReportInfoEvent "Start LoanLock Status","Loan Status Verification", Null
	
	Dim intRowIndex
	
	intRowIndex = GUI_List_GetRowIndex(Obj, "Loan Number", strLoanNumber)
	strRequststatus = GUI_List_GetCellData(Obj,intRowIndex, 6)
	
	If UTIL_String_IsMatch(strRequststatus,strStatusText) Then
		FRM_Logger_ReportPassEvent "Lock Request","Lock Request status Changed. Actual Value:- "&strRequststatus&" Expected Value:- "&strStatusText, Null
	Else
		FRM_Logger_ReportFailEvent "Lock Request","Lock Request status not Changed. Actual Value:- "&strRequststatus&" Expected Value:- "&strStatusText, Null
	End If

End Function



'This function is used for Confirm Request with AutoLock ON and With out Warning Msg
'@code
'   BIZ_SecondaryMarket_ConfirmRequest_AutoLockONWithoutWarningMsg(strloantype,strLOckTYpe)
'@endcode
'@param strloantype - Loan type
'@param strLockType - Lock Type

Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockONWithoutWarningMsg(strloantype, strLockType)
	FRM_Logger_ReportInfoEvent "Confirm Request with AutoLock ON and With out Warning Msg","Start Confirm Request with AutoLock ON and With out Warning Msg ", Null
	
	BIZ_SecondaryMarket_New_ConformRequestForAutoLockON strloantype, strLockType

	BIZ_SecondaryMarket_AlertAndLogValidation(strLockType)	

	blnDaysExists = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=lblLockInfo"), "text")
	If (InStr(LCase(blnDaysExists), "days") > 0)  Then 
		FRM_Logger_ReportPassEvent "Lock Request - Update Product Pricing", "Lock icon in the header should be blue and locked with no. of days remaining next to it", Null
	End If
	wait 10
	BIZ_Loan_Save()
	BIZ_Loan_Exit True
	
End Function



'This function is used to enter the details of the Selling and buying side details
'@code
'   BIZ_SecondaryMarket_New_ConformRequestForAutoLockON(strLoanType, strLockType)
'@endcode
'@param strLoanType -Loan Type
'@param strLOckTYpe - Lock Type

Function BIZ_SecondaryMarket_New_ConformRequestForAutoLockON(strLoanType, strLockType)

	FRM_Logger_ReportInfoEvent "Start Navigation to Lock submit request Form","click on Submit Request Form", Null
		
	Dim objGridStatus,objBuySellForm,objData,strApplicationDate, objTestData, strModifyAppliationDate, sNExpiratDate, iNDays, strBaseRate
	
	'Click on Lock Request
	Set objGridStatus  = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridSnapshot")
	Set objBuySellForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm")
	Set objCOmpareWdw = objBuySellForm.SwfWindow("swfname:=LockSnapshotCompareForm")
	Set objData        = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)
	
	If Util_String_IsMatch(strLoanType, "SecondaryMarket_CorrespondentLoan") Then
		intRowIndexNew =GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridSnapshot"), "Status", "Locked")
		intRowIndexOld =GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridSnapshot"), "Status", "Old Lock")
		if intRowIndexNew>=0 and intRowIndexOld>=0 Then
			FRM_Logger_ReportPassEvent "Correspondent Loan Locks", "Two Locks displayed in the Secondary Registration for AutoLock On", Null
		End If
	Else
		intRowIndexNew =GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridSnapshot"), "Status", "Locked")
		if intRowIndexNew>=0 Then
			FRM_Logger_ReportPassEvent "Loan Locks in Secondary Registration", "Auto Lock details displayed in secondary Registraion", Null
		End If
	End IF
	
	GUI_List_ActOnRow objGridStatus, intRowIndexNew+1, False, False, False, "single"
	
	'Validate the Buy Side Data
	If Util_String_IsMatch(strLockType,"Re-Lock") Then
		GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=txtBuySideRequestedType","index:=0"),"Re-Lock","Request Type"
	Else
		GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=txtBuySideRequestedType","index:=0"),"Lock","Request Type"
	End If
	
	GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=txtBuyLockDays","index:=1"),"30","Days"
	If Not Util_String_IsMatch(strLockType,"Re-Lock") Then
		strApplicationDate = FRM_DS_GetValue(objData, "ApplicationDate")	
		GUI_Object_ValidateTextAsDate objBuySellForm.SwfEdit("swfname:=COMBOFIELD2149","index:=0"),strApplicationDate,"Date"
		strExpiratDate = DateAdd("d","29",strApplicationDate)
		GUI_Object_ValidateTextAsDate objBuySellForm.SwfEdit("swfname:=COMBOFIELD2151","index:=0"),strExpiratDate,"Expiration Date"
	End IF
	
	Set objTestData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strloantype)
	strBaseRate = FRM_DS_GetValue(objTestData, "NoteRate")
	GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=textBoxRate1","index:=0"),strBaseRate,"Basic Rate"
	FRM_Logger_ReportPassEvent "Validations for Buy Sell Side","Validations done for BuySide", Null
	
	If GUI_Object_IsExistX(objBuySellForm.SwfButton("swfname:=btnLockConfirm"), 60) Then
		GUI_SwfButton_Click objBuySellForm.SwfButton("swfname:=btnLockConfirm")
		FRM_Logger_ReportInfoEvent "Lock and Confirm","Lock and Conform Clicked", Null
	End If	
	
	If GUI_Object_IsExistX(objCOmpareWdw.SwfButton("swfname:=btnConfirm","index:=0"), 60) Then
		GUI_SwfButton_Click objCOmpareWdw.SwfButton("swfname:=btnConfirm","index:=0")
		FRM_Logger_ReportInfoEvent "Difference Validation","Difference message Exist", Null
	End IF
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfWindow("swfname:=DifferencesChangeDialog").SwfButton("swfname:=button1"), 60) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfWindow("swfname:=DifferencesChangeDialog").SwfButton("swfname:=button1")
		FRM_Logger_ReportInfoEvent "Difference Validation","Difference message Exist", Null
	End IF

	If GUI_Object_isExistX(objBuySellForm.Dialog("text:=Encompass").WinButton("text:=OK"), 60) Then
		GUI_Dialog_Click objBuySellForm.Dialog("text:=Encompass").WinButton("text:=OK")
		FRM_Logger_ReportInfoEvent "Conformation message","EnCompass Conformation Message displayed", Null
	End If
	
	Set objGridStatus  = Nothing
	Set objBuySellForm = Nothing
	Set objData        = Nothing
	Set objTestData    = Nothing
	
End Function



'This function is used for Confirm Request with AutoLock OFF and With out Warning Msg
'@code
'   BIZ_SecondaryMarket_ConfirmRequest_AutoLockOFFWithoutWarningMsg(strloantype,strLockType)
'@endcode
'@param strloantype - Loan type
'@param strLockType - LockType

Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockOFFWithoutWarningMsg(strloantype, strLockType)
	FRM_Logger_ReportInfoEvent "Confirm Request with AutoLock OFF and With out Warning Msg","Start Confirm Request with AutoLock OFF and With out Warning Msg ", Null
	
	BIZ_SecondaryMarket_New_ConformRequest strloantype,strLockType
	
	'BIZ_SecondaryMarket_AlertAndLogValidation(strLockType)
	
	blnDaysExists = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=lblLockInfo"), "text")
	If (InStr(LCase(blnDaysExists), "days") > 0)  Then 
		FRM_Logger_ReportPassEvent "Lock Request - Update Product Pricing", "Lock icon in the header should be blue and locked with no. of days remaining next to it", Null
	End If
	
	BIZ_Loan_Save()
	BIZ_Loan_Exit True
	
End Function



'This function is used to enter the details of the Selling and buying side details
'@code
'   BIZ_SecondaryMarket_New_ConformRequest(strloantype,strLockType)
'@endcode
'@param strloantype---Type of the Loan
'@paramstrLockType----Lock Type

Function BIZ_SecondaryMarket_New_ConformRequest(strloantype,strLockType)

	FRM_Logger_ReportInfoEvent "Start Navigation to Lock submit request Form","click to Lock submit Request Form", Null
		
	Dim objGridStatus,objBuySellForm,objData,strApplicationDate, objTestData, strModifyAppliationDate, sNExpiratDate, iNDays, strBaseRate
	
	'Click on Lock Request
	Set objGridStatus  = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridSnapshot")
	Set objBuySellForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm")
	Set objData        = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strloantype)
	
	intRowIndexNew =GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridSnapshot"), "Status", "Requested")
	If intRowIndexNew>=0 Then
		FRM_Logger_ReportPassEvent "Loan Locks in Secondary Registration", "Auto Lock details displayed in secondary Registraion", Null
	End If
	
	GUI_List_ActOnRow objGridStatus, intRowIndexNew+1, False, False, False, "single"
	FRM_Logger_ReportInfoEvent "Click on Secondary Registration","Clicked on Secondary Registration SnapShot", Null
	
	If Not Util_String_IsMatch(strLockType,"Extend") Then
		GUI_SwfButton_Click objBuySellForm.SwfButton("swfname:=btnCopyRequest")
		FRM_Logger_ReportInfoEvent "Click on Copy Button Request","Clicked on Copy Button Request", Null
	
		GUI_SwfButton_Click objBuySellForm.SwfButton("swfname:=btnCopyBuy")
		FRM_Logger_ReportInfoEvent "Click on Copy Buy Request","Clicked on Copy Buy Request", Null
	End IF
	'Validate the Buy Side Data
	If Util_String_IsMatch(strLockType,"Re-Lock") Then
		GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=txtBuySideRequestedType","index:=0"),"Re-Lock","Request Type"
	ElseIf Util_String_IsMatch(strLockType,"New") Then
		GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=txtBuySideRequestedType","index:=0"),"Lock","Request Type"
	ElseIf Util_String_IsMatch(strLockType,"Extend") Then
		GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=txtBuySideRequestedType","index:=0"),"Extension","Request Type"
	End If
	GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=textBox1","index:=1"),"Pro Sec","Requested By"

	Set objTestData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strloantype)
	strBaseRate = FRM_DS_GetValue(objTestData, "NoteRate")
	GUI_Object_ValidateText objBuySellForm.SwfEdit("swfname:=textBoxRate1","index:=0"),strBaseRate,"Basic Rate"
	
	GUI_Object_IsExistX objBuySellForm.SwfButton("swfname:=btnLockConfirm"), 30
	GUI_SwfButton_Click objBuySellForm.SwfButton("swfname:=btnLockConfirm")
	FRM_Logger_ReportInfoEvent "Click on Lock Confirm Button Request","Clicked on Lock Confirm Button", Null
	If GUI_Object_IsExistX(objBuySellForm.SwfWindow("swfname:=LockSnapshotCompareForm").SwfButton("swfname:=btnConfirm"), 30) Then
		GUI_SwfButton_Click objBuySellForm.SwfWindow("swfname:=LockSnapshotCompareForm").SwfButton("swfname:=btnConfirm")
		FRM_Logger_ReportInfoEvent "Click on Conform Button Request","Clicked on Conform Button Request", Null
	End If
	If GUI_Object_IsExistX(objBuySellForm.SwfWindow("swfname:=DifferencesChangeDialog").SwfButton("swfname:=button1","index:=0"), 30) Then
		GUI_SwfButton_Click objBuySellForm.SwfWindow("swfname:=DifferencesChangeDialog").SwfButton("swfname:=button1","index:=0")
		FRM_Logger_ReportInfoEvent "Click on Diference Dialog Request","Clicked on Diference Dialog Request", Null
	End If
	If GUI_Object_IsExistX(objBuySellForm.Dialog("text:=Encompass").WinButton("text:=OK"), 30) Then
		GUI_Dialog_Click objBuySellForm.Dialog("text:=Encompass").WinButton("text:=OK")
		FRM_Logger_ReportInfoEvent "Click on DiaLog OK Button","Clicked on DiaLog OK Button", Null
	End If
	If Util_String_IsMatch(strloantype, "SecondaryMarket_CorrespondentLoan") Then
		intRowIndexNew =GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridSnapshot"), "Status", "Locked")
		intRowIndexOld =GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridSnapshot"), "Status", "Old Lock")
		if intRowIndexNew>=0 and intRowIndexOld>=0 Then
			FRM_Logger_ReportPassEvent "Correspondent Loan Locks", "Two Locks displayed in the Secondary Registration for AutoLock On", Null
		End If
	Else
		intRowIndexNew =GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridSnapshot"), "Status", "Locked")
		if intRowIndexNew>=0 Then
			FRM_Logger_ReportPassEvent "Loan Locks in Secondary Registration", "Auto Lock details displayed in secondary Registraion", Null
		End If
	End IF
	
	Set objGridStatus  = Nothing
	Set objBuySellForm = Nothing
	Set objData        = Nothing
	Set objTestData    = Nothing
	
End Function



'This function is used to validate the Alert and Log
'@code
'   Function BIZ_SecondaryMarket_AlertAndLogValidation(strLockType)
'@endcode
'@param  strLockType - Lock Type

Function BIZ_SecondaryMarket_AlertAndLogValidation(strLockType)

	FRM_Logger_ReportInfoEvent "Alert and Log Validation","Alert and Log validation verification started", Null
	
	Dim objAlerts, objLog,iRowNumbers
	
	Set objAlerts = SwfWindow("swfname:=Mainform").SwfObject("swfname:=gvAlerts")
	Set objLog    = SwfWindow("swfname:=Mainform").SwfObject("swfname:=gvLog")
	
	iRowNumbers=GUI_List_GetNumberofRows(objAlerts)
	If Util_String_IsMatch(strLockType,"New") Then
		strExpMessage ="Lock confirmed by"
	ElseIf Util_String_IsMatch(strLockType,"Deny") Then
		strExpMessage ="Lock denied by"
	ElseIf Util_String_IsMatch(strLockType,"Cancel") Then
		strExpMessage ="Lock cancellation by"
	End If
	For i = 0 To iRowNumbers-1 Step 1
		strAlertMessage=GUI_List_GetCellData(objAlerts,i,0)
		If instr(strAlertMessage,strExpMessage)>0 Then
			FRM_Logger_ReportPassEvent "Alert Message","Lock Conformation message displayed - "&strAlertMessage, Null
			Exit for
		End If
	Next
	Set objAlerts = Nothing
	Set objLog    = Nothing

End Function



'This function is used to Loan Details validation after submitting the Loan
'@code
'   BIZ_SecondaryMarket_LoanDetails_Validation(strloannumber, strLoanType)
'@endcode
'@param strlnum -  loan number

Function BIZ_SecondaryMarket_LoanDetails_Validation(strloannumber, strLoanType)
	
	FRM_Logger_ReportInfoEvent "Validation of Loan Details","Loan Details validation after submitting the Loan", Null
	
	Dim objHomePage, objDetailsPage, objData
	
	Set objHomePage    = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objDetailsPage = SwfWindow("swfname:=QuickEntryPopupDialog").Page("micclass:=Page")
	Set objData        = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strLoanType)  
	Set objData1       = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strLoanType)  
	
	If SwfWindow("swfname:=MainForm").SwfObject("swfname:=mainPanel").SwfObject("swfname:=pnlLoanInfo").SwfObject("swfname:=lblLockInfo").Exist Then
		strData = SwfWindow("swfname:=MainForm").SwfObject("swfname:=mainPanel").SwfObject("swfname:=pnlLoanInfo").SwfObject("swfname:=lblLockInfo").GetROProperty("text")
		if instr(strData, "29 days")>0 then
			strExpDays = "30"
			strExpBaseRate = DateAdd("d","29",FRM_DS_GetValue(objData, "ApplicationDate"))
		Elseif instr(strData, "89 days")>0 then
			strExpDays = "90"
			strExpBaseRate = DateAdd("d","89",FRM_DS_GetValue(objData, "ApplicationDate"))
		End If
	End If
	GUI_Object_WaitTillExistX objHomePage.WebButton("name:=Detailed Lock","index:=0"), 30

	GUI_SwfButton_Click objHomePage.WebButton("name:=Detailed Lock","index:=0")
	
	GUI_Object_WaitTillExistX objDetailsPage, 30

	If GUI_Object_IsExistX(objDetailsPage, 60) Then
		
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationDate")) Then
			'Validate the Fields in the Entry Quick dialog
			strDatevalue = GUI_Object_GetPropertyValue(objDetailsPage.WebEdit("html id:=TextBox2"),"value")
			strDateExpValue = BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "ApplicationDate"))
			FRM_VerifyEqual strDatevalue,strDateExpValue, "Lock Date", "Lock date validated"
		End If
		
		strDaysvalue = GUI_Object_GetPropertyValue(objDetailsPage.WebEdit("html id:=TextBox3"),"value")
		FRM_VerifyEqual strDaysvalue,strExpDays,"Lock Days","Lock Days validated successfully"
		
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationDate")) Then
			strDateExpValue = BIZ_SecondaryMarket_ConvertDate(strExpBaseRate)
			strExpireDatevalue = GUI_Object_GetPropertyValue(objDetailsPage.WebEdit("html id:=TextBox4"),"value")
			FRM_VerifyEqual strExpireDatevalue,strDateExpValue,"Lock Expiration Date","Lock Expiration Date validated successfully"
		End If
		
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplicationDate")) Then
			strDateExpValue = BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "ApplicationDate"))
			strExpireDatevalue = GUI_Object_GetPropertyValue(objDetailsPage.WebEdit("html id:=l_2089"),"value")
			FRM_VerifyEqual strExpireDatevalue,strDateExpValue,"Lock Base rate Date","Lock Base Rate Date validated successfully"
		End If

		strBaseRatePrice = GUI_Object_GetPropertyValue(objDetailsPage.WebEdit("html id:=TextBox9"),"value")
		FRM_VerifyEqual strBaseRatePrice, FRM_DS_GetValue(objData1, "NoteRate"), "Base Rate", "Note Rate Data validation"
		
		GUI_SwfButton_Click SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose","index:=0")
		BIZ_Loan_Exit False
	
	Else	
		FRM_Logger_ReportFailEvent "Detailed Lock Button","Detailed Lock Button Not exists", Null
	End If
	
	Set objHomePage    = Nothing
	Set objData        = Nothing
	Set objDetailsPage = Nothing
		
End Function



'This function is used to create the Loan Officer and secondary user
'@code
'   BIZ_SecondaryMarket_PipeLineAndLoanFolderViewCreationsOrValidations(strPipeLineView, strLoanFolder,strRowID, strTemplateName)
'@endcode
'@param

Function BIZ_SecondaryMarket_PipeLineAndLoanFolderViewCreationsOrValidations(strPipeLineView, strLoanFolder, strRowID, strTemplateName)
	
	FRM_Logger_ReportInfoEvent "User Pipeline and Loan Folder View Creation","Start User Pipeline and Loan Folder View Creation", Null
	
	Set objWndMainForm = SwfWindow("swfname:=MainForm")
	Set objWndNewLoan = objWndMainForm.SwfWindow("text:=New Loan","index:=0") 
	Set objLoanTemplateList = objWndNewLoan.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndNewLoan.SwfScrollBar("swfname:=vPanelScrollBar")
		
	BIZ_Nav_SelectPipelineTab()
	
	boolPipeLineViewValue=GUI_SwfComboBox_VerifyItemExists (SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboView"), strPipeLineView)
	boolLoanFolderValue=GUI_SwfComboBox_VerifyItemExists (SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cboFolder"), strLoanFolder)
	
	If not boolLoanFolderValue Then
		BIZ_Settings_CreateLoanFolder strRowID,"Off", "On"
	Else
		FRM_VerifyTrue boolLoanFolderValue, "Loan Folder", strLoanFolder&" Loan Available"
	End If
	
	If boolPipeLineViewValue Then
		FRM_VerifyTrue boolPipeLineViewValue, "PipeLine View", " Administrator - Default View PipeLineView Available"
	End If
	
	GUI_SwfObject_Click objWndMainForm.SwfObject("swfname:=btnNew", "index:=0")
	GUI_Object_WaitTillVisible objWndNewLoan.SwfButton("swfname:=btnSelect","index:=0")
	intRowIndex=GUI_List_GetRowIndex(objLoanTemplateList, "Name", strTemplateName)
	If intRowIndex>=0 Then
		FRM_Logger_ReportPassEvent "Template Existance","Template Already Exists", Null
	Else
		FRM_Logger_ReportInfoEvent "Template Existance","Template not Exists, please execute the mentioned script and continue the execution", Null
	End IF
	
	GUI_SwfButton_Click objWndNewLoan.SwfButton("swfname:=cancelBtn", "index:=0")

End Function



'This function is used to create the Loan Officer and secondary user
'@code
'   BIZ_SecondaryMarket_UserProfileCreationsOrValidations(strLoanOfficer,strSecondaryUser)
'@endcode
'@param strLoanOfficer
'@param strSecondaryUser

Function BIZ_SecondaryMarket_UserProfileCreationsOrValidations(strLoanOfficer,strSecondaryUser)
	
	FRM_Logger_ReportInfoEvent "User Profile Creation","Start User Profile Creation", Null

	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Secondary Setup", "Auto-Lock"
	BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification "AutoLockExclusionRule", "Loan Type"
	BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification "AutoLockExclusionRule", "Property State"
	BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification "AutoLockExclusionRule", "Channel"
	BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification "AutoLockExclusionRule", "Purpose of Loan"
	BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification "AutoLockExclusionRule", "Amortization Type"
	BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification "AutoLockExclusionRule", "Property"
	BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification "AutoLockExclusionRule", "Lien Position"
	BIZ_Nav_HierarchyTree "Company/User Setup", "Personas"
	BIZ_SecondaryMarket_PersonaValidation strLoanOfficer
	BIZ_Nav_HierarchyTree "Company/User Setup", "Organization/Users"
	'Verification of the Users
	BIZ_OrganizationUsers_CreateUser strLoanOfficer
	
	BIZ_Nav_HierarchyTree "Company/User Setup", "Personas"
	BIZ_SecondaryMarket_PersonaValidation strSecondaryUser
	BIZ_Nav_HierarchyTree "Company/User Setup", "Organization/Users"
	BIZ_OrganizationUsers_CreateUser strSecondaryUser
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

End Function



'This function is used to create the Loan Officer and secondary user
'@code
'   BIZ_SecondaryMarket_PersonaValidation(strSecondaryUser)
'@endcode
'@param strSecondaryUser

Function BIZ_SecondaryMarket_PersonaValidation(strSecondaryUser)
	FRM_Logger_ReportInfoEvent "User Profile Creation","Start User Profile Creation", Null
	
	Set objData        = FRM_DS_GetTestData("Settings_LoanSetup", "CustomFields", strSecondaryUser)  
	
	BIZ_Settings_Personas_CreatePersona FRM_DS_GetValue(objData, "PersonaName"), True
	
	Set objData        = Nothing
End Function



'This function is used to Convert the Date into applciation format
'@code
'    BIZ_SecondaryMarket_ConvertDate(strDate)
'@endcode
'@param strDate - date to convert

Function BIZ_SecondaryMarket_ConvertDate(strDate)
	
	FRM_Logger_ReportInfoEvent "Convert Date ","Start Convert Date", Null
	
	arrNewDate = Split(strDate,"/")
	If arrNewDate(0) < 10 and arrNewDate(0) > 0 and Len(arrNewDate(0))<2 Then
		strNewDate = "0" & arrNewDate(0)
	Else
		strNewDate = arrNewDate(0)
	End If
	If arrNewDate(1) < 10 and arrNewDate(1) > 0 and Len(arrNewDate(1))<2  Then
		strNewMonth = "0"&arrNewDate(1)
	Else
		strNewMonth = arrNewDate(1)
	End If
	strNewDatevalue = strNewDate & "/" & strNewMonth & "/" & arrNewDate(2)
	
	BIZ_SecondaryMarket_ConvertDate = strNewDatevalue
	
End Function



'This function is used to deny the lock
'@code
'   BIZ_SecondaryMarket_DenyLock(strLoanNumber)
'@endcode
'@param

Function BIZ_SecondaryMarket_DenyLock(strLoanNumber)
	
	FRM_Logger_ReportInfoEvent "Start Functionality","Scrpit Name - BIZ_SecondaryMarket_DenyLock", Null
	
	Dim objMainFormWnd, objDenyBTN
	
	Set objMainFormWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objDenyBTN     = SwfWindow("swfname:=BuySellForm").SwfButton("swfname:=btnDeny")
	
	GUI_List_ActOnRow objMainFormWnd.SwfObject("swfname:=gridSnapshot"), 1, False, False, False, "single"
	FRM_Logger_ReportPassEvent "Secondary Registration Snapshot","Secondary Registration/Snapshot List form opened", Null
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=BuySellForm").SwfButton("swfname:=btnDeny"),60) then
		FRM_Logger_ReportPassEvent "Deny Lock Button","Deny Lock Button Exists in the Page", Null
		GUI_SwfButton_Click SwfWindow("swfname:=BuySellForm").SwfButton("swfname:=btnDeny")
		GUI_Object_IsExistX SwfWindow("swfname:=BuySellForm").SwfWindow("swfname:=DenialCommentsForm").SwfEditor("swfname:=textBoxComments"), 30
		If GUI_Object_IsExist(SwfWindow("swfname:=BuySellForm").SwfWindow("swfname:=DenialCommentsForm").SwfEditor("swfname:=textBoxComments")) then
			FRM_Logger_ReportPassEvent "Deny Lock Comments","Lock Denial Comments window opened", Null
			GUI_SwfEdit_Type SwfWindow("swfname:=BuySellForm").SwfWindow("swfname:=DenialCommentsForm").SwfEditor("swfname:=textBoxComments"), "Test"
			GUI_SwfButton_Click SwfWindow("swfname:=BuySellForm").SwfWindow("swfname:=DenialCommentsForm").SwfButton("swfname:=btnOK")
			GUI_Object_IsExistX objMainFormWnd.SwfButton("swfname:=btnExtendLock"), 30
			GUI_Object_ValidateDisabled objMainFormWnd.SwfButton("swfname:=btnExtendLock"), "Extend Button"
			GUI_Object_ValidateDisabled objMainFormWnd.SwfButton("swfname:=btnCancelLock"), "Cancel Button"
			GUI_SwfButton_Click objMainFormWnd.SwfButton("swfname:=editBtn")
			FRM_Logger_ReportPassEvent "View Current Lock","View Current Lock Clicked", Null
			GUI_Dialog_Encompass_OK "Secondary Registration cannot find current lock. The current lock might be expired, removed, or cancelled."
			BIZ_SecondaryMarket_ToolsNavigation "Lock Request Form"
			GUI_Object_IsExistX SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Extend Lock","index:=0"), 30
			GUI_Object_ValidateDisabled SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Extend Lock","index:=0"), "Extend Button"
			GUI_Object_ValidateDisabled SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Cancel Lock","index:=0"), "Cancel Button"
			BIZ_SecondaryMarket_AlertAndLogValidation "Deny"
		Else
			FRM_Logger_ReportPassEvent "Deny Lock Comments","Lock Denial Comments window not opened", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Deny Lock Button","Deny Lock Button not Exists in the Page", Null
	End If
	
	BIZ_CloseFromEnCompass()
	
	Set objMainFormWnd = Nothing
	Set objDenyBTN     = Nothing
	
End Function


'This function is used to Cancel the Lock
'@code
'   Function BIZ_SecondaryMarket_CancelLock(strLoanNumber)
'@endcode
'@param strLoanNumber -- Loan Number

Function BIZ_SecondaryMarket_SubmitRequest_CancelLock(strLoanNumber)
	
	FRM_Logger_ReportInfoEvent "Submit Request for Cancel Lock","Start Submit Request for Cancel Lock", Null
	
	Dim objMainFormWnd, objCancelWnd
	
	Set objMainFormWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objCancelWnd   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockCancellationDialog")
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Cancel Lock","index:=0"),60) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Cancel Lock","index:=0")
		FRM_Logger_ReportPassEvent "Click on Cancel Lock ","Clicked on Cancel Lock", Null
		
		If GUI_Object_IsExistX(objCancelWnd.SwfButton("swfname:=btnSubmit"),60) Then
			GUI_SwfButton_Click objCancelWnd.SwfButton("swfname:=btnSubmit")
			FRM_Logger_ReportPassEvent "Click on Rquest cancelataion Lock ","Clicked on cancelataion Lock", Null
			GUI_Dialog_Encompass_OKX 30, null
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn"), 30) then
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn")
			End If
		End If
	End If	
End Function



'This function is used to Cancel the Lock
'@code
'   Function BIZ_SecondaryMarket_ConfirmRequest_CancelLock()
'@endcode
'@param

Function BIZ_SecondaryMarket_ConfirmRequest_CancelLock()
	
	FRM_Logger_ReportInfoEvent "Conform Request for Cancel Lock","Start Conform Request for Cancel Lock", Null
	
	Dim objMainFormWnd
	
	Set objMainFormWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objCancelWnd   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockCancellationDialog")
			
	intRowIndexNew =GUI_List_GetRowIndex(objMainFormWnd.SwfObject("swfname:=gridSnapshot"), "Req. Type", "Cancellation")
	intRowIndexSta =GUI_List_GetRowIndex(objMainFormWnd.SwfObject("swfname:=gridSnapshot"), "Status", "Requested")
	if intRowIndexNew >=0 and intRowIndexSta>=0Then
		FRM_Logger_ReportPassEvent "Cancelled Locks in Secondary Registration", "Cancelled Lock details displayed in secondary Registraion", Null
		GUI_Object_IsExistX objMainFormWnd.SwfButton("swfname:=btnCancelLock","index:=0"),30
		GUI_SwfButton_Click objMainFormWnd.SwfButton("swfname:=btnCancelLock","index:=0")
		
		If GUI_Object_IsExistX(objCancelWnd,30) Then
			FRM_Logger_ReportPassEvent "Cancelled Locks in Secondary Registration", "Cancelled Lock Button clicked in secondary Registraion", Null
			GUI_SwfButton_Click objCancelWnd.SwfButton("swfname:=btnSubmit")
			GUI_Dialog_Encompass_OK "Lock has been cancelled successfully."
			intRowNewIndexNew =GUI_List_GetRowIndex(objMainFormWnd.SwfObject("swfname:=gridSnapshot"), "Req. Type", "Cancellation")
			intRowNewIndexSta =GUI_List_GetRowIndex(objMainFormWnd.SwfObject("swfname:=gridSnapshot"), "Status", "Cancelled")
			if intRowNewIndexNew >=0 and intRowNewIndexSta>=0Then
				FRM_Logger_ReportPassEvent "Cancelled Locks in Secondary Registration", "Cancelled Lock details displayed in secondary Registraion", Null
			Else
				FRM_Logger_ReportFailEvent "Cancelled Locks in Secondary Registration", "Cancelled Lock details displayed in secondary Registraion", Null
			End If
		Else
			FRM_Logger_ReportPassEvent "Cancelled Locks in Secondary Registration", "Cancelled Lock Button not clicked in secondary Registraion", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Cancelled Locks in Secondary Registration", "Cancelled Lock not  details displayed in secondary Registraion", Null
	End If
	Set objMainFormWnd = Nothing
	
End Function



'This function is used to Cancel the Lock
'@code
'   Function BIZ_SecondaryMarket_ConfirmRequest_CancelLock_AutoLockON()
'@endcode
'@param

Function BIZ_SecondaryMarket_ConfirmRequest_CancelLock()
	
	FRM_Logger_ReportInfoEvent "Start Functionality","Scrpit Name - BIZ_SecondaryMarket_ConfirmRequest_CancelLock", Null
	
	Dim objMainFormWnd
	
	Set objMainFormWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objCancelWnd   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockCancellationDialog")
			
	intRowIndexNew =GUI_List_GetRowIndex(objMainFormWnd.SwfObject("swfname:=gridSnapshot"), "Req. Type", "Cancellation")
	if intRowIndexNew >=0 Then
		FRM_Logger_ReportPassEvent "Cancelled Locks in Secondary Registration", "Cancelled Lock details displayed in secondary Registraion", Null
	Else
		FRM_Logger_ReportFailEvent "Cancelled Locks in Secondary Registration", "Cancelled Lock details displayed in secondary Registraion", Null
	End If
	BIZ_Loan_Save()
	BIZ_Loan_Exit True
	Set objMainFormWnd = Nothing
	
End Function


'This function is used to Submit Request for extend
'@code
'   BIZ_SecondaryMarket_SubmitRequest_ExtendLock(strLoanNumber, strRowID)
'@endcode
'@param strLoanNumber -  loan number
'@param strRowID -  Is used to get excel data

Function BIZ_SecondaryMarket_SubmitRequest_ExtendLock(strRowID)
	
	FRM_Logger_ReportInfoEvent "Submit Request for extend","Start Submit Request for extend", Null
	
	Dim objMainFormWnd, objExtensionWindow, objBTNExtend
	
	Set objMainFormWnd     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objExtensionWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockExtensionDialog")
	Set objBTNExtend       = SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Extend Lock","index:=0")
	Set objData            = FRM_DS_GetTestData("SecondaryMarket", "LockExtend", strRowID)
	
	If GUI_Object_IsExistX(objBTNExtend,30) Then
		GUI_SwfButton_Click objBTNExtend
		FRM_Logger_ReportPassEvent "Click on Extend Lock ","Clicked on Extend Lock", Null
		
		If GUI_Object_IsExistX(objExtensionWindow, 30) Then
			FRM_Logger_ReportPassEvent "Extend Dialog Pop Up Window","Extended PopUpWindow is displayed", Null
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "intDaysToExtend")) Then
				If GUI_Object_IsExist(objExtensionWindow.SwfComboBox("swfname:=cmbLockExtension","index:=0")) Then
					GUI_SwfComboBox_Select objExtensionWindow.SwfComboBox("swfname:=cmbLockExtension","index:=0"), FRM_DS_GetValue(objData, "intDaysToExtend")
				ElseIf GUI_Object_IsExist(objExtensionWindow.SwfEdit("swfname:=txtLockExtension","index:=0")) Then
					GUI_SwfEdit_Set objExtensionWindow.SwfEdit("swfname:=txtLockExtension","index:=0"), FRM_DS_GetValue(objData, "intDaysToExtend")
				End If
				FRM_Logger_ReportInfoEvent "Extended Days","Days To Extend is entered- "&FRM_DS_GetValue(objData, "intDaysToExtend"), Null
			End If
			GUI_SwfButton_Click objExtensionWindow.SwfButton("swfname:=btnExtensionRequest","index:=0")
			FRM_Logger_ReportInfoEvent "Extend Request Submit","Extended REquest Submitted", Null
			if GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockExtensionDialog").DiaLog("text:=Encompass"),60) Then
				strdataText = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockExtensionDialog").DiaLog("text:=Encompass").Static("index:=1").GetROProperty("text")
			Else
				strdataText = SwfWindow("swfname:=MainForm").DiaLog("text:=Encompass").Static("index:=1").GetROProperty("text")
			End If
		If Util_String_IsMatch(strdataText,"The lock extension has been successfully confirmed.") or Util_String_IsMatch(strdataText,"Lock Extension Request has been submitted successfully.") Then
			GUI_Dialog_Encompass_OK ""
			FRM_Logger_ReportInfoEvent "Extend Request Confirmation Dialog","Extend Request Confirmation Dialog Clicked", Null
			wait 15
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn")
		End If
		Else
			FRM_Logger_ReportFailEvent "Extend Request Window","Extend Request Window not exists", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Extend Button","Extend Button not exists", Null
	End If
			
	Set objMainFormWnd     = Nothing
	Set objExtensionWindow = Nothing
	Set objBTNExtend       = Nothing
	Set objData            = Nothing
	
End Function



'This function is used to Submit Request for extend
'@code
'   BIZ_SecondaryMarket_SubmitRequest_ExtendLock(strLoanNumber, strRowID)
'@endcode
'@param strLoanNumber -  loan number
'@param strRowID -  Is used to get excel data

Function BIZ_SecondaryMarket_SubmitRequest_AutoLockON_ExtendLock(strRowID)
	
	FRM_Logger_ReportInfoEvent "Submit Request for extend","Start Submit Request for extend", Null
	
	Dim objMainFormWnd, objExtensionWindow, objBTNExtend
	
	Set objMainFormWnd     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objExtensionWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockExtensionDialog")
	Set objBTNExtend       = SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Extend Lock","index:=0")
	Set objData            = FRM_DS_GetTestData("SecondaryMarket", "LockExtend", strRowID)
	
	If GUI_Object_IsExistX(objBTNExtend,30) Then
		GUI_SwfButton_Click objBTNExtend
		FRM_Logger_ReportPassEvent "Click on Extend Lock ","Clicked on Extend Lock", Null
		
		If GUI_Object_IsExistX(objExtensionWindow,30) Then
			FRM_Logger_ReportPassEvent "Extend Dialog Pop Up Window","Extended PopUpWindow is displayed", Null
			If NOT Util_string_IsEmpty(FRM_DS_GetValue(objData, "intDaysToExtend")) Then
				If GUI_Object_IsExist(objExtensionWindow.SwfComboBox("swfname:=cmbLockExtension","index:=0")) Then
					GUI_SwfComboBox_Select objExtensionWindow.SwfComboBox("swfname:=cmbLockExtension","index:=0"), FRM_DS_GetValue(objData, "intDaysToExtend")
				ElseIf GUI_Object_IsExist(objExtensionWindow.SwfEdit("swfname:=txtLockExtension","index:=0")) Then
					GUI_SwfEdit_Set objExtensionWindow.SwfEdit("swfname:=txtLockExtension","index:=0"), FRM_DS_GetValue(objData, "intDaysToExtend")
				End If
				FRM_Logger_ReportInfoEvent "Extended Days","Days To Extend is entered- "&FRM_DS_GetValue(objData, "intDaysToExtend"), Null
			End If
			GUI_SwfButton_Click objExtensionWindow.SwfButton("swfname:=btnExtensionRequest","index:=0")
			FRM_Logger_ReportInfoEvent "Extend Request Submit","Extended REquest Submitted", Null
			if GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockExtensionDialog").DiaLog("text:=Encompass"),60) Then
				strdataText = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockExtensionDialog").DiaLog("text:=Encompass").Static("index:=1").GetROProperty("text")
			Else
				strdataText = SwfWindow("swfname:=MainForm").DiaLog("text:=Encompass").Static("index:=1").GetROProperty("text")
			End If
			If Util_String_IsMatch(strdataText,"The lock extension has been successfully confirmed.") or Util_String_IsMatch(strdataText,"Lock Extension Request has been submitted successfully.") Then
				GUI_Dialog_Encompass_OK ""
				FRM_Logger_ReportInfoEvent "Extend Request Confirmation Dialog","Extend Request Confirmation Dialog Clicked---"&strdataText, Null
			End If
		Else
			FRM_Logger_ReportFailEvent "Extend Request Window","Extend Request Window not exists", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Extend Button","Extend Button not exists", Null
	End If
			
	Set objMainFormWnd     = Nothing
	Set objExtensionWindow = Nothing
	Set objBTNExtend       = Nothing
	Set objData            = Nothing
	
End Function



'This function is used to Conform Request for extend
'@code
'   BIZ_SecondaryMarket_ConformRequest_ExtendLock(strLoanNumber, strRowID)
'@endcode
'@param strLoanNumber -  loan number
'@param strRowID -  Is used to get excel data

Function BIZ_SecondaryMarket_ConformRequest_ExtendLock(strloantype, strRowID, strLockType)
	
	FRM_Logger_ReportInfoEvent "Submit Request for extend","Start Submit Request for extend", Null
	
	Dim objMainFormWnd, objExtensionWindow, objBTNExtend
	
	Set objMainFormWnd     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objExtensionWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockExtensionDialog")
	Set objBTNExtend       = SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Extend Lock","index:=0")
	Set objData            = FRM_DS_GetTestData("SecondaryMarket", "LockExtend", strRowID)
	
	intRowIndexNew =GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gridSnapshot"), "Req. Type", "Extension")
	If intRowIndexNew>=0 Then
		FRM_Logger_ReportPassEvent "Extend Locks in Secondary Registration", "Extend Lock details displayed in secondary Registraion", Null
	Else
		FRM_Logger_ReportFailEvent "Extend Locks in Secondary Registraion", "Extend Lock details not displayed in secondary Registraion", Null
	End If
	blnDaysExists = GUI_Object_GetPropertyValue(objMainFormWnd.SwfObject("swfname:=lblLockInfo"), "text")
	
	If (InStr(LCase(blnDaysExists), "days") > 0)  Then 
		FRM_Logger_ReportPassEvent "Lock Request - Update Product Pricing", "Lock icon in the header should be blue and locked with no. of days remaining next to it", Null
	End If
			
	BIZ_Loan_Save()
	BIZ_Loan_Exit True
	
	Set objMainFormWnd     = Nothing
	Set objExtensionWindow = Nothing
	Set objBTNExtend       = Nothing
	Set objData            = Nothing
	
End Function



'This function is used to Submit Request for ReLock when AutoOff
'@code
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockOFF_ReLock(strLoanNumber,strLoanType,strRowID)
'@endcode
'@param strLoanNumber - Loan Number
'@param strLoanType  - Loan Type
'@param strRowID     - Row id for Data

Function BIZ_SecondaryMarket_SubmitRequest_AutoLockOFF_ReLock(strLockType,strLoanType,strLoanNumber,strRowID,strEPPSID)
	
	FRM_Logger_ReportInfoEvent "Submit Request for ReLock when AutoOff","Start Submit Request for ReLock when AutoOff", Null
	
	Dim objMainFormWnd, objDeskLockData 
	
	Set objMainFormWnd  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objLockPage     = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objDeskLockData = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strRowID)   
   
	If GUI_Object_IsExistX(objLockPage.WebList("html id:=l_3841","index:=0"),60) Then
		GUI_WebList_Select objLockPage.WebList("html id:=l_3841","index:=0"), "Re-Lock"
		FRM_Logger_ReportPassEvent "Select on Re Lock ","Selected on RE Lock", Null
		strBaseRate = GUI_Object_GetPropertyValue(objLockPage.WebEdit("html id:=l_2092"),"value")
		strLockDate = GUI_Object_GetPropertyValue(objLockPage.WebEdit("html id:=l_2089"),"value")
		strExpiDate = GUI_Object_GetPropertyValue(objLockPage.WebEdit("html id:=l_2091"),"value")		
		If Util_String_IsNotEmpty(strBaseRate) and Util_String_IsNotEmpty(strLockDate) and Util_String_IsNotEmpty(strExpiDate) Then 
			FRM_Logger_ReportPassEvent "After ReLock Data updation","Field values should get populated under Rate Lock Request form", Null
			BIZ_SecondaryMarket_GetPricing strEPPSID,strLoanType,strLockType
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("micclass:=Page").WebButton("name:=Submit Request","index:=0")
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn"), 30) then
				GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn")
				FRM_Logger_ReportInfoEvent "Start LoanLock Number","Loan Lock request status Number Validation", Null
				If GUI_Object_IsExistX(objMainFormwnd.SwfObject("swfname:=gvLoans"), 30) Then
					BIZ_Loan_OpenByLoanNumber strLoanNumber
					FRM_Logger_ReportInfoEvent "Start LoanLock Number","Loan Lock request status Number Validation", Null
					wait 15
					blnDaysExists = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=lblLockInfo"), "text") ' due to <B>Lock Requested</B>
					If InStr(blnDaysExists,"days") > 0 Then
						FRM_Logger_ReportPassEvent "Loan Pricing created", "Loan Lock Request updated with Lock Requested", Null
					Else
						FRM_Logger_ReportFailEvent "Loan Pricing created", "Loan Lock Request not updated with Lock Requested", Null
					End If
				Else
					FRM_Logger_ReportFailEvent "PipeLine Page ", "Pipeline page not opened", Null
				End If
			Else
				FRM_Logger_ReportFailEvent "Submit request Button", "Submit request Button not exists", Null 
			End If
		Else
			FRM_Logger_ReportFailEvent "After ReLock Selection", "Data not populated", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Re-Lock Weblist","Re-Lock Web List is not exists", Null
	End If

	Set objMainFormWnd  = Nothing
	Set objLockPage     = Nothing
	Set objDeskLockData = Nothing   
    
End Function				


	
'This function is used to Submit Request for ReLock when AutoOn
'@code
'   Function BIZ_SecondaryMarket_SubmitRequest_AutoLockON_ReLock(strLoanNumber,strLoanType,strRowID)
'@endcode
'@param strLoanNumber - Loan Number
'@param strLoanType  - Loan Type
'@param strRowID     - Row id for Data

Function BIZ_SecondaryMarket_SubmitRequest_AutoLockON_ReLock(strLoanType,strLockType,strEPPSID,strRowID)
	
	FRM_Logger_ReportInfoEvent "Submit Request for ReLock when AutoOn","Start Submit Request for ReLock when AutoOn", Null
	
	Dim objMainFormWnd, objDeskLockData 
	
	Set objMainFormWnd  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objLockPage     = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objDeskLockData = FRM_DS_GetTestData("SecondaryMarket", "LockDeskHours", strRowID)   
    
	If GUI_Object_IsExistX(objLockPage.WebList("html id:=l_3841","index:=0"),60) Then
		GUI_WebList_Select objLockPage.WebList("html id:=l_3841","index:=0"), "Re-Lock"
		FRM_Logger_ReportPassEvent "Select on Re Lock ","Selected on RE Lock", Null
		strBaseRate = GUI_Object_GetPropertyValue(objLockPage.WebEdit("html id:=l_2092"),"value")
		strLockDate = GUI_Object_GetPropertyValue(objLockPage.WebEdit("html id:=l_2089"),"value")
		strExpiDate = GUI_Object_GetPropertyValue(objLockPage.WebEdit("html id:=l_2091"),"value")		
		If Util_String_IsNotEmpty(strBaseRate) and Util_String_IsNotEmpty(strLockDate) and Util_String_IsNotEmpty(strExpiDate) Then 
			FRM_Logger_ReportPassEvent "After ReLock Data updation","Field values should get populated under Rate Lock Request form", Null
			BIZ_SecondaryMarket_GetPricing strEPPSID,strLoanType,strLockType
			If GUI_Object_IsEXistX(SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK","index:=0"), 30) Then
				GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK","index:=0")
				strWarningMsgForLock = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Dialog("index:=0").static("nativeclass:=Static","index:=1"),"text")
				If UTIL_String_IsMatch("The lock has been successfully confirmed.",strWarningMsgForLock) Then
					GUI_Dialog_Click SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=OK","index:=0")
				End If	
			End If
			wait 5
			blnDaysExists = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=lblLockInfo"), "text") ' due to <B>Lock Requested</B>
			If (InStr(LCase(blnDaysExists), "days") > 0)  Then 
				FRM_Logger_ReportPassEvent "Lock Request - Update Product Pricing", "Lock icon in the header should be blue and locked with no. of days remaining next to it", Null
			End If
			BIZ_Loan_Save()
			BIZ_Loan_Exit True
		Else
			FRM_Logger_ReportFEveilnt "After ReLock Data updation","Field values should not populated under Rate Lock Request form", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "ReLock Selection List","ReLock Selection List Field not exists", Null
	End IF
	
	Set objMainFormWnd  = Nothing
	Set objLockPage     = Nothing
	Set objDeskLockData = Nothing

End Function	
 
 

'This function is used to Confirm Request for ReLock when AutoOn
'@code
'   Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockON_ReLock(strLoanType, strLockType)
'@endcode
'@param strLoanNumber - Loan Number
'@param strLoanType  - Loan Type
'@param strRowID     - Row id for Data

Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockON_ReLock(strLoanType, strLockType)
	
	FRM_Logger_ReportInfoEvent "Confirm Request for ReLock when AutoOn","Start Confirm Request for ReLock when AutoOn", Null
	
	BIZ_SecondaryMarket_New_ConformRequestForAutoLockON strLoanType, strLockType
	
	BIZ_Loan_Save()
	BIZ_CloseFromEnCompass()

End Function



'This function is used to Confirm Request for ReLock when AutoOff
'@code
'   Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockOFF_ReLock(strLoanNumber,strLoanType,strRowID)
'@endcode
'@param strLoanNumber - Loan Number
'@param strLoanType  - Loan Type
'@param strRowID     - Row id for Data

Function BIZ_SecondaryMarket_ConfirmRequest_AutoLockOFF_ReLock(strLoanType, strLockType)
	
	FRM_Logger_ReportInfoEvent "Confirm Request for ReLock when AutoOff","Start Confirm Request for ReLock when AutoOff", Null
	
	BIZ_SecondaryMarket_New_ConformRequest strLoanType, strLockType
	
	BIZ_Loan_Save()
	BIZ_Loan_Exit True
	
End Function



'This function is used for TPO Information
'@code
'   Function BIZ_SecondaryMarket_TPOUpdation(strloantype)
'@endcode
'@param strLoanType  - Loan Type

Function BIZ_SecondaryMarket_TPOUpdation(strloantype)
	Set objDeskLockData   = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetHeadInfo", strloantype) 
	Set objTPOForm        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanySelectorForm")
	
	BIZ_Tools_Open "TPO Information"
	FRM_Logger_ReportInfoEvent "TPO Information","TPO selected in the Tools", Null
	GUI_Object_WaitTillExistX  SwfWindow("swfname:=MainForm").Page("MicClass:=Page").WebButton("html id:=btnLookUpComp"), 30
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("MicClass:=Page").WebButton("html id:=btnLookUpComp")
	If GUI_Object_IsExist(objTPOForm) Then
		intRow = GUI_List_GetRowIndex(objTPOForm.SwfObject("swfname:=grd3rdParties"), "Organization Name", FRM_DS_GetValue(objDeskLockData, "TPOName"))
		If intRow >= 0 Then
			GUI_List_ActOnRow objTPOForm.SwfObject("swfname:=grd3rdParties"), intRow+1, True, False, False, "Single"
			GUI_SwfButton_Click objTPOForm.SwfButton("swfname:=btnSelect")
			GUI_Dialog_Encompass_YES ""
			GUI_Dialog_Encompass_OK ""
			GUI_Dialog_Encompass_OK ""
			GUI_Dialog_Encompass_YES ""
			BIZ_Loan_Save()
		Else
			FRM_Logger_ReportFailEvent "TPO Details","TPO Details is not Exists for --"&FRM_DS_GetValue(objDeskLockData, "TPOName"), Null
		End If
	Else
		FRM_Logger_ReportFailEvent "TPO Information Page","TPO Information Page is not Exists", Null
	End If
End Function

Function BIZ_SecondaryMarket_ReviseLock(strLoanNumber)
	
	FRM_Logger_ReportInfoEvent "Start Functionality","Scrpit Name - BIZ_SecondaryMarket_ReviseLock", Null
	
	Dim objMainFormWnd 
	
	Set objMainFormWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	
	GUI_Object_IsExistX objMainFormWnd.SwfObject("swfname:=gridSnapshot"), 30
	intRowNewIndexNew =GUI_List_GetRowIndex(objMainFormWnd.SwfObject("swfname:=gridSnapshot"), "Status", "Locked")
	
	If intRowNewIndexNew>=0 then
		GUI_List_ActOnRow objMainFormWnd.SwfObject("swfname:=gridSnapshot"), intRowNewIndexNew+1, False, False, False, "single"
		FRM_Logger_ReportPassEvent "Secondary Registration Snapshot","Secondary Registration/Snapshot List form opened", Null
		
		GUI_Object_IsExistX SwfWindow("swfname:=BuySellForm").SwfButton("swfname:=btnRevise"), 60
		If GUI_Object_IsExist(SwfWindow("swfname:=BuySellForm").SwfButton("swfname:=btnRevise")) Then
		
			GUI_SwfButton_Click SwfWindow("swfname:=BuySellForm").SwfButton("swfname:=btnRevise")
			FRM_Logger_ReportPassEvent "Click on Revise Lock","Revise Lock Clicked", Null
			
			FRM_Logger_ReportInfoEvent "Buy Side Sell Lock Fields","Field Level validations for Buys Side", Null
			
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfObject("swfname:=txtBuyLockDate")) then
				FRM_Logger_ReportPassEvent "Buy Side Lock Date","Buy Side Lock date is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Buy Side Lock Date","Buy Side Lock date is not enabled", Null
			End If
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfObject("swfname:=pnlBuysideLock")) then
				FRM_Logger_ReportPassEvent "Buy Side Lock Days","Buy Side Lock Days is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Buy Side Lock Days","Buy Side Lock Days is not enabled", Null
			End If
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfObject("swfname:=txtBuyExpireDate")) then
				FRM_Logger_ReportPassEvent "Buy Side Lock Expiration Date","Buy Side Lock Expiration date is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Buy Side Lock Expiration Date","Buy Side Lock Expiration date is not enabled", Null
			End If
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfObject("swfname:=panelLeft20")) then
				FRM_Logger_ReportPassEvent "Buy Side Base Rate","Buy Side Base Rate is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Buy Side Base Rate","Buy Side Base Rate is not enabled", Null
			End If
			
			FRM_Logger_ReportInfoEvent "Sell Side Sell Lock Fields","Field Level validations for Buys Side", Null
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfObject("swfname:=txtSellLockDate")) then
				FRM_Logger_ReportPassEvent "Sell Side Lock Date","Sell Side Lock date is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Sell Side Lock Date","Sell Side Lock date is not enabled", Null
			End If
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfObject("swfname:=txtSellExpireDate")) then
				FRM_Logger_ReportPassEvent "Sell Side Lock Expiration Date","Sell Side Lock Expiration Date is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Sell Side Lock Expiration Date","Sell Side Lock Expiration Date is not enabled", Null
			End If
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfObject("swfname:=pnlSellSideInfo")) then
				FRM_Logger_ReportPassEvent "Sell Side Lock Days","Sell Side Lock Days is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Sell Side Lock Days","Sell Side Lock Days is not enabled", Null
			End If
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfObject("swfname:=panelRight20")) then
				FRM_Logger_ReportPassEvent "Sell Side Basic Sell Rate","Sell Side Basic Sell Rate is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Sell Side Basic Sell Rate","Sell Side Basic Sell Rate is not enabled", Null
			End If
			
			FRM_Logger_ReportInfoEvent "Pricing Options in Buy Sell Side","Buy Sell Side price options ", Null
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfButton("swfname:=btnBuySidePricing")) then
				FRM_Logger_ReportPassEvent "Buy Side Price Options","Buy Side Price Options is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Buy Side Price Options","Buy Side Price Options is not enabled", Null
			End If
			FRM_Logger_ReportInfoEvent "Pricing Options in Sell Side","Sell Side price options ", Null
			If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfButton("swfname:=btnSellSidePricing")) then
				FRM_Logger_ReportPassEvent "Sell Side Price Options","Sell Side Price Options is enabled", Null
			Else
				FRM_Logger_ReportFailEvent "Sell Side Price Options","Sell Side Price Options is not enabled", Null
			End If
			
			GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm")
			GUI_Object_IsExistX objMainFormWnd.SwfObject("swfname:=gridSnapshot"), 30
			If GUI_Object_IsExist(objMainFormWnd.SwfObject("swfname:=gridSnapshot")) Then
				FRM_Logger_ReportPassEvent "Grip SnapShot Page","Secondary Registration Grid Page exists", Null
				intStatusIndex=GUI_List_GetRowIndex (objMainFormWnd.SwfObject("swfname:=gridSnapshot"),"Status", "Locked")
				If intStatusIndex >= 0 Then
					FRM_Logger_ReportPassEvent "Lock Status After Revise","Lock Status Displayed with Locked After the Revise Lock Operation", Null
				Else
					FRM_Logger_ReportFailEvent "Lock Status After Revise","Lock Status Displayed with not Locked After the Revise Lock Operation", Null
				End If
			Else
				FRM_Logger_ReportFailEvent "Grip SnapShot Page","Secondary Registration Grid Page Not exists", Null
			End If
			GUI_Window_Close objMainFormWnd
		Else
			FRM_Logger_ReportFailEvent "Click on Revise Lock","Revise Lock not Clicked", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Loan Status ","Loan is not Locked", Null
	End If
	
	Set objMainFormWnd = Nothing
	
End Function



'This function is used to Start CollateralTracking ShippingStatus
'@code
'   Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_ShippingStatus(strRowID)
'@endcode
'@param strRowID     - Row id for Data

Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_ShippingStatus(strRowID)
	FRM_Logger_ReportInfoEvent "CollateralTracking ShippingStatus","Start CollateralTracking ShippingStatus", Null

	Set objLoanpage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
	Set objBusinessContactWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RxBusinessContact")
	Set objAddShipment = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddShipment")
	Set objData = FRM_DS_GetTestData("SecondaryMarket", "DOTMortage_ReturnRequests", strRowID)
	
	If GUI_Object_IsExistX(objLoanpage.SwfTab("swfname:=tabControl2"), 60) Then
		GUI_SwfTab_Click objLoanpage.SwfTab("swfname:=tabControl2"), "Shipping Status"
		If GUI_Object_IsExistX(objLoanpage.SwfButton("swfname:=btnAddShipment"), 60) Then
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequestedDate")) Then
				GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=txtDate", "index:=0"), FRM_DS_GetValue(objData, "RequestedDate")
				FRM_Logger_ReportInfoEvent "CollateralTracking ShippingStatus Shipping Date","CollateralTracking ShippingStatus Shipping Date Entered--"&FRM_DS_GetValue(objData, "RequestedDate"), Null
			End If
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequestedBy")) Then
				GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=tbShippedBy", "index:=0"), FRM_DS_GetValue(objData, "RequestedBy")
				FRM_Logger_ReportInfoEvent "CollateralTracking ShippingStatus Shipped By","CollateralTracking ShippingStatus Shipped By Entered --"&FRM_DS_GetValue(objData, "RequestedBy"), Null
			End If
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCarrier")) Then
				GUI_SwfComboBox_Select objLoanpage.SwfComboBox("swfname:=cboxCarrier"), FRM_DS_GetValue(objData, "strCarrier")
				FRM_Logger_ReportInfoEvent "CollateralTracking ShippingStatus Carrier","Start CollateralTracking ShippingStatus Carrier Entered---"&FRM_DS_GetValue(objData, "strCarrier"), Null
			End If
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "intTrackingNum")) Then
				GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=tbTrackingNum", "index:=0"), FRM_DS_GetValue(objData, "intTrackingNum")
				FRM_Logger_ReportInfoEvent "CollateralTracking ShippingStatus Tracking Number","Start CollateralTracking ShippingStatus Tracking Number Entered--"&FRM_DS_GetValue(objData, "intTrackingNum"), Null
			End If
			'getting teh Data Before Selecting the Organization
			strInitiContact = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbContact", "index:=0"),"text")
			strInitiAddress = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbAddr", "index:=0"),"text")
			strInitiEmail = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbEmail", "index:=0"),"text")
			strInitiPhone = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbPhone", "index:=0"),"text")
			If Util_String_IsEmpty(strInitiContact) and Util_String_IsEmpty(strInitiAddress) and Util_String_IsEmpty(strInitiEmail) and Util_String_IsEmpty(strInitiPhone) Then
				FRM_Logger_ReportPassEvent "Contact, EMail, Address and Phone fields should be blank before selecting Organization", "All mentioned fields are empty", Null
			Else
				FRM_Logger_ReportFailEvent "Contact, EMail, Address and Phone fields should be blank before selecting Organization", "Mentioned fields are not empty", Null
			End If
			'Selection Of Organization
			If GUI_Object_IsExistX(objLoanpage.SwfObject("swfname:=btnOrganization"), 60) Then
				GUI_SwfObject_Click objLoanpage.SwfObject("swfname:=btnOrganization")
				FRM_Logger_ReportInfoEvent "CollateralTracking ShippingStatus Organization ","Start CollateralTracking ShippingStatus Organization Clicked", Null
				If GUI_Object_IsExist(objBusinessContactWindow) Then
					intTotRows = GUI_List_GetNumberofRows(objBusinessContactWindow.SwfObject("swfname:=gvContactList"))
					If intTotRows > 0 Then
						GUI_List_ActOnRow objBusinessContactWindow.SwfObject("swfname:=gvContactList"), 1, False, True, False, "Double"
						FRM_Logger_ReportInfoEvent "CollateralTracking ShippingStatus Contact List Selection ","Start CollateralTracking ShippingStatus Organization Contact List Selection", Null
					End If
				End If
			End If
			'getting teh Data after Selecting the Organization
			strAfterOrganization = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbOrg", "index:=0"),"text")
			strAfterContact 	 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbContact", "index:=0"),"text")
			strAfterAddress	 	 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbAddr", "index:=0"),"text")
			strAfterEmail  		 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbEmail", "index:=0"),"text")
			strAfterPhone   	 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=tbPhone", "index:=0"),"text")
			'Validating data Popultaed or not
			If UTIL_String_IsNotEmpty(strAfterContact) and Util_String_IsNotEmpty(strAfterAddress) and Util_String_IsNotEmpty(strAfterEmail) and Util_String_IsNotEmpty(strAfterPhone) Then
				FRM_Logger_ReportPassEvent "After selecting Organization Contact, EMail, Address and Phone fields should be populated", "All mentioned fields are populated", Null
			Else
				FRM_Logger_ReportFailEvent "After selecting Organization Contact, EMail, Address and Phone fields should be populated", "Mentioned fields are not populated", Null
			End If
			If GUI_Object_IsExistX(objLoanpage.SwfButton("swfname:=btnAddShipment"),60) Then
				GUI_SwfButton_Click objLoanpage.SwfButton("swfname:=btnAddShipment")
				GUI_Dialog_Encompass_OK ""
				If GUI_Object_IsExist(objAddShipment) Then
					If NOt Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
						GUI_Object_ValidateChecked objAddShipment.SwfCheckBox("swfname:=cbDot"), True, "DOT/Mortgage Checkbox"	
						GUI_Object_ValidateDisabled objAddShipment.SwfCheckBox("swfname:=cbDot"),"DOT/Mortgage Checkbox"
						GUI_Object_ValidateChecked objAddShipment.SwfCheckBox("swfname:=cbFtp"), False, "Final Title Policy"	
						GUI_Object_ValidateEnabled objAddShipment.SwfCheckBox("swfname:=cbFtp"), "Final Title Policy"
					Else
						GUI_Object_ValidateChecked objAddShipment.SwfCheckBox("swfname:=cbDot"), False, "DOT/Mortgage Checkbox"	
						GUI_Object_ValidateDisabled objAddShipment.SwfCheckBox("swfname:=cbFtp"),"Final Title Policy"
						GUI_Object_ValidateChecked objAddShipment.SwfCheckBox("swfname:=cbFtp"), True, "Final Title Policy"	
						GUI_Object_ValidateEnabled objAddShipment.SwfCheckBox("swfname:=cbDot"), "DOT/Mortgage Checkbox"
					End If
					strContact = GUI_Object_GetPropertyValue(objAddShipment.SwfEdit("swfname:=tbContact", "index:=0"),"text")
					strAddress = GUI_Object_GetPropertyValue(objAddShipment.SwfEdit("swfname:=tbAddr", "index:=0"),"text")
					strEmail   = GUI_Object_GetPropertyValue(objAddShipment.SwfEdit("swfname:=tbEmail", "index:=0"),"text")
					strPhone   = GUI_Object_GetPropertyValue(objAddShipment.SwfEdit("swfname:=tbPhone", "index:=0"),"text")
					strShippedBy = GUI_Object_GetPropertyValue(objAddShipment.SwfEdit("swfname:=tbShippedBy", "index:=0"),"text")
					strDate      = GUI_Object_GetPropertyValue(objAddShipment.SwfEdit("swfname:=txtDate", "index:=0"),"text")
					
					FRM_VerifyEqual strAfterContact,strContact,"Add shipment window Contact value----"&strContact,"Contact Value Matched"
					'FRM_VerifyEqual strAfterAddress,strAddress,"Add shipment window Address value----"&strAddress,"Address Value Matched"
					FRM_VerifyEqual strAfterEmail,strEmail,"Add shipment window Email value----"&strEmail,"Email Value Matched"
					FRM_VerifyEqual strAfterPhone,strPhone,"Add shipment window Phone value----"&strPhone,"Phone Value Matched"
					FRM_VerifyEqual strShippedBy,FRM_DS_GetValue(objData, "RequestedBy"),"Add shipment window Shipped By value----"&FRM_DS_GetValue(objData, "RequestedBy"),"Shipped By Value Matched"
					
					If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCarrier")) Then
						GUI_SwfComboBox_Select objAddShipment.SwfComboBox("swfname:=cboxCarrier"), FRM_DS_GetValue(objData, "strCarrier")
						FRM_Logger_ReportInfoEvent "Carrier Selection", "Carrier Selected ---"&FRM_DS_GetValue(objData, "strCarrier"), Null
					End If
					If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "intTrackingNum")) Then
						GUI_SwfEdit_Set objAddShipment.SwfEdit("swfname:=tbTrackNum", "index:=0"), FRM_DS_GetValue(objData, "intTrackingNum")
						FRM_Logger_ReportInfoEvent "Tracking Number Entry", "Tracking Number Entered ---"&FRM_DS_GetValue(objData, "intTrackingNum"), Null
					End If
					If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Comments")) Then
						GUI_SwfEditor_Type objAddShipment.SwfEditor("swfname:=tboxComments"), FRM_DS_GetValue(objData, "Comments")
						FRM_Logger_ReportInfoEvent "Comments Section", "Comments Data entered---"&FRM_DS_GetValue(objData, "Comments"), Null
					End If
					GUI_SwfButton_Click objAddShipment.SwfButton("swfname:=btnOk")
					FRM_Logger_ReportInfoEvent "Add Shipment Conformation Button", "Clicked on Add Shipment Conformation Button", Null
				Else
					FRM_Logger_ReportFailEvent "Add Shipment Window", "Add Shipment Window not Exists", Null
				End If
				If GUI_Object_IsExistX(objLoanpage.SwfObject("swfname:=gvTrackHistory"), 60) Then
					intRowNo = GUI_List_GetRowIndex(objLoanpage.SwfObject("swfname:=gvTrackHistory"), "Action", "Shipped")
					If intRowNo>=0 Then
						GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Action", "Shipped"
						GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Date", BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate"))
						GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "By", FRM_DS_GetValue(objData, "RequestedBy") 
						'Green Symbol Validation in Dot Column need to be done
						GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "FTP", "" 
						GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Organization", strAfterOrganization
						GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Contact", strAfterContact
						GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Email", ""
						GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Phone", ""
						'Disable Validation
						GUI_List_ActOnRow objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, True, False, False, "Double"
						GUI_Object_ValidateDisabled objAddShipment.SwfCheckBox("swfname:=cbDot"),"DOT/Mortgage Checkbox"
						GUI_Object_ValidateDisabled objAddShipment.SwfCheckBox("swfname:=cbFtp"), "Final Title Policy"
						GUI_Object_ValidateDisabled objAddShipment.SwfEdit("swfname:=txtDate", "index:=0"), "Shipped Date"
						GUI_Object_ValidateDisabled objAddShipment.SwfEdit("swfname:=tbShippedBy", "index:=0"), "Shipped By"
						GUI_Object_ValidateDisabled objAddShipment.SwfComboBox("swfname:=cboxCarrier"), "Carrier"
						GUI_Object_ValidateDisabled objAddShipment.SwfEdit("swfname:=tbTrackNum", "index:=0"), "Tracking Num"
						GUI_Object_ValidateDisabled objAddShipment.SwfEdit("swfname:=tbOrg", "index:=0"), "Organization"
						GUI_Object_ValidateDisabled objAddShipment.SwfEdit("swfname:=tbContact", "index:=0"), "Contact"
						GUI_Object_ValidateDisabled objAddShipment.SwfEdit("swfname:=tbAddr", "index:=0"), "Address"
						GUI_Object_ValidateDisabled objAddShipment.SwfEdit("swfname:=tbEmail", "index:=0"), "Email"
						GUI_Object_ValidateDisabled objAddShipment.SwfEdit("swfname:=tbPhone", "index:=0"), "Phone"
						GUI_Object_ValidateDisabled objAddShipment.SwfEditor("swfname:=tboxComments"), "CommentBox"
						GUI_SwfButton_Click objAddShipment.SwfButton("swfname:=btnCancel")
					Else
						FRM_Logger_ReportFailEvent "Tracking History Detail Section", "Details not populated in Tracking History Detail Section", Null
					End If
				Else
					FRM_Logger_ReportFailEvent "Tracking History Detail Section", "Details not populated in Tracking History Detail Section", Null
				End If
			Else
				FRM_Logger_ReportFailEvent "Add Shipment window", "Add Shipment window not exists", Null
			End If
		Else
			FRM_Logger_ReportFailEvent "Add Shipment Button", "Add Shipment Button not exists", Null
		End if
	Else
		FRM_Logger_ReportFailEvent "Shipping Status section", "Shipping Status section not exists", Null
	End If
	
	Set objLoanpage              = Nothing
	Set objBusinessContactWindow = Nothing
	Set objAddShipment           = Nothing
	Set objData                  = Nothing
	
End Function



'This function is used to 
'@code
'   Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_InitialRequests(strRowID)
'@endcode
'@param strRowID RowID for data

Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_InitialRequests(strRowID)

	FRM_Logger_ReportInfoEvent "CollateralTracking InitialRequests","Statr CollateralTracking InitialRequests", Null
	
	Dim objLoanpage,objBusinessContactWindow,objAddInitialRequest,objAddInitialReceipt,objData
	Dim strInitiContact,strInitiEmail,strInitiPhone,intTotRows,strAfterOrganization
	
	Set objLoanpage              = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
	Set objBusinessContactWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RxBusinessContact")
	Set objAddInitialRequest     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddInitialRequest")
	Set objAddInitialReceipt     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddInitialReceipt")
	Set objData                 = FRM_DS_GetTestData("SecondaryMarket", "DOTMortage_ReturnRequests", strRowID)
		
	If GUI_Object_IsExistX(objLoanpage.SwfTab("swfname:=tbcDocTracking"), 60) Then
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strNextFollowUpDate")) Then
			GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=txtDate", "index:=2"), FRM_DS_GetValue(objData, "strNextFollowUpDate")
			FRM_Logger_ReportInfoEvent "CollateralTracking DOT Mortage Next Follow Update","Start CollateralTracking DOT Mortage Next Follow Update---"&FRM_DS_GetValue(objData, "strNextFollowUpDate"), Null
		End If
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastRequestedDate")) Then
			GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=txtDate", "index:=0"), FRM_DS_GetValue(objData, "LastRequestedDate")
			FRM_Logger_ReportInfoEvent "CollateralTracking DOT Mortage Last Request Date","Start CollateralTracking DOT Mortage Last Request Date---"&FRM_DS_GetValue(objData, "strNextFollowUpDate"), Null
		End If
		'Get the data before selecting the Organization
		strInitiContact = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtContact", "index:=0"),"text")
		strInitiEmail = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtEmail", "index:=0"),"text")
		strInitiPhone = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtPhone", "index:=0"),"text")
		If Util_String_IsEmpty(strInitiContact) and Util_String_IsEmpty(strInitiEmail) and Util_String_IsEmpty(strInitiPhone) Then
			FRM_Logger_ReportPassEvent "Contact, EMail, Address and Phone fields should be blank before selecting Organization", "All mentioned fields are empty", Null
		Else
			FRM_Logger_ReportFailEvent "Contact, EMail, Address and Phone fields should be blank before selecting Organization", "Mentioned fields are not empty", Null
		End If
		If GUI_Object_IsExistX(objLoanpage.SwfObject("swfname:=btnOrganization"),60) Then
			GUI_SwfObject_Click objLoanpage.SwfObject("swfname:=btnOrganization")
			FRM_Logger_ReportInfoEvent "CollateralTracking Organization","Start CollateralTracking Organizatione---"&FRM_DS_GetValue(objData, "btnOrganization"), Null
			If GUI_Object_IsExist(objBusinessContactWindow) Then
				intTotRows = GUI_List_GetNumberofRows(objBusinessContactWindow.SwfObject("swfname:=gvContactList"))
				If intTotRows >= 0 Then
					GUI_List_ActOnRow objBusinessContactWindow.SwfObject("swfname:=gvContactList"), 1, False, True, False, "Double"
				End If
			End If
		End If
		
		'Get the data After selecting the Organization
		strAfterOrganization = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtOrganization", "index:=0"),"text")
		strAfterContact 	 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtContact", "index:=0"),"text")
		strAfterEmail  		 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtEmail", "index:=0"),"text")
		strAfterPhone   	 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtPhone", "index:=0"),"text")
		If UTIL_String_IsNotEmpty(strAfterContact) and UTIL_String_IsNotEmpty(strAfterEmail) and UTIL_String_IsNotEmpty(strAfterPhone) and UTIL_String_IsNotEmpty(strAfterOrganization) Then
			FRM_Logger_ReportPassEvent "After selecting Organization Contact, EMail, Address and Phone fields should be populated", "All mentioned fields are populated", Null
		Else
			FRM_Logger_ReportFailEvent "After selecting Organization Contact, EMail, Address and Phone fields should be populated", "Mentioned fields are not populated", Null
		End If
		If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Document")) Then
				GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=txtDocumentNumber"), FRM_DS_GetValue(objData, "Document")
				FRM_Logger_ReportInfoEvent "CollateralTracking DOT Mortgae Document","Start CollateralTracking DOT Mortgae Document---"&FRM_DS_GetValue(objData, "Document"), Null
			End If
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Book")) Then
				GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=txtBookNumber"), FRM_DS_GetValue(objData, "Book")
				FRM_Logger_ReportInfoEvent "CollateralTracking DOT Mortgae Book","Start CollateralTracking DOT Mortgae Book---"&FRM_DS_GetValue(objData, "Book"), Null
			End If
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Page")) Then
				GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=txtPageNumber"), FRM_DS_GetValue(objData, "Page")
				FRM_Logger_ReportInfoEvent "CollateralTracking DOT Mortgae Page","Start CollateralTracking DOT Mortgae Page---"&FRM_DS_GetValue(objData, "Page"), Null
			End If
		End If
		
		If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
			If GUI_Object_IsExist(objLoanpage.SwfButton("swfname:=btnAddRequest")) Then
			GUI_SwfObject_Click objLoanpage.SwfRadioButton("swfname:=rbNo")
			FRM_Logger_ReportInfoEvent "CollateralTracking DOT Mortgae No radio Button","Start CollateralTracking DOT Mortgae No radio Button Clicked---", Null
			End If 
		End if 
			
		BIZ_Loan_Save()
		GUI_SwfButton_Click objLoanpage.SwfButton("swfname:=btnAddRequest")
		FRM_Logger_ReportInfoEvent "CollateralTracking DOT Mortgae Add Request Button","Start CollateralTracking DOT Mortgae Add Request Button Clicked", Null
		If GUI_Object_IsExistX(objAddInitialRequest, 60) Then
			If NOt Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
				GUI_Object_ValidateChecked objAddInitialRequest.SwfCheckBox("swfname:=ckDot"), True, "DOT/Mortgage"	
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfCheckBox("swfname:=ckDot"),"DOT/Mortgage"
				GUI_Object_ValidateChecked objAddInitialRequest.SwfCheckBox("swfname:=ckFTP"), False, "Final Title Policy"	
				GUI_Object_ValidateEnabled objAddInitialRequest.SwfCheckBox("swfname:=ckFTP"), "Final Title Policy"
			Else
				GUI_Object_ValidateChecked objAddInitialRequest.SwfCheckBox("swfname:=ckFTP"), True, "Final Title Policy"	
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfCheckBox("swfname:=ckFTP"), "Final Title Policy"
				GUI_Object_ValidateChecked objAddInitialRequest.SwfCheckBox("swfname:=ckDot"), False, "DOT/Mortgage"	
				GUI_Object_ValidateEnabled objAddInitialRequest.SwfCheckBox("swfname:=ckDot"),"DOT/Mortgage"
			End IF
			strrequestDate= GUI_Object_GetPropertyValue(objAddInitialRequest.SwfEdit("swfname:=txtDate", "index:=0"),"text")
			strrequestBy= GUI_Object_GetPropertyValue(objAddInitialRequest.SwfEdit("swfname:=txtRequestedBy", "index:=0"),"text")
			strOrganization1= GUI_Object_GetPropertyValue(objAddInitialRequest.SwfEdit("swfname:=txtOrganization", "index:=0"),"text")
			strContact = GUI_Object_GetPropertyValue(objAddInitialRequest.SwfEdit("swfname:=txtContact", "index:=0"),"text")
			
			GUI_Object_ValidateChecked objAddInitialRequest.SwfCheckBox("swfname:=ckEmail"), False, "Email"
			GUI_Object_ValidateEnabled objAddInitialRequest.SwfCheckBox("swfname:=ckEmail"), "Email"
			
			strEmail = GUI_Object_GetPropertyValue(objAddInitialRequest.SwfEdit("swfname:=txtEmail", "index:=0"),"text")
			
			GUI_Object_ValidateChecked objAddInitialRequest.SwfCheckBox("swfname:=ckPhone"), False, "Phone"
			GUI_Object_ValidateEnabled objAddInitialRequest.SwfCheckBox("swfname:=ckPhone"), "Phone"
			
			strPhone   = GUI_Object_GetPropertyValue(objAddInitialRequest.SwfEdit("swfname:=txtPhone", "index:=0"),"text")
			strComment   = GUI_Object_GetPropertyValue(objAddInitialRequest.SwfEditor("swfname:=rtComments", "index:=0"),"text")
			
			GUI_Object_ValidateEnabled objAddInitialRequest.SwfEditor("swfname:=rtComments", "index:=0"), "Comments"
			FRM_VerifyEqual strrequestDate,BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate")),"Add Request window Request Date----"&BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate")),"Request Date Value Matched"
			FRM_VerifyEqual strrequestBy,FRM_DS_GetValue(objData, "RequestedBy"),"Add Request window Request BY----"&FRM_DS_GetValue(objData, "RequestedBy"),"Request BY Value Matched"
			FRM_VerifyEqual strAfterOrganization,strOrganization1,"Add Request window Request Organization----"&strOrganization1,"Request Organization Value Matched"
			FRM_VerifyEqual strAfterContact,strContact,"Add Request window Request Contact----"&strContact,"Request Contact Value Matched"
			FRM_VerifyEqual strAfterEmail,strEmail,"Add Request window Request Email----"&strContact,"Request Email Value Matched"
			FRM_VerifyEqual strAfterPhone,strPhone,"Add Request window Request Phone----"&strContact,"Request Phone Value Matched"
			
			If UTIL_String_IsEmpty(strComment) Then
				FRM_Logger_ReportPassEvent "Add shipment window Comment value should match with the Null value", "Comment value is Null", Null
			Else
				FRM_Logger_ReportFailEvent "Add shipment window Comment value should match with the Null value", "Comment value is not Null", Null
			End If
			
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Comments")) Then
				GUI_SwfEditor_Type objAddInitialRequest.SwfEditor("swfname:=rtComments", "index:=0"), FRM_DS_GetValue(objData, "Comments")
			End If
							
			GUI_SwfCheckbox_Set objAddInitialRequest.SwfCheckBox("swfname:=checkBox_Email|ckEmail"),"ON"
			GUI_SwfCheckbox_Set objAddInitialRequest.SwfCheckBox("swfname:=checkBox_Phone|ckPhone"),"ON"
			GUI_SwfButton_Click objAddInitialRequest.SwfButton("swfname:=btnOk")
		Else
			FRM_Logger_ReportFailEvent "Add shipment window ", "Add shipment window not exists", Null
		End If
		
		intRowNo = GUI_List_GetRowIndex(objLoanpage.SwfObject("swfname:=gvTrackHistory"), "Action", FRM_DS_GetValue(objData, "Action2"))
		
		If intRowNo>=0 Then
			FRM_Logger_ReportInfoEvent "Tracking History details", "Tracking History details Exists", Null
			'Tracking History details
			GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "Action", FRM_DS_GetValue(objData, "Action2")
			GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "Date", BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate"))
			GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "By", FRM_DS_GetValue(objData, "RequestedBy")
			GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "FTP",""
			GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "Organization", strAfterOrganization
			GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "Contact", strAfterContact
			strCommentsValue=  GUI_Object_GetPropertyValue(objLoanpage.SwfEditor("Name:=richTextBox_Comments"),"Text")
			If(InStr(strCommentsValue, FRM_DS_GetValue(objData, "RequestedBy")) > 0) then 
				FRM_Logger_ReportPassEvent "Comment section data", strCommentsValue & " is verified", Null
			Else
				FRM_Logger_ReportFailEvent "Comment section data", strCommentsValue & " is not  verified", Null
			End if
		Else
			FRM_Logger_ReportFailEvent "Tracking History details", "Tracking History details not Exists", Null
		End If
		
		If intRowNo>=0 Then												
			GUI_List_ActOnRow objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, True, False, False, "Double"
			If GUI_Object_IsExistX(objAddInitialRequest.SwfCheckBox("swfname:=ckDot"), 30) Then
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfCheckBox("swfname:=ckDot"),"DOT/Mortgage Checkbox"
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfCheckBox("swfname:=ckFTP"), "Final Title Policy"
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfEdit("swfname:=txtDate", "index:=0"), "Requested Date"
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfEdit("swfname:=txtRequestedBy", "index:=0"), "Requested By"
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfEdit("swfname:=txtOrganization", "index:=0"), "Organization"
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfEdit("swfname:=txtContact", "index:=0"), "Contactact"
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfEdit("swfname:=txtEmail", "index:=0"), "Email"
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfEdit("swfname:=txtPhone", "index:=0"), "Phone"
				GUI_Object_ValidateDisabled objAddInitialRequest.SwfEditor("swfname:=rtComments", "index:=0"), "CommentBox"
				GUI_SwfButton_Click objAddInitialRequest.SwfButton("swfname:=btnCancel")
			End If
		End If
		
		If GUI_Object_IsExistX(objLoanpage.SwfButton("swfname:=btnAddReceipts"), 60) Then
			GUI_SwfButton_Click objLoanpage.SwfButton("swfname:=btnAddReceipts")
			If Util_String_IsMatch(strRowID,"DOTMortage") Then
				GUI_Object_ValidateDisabled objAddInitialReceipt.SwfCheckBox("swfname:=ckDot"),"DOT/Mortgage Checkbox"
				GUI_Object_ValidateChecked objAddInitialReceipt.SwfCheckBox("swfname:=ckDot"), True, "DOT/Mortgage Checkbox"	
				GUI_Object_ValidateEnabled objAddInitialReceipt.SwfCheckBox("swfname:=ckFTP"),"Final Title Policy Checkbox"
			ElseIf Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
				GUI_Object_ValidateDisabled objAddInitialReceipt.SwfCheckBox("swfname:=ckFTP"),"Final Title Policy Checkbox"
				GUI_Object_ValidateChecked objAddInitialReceipt.SwfCheckBox("swfname:=ckFTP"), True, "Final Title Policy Checkbox"	
				GUI_Object_ValidateEnabled objAddInitialReceipt.SwfCheckBox("swfname:=ckDot"),"DOT/Mortgage Checkbox"
			End If
			strreceivedDate1 = GUI_Object_GetPropertyValue(objAddInitialReceipt.SwfEdit("swfname:=txtDate", "index:=1"),"text")
			strreceivedBy1   = GUI_Object_GetPropertyValue(objAddInitialReceipt.SwfEdit("swfname:=txtReceivedBy", "index:=0"), "text")	
			If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
				strDocument      = GUI_Object_GetPropertyValue(objAddInitialReceipt.SwfEdit("swfname:=txtDocumentNumber", "index:=0"), "text")
				strBook          = GUI_Object_GetPropertyValue(objAddInitialReceipt.SwfEdit("swfname:=txtBookNumber", "index:=0"), "text")
				strPage          = GUI_Object_GetPropertyValue(objAddInitialReceipt.SwfEdit("swfname:=txtPageNumber", "index:=0"), "text")
			End If
			FRM_VerifyEqual strreceivedDate1, BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate")),"Add Initial Request Date----"& BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate")),"Initial Request Date Value Matched"
			FRM_VerifyEqual strreceivedBy1, FRM_DS_GetValue(objData, "RequestedBy"),"Add Initial Request BY----"& FRM_DS_GetValue(objData, "RequestedBy"),"Initial Request BY Value Matched"
			If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
				If Util_String_IsEmpty(strDocument) Then
					FRM_Logger_ReportPassEvent "Add initial Receipt window verify doument field", "doument field is empty", Null
				Else
					FRM_Logger_ReportFailEvent "Add initial Receipt window verify doument field", "doument field is not empty", Null
				End If
				If Util_String_IsEmpty(strBook) Then
					FRM_Logger_ReportPassEvent "Add initial Receipt window verify Book field", "Book field is empty", Null
				Else
					FRM_Logger_ReportFailEvent "Add initial Receipt window verify Book field", "Book field is not empty", Null
				End If
				If Util_String_IsEmpty(strPage) Then
					FRM_Logger_ReportPassEvent "Add initial Receipt window verify page field", "page field is empty", Null
				Else
					FRM_Logger_ReportFailEvent "Add initial Receipt window verify page field", "page field is not empty", Null
				End If
			End If
			If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
				GUI_Object_ValidateChecked objAddInitialReceipt.SwfRadioButton("swfname:=rbYes"), False, "Yes"
				GUI_Object_ValidateChecked objAddInitialReceipt.SwfRadioButton("swfname:=rbNo"), False, "No"
				GUI_Object_ValidateChecked objAddInitialReceipt.SwfRadioButton("swfname:=rbNa"), False, "N/A"
				GUI_Object_ValidateEnabled objAddInitialReceipt.SwfRadioButton("swfname:=rbYes"),"Yes"
				GUI_Object_ValidateEnabled objAddInitialReceipt.SwfRadioButton("swfname:=rbNo"),  "No"
				GUI_Object_ValidateEnabled objAddInitialReceipt.SwfRadioButton("swfname:=rbNa"), "N/A"
			End If
			If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "InitialReceiptDocument")) Then
					GUI_SwfEdit_Set objAddInitialReceipt.SwfEdit("swfname:=txtDocumentNumber", "index:=0"), FRM_DS_GetValue(objData, "InitialReceiptDocument")
					FRM_Logger_ReportInfoEvent "DOT Mortage Initial Receipt Document", "DOT Mortage Initial Receipt Document--"&FRM_DS_GetValue(objData, "InitialReceiptDocument"), Null
				End If
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "InitialReceiptBook")) Then
					GUI_SwfEdit_Set objAddInitialReceipt.SwfEdit("swfname:=txtBookNumber", "index:=0"), FRM_DS_GetValue(objData, "InitialReceiptBook")
					FRM_Logger_ReportInfoEvent "DOT Mortage Initial Receipt Book", "DOT Mortage Initial Receipt Book--"&FRM_DS_GetValue(objData, "InitialReceiptBook"), Null
				End If
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "InitialReceiptPage")) Then
					GUI_SwfEdit_Set objAddInitialReceipt.SwfEdit("swfname:=txtPageNumber", "index:=0"), FRM_DS_GetValue(objData, "LastRequestedDate")
					FRM_Logger_ReportInfoEvent "DOT Mortage Initial Receipt Page", "DOT Mortage Initial Receipt Page--"&FRM_DS_GetValue(objData, "InitialReceiptPage"), Null
				End If
				If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
					GUI_SwfObject_Click objAddInitialReceipt.SwfRadioButton("swfname:=rbYes")
				End If
			End If
			If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "InitialReceiptComment")) Then
				GUI_SwfEditor_Type objAddInitialReceipt.SwfEditor("swfname:=rtComments", "index:=0"), FRM_DS_GetValue(objData, "InitialReceiptComment")
				FRM_Logger_ReportInfoEvent "DOT Mortage Initial Receipt Comments", "DOT Mortage Initial Receipt Comments--"&FRM_DS_GetValue(objData, "InitialReceiptComment"), Null
			End If
			GUI_SwfButton_Click objAddInitialReceipt.SwfButton("swfname:=btnOk")
			intRowNo = GUI_List_GetRowIndex(objLoanpage.SwfObject("swfname:=gvTrackHistory"), "Action", FRM_DS_GetValue(objData, "Action3"))
			If intRowNo>=0 Then
				FRM_Logger_ReportInfoEvent "Tracking History details", "Tracking History details Exists", Null
				'Tracking History details
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Action", FRM_DS_GetValue(objData, "Action3")
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Date",BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate"))
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "By", FRM_DS_GetValue(objData, "RequestedBy")
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "FTP",""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Organization", ""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Contact", ""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Email", ""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Phone", ""
				strCommentsValue=  GUI_Object_GetPropertyValue(objLoanpage.SwfEditor("Name:=richTextBox_Comments"),"Text")
				If(InStr(strCommentsValue, FRM_DS_GetValue(objData, "RequestedBy")) > 0) then 
					FRM_Logger_ReportPassEvent "Comment section data", strCommentsValue & " is verified", Null
				Else
					FRM_Logger_ReportFailEvent "Comment section data", strCommentsValue & " is not  verified", Null
				End if
				GUI_List_ActOnRow objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, True, False, False, "Double"	
				GUI_Object_ValidateDisabled objAddInitialReceipt.SwfCheckBox("swfname:=ckDot"),"DOT/Mortgage"
				GUI_Object_ValidateDisabled objAddInitialReceipt.SwfCheckBox("swfname:=ckFTP"), "Final Title Policy"
				GUI_Object_ValidateDisabled objAddInitialReceipt.SwfEdit("swfname:=txtDate", "index:=1"), "Received Date"
				GUI_Object_ValidateDisabled objAddInitialReceipt.SwfEdit("swfname:=txtReceivedBy", "index:=0"), "Received By"
				If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
					GUI_Object_ValidateDisabled objAddInitialReceipt.SwfEdit("swfname:=txtDocumentNumber", "index:=0"), "Document"
					GUI_Object_ValidateDisabled objAddInitialReceipt.SwfEdit("swfname:=txtBookNumber"),"Book"
					GUI_Object_ValidateDisabled objAddInitialReceipt.SwfEdit("swfname:=txtPageNumber"),"Page"
					GUI_Object_ValidateDisabled objAddInitialReceipt.SwfRadioButton("swfname:=rbYes"),"Yes"
					GUI_Object_ValidateDisabled objAddInitialReceipt.SwfRadioButton("swfname:=rbNo"),"No"
					GUI_Object_ValidateDisabled objAddInitialReceipt.SwfRadioButton("swfname:=rbNa"),"NA"
				End If
				GUI_Object_ValidateDisabled objAddInitialReceipt.SwfEditor("swfname:=rtComments"),"rtComments"
				GUI_SwfButton_Click objAddInitialReceipt.SwfButton("swfname:=btnCancel")
			Else
				FRM_Logger_ReportFailEvent "Tracking History details", "Tracking History details not Exists", Null
			End If
		Else
			FRM_Logger_ReportFailEvent "Add Receipts Button", "Add Receipts Button not Exists", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Add Request Button", "Add Request Button not Exists", Null
	End If
	Set objMainFormWnd 				= Nothing
	Set objLoanpage 				= Nothing
	Set objBusinessContactWindow 	= Nothing
	Set objAddInitialRequest 		= Nothing
	Set objAddInitialReceipt 		= Nothing
	Set objData 					= Nothing
	
End Function



'This function is used for CollateralTracking ReturnRequests 
'@code
'    Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_ReturnRequests(strRowID)
'@endcode
'@param strRowID RowID for data

Function BIZ_SecondaryMarketCollateralTracking_DOTMortage_ReturnRequests(strRowID)

	FRM_Logger_ReportInfoEvent "CollateralTracking ReturnRequests ","Start CollateralTracking ReturnRequests ", Null
	
	Dim objLoanpage,objBusinessContactWindow,objAddReturnRequest,objAddReturnReceipt,objData
	Dim strInitiContact,strInitiEmail,strInitiPhone,intTotRows,strAfterOrganization
	
	Set objLoanpage 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
	Set objBusinessContactWindow= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RxBusinessContact")
	Set objAddReturnRequest		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddReturnRequest")
	Set objAddReturnReceipt 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddReturnReceipt")
	Set objData 				= FRM_DS_GetTestData("SecondaryMarket", "DOTMortage_ReturnRequests", strRowID)
		
	If GUI_Object_isExistX(objLoanpage.SwfTab("swfname:=tbcDocTracking"), 60) Then
		GUI_SwfTab_Click objLoanpage.SwfTab("swfname:=tabControl2"), "Return Requests"
		FRM_Logger_ReportInfoEvent "Return requests ","Return requests tab selected", Null
	
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strNextFollowUpDate")) Then
			GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=txtDate", "index:=2"), FRM_DS_GetValue(objData, "strNextFollowUpDate")
			FRM_Logger_ReportInfoEvent "Collateral DOT Mortage NextFollowupDate","Collateral DOT Mortage NextFollowupDate Entered--"&FRM_DS_GetValue(objData, "strNextFollowUpDate"), Null
		End If
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastRequestedDate")) Then
			GUI_SwfEdit_Set objLoanpage.SwfEdit("swfname:=txtDate", "index:=0"), FRM_DS_GetValue(objData, "LastRequestedDate")
			FRM_Logger_ReportInfoEvent "Collateral DOT Mortage LastRequestedDate","Collateral DOT Mortage LastRequestedDate Entered--"&FRM_DS_GetValue(objData, "LastRequestedDate"), Null
		End If
		'get Date before selecting the Origination
		strInitiContact = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtContact", "index:=0"),"text")
		strInitiEmail = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtEmail", "index:=0"),"text")
		strInitiPhone = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtPhone", "index:=0"),"text")
		If Util_String_IsEmpty(strInitiContact) and Util_String_IsEmpty(strInitiEmail) and Util_String_IsEmpty(strInitiPhone) Then
			FRM_Logger_ReportPassEvent "Contact, EMail, Address and Phone fields should be blank before selecting Organization", "All mentioned fields are empty", Null
		Else
			FRM_Logger_ReportFailEvent "Contact, EMail, Address and Phone fields should be blank before selecting Organization", "Mentioned fields are not empty", Null
		End If
		If GUI_Object_IsExistX(objLoanpage.SwfObject("swfname:=btnOrganization"), 60) Then
			GUI_SwfObject_Click objLoanpage.SwfObject("swfname:=btnOrganization")
			If GUI_Object_IsExist(objBusinessContactWindow) Then
				intTotRows = GUI_List_GetNumberofRows(objBusinessContactWindow.SwfObject("swfname:=gvContactList"))
				If intTotRows > 0 Then
					GUI_List_ActOnRow objBusinessContactWindow.SwfObject("swfname:=gvContactList"), 1, False, True, False, "Double"
				End If
			End If
		End If
		strAfterOrganization = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtOrganization", "index:=0"),"text")
		strAfterContact 	 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtContact", "index:=0"),"text")
		strAfterEmail  		 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtEmail", "index:=0"),"text")
		strAfterPhone   	 = GUI_Object_GetPropertyValue(objLoanpage.SwfEdit("swfname:=txtPhone", "index:=0"),"text")
		
		If UTIL_String_IsNotEmpty(strAfterContact) and UTIL_String_IsNotEmpty(strAfterEmail) and UTIL_String_IsNotEmpty(strAfterPhone) and UTIL_String_IsNotEmpty(strAfterOrganization) Then
			FRM_Logger_ReportPassEvent "After selecting Organization Contact, EMail, Address and Phone fields should be populated", "All mentioned fields are populated", Null
		Else
			FRM_Logger_ReportFailEvent "After selecting Organization Contact, EMail, Address and Phone fields should be populated", "Mentioned fields are not populated", Null
		End If

		If GUI_Object_IsExistX(objLoanpage.SwfButton("swfname:=btnAddRequest"), 60) Then
			GUI_SwfButton_Click objLoanpage.SwfButton("swfname:=btnAddRequest")
			Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
			
			If GUI_Object_IsExistX(objAddReturnRequest, 60) Then
				If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
					GUI_Object_ValidateChecked objAddReturnRequest.SwfCheckBox("swfname:=checkBox_DOTMortgage"), True, "DOT/Mortgage"	
					GUI_Object_ValidateDisabled objAddReturnRequest.SwfCheckBox("swfname:=checkBox_DOTMortgage"),"DOT/Mortgage"
					GUI_Object_ValidateChecked objAddReturnRequest.SwfCheckBox("swfname:=checkBox_FTP"), False, "Final Title Policy"	
					GUI_Object_ValidateEnabled objAddReturnRequest.SwfCheckBox("swfname:=checkBox_FTP"), "Final Title Policy"
				Else
					GUI_Object_ValidateChecked objAddReturnRequest.SwfCheckBox("swfname:=checkBox_DOTMortgage"), False, "DOT/Mortgage"
					GUI_Object_ValidateEnabled objAddReturnRequest.SwfCheckBox("swfname:=checkBox_DOTMortgage"), "DOT/Mortgage"					
					GUI_Object_ValidateDisabled objAddReturnRequest.SwfCheckBox("swfname:=checkBox_FTP"),"Final Title Policy"
					GUI_Object_ValidateChecked objAddReturnRequest.SwfCheckBox("swfname:=checkBox_FTP"), True, "Final Title Policy"	
					
				End If
				strrequestDate = GUI_Object_GetPropertyValue(objAddReturnRequest.SwfEdit("swfname:=txtDate", "index:=0"),"text")
				strrequestBy    = GUI_Object_GetPropertyValue(objAddReturnRequest.SwfEdit("swfname:=textBox_RequestedBy", "index:=0"),"text")
				strOrganization1= GUI_Object_GetPropertyValue(objAddReturnRequest.SwfEdit("swfname:=textBox_Organization", "index:=0"),"text")
				strContact = GUI_Object_GetPropertyValue(objAddReturnRequest.SwfEdit("swfname:=textBox_Contact", "index:=0"),"text")
				GUI_Object_ValidateChecked objAddReturnRequest.SwfCheckBox("swfname:=checkBox_Email"), False, "Email"
				GUI_Object_ValidateEnabled objAddReturnRequest.SwfCheckBox("swfname:=checkBox_Email"), "Email"
				strEmail   = GUI_Object_GetPropertyValue(objAddReturnRequest.SwfEdit("swfname:=textBox_Email", "index:=0"),"text")
				GUI_Object_ValidateChecked objAddReturnRequest.SwfCheckBox("swfname:=checkBox_Phone"), False, "Phone"
				GUI_Object_ValidateEnabled objAddReturnRequest.SwfCheckBox("swfname:=checkBox_Phone"), "Phone"
				strPhone   = GUI_Object_GetPropertyValue(objAddReturnRequest.SwfEdit("swfname:=textBox_Phone", "index:=0"),"text")
				strComment   = GUI_Object_GetPropertyValue(objAddReturnRequest.SwfEditor("swfname:=richTextBox_Comment", "index:=0"),"text")
				GUI_Object_ValidateEnabled objAddReturnRequest.SwfEditor("swfname:=richTextBox_Comment", "index:=0"), "Comments"
					
				FRM_VerifyEqual strrequestDate,BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate")),"Add Request window Request Date----"&strrequestDate,"Request Date Value Matched"
				FRM_VerifyEqual strrequestBy,FRM_DS_GetValue(objData, "RequestedBy"),"Add Request window Request BY----"&FRM_DS_GetValue(objData, "RequestedBy"),"Request BY Value Matched"
				FRM_VerifyEqual strAfterOrganization,strOrganization1,"Add Request window Request Organization----"&strOrganization1,"Request Organization Value Matched"
				FRM_VerifyEqual strAfterContact,strContact,"Add Request window Request Contact----"&strContact,"Request Contact Value Matched"
				FRM_VerifyEqual strAfterEmail,strEmail,"Add Request window Request Email----"&strEmail,"Request Email Value Matched"
				FRM_VerifyEqual strAfterPhone,strPhone,"Add Request window Request Phone----"&strPhone,"Request Phone Value Matched"
				
				If UTIL_String_IsEmpty(strComment) Then
					FRM_Logger_ReportPassEvent "Add shipment window Comment value should match with the Null value", "Comment value is Null", Null
				Else
					FRM_Logger_ReportFailEvent "Add shipment window Comment value should match with the Null value", "Comment value is not Null", Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Comments")) Then
					GUI_SwfEditor_Type objAddReturnRequest.SwfEditor("swfname:=richTextBox_Comment", "index:=0"), FRM_DS_GetValue(objData, "Comments")
				End If
								
				GUI_SwfCheckbox_Set objAddReturnRequest.SwfCheckBox("swfname:=checkBox_Email|ckEmail"),"ON"
				GUI_SwfCheckbox_Set objAddReturnRequest.SwfCheckBox("swfname:=checkBox_Phone|ckPhone"),"ON"
				GUI_SwfButton_Click objAddReturnRequest.SwfButton("swfname:=button_OK")
			Else
				FRM_Logger_ReportFailEvent "Add Request window", "Add Request window Not Exists", Null
			End If
			
			GUI_Object_IsExistX objLoanpage.SwfObject("swfname:=gvTrackHistory"), 30
			
			intRowNo = GUI_List_GetRowIndex(objLoanpage.SwfObject("swfname:=gvTrackHistory"), "Action", FRM_DS_GetValue(objData, "Action"))
				
			If intRowNo >=0 Then
				'Tracking History details
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "Action", FRM_DS_GetValue(objData, "Action")
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "Date", BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate"))
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "By", FRM_DS_GetValue(objData, "RequestedBy")
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "FTP",""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "Organization", strAfterOrganization
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, "Contact", strAfterContact
			
				strCommentsValue=  GUI_Object_GetPropertyValue(objLoanpage.SwfEditor("Name:=richTextBox_Comments"),"Text")
				
				If(InStr(strCommentsValue, FRM_DS_GetValue(objData, "RequestedBy")) > 0) then 
					FRM_Logger_ReportPassEvent "Comment section data", strCommentsValue & " is verified", Null
				Else
					FRM_Logger_ReportFailEvent "Comment section data", strCommentsValue & " is not  verified", Null
				End if
												
				GUI_List_ActOnRow objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, True, False, False, "Double"
															
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfCheckBox("swfname:=checkBox_DOTMortgage"),"DOT/Mortgage Checkbox"
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfCheckBox("swfname:=checkBox_FTP"), "Final Title Policy"
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfEdit("swfname:=txtDate", "index:=0"), "Requested Date"
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfEdit("swfname:=textBox_RequestedBy", "index:=0"), "Requested By"
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfEdit("swfname:=textBox_Organization", "index:=0"), "Organization"
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfEdit("swfname:=textBox_Contact", "index:=0"), "Contactact"
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfEdit("swfname:=textBox_Email", "index:=0"), "Email"
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfEdit("swfname:=textBox_Phone", "index:=0"), "Phone"
				GUI_Object_ValidateDisabled objAddReturnRequest.SwfEditor("swfname:=richTextBox_Comment", "index:=0"), "CommentBox"
				
				GUI_SwfButton_Click objAddReturnRequest.SwfButton("swfname:=button_Cancel")
			End If
			
			GUI_Object_isExistX objLoanpage.SwfButton("swfname:=btnAddReceipts"), 30
			If GUI_Object_isExist(objLoanpage.SwfButton("swfname:=btnAddReceipts")) Then
				
				GUI_SwfButton_Click objLoanpage.SwfButton("swfname:=btnAddReceipts")
				If Not Util_String_IsMatch(strRowID,"Final_Title_Policy") Then
					GUI_Object_ValidateDisabled objAddReturnReceipt.SwfCheckBox("swfname:=cbDot"),"DOT/Mortgage Checkbox"
				GUI_Object_ValidateChecked objAddReturnReceipt.SwfCheckBox("swfname:=cbFtp"), False, "Final Title Policy Checkbox"	
				GUI_Object_ValidateEnabled objAddReturnReceipt.SwfCheckBox("swfname:=cbFtp"),"Final Title Policy Checkbox"
				
				Else
				
					GUI_Object_ValidateEnabled objAddReturnReceipt.SwfCheckBox("swfname:=cbDot"),"DOT/Mortgage Checkbox"
					GUI_Object_ValidateChecked objAddReturnReceipt.SwfCheckBox("swfname:=cbDot"), False, "Final Title Policy Checkbox"	
					GUI_Object_ValidateDisabled objAddReturnReceipt.SwfCheckBox("swfname:=cbFtp"),"Final Title Policy Checkbox"
				End If
				strreceivedDate1= GUI_Object_GetPropertyValue(objAddReturnReceipt.SwfEdit("swfname:=txtDate", "index:=1"),"text")
				strreceivedBy1=	GUI_Object_GetPropertyValue(objAddReturnReceipt.SwfEdit("swfname:=tbRcvdBy", "index:=0"), "text")	
				
				FRM_VerifyEqual strreceivedDate1,BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate")),"Add Request window Request Date----"&BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate")),"Request Date Value Matched"
				FRM_VerifyEqual strreceivedBy1,FRM_DS_GetValue(objData, "RequestedBy"),"Add Request window Request By----"&FRM_DS_GetValue(objData, "RequestedBy"),"Request By Value Matched"
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "InitialReceiptComment")) Then
					GUI_SwfEditor_Type objAddReturnReceipt.SwfEditor("swfname:=rtbComments", "index:=0"), FRM_DS_GetValue(objData, "InitialReceiptComment")
				End If
								
				GUI_SwfButton_Click objAddReturnReceipt.SwfButton("swfname:=btnOk")
			Else
				FRM_Logger_ReportFailEvent "Add Receipt Button", "Add Receipt Button not Exists", Null			
			End If
			
			GUI_Object_IsExistX	objLoanpage.SwfObject("swfname:=gvTrackHistory"),30
			
			intRowNo = GUI_List_GetRowIndex(objLoanpage.SwfObject("swfname:=gvTrackHistory"), "Action", FRM_DS_GetValue(objData, "Action1"))			
			If intRowNo>=0 Then
				'Tracking History details
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Action", FRM_DS_GetValue(objData, "Action1")
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Date",BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "RequestedDate"))
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "By", FRM_DS_GetValue(objData, "RequestedBy")
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "FTP",""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Organization", ""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Contact", ""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Email", ""
				GUI_List_ValidateCellData objLoanpage.SwfObject("swfname:=gvTrackHistory"), intRowNo, "Phone", ""
				
				strCommentsValue=  GUI_Object_GetPropertyValue(objLoanpage.SwfEditor("Name:=richTextBox_Comments"),"Text")
				
				If(InStr(strCommentsValue, FRM_DS_GetValue(objData, "RequestedBy")) > 0) then 
					FRM_Logger_ReportPassEvent "Comment section data", strCommentsValue & " is verified", Null
				Else
					FRM_Logger_ReportFailEvent "Comment section data", strCommentsValue & " is not  verified", Null
				End if
					
				GUI_List_ActOnRow objLoanpage.SwfObject("swfname:=gvTrackHistory"), 0, True, False, False, "Double"	
				
				If GUI_Object_IsExistX(objAddReturnReceipt.SwfCheckBox("swfname:=cbDot"),30) then
					GUI_Object_ValidateDisabled objAddReturnReceipt.SwfCheckBox("swfname:=cbDot"),"DOT/Mortgage"
					GUI_Object_ValidateDisabled objAddReturnReceipt.SwfCheckBox("swfname:=cbFtp"), "Final Title Policy"
					GUI_Object_ValidateDisabled objAddReturnReceipt.SwfEdit("swfname:=txtDate", "index:=1"), "Received Date"
					GUI_Object_ValidateDisabled objAddReturnReceipt.SwfEdit("swfname:=tbRcvdBy", "index:=0"), "Received By"
					GUI_Object_ValidateDisabled objAddReturnReceipt.SwfEditor("swfname:=rtbComments"),"rtbComments"
					GUI_SwfButton_Click objAddReturnReceipt.SwfButton("swfname:=btnCancel")
				End If
			End If
		End if 
	End If
	Set objMainFormWnd = Nothing
	
End Function



'This function is used for Auto Lock Precondition settings 
'@code
'    Function BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification(strRowID, strAutoLockCriteria)
'@endcode
'@param strRowID RowID for data
'@param strAutoLockCriteria Criteria for selction

Function BIZ_SecondaryMarket_AutoLoockExclusiveRulesVerification(strRowID, strAutoLockCriteria)
	
	Dim objSetupContainer, objData, arrCriteria, objName, objCheck
	Set objSetupContainer 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")	
	Set objData 			= FRM_DS_GetTestData("SecondaryMarket", "AutoLockRules", strRowID)
	
	BIZ_Nav_HierarchyTree "Secondary Setup", "Auto-Lock"
	GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "On"
	GUI_Dialog_Encompass_OKX 30, null
	GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRelock"), "On"
	GUI_Dialog_Encompass_OKX 30, null
	
	If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")
		GUI_Dialog_Encompass_OKX 30, null
	End If
		
	Select Case LCase(strAutoLockCriteria)
		Case LCase("Loan Type")
			arrCriteria = Split(FRM_DS_GetValue(objData, "LoanTypeCriteria"), ";")
			objName = "lvLoanType"
			objCheck = "chkECLoanType"
		
		Case LCase("Property State")
			arrCriteria = Split(FRM_DS_GetValue(objData, "PropertyStateCriteria"), ";")
			objName = "lvPropertyState"
			objCheck = "chkECPropertyState"
			
		Case LCase("Channel")
			arrCriteria = Split(FRM_DS_GetValue(objData, "ChannelCriteria"), ";")
			objName = "lvChannel"
			objCheck = "chkECChannel"
			
		Case LCase("Purpose of Loan")
			arrCriteria = Split(FRM_DS_GetValue(objData, "LoanPurposeCriteria"), ";")
			objName = "lvLoanPurpose"
			objCheck = "chkECLoanPurpose"
			
		Case LCase("Amortization Type")
			arrCriteria = Split(FRM_DS_GetValue(objData, "AmortizationTypeCriteria"), ";")
			objName = "lvAmorType"
			objCheck = "chkECAmorType"
			
		Case LCase("Property")
			arrCriteria = Split(FRM_DS_GetValue(objData, "PropertyCriteria"), ";")
			objName = "lvPropertyPurpose"
			objCheck = "chkECPropertyPurpose"
			
		Case LCase("Lien Position")
			arrCriteria = Split(FRM_DS_GetValue(objData, "LienPositionCriteria"), ";")	
			objName = "lvLienPosition"
			objCheck = "chkECLienPosition"		
	End Select
	
	GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:="&objCheck), "On"
	For i = 0 To UBound(arrCriteria) - 1
		FRM_Logger_ReportInfoEvent "'"&arrCriteria(i)&"'" ,"Uncheck '"&arrCriteria(i)&"'", Null
		GUI_SwfList_SetCheckbox objSetupContainer.SwfListView("swfname:="&objName), arrCriteria(i), micUnChecked
	Next
	GUI_SwfCheckbox_Set objSetupContainer.SwfCheckBox("swfname:="&objCheck), "Off"
	wait 5
	GUI_Dialog_Encompass_OKX 30, null
	GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRelock"), "Off"
	GUI_Dialog_Encompass_OKX 30, null
	GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "Off"
	GUI_Dialog_Encompass_OKX 30, null
		
	If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_CLick SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")
		GUI_Dialog_Encompass_OKX 30, null
	End If
		
	Set objSetupContainer 	= Nothing
	Set objData				= Nothing
	
End Function



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\SecondaryMarket\SecondaryMarket.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\SecondaryMarket\SecondaryMarket_MBSPools.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_SecondaryMarket
'@code
'   Function BIZ_SecondaryMarket_Trades_MBSPool_PreRequiste()
'   Function BIZ_SecondaryMarket_Trades_MBSpool(strpooltype)
'   Function BIZ_SecondaryMarket_Trades_PricingDetails(strMbsType)
'   Function BIZ_SecondaryMarket_Trades_SelectLoans(strpooltype)
'   Function BIZ_SecondaryMarket_Trades_UpdateSelectedLoans()
'   Function Function BIZ_SecondaryMarket_Trades_Loans_SecondaryRegistration(strPoolName, strPoolType)
'   Function BIZ_SecondaryMarket_Trades_Loans_Remove()
'	Function BIZ_SecondaryMarket_Nav_Tradedetails(strColValue,initFieldIndexval)
'	Function BIZ_SecondaryMarket_CorrespondentLoanTradeCreation(strRow)
'	Function BIZ_SecondaryMarket_Trades_Loans_RemoveCorrespondentLoan()
'	Function BIZ_SecondaryMarket_Trades_CorrespondentLoans_SecondaryRegistration(strPoolName, strPoolType)
'	Function BIZ_SecondaryMarket_Trades_CreateCorrespondentMasterCommitment(strRowID)
'   Function BIZ_SecondaryMarket_LockSettings(strLockType, strLockStatus)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function BIZ_SecondaryMarket_Nav_Pooldetails(strTradeName,initFieldIndexval)

    Dim objLoanList
    
    Set objLoanList = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen").SwfObject("swfname:=gvTradeList")
    
    If GUI_Object_IsExistX(objLoanList, 60) then
		SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:="&initFieldIndexval).Set strTradeName
		UTIL_Win_SendKey "{ENTER}"
		intRow = GUI_List_GetRowIndex(objLoanList, "Pool ID", strTradeName)
		If intRow>=0 Then
			GUI_List_ActOnRow objLoanList, intRow+1, True, False, False, "Double"
			FRM_Logger_ReportPassEvent "Pool Details","Pool Secutity Exists in Page", Null
		Else
			FRM_Logger_ReportFailEvent "Pool Details","Pool Secutity Exists not in Page", Null
		End If
	End If
	
	Set objLoanList=nothing
	
End Function
'This function is used to Pre Requiste for MBS Pools
'@code
'    Function BIZ_SecondaryMarket_Trades_MBSPool_PreRequiste(strpooltype)
'@endcode
'@param strpooltype

Function BIZ_SecondaryMarket_Trades_MBSPool_PreRequiste
	
	FRM_Logger_ReportInfoEvent "Start Fannie Mae PE MBS Pool","Prequiste - BIZ_SecondaryMarket_Trades_MBSPool_PreRequiste", Null
	
	Dim objMainFormWnd
	Set objMainFormWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Secondary Setup", "Trade Management Setup"
	GUI_Object_WaitTillVisible objMainFormWnd.SwfObject("swfname:=stdIconBtnNewTradeDescription")
	BIZ_SecondaryMarket_AutoLockCheck_OnorOff objMainFormWnd.SwfCheckBox("swfname:=ckboxEnableTrade"), True
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Secondary Setup", "Trade Management Setup"
	GUI_Object_WaitTillVisible objMainFormWnd.SwfObject("swfname:=stdIconBtnNewTradeDescription")
	BIZ_SecondaryMarket_AutoLockCheck_OnorOff objMainFormWnd.SwfCheckBox("swfname:=ckboxEnableMbsPool"), True
	
	Set objMainFormWnd = Nothing
	
End Function



'This function is used to Pre Requiste for MBS Pools
'@code
'   Function BIZ_SecondaryMarket_Trades_CorrespondentLoanTrade_PreRequiste(strpooltype)
'@endcode
'@param strpooltype

Function BIZ_SecondaryMarket_Trades_CorrespondentLoanTrade_PreRequiste
	
	FRM_Logger_ReportInfoEvent "Start Fannie Mae PE MBS Pool","Prequiste - BIZ_SecondaryMarket_Trades_CorrespondentLoanTrade_PreRequiste", Null
	
	Dim objMainFormWnd
	Set objMainFormWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Secondary Setup", "Trade Management Setup"
	GUI_Object_WaitTillVisible objMainFormWnd.SwfCheckBox("swfname:=ckboxEnableCorTrade")
	BIZ_SecondaryMarket_AutoLockCheck_OnorOff objMainFormWnd.SwfCheckBox("swfname:=ckboxEnableCorTrade"), True
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Secondary Setup", "Trade Management Setup"
	GUI_Object_WaitTillVisible objMainFormWnd.SwfCheckBox("swfname:=ckboxEnableCorMaster")
	BIZ_SecondaryMarket_AutoLockCheck_OnorOff objMainFormWnd.SwfCheckBox("swfname:=ckboxEnableCorMaster"), True
	
	Set objMainFormWnd = Nothing
	
End Function
	

	
'This function is used to Navigate to Trades Sub Section
'@code
'   Function BIZ_SecondaryMarket_Trades_NavigateToSubSections(strSectionName)
'@endcode
'@param strSectionName

Function BIZ_SecondaryMarket_Trades_NavigateToSubSections(strSectionName)
	FRM_Logger_ReportInfoEvent "Navigate to Trades Sub Section","Start Navigate to Trades Sub Section", Null
	
	Dim objTradeStartUpdate, objTabSecurityTrade
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objTradeStartUpdate=SwfWindow("swfname:=MainForm").SWfwindow("swfname:=TradeLoanSyncDlg")
	Set objTabSecurityTrade=objHomePage.SwfObject("swfname:=btnSecurityTrades")
	
	BIZ_Nav_SelectTabControl "Trades"
	
	GUI_Dialog_Encompass_YesX 15, Null
	If GUI_Object_IsExistX(objTradeStartUpdate.SwfButton("swfname:=btnOK"), 15) Then
		GUI_SwfObject_Click objTradeStartUpdate.SwfButton("swfname:=btnOK")
		GUI_Dialog_Encompass_OKX 15, Null
	ElseIf GUI_Object_IsExistX(SWfwindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK"), 15) Then
		GUI_SwfObject_Click SWfwindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
		GUI_Dialog_Encompass_OKX 15, Null
	ElseIf GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Swfwindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK"), 15) Then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SWfwindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
		GUI_Dialog_Encompass_OKX 15, Null
	End If
	Select Case strSectionName
		Case "MBS Pools"
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnMbsPools")
			GUI_Dialog_Encompass_YesX 15, Null
		Case "Security Trades"
			GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen").SwfObject("swfname:=objTabSecurityTrade")
			GUI_Dialog_Encompass_YesX 15, Null
		Case "Loan Trades"
			GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen").SwfObject("swfname:=btnTrades")
			GUI_Dialog_Encompass_YesX 15, Null
		Case "Correspondent Commitment"
			GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen").SwfObject("swfname:=btnCorrespondentMasters")
			GUI_Dialog_Encompass_YesX 15, Null
		Case "Correspondent Trades"
			GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen").SwfObject("swfname:=btnCorrespondentTrades")
			GUI_Dialog_Encompass_YesX 15, Null
			GUI_Dialog_Encompass_OKX 10, ""
		Case Else
			FRM_Logger_ReportFailEvent "Trades Sub Section","Trades Sub Section not Exists inT rades Page", Null
	End Select
	
	Set objTabSecurityTrade = Nothing
	Set objTradeStartUpdate = Nothing
End Function



'This function is used to create the Pool to Trades of MBS Pools
'@code
'   Function BIZ_SecondaryMarket_Trades_MBSpool(strpooltype)
'@endcode
'@param strpooltype- Pool type information from Excel

Function BIZ_SecondaryMarket_Trades_MBSpool(strpooltype)

	FRM_Logger_ReportInfoEvent "Start Fannie Mae PE MBS Pool","Scrpit Name - BIZ_SecondaryMarket_Trades_MBSpool", Null
	
	Dim objTradeStartUpdate, objTabSecurityTrade, objData, objNewMBSPage
	
	Set objTradeStartUpdate = SWfwindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
	Set objLoanStartUpdate = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objNewMBSPage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MbsPoolMortgageTypeDialog")
	Set objData = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie", strpooltype)
	set objNoti = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=TradeLoanUpdateNotificationDialog")
	Set objInvestorTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=InvestorTemplateSelector")
	
	If GUI_Object_IsExistX(objLoanStartUpdate, 60) Then
		GUI_SwfObject_Click objLoanStartUpdate
		GUI_Dialog_Encompass_OKX 15, Null
	End If
	If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=btnNew"), 60) Then
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnNew")
		If GUI_Object_IsExistX(objNewMBSPage, 60) then
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strPoolMortgageType")) Then
				If Util_String_IsMatch(FRM_DS_GetValue(objData, "strPoolMortgageType"),"Fannie Mae PE MBS") Then
					GUI_SwfRadioButton_Click objNewMBSPage.SwfRadioButton("swfname:=rbtnFannieMaePE")
				ElseIf Util_String_IsMatch(FRM_DS_GetValue(objData, "strPoolMortgageType"),"Fannie Mae") Then
					GUI_SwfRadioButton_Click objNewMBSPage.SwfRadioButton("swfname:=rbtnFannie")
				ElseIf Util_String_IsMatch(FRM_DS_GetValue(objData, "strPoolMortgageType"),"Ginnie Mae") Then
					GUI_SwfRadioButton_Click objNewMBSPage.SwfRadioButton("swfname:=rbtnGinnie")
				ElseIf Util_String_IsMatch(FRM_DS_GetValue(objData, "strPoolMortgageType"),"Freddic Mae") Then
					GUI_SwfRadioButton_Click objNewMBSPage.SwfRadioButton("swfname:=rbtnFreddie")
				End If
				GUI_SwfButton_Click	objNewMBSPage.SwfButton("swfname:=btnOk")
			End If
			If GUI_Object_IsExistX(objHomePage.SwfEdit("swfname:=txtPoolID"),30) Then
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strPoolId")) Then	
					strsSecureids=FRM_DS_GetValue(objData, "strPoolId")
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtPoolID"), strsSecureids
					FRM_Logger_ReportInfoEvent "Start MBS Pool Creation--Pool ID","Pool Id Data Entered - "&strsSecureids, Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "intPoolid")) Then	
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtPoolNumber"), FRM_DS_GetValue(objData, "intPoolid")
					FRM_Logger_ReportInfoEvent "Start MBS Pool Creation--Pool Number","Pool number Data Entered - "&FRM_DS_GetValue(objData, "intPoolid"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "dateCommitment")) Then	
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","index:=0"), FRM_DS_GetValue(objData, "dateCommitment")
					FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Commitment Date","Commitment Date Data Entered - "&FRM_DS_GetValue(objData, "dateCommitment"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strMortgagetype")) Then	
					GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbMortgageType"), FRM_DS_GetValue(objData, "strMortgagetype")
					FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Mortage Type","Mortage Type Data Entered - "&FRM_DS_GetValue(objData, "strMortgagetype"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "intTerm")) Then	
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtTerm"), FRM_DS_GetValue(objData, "intTerm")
					FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Term","Term Data Entered - "&FRM_DS_GetValue(objData, "intTerm"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "intPoolAmount")) Then	
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtAmount"), FRM_DS_GetValue(objData, "intPoolAmount")
					FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Pool Amount","Pool Amount Data Entered - "&FRM_DS_GetValue(objData, "intPoolAmount"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCommitmentType")) Then	
					GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbCommitmentType"), FRM_DS_GetValue(objData, "strCommitmentType")
					FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Commitment Type","Commitment Type Data Entered - "&FRM_DS_GetValue(objData, "strCommitmentType"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTradeDescription")) Then	
					GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbTradeDesc"), FRM_DS_GetValue(objData, "strTradeDescription")
					FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Trade description","Trade description Data Entered - "&FRM_DS_GetValue(objData, "strTradeDescription"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strInvestorName")) Then	
					GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnInvestorTemplate")
					If GUI_Object_IsExistX(objInvestorTemplate.SwfObject("swfname:=gvTemplates"),60) Then
						GUI_List_ClickRow objInvestorTemplate.SwfObject("swfname:=gvTemplates"), Null, "Investor Name", FRM_DS_GetValue(objData, "strInvestorName"), True, False, False, "Single"
						GUI_SwfButton_Click objInvestorTemplate.SwfButton("swfname:=btnOK")
					End If
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "dateInvestorDelivery")) Then	
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","index:=7"), FRM_DS_GetValue(objData, "dateInvestorDelivery")
					FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Investor Delivery Date","Investor Delivery Date - "&FRM_DS_GetValue(objData, "dateInvestorDelivery"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strServicingType")) Then	
					GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbServicingType"), FRM_DS_GetValue(objData, "strServicingType")
					FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Servcing Type","Servcing Type Data Entered - "&FRM_DS_GetValue(objData, "strServicingType"), Null
				End If
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
				FRM_Logger_ReportInfoEvent "MBS Pool Creation","MBS Pool Created - "&strsSecureids, Null
			End If
		Else
			FRM_Logger_ReportFailEvent "Fannie Data Field","Details Entering page is not displayed", Null
		End IF
	End If
	Set objTradeStartUpdate = Nothing
	Set objHomePage         = Nothing
	Set objData             = Nothing
	Set objMainFormWnd      = Nothing

	BIZ_SecondaryMarket_Trades_MBSpool=strsSecureids
	
End Function



'This function is used to Select the loans to Trades of MBS Pools
'@code
'   Function BIZ_SecondaryMarket_Trades_PricingDetails(strMbsType)
'@endcode
'@param strMbsType- Pool type information from Excel

Function BIZ_SecondaryMarket_Trades_PricingDetails(strMbsType)
	
	FRM_Logger_ReportInfoEvent "MBS Pool Trade Pricinng", "Function BIZ_SecondaryMarket_Trades_PricingDetails", Null
	
	Dim objMainScreen, objPricingDialog, objPricingFilter, objFilterDialog, objReportFieldDialog, objData
	Set objMainScreen        = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	set objPricingDialog     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MbsFannieFreddiePricingItemDialog")
	Set objPricingFilter     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PriceAdjustmentFilterDlg")
	Set objFilterDialog      = objPricingFilter.SwfWindow("swfname:=AddEditFilterDialog")
	Set objReportFieldDialog = objFilterDialog.SwfWindow("swfname:=ReportFieldSelector")
	Set objData              = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie", strMbsType)
	
	GUI_SwfTab_Click objMainScreen.SwfTab("swfname:=tabTrade"), "Pricing"
	
	If GUI_Object_IsExistX(objMainScreen.SwfObject("swfname:=siBtnAdd"), 60) Then
		GUI_SwfObject_Click objMainScreen.SwfObject("swfname:=siBtnAdd")
		FRM_Logger_ReportInfoEvent "Click on Add Pricing data", "Add Pricing button Clicked", Null
		If GUI_Object_IsExistX(objPricingDialog, 60) Then
			FRM_Logger_ReportInfoEvent "Add pricing Data dialog box should be opened", "Add pricing Data dialog box is opened", Null
			GUI_SwfEdit_Set objPricingDialog.SwfEdit("swfname:=txt_NoteRate"), FRM_DS_GetValue(objData, "NoteRateValue")
			GUI_SwfObject_Click objPricingDialog.SwfButton("swfname:=btn_OK")
			If GUI_Object_IsExistX(objMainScreen.SwfObject("swfname:=btnAdd", "index:=1"), 60) Then
				GUI_SwfObject_Click objMainScreen.SwfObject("swfname:=btnAdd", "index:=1")
				If GUI_Object_IsExistX(objPricingFilter, 60) Then
					FRM_Logger_ReportInfoEvent "Add/Edit search filter dialogue box should get displayed", "Add/Edit search filter dialogue box is successfully displayed", Null
					GUI_SwfObject_Click objPricingFilter.SwfObject("swfname:=btnAddFilter")
					If GUI_Object_IsExistX(objFilterDialog, 60) Then
						GUI_SwfObject_Click objFilterDialog.SwfObject("swfname:=btnFieldList")
						FRM_Logger_ReportInfoEvent "Click on Filter DiaLog", "Clicked the DiaLog for Filter Selection", Null
						GUI_SwfEdit_Set objReportFieldDialog.SwfEdit("swfname:=txtFind"), FRM_DS_GetValue(objData, "FieldValue")
						FRM_Logger_ReportInfoEvent "Field Value Data", "Field value data Entered", Null
						GUI_SwfButton_Click objReportFieldDialog.SwfButton("swfname:=btnFind")
						FRM_Logger_ReportInfoEvent "Field Value Find", "Find Button Clicked for Field value", Null
						GUI_SwfButton_Click objReportFieldDialog.SwfButton("swfname:=btnOK")
						FRM_Logger_ReportInfoEvent "Click on Field value Ok", "Clicked on Field value OK Button", Null
						GUI_SwfComboBox_Select objFilterDialog.SwfComboBox("swfname:=cboOperator"), "Is not"
						FRM_Logger_ReportInfoEvent "Combo Box Selection for Operator", "Selected the Operator value in the Combo Box", Null
						GUI_Dialog_Encompass_OKX 15, Null
						GUI_SwfEdit_Set objFilterDialog.SwfEdit("swfname:=txtMinNumber","index:=0"), FRM_DS_GetValue(objData, "Value")
						FRM_Logger_ReportInfoEvent "Minimum value field in Operator", "Minimum value is entered in the field -"&FRM_DS_GetValue(objData, "Value"), Null
						GUI_SwfButton_Click objFilterDialog.SwfButton("swfname:=btnOK")
						FRM_Logger_ReportInfoEvent "Click on OK in operator", "OK Button clicked on the Operator ", Null
						GUI_SwfButton_Click objPricingFilter.SwfButton("swfname:=btnApply")
						FRM_Logger_ReportInfoEvent "Apply Button Click", "Apply Button Clicked on the Operator Selection", Null
					Else
						FRM_Logger_ReportFailEvent "PopUp with fields (Field, Description, Operator, Value) should display:", "PopUp with fields (Field, Description, Operator, Value) is not displayed", Null
					End If
					boolValue = GUI_List_TextExists(objMainScreen.SwfObject("swfname:=gvAdjustments"), 0, FRM_DS_GetValue(objData, "strPriceAdjustMentsValue"))
					If Not boolValue Then
						FRM_Logger_ReportFailEvent "Filter '"&FRM_DS_GetValue(objData, "strPriceAdjustMentsValue")&"' should display in Price Adjustments section", "Filter '"&FRM_DS_GetValue(objData, "strPriceAdjustMentsValue")&"' is not displayed in Price Adjustments section", Null
					End If
				Else
					FRM_Logger_ReportFailEvent "Add/Edit search filter dialogue box should get displayed", "Add/Edit search filter dialogue box is not displayed", Null
				End If
			Else
				FRM_Logger_ReportFailEvent "Price Adjustment Add Button", "Price Adjustment Add Buttonnot exists in the application", Null
			End If
		Else
			FRM_Logger_ReportFailEvent "Click on Add Pricing data", "Add Pricing button not Clicked", Null
		End If
	End If	
	Set objMainScreen        = Nothing
	Set objPricingDialog     = Nothing
	Set objPricingFilter     = Nothing
	Set objFilterDialog      = Nothing
	Set objReportFieldDialog = Nothing
	Set objData              = Nothing
	
End Function




'This function is used to Select the loans to Trades of MBS Pools
'@code
'   Function BIZ_SecondaryMarket_Trades_SelectLoans(strpooltype)
'@endcode
'@param strpooltype- Pool type information from Excel

Function BIZ_SecondaryMarket_Trades_SelectLoans(strpooltype)
	FRM_Logger_ReportInfoEvent "Start Loan Selection","Loans selection for Pool", Null

	Dim objHomePage, objDialogPage, objData
	
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objDialogPage = Swfwindow("Swfname:=MainForm").SwfWindow("swfname:=CommitmentAssignLoanToPoolDialog")
	Set objData = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie", strpooltype)
	
	If GUI_Object_IsExistX(objHomePage.SwfTab("swfname:=tabTrade"), 60) Then
		GUI_SwfTab_Click objHomePage.SwfTab("swfname:=tabTrade"), "Loans"
		If GUI_Object_IsExistX(objHomePage.SwfCheckBox("swfname:=chkViewEligible"), 60) Then
			FRM_Logger_ReportInfoEvent "Loans Tab Selection","Loans tabs Selected and Displayed for View Eligibe Loans", Null
			If Not GUI_Object_GetPropertyValue(objHomePage.SwfCheckBox("swfname:=chkViewEligible"),"checked") Then
				GUI_SwfObject_Click objHomePage.SwfCheckBox("swfname:=chkViewEligible")
			End If
			wait 10
			If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=tableContainer1"), 15) Then
				FRM_Logger_ReportInfoEvent "View Eligible Loans","Eligible loans information displayed", Null
				If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=gvEligible"), 15) Then
					intRow = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvEligible"))
					If intRow >= 0 Then
						For i = 0 To intRow Step 1
							strStatusName  = GUI_List_GetCellData(objHomePage.SwfObject("swfname:=gvEligible"),i,1)
							If UTIL_String_IsEmpty(strStatusName) Then
								GUI_List_ActOnRow objHomePage.SwfObject("swfname:=gvEligible"), i+1, False, False, False, "Single"
								GUI_SwfButton_Click objHomePage.SwfButton("swfname:=btnAddLoans")
								FRM_Logger_ReportInfoEvent "Assigned Loans","Clicked on the Assigned Loans", Null
								If GUI_Object_IsExistX(objDialogPage, 60) Then
									If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strContractName")) Then	
										GUI_SwfEdit_Set objDialogPage.SwfEdit("swfname:=txtCommitmentContractNum"), FRM_DS_GetValue(objData, "strContractName")
										FRM_Logger_ReportInfoEvent "Contract Number","Contract Number Data Entered - "&FRM_DS_GetValue(objData, "strContractName"), Null
									End If
									If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strProductName")) Then	
										GUI_SwfComboBox_Select objDialogPage.SwfComboBox("swfname:=cmbProductName"), FRM_DS_GetValue(objData, "strProductName")
										FRM_Logger_ReportInfoEvent "Form NUmber","Form name Data Entered - "&FRM_DS_GetValue(objData, "cmbProductName"), Null
									End If
									GUI_SwfButton_Click objDialogPage.SwfButton("swfname:=btnOK")
									FRM_Logger_ReportInfoEvent "Contract NUmber","Clicked on OK Button", Null
									GUI_Dialog_Encompass_OK "The Commitment Contract number is invalid. Do you want to continue?"
								End If
								intRow1 = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvLoans"))
								intGetData=GUI_List_GetRowIndex(objHomePage.SwfObject("swfname:=gvLoans"),"Trade Assignment Status", "Assigned - Pending")
								If intRow1>=0  and intGetData>=0 Then
									FRM_Logger_ReportPassEvent "Loans Assigned","Loan Assigned to Pool", Null
									Exit For
								Else
									FRM_Logger_ReportFailEvent "Loans Assigned","Loan not Assigned to Pool", Null
								End If
							End If
						Next
					End If
				Else
					FRM_Logger_ReportFailEvent "View Eligible Loans","Eligible loans information not displayed", Null
				End If
			Else
				FRM_Logger_ReportFailEvent "Loans Tab Selection","Loans tabs not Selected and not displayed View Eligibe Loans", Null
			End If
		End If
	End If
	
	Set objHomePage   = Nothing
	Set objDialogPage = Nothing
	Set objData       = Nothing

End Function
	


'This function is used to Update the Loans
'@code
'   Function BIZ_SecondaryMarket_Trades_UpdateSelectedLoans(strPoolFannieName, strpooltype)
'@endcode
'@param strPoolFannieName Pool type information
'@param strpooltype- Pool type information from Excel

Function BIZ_SecondaryMarket_Trades_UpdateSelectedLoans(strPoolFannieName, strpooltype)

	FRM_Logger_ReportInfoEvent "Start Loan Updaton","Loans updation for Pool", Null

	Dim objHomePage, objDiaLog, objData

	Set objDiaLog = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass").Static("index:=1")
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objData     = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie", strpooltype)
	
	GUI_SwfButton_Click objHomePage.SwfButton("swfname:=btnUpdateLoans")
	If GUI_Object_IsExistX(objDiaLog, 60) Then
		strDialogtext= objDiaLog.GetROProperty("text")
		GUI_Dialog_Encompass_YesX 15, ""
	End IF
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SWfWindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK"), 15) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SWfWindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
		FRM_Logger_ReportInfoEvent "DiaLog Start Update Message","Start Updated for Loan sync dialog exists", Null
	ElseIf GUI_Object_IsExistX(SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK"), 15) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")
		FRM_Logger_ReportInfoEvent "DiaLog Start Update Message","Start Updated for Loan sync dialog exists", Null
	ElseIf GUI_Object_IsExistX(SwfWindow("swfname:=Main Form").SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK"), 15) Then
		GUI_SwfButton_Click SwfWindow("swfname:=Main Form").SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")
		FRM_Logger_ReportInfoEvent "DiaLog Start Update Message","Start Updated for Loan sync dialog exists", Null
	End If	
	If GUI_Object_IsExistX(objDiaLog, 15) Then
		strDialogtext= objDiaLog.GetROProperty("text")
		GUI_Dialog_Encompass_YesX 10,""
		GUI_Dialog_Encompass_OKX 10, ""
		FRM_Logger_ReportInfoEvent "DiaLog Button","Clicked on OK Button", Null
		wait 10
	End If
	intRow1 = GUI_List_GetRowIndex(objHomePage.SwfObject("swfname:=gvLoans","index:=0"), "Trade Assignment Status", "Assigned")
	If intRow1 >= 0 Then
		FRM_Logger_ReportPassEvent "Loans Assigned","Loan Assigned to Pool", Null
	Else
		FRM_Logger_ReportFailEvent "Loans Assigned","Loan not Assigned to Pool", Null
	End If
	Set objHomePage = Nothing
	Set objDiaLog   = Nothing
	
End Function



'This function is used to validate the Secondary Registration
'@code
'   BIZ_SecondaryMarket_Trades_Loans_SecondaryRegistration(strPoolName, strPoolType)
'@endcode
'@param strPoolName -  Pool Name
'@param strPoolType -  rowId for Data

Function BIZ_SecondaryMarket_Trades_Loans_SecondaryRegistration(strPoolName, strPoolType)
	FRM_Logger_ReportInfoEvent "Start Secondary Registration","Loans updation for Pool- BIZ_SecondaryMarket_Trades_Loans_SecondaryRegistration", Null

	Dim objHomePage, objGridStatus, intRow1
	
	Set objHomePage    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objGridStatus  = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridSnapshot")
	Set objData        = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie", strPoolType)
	If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=gvLoans"), 15) Then
		intRow1 = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvLoans"))
		If intRow1 >= 0 Then
			GUI_List_ClickRow objHomePage.SwfObject("swfname:=gvLoans"), Null, "Trade Assignment Status", "Assigned", True, False, False, "Double"
			If GUI_Object_IsExistX(objHomePage.SwfLabel("swfname:=label4","index:=0"), 60) Then
				BIZ_SecondaryMarket_ToolsNavigation "Secondary Registration"
				FRM_Logger_ReportInfoEvent "Secondary Market Navigation","Navigated to secondary Market", Null
				GUI_List_ActOnRow objGridStatus, 0, False, False, False, "Double"
				strActMBSPool = GUI_Object_GetPropertyValue(objHomePage.SwfEdit("swfname:=textBox26"),"text")
				intActMBSPoolNum = GUI_Object_GetPropertyValue(objHomePage.SwfEdit("swfname:=textBox23"),"text")
				intInvestorNum = GUI_List_GetRowIndex(objGridStatus,"Investor", FRM_DS_GetValue(objData, "strInvestorName"))
				strActCommitmentDate = GUI_Object_GetPropertyValue(objHomePage.SwfEdit("swfname:=textBox25","index:=0"),"text")
				strActInvestorDeliveryDate = GUI_Object_GetPropertyValue(objHomePage.SwfEdit("swfname:=COMBOFIELD2291","index:=0"),"text")
				If UTIL_String_IsNotEmpty(intActMBSPoolNum) Then
					FRM_Logger_ReportPassEvent "Pool Number '"&intActMBSPoolNum&"' should be present in Pool Number Edit box","Pool Number '"&intActMBSPoolNum&"' is present in Pool Number Edit box", Null
				Else
					FRM_Logger_ReportFailEvent "Pool Number '"&intActMBSPoolNum&"' should be present in Pool Number Edit box","Pool Number '"&intActMBSPoolNum&"' is not present in Pool Number Edit box", Null
				End If
				If UTIL_String_IsMatch(strPoolName, strActMBSPool) Then
					FRM_Logger_ReportPassEvent "PoolName '"&strPoolName&"' should present in PoolID Edit box","PoolName '"&strPoolName&"' is present in PoolID Edit box", Null
				Else
					FRM_Logger_ReportFailEvent "PoolName '"&strPoolName&"' should present in PoolID Edit box","PoolName '"&strPoolName&"' is not present in PoolID Edit box", Null
				End If
				If UTIL_String_IsMatch(strActCommitmentDate, BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "dateCommitment"))) Then
					FRM_Logger_ReportPassEvent "Commitment Date '"&strActCommitmentDate&"' should present in Commitment Date Edit box","Commitment Date '"&strActCommitmentDate&"' is present in Commitment Date Edit box", Null
				Else
					FRM_Logger_ReportFailEvent "Commitment Date '"&strActCommitmentDate&"' should present in Commitment Date Edit box","Commitment Date '"&strActCommitmentDate&"' is not present in Commitment Date Edit box", Null
				End If
				If UTIL_String_IsMatch(strActInvestorDeliveryDate, BIZ_SecondaryMarket_ConvertDate(FRM_DS_GetValue(objData, "dateInvestorDelivery"))) Then
					FRM_Logger_ReportPassEvent "Investor Delivery Date '"&strActInvestorDeliveryDate&"' should present in Investor Delivery Date Edit box","Investor Delivery Date '"&strActInvestorDeliveryDate&"' is present in Investor Delivery Date Edit box", Null
				Else
					FRM_Logger_ReportFailEvent "Investor Delivery Date '"&strActInvestorDeliveryDate&"' should present in Investor Delivery Date Edit box","Investor Delivery Date '"&strActInvestorDeliveryDate&"' is not in Investor Delivery Date Edit box", Null
				End If
				If intInvestorNum >= 0 Then
					FRM_Logger_ReportPassEvent "Investor should present in Investor Column","Investor is present in Investor Column", Null
				Else
					FRM_Logger_ReportFailEvent "Investor should present in Investor Column","Investor is not present in Investor Column", Null
				End If
				BIZ_Loan_Save()
				BIZ_Loan_Exit True
			End If
		Else
			FRM_Logger_ReportFailEvent "Loans Assigned","Loan not Assigned to Pool", Null
		End If
	End IF
	
	Set objHomePage    = Nothing
	Set objGridStatus  = Nothing
	
End Function



'This function is used to Changes the Investor Name
'@code
'   BIZ_SecondaryMarket_Trades_ChangeInvestor(strPoolType)
'@endcode
'@param strPoolType -  rowId for Data

Function BIZ_SecondaryMarket_Trades_ChangeInvestor(strPoolType)

	FRM_Logger_ReportInfoEvent "Start Change Investor","Scrpit Name - SecondaryMarket_Trades_MBSPool_Fannie_ChangeInvestor_004", Null
	
	Dim objHomePage, objNewMBSPage, objLoanStartUpdate, objGridStatus, objData, objInvestorTemplate
	
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objNewMBSPage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MbsPoolMortgageTypeDialog")
	Set objLoanStartUpdate = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")
	Set objGridStatus = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridSnapshot")
	Set objData = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie", strPoolType)
	Set objInvestorTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=InvestorTemplateSelector")
	
	GUI_SwfTab_Click objHomePage.SwfTab("swfname:=tabTrade"), "Details"
	FRM_Logger_ReportInfoEvent "Details Tab", "Clicked on Details Tab", Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strChangeInvestorName")) Then	
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnInvestorTemplate")
		FRM_Logger_ReportInfoEvent "Clicked on Tempate Glass", "Clicked on template Glass", Null
		If GUI_Object_IsExistX(objInvestorTemplate.SwfObject("swfname:=gvTemplates"),60) Then
			GUI_List_ClickRow objInvestorTemplate.SwfObject("swfname:=gvTemplates"), Null, "Investor Name", FRM_DS_GetValue(objData, "strChangeInvestorName"), True, False, False, "Single"
			FRM_Logger_ReportInfoEvent "selected the Chnage Investor", "Investor  Name Sslected for chnage--"&FRM_DS_GetValue(objData, "strChangeInvestorName"), Null
			GUI_SwfButton_Click objInvestorTemplate.SwfButton("swfname:=btnOK")
			FRM_Logger_ReportInfoEvent "Click on OK Button", "After Investor Seleccted Clicked on OK Button", Null
		End If
	End If
		
	strActInvestorName = GUI_Object_GetPropertyValue(objHomePage.SwfEdit("swfname:=txtInvestor"),"text") 
	If Util_String_IsMatch(strActInvestorName,FRM_DS_GetValue(objData, "strChangeInvestorName")) Then
		FRM_Logger_ReportPassEvent "Start Change Investor","Investor Name is displaying - " &strActInvestorName, Null
	Else
		FRM_Logger_ReportFailEvent "Start Change Investor","Investor Name is not displaying - " &strActInvestorName,, Null
	End If
	
	GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
	FRM_Logger_ReportInfoEvent "Save Details","Clicked on save for Pool", Null
	
	GUI_Dialog_Encompass_YesX 15, Null
	If GUI_Object_IsExistX(objLoanStartUpdate, 60) Then
		GUI_SwfButton_Click objLoanStartUpdate
		FRM_Logger_ReportInfoEvent "Update Details","Clicked on Update Button for Pool", Null
	End If
	GUI_Dialog_Encompass_OKX 15, Null
	
	GUI_SwfTab_Click objHomePage.SwfTab("swfname:=tabTrade"), "Loans"
	FRM_Logger_ReportInfoEvent "Loans Tab","Clicked on Loans Tab", Null
		
	If GUI_Object_IsExistX(objHomePage.SwfCheckBox("swfname:=chkViewEligible"), 60) Then
		intRow1 = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvLoans"))
		If intRow1>=0 Then
			GUI_List_ClickRow objHomePage.SwfObject("swfname:=gvLoans"), Null, "Trade Assignment Status", "Assigned", True, False, False, "Double"
			FRM_Logger_ReportInfoEvent "Assigned Row selction","Selected the Assigned Loan", Null
			If GUI_Object_IsExistX(objHomePage.SwfLabel("swfname:=label4","index:=0"), 60) Then
				BIZ_SecondaryMarket_ToolsNavigation "Secondary Registration"
				FRM_Logger_ReportInfoEvent "Navigate to Secondary Registration","navigated to Secondary registration", Null
				intInvestorNum = GUI_List_GetRowIndex(objGridStatus,"Investor",FRM_DS_GetValue(objData, "strChangeInvestorName"))
				If intInvestorNum >= 0 Then
					FRM_Logger_ReportPassEvent "Change the Investor name to '"&FRM_DS_GetValue(objData, "strChangeInvestorName")&"'", "Investor name is changed to '"&FRM_DS_GetValue(objData, "strChangeInvestorName")&"' successfully", Null
				Else
					FRM_Logger_ReportFailEvent "Change the Investor name to '"&FRM_DS_GetValue(objData, "strChangeInvestorName")&"'", "Investor name is not changed to '"&FRM_DS_GetValue(objData, "strChangeInvestorName")&"'", Null
				End If
			End If
			BIZ_Loan_Save()
			BIZ_Loan_Exit True
		Else
			FRM_Logger_ReportFailEvent "Loans Assigned","Loan not Assigned to Pool", Null
		End If
	End If	
	
	Set objHomePage         = Nothing
	Set objNewMBSPage		= Nothing
	Set objLoanStartUpdate  = Nothing
	Set objGridStatus		= Nothing
	Set objData				= Nothing
	Set objInvestorTemplate = Nothing
	
End Function



'This function is used to Remove the Loan from Trades
'@code
'   Function BIZ_SecondaryMarket_Trades_Loans_Remove()
'@endcode
'@param 

Function BIZ_SecondaryMarket_Trades_Loans_Remove()
	FRM_Logger_ReportInfoEvent "Start Loan Deletion","Loans updation for Pool- BIZ_SecondaryMarket_Trades_Loans_Remove", Null

	Dim objHomePage, objGridStatus
	
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	set objNoti = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=TradeLoanUpdateNotificationDialog")
	
	If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=gvLoans"), 60) Then
		intRow1 = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvLoans"))
		If intRow1>=0 Then
			GUI_List_ClickRow objHomePage.SwfObject("swfname:=gvLoans"), Null, "Trade Assignment Status", "Assigned", True, False, False, "Single"
			FRM_Logger_ReportInfoEvent "Select Loan","Selected the Loan", Null
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnRemoveLoans")
			FRM_Logger_ReportInfoEvent "Remove Button","Clicked on remove Button", Null
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SWfwindow("swfname:=RemoveLoansOptionsDialog").SwfButton("swfname:=btnYes"), 60)Then
				GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SWfwindow("swfname:=RemoveLoansOptionsDialog").SwfButton("swfname:=btnYes")
				FRM_Logger_ReportInfoEvent "DiaLog Button for Delete Loan","Clicked on DiaLog Button for Pool", Null
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
				FRM_Logger_ReportInfoEvent "Save Details for Loan","Clicked on Save Button for Pool", Null
				strDataText = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass").Static("index:=0").GetROProperty("text")
				If Util_String_IsMatch(Replace(strDataText,vbCrLf,"") ,"The Fannie Mae PE MBS Pool has been saved successfully.Would you like to update the loan files with these recent changes?")Then
					GUI_Dialog_Encompass_YesX 15, Null
					If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")) Then
						GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")
						GUI_Dialog_Encompass_OK "MBS Pool "&strPoolName&" has been successfully submitted for update and is in pending status"
					ElseIf GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")) Then
						GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
						GUI_Dialog_Encompass_OKX 15, Null
					End If
					GUI_Dialog_Encompass_OKX 15, Null
				Else
					GUI_Dialog_Encompass_YesX 15, Null
					if GUI_Object_isExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK"), 15) then
						GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")
					ElseIf GUI_Object_isExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK"), 15) Then
						GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
					End If
					GUI_Dialog_Encompass_OKX 15, Null
					GUI_Dialog_Encompass_YesX 15, Null
					GUI_Dialog_Encompass_YesX 15, Null
					GUI_Dialog_Encompass_OKX 15, Null
					GUI_Dialog_Encompass_YesX 15, Null
				End If
				If GUI_Object_IsExistX(objNoti, 60) then
					GUI_Window_Close objNoti
				End IF
				GUI_SwfObject_Click objHomePage.swfObject("swfname:=btnList")
			End If
		End If
	Else
		FRM_Logger_ReportFailEvent "Loans Assigned","Loan not Assigned to Pool", Null
	End If
	
	Set objHomePage = Nothing
	
End Function



'This function is used to delete the Pool to Trades of MBS Pools
'@code
'   Function BIZ_SecondaryMarket_Trades_Pool_Deletion(strPoolName)
'@endcode
'@param strPoolName- Pool Name to delete

Function BIZ_SecondaryMarket_Trades_Pool_Deletion(strPoolName)

	FRM_Logger_ReportInfoEvent "Start Deletion Pool","Scrpit Name - Function BIZ_SecondaryMarket_Trades_Pool_Deletion", Null
	
	Dim objHomePage
	
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	
	BIZ_SecondaryMarket_Nav_Tradedetails strPoolName, 1
	If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=btnDelete"), 60) Then
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnDelete")
		FRM_Logger_ReportInfoEvent "Delete Pool Button","Clicked Delete Button", Null
		GUI_Dialog_Encompass_YesX 15, Null
		GUI_Dialog_Encompass_OKX 15, Null
		If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass").Static("index:=1"), 60) Then
			strDiaLogText = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass").Static("index:=1"),"text")
			If Util_String_isMatch(strDiaLogText, "The selected MBS Pool(s) will be permanently deleted. Are you sure you want to proceed?") Then
				GUI_Dialog_Encompass_YesX 15, Null
				GUI_Dialog_Encompass_OKX 15, Null
			End If
		End If
	Else
		FRM_Logger_ReportFailEvent "Delete Pool Button","Not Clicked Delete Button", Null
	End If
	
	Set objHomePage = Nothing
	
End Function



'This function is used to Navigate to Trades
'@code
'   Function BIZ_SecondaryMarket_Nav_Tradedetails(strColValue,initFieldIndexval)
'@endcode
'@param strColValue- Value to serach in Pool
'@param initFieldIndexval- index for text box

Function BIZ_SecondaryMarket_Nav_Tradedetails(strTradeName,initFieldIndexval)

    Dim objLoanList
    
    Set objLoanList = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen").SwfObject("swfname:=gvTradeList")
    
    If GUI_Object_IsExistX(objLoanList, 60) then
		SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:="&initFieldIndexval).Set strTradeName
		UTIL_Win_SendKey "{ENTER}"
		intRow = GUI_List_GetRowIndex(objLoanList, "Commitment Number", strTradeName)
		If intRow>=0 Then
			GUI_List_ActOnRow objLoanList, intRow+1, True, False, False, "Double"
			FRM_Logger_ReportPassEvent "Trade Details","Trade Secutity Exists in Page", Null
		Else
			FRM_Logger_ReportPassEvent "Trade Details","Trade Secutity Exists not in Page", Null
		End If
	End If
	
	Set objLoanList=nothing
	
End Function



'This function is used to Create the Loan trade
'@code
'   Function BIZ_SecondaryMarket_CreateNewTradeLoan(strRowLoan)
'@endcode
'@param strRowLoan - Get the details from the Excel

Function BIZ_SecondaryMarket_CreateNewTradeLoan(strRowLoan)
	
	FRM_Logger_ReportInfoEvent "Start Test Case Trade Security","Navigate to Security Trades SecondaryMarket_NavigationTOSecurityTrade", Null
	
	Set objData = FRM_DS_GetTestData("SecondaryMarket", "TradeLoan", strRowLoan)
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objTradeStartUpdate = SWfwindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
	Set objBTNNewTrade=objHomePage.SwfObject("swfname:=btnNew")
	Set objLBLNewTrade=objHomePage.SwfObject("swfname:=groupContainer1")
	Set objTabDetails=objHomePage.SwfTab("swfname:=btnTrades")
	Set objInvestorTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=InvestorTemplateSelector")
	Set objAddPric = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddPricingItemDialog")
	
	GUI_SwfObject_Click objBTNNewTrade
	
	If GUI_Object_IsExistX(objLBLNewTrade, 60) Then
		FRM_Logger_ReportInfoEvent "New Loan Trade Security","New Loan Trade page should be opened highlighting the Details tab", Null
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strSecurityID")) Then
			strTradeId = (FRM_DS_GetValue(objData, "strSecurityID"))
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtName"), strTradeId
			FRM_Logger_ReportInfoEvent "Trade Id Name","Trade ID Name Entered - "&strTradeId, Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "StrTradeCommitmentDate")) Then
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","index:=3"), FRM_DS_GetValue(objData, "StrTradeCommitmentDate")
			FRM_Logger_ReportInfoEvent "Commitment Date","Start Commitment Date Entered - "&FRM_DS_GetValue(objData, "StrTradeCommitmentDate"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCommitmentType")) Then
			GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbCommitmentType"), FRM_DS_GetValue(objData, "strCommitmentType")
			FRM_Logger_ReportInfoEvent "Commitment Type","Commitment Type Entered - "&FRM_DS_GetValue(objData, "StrTradeCommitmentDate"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTradeDescription")) Then
			GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbTradeDesc"), FRM_DS_GetValue(objData, "strTradeDescription")
			FRM_Logger_ReportInfoEvent "Trade Description","Trade Description Entered - "&FRM_DS_GetValue(objData, "strTradeDescription"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strInvestorName")) Then
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnInvestorTemplate")
			GUI_Object_IsExistX objInvestorTemplate.SwfObject("swfname:=gvTemplates"),30
			GUI_List_ClickRow objInvestorTemplate.SwfObject("swfname:=gvTemplates"), Null, "Investor Name", FRM_DS_GetValue(objData, "strInvestorName"), True, False, False, "Single"
			GUI_SwfButton_Click objInvestorTemplate.SwfButton("swfname:=btnOK")
			FRM_Logger_ReportInfoEvent "Investor Name","Investor Name Entered - "&FRM_DS_GetValue(objData, "strInvestorName"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTradeamount")) Then
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtAmount"), FRM_DS_GetValue(objData, "strTradeamount")
			FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Trade Amount","Trade Amount Data Entered - "&FRM_DS_GetValue(objData, "strTradeamount"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strInputTolerance")) Then
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtTolerance"), FRM_DS_GetValue(objData, "strInputTolerance")
			FRM_Logger_ReportInfoEvent "Trade Tolreance","Trade Tolerance Entered - "&FRM_DS_GetValue(objData, "strInputTolerance"), Null
		End If
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
		'Pricing
		GUI_SwfTab_Click objHomePage.SwfTab("swfname:=tabTrade"),"Pricing"
		GUI_Object_WaitTillVisibleX objHomePage.SwfObject("swfname:=btnAdd","index:=1"),30
		
		If GUI_Object_IsExist(objHomePage.SwfObject("swfname:=btnAdd","index:=1")) Then
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnAdd","index:=1")
			If GUI_Object_IsExist(objAddPric) Then
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtRate"), FRM_DS_GetValue(objData, "NoteRateValue")
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtPrice"), FRM_DS_GetValue(objData, "Price")
				GUI_SwfButton_Click objAddPric.SwfButton("swfname:=btnAddAnother")
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtRate"), FRM_DS_GetValue(objData, "NoteRateValue1")
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtPrice"), FRM_DS_GetValue(objData, "Price1")
				GUI_SwfButton_Click objAddPric.SwfButton("swfname:=btnAddAnother")
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtRate"), FRM_DS_GetValue(objData, "NoteRateValue2")
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtPrice"), FRM_DS_GetValue(objData, "Price2")
				GUI_SwfButton_Click objAddPric.SwfButton("swfname:=btnOK")
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
		
				intRow = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvPricing","index:=1"))
				If intRow<=3 Then
					FRM_Logger_ReportInfoEvent "Rows after Price Add","All the Pricing information Populated", Null
				Else
					FRM_Logger_ReportFailEvent "Rows after Price Add","All the Pricing information not Populated", Null
				End If
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnList")
			End If
		End If
		
	Else
		FRM_Logger_ReportFailEvent "New Trade Security","New Trade page not highlighted the Details tab", Null
	End If
	
	BIZ_SecondaryMarket_CreateNewTradeLoan=strTradeId

End Function



'This function is used to Create the Security trade
'@code
'   Function BIZ_SecondaryMarket_CreateNewSecurityTradeLoan(strRowLoan)
'@endcode
'@param strRowLoan - Get the details from the Excel

Function BIZ_SecondaryMarket_CreateNewSecurityTradeLoan(strRowLoan)
	
	FRM_Logger_ReportInfoEvent "Start Test Case Trade Security","Navigate to Security Trades SecondaryMarket_NavigationTOSecurityTrade", Null
	
	Set objData = FRM_DS_GetTestData("SecondaryMarket", "TradeLoan", strRowLoan)
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objTradeStartUpdate = SWfwindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
	Set objBTNNewTrade=objHomePage.SwfObject("swfname:=btnNew")
	Set objLBLNewTrade=objHomePage.SwfObject("swfname:=groupContainer1")
	Set objAddPric = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SecurityTradePairOffDialog")
	GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnNew")
	If GUI_Object_IsExistX(objLBLNewTrade, 60) Then
		FRM_Logger_ReportInfoEvent "Security Loan Trade Security","New Security Trade page should be opened highlighting the Details tab", Null
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strSecurityID")) Then
			strTradeId = (FRM_DS_GetValue(objData, "strSecurityID"))
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtName"), strTradeId
			FRM_Logger_ReportInfoEvent "Trade Id Name","Trade ID Name Entered - "&strTradeId, Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCommitmentType")) Then
			GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cboCommitmentType"), FRM_DS_GetValue(objData, "strCommitmentType")
			FRM_Logger_ReportInfoEvent "Commitment Type","Commitment Type Entered - "&FRM_DS_GetValue(objData, "strCommitmentType"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTradeDescription")) Then
			GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cboTradeDescription"), FRM_DS_GetValue(objData, "strTradeDescription")
			FRM_Logger_ReportInfoEvent "Trade Description","Trade Description Entered - "&FRM_DS_GetValue(objData, "strTradeDescription"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strProgramType")) Then
			GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cboProgramType"), FRM_DS_GetValue(objData, "strProgramType")
			FRM_Logger_ReportInfoEvent "Program Type","Program Type Entered - "&FRM_DS_GetValue(objData, "strProgramType"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTradeamount")) Then
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtAmount"), FRM_DS_GetValue(objData, "strTradeamount")
			FRM_Logger_ReportInfoEvent "Trade Amount","Trade Amount Entered - "&FRM_DS_GetValue(objData, "strTradeamount"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strInputTolerance")) Then
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtTolerance"), FRM_DS_GetValue(objData, "strInputTolerance")
			FRM_Logger_ReportInfoEvent "Trade Tolerance","Trade Tolerance Entered - "&FRM_DS_GetValue(objData, "strInputTolerance"), Null
		End If
		intMinText = GUI_Object_GetPropertyValue(objHomePage.SwfEdit("swfname:=txtMinAmt"), "text")
		intMaxText = GUI_Object_GetPropertyValue(objHomePage.SwfEdit("swfname:=txtMaxAmt"), "text")
		FRM_VerifyEqual Replace(intMinText,",",,""), cint(FRM_DS_GetValue(objData, "intMinAmount")), "Trade Min Amount", "Trade Minimum amount valiadation"
		FRM_VerifyEqual Replace(intMaxText,",",,""), cint(FRM_DS_GetValue(objData, "intMaxAmount")), "Trade Min Amount", "Trade Minimum amount valiadation"
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTextDate")) Then
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","index:=3"), FRM_DS_GetValue(objData, "strTextDate")
			FRM_Logger_ReportInfoEvent "Trade Commitment Date","Trade Commitment Date Entered - "&FRM_DS_GetValue(objData, "strTextDate"), Null
		End If
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
		'Pair-Off 
		If GUI_Object_IsExist(objHomePage.SwfObject("swfname:=gvPairOffs","index:=1")) Then
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=gvPairOffs","index:=1")
			boolExists = GUI_List_ClickRow(objHomePage.SwfObject("swfname:=gvPairOffs","index:=1"), Null, "Pair-Off #", "Pair-Off 1", True, False, False, "Double")
			If boolExists Then
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtDate"), FRM_DS_GetValue(objData, "StrTradeCommitmentDate")
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtTradeAmount"), FRM_DS_GetValue(objData, "strAssignTradeamount")
				GUI_SwfEdit_Set objAddPric.SwfEdit("swfname:=txtBuyPrice"), FRM_DS_GetValue(objData, "strPairOfBuyPrice")
				GUI_SwfButton_Click objAddPric.SwfButton("swfname:=btnOK")
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
				intRow = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvPairOffs","index:=1"))
				If intRow>=0 Then
					FRM_Logger_ReportInfoEvent "Rows after Pair-Off Add","All the Pair-Off information Populated", Null
				Else
					FRM_Logger_ReportFailEvent "Rows after Pair-Off Add","All the Pair-Off information not Populated", Null
				End If
			End If
		End If
	Else
		FRM_Logger_ReportFailEvent "New Trade Security","New Trade page not highlighted the Details tab", Null
	End If
	
	BIZ_SecondaryMarket_CreateNewSecurityTradeLoan=strTradeId

End Function



'This function is used to Create the Correspondent Loan trade
'@code
'   Function BIZ_SecondaryMarket_CorrespondentLoanTradeCreation(strRow)
'@endcode
'@param strRow - Get the details from the Excel

Function BIZ_SecondaryMarket_CorrespondentLoanTradeCreation(strRow)
	
	FRM_Logger_ReportInfoEvent "StartLoanTradeCreation","Prequiste - BIZ_SecondaryMarket_CorrespondentLoanTradeCreation", Null
	
	Dim objMainFormWnd,objHomePage,objData,objPricingDialog,strTradeId,objInvestorTemplate
	
	Set objMainFormWnd  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHomePage	    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objData         = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie",strRow)
	Set objPricingDialog= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddPricingItemDialog")
	Set objInvestorTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=InvestorTemplateSelector")
	
	strTradeId= FRM_DS_GetValue(objData, "strPoolId")
		
	If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=btnNew"), 60) Then
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnNew")
		If UTIL_String_IsNotEmpty(strTradeId) Then	
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtName","index:=0"), strTradeId
			FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Trade id Type","Trade id Type  Data Entered - "&strTradeId, Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCommitmentType")) Then	
			GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbCommitmentType"), FRM_DS_GetValue(objData, "strCommitmentType")
			FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Commitment Type","Commitment Type Data Entered - "&FRM_DS_GetValue(objData, "strCommitmentType"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTradeDescription")) Then	
			GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbTradeDesc"), FRM_DS_GetValue(objData, "strTradeDescription")
			FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Trade description","Trade description Data Entered - "&FRM_DS_GetValue(objData, "strTradeDescription"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strInvestorName")) Then	
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnInvestorTemplate")
			GUI_Object_IsExistX objInvestorTemplate.SwfObject("swfname:=gvTemplates"),30
			GUI_List_ClickRow objInvestorTemplate.SwfObject("swfname:=gvTemplates"), Null, "Investor Name", FRM_DS_GetValue(objData, "strInvestorName"), True, False, False, "Single"
			GUI_SwfButton_Click objInvestorTemplate.SwfButton("swfname:=btnOK")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strAssignTradeamount")) Then	
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtAmount","index:=0"), FRM_DS_GetValue(objData, "strAssignTradeamount")
			FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Trade Amount","Trade Amount  Data Entered - "&FRM_DS_GetValue(objData, "strAssignTradeamount"), Null
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strAssignInputTolerance")) Then	
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtTolerance","index:=0"), FRM_DS_GetValue(objData, "strAssignInputTolerance")
			FRM_Logger_ReportInfoEvent "Start Loan Data Creation--Tolerance","Tolerance  Data Entered - "&FRM_DS_GetValue(objData, "strAssignInputTolerance"), Nul
		End If
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
		GUI_SwfTab_Click objHomePage.SwfTab("swfname:=tabTrade"), "Pricing"
		If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=btnAdd","index:=1"),60) Then
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnAdd","index:=1")
			FRM_Logger_ReportPassEvent "Click on Add Pricing data", "Add Pricing button Clicked", Null
			If GUI_Object_IsExistX(objPricingDialog,60) Then
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NoteRateValue")) Then	
					GUI_SwfEdit_Set objPricingDialog.SwfEdit("swfname:=txtRate","index:=0"), FRM_DS_GetValue(objData, "NoteRateValue")
					FRM_Logger_ReportInfoEvent "Pricing Data--NoteRateValue","NoteRateValue  Data Entered - "&FRM_DS_GetValue(objData, "NoteRateValue"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Price")) Then	
					GUI_SwfEdit_Set objPricingDialog.SwfEdit("swfname:=txtPrice","index:=0"), FRM_DS_GetValue(objData, "Price")
					FRM_Logger_ReportInfoEvent "Pricing Data--Price","Price  Data Entered - "&FRM_DS_GetValue(objData, "Price"), Null
				End If
				GUI_SwfButton_Click objPricingDialog.SwfButton("swfname:=btnAddAnother")
				FRM_Logger_ReportInfoEvent "Add another Button", "Add another Button clicked", Null
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NoteRateValue1")) Then	
					GUI_SwfEdit_Set objPricingDialog.SwfEdit("swfname:=txtRate","index:=0"), FRM_DS_GetValue(objData, "NoteRateValue1")
					FRM_Logger_ReportInfoEvent "Pricing Data--NoteRateValue","NoteRateValue  Data Entered - "&FRM_DS_GetValue(objData, "NoteRateValue1"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Price")) Then	
					GUI_SwfEdit_Set objPricingDialog.SwfEdit("swfname:=txtPrice","index:=0"), FRM_DS_GetValue(objData, "Price1")
					FRM_Logger_ReportInfoEvent "Pricing Data--Price","Price  Data Entered - "&FRM_DS_GetValue(objData, "Price1"), Null
				End If
				GUI_SwfButton_Click objPricingDialog.SwfButton("swfname:=btnAddAnother")
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NoteRateValue2")) Then	
					GUI_SwfEdit_Set objPricingDialog.SwfEdit("swfname:=txtRate","index:=0"), FRM_DS_GetValue(objData, "NoteRateValue2")
					FRM_Logger_ReportInfoEvent "Pricing Data--NoteRateValue","NoteRateValue  Data Entered - "&FRM_DS_GetValue(objData, "NoteRateValue2"), Null
				End If
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Price2")) Then	
					GUI_SwfEdit_Set objPricingDialog.SwfEdit("swfname:=txtPrice","index:=0"), FRM_DS_GetValue(objData, "Price2")
					FRM_Logger_ReportInfoEvent "Pricing Data--Price","Price  Data Entered - "&FRM_DS_GetValue(objData, "Price2"), Null
				End If
				GUI_SwfButton_Click objPricingDialog.SwfButton("swfname:=btnOK")
				If GUI_Object_IsEnabled(objHomePage.SwfObject("swfname:=btnSave"),60) Then
					GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
				End If
				If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=btnTrades"),60) Then
					GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnTrades")
					If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=gvTradeList"),60) Then
						intTblNameRowindex = GUI_List_GetRowIndex(objHomePage.SwfObject("swfname:=gvTradeList"), "Trade ID",Trim(strTradeId)) 
	    				GUI_List_ValidateCellData objHomePage.SwfObject("swfname:=gvTradeList"), intTblNameRowindex, "Trade ID", strTradeId
					Else
						FRM_Logger_ReportFailEvent "Add pricing Data dialog box should be opened", "Add pricing Data dialog box is not opened", Null
					End If
				End If
			End If
		End If
	End If	
	Set objMainFormWnd   	= Nothing
	Set objHomePage	     	= Nothing
	Set objData         	= Nothing  
	Set objPricingDialog    = Nothing	
	Set objInvestorTemplate = Nothing	
	
	BIZ_SecondaryMarket_CorrespondentLoanTradeCreation = strTradeId
	
End Function



'This function is used to Edit Existing Trade
'@code
'   Function BIZ_SecondaryMarket_LoanEditExistingTrade(strColValue,strRow)
'@endcode
'@param strColValue - is used to assign pool value
'@param strRow - Get the details from the Excel

Function BIZ_SecondaryMarket_LoanEditExistingTrade(strColValue,strRow)
		
	FRM_Logger_ReportInfoEvent "StartEdit Existing LoanTrade","BIZ_SecondaryMarket_LoanEditExistingTrade", Null
	Dim objSettings,objLoanList,objLoanAssignment,objLoanAssignmentResult
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")  
    Set objLoanList = objHomePage.SwfObject("swfname:=gvTradeList")
	Set objLoanAssignment= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanAssignmentFromFileImport")
	Set objLoanAssignmentResult= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TradeLoanUpdateCompleteDialog")
	Set objLoanSyncDialog= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TradeLoanSyncDlg")
		
	If GUI_Object_IsExistX(objLoanList, 60) Then
		BIZ_SecondaryMarket_Nav_Tradedetails strColValue,1
		If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=btnEdit"), 20) Then
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnEdit")
			If GUI_Object_IsExistX(objHomePage.SwfTab("swfname:=tabTrade"), 30) Then
				GUI_SwfTab_Click objHomePage.SwfTab("swfname:=tabTrade"), "Loans"
				If Not GUI_Object_GetPropertyValue(objHomePage.SwfCheckBox("swfname:=chkViewEligible"),"checked") Then
					GUI_SwfObject_Click objHomePage.SwfCheckBox("swfname:=chkViewEligible")
				End If
			End If
		End If	 
	End IF
	Set objLoanList=nothing

End Function



'This function is used to Edit Existing Trade
'@code
'   Function BIZ_SecondaryMarket_CorrespondentLoanEditExistingTrade(strColValue,strRow)
'@endcode
'@param strColValue - is used to assign pool value
'@param strRow - Get the details from the Excel

Function BIZ_SecondaryMarket_CorrespondentLoanEditExistingTrade(strColValue,strRow)
		
	FRM_Logger_ReportInfoEvent "StartEdit Existing LoanTrade","BIZ_SecondaryMarket_LoanEditExistingTrade", Null
	Dim objHomePage,objCorrespondentTrade, objThirdpartyOriginator,objData
	
	Set objHomePage = SwfWindow("swfname:=MainForm").Swfwindow("swfname:=MainScreen")
	Set objCorrespondentTrade= SwfWindow("swfname:=MainForm").Swfwindow("swfname:=NewCorrespondentTrade")
	Set objThirdpartyOriginator= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanyMasterSelectorForm")
	Set objData = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie", strRowID)
   		
	BIZ_Nav_SelectTabControl "Trades"
	GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnCorrespondentTrades")
	
	GUI_Object_IsExistX objHomePage.SwfObject("swfname:=btnNew"), 20
	GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnNew")
    GUI_Object_IsExistX objCorrespondentTrade.SwfObject("swfname:=btnSelector"), 20
    GUI_SwfObject_Click	objCorrespondentTrade.SwfObject("swfname:=btnSelector")	
	GUI_List_ClickRow objThirdpartyOriginator.SwfObject("swfname:=grd3rdParties"), Null, 0, "Prolifics TPO", True, False, False, "Single"
	GUI_SwfButton_Click	objThirdpartyOriginator.SwfButton("swfname:=btnSelect")	
	GUI_SwfRadioButton_Click objCorrespondentTrade.SwfRadioButton("swfname:=rdoMandatory")
	GUI_SwfButton_Click	objCorrespondentTrade.SwfButton("swfname:=btnSave")
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strPoolId")) Then
		GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtCommitmentNumber"), FRM_DS_GetValue(objData, "strPoolId")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment---"&FRM_DS_GetValue(objData, "strPoolId"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "dateCommitment")) Then
		GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate"), FRM_DS_GetValue(objData, "dateCommitment")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment date---"&FRM_DS_GetValue(objData, "dateCommitment"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTradeDescription")) Then
		GUI_SwfEdit_Set objHomePage.SwfComboBox("swfname:=cmbTradeDesc"), FRM_DS_GetValue(objData, "strTradeDescription")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment description---"&FRM_DS_GetValue(objData, "strTradeDescription"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "MasterCommitment")) Then
		GUI_SwfEdit_Set objHomePage.SwfComboBox("swfname:=cboMasters"), FRM_DS_GetValue(objData, "MasterCommitment")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment MasterCommitment---"&FRM_DS_GetValue(objData, "MasterCommitment"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "DeliveryType")) Then
		GUI_SwfEdit_Set objHomePage.SwfComboBox("swfname:=cmbDeliveryType"), FRM_DS_GetValue(objData, "DeliveryType")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment DeliveryType---"&FRM_DS_GetValue(objData, "DeliveryType"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "intPoolAmount")) Then
		GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtAmount"), FRM_DS_GetValue(objData, "intPoolAmount")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment Trade Amount---"&FRM_DS_GetValue(objData, "intPoolAmount"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strAssignInputTolerance")) Then
		GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtTolerance"), FRM_DS_GetValue(objData, "strAssignInputTolerance")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment Tolerance---"&FRM_DS_GetValue(objData, "strAssignInputTolerance"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "dateInvestorDelivery")) Then
		GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","index:=2"), FRM_DS_GetValue(objData, "dateInvestorDelivery")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment Expiration date---"&FRM_DS_GetValue(objData, "dateInvestorDelivery"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "dateInvestorDelivery")) Then
		GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","index:=0"), FRM_DS_GetValue(objData, "dateInvestorDelivery")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment Delivery Expiration date---"&FRM_DS_GetValue(objData, "dateInvestorDelivery"), Null
	End If

	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "MasterEffective")) Then
		GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtExpirationDate;panel2;.*"), FRM_DS_GetValue(objData, "MasterEffective")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Master Effective date---"&FRM_DS_GetValue(objData, "MasterEffective"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "MasterExpiry")) Then
		GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtDeliveryExpirationDate;panel2;.*"), FRM_DS_GetValue(objData, "MasterExpiry")
		FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment description---"&FRM_DS_GetValue(objData, "MasterExpiry"), Null
	End If
	
	GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
	
	Set objHomePage 		   = Nothing
	Set objCorrespondentTrade  = Nothing
	Set objThirdpartyOriginator= Nothing
	Set objData 			   = Nothing

End Function



'This function is used to Remove the Loan from Trades
'@code
'   Function BIZ_SecondaryMarket_Trades_Loans_RemoveCorrespondentLoan()
'@endcode

Function BIZ_SecondaryMarket_Trades_Loans_RemoveCorrespondentLoan()
	FRM_Logger_ReportInfoEvent "Start Loan Deletion","Loans updation for Pool- BIZ_SecondaryMarket_Trades_Loans_Remove", Null

	Dim objHomePage, objGridStatus
	
	Set objHomePage = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	set objNoti = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=TradeLoanUpdateNotificationDialog")
	
	intRow1 = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvLoans"))
	If intRow1>=0 Then
		 GUI_List_ActOnRow objHomePage.SwfObject("swfname:=gvLoans"), intRow1-1, False, False, False, "Single"
		 
		'GUI_List_ClickRow objHomePage.SwfObject("swfname:=gvLoans"), Null, "Trade Assignment", "Assigned", False, False, False, "Single"
		FRM_Logger_ReportInfoEvent "Select Loan","Selected the Loan", Null
	
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnRemoveLoans")
		FRM_Logger_ReportInfoEvent "Remove Button","Clicked on remove Button", Null
			
		GUI_Object_IsExistX SwfWindow("swfname:=MainForm").SWfwindow("swfname:=RemoveLoansOptionsDialog").SwfButton("swfname:=btnYes"), 30
		
		If GUI_Object_IsExist (SwfWindow("swfname:=MainForm").SWfwindow("swfname:=RemoveLoansOptionsDialog").SwfButton("swfname:=btnYes"))Then
			
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SWfwindow("swfname:=RemoveLoansOptionsDialog").SwfButton("swfname:=btnYes")
			FRM_Logger_ReportInfoEvent "DiaLog Button for Delete Loan","Clicked on DiaLog Button for Pool", Null
	
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
			FRM_Logger_ReportInfoEvent "Save Details for Loan","Clicked on Save Button for Pool", Null
				
			strDataText = SwfWindow("swfname:=MainForm").DiaLog("text:=EnCompass").Static("index:=0").GetROProperty("text")
			
			If Util_String_IsMatch(Replace(strDataText,vbCrLf,"") ,"The Fannie Mae PE MBS Pool has been saved successfully.Would you like to update the loan files with these recent changes?")Then
				GUI_Dialog_Encompass_YesX 15, Null
				If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")) Then
					GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MbsPoolLoanSyncDlg").SwfButton("swfname:=btnOK")
					GUI_Dialog_Encompass_OK "MBS Pool "&strPoolName&" has been successfully submitted for update and is in pending status"
				End If
				GUI_Dialog_Encompass_OK "*. has been successfully submitted for update and is in pending status"
			
			Else
				GUI_Dialog_Encompass_YesX 15, Null
				GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
				GUI_Dialog_Encompass_OKX 15, Null
			End If	
			If GUI_Object_IsExist(objNoti) then
				GUI_Window_Close objNoti
			End IF
			GUI_SwfObject_Click objHomePage.swfObject("swfname:=btnList")
		End If
		
	Else
		FRM_Logger_ReportFailEvent "Loans Assigned","Loan not Assigned to Pool", Null
	End If
	
	Set objHomePage = Nothing
	
End Function



'This function is used to Remove the Loan from Trades
'@code
'   Function BIZ_SecondaryMarket_Trades_CorrespondentLoans_SecondaryRegistration(strPoolName,strPoolType)
'@endcode
'@param strPoolName to verify correspondent loan
'@param strPoolType get data from excel

Function BIZ_SecondaryMarket_Trades_CorrespondentLoans_SecondaryRegistration(strPoolName, strPoolType)

	FRM_Logger_ReportInfoEvent "Start Secondary Registration","Loans updation for Pool- BIZ_SecondaryMarket_Trades_Loans_SecondaryRegistration", Null

	Dim objHomePage, objGridStatus, intRow1
	
	Set objHomePage    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objGridStatus  = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridSnapshot")
	Set objLoanPage    = objHomePage.SWfwindow("swfname:=LoanPage")
	Set objData        = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie", strPoolType)
	
	intRow1 = GUI_List_GetNumberofRows(objHomePage.SwfObject("swfname:=gvLoans"))
	
	If intRow1 >= 0 Then
		strLoanNumber = GUI_List_GetCellData(objHomePage.SwfObject("swfname:=gvLoans"),0, 2)
		BIZ_Pipeline_SelectPipelineViewAndLoanFolder "Administrator - Default View", "<All Folders>"
		BIZ_Loan_OpenByLoanNumber strLoanNumber
		BIZ_SecondaryMarket_ToolsNavigation "Secondary Registration"
		
		intRow2 = GUI_List_GetNumberofRows(objLoanPage.SwfObject("swfname:=gridSnapshot"))
		
		If intRow2 <0 Then
			FRM_Logger_ReportPassEvent "Records","Records not available", Null
		Else
			FRM_Logger_ReportFailEvent "Records","Records  available", Null
		End If
		
		BIZ_Loan_Exit False
	Else
		FRM_Logger_ReportFailEvent "Loans Assigned","Loan not Assigned to Pool", Null
	End If
	
	Set objHomePage    = Nothing
	Set objGridStatus  = Nothing
	Set objLoanPage	   = Nothing
	
End Function



'This function is used to validate the warning message for Desk Lock hours
'@code
'   BIZ_SecondaryMarket_TPOSettingsForCorrespondentLoan(strTPOName, strTreeViewName)
'@endcode
'@param

Function BIZ_SecondaryMarket_TPOSettingsForCorrespondentLoan(strTPOName, strTreeViewName)
	
	FRM_Logger_ReportInfoEvent "Start TPO Settings","Scrpit Name - BIZ_SecondaryMarket_TPOSettingsForChannelDefault", Null
	
	Dim objONRPDetailsPage
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objONRPDetailsPage = objSetupContainer.SwfWindow("swfname:=EditCompanyDetailsDialog")
	
	Set objAddSalesRepForm=objONRPDetailsPage.SwfWindow("swfname:=AddSalesRepForm")
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "External Company Setup", "Company Details"
	
		
	GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), strTreeViewName	
	FRM_Logger_ReportInfoEvent "Navigate to Hierarchy Tree","Navigated to Third party Originators", Null
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNewOrg")
	FRM_Logger_ReportInfoEvent "Click on New Object","Clicked on New Object", Null
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strOrgnization")) Then
		GUI_SwfEdit_Set objONRPDetailsPage.SwfEdit("swfname:=txtOrgName"), FRM_DS_GetValue(objData, "strOrgnization")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "strOrgnization"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strOrgType")) Then
		GUI_SwfComboBox_Select objONRPDetailsPage.SwfComboBox("swfname:=cmbOnrpSunEndBN","index:=0"),FRM_DS_GetValue(objData, "strOrgType")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "strOrgType"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "ChannelType")) Then
		GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkBroker"), "On"
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "ChannelType"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "ChannelType")) Then
		GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chkCorrespondent"), "On"
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "ChannelType"), Null
	End If
	
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCompanyLegalName")) Then
		GUI_SwfEdit_Set objONRPDetailsPage.SwfEdit("swfname:=txtName"), FRM_DS_GetValue(objData, "strCompanyLegalName")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "strCompanyLegalName"), Null
	End If
	
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strAddress")) Then
		GUI_SwfEdit_Set objONRPDetailsPage.SwfEdit("swfname:=txtAddress"), FRM_DS_GetValue(objData, "strAddress")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "strAddress"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCity")) Then
		GUI_SwfEdit_Set objONRPDetailsPage.SwfEdit("swfname:=txtCity"), FRM_DS_GetValue(objData, "strCity")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "strCity"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strState")) Then
		GUI_SwfEdit_Set objONRPDetailsPage.SwfEdit("swfname:=cboStateAddr"), FRM_DS_GetValue(objData, "strState")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "strState"), Null
	End If
	
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zipcode")) Then
		GUI_SwfEdit_Set objONRPDetailsPage.SwfEdit("swfname:=txtZip"), FRM_DS_GetValue(objData, "Zipcode")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "Zipcode"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "PhoneNumber")) Then
		GUI_SwfEdit_Set objONRPDetailsPage.SwfEdit("swfname:=txtPhone"), FRM_DS_GetValue(objData, "PhoneNumber")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "PhoneNumber"), Null
	End If
	
	GUI_SwfObject_Click objONRPDetailsPage.SwfObject("swfname:=btnAddRep")
	
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strPrimarySales")) Then 
       GUI_List_Select objONRPDetailsPage,  FRM_DS_GetValue(objData, "strPrimarySales")
    End If  
	
		
	GUI_SwfButton_Click objSendRequest.SwfButton("text:=btnOK")
	
	GUI_SwfObject_Click objONRPDetailsPage.SwfObject("swfname:=btnSave")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Commitment")) Then 
       GUI_SwfTab_Click objONRPDetailsPage.SwfTab("swfname:=tabControlExAll"), FRM_DS_GetValue(objData, "Commitment")
    End If 
	 
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Mandatory")) Then
		GUI_SwfCheckbox_Set objONRPDetailsPage.SwfCheckBox("swfname:=chbMandatory"), "On"
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "Mandatory"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "BulkCheckBox")) Then
	
	x= GUI_List_GetRowIndex(objONRPDetailsPage.SwfObject("swfname:=gvDelivery"),"Delivery Type",FRM_DS_GetValue(objData, "BulkCheckBox"))
	If x>=0 Then
		
		GUI_List_ClickRow objONRPDetailsPage.SwfObject("swfname:=gvDelivery"), Null, "Delivery Type",FRM_DS_GetValue(objData, "BulkCheckBox"), True, False, False, "Double"
	End If
			
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "BulkCheckBox"), Null
	End If
	
	If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strmaxcommitAmount")) Then
		GUI_SwfEdit_Set objONRPDetailsPage.SwfEdit("swfname:=txtMaxAmount"), FRM_DS_GetValue(objData, "strmaxcommitAmount")
		FRM_Logger_ReportInfoEvent "Company details","Start Company details---"&FRM_DS_GetValue(objData, "strmaxcommitAmount"), Null
	End If
	
	GUI_SwfObject_Click objONRPDetailsPage.SwfObject("swfname:=btnSave")
	GUI_Window_Close objONRPDetailsPage
	
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

	Set objONRPDetailsPage = Nothing
End Function



'This function is used to deletion of correspondent Master commitment
'@code
'   Function BIZ_Trades_DeleteCommitment(strCommitmentName)
'@endcode
'@param strCommitmentName - Commitment Name

Function BIZ_Trades_DeleteCommitment(strCommitmentName)
	FRM_Logger_ReportInfoEvent "Correspondnet Master","Start Correspondnet Master Delete---"&strCommitmentName, Null
	
	Dim objHomePage,objData
	
	Set objHomePage	    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	
	If GUI_Object_ISExistX(objHomePage.SwfObject("swfname:=gvMain"), 60) Then
		intRow = GUI_List_GetRowIndex(objHomePage.SwfObject("swfname:=gvMain"), "Master Commitment #", strCommitmentName)
		If intRow>=0 Then
			GUI_List_ActOnRow objHomePage.SwfObject("swfname:=gvMain"), intRow+1, True, False, False, "Single"
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnDelete")
			GUI_Dialog_Encompass_YesX 15, Null
			GUI_Dialog_Encompass_OKX 15, Null
			boolExist1 = GUI_List_ClickRow(objHomePage.SwfObject("swfname:=gvMain"), Null, "Master Commitment #", strCommitmentName, True, False, False, "Single")
			FRM_VerifyEqual boolExist1, False, "Delete Commitment","Commitment Deeleted"
		Else
			FRM_Logger_ReportFailEvent "Correspondnet Master","Correspondnet Master not exists ---", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Correspondnet Master Page","Correspondnet Master Page not exists ---", Null
	End If
	
	Set objHomePage	    = Nothing
	Set objData         = Nothing
	
End Function



'This function is used to deletion of correspondent Trade
'@code
'   Function BIZ_Trades_DeleteCorrespondenetTrade(strTradeName)
'@endcode
'@param strTradeName - Trade Name

Function BIZ_Trades_DeleteTrade(strTradeName)
	FRM_Logger_ReportInfoEvent "Correspondnet Trade Delete","Start Correspondnet Trade Delete---"&strTradeName, Null
	
	Dim objHomePage,objData
	
	Set objHomePage	    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objTPOPage      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanyMasterSelectorForm")
	Set objDeliPage     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CorrespondentDeliveryType")
	
	If GUI_Object_ISExistX(objHomePage.SwfObject("swfname:=gvTradeList"), 60) Then
		SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=1").Set strTradeName
		UTIL_Win_SendKey "{ENTER}"
		intRow = GUI_List_GetRowIndex(objHomePage.SwfObject("swfname:=gvTradeList"), "Commitment Number", strTradeName)
		If intRow>=0 Then
			GUI_List_ActOnRow objHomePage.SwfObject("swfname:=gvTradeList"), intRow+1, True, False, False, "Single"
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnDelete")
			GUI_Dialog_Encompass_YesX 15, Null
			GUI_Dialog_Encompass_OKX 15, Null
			boolExist1 = GUI_List_ClickRow(objHomePage.SwfObject("swfname:=gvTradeList"), objHomePage.SwfObject("swfname:=gvTradeList").SwfScrollBar("swfname:=vPanelScrollBar"), "Commitment Number", strTradeName, True, False, False, "Single")
			FRM_VerifyEqual boolExist1, False, "Delete Trade","Trade Deeleted"
		Else
			FRM_Logger_ReportFailEvent "Correspondnet Trade Delete","Correspondnet Trade not  Exists---"&strTradeName, Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Correspondnet Trade Page","Correspondnet Trade not Page---", Null
	End If
	
	Set objHomePage	    = Nothing
	Set objData         = Nothing
	
End Function


'This function is used to deletion of correspondent Master commitment
'@code
'   Function BIZ_Trades_DeleteCommitmentwithoutDeletingDeliveryType(strRowID, strCommitmentName)
'@endcode
'@param strRow - Get the details from the Excel
'@param strCommitmentName - Commitment Name

Function BIZ_Trades_CommitmentDeletingDeliveryType(strCommitmentName)
	FRM_Logger_ReportInfoEvent "Correspondnet Master Delete","Start Correspondnet Master Delete---"&strRowID, Null
	
	Dim objHomePage,objData
	
	Set objHomePage	    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objTPOPage      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanyMasterSelectorForm")
	Set objDeliPage     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CorrespondentDeliveryType")
	
	If GUI_Object_ISExistX(objHomePage.SwfObject("swfname:=gvMain"), 60) Then
		intRow = GUI_List_GetRowIndex(objHomePage.SwfObject("swfname:=gvMain"), "Master Commitment #", strCommitmentName)
		If intRow>=0 Then
			GUI_List_ActOnRow objHomePage.SwfObject("swfname:=gvMain"), intRow+1, True, False, False, "Double"
			boolExist1 = GUI_List_ClickRow(objHomePage.SwfObject("swfname:=grdDeliveryMethod"), Null, "Delivery Type", "Individual Mandatory", True, False, False, "Single")
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnDeleteDelivery")
			boolExist2 = GUI_List_ClickRow(objHomePage.SwfObject("swfname:=grdDeliveryMethod"), Null, "Delivery Type", "Individual Mandatory", True, False, False, "Single")
			FRM_VerifyEqual boolExist2, False, "Delete Delivery Type", "Delivery Type deltion"
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnClose")
			GUI_Dialog_Encompass_NoX 15, Null
		Else
			FRM_Logger_ReportFailEvent "Correspondnet Master Delete","Correspondnet Master not Delete---"&strRowID, Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Correspondnet Master Page","Correspondnet Master not Page---", Null
	End If
	
	Set objHomePage	    = Nothing
	Set objData         = Nothing
	
End Function



'This function is used to deletion of correspondent Master commitment
'@code
'   Function BIZ_Trades_DeleteCommitmentwithoutDeletingDeliveryType(strRowID, strCommitmentName)
'@endcode
'@param strRow - Get the details from the Excel
'@param strCommitmentName - Commitment Name

Function BIZ_Trades_DeleteCommitmentwithoutDeletingDeliveryType(strRowID, strCommitmentName)
	FRM_Logger_ReportInfoEvent "Correspondnet Master Delete","Start Correspondnet Master Delete---"&strRowID, Null
	
	Dim objHomePage,objData
	
	Set objHomePage	    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objTPOPage      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanyMasterSelectorForm")
	Set objDeliPage     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CorrespondentDeliveryType")
	
	If GUI_Object_ISExistX(objHomePage.SwfObject("swfname:=gvMain"), 60) Then
		boolExist = GUI_List_ClickRow(objHomePage.SwfObject("swfname:=gvMain"), Null, "Master Commitment #", strCommitmentName, True, False, False, "Single")
		If boolExist Then
			GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnDelete")
			If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").DiaLog("text:=Encompass"), 60) Then
				strText = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").DiaLog("text:=Encompass").Static("index:=1"), "text")
				GUI_Dialog_Encompass_OKX 15, Null
				FRM_Logger_ReportInfoEvent "Delete Message","Clicked on Delete Dialog msgbox --"&strText, Null
			End If
		End If
	End If
	
	Set objHomePage	    = Nothing
	Set objData         = Nothing
	
End Function



'This function is used to create correspondent Master commitment
'@code
'   Function BIZ_Trades_CreateCorrespondentMasters(strRowID)
'@endcode
'@param strRow - Get the details from the Excel

Function BIZ_Trades_CreateCorrespondentMasters(strRowID)
	FRM_Logger_ReportInfoEvent "Correspondnet Master Creation","Start Correspondnet Master Creation---"&strRowID, Null
	
	Dim objMainFormWnd,objHomePage,objData,objTPOPage,strTradeId,objDeliPage
	
	Set objMainFormWnd  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NewCorrespondentMaster")
	Set objHomePage	    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objData         = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie",strRowID)
	Set objTPOPage      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanyMasterSelectorForm")
	Set objDeliPage     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CorrespondentDeliveryType")
	
	strTradeId= FRM_DS_GetValue(objData, "MasterCommitment")
	
	GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnNew")
	If GUI_Object_IsExistX(objMainFormWnd.SwfObject("swfname:=btnSelector"), 60) Then
		GUI_SwfObject_Click objMainFormWnd.SwfObject("swfname:=btnSelector")
		FRM_Logger_ReportInfoEvent "Magnify Glass","Clicked on Magnifying Glass", Null
		If GUI_Object_IsExistX(objTPOPage.SwfObject("swfname:=grd3rdParties"), 60) Then
			intRow = GUI_List_GetRowIndex(objTPOPage.SwfObject("swfname:=grd3rdParties"), "Organization Name", "Prolifics TPO")

			GUI_List_ActOnRow objTPOPage.SwfObject("swfname:=grd3rdParties"), intRow+1, True, False, False, "Single"
	
			GUI_SwfButton_Click	objTPOPage.SwfButton("swfname:=btnSelect")
			FRM_Logger_ReportInfoEvent "Select Button","Clicked on Selected Button", Null
			
			GUI_SwfRadioButton_Click objMainFormWnd.SwfRadioButton("swfname:=chkMandatory")
			FRM_Logger_ReportInfoEvent "Mandatory","Clicked on Mandatory Radio Button", Null
			
			GUI_SwfButton_Click	objMainFormWnd.SwfButton("swfname:=btnSave")
			FRM_Logger_ReportInfoEvent "OK Button","Clicked on OK Button", Null
			
			If GUI_Object_IsExistX( objHomePage.SwfEdit("swfname:=txtNumber"), 60) Then
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "MasterCommitment")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtNumber"), strTradeId
					FRM_Logger_ReportInfoEvent "Commitment ID","Start Correspondent Trade Commitment MasterCommitment---"&strTradeId, Null
				End If
			
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PriceGroup")) Then
				   GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbRateSheet"),FRM_DS_GetValue(objData,"PriceGroup")
				   FRM_Logger_ReportInfoEvent "Price Group","price Group Entered--"&FRM_DS_GetValue(objData,"PriceGroup"), Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "intPoolAmount")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtMasterCommitmentAmount"), FRM_DS_GetValue(objData, "intPoolAmount")
					FRM_Logger_ReportInfoEvent "Pool Amount","Master Commitment Amount-"&FRM_DS_GetValue(objData, "intPoolAmount"), Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "dateCommitment")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtStartDate;groupContainer1;.*"), FRM_DS_GetValue(objData, "dateCommitment")
					FRM_Logger_ReportInfoEvent "Master Effective date","Master Effective date---"&FRM_DS_GetValue(objData, "dateCommitment"), Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "DateExpiryDate")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtExpireDate;groupContainer1;.*"), FRM_DS_GetValue(objData, "DateExpiryDate")
					FRM_Logger_ReportInfoEvent "Master Expiry date","Master Expiry date---"&FRM_DS_GetValue(objData, "DateExpiryDate"), Null
				End If
				
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnNew")
				If GUI_Object_IsExistX(objDeliPage, 60) Then
					If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCommitmentType")) Then
						GUI_SwfComboBox_Select objDeliPage.SwfComboBox("swfname:=cmbDeliveryMethodType"),FRM_DS_GetValue(objData,"strCommitmentType")
						FRM_Logger_ReportInfoEvent "Delivery Type","Selected the Delivery Type----"&FRM_DS_GetValue(objData, "strCommitmentType"), Null
					End If
				
					If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "DeliveryDays")) Then
						GUI_SwfEdit_Set objDeliPage.SwfEdit("swfname:=txtDays"), FRM_DS_GetValue(objData, "DeliveryDays")
						FRM_Logger_ReportInfoEvent "Delivery Days","Master Commitment Delivery Days-"&FRM_DS_GetValue(objData, "DeliveryDays"), Null
					End If
					If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "Tolerance")) Then
						GUI_SwfEdit_Set objDeliPage.SwfEdit("swfname:=txtTolerance"), FRM_DS_GetValue(objData, "Tolerance")
						FRM_Logger_ReportInfoEvent "Tolerance","Master Commitment Tolerance-"&FRM_DS_GetValue(objData, "Tolerance"), Null
					End If
				
					If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "dateCommitment")) Then
						GUI_SwfEdit_Set objDeliPage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtStartDate;groupContainer1;.*"), FRM_DS_GetValue(objData, "dateCommitment")
						FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Master Effective date---"&FRM_DS_GetValue(objData, "dateCommitment"), Null
					End If
					
					If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "DateExpiryDate")) Then
						GUI_SwfEdit_Set objDeliPage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtExpireDate;groupContainer1;.*"), FRM_DS_GetValue(objData, "DateExpiryDate")
						FRM_Logger_ReportInfoEvent "Correspondent Trade","Start Correspondent Trade Commitment description---"&FRM_DS_GetValue(objData, "DateExpiryDate"), Null
					End If
					GUI_SwfButton_Click objDeliPage.SwfButton("swfname:=btnSave")
				End If
	
				GUI_Object_WaitTillVisibleX objHomePage.SwfObject("swfname:=btnSave"), 120	'@ Handle Sync Issues
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnClose")
			Else
				FRM_Logger_ReportInfoEvent "Commitment ID Field","Commitment ID Field Page not Exists", Null
			End IF
		Else
			FRM_Logger_ReportInfoEvent "TPO Page","TPO Page not Exists", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Magnify Glass","Magbifying Glass not Exists", Null
	End If
	
	BIZ_Trades_CreateCorrespondentMasters = strTradeId
	
	Set objMainFormWnd  = Nothing
	Set objHomePage	    = Nothing
	Set objData         = Nothing
	Set objTPOPage      = Nothing
	Set objDeliPage     = Nothing
	
End Function



'This function is used to create correspondent Trades
'@code
'   Function BIZ_Trades_CreateCorrespondentTrades(strRowID)
'@endcode
'@param strRow - Get the details from the Excel

Function BIZ_Trades_CreateCorrespondentTrades(strRowID, strMasterCommitName)
	FRM_Logger_ReportInfoEvent "Correspondnet Trade Creation","Start Correspondnet Trade Creation---"&strRowID, Null
	
	Dim objMainFormWnd,objHomePage,objData,objTPOPage,strTradeId,objDeliPage
	
	Set objMainFormWnd  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NewCorrespondentTrade")
	Set objHomePage	    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objData         = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie",strRowID)
	Set objTPOPage      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanyMasterSelectorForm")
	Set objDeliPage     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CorrespondentDeliveryType")
	
	strTradeId= FRM_DS_GetValue(objData, "intPoolid")

	GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnNew")
	If GUI_Object_IsExistX(objMainFormWnd.SwfObject("swfname:=btnSelector"), 60) Then
		GUI_SwfObject_Click objMainFormWnd.SwfObject("swfname:=btnSelector")
		FRM_Logger_ReportInfoEvent "Magnify Glass","Clicked on Magnifying Glass", Null
		If GUI_Object_IsExistX(objTPOPage.SwfObject("swfname:=grd3rdParties"), 60) Then
			intRow = GUI_List_GetRowIndex(objTPOPage.SwfObject("swfname:=grd3rdParties"), "Organization Name", "Prolifics TPO")

			GUI_List_ActOnRow objTPOPage.SwfObject("swfname:=grd3rdParties"), intRow+1, True, False, False, "Single"
	
			GUI_SwfButton_Click	objTPOPage.SwfButton("swfname:=btnSelect")
			FRM_Logger_ReportInfoEvent "Select Button","Clicked on Selected Button", Null
			
			GUI_SwfRadioButton_Click objMainFormWnd.SwfRadioButton("swfname:=rdoMandatory")
			FRM_Logger_ReportInfoEvent "Mandatory","Clicked on Mandatory Radio Button", Null
			
			GUI_SwfButton_Click	objMainFormWnd.SwfButton("swfname:=btnSave")
			FRM_Logger_ReportInfoEvent "OK Button","Clicked on OK Button", Null
			wait 15
			If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=lbtnCommitmentNumber","index:=0"), 60) Then
				GUI_swfObject_Click objHomePage.SwfObject("swfname:=lbtnCommitmentNumber","index:=0")
			End If
	
			If GUI_Object_IsExistX( objHomePage.SwfEdit("swfname:=txtCommitmentNumber"), 60) Then
				If GUI_Object_IsExistX(objHomePage.SwfObject("swfname:=pbIcon"), 20) Then
					GUI_SwfObject_Click objHomePage.SwfObject("swfname:=pbIcon")
				End If
				If Util_String_IsNotEmpty(strTradeId) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtCommitmentNumber"), strTradeId
					FRM_Logger_ReportInfoEvent "Commitment ID","Correspondent Trade Commitment ---"&strTradeId, Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "dateCommitment")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtCommitment;panel2;groupContainer1;.*"), FRM_DS_GetValue(objData, "dateCommitment")
					FRM_Logger_ReportInfoEvent "Commmitment date","Commmitment date---"&FRM_DS_GetValue(objData, "dateCommitment"), Null
				End If
				
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strTradeDescription")) Then
				   GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbTradeDesc"),FRM_DS_GetValue(objData,"strTradeDescription")
				   FRM_Logger_ReportInfoEvent "Trade Description","Trade Description Entered--"&FRM_DS_GetValue(objData,"strTradeDescription"), Null
				End If
				
				If UTIL_String_IsNotEmpty(strMasterCommitName) Then
				   GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cboMasters"),strMasterCommitName
				   FRM_Logger_ReportInfoEvent "Master Commiment","Master Commiment Entered--"&strMasterCommitName, Null
				End If
				
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCommitmentType")) Then
				   GUI_SwfComboBox_Select objHomePage.SwfComboBox("swfname:=cmbDeliveryType"),FRM_DS_GetValue(objData, "strCommitmentType")
				   FRM_Logger_ReportInfoEvent "Delivery Type","Delivery Type Entered--"&FRM_DS_GetValue(objData, "strCommitmentType"), Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "intPoolAmount")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtAmount"), FRM_DS_GetValue(objData, "intPoolAmount")
					FRM_Logger_ReportInfoEvent "Pool Amount","Trade Amount-"&FRM_DS_GetValue(objData, "intPoolAmount"), Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strAssignInputTolerance")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtTolerance"), FRM_DS_GetValue(objData, "strAssignInputTolerance")
					FRM_Logger_ReportInfoEvent "Tolerance","Master Commitment Tolerance-"&FRM_DS_GetValue(objData, "strAssignInputTolerance"), Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "DateExpiryDate")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtExpirationDate;panel2;groupContainer1;.*"), FRM_DS_GetValue(objData, "DateExpiryDate")
					FRM_Logger_ReportInfoEvent "Master Expiry date","Master Expiry date---"&FRM_DS_GetValue(objData, "DateExpiryDate"), Null
				End If
				
				If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "DeliveryExpiryDate")) Then
					GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtDeliveryExpirationDate;panel2;groupContainer1;.*"), FRM_DS_GetValue(objData, "DeliveryExpiryDate")
					FRM_Logger_ReportInfoEvent "Delivery Expiry date","Delivery Expiry date---"&FRM_DS_GetValue(objData, "DeliveryExpiryDate"), Null
				End If
				GUI_Object_WaitTillVisibleX objHomePage.SwfObject("swfname:=btnSave"), 120	'@ Handle Sync Issues
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
				GUI_Dialog_Encompass_YesX 15, Null
				GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnList")
				GUI_Dialog_Encompass_YesX 15, Null
				GUI_Dialog_Encompass_OKX 15, Null
			Else
				FRM_Logger_ReportInfoEvent "Commitment ID Field","Commitment ID Field Page not Exists", Null
			End IF
		Else
			FRM_Logger_ReportInfoEvent "TPO Page","TPO Page not Exists", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Magnify Glass","Magbifying Glass not Exists", Null
	End If
	
	BIZ_Trades_CreateCorrespondentTrades = strTradeId
	
	Set objMainFormWnd  = Nothing
	Set objHomePage	    = Nothing
	Set objData         = Nothing
	Set objTPOPage      = Nothing
	Set objDeliPage     = Nothing
	
End Function


'This function is used to Lock Settings
'@code
'   BIZ_SecondaryMarket_LockSettings(strLockType, strLockStatus)
'@endcode
'@param strRow - Get the details from the Excel

Function BIZ_SecondaryMarket_LockSettings(strLockType, strLockStatus)
	
	Dim objSetupContainer, objData, arrCriteria, objName, objCheck
	Set objSetupContainer 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Secondary Setup", "Auto-Lock"
	
	If strLockType = "Re-Lock"  Then
		If strLockStatus = "On" Then
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "On"
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRelock"), "On"
		Else
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "On"
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRelock"), "On"	
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRelock"), "Off"
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "Off"			
		End If
	ElseIf strLockType = "Extend" Then	
		If strLockStatus = "On" Then
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "On"
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockExtRequest"), "On"
		Else
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "Off"
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockExtRequest"), "Off"
		End If
	ElseIf strLockType = "Cancel" Then
		If strLockStatus = "On" Then
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "On"
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoCancelLockRequest"), "On"
		Else
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoLockRequest"), "Off"
			GUI_SwfCheckBox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfCheckBox("swfname:=chkAutoCancelLockRequest"), "Off"		
		End If
	End If
	
	If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")
	End If
	
	BIZ_Settings_ClickClose()
	
	Set objSetupContainer 	= Nothing
	
End Function
'This function is used to Navigation TO GseCommitments
'@code
'    BIZ_SecondaryMarket_NavigationTOGseCommitments()
'@endcode

Function BIZ_SecondaryMarket_NavigationTOGseCommitments()

	FRM_Logger_ReportInfoEvent "Start Test Case GseCommitments","Navigate to SecondaryMarket Gse Commitments ", Null
	Dim objTradeStartUpdate,objTabSecurityTrade

	Set objMainScreen=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objTradeStartUpdate=SwfWindow("swfname:=MainForm").SWfwindow("swfname:=TradeLoanSyncDlg").SwfButton("swfname:=btnOK")
	Set objTabSecurityTrade=objMainScreen.SwfObject("swfname:=btnSecurityTrades")

	BIZ_Nav_SelectTabControl "Trades"
	Wait g_ShortWaitSmall 'Explicit wait added Due to Sync
	GUI_Dialog_Encompass_YesX 15, Null
	
	If GUI_Object_IsExist(objTradeStartUpdate)=True Then
		GUI_Object_Click objTradeStartUpdate,"SwfButton","SWfObject"
		GUI_Dialog_Encompass_OKX 15, Null
	End If
	
	Wait g_ShortWaitSmall 'Explicit wait added Due to Sync
	GUI_SwfObject_Click objMainScreen.SwfObject("swfname:=btnGseCommitments")

	Set objMainScreen		=Nothing	
	Set objTradeStartUpdate	=Nothing
	Set objTabSecurityTrade	=Nothing

End Function



'This function is used to Create Commitment 
'@code
'    BIZ_SecondaryMarket_CreateCommitment(strRowID)
'@endcode
'@Param strRowID - points to row in Excel

Function BIZ_SecondaryMarket_CreateCommitment(strRowID)
    
    FRM_Logger_ReportInfoEvent "Secondary Market Commitment","Create Commitment"  , Null
    Dim objData,objMainScreen,objFannieMaeProduct,objMainScreenBtnNew,objCommitmentID,objContractNumber
    Dim objTradeDescription, objCommitmentDate ,objSellerName ,objCommitAmount,objIssueMonth,strIssueMonth
    Dim strCommitmentID	,strContractNumber,strTradeDescription,strCommitmentDate,strSellerName,strCommitAmount,strProductName	
	
	Set objData 				= 	FRM_DS_GetTestData("SecondaryMarket", "GSM_Commitment", strRowID)
	Set objMainScreen			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objFannieMaeProduct		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FannieMaeProductNames")
	Set objMainScreenBtnNew		=	objMainScreen.SwfObject("swfname:=btnNew")
	Set objCommitmentID			=	objMainScreen.SwfEdit("swfname:=txtCmtId")
	Set objContractNumber		=	objMainScreen.SwfEdit("swfname:=txtContractNumber")
	Set objTradeDescription		=	objMainScreen.SwfEdit("swfname:=cmbTradeDesc")
	Set objCommitmentDate		=	objMainScreen.SwfEdit("swfname:=txtDate","index:=0")
	Set objSellerName 			=	objMainScreen.SwfEdit("swfname:=txtSellerNumber")
	Set objCommitAmount			=	objMainScreen.SwfEdit("swfname:=txtAmount")
	Set objIssueMonth			=	objMainScreen.SwfEdit("swfname:=txtDate","index:=1")	
	strCommitmentID				=	FRM_DS_GetValue(objData,"CommitmentID")
	strContractNumber			=	FRM_DS_GetValue(objData,"ContractNumber")	
	strTradeDescription			=	FRM_DS_GetValue(objData,"TradeDescription")	
	strCommitmentDate			=	FRM_DS_GetValue(objData,"CommitmentDate")	
	strSellerName				=	FRM_DS_GetValue(objData,"SellerName")	
	strCommitAmount				=	FRM_DS_GetValue(objData,"CommitAmount")	
	strIssueMonth				=	FRM_DS_GetValue(objData,"IssueMonth")
	strProductName				=	FRM_DS_GetValue(objData,"ProductName")

		Wait g_ShortWaitSmall
		GUI_SwfObject_Click objMainScreen.SwfObject("swfname:=btnNew")

		If UTIL_String_IsNotEmpty(strCommitmentID) Then
		GUI_SwfEditor_Type objCommitmentID, strCommitmentID 	
		End If
		
		If UTIL_String_IsNotEmpty(strContractNumber) Then
		GUI_SwfEditor_Type objContractNumber, strContractNumber	
		End If
		
		If UTIL_String_IsNotEmpty(strTradeDescription) Then
		GUI_SwfEditor_Type objTradeDescription, strTradeDescription		
		End If
		
		If UTIL_String_IsNotEmpty(strCommitmentDate) Then
		GUI_SwfEditor_Type objCommitmentDate, strCommitmentDate	
		End If
		
		If UTIL_String_IsNotEmpty(strSellerName) Then
		GUI_SwfEditor_Type objSellerName, strSellerName	
		End If
		
		If UTIL_String_IsNotEmpty(strCommitAmount) Then
		GUI_SwfEditor_Type objCommitAmount, strCommitAmount	
		End If
		
		If UTIL_String_IsNotEmpty(strIssueMonth) Then
		GUI_SwfEditor_Type objIssueMonth, strIssueMonth		
		End If
		
		If UTIL_String_IsNotEmpty(strIssueMonth) Then
		GUI_SwfEditor_Type objIssueMonth, strIssueMonth		
		End If
		
  
    If UTIL_String_IsNotEmpty(strProductName) Then
  		GUI_SwfObject_Click objMainScreen.SwfObject("swfname:=btnAddPN") 
  		GUI_List_ClickRow objFannieMaeProduct.SwfObject("swfname:=gridFannieMaeProductsName"), null, "Fannie Mae Product Name", strProductName, True, False, False, "Single"
  		GUI_SwfButton_Click objFannieMaeProduct.SwfButton("swfname:=btnSelect") 
	End If

    GUI_SwfObject_Click objMainScreen.SwfObject("swfname:=btnSave")
    GUI_SwfObject_Click objMainScreen.SwfObject("swfname:=btnList")
    
    BIZ_SecondaryMarket_CreateCommitment = strCommitmentID

    Set objData 				= 	Nothing
	Set objMainScreen			=	Nothing
	Set objFannieMaeProduct		=	Nothing
	Set objMainScreenBtnNew		=	Nothing
	Set objCommitmentID			=	Nothing
	Set objContractNumber		=	Nothing
	Set objTradeDescription		=	Nothing
	Set objCommitmentDate		=	Nothing
	Set objSellerName 			=	Nothing
	Set objCommitAmount			=	Nothing
	Set objIssueMonth			=	Nothing

End Function



'This function is used to AllocateCommitment
'@code
'    BIZ_SeconodaryMarket_Trades_MBSPools_AllocatePetoGSE(strCommitment)
'@endcode
'@param strCommitment - Commitment ID

Function BIZ_SeconodaryMarket_Trades_MBSPools_AllocatePetoGSE(strCommitment)
	
	FRM_Logger_ReportInfoEvent "BIZ_SeconodaryMarket_Trades_MBSPools_AllocatePetoGSE", "Allocate '"&strCommitment&"' GSE Commitment", Null
	
	Dim objPricingDetailsPage, objPricePage, objList
	Set objPricingDetailsPage 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objAllocGSEWnd			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=GSECmtAssignmentDialog")
	Set objList					= objAllocGSEWnd.SwfObject("swfname:=gvEligible")
	
	GUI_SwfTab_Click objPricingDetailsPage.SwfTab("swfname:=tabTrade"), "Details"
	
	Wait g_ShortWaitMedium
	GUI_SwfButton_Click objPricingDetailsPage.SwfButton("swfname:=btnOpenDialog","index:=1")
	
	If GUI_Object_IsExist(objAllocGSEWnd) Then
		GUI_SwfEdit_Set objAllocGSEWnd.SwfEdit("swfname:=txt_cmtID"), strCommitment
		GUI_SwfButton_Click objAllocGSEWnd.SwfButton("swfname:=btnSearch")
		Wait g_ShortWaitMedium
		GUI_List_ClickRow objList, Null, "Commitment ID", strCommitment, True, False, False, "Single"
		GUI_SwfButton_Click objAllocGSEWnd.SwfButton("swfname:=btnAssign")
		If GUI_Object_IsExist(objAllocGSEWnd.Dialog("regexpwndtitle:=Encompass")) Then
			GUI_Dialog_Encompass_YesX 15, Null
		End If
		GUI_SwfObject_Click objPricingDetailsPage.SwfObject("swfname:=btnSave")
		Wait g_ShortWaitMedium
    	GUI_SwfObject_Click objPricingDetailsPage.SwfObject("swfname:=btnList")
		Wait g_ShortWaitMedium
	End If
	
	Set objPricingDetailsPage 	= Nothing
	Set	objPricePage			= Nothing 
	Set objList					= Nothing
		
End Function
Function BIZ_SeconodaryMarket_Trades_MBSPools_FannieMaePEDetails()

	FRM_Logger_ReportInfoEvent "Coupon Fields", "Start Coupon Fields---", Null 
	
	Dim objPricingDetailsPage, objPricePage	
	Set objPricingDetailsPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objPricePage          = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MbsFannieFreddiePricingItemDialog")
	
	intCoupnval 		= "4.00"
	intWeghtPerc 		= "101"
	intBaseGaurantyFee 	= "0.45"
	intGaurantyFee 		= "0.2"
	intMinserFee 		= "0.15"
	intMaxBuyUp 		= "0.25"
	intFixedSerFee 		= "0.125"
	intNoteRate 		= "5.000"
	
	GUI_SwfTab_Click objPricingDetailsPage.SwfTab("swfname:=tabTrade"), "Details"
	If GUI_Object_IsExistX(objPricingDetailsPage.SwfEdit("swfname:=txtCoupon"), 60) Then
		
		GUI_SwfEdit_Set objPricingDetailsPage.SwfEdit("swfname:=txtCoupon"), intCoupnval
		FRM_Logger_ReportInfoEvent "Coupon Data ", "Coupon Data Entered----"&intCoupnval, Null
		
		If GUI_Object_IsExistX(objPricingDetailsPage.SwfObject("swfname:=pbIcon"), 60) Then
			GUI_SwfObject_Click objPricingDetailsPage.SwfObject("swfname:=pbIcon")
			GUi_SwfEdit_Set objPricingDetailsPage.SwfEdit("swfname:=txtWeightedAvgPrice"), intWeghtPerc
			FRM_Logger_ReportInfoEvent "Weight Average Price ", "Weight Average Price Entered----"&intWeghtPerc, Null
		End If
		
		GUI_SwfObject_Click objPricingDetailsPage.SwfObject("swfname:=btnSave")
	End If
	
	GUI_SwfTab_Click objPricingDetailsPage.SwfTab("swfname:=tabTrade"), "Setup"	
	
	If GUI_Object_IsExistX(objPricingDetailsPage.SwfEdit("swfname:=txtBaseGuarantyFee"), 60) Then	
		If Util_String_IsNotEmpty(intBaseGaurantyFee) Then
			GUi_SwfEdit_Set objPricingDetailsPage.SwfEdit("swfname:=txtBaseGuarantyFee"), intBaseGaurantyFee
			FRM_Logger_ReportInfoEvent "Base Gauranty Fee ", "Base Gauranty Fee Entered----"&intBaseGaurantyFee, Null
		End If
		If Util_String_IsNotEmpty(intGaurantyFee) Then
			GUi_SwfEdit_Set objPricingDetailsPage.SwfEdit("swfname:=txtGuaranteeFee"), intGaurantyFee
			FRM_Logger_ReportInfoEvent "Gauranty Fee ", "Gauranty Fee Entered----"&intGaurantyFee, Null
		End If
		If Util_String_IsNotEmpty(intMinserFee) Then
			GUi_SwfEdit_Set objPricingDetailsPage.SwfEdit("swfname:=txtMinServicingFee"), intMinserFee
			FRM_Logger_ReportInfoEvent "Minimum Servicing Fee ", "Minimum Servicing Fee Entered----"&intMinserFee, Null
		End If
		If Util_String_IsNotEmpty(intMaxBuyUp) Then
			GUi_SwfEdit_Set objPricingDetailsPage.SwfEdit("swfname:=txtMaxBU"), intMaxBuyUp
			FRM_Logger_ReportInfoEvent "Maximum Buy UP ", "Maximum Buy UP Entered----"&intMaxBuyUp, Null
		End If
		If Util_String_IsNotEmpty(intFixedSerFee) Then
			GUi_SwfEdit_Set objPricingDetailsPage.SwfEdit("swfname:=txtServiceFee"), intFixedSerFee
			FRM_Logger_ReportInfoEvent "Fixed Servicing Fee ", "Fixed Servicing Fee Entered----"&intFixedSerFee, Null
		End If
		GUI_SwfObject_Click objPricingDetailsPage.SwfObject("swfname:=btnSave")
		wait 10
	End If
	
End Function



'This function is used to edit correspondent Trades
'@code
'   Function BIZ_Trades_CorrespondentTrades_EditToAndDeliveryExpiration(strRowID)
'@endcode
'@param strRow - Get the details from the Excel

Function BIZ_Trades_CorrespondentTrades_EditToAndDeliveryExpiration(strRowID)
	FRM_Logger_ReportInfoEvent "Correspondnet Trade Tolerance and Delivery Expiration","Start Correspondnet Trade Tolerance and Delivery Expiration---"&strRowID, Null
	
	Dim objMainFormWnd,objHomePage,objData,objTPOPage,strTradeId,objDeliPage
	
	Set objMainFormWnd  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NewCorrespondentTrade")
	Set objHomePage	    = SwfWindow("swfname:=MainForm").SWfwindow("swfname:=MainScreen")
	Set objData         = FRM_DS_GetTestData("SecondaryMarket", "MBSPoolFannie",strRowID)
	Set objTPOPage      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TPOCompanyMasterSelectorForm")
	Set objDeliPage     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CorrespondentDeliveryType")
	
	If GUI_Object_IsExistX( objHomePage.SwfEdit("swfname:=txtCommitmentNumber"), 60) Then
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "strAssignInputTolerance")) Then
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtTolerance"), FRM_DS_GetValue(objData, "strAssignInputTolerance")
			FRM_Logger_ReportInfoEvent "Tolerance","Master Commitment Tolerance-"&FRM_DS_GetValue(objData, "strAssignInputTolerance"), Null
		End If
		If Util_String_IsNotEmpty(FRM_DS_GetValue(objData, "DeliveryExpiryDate")) Then
			GUI_SwfEdit_Set objHomePage.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dtDeliveryExpirationDate;panel2;groupContainer1;.*"), FRM_DS_GetValue(objData, "DeliveryExpiryDate")
			FRM_Logger_ReportInfoEvent "Delivery Expiry date","Delivery Expiry date---"&FRM_DS_GetValue(objData, "DeliveryExpiryDate"), Null
		End If
		GUI_Object_WaitTillVisibleX objHomePage.SwfObject("swfname:=btnSave"), 120	'@ Handle Sync Issues
		GUI_SwfObject_Click objHomePage.SwfObject("swfname:=btnSave")
		GUI_Dialog_Encompass_YesX 10, ""
		GUI_Dialog_Encompass_YesX 10, ""
		GUI_Dialog_Encompass_OKX 10, ""
		GUI_SwfTab_Click objHomePage.SwfTab("swfname:=tabTrade"), "Loans"
	Else
		FRM_Logger_ReportInfoEvent "Commitment ID Field","Commitment ID Field Page not Exists", Null
	End IF
	
	Set objMainFormWnd  = Nothing
	Set objHomePage	    = Nothing
	Set objData         = Nothing
	Set objTPOPage      = Nothing
	Set objDeliPage     = Nothing
	
End Function
'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\SecondaryMarket\SecondaryMarket_MBSPools.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Section32\Section32.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup Section 32(UI changes)
'List of functions here
'@code
'	Function BIZ_Section32_UIChanges_Section32PreValidation(strRowID)
'	Function BIZ_Section32_LoanCreation(strRowID)
'	Function BIZ_Section32_UIChanges_Section32_ApplicationDatePostValidation(strRowID)
'	Function BIZ_Section32_UIChanges_Section32_ClosingDateAndApplicationDatePostValidation(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is Used for validate Section32 page
'@code
'    BIZ_Section32_UIChanges_Section32PreValidation(strRowID)
'@endcode
'@param strRowID - RowID for data

Function BIZ_Section32_UIChanges_Section32PreValidation(strRowID)

	FRM_Logger_ReportInfoEvent "Section32 PreValidation","Section32 page Prevalidation", Null
    
    Dim objData,strSelectItem,strItemizationForm,strPreText
    
    Set objData      	= FRM_DS_GetTestData("Section32", "UIChanges", strRowID)
    strSelectItem    	= Cstr(Trim(FRM_DS_GetValue(objData, "SelectItem")))
    strItemizationForm  = CStr(Trim(FRM_DS_GetValue(objData, "SelectForm")))
    strPreText   		= Trim(FRM_DS_GetValue(objData, "PreValidation"))
    
    BIZ_Nav_SelectPipelineTab()
    Wait g_TinyWaitMedium 'Explicit Wait Added Due to Sync
    BIZ_Loan_AddNewBlankLoanUnderSelectedLoanFolder "Super Administrator - Default View","My Pipeline"
    
    If UTIL_String_IsNotEmpty(strSelectItem) Then
	   BIZ_Loan_SwitchFormVersion strSelectItem
    End If
    
    If UTIL_String_IsNotEmpty(strItemizationForm) Then
	   BIZ_Forms_Open strItemizationForm
    End If
       
    Wait g_LongWaitMedium 'Explicit Wait Added Due to Sync
		
	If UTIL_String_IsNotEmpty(strPreText) Then
	   GUI_Object_ValidateProperty SwfWindow("swfname:=MainForm").Page("index:=0").WebElement("html id:=Label86","html tag:=SPAN"),"innertext", strPreText ,"Validate text"
	End If
	      
    Set objData  = Nothing
        
End Function



'This function is used for Loan Creation for Section32
'@code
'    BIZ_Section32_LoanCreation(strRowID)
'@endcode
'@Param strRowID RowID for Data

Function BIZ_Section32_LoanCreation(strRowID)						
	
	FRM_Logger_ReportInfoEvent "Loan Creation","Loan creation using RowID @' "&strRowID, Null
	BIZ_BorrowerSummaryOrigination_SetBorrower strRowID
	BIZ_BorrowerSummaryOrigination_SetTransactionDetails strRowID
    BIZ_BorrowerSummaryOrigination_SetProperty strRowID
 
End Function



'This function is Used to validate Section32 page after loan creation
'@code
'    BIZ_Section32_UIChanges_Section32_ApplicationDatePostValidation(strRowID)
'@endcode
'@param strRowID - RowID for data

Function BIZ_Section32_UIChanges_Section32_ApplicationDatePostValidation(strRowID)

	FRM_Logger_ReportInfoEvent "Section32","Validate Application date Post validation using RowID @' "&strRowID, Null
    
    Dim objData,strText
    Set objData      = FRM_DS_GetTestData("Section32", "UIChanges", strRowID)
    strText   		 = Trim(FRM_DS_GetValue(objData, "PostApplicationDateValidation"))
    
    Wait g_LongWaitMedium ' Explicit wait used to handle sync issues
		
	If UTIL_String_IsNotEmpty(strText) Then
	   GUI_Object_ValidateProperty SwfWindow("swfname:=MainForm").Page("index:=0").WebElement("html id:=Label1","html tag:=SPAN"),"innertext", strText ,"Validate text"
	End If
	      
    Set objData  = Nothing
        
End Function



'This function is Used for validate Section32 page after closing date
'@code
'    BIZ_Section32_UIChanges_Section32_ClosingDateAndApplicationDatePostValidation(strRowID)
'@endcode
'@param strRowID - RowID for data

Function BIZ_Section32_UIChanges_Section32_ClosingDateAndApplicationDatePostValidation(strRowID)

	FRM_Logger_ReportInfoEvent "Section32","ClosingDate and ApplicationDate PostValidation using RowID @' "&strRowID, Null
    
    Dim objData,strPostText
    Set objData      = FRM_DS_GetTestData("Section32", "UIChanges", strRowID)
    strPostText      = Trim(FRM_DS_GetValue(objData, "ClosingdteValidation"))
    
    Wait g_LongWaitMedium ' Explicit wait used to handle sync issues
		
	If UTIL_String_IsNotEmpty(strPostText) Then
	   GUI_Object_ValidateProperty SwfWindow("swfname:=MainForm").Page("index:=0").WebElement("html id:=Label86","html tag:=SPAN"),"innertext", strPostText ,"Validate text"
	End If
	      
    Set objData  = Nothing
        
End Function


'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Section32\Section32.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Services\Svc.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Services
'List of functions here
'@code
'   Function BIZ_Services_RequestUnderwriting()
'   Function BIZ_Services_OrderCredit(providerName,accountName,password)
'   Function BIZ_Services_EnableFraudForUser(strMERSOrgID,BSCCustomerNum,strUserID)
'	Function BIZ_Services_OrderFraud()
'   Function BIZ_Services_StartFloodForUser(strUserID)
'   Function BIZ_Services_GenerateNMLSReport(strNMLSReportFileName)
'   Function BIZ_Services_ShowInOrder()
'   Function BIZ_Services_Open(strServiceName)
'   Function BIZ_Services_SelecDUProvider(strServiceDUProvider)
'   Function BIZ_Services_UpdateDUSetting(strUserID,strPassword,strInstitution)
'   Function BIZ_Services_SubmitToCreditReportFromDU (strCreditOption,strUserID,strPassword)
'   Function BIZ_Services_SubmitToDU_WaitForDialogToAppear()
'   Function BIZ_Services_SubmitToDU(strInstitution,strAccountNbr,strPassword,strCreditOption)
'   Function BIZ_Services_GetDUResult(strResultName)
'   Function BIZ_Services_RequestUnderwriting(strRowID)
'   Function BIZ_Services_ProductAndPricing(strProvider,strUser,strPassword) 
'   Function BIZ_Services_SelectFloodService(strServiceName)
'   Function BIZ_Services_OrderFloodCertificate(strServiceName,strUserName,strPassword,strProduct)
'	Function BIZ_Services_ProcessFloodOrderCoreLogic(strUser,strPassword,strProduct)
'	Function BIZ_Services_ProcessFloodOrderCoreLogicFloodServices(strRowID)
'	Function BIZ_Services_SelectFraudService(strServiceName)
'	Function BIZ_Services_SelectService(strServiceName)
'	Function BIZ_Services_OrderFraudService(strServiceName,strUserName,strPassword)
'	Function BIZ_Services_OrderService (strServiceName,strUserName,strPassword,strProduct)
'	Function BIZ_Services_ProcessFraudOrderCoreLogic(strUser,strPassword)
'	Function BIZ_Services_ProcessFraudOrderCoreLogicLoanSafeFraudManager(strRowID)
'	Function BIZ_Services_OrderAppraisal(companyName,companyEmail,companyPhone, userEmail,userPhone)
'	Function BIZ_Services_LoginAppraisalCenter (strRowID) 
'	Function BIZ_Services_AppraisalCenterProcessAndSendDocument(strAppraisalAmt,strAppraisalFee,fileName)
'	Function BIZ_Services_ImportAppraisalDocument()
'	Function BIZ_Services_ClickRetrieveBtn(strServiceName)  
'   Function BIZ_Services_OrderTitle(strCompanyName,strCompanyAddress,strCompanyCity,strCompanyState,strCompanyZip,strCompanyEmail,strCompanyPhone, userEmail,userPhone,strProductToSelect)
'   Function BIZ_Services_DeleteApprisalProvider(strProvider) 
'   Function BIZ_Services_DeleteTitleProvider(strProvider)
'	Function BIZ_Services_LoginTitleCenter (strRowID)
'	Function BIZ_Services_TitleCenterProcessAndSendDocument(strOrigPrincipal,strCurrentPrincipal,strSetlFee,strClsFee,strOwnerTitleIns,strLenderTitleIns,strRecordingFee,fileName)
'	Function BIZ_Services_ImportTitleDocument(strDocument)
'   Function BIZ_Services_ProcessTitleOrderRequestAndImport(strRowID)
'	Function BIZ_Services_ProcessAppraisalOrderRequestAndImport(strRowID)
'	Function BIZ_Services_SetOrderTitleAndClosing(strRowID)
'	Function BIZ_Services_ProcessFraudService(strRowID)
'	Function BIZ_Services_ProcessTitleCenterDetailsAndSendDocument(strRowID)
'	Function BIZ_Services_ProcessAppraisalCenterAndSendDocument(strRowID)
'	Function BIZ_Services_VerifyRetrieveBtn(strServiceName)
'	Function BIZ_Services_LoginProductAndPricing()
'	Function BIZ_Services_SubmitFraudGuardDetails(strRowID)
'	Function BIZ_Service_ProcessFraudGraud(strRowID)
' 	Function BIZ_Service_UnderwritingImportConditions(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to order credit report for the provider Equifax Mortgage Solutions
'@code
'    BIZ_Services_OrderCreditReport_EquifaxMortgageSolutions()
'@endcode

Function BIZ_Services_OrderCreditReport_EquifaxMortgageSolutions()

	BIZ_Services_Open "Credit Report"
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog"), 60
	Set objCreditOrderDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog")
	GUI_SwfTab_Click objCreditOrderDialog.SwfTab("swfname:=orderTab"), "All Providers"
	GUI_SwfList_Select objCreditOrderDialog.SwfList("swfname:=allLst", "index:=0"), "Equifax Mortgage Solutions"
	Wait g_TinyWaitSmall
	GUI_SwfButton_Click objCreditOrderDialog.SwfButton("swfname:=addBtn2")

	Set objCreditReportDialog = SwfWindow("swfname:=MainForm").Dialog("text:=Credit Report Request") 
	Wait g_LongWaitLarge + g_LongWaitLarge
	GUI_Object_WaitTillExistX objCreditReportDialog, 120
	GUI_WinButton_Click objCreditReportDialog.WinButton("text:=Finish")
	'As the services are not getting loaded in the specified time, need to insert the wait time
	Wait g_LongWaitLarge + g_LongWaitLarge
	BIZ_Nav_WaitForTabControlX "Services View", 240
	GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").WinObject("text:=AVPageView"), 120, "Loading Credit Order Report"
	'Go to Loan Page
	BIZ_Nav_SelectLoanTab()
	blnCreditOrderReceived = BIZ_AlertsAndLog_VerifyRecordExist("Log", "File Started", "Credit Report received") 

	If(blnCreditOrderReceived = True) Then
		FRM_Logger_ReportPassEvent "Click on loan tab and go to 'Services' tab and verify the presence of thumbnail icon for Credit Order Report", "'Order Credit Report' is available", null
	Else
		FRM_Logger_ReportFailEvent "Click on loan tab and go to 'Services' tab and verify the presence of thumbnail icon for Credit Order Report Icon", "'Order Credit Report' is not available", null
	End If
End Function



'This function is used to order credit in the loan
'@code
'    BIZ_Services_OrderCredit(providerName,accountName,password)
'@endcode
'@param providerName - order credit provider name
'@param accountName- provider account
'@param password--provider password

Function BIZ_Services_OrderCredit(providerName,accountName,password)
	
	FRM_Logger_ReportInfoEvent "Vendor Services", "Credit Report service. Provider name is '"&providerName&"'", null
	
	'==========go to the Credit Information Section on the Borrower Summary - Origination & click on the Order Credit button=========
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("name:=Order Credit")
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog"), 60
	
	Set objCreditOrderDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog")
	GUI_SwfList_Select objCreditOrderDialog.SwfList("swfname:=myLst", "index:=0"), providerName
	GUI_SwfButton_Click objCreditOrderDialog.SwfButton("swfname:=submitBtn")
	
	
	'=========enter the appropriate credentials & click the Finish button===============
	If Dialog("text:=Credit Report Request","index:=0").Exist(15) Then
	   Set objCreditReportDialog = Dialog("text:=Credit Report Request","index:=0") 
	ElseIf  SwfWindow("swfname:=MainForm").Dialog("text:=Credit Report Request","index:=0") Then
	   Set objCreditReportDialog = SwfWindow("swfname:=MainForm").Dialog("text:=Credit Report Request") 
	End If   
	
	GUI_Object_WaitTillExistX objCreditReportDialog, 60
	GUI_WinEdit_Set objCreditReportDialog.WinEdit("index:=0"), accountName
	GUI_WinEdit_Set objCreditReportDialog.WinEdit("index:=1"), password
	If objCreditReportDialog.WinComboBox("attached text:=Request Type.*","index:=0").GetROProperty("text")="New Request" Then
		If objCreditReportDialog.WinCheckBox("text:=TransUnion").GetROProperty("checked")="OFF" Then
			GUI_WinCheckbox_Click objCreditReportDialog.WinCheckBox("text:=TransUnion")
		End If
		If objCreditReportDialog.WinCheckBox("text:=Experian").GetROProperty("checked")="OFF" Then
			GUI_WinCheckbox_Click objCreditReportDialog.WinCheckBox("text:=Experian")
		End If
		If objCreditReportDialog.WinCheckBox("text:=Equifax").GetROProperty("checked")="OFF" Then
			GUI_WinCheckbox_Click objCreditReportDialog.WinCheckBox("text:=Equifax")
		End If
		GUI_WebButton_Click objCreditReportDialog.WinButton("text:=Finish")
	Else
		GUI_WinComboBox_Select objCreditReportDialog.WinComboBox("attached text:=Request Type.*","index:=0"), "New Request"
	End If
	Set objCreditReportDialog = Nothing
	Set objCreditOrderDialog = Nothing
	'wait for Services View tab to appear
	BIZ_Nav_WaitForTabControlX "Services View", 240
	
End Function



'This function is used to set Fraud Service for user
'@code
'    BIZ_Services_EnableFraudForUser(strMERSOrgID,BSCCustomerNum,strUserID)
'@endcode
'@param strMERSOrgID - Mers Organization ID
'@param BSCCustomerNum - Customer Number
'@param strUserID - string User Id

Function BIZ_Services_EnableFraudForUser(strMERSOrgID,BSCCustomerNum,strUserID)

    FRM_Logger_ReportInfoEvent "Vendor Services", "Fraud service. Organization Id is '"&strMERSOrgID&"'", null

	BIZ_Nav_Settings_Open "Additional Services"
	BIZ_Nav_HierarchyTree "Additional Services", "Fraud Service"
	Set objSettingWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_SwfEdit_Set objSettingWin.SwfEdit("swfname:=MersOrganizationID"), strMERSOrgID
	GUI_SwfEdit_Set objSettingWin.SwfEdit("swfname:=BscCustomerNumber"), BSCCustomerNum		
	Dim objUser,vPanelScrollBar_Fraud,vPanelScrollBar_Flood
	Set objUser = objSettingWin.SwfObject("swfname:=userGrd")
	Set vPanelScrollBar_Fraud = objUser.SwfScrollBar("swfname:=vPanelScrollBar")
	GUI_List_ClickCheckbox objUser, vPanelScrollBar_Fraud, strUserID, "1", True, False, "Single", True
	
    If GUI_Object_IsEnabled(objSettingWin.SwfObject("swfname:=saveBtn")) Then
		GUI_SwfObject_Click objSettingWin.SwfObject("swfname:=saveBtn")
'		If objSettingWin.Dialog("text:=Fraud Service").Exist(10) Then
'			GUI_WinButton_Click objSettingWin.Dialog("text:=Fraud Service").WinButton("text:=OK")
		End If
If objSettingWin.Dialog("text:=Fraud Service","regexpwndtitle:=Fraud Service","is owned window:=True").Exist(10) Then
   GUI_WinButton_Click objSettingWin.Dialog("text:=Fraud Service","regexpwndtitle:=Fraud Service","is owned window:=True").WinButton("text:=OK")
   End If
	
   Set objSettingWin = Nothing
End Function



'This function is used to initiate Flood Service for user
'@code
'    BIZ_Services_StartFloodForUser(strUserID)
'@endcode
'@param strUserID - string User Id

Function BIZ_Services_StartFloodForUser(strUserID)

    FRM_Logger_ReportInfoEvent "Vendor Services", "Flood service for user '"&strUserID&"'", null

	BIZ_Nav_Settings_Open "Additional Services"
	BIZ_Nav_HierarchyTree "Additional Services", "Flood Service"
	
	Set objSettingWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objUser = objSettingWin.SwfObject("swfname:=userGrd")
	Set vPanelScrollBar_Flood = objSettingWin.SwfScrollBar("swfname:=vPanelScrollBar")		
	GUI_List_ClickCheckbox objUser, vPanelScrollBar_Flood, strUserID, "1", True, False, "Single", True
	
	'@TODO -- Waiting for manual QA's confirmation on the steps	
	GUI_SwfComboBox_Select objSettingWin.SwfComboBox("swfname:=cboLicense"), "ServiceLink"
	wait 10
	Set objOrgGrid = SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=organizationsGrd")
	intX = objOrgGrid.Object.GetSubItemBounds(0,6).X
	intY = objOrgGrid.Object.GetSubItemBounds(0,6).Y
	GUI_SwfObject_ClickXY objOrgGrid, intX,intY
'	GUI_SwfEdit_Set SwfWindow("EncompassMenu").SwfWindow("Encompass  Settings").SwfEdit("SwfEdit"), "1000072245"
	UTIL_Win_SendKey "1000072245{ENTER}"

'	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("micclass:=SwfEdit"), "1000072245"
	'@TODO - how to replace OR with DP
	'GUI_SwfEdit_Set objSettingWin.SwfEdit("index:=0"), "1000072245"
	If objSettingWin.SwfButton("swfname:=startStopServiceBtn").GetROProperty("text")="Start Service" Then
		GUI_SwfButton_Click objSettingWin.SwfButton("swfname:=startStopServiceBtn")
	End If
	
	If GUI_Object_IsEnabled(objSettingWin.SwfObject("swfname:=saveBtn")) Then
	   GUI_SwfObject_Click objSettingWin.SwfObject("swfname:=saveBtn")
	   
	   If objSettingWin.Dialog("text:=Encompass Flood Service").Exist(10) Then
	   	  GUI_WinButton_Click objSettingWin.Dialog("text:=Encompass Flood Service").WinButton("text:=OK")
	   End If
	End If
	Set objSettingWin = Nothing
	
End Function



'This function is used to submit Fraud Service request
'@code
'    BIZ_Services_OrderFraud()
'@endcode

Function BIZ_Services_OrderFraud()	

	'====go to the Borrower Information Section on the Borrower Summary - Processing form & click on the Order Fraud button====
	BIZ_Forms_Open "Borrower Summary - Processing"
	GUI_WebButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=ButtonOrderFraud")	
	wait 2
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog").SwfComboBox("swfname:=cboProductType").GetROProperty("text") = "Select Report" Then
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog").SwfComboBox("swfname:=cboProductType").Select 1
	End If
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog").SwfButton("swfname:=orderBtn")
	wait 5
	'Wait till Progress Dialog disappears
	Do 
		wait 1
    Loop While (SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ProgressDialog").Exist(1))
	If  SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ResubmitOrder").Exist Then
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ResubmitOrder").SwfButton("swfname:=btnContinue").Click
		wait 10
	End If		
	'========Make sure the user should be able to order Fraud successfully without any errors.=========
	If  SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PreviewHtmlDocument").Exist Then
		FRM_Logger_ReportInfoEvent "Order Fraud", "The user can order Fraud successfully without any errors", null
		Reporter.ReportEvent micPass,"The user can order Fraud successfully without any errors","Check user can order Fraud successfully Passed"
	Else
		FRM_Logger_ReportFailEvent "Order Fraud", "Fraud order failed", null
		Reporter.ReportEvent micFail,"The user can order Fraud successfully without any errors","Check user can order Fraud successfully Failed"
	End If
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PreviewHtmlDocument").Close
	
End Function	



'This function Opens report UI, clicks "Generate Report" button, waits until report opens, closes report
'@code
'    BIZ_Services_GenerateNMLSReport "c:/temp/nmls.rpt"
'@endcode
'@param - strNMLSReportFileName - file where report will reside
'@param - strRowID - id index to find the row in the data table

Function BIZ_Services_GenerateNMLSReport(strNMLSReportFileName,strRowID)
        
        
    UTIL_File_Delete strNMLSReportFileName,true
    
	BIZ_Nav_SelectPipelineTab
    BIZ_Nav_OpenMenuItem "Pipeline;Compliance Services;Generate NMLS Call Report"
       
	Set objData = FRM_DS_GetTestData("Compliance_Services", "NMLSReport", strRowID)
	Set NMPLSReportPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NMLSReportForm")   
	GUI_SwfComboBox_Select NMPLSReportPage.SwfComboBox("swfname:=cboFormat", "index:=0"), FRM_DS_GetValue(objData, "Format") '"Excel - Standard"
	GUI_SwfComboBox_Select NMPLSReportPage.SwfComboBox("swfname:=cboQuarter", "index:=0"),FRM_DS_GetValue(objData, "Quarter") '"Full Year"
	If FRM_DS_GetValue(objData, "Year") <> NMPLSReportPage.SwfComboBox("swfname:=cboYear", "index:=0").GetROProperty("text") then
		GUI_SwfComboBox_Select NMPLSReportPage.SwfComboBox("swfname:=cboYear", "index:=0"),FRM_DS_GetValue(objData, "Year") '"2015"
	End If	
	GUI_SwfComboBox_Select NMPLSReportPage.SwfComboBox("swfname:=cboState", "index:=0"),FRM_DS_GetValue(objData, "State") '"<All>"
	GUI_SwfButton_Click NMPLSReportPage.SwfButton("text:=&Generate","index:=0")

	Set objDialog = NMPLSReportPage.Dialog("text:=Save NMLS Call Report","index:=0")
        
	UTIL_Win_SendKey "{BACKSPACE}"
	objDialog.WinEdit("nativeclass:=Edit","index:=0").Set strNMLSReportFileName
        wait 2
	GUI_WinButton_Click objDialog.WinButton("text:=&Save","index:=0")
	wait 3
	Do
 		If Not NMPLSReportPage.SwfWindow("swfname:=ProgressDialog").SwfObject("swfname:=pbProgress").Exist(1) Then
    		Exit Do
 		End If 
	Loop
	If UTIL_File_FileExists(strNMLSReportFileName) Then
		FRM_Logger_ReportPassEvent "Create Report File", "Created File name is: " & strNMLSReportFileName, Null
	Else
		FRM_Logger_ReportFailEvent "Create Report File", "File was not created: " & strNMLSReportFileName, Null
	End If

	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NMLSExceptionDialog").SwfButton("swfname:=btnCancel", "index:=0").Exist(15) Then
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NMLSExceptionDialog").SwfButton("swfname:=btnCancel", "index:=0").Click	
	End If
	Set objData = Nothing
        UTIL_Win_CloseExcel()

        If Dialog("regexpwndtitle:=Microsoft Excel","index:=0").WinButton("regexpwndtitle:=Close the program","index:=0").Exist(2) then
           Dialog("regexpwndtitle:=Microsoft Excel","index:=0").WinButton("regexpwndtitle:=Close the program","index:=0").Click
        End If
End Function



'This function is for select Services tab and show in order
'@code
'    BIZ_Services_ShowInOrder()
'@endcode

Function BIZ_Services_ShowInOrder()
	If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"), 30)) Then 
		GUI_List_Select SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"), "Services"
		GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=chkAlpha","index:=0"), "ON"
	End If
End Function



'This function is to select service by its name
'@code
'    BIZ_Services_Open(strServiceName)
'@endcode
'@param - service name

Function BIZ_Services_Open(strServiceName)

    BIZ_Services_ShowInOrder
    FRM_Logger_ReportInfoEvent "Open Service", "Service to open is  '"&strServiceName&"'", null
    Set objServices = SwfWindow("swfname:=MainForm").SwfObject("swfname:=pnlCategories")
	SwfWindow("swfname:=MainForm").Restore()
	SwfWindow("swfname:=MainForm").Maximize()
	objServices.VScroll  micScrollStart
	Do
		Set oDesc = Description.Create()
		oDesc("swfname").value = "lblTitle"
		Set oChild = objServices.ChildObjects(oDesc)
		For Label = oChild.Count- 1 to 0 Step -1 
			If(oChild(Label).GetROProperty("text") = strServiceName) Then 
				IsFound = True
				Exit Do
			Else
				objServices.VScroll  micLineNext, 4.5
			End if
		Next
	Loop
	objServices.SwfLabel("swfname:=lblTitle", "text:="&strServiceName, "index:=0").click	
End Function



'This function is for processing DU request
'@code
'    BIZ_Services_RequestUnderwriting(strRowID)
'@endcode
'@param strRowID - Row Id

Function BIZ_Services_RequestUnderwriting(strRowID)

     Set objData = FRM_DS_GetTestData("Services", "Underwriting", strRowID)
     strUserID = FRM_DS_GetValue(objData, "UserID")
     strPassword = FRM_DS_GetValue(objData, "Password")
     strInstitution = FRM_DS_GetValue(objData, "Institution")    
     strAccount = FRM_DS_GetValue(objData, "AccountNumber")
     strACPassword = FRM_DS_GetValue(objData, "AccountPassword")
     strCrOption = FRM_DS_GetValue(objData, "CreditOption") 
     strServiceType = FRM_DS_GetValue(objData, "ServiceType")
     strServiceProvider = FRM_DS_GetValue(objData, "ServiceProvider") 
     
     'Start Request DU
	 BIZ_Services_Open strServiceType '"Underwriting"

	 Wait g_TinyWaitLarge
    'Select Provider
     BIZ_Services_SelecDUProvider strServiceProvider '"Fannie Mae DU on ePASS"

     'Update DU Setting
     BIZ_Services_UpdateDUSetting strUserID,strPassword,strInstitution   '"c00r9env","d804@xwp","210043"

	 Wait g_TinyWaitMedium

      'Submit to DU
     BIZ_Services_SubmitToDU strInstitution &" | ", strAccount, strACPassword, strCrOption    ' "210043 | ","999EL31714","00vGdxXrjdFfg","Equifax Mortgage Solutions (4)"
End Function



'This function is to select service provider in the dialog by its name
'@code
'    BIZ_Services_SelecDUProvider(strServiceDUProvider)
'@endcode
'@param strServiceDUProvider -  service provider

Function BIZ_Services_SelecDUProvider(strServiceDUProvider)
    Dim objProvider, objProvider1 
    FRM_Logger_ReportInfoEvent "Select DU Provider", "Provider selected is  '"&strServiceDUProvider&"'", null
	Set objProvider = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog") 
	Set objProvider1 = SwfWindow("swfname:=OrderDialog")
	If(GUI_Object_IsExistX(objProvider, 60))  Then 
		If(InStr(objProvider.SwfList("swfname:=myLst").GetContent(),strServiceDUProvider) > 0) then 
			GUI_List_Select objProvider.SwfList("swfname:=myLst"),strServiceDUProvider
		Else
			objProvider.SwfTab("swfname:=orderTab").Select "All Providers"
			GUI_List_Select objProvider.SwfList("swfname:=allLst"),strServiceDUProvider
		End If
		GUI_SwfButton_Click objProvider.SwfButton("swfname:=submitBtn")
		FRM_Logger_ReportPassEvent "Order Service " & strServiceName, strServiceName & " is returned", null
	ElseIf(GUI_Object_IsExistX(objProvider1, 60))  Then 
		If(InStr(objProvider1.SwfList("swfname:=myLst").GetContent(),strServiceDUProvider) > 0) then 
			GUI_List_Select objProvider1.SwfList("swfname:=myLst"),strServiceDUProvider
		Else
			objProvider1.Select "All Providers"
			GUI_List_Select objProvider1.SwfList("swfname:=allLst"),strServiceDUProvider
		End If
		GUI_SwfButton_Click objProvider1.SwfButton("swfname:=submitBtn")
		FRM_Logger_ReportPassEvent "Order Service " & strServiceName, strServiceName & " is returned", null
	Else
		FRM_Logger_ReportFailEvent "Order Service " & strServiceName, strServiceName & " is not returned", null
	End If
	Set objProvider = Nothing
	Set objProvider1 = Nothing
End Function



'This function is to update DU Setting in the dialog using given credentials
'@code
'    BIZ_Services_UpdateDUSetting(strUserID,strPassword,strInstitution)
'@endcode
'@param strUserID -  DU User Id
'@param strPassword -  password
'@param strInstitution - institution name

Function BIZ_Services_UpdateDUSetting(strUserID,strPassword,strInstitution)
    FRM_Logger_ReportInfoEvent "Update DU Setting", "Used User,Password,Institution:  '"&strUserID&"',"&strPassword&"',"&strInstitution&"',", null
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("title:=.*").Link("text:=Update DU Settings"), 60
	GUI_Link_Click SwfWindow("swfname:=MainForm").Page("title:=.*").Link("text:=Update DU Settings")
	If(SwfWindow("swfname:=MainForm").Dialog("text:=Update DU via Ellie Mae Network Settings").Exist(120))Then 
		Set objSetting = SwfWindow("swfname:=MainForm").Dialog("text:=Update DU via Ellie Mae Network Settings")
	Else
		Set objSetting = Dialog("text:=Update DU via Ellie Mae Network Settings")
	End If
	GUI_WinEdit_Set objSetting.WinEdit("attached text:=User ID.*"),strUserID
	GUI_WinEdit_Set objSetting.WinEdit("attached text:=Password.*","index:=0"),strPassword
	If instr(objSetting.WinListView("regexpwndclass:=SysListView32").GetROProperty("all items"),strInstitution) = 0 Then
		GUI_WinButton_Click objSetting.WinButton("text:=Add","index:=0")
   		GUI_WinEdit_Set  objSetting.WinListView("regexpwndclass:=SysListView32").WinEdit("regexpwndclass:=Edit"),strInstitution	
	End If
	GUI_WinButton_Click objSetting.WinButton("text:=OK","index:=0")
End Function



'This function is called during DU Process if no credit is ordered before
'@code
'    BIZ_Services_SubmitToCreditReportFromDU (strCreditOption,strUserID,strPassword)
'@endcode
'@param strUserID -  User Id
'@param strPassword -  password
'@param strCreditOption - credit option
	
Function BIZ_Services_SubmitToCreditReportFromDU (strCreditOption,strUserID,strPassword)
Set objCredit = SwfWindow("swfname:=MainForm").Dialog("text:=Select a Credit Report Option")
If objCredit.Exist(3) Then
   FRM_Logger_ReportInfoEvent "Submit to Credit Report", "Submit to Credit using Credit Option, User Id, Pasword:  '"&strCreditOption&"',"&strUserID&"',"&strPassword&"',", null
   GUI_WinComboBox_Select objCredit.WinComboBox("regexpwndclass:=ComboBox","index:=0"),strCreditOption
   GUI_WinButton_Click objCredit.WinButton("text:=Next","index:=0")
   If Dialog("text:=Credit Report Request","index:=0").Exist(2) Then
   	  GUI_WinEdit_Set Dialog("text:=Credit Report Request").WinEdit("attached text:=Equifax Mortgage Solutions.*","regexpwndclass:=Edit","index:=0"),strUserID
   	  GUI_WinEdit_Set Dialog("text:=Credit Report Request").WinEdit("regexpwndclass:=Edit","index:=1"),strPassword
   	  GUI_WinComboBox_Select Dialog("text:=Credit Report Request").WinComboBox("regexpwndclass:=ComboBox","attached text:=Request Type:.*","index:=0"),"New Request"	
   	  GUI_WinComboBox_Select Dialog("text:=Credit Report Request").WinComboBox("regexpwndclass:=ComboBox","attached text:=Report Type:.*","index:=0"),"Merge"
   	  GUI_WinButton_Click Dialog("text:=Credit Report Request").WinButton("text:=Finish","index:=0")
   End If
   If SwfWindow("swfname:=MainForm").Dialog("text:=Ellie Mae Network Credit Report Confirmation").Exist(8) Then
   	  GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("text:=Ellie Mae Network Credit Report Confirmation").WinButton("text:=Yes","index:=0")
   End If
End If

End Function



'This function is called to wait for DU or Credit dialog to appear
'@code
'    BIZ_Services_SubmitToDU_WaitForDialogToAppear()
'@endcode

Function BIZ_Services_SubmitToDU_WaitForDialogToAppear()
	Set objDUSubmit = SwfWindow("swfname:=MainForm").Dialog("text:=DU via Ellie Mae Network")
	Set objCredit = SwfWindow("swfname:=MainForm").Dialog("text:=Select a Credit Report Option")
	Do
	  If objDUSubmit.Exist(1) Then
	  	 Exit Do
	  ElseIf objCredit.Exist(1) Then
	     Exit Do
	  End If
	  m  = m + 1
	  If m > 60 Then
	     FRM_Logger_ReportFailEvent "Submit to DU", "Submit to DU Failed. Please try again.", null
	  	 Exit Do
	  End If
	loop	
End Function



'This function is for submitting to DU 
'@code
'    BIZ_Services_SubmitToDU (strInstitution,strAccountNbr,strPassword,strCreditOption)
'@endcode
'@param strInstitution -  Institution name
'@param strAccountNbr -  account number
'@param strPassword - password for the account
'@param strCreditOption - credit option - needed if credit called

Function BIZ_Services_SubmitToDU (strInstitution,strAccountNbr,strPassword,strCreditOption)
	If SwfWindow("swfname:=MainForm").Page("title:=.*").Link("text:=Submit to DU on ePASS").Exist(5) Then
		GUI_Link_Click SwfWindow("swfname:=MainForm").Page("title:=.*").Link("text:=Submit to DU on ePASS")	
	End If
	'wait for some dialog to appear
	BIZ_Services_SubmitToDU_WaitForDialogToAppear
   'if no credit report requested yet then request
    BIZ_Services_SubmitToCreditReportFromDU strCreditOption,strAccountNbr,strPassword
    FRM_Logger_ReportInfoEvent "Submit to DU", "Submit to DU using Institution, Acount Number, Pasword:  '"&strInstitution&"',"&strAccountNbr&"',"&strPassword&"',", null
	Set objDUSubmit = SwfWindow("swfname:=MainForm").Dialog("text:=DU via Ellie Mae Network")
	If objDUSubmit.Exist(30) Then
		If(GUI_Object_IsExist(objDUSubmit.WinButton("text:=Edit Credit Reference Info","nativeclass:=Button")))Then 
			objDUSubmit.WinButton("text:=Edit Credit Reference Info","nativeclass:=Button").Click
			Dialog("text:=Credit Report Request|Edit Credit Reference Information").WinComboBox("nativeclass:=ComboBox","attached text:=Select a credit provider, then click on the borrower.*","index:=0").Select strCreditOption
			Dialog("text:=Credit Report Request|Edit Credit Reference Information").WinButton("text:=OK","nativeclass:=Button").Click
		End If
		If(GUI_Object_IsExistX(objDUSubmit.WinEdit("attached text:=Account Number.*","regexpwndclass:=Edit","index:=0"), 5))Then 
			GUI_WinEdit_Set objDUSubmit.WinEdit("attached text:=Account Number.*","regexpwndclass:=Edit","index:=0"),strAccountNbr
		End If
		If(GUI_Object_IsExistX(objDUSubmit.WinEdit("attached text:=Password.*","regexpwndclass:=Edit","index:=0"), 5))Then 
			GUI_WinEdit_Set objDUSubmit.WinEdit("attached text:=Password.*","regexpwndclass:=Edit","index:=0"),strPassword
		End If
		GUI_WinComboBox_Select objDUSubmit.WinComboBox("regexpwndclass:=ComboBox","attached text:=.*Submit to DU via Ellie Mae Network.*","index:=0"),strInstitution
		
		If(GUI_Object_IsExistX(objDUSubmit.WinButton("text:=Submit","index:=0"), 50))then
			GUI_WinButton_Click objDUSubmit.WinButton("text:=Submit","index:=0")
			If GUI_Object_IsExistX(SwfWindow("swfname:=ValidationDialog").SwfButton("swfname:=continueBtn","index:=0"), 25) Then
				GUI_SwfButton_Click SwfWindow("swfname:=ValidationDialog").SwfButton("swfname:=continueBtn","index:=0")		
			End If
		End If
	End If
	 
	If Dialog("text:=Warning").WinButton("text:=OK","index:=0").Exist(30) Then
   		Dialog("text:=Warning").WinButton("text:=OK","index:=0").Click	
   		msgbox "Please check file DuDirectSettings.ini in the ...\EncompassData\Settings\Epass directory"	
        FRM_Logger_ReportFailEvent "Submit to DU", "DU did not return result due to some unexpected issue. Please check file DuDirectSettings.ini in the ...\EncompassData\Settings\Epass directory", null   		
	Else
		'wait until DU returned results
		Do
  			wait 2
  			if Dialog("text:=Processing for.*","index:=0").WinObject("regexpwndclass:=msctls_progress32","index:=0").Exist(1) then
		  		k = k + 1
  				If k > 120 Then
	  	   			Exit do	
  				End If
  			else
    			Exit Do
  			End if 
		loop
		
	End If	
	SubmissionErrorScreenExists = GUI_Object_IsExistX(Dialog("text:=Submission Error"),50)
	If(SubmissionErrorScreenExists = True) Then 
		strErrorMessage = Dialog("text:=Submission Error").WinEditor("index:=0").GetROProperty("text")
		Dialog("text:=Submission Error").WinButton("text:=Close").Click
		GUI_Dialog_Encompass_OKX 30, ""
	End If
	result = BIZ_Services_GetDUResult("Recommendation")
	FRM_Logger_ReportInfoEvent "Submit to DU", "DU returned result: " & result, null   		
End Function



'This function is to retrieve data from the DU results page 
'@code
'    BIZ_Services_GetDUResult(strResultName)
'@endcode
'@param strResultName -  of which result value you want to get

Function BIZ_Services_GetDUResult(strResultName)
   BIZ_Services_GetDUResult = ""
   'Set objResultPage = SwfWindow("swfname:=MainForm").ActiveX("acx_name:=GNetMX Control","index:=0").Page("title:=Ellie Mae.*")
   Set objResultPage = SwfWindow("swfname:=MainForm").Page("title:=Ellie Mae.*")
   If objResultPage.WebElement("innertext:=DU Underwriting Findings","index:=0").Exist(200) then
      'Set objTableResult = SwfWindow("swfname:=MainForm").ActiveX("acx_name:=GNetMX Control","index:=0").Page("title:=Ellie Mae.*").WebTable("column names:=Recommendation.*","index:=0")
      Set objTableResult = SwfWindow("swfname:=MainForm").Page("title:=Ellie Mae.*").WebTable("column names:=Recommendation.*","index:=0")
      intRowCount = objTableResult.RowCount
      For n = 1 To intRowCount
      	  If objTableResult.GetCellData(n,1) = strResultName Then
      	  	 BIZ_Services_GetDUResult = objTableResult.GetCellData(n,2)
      	  	 Exit For
      	  End If
      Next  
   End If 
End Function



'This function is get to Product and Pricing site
'@code
'    BIZ_Services_ProductAndPricing(strProvider,strUser,strPassword)
'@endcode
'@param strProvider -  provider for service
'@param strUser - user Id to enter site
'@param strPassword - pasword to enter site

Function BIZ_Services_ProductAndPricing(strProvider,strUser,strPassword)
    FRM_Logger_ReportInfoEvent "Product & Pricing service request", "Order Service using Provider: " &strProvider, null
	BIZ_Services_Open "Product and Pricing"
	'Select provider in Order Dialog
	BIZ_Services_LoginProductAndPricing()	
	'===========Enter username, password, & request type in Request Dialog==============
	Set objRequest = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RequestDialog","index:=0")
	If objRequest.Exist(60) Then
        objRequest.SwfEdit("swfname:=tbLoginName","index:=0").Set strUser
		objRequest.SwfEdit("swfname:=tbPassword","index:=0").Set strPassword
		objRequest.SwfButton("swfname:=btnContinue","index:=0").Click
    Else
		FRM_Logger_ReportFailEvent "Product & Pricing Request Dialog", "Product & Pricing Request Dialog did not appear.", null  		
    End If
    
    If SwfWindow("swfname:=MainForm").Dialog("index:=0").Exist(2) Then
 		SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=.*Yes").Click
 	End If
	
End Function



'This function is to select service for flood cert
'@code
'    BIZ_Services_SelectFraudService(strServiceName)
'@endcode
'@param strServiceName -  service used

Function BIZ_Services_SelectFraudService(strServiceName)
	FRM_Logger_ReportInfoEvent "Select Fraud Servicee", "Service to select: " & strServiceName, null
	BIZ_Services_SelectService strServiceName	
End Function	



'This function is to select service for flood cert
'@code
'    BIZ_Services_SelectFloodService(strServiceName)
'@endcode
'@param strServiceName -  service used

Function BIZ_Services_SelectFloodService(strServiceName)
	FRM_Logger_ReportInfoEvent "Select Flood Service", "Service to select: " & strServiceName, null
	BIZ_Services_SelectService strServiceName	
End Function	



'This function is to select service for flood or fraud
'@code
'    BIZ_Services_SelectService(strServiceName)
'@endcode
'@param strServiceName -  service used

Function BIZ_Services_SelectService(strServiceName)
	Dim objOrderDialog, objList
	Set objOrderDialog =  SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog")
	If objOrderDialog.Exist(30) Then
		strTabSelected =  objOrderDialog.SwfTab("swfname:=orderTab").GetSelection()
		If(InStr(strTabSelected,"My Providers") = 0) Then 
			GUI_SwfTab_Click objOrderDialog.SwfTab("swfname:=orderTab"), "My Providers"
		End If
		Set objList = objOrderDialog.SwfObject("swfname:=myPage")
		strAllItems = GUI_Object_GetPropertyValue(objOrderDialog.SwfList("swfname:=myLst"), "allitems")
		If(InStr(strAllItems, strServiceName) > 0) Then
			GUI_SwfList_Select objList.SwfList("swfname:=myLst"),  strServiceName
			wait 2
			GUI_SwfButton_Click objList.SwfButton("swfname:=submitBtn")
		Else 
			GUI_SwfTab_Click objOrderDialog.SwfTab("swfname:=orderTab"), "All Providers"
			GUI_SwfList_Select objOrderDialog.SwfList("swfname:=allLst"), strServiceName
			GUI_SwfButton_Click objOrderDialog.SwfButton("swfname:=addBtn2")
		End If	
	End If
    Set objList = Nothing 
    Set objOrderDialog = Nothing
End Function  



'This function is to order Fraud service on Order Dialog
'@code
'    BIZ_Services_OrderFraudService(strServiceName,strUserName,strPassword)
'@endcode
'@param strServiceName -  service used
'@param strUserName - user Id to enter site
'@param strPassword - pasword to enter site

Function BIZ_Services_OrderFraudService(strServiceName,strUserName,strPassword)

	FRM_Logger_ReportInfoEvent "Order Fraud Service", "Service to select: " & strServiceName & "; User = " & strUserName & "; Password = " & strPassword, null
	BIZ_Services_OrderService strServiceName,strUserName,strPassword,""
End Function



'This function is to order flood certificate on the Flood Cret Order Dialog
'@code
'    BIZ_Services_OrderFloodCertificate(strServiceName,strUserName,strPassword,strProduct)
'@endcode
'@param strServiceName -  service used
'@param strUserName - user Id to enter site
'@param strPassword - pasword to enter site
'@param strProduct - product to request

Function BIZ_Services_OrderFloodCertificate(strServiceName,strUserName,strPassword,strProduct)
	FRM_Logger_ReportInfoEvent "Order Flood Certificate", "Service to select: " & strServiceName & "; User = " & strUserName & "; Password = " & strPassword & "; Product = " & strProduct, null
	BIZ_Services_OrderService strServiceName,strUserName,strPassword,strProduct
End Function



'This function is to order flood or fraud service and populate data on Order Dialog
'@code
'    BIZ_Services_OrderService (strServiceName,strUserName,strPassword,strProduct)
'@endcode
'@param strServiceName -  service used
'@param strUserName - user Id to enter site
'@param strPassword - pasword to enter site
'@param strProduct - product to request

Function BIZ_Services_OrderService (strServiceName,strUserName,strPassword,strProduct)

	Dim objDialog,objDialogInMainForm

	Set objDialog = Dialog("text:=" & strServiceName,"index:=0")
	Set objDialogInMainForm = SwfWindow("swfname:=MainForm").Dialog("text:=" & strServiceName,"index:=0")
	If objDialog.Exist(30) or objDialogInMainForm.Exist(10) Then
		If objDialogInMainForm.Exist(30) then 
			objDialogInMainForm.WinEdit("nativeclass:=Edit","attachedtext:=Username:").Set strUserName
			objDialogInMainForm.WinEdit("nativeclass:=Edit","attachedtext:=Password:").Set strPassword
			If objDialogInMainForm.WinTreeView("attached text:=Products.*").Exist(2) Then
				objDialogInMainForm.WinTreeView("attached text:=Products.*").SetItemState strProduct, micChecked	
			End If
			objDialogInMainForm.WinButton("text:=Order","index:=0").Click
		Else
			objDialog.WinEdit("nativeclass:=Edit","attachedtext:=Username:").Set strUserName
			objDialog.WinEdit("nativeclass:=Edit","attachedtext:=Password:").Set strPassword
			If objDialog.WinTreeView("attached text:=Products.*").Exist(2) Then
				objDialog.WinTreeView("attached text:=Products.*").SetItemState strProduct, micChecked	
			End If
			objDialog.WinButton("text:=Order","index:=0").Click
		End if
	End If
	If (Dialog("text:=CoreLogic Flood Services - Message").Static("text:=Duplicate of order .*").Exist(60)) Then 
		Dialog("text:=CoreLogic Flood Services - Message").WinButton("text:=OK").click
		'GUI_Dialog_Encompass_OKX 30, "Duplicate of order"
		FRM_Logger_ReportPassEvent "Order Service " & strServiceName, strServiceName & " is returned", null
	Else
		If (Dialog("text:=DataVerify - Message").Exist(5)) Then 
			Dialog("text:=DataVerify - Message").WinButton("text:=OK").Click
		Else
			set objDialogMsg = Dialog("text:=" & strServiceName & " -.*")
			If objDialogMsg.Exist(150) Then
				strMsg = objDialogMsg.Static("regexpwndclass:=Static","index:=1").GetROProperty("text")
	    		If instr(strMsg,"Fail") > 0 Then
	    	  	  FRM_Logger_ReportFailEvent "Order " & strServiceName & " FAILED", strMsg, null
	   	    	Else
	    	   		FRM_Logger_ReportInfoEvent "Order " & strServiceName & "  - ", strMsg, null
	   			End If
        		objDialogMsg.WinButton("text:=OK").Click		    
			End If
			If objDialog.WinButton("text:=Cancel","index:=0").Exist(30) Then
				objDialog.WinButton("text:=Cancel","index:=0").Click
			End If
			If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfTab("swfname:=tabControl").GetSelection = "Services View" Then
				FRM_Logger_ReportPassEvent "Order Service " & strServiceName, strServiceName & " is returned", null
			Else
				FRM_Logger_ReportFailEvent "Order Service" & strServiceName, strServiceName & " failed to return", null	
			End If
		End If
	End if
    Set objDialog = Nothing
	Set objDialogInMainForm = Nothing
End Function



'This function is to order flood certificate and process order fom end to end for CoreLogic Flood Service
'@code
'    BIZ_Services_ProcessFloodOrderCoreLogic(strUser,strPassword,strProduct)
'@endcode
'@param strUser - user Id to enter site
'@param strPassword - pasword to enter site
'@param strProduct - product to request

Function BIZ_Services_ProcessFloodOrderCoreLogic(strUser,strPassword,strProduct)
    BIZ_Nav_SelectLoanTab()
	BIZ_Services_ShowInOrder
	BIZ_Services_Open "Flood Certification"
	strDestFolder = Util_File_FindMostRecentSubFolder(UTIL_File_FindTempFolder() & "\EncompassSC\")
	'UTIL_File_Copy FRM_RT_DataDirPath() & "FAIFLOODURL.INI", strDestFolder & "\FAIFLOODURL.INI", true
    wait 1
	BIZ_Services_SelectFloodService "CoreLogic Flood Services"
	BIZ_Services_OrderFloodCertificate "CoreLogic Flood Services",strUser,strPassword,strProduct	
End Function



'This function is to order flood certificate and process order fom end to end using external Data Table as user/psw changes sometime
'@code
'    BIZ_Services_ProcessFloodOrderCoreLogicFloodServices(strRowID)
'@endcode
'@param strUser - user Id to enter site

Function BIZ_Services_ProcessFloodOrderCoreLogicFloodServices(strRowID)
   	Set objData = FRM_DS_GetTestData("Services", "FloodService", strRowID)
	strUser = FRM_DS_GetValue(objData, "User")
	strPassword = FRM_DS_GetValue(objData, "Password")
	strProduct = FRM_DS_GetValue(objData, "ProductType") 

    BIZ_Services_ProcessFloodOrderCoreLogic strUser,strPassword,strProduct
	Set objData = Nothing
End Function



'This function is to order fraud and process order fom end to end for CoreLogic Safe  Fraud Manager
'@code
'    BIZ_Services_ProcessFraudOrderCoreLogic(strUser,strPassword)
'@endcode
'@param strUser - user Id to enter site
'@param strPassword - pasword to enter site


Function BIZ_Services_ProcessFraudOrderCoreLogic(strUser,strPassword)
    BIZ_Nav_SelectLoanTab()
	BIZ_Services_ShowInOrder
	BIZ_Services_Open "Fraud/Audit Services"
	strDestFolder = Util_File_FindMostRecentSubFolder(UTIL_File_FindTempFolder() & "\EncompassSC\")
	UTIL_File_Copy FRM_RT_DataDirPath() & "FAIFRDMGRFRAUDURL.INI", strDestFolder & "\FAIFRDMGRFRAUDURL.INI", true
    wait 1
	BIZ_Services_SelectFraudService "CoreLogic LoanSafe Fraud Manager"
	BIZ_Services_OrderFraudService "CoreLogic LoanSafe Fraud Manager",strUser,strPassword	
End Function



'This function is to order fraud and process order fom end to end using external Data table because user/psw changes
'@code
'    BIZ_Services_ProcessFraudOrderCoreLogicLoanSafeFraudManager(strRowID)
'@endcode
'@param strUser - user Id to enter site
'@param strPassword - pasword to enter site

Function BIZ_Services_ProcessFraudOrderCoreLogicLoanSafeFraudManager(strRowID)
   	Set objData = FRM_DS_GetTestData("Services", "FraudService", strRowID)
	strUser = FRM_DS_GetValue(objData, "User")
	strPassword = FRM_DS_GetValue(objData, "Password")
	BIZ_Services_ProcessFraudOrderCoreLogic strUser,strPassword
    Set objData = Nothing
End Function



'This function is to send request for Appraisal
'@code
'	BIZ_Services_OrderAppraisal(companyName,companyEmail,companyPhone, userEmail,userPhone)
'@endcode
'@param companyName - company to send to
'@param companyEmail - company e-mail 
'@param companyPhone - company Phone
'@param userEmail - user e-mail 
'@param userPhone - user Phone

Function BIZ_Services_OrderAppraisal(companyName,companyEmail,companyPhone, userEmail,userPhone)
	FRM_Logger_ReportInfoEvent "Order Appraisal", "Company name: " & companyName & "; Company E-Mail = " & companyEmail & "; User E-Mail = " & userEmail, null
	Set objApprDialog = SwfWindow("swfname:=AppraiserDialog")
	Set objAddDialog = objApprDialog.SwfWindow("swfname:=AddDialog")
	Set objOrderDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog")
	If objApprDialog.Exist(15) Then
	    wait 5
	    BIZ_Services_DeleteApprisalProvider companyName
		objApprDialog.SwfObject("swfname:=addProviderBtn").Click
	End If
	
	If objAddDialog.Exist(15) Then
		objAddDialog.SwfEdit("swfname:=nameTxt").Set companyName
		objAddDialog.SwfEdit("swfname:=emailTxt").Set companyEmail
		objAddDialog.SwfEdit("swfname:=phoneTxt").Set companyPhone
		objAddDialog.SwfButton("swfname:=saveContBtn").Click
	End If
	
	If objOrderDialog.Exist(15) Then 
	 objOrderDialog.SwfEdit("swfname:=fromEmailTxt").Set userEmail
	 objOrderDialog.SwfEdit("swfname:=fromPhoneTxt").Set userPhone
	 objOrderDialog.SwfCalendar("swfname:=dueDtp").Click
	 objOrderDialog.SwfButton("swfname:=sendBtn").Click
	End If
	
	If objOrderDialog.Dialog("index:=0").WinButton("text:=&Yes").Exist(4) Then
	   objOrderDialog.Dialog("index:=0").WinButton("text:=&Yes").Click
	End If
	If objOrderDialog.Dialog("index:=0").Static("text:=Your appraisal order has been sent to Appraisal Service.*").Exist(15) Then	
		FRM_Logger_ReportPassEvent "Order Appraisal", "Appraisal order has been sent to Appraisal Service", null
	Else 
	        FRM_Logger_ReportFailEvent "Order Appraisal", "Appraisal order FAILED to send to Appraisal Service", null
	End if 
	GUI_Dialog_Encompass_OK "Your appraisal order has been sent to Appraisal Service."
	
	Set objApprDialog = Nothing
	Set objAddDialog = Nothing
	Set objOrderDialog = Nothing
End Function



'This function is to LogIn to Appraisal Center
'@code
'	BIZ_Services_LoginAppraisalCenter (strRowID) 
'@endcode
'@param strRowID - ID for login data 

Function BIZ_Services_LoginAppraisalCenter (strRowID)    
    Set objData = FRM_DS_GetTestData("Global_Data", "Website", strRowID)
    strURL = FRM_DS_GetValue(objData, "URL")
    strUser = FRM_DS_GetValue(objData, "EmailAccount")
    strPassword = FRM_DS_GetValue(objData, "Password")
    Set objApprPage = Browser("name:=.*Appraisal Center.*").Page("title:=.*Appraisal Center.*")
    FRM_Logger_ReportInfoEvent "Open Appraisal Center Site", "Opening site:" & strURL, null 
    GUI_Browser_OpenUrl strURL
    
	If objApprPage.WebEdit("html id:=.*UserName.*","index:=0").Exist(120) Then
	    objApprPage.WebEdit("html id:=.*UserName.*","index:=0").Set strUser
        objApprPage.WebEdit("html id:=.*Password.*","index:=0").Set strPassword
        objApprPage.Link("text:=Log In").Click
        FRM_Logger_ReportPassEvent "Open Appraisal Center Site and Log in", "Appraisal Center site is opened and Logged In", null  
    Else
        FRM_Logger_ReportFailEvent "Open Appraisal Center Site", "Appraisal Center site is NOT opened. Welcome page is NOT displayed.", null  
    End If  
    
    Set objApprPage = Nothing
    Set objData = Nothing
End Function

    

'This function is to process appraisal document and send it
'@code
'	BIZ_Services_AppraisalCenterProcessAndSendDocument(strAppraisalAmt,strAppraisalFee,fileName)
'@endcode
'@param strAppraisalAmt - appraisal value to enter to the edit field 
'@param strAppraisalFee - fee for appraisal 
'@param companyPhone - file name for pdf document

Function BIZ_Services_AppraisalCenterProcessAndSendDocument(strAppraisalAmt,strAppraisalFee,fileName)
	FRM_Logger_ReportInfoEvent "Process and Send Appraisal Documnet", "Processing in Appraisal Center", Null
	Set objMyOrdersPage = Browser("name:=.*My Orders.*").Page("title:=.*My Orders.*")
	Set objOrderRequestPage = Browser("name:=.*Order Request.*").Page("title:=.*Order Request.*")
	Set objOrderDetail = Browser("name:=.*Order Detail.*").Page("title:=.*Order Detail.*")
	Set objDeliverOrderPage = Browser("name:=.*Deliver Order.*").Page("title:=.*Deliver Order.*")
	Set objDeliverOrderDialog = Browser("name:=.*Deliver Order.*").Dialog("index:=0")
	
	If objMyOrdersPage.Link("text:=Review Request","index:=0").Exist(50) Then
		objMyOrdersPage.Link("text:=Review Request","index:=0").Click
	End If
	If objOrderRequestPage.Link("text:=.*Accept.*","index:=0").Exist(30) Then
		objOrderRequestPage.Link("text:=.*Accept.*","index:=0").Click
	End If
	If objOrderDetail.WebEdit("html id:=.*AppraisalSheduled.*","index:=0").Exist(20) Then
		objOrderDetail.WebEdit("html id:=.*AppraisalSheduled.*","index:=0").Set UTIL_Date_FormatDateByPattern(now, "mm/dd/yyyy")
	    objOrderDetail.WebEdit("html id:=.*AppointmentCompleted.*","index:=0").Set UTIL_Date_FormatDateByPattern(now, "mm/dd/yyyy")
	    objOrderDetail.WebEdit("html id:=.*OrderCompleteDate.*","index:=0").Set UTIL_Date_FormatDateByPattern(now, "mm/dd/yyyy")
	    objOrderDetail.WebEdit("html id:=.*appraisedValue.*","index:=0").Set strAppraisalAmt
	    objOrderDetail.WebEdit("html id:=.*appraisalFee.*","index:=0").Set strAppraisalFee
	    objOrderDetail.Link("text:=.*Send Messages or Documents.*","index:=0").Click
	End If
	If objDeliverOrderPage.Frame("name:=iQuickCheck").WebFile("html id:=.*1_UploadImage.*","index:=0").Exist(20) Then
		objDeliverOrderPage.Frame("name:=iQuickCheck").WebFile("html id:=.*1_UploadImage.*","index:=0").Click	
	End If
	If objDeliverOrderDialog.WinEdit("regexpwndclass:=Edit","index:=0").Exist(20) Then
	    objDeliverOrderDialog.WinEdit("regexpwndclass:=Edit","index:=0").Set FRM_RT_DataDirPath()
	    wait g_TinyWaitMedium
		objDeliverOrderDialog.WinObject("text:=&Open","index:=0").Click
		wait g_TinyWaitMedium
		objDeliverOrderDialog.WinObject("nativeclass:=window","index:=1").WinList("acc_name:=Items View","index:=0").Activate fileName
	End If
	If objDeliverOrderPage.Link("html id:=.*DoSend_link.*","index:=0").Exist(10) Then
	    objDeliverOrderPage.WebEdit("html id:=.*AppraisedValue.*","index:=0").Set strAppraisalAmt
	    objDeliverOrderPage.WebEdit("html id:=.*AppraisalFee.*","index:=0").Set strAppraisalFee
        objDeliverOrderPage.WebEdit("html id:=.*AppraiserName.*","index:=0").Set "Appraiser Auto"
		objDeliverOrderPage.WebEdit("html id:=.*LicenseNumber.*","index:=0").Set "92345678"
		'objDeliverOrderPage.WebCheckBox("html id:=.*chkCertification.*","index:=0").Set "ON"
		objDeliverOrderPage.Link("html id:=.*DoSend_link.*","index:=0").Click
	End If
	If objOrderDetail.WebElement("innertext:=.*Your documents have been delivered.*","index:=0").Exist(20) Then
		FRM_Logger_ReportPassEvent "Appraisal Documnet sent by appraiser", "Received message - 'Your documents have been delivered.'", Null	
	Else
    	FRM_Logger_ReportFailEvent "Appraisal Documnet Failed to send by appraiser", "Appraisal document was NOT sent", Null
	End If
	If objOrderDetail.Link("text:=.*Done.*","index:=0").Exist(10) Then
		objOrderDetail.Link("Text:=.*Done.*","index:=0").Click
	End If
	if(Browser("index:=0").Exist(5)) then 
		Browser("index:=0").Close
	End if
	
	
	Set objMyOrdersPage = Nothing
	Set objOrderRequestPage = Nothing
	Set objOrderDetail = Nothing
	Set objDeliverOrderPage = Nothing
	Set objDeliverOrderDialog = Nothing
End Function



'This function is to import appraisal document in Encompass
'@code
'	BIZ_Service_ImportAppraisalDocument()
'@endcode

Function BIZ_Services_ImportAppraisalDocument()
    FRM_Logger_ReportInfoEvent "Inmport Appraisal Document", "Import Appraisal document into Encompass", Null
	BIZ_Services_ClickRetrieveBtn "Appraisal" 
	If SwfWindow("swfname:=OrderStatusDialog").SwfObject("swfname:=ImportLink","index:=0").SwfLabel("text:=Import","index:=0").Exist(20) Then
		SwfWindow("swfname:=OrderStatusDialog").SwfObject("swfname:=ImportLink","index:=0").SwfLabel("text:=Import","index:=0").Click
	End If
    If SwfWindow("swfname:=OrderStatusDialog").SwfWindow("swfname:=ImportDataDialog").SwfButton("swfname:=btnImport").Exist(20) Then
    	SwfWindow("swfname:=OrderStatusDialog").SwfWindow("swfname:=ImportDataDialog").SwfButton("swfname:=btnImport").Click
    End If
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderStatusDialog").SwfWindow("swfname:=ImportDataDialog").Dialog("text:=Order Update","index:=0").Exist(30) Then
		GUI_Dialog_Encompass_OKX 30,".*documents have been imported successfully.*"
		wait g_ShortWaitMedium
	End If	
	If SwfWindow("swfname:=OrderStatusDialog").SwfButton("swfname:=btnCancel").Exist(10) Then
		SwfWindow("swfname:=OrderStatusDialog").SwfButton("swfname:=btnCancel").Click
	End If
	
End Function



'This function is to click on retrieve button to import doc
'@code
'	BIZ_Services_ClickRetrieveBtn(strServiceName)
'@endcode
'@param strServiceName - service name where button bellongs

Function BIZ_Services_ClickRetrieveBtn(strServiceName)

    BIZ_Services_ShowInOrder
    Set objServices = SwfWindow("swfname:=MainForm").SwfObject("swfname:=pnlCategories")
	objServices.VScroll  micScrollStart
	Do
		Set oDesc = Description.Create()
		oDesc("swfname").value = "lblTitle"
		Set oChild = objServices.ChildObjects(oDesc)
		For Label = oChild.Count- 1 to 0 Step -1 
			If(oChild(Label).GetROProperty("text") = strServiceName) Then 
				IsFound = True
				Exit Do
			Else
				objServices.VScroll  micLineNext, 1
			End if
		Next
	Loop
	If objServices.SwfLabel("swfname:=lblTitle", "text:="&strServiceName, "index:=0").Exist(2) Then
		iY = cInt(objServices.SwfLabel("swfname:=lblTitle", "text:="&strServiceName, "index:=0").GetROProperty("y"))
	End If	
	If objServices.SwfObject("swfname:=btnRetrieve","y:="& iY - 1).Exist(3) Then
		objServices.SwfObject("swfname:=btnRetrieve","y:="& iY - 1).Click	
	End If
	Set objServices = Nothing
End Function


'This function is to submit request for Title order
'@code
'	BIZ_Services_OrderTitle(strCompanyName,strCompanyAddress,strCompanyCity,strCompanyState,strCompanyZip,strCompanyEmail,strCompanyPhone, userEmail,userPhone,strProductToSelect)
'   BIZ_Services_OrderTitle "Title & Closing Service Test Account Auto","123 Main street","Anaheim","CA","92802","elliemaetitleauto1@gmail.com","8888888888", "valeriy.portugal@elliemae.com","9999999999","Commitment/Prelim w/ Full Closing"
'@endcode
'@param strCompanyName - title Company name
'@param strCompanyAddress,strCompanyCity,strCompanyState,strCompanyZip - address
'@param strCompanyEmail - Company Email
'@param strCompanyPhone - Company Phone
'@param userEmail - user Email
'@param userPhone  -user Phone
'@param strProductToSelect -  Product To Select

Function BIZ_Services_OrderTitle(strCompanyName,strCompanyAddress,strCompanyCity,strCompanyState,strCompanyZip,strCompanyEmail,strCompanyPhone, userEmail,userPhone,strProductToSelect)
	FRM_Logger_ReportInfoEvent "Order Title", "Company name: " & strCompanyName & "; Company E-Mail = " & strCompanyEmail & "; User E-Mail = " & userEmail, null
	Set objWelcomeDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=WelcomeDialog")
	Set objTitleDialog = SwfWindow("swfname:=TitleProviderDialog")
	Set objAddTitleComp = SwfWindow("swfname:=TitleProviderDialog").SwfWindow("swfname:=CustomProviderDialog")
	Set objOrderDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderBranchDialog")
	
	'Welcome dialog could appear. Set it do not show again and click Continue
	If objWelcomeDialog.SwfCheckBox("swfname:=dontShowChk").Exist(5) Then
    	objWelcomeDialog.SwfCheckBox("swfname:=dontShowChk").Set "ON"
    	objWelcomeDialog.SwfButton("swfname:=okBtn","text:=&Continue").Click  			
    End If
	If objTitleDialog.Exist(15) Then
	    BIZ_Services_DeleteTitleProvider strCompanyName 
		objTitleDialog.SwfObject("swfname:=addProviderBtn").Click
	End If
    'Add Title Company
	If objAddTitleComp.Exist(15) Then
		objAddTitleComp.SwfEdit("swfname:=companyTxt").Set strCompanyName
		objAddTitleComp.SwfEdit("swfname:=streetTxt").Set strCompanyAddress
		objAddTitleComp.SwfEdit("swfname:=cityTxt").Set strCompanyCity
		objAddTitleComp.SwfEdit("swfname:=stateTxt").Set strCompanyState
		objAddTitleComp.SwfEdit("swfname:=zipCodeTxt").Set strCompanyZip
		objAddTitleComp.SwfEdit("swfname:=firstNameTxt").Set "Title"
		objAddTitleComp.SwfEdit("swfname:=lastNameTxt").Set "Auto"
		objAddTitleComp.SwfEdit("swfname:=emailTxt").Set strCompanyEmail
		objAddTitleComp.SwfEdit("swfname:=phoneTxt").Set strCompanyPhone
		objAddTitleComp.SwfButton("swfname:=saveContBtn").Click
	End If
	
    'Order Details
	If objOrderDialog.Exist(15) Then 
	 GUI_SwfTab_Click objOrderDialog.SwfTab("swfname:=orderInfoTab"), "Title"
	 objOrderDialog.SwfEdit("swfname:=fromEmailTxt").Set userEmail
	 objOrderDialog.SwfEdit("swfname:=fromPhoneTxt").Set userPhone
	 objOrderDialog.SwfCheckBox("swfname:=titleChk").Set "ON"
	 GUI_List_Select objOrderDialog.SwfList("swfname:=titleProductLst"),strProductToSelect
	 objOrderDialog.SwfEdit("swfname path:=.*NeedByDate.*","index:=2").Set UTIL_Date_FormatDateByPattern(now, "mm/dd/yyyy")
	 objOrderDialog.SwfEdit("swfname path:=.*EstClosingDate.*","index:=2").Set UTIL_Date_FormatDateByPattern(now, "mm/dd/yyyy")
	 objOrderDialog.SwfButton("swfname:=sendBtn").Click
	End If
	

	If objOrderDialog.Dialog("index:=0").Static("text:=.*Your order has been sent.*").Exist(30) Then	
		FRM_Logger_ReportPassEvent "Order Title", "Title order has been sent to Title Agency", null
	Else 
	    FRM_Logger_ReportFailEvent "Order Title", "Title order FAILED to send", null
	End if 
	GUI_Dialog_Encompass_OK ".*Your order has been sent."
	
	Set objWelcomeDialog = Nothing
	Set objTitleDialog = Nothing
	Set objAddTitleComp = Nothing
	Set objOrderDialog = Nothing
End Function
 
 
 
'This function is to delete Title provider
'@code
'	BIZ_Services_DeleteTitleProvider(strProvider)
'@endcode
'@param strProvider - title Company name 
 
Function BIZ_Services_DeleteTitleProvider(strProvider)
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog")
	If objMainView.Exist(5) Then
		isSelected = GUI_List_SelectItem(objMainView.SwfObject("swfname:=myLst"),strProvider,0)
		If isSelected Then
			objMainView.SwfObject("swfname:=removeBtn").Click
			GUI_Dialog_Encompass_Yes "Are you sure you want to remove the selected provider?"	
		End If			
	End If
    Set objMainView = Nothing
End Function



'This function is to delete Appraisal provider
'@code
'	BIZ_Services_DeleteApprisalProvider(strProvider)
'@endcode
'@param strProvider - title Company name 

Function BIZ_Services_DeleteApprisalProvider(strProvider)
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AppraiserDialog")
	If objMainView.Exist(5) Then
		isSelected = GUI_List_SelectItem(objMainView.SwfObject("swfname:=lvwMyAppraisers"),strProvider,0)
		If isSelected Then
			objMainView.SwfObject("swfname:=removeBtn").Click
			GUI_Dialog_Encompass_Yes "Are you sure you want to remove the selected appraiser/company?"	
		End If	
	End If	
	Set objMainView = Nothing
End Function
 

 
'This function is to LogIn to Title Center
'@code
'	BIZ_Services_LoginTitleCenter (strRowID) 
'	BIZ_Services_LoginAppraisalCenter "TITLE_TA-4682"
'@endcode
'@param strRowID - ID for login data 

Function BIZ_Services_LoginTitleCenter (strRowID)    
    Set objData = FRM_DS_GetTestData("Global_Data", "Website", strRowID)
    strURL = FRM_DS_GetValue(objData, "URL")
    strUser = FRM_DS_GetValue(objData, "EmailAccount")
    strPassword = FRM_DS_GetValue(objData, "Password")
    Set objTitlePage = Browser("name:=.*Title Center.*").Page("title:=.*Title Center.*")
    FRM_Logger_ReportInfoEvent "Open Title Center Site", "Opening site:" & strURL, null 
    GUI_Browser_OpenUrl strURL
    
	If objTitlePage.WebEdit("html id:=.*UserName.*","index:=0").Exist(120) Then
	    objTitlePage.WebEdit("html id:=.*UserName.*","index:=0").Set strUser
        objTitlePage.WebEdit("html id:=.*Password.*","index:=0").Set strPassword
        objTitlePage.Link("text:=Log In").Click
        FRM_Logger_ReportPassEvent "Open Title Center Site and Log in", "Title Center site is opened and Logged In", null  
    Else
        FRM_Logger_ReportFailEvent "Open Title Center Site", "Title Center site is NOT opened. Welcome page is NOT displayed.", null  
    End If  
    
    Set objTitlePage = Nothing
    Set objData = Nothing
End Function



'This function is to process Title document and send it
'@code
'	BIZ_Services_TitleCenterProcessAndSendDocument(strOrigPrincipal,strCurrentPrincipal,strSetlFee,strClsFee,strOwnerTitleIns,strLenderTitleIns,strRecordingFee,fileName)
'   BIZ_Services_TitleCenterProcessAndSendDocument "400000","300000","400","200","400","300","75","Title Document.pdf"
'@endcode
'@param strOrigPrincipal - Original principal amount
'@param strCurrentPrincipal Cyrrent principal amount
'@param strSetlFee - Setlement fee
'@param strClsFee - Closing fee
'@param strOwnerTitleIns - Owner's Title Insurance Fee
'@param strLenderTitleIns - Lender's Title Insurance fee
'@param strRecordingFee - Recording fee
'@param fileName - .pdf file name to send

Function BIZ_Services_TitleCenterProcessAndSendDocument(strOrigPrincipal,strCurrentPrincipal,strSetlFee,strClsFee,strOwnerTitleIns,strLenderTitleIns,strRecordingFee,fileName)
	FRM_Logger_ReportInfoEvent "Process and Send Title Documnet", "Processing in Title Center", Null
	Set objMyOrdersPage = Browser("name:=.*My Orders.*").Page("title:=.*My Orders.*")
	Set objOrderRequestPage = Browser("name:=.*Order Request.*").Page("title:=.*Order Request.*")
	Set objOrderDetail = Browser("name:=.*Order Detail.*").Page("title:=.*Order Detail.*")
	Set objPrelim = Browser("name:=.*Prelim Information.*").Page("title:=.*Prelim Information.*")
	Set objRecording = Browser("name:=.*Title/Recording Fees.*").Page("title:=.*Title/Recording Fees.*")
	Set objDeliverOrderPage = Browser("name:=.*Deliver Order.*").Page("title:=.*Deliver Order.*")
	Set objDeliverOrderDialog = Browser("name:=.*Deliver Order.*").Dialog("index:=0")
	
	If objMyOrdersPage.Link("text:=Review Request","index:=0").Exist(20) Then
		objMyOrdersPage.Link("text:=Review Request","index:=0").Click
	Else
       	FRM_Logger_ReportFailEvent "Title Center Site", "Title Center site did not get any request to process.", null
	End If
	If objOrderRequestPage.Link("text:=.*Accept.*","index:=0").Exist(20) Then
		objOrderRequestPage.Link("text:=.*Accept.*","index:=0").Click
	End If
	If objOrderDetail.Link("text:=.*Prelim Information.*","index:=0").Exist(20) Then
	    objOrderDetail.Link("text:=.*Prelim Information.*","index:=0").Click
	End If
	If objPrelim.WebEdit("html id:=.*txtBook.*","index:=0").Exist(15) Then
		objPrelim.WebEdit("html id:=.*txtBook.*","index:=0").Set "3298"
       	objPrelim.WebEdit("html id:=.*txtPage.*","index:=0").Set "42"
		objPrelim.WebEdit("html id:=.*txtParcelNumber.*","index:=0").Set "342"   
        objPrelim.WebEdit("html id:=.*txtLot.*","index:=0").Set "277"
        objPrelim.WebEdit("html id:=.*txtBlock.*","index:=0").Set "11"
        objPrelim.WebEdit("html id:=.*txtSection.*","index:=0").Set "1678"  
        objPrelim.WebEdit("html id:=.*txtOriginalPrincipal.*","index:=0").Set strOrigPrincipal
        objPrelim.WebEdit("html id:=.*txtCurrentPrincipal.*","index:=0").Set strCurrentPrincipal
        objPrelim.WebEdit("html id:=.*txtReportDate.*","index:=0").Set UTIL_Date_FormatDateByPattern(now, "mm/dd/yyyy")
        objPrelim.WebEdit("html id:=.*txtLegalDescription.*","index:=0").Set "Legal Description"
        objPrelim.Link("text:=Send").Click        
	End If
	If objOrderDetail.Link("text:=.*Title / Recording Fees.*","index:=0").Exist(20) Then
	    objOrderDetail.Link("text:=.*Title / Recording Fees.*","index:=0").Click
	End If
	If objRecording.WebEdit("html id:=.*1102.ctl01.txt1102BorrowerAmount.*").Exist(15) Then
		objRecording.WebEdit("html id:=.*1102.ctl01.txt1102BorrowerAmount.*").Set strSetlFee
		objRecording.WebEdit("html id:=.*1102.ctl02.txt1102BorrowerAmount.*").Set strClsFee
		objRecording.WebEdit("html id:=.*1103.ctl01.txt1103BorrowerAmount.*").Set strOwnerTitleIns
		objRecording.WebEdit("html id:=.*1103.ctl02.txt1103BorrowerAmount.*").Set strLenderTitleIns
		objRecording.WebEdit("html id:=.*ctl00.*txt1202BorrowerAmount.*").Set strRecordingFee
		objRecording.Link("text:=Send Fees").Click 
	End If
	If objOrderDetail.Link("text:=.*Send Messages or Documents.*","index:=0").Exist(20) Then
	    objOrderDetail.Link("text:=.*Send Messages or Documents.*","index:=0").Click
	End If	
	If objDeliverOrderPage.WebList("html id:=.*DocumentType1.*","index:=0").Exist(20) Then
		objDeliverOrderPage.WebList("html id:=.*DocumentType1.*","index:=0").Select 1	
	End If
	If objDeliverOrderPage.WebFile("html id:=.*1_UploadImage.*","index:=0").Exist(20) Then
		objDeliverOrderPage.WebFile("html id:=.*1_UploadImage.*","index:=0").Click	
	End If
	
	If objDeliverOrderDialog.WinEdit("regexpwndclass:=Edit","index:=0").Exist(20) Then
	    objDeliverOrderDialog.WinEdit("regexpwndclass:=Edit","index:=0").Set FRM_RT_DataDirPath()
	    wait g_TinyWaitMedium
		objDeliverOrderDialog.WinObject("text:=&Open","index:=0").Click
		wait g_TinyWaitMedium
		objDeliverOrderDialog.WinObject("nativeclass:=window","index:=1").WinList("acc_name:=Items View","index:=0").Activate fileName
		wait g_ShortWaitMedium
	End If
	If objDeliverOrderPage.Link("html id:=.*DoSend_link.*","index:=0").Exist(10) Then
		objDeliverOrderPage.Link("html id:=.*DoSend_link.*","index:=0").Click
	End If
	If objOrderDetail.WebElement("innertext:=.*Your documents have been delivered.*","index:=0").Exist(20) or objOrderDetail.WebElement("innertext:=Your title and recording fees have been sent.","index:=0").Exist(20) Then
		FRM_Logger_ReportPassEvent "Title Document sent by agent", "Received message - 'Your documents have been delivered.'", Null	
	Else
    	FRM_Logger_ReportFailEvent "Title Document Failed to send by title center", "Title document was NOT sent", Null
	End If
	If objOrderDetail.Link("text:=.*Done.*","index:=0").Exist(10) Then
		objOrderDetail.Link("Text:=.*Done.*","index:=0").Click
	End If
	If(Browser("index:=0").Exist(30)) then
		Browser("index:=0").Close
	end If
	
	Set objMyOrdersPage = Nothing
	Set objOrderRequestPage = Nothing
	Set objOrderDetail = Nothing
	Set objDeliverOrderPage = Nothing
	Set objDeliverOrderDialog = Nothing
	Set objPrelim = Nothing
	Set objRecording = Nothing
End Function



'This function is to import Title document in Encompass
'@code
'	BIZ_Services_ImportTitleDocument(strDocument)
'	BIZ_Service_ImportTitleDocument "Title Document.pdf"
'@endcode
'@param strDocument- document to import

Function BIZ_Services_ImportTitleDocument(strDocument)
    FRM_Logger_ReportInfoEvent "Inmport Title Document", "Import Title document into Encompass", Null
	BIZ_Services_ClickRetrieveBtn "Title & Closing" 
	
	If SwfWindow("swfname:=OrderStatusDialog").SwfObject("swfname:=ImportLink","index:=0").SwfLabel("text:=Import","index:=0").Exist(30) Then
		SwfWindow("swfname:=OrderStatusDialog").SwfObject("swfname:=ImportLink","index:=0").SwfLabel("text:=Import","index:=0").Click
	End If
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfLabel("swfname:=link1Lnk").Exist Then 
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfLabel("swfname:=link1Lnk").Click
	ElseIf SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfLabel("swfname:=link1Lnk","Location:=0","text:=Import").Exist Then 
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfLabel("swfname:=link1Lnk","Location:=0","text:=Import").Click
	End If 	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderStatusDialog").SwfWindow("swfname:=ImportDlgRespa2015")
	If objMainView.Exist Then 
		If objMainView.SwfButton("swfname:=importBtn").Exist(40) Then
			If objMainView.SwfListView("swfname:=docGrid").Exist(5) Then
        		'objMainView.SwfListView("swfname:=docGrid").Activate strDocument '- commented because it is defaulted to be selected
        		wait g_ShortWaitMedium
			End If
    		objMainView.SwfButton("swfname:=importBtn").Click
		End If
	End If
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfWindow("swfname:=ImportDlgRespa2015")
	If objMainView.Exist Then 
		If objMainView.SwfButton("swfname:=importBtn").Exist(40) Then
			If objMainView.SwfListView("swfname:=docGrid").Exist(5) Then
        		'objMainView.SwfListView("swfname:=docGrid").Activate strDocument '- commented because it is defaulted to be selected
        		wait g_ShortWaitMedium
			End If
    		objMainView.SwfButton("swfname:=importBtn").Click
		End If
	End If
	
	Set objDialog = objMainView.Dialog("text:=Import Title Data","index:=0")
	If objDialog.WinButton("text:=OK").Exist(30) Then
	    strStaticText = objDialog.Static("index:=1").GetROProperty("text")
		If Instr(strStaticText,"Import has finished") > 0 Then
			FRM_Logger_ReportPassEvent "Inmport Title Document", strStaticText, Null	
		else
            FRM_Logger_ReportFailEvent "Inmport Title Document", "Import Title document into Encompass has NOT finished", Null		
		End If	
		objDialog.WinButton("text:=OK").Click
	End If
	wait g_ShortWaitMedium
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderStatusDialog").SwfButton("swfname:=btnCancel","text:=.*Close.*").Exist(15) Then
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderStatusDialog").SwfButton("swfname:=btnCancel","text:=.*Close.*").Click
	End If
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").Exist(15) Then
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").Close
	End If
	Set objDialog = Nothing
End Function



'This function is to order appraisal and process order fom end to end 
'@code
'    BIZ_Services_ProcessAppraisalOrderRequestAndImport(strRowID)
'	 BIZ_Services_ProcessAppraisalOrderRequestAndImport "HP_APPRAISAL_TA-4682"
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Services_ProcessAppraisalOrderRequestAndImport(strRowID)
	Set objData = FRM_DS_GetTestData("Services", "AppraisalService", strRowID)
	strAppraisalAccountName = FRM_DS_GetValue(objData, "AppraisalAccountName")
	strAppraisalAccountEMail = FRM_DS_GetValue(objData, "AppraisalAccountEMail")
	strAppraisalAccountPhone = FRM_DS_GetValue(objData, "AppraisalAccountPhone")
	strUserEMail = FRM_DS_GetValue(objData, "UserEMail")
	strUserPhone = FRM_DS_GetValue(objData, "UserPhone")
	strAppraisalCenterLoginRowId = FRM_DS_GetValue(objData, "AppraisalCenterLoginRowId")
	strAppraisalAmt = FRM_DS_GetValue(objData, "AppraisalAmt")
	strAppraisalFee = FRM_DS_GetValue(objData, "AppraisalFee")
	strAppraisalDocument = FRM_DS_GetValue(objData, "AppraisalDocument")
	
	BIZ_Nav_SelectLoanTab()
	BIZ_Services_ShowInOrder
	BIZ_Services_Open "Appraisal"
	BIZ_Services_OrderAppraisal strAppraisalAccountName,strAppraisalAccountEMail,strAppraisalAccountPhone,strUserEMail,strUserPhone
	BIZ_Services_LoginAppraisalCenter strAppraisalCenterLoginRowId
	BIZ_Services_AppraisalCenterProcessAndSendDocument strAppraisalAmt,strAppraisalFee,strAppraisalDocument
	BIZ_Services_ImportAppraisalDocument
	Set objData = Nothing
End Function



'This function is to order title and process order fom end to end 
'@code
'    BIZ_Services_ProcessTitleOrderRequestAndImport(strRowID)
'    BIZ_Services_ProcessTitleOrderRequestAndImport "HP_TITLE_TA-4682"
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Services_ProcessTitleOrderRequestAndImport(strRowID)
	Set objData = FRM_DS_GetTestData("Services", "TitleService", strRowID)
	strTitleServiceName = FRM_DS_GetValue(objData, "TitleServiceName")
	strTitleServiceStreet = FRM_DS_GetValue(objData, "TitleServiceStreet")
	strTitleServiceCity = FRM_DS_GetValue(objData, "TitleServiceCity")
	strTitleServiceState = FRM_DS_GetValue(objData, "TitleServiceState")
	strTitleServiceZIP = FRM_DS_GetValue(objData, "TitleServiceZIP")
	strAgentEmail = FRM_DS_GetValue(objData, "AgentEmail")
	strAgentPhone = FRM_DS_GetValue(objData, "AgentPhone")
	strUserEmail = FRM_DS_GetValue(objData, "UserEmail")
	strUserPhone = FRM_DS_GetValue(objData, "UserPhone")
	strTitleServiceProduct = FRM_DS_GetValue(objData, "TitleServiceProduct")
	strTitleCenterLoginRowId = FRM_DS_GetValue(objData, "TitleCenterLoginRowId")
	strOriginalPrincipal = FRM_DS_GetValue(objData, "OriginalPrincipal")
	strCurrentPrincipal = FRM_DS_GetValue(objData, "CurrentPrincipal")
	strSettlementFee = FRM_DS_GetValue(objData, "SettlementFee")
	strClosingFee = FRM_DS_GetValue(objData, "ClosingFee")
	strOwnerInsurance = FRM_DS_GetValue(objData, "OwnerInsurance")
	strLenderInsurance = FRM_DS_GetValue(objData, "LenderInsurance")
	strRecordingFee = FRM_DS_GetValue(objData, "RecordingFee")
	strDocumentName = FRM_DS_GetValue(objData, "DocumentName")

	BIZ_Nav_SelectLoanTab()
	BIZ_Services_ShowInOrder
	BIZ_Services_Open "Title & Closing"
	BIZ_Services_OrderTitle strTitleServiceName,strTitleServiceStreet,strTitleServiceCity,strTitleServiceState,strTitleServiceZIP,strAgentEmail,strAgentPhone, strUserEmail,strUserPhone,strTitleServiceProduct
	BIZ_Services_LoginTitleCenter strTitleCenterLoginRowId
	BIZ_Services_TitleCenterProcessAndSendDocument strOriginalPrincipal,strCurrentPrincipal,strSettlementFee,strClosingFee,strOwnerInsurance,strLenderInsurance,strRecordingFee,strDocumentName
	BIZ_Services_ImportTitleDocument strDocumentName
    Set objData = Nothing
End Function



'This function is set values to "Order Title and closing form 
'@code
'    BIZ_Services_SetOrderTitleAndClosing(strRowID)
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Services_SetOrderTitleAndClosing(strRowID)

	'Open Title and Closing Screen under Services
	BIZ_Services_Open "Title & Closing"

	Set objData = FRM_DS_GetTestData("Services", "TitleNClosing", strRowID)
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog")
	objMainView.SwfTab("swfname:=providersTab").Select "My Title Companies"
	isSelected = GUI_List_SelectItem(objMainView.SwfObject("swfname:=myLst"),FRM_DS_GetValue(objData, "CompanyName"),0)
	If(isSelected = true) Then
		GUI_SwfButton_Click objMainView.SwfButton("swfname:=orderBtn")
	Else
		objMainView.SwfTab("swfname:=providersTab").Select "All Title Companies"
		GUI_SwfButton_Click objMainView.SwfButton("swfname:=allBtn")
		Wait g_TinyWaitSmall
		GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfComboBox("swfname:=stateCbo"), "Any State"
		GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfComboBox("swfname:=countyCbo"), "Any County"
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfEdit("swfname:=companyTxt"), FRM_DS_GetValue(objData, "CompanyName")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfButton("swfname:=searchBtn")
		Wait g_TinyWaitSmall
		isSelected = GUI_List_SelectItem(objMainView.SwfObject("swfname:=providersLst"),FRM_DS_GetValue(objData, "CompanyName"),0)
		GUI_SwfButton_Click objMainView.SwfButton("swfname:=orderAllBtn")
	End if
	Wait g_TinyWaitSmall
	If(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderBranchDialog").Exist(5)) Then 
		Set OrderBranchDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderBranchDialog")
	End If
	If(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfWindow("swfname:=OrderBranchDialog").Exist(5)) Then 
		Set OrderBranchDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfWindow("swfname:=OrderBranchDialog")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Phone")) Then 
		GUI_SwfEdit_Set OrderBranchDialog.SwfEdit("swfname:=fromPhoneTxt"), FRM_DS_GetValue(objData, "Phone")
	End if
	OrderBranchDialog.SwfTab("swfname:=orderInfoTab").Select "Request a Fee Quote"
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Phone")) Then 
		GUI_SwfCheckbox_Set OrderBranchDialog.SwfCheckBox("swfname:=feeQuoteChk"),FRM_DS_GetValue(objData, "feeQuoteCheck")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FeeQuoteComments")) Then 
		GUI_SwfEditor_Type OrderBranchDialog.SwfEditor("swfname:=feeQuoteCommentsTxt"), FRM_DS_GetValue(objData, "FeeQuoteComments")
	End if
	
	GUI_SwfTab_Click OrderBranchDialog.SwfTab("swfname:=orderInfoTab"), "Order Title && Closing  "
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TitleCheck")) Then  
		GUI_SwfCheckbox_Set OrderBranchDialog.SwfCheckBox("swfname:=titleChk"), FRM_DS_GetValue(objData, "TitleCheck")	
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TitleComments")) Then 
		GUI_SwfEditor_Type OrderBranchDialog.SwfEditor("swfname:=titleCommentTxt"), FRM_DS_GetValue(objData, "TitleComments")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TitleProductList")) Then 
		If(InStr(FRM_DS_GetValue(objData, "TitleProductList"), "with") > 0) Then
			If(OrderBranchDialog.SwfList("swfname:=titleProductLst").GetItemProperty(0, "checked") = false) Then 
				OrderBranchDialog.SwfList("swfname:=titleProductLst").Select 0
			End If
		End If
	End if
	'GUI_SwfTab_Click OrderBranchDialog.SwfTab("swfname:=orderInfoTab"), "Closing / Escrow"
	'If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ClosingCheck")) Then 
	'	GUI_SwfCheckbox_Set OrderBranchDialog.SwfCheckBox("swfname:=closingChk"), FRM_DS_GetValue(objData, "ClosingCheck")
	'End if
	'If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ClosingProductList")) Then 
	'	GUI_SwfList_Select OrderBranchDialog.SwfList("swfname:=closingProductLst"), FRM_DS_GetValue(objData, "ClosingProductList")
	'End if

	
	If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderBranchDialog").SwfButton("swfname:=sendBtn"))) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderBranchDialog").SwfButton("swfname:=sendBtn")
	ElseIf(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfWindow("swfname:=OrderBranchDialog").SwfButton("swfname:=sendBtn"))) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").SwfWindow("swfname:=OrderBranchDialog").SwfButton("swfname:=sendBtn")
	End If

	GUI_Dialog_Encompass_OK("")

	If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog")))Then
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TitleProviderDialog").Close()
	End If
	Set objData = Nothing
	Set objMainView = Nothing

End Function



'This function is Process FraudService
'@code
'    BIZ_Services_ProcessFraudService(strRowID)
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Services_ProcessFraudService(strRowID)
	Set objData = FRM_DS_GetTestData("Services", "FraudService", strRowID)
	'Opens the  the Order Fraud/Audit Services Screen
	BIZ_Services_Open "Fraud/Audit Services"

	GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog").SwfObject("swfname:=myPage"), 100, "Fraud service provider window should open"

	'Selects the fraud services and submits
	BIZ_Services_SelectFraudService FRM_DS_GetValue(objData, "ServiceName")

	BIZ_Services_OrderService "Report Request",FRM_DS_GetValue(objData, "User"),FRM_DS_GetValue(objData, "Password"),""

	Set objData = Nothing
End Function



'As we can't split the existing function, need to write a new function for the same 
'This function is Process Title Center Details and Send Document Details
'@code
'    BIZ_Services_ProcessTitleCenterDetailsAndSendDocument(strRowID)
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Services_ProcessTitleCenterDetailsAndSendDocument(strRowID)
	Set objData = FRM_DS_GetTestData("Services", "TitleService", strRowID)
	strOriginalPrincipal = FRM_DS_GetValue(objData, "OriginalPrincipal")
	strCurrentPrincipal = FRM_DS_GetValue(objData, "CurrentPrincipal")
	strSettlementFee = FRM_DS_GetValue(objData, "SettlementFee")
	strClosingFee = FRM_DS_GetValue(objData, "ClosingFee")
	strOwnerInsurance = FRM_DS_GetValue(objData, "OwnerInsurance")
	strLenderInsurance = FRM_DS_GetValue(objData, "LenderInsurance")
	strRecordingFee = FRM_DS_GetValue(objData, "RecordingFee")
	strDocumentName = FRM_DS_GetValue(objData, "DocumentName")

	BIZ_Services_TitleCenterProcessAndSendDocument strOriginalPrincipal,strCurrentPrincipal,strSettlementFee,strClosingFee,strOwnerInsurance,strLenderInsurance,strRecordingFee,strDocumentName
End Function 



'As we can't split the existing function, need to write a new function for the same 
'This function is Process Title Center Details and Send Document Details
'@code
'    BIZ_Services_ProcessAppraisalCenterAndSendDocument(strRowID)
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Services_ProcessAppraisalCenterAndSendDocument(strRowID)
	Dim strAppraisalAmt, strAppraisalFee, strAppraisalDocument
	Set objData = FRM_DS_GetTestData("Services", "AppraisalService", strRowID)
	strAppraisalAmt = FRM_DS_GetValue(objData, "AppraisalAmt")
	strAppraisalFee = FRM_DS_GetValue(objData, "AppraisalFee")
	strAppraisalDocument = FRM_DS_GetValue(objData, "AppraisalDocument")
	BIZ_Services_AppraisalCenterProcessAndSendDocument strAppraisalAmt, strAppraisalFee,strAppraisalDocument
End Function



'This function is to click on retrieve button to import doc
'@code
'	BIZ_Services_VerifyRetrieveBtn(strServiceName)
'   BIZ_Services_VerifyRetrieveBtn "Appraisal"
'@endcode
'@param strServiceName - service name where button belongs

Function BIZ_Services_VerifyRetrieveBtn(strServiceName)

    BIZ_Services_ShowInOrder
    Set objServices = SwfWindow("swfname:=MainForm").SwfObject("swfname:=pnlCategories")
	objServices.VScroll  micScrollStart
	Do
		Set oDesc = Description.Create()
		oDesc("swfname").value = "lblTitle"
		Set oChild = objServices.ChildObjects(oDesc)
		For Label = oChild.Count- 1 to 0 Step -1 
			If(oChild(Label).GetROProperty("text") = strServiceName) Then 
				IsFound = True
				Exit Do
			Else
				objServices.VScroll  micLineNext, 1
			End if
		Next
	Loop
	If objServices.SwfLabel("swfname:=lblTitle", "text:="&strServiceName, "index:=0").Exist(2) Then
		iY = cInt(objServices.SwfLabel("swfname:=lblTitle", "text:="&strServiceName, "index:=0").GetROProperty("y"))
	End If	
	If objServices.SwfObject("swfname:=btnRetrieve","y:="& iY - 1).Exist(3) Then
		BIZ_Services_VerifyRetrieveBtn = True	
	Else
		BIZ_Services_VerifyRetrieveBtn = False
	End If
	Set objServices = Nothing
End Function



'This function is used to login to Product and Pricng
'@code
'	BIZ_Services_LoginProductAndPricing()
'@endcode

Function BIZ_Services_LoginProductAndPricing()
	Dim objOrderDialog
	If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog"), 60))Then
		Set objOrderDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog")
	ElseIf(GUI_Object_IsExistX(SwfWindow("swfname:=OrderDialog"), 60))Then
		Set objOrderDialog = SwfWindow("swfname:=OrderDialog")
	Else
		FRM_Logger_ReportFailEvent "Product & Pricing Order Dialog", "Product & Pricing Order Dialog did not appear.", null     
	End If
	GUI_SwfList_Select objOrderDialog.SwfList("swfname:=myLst"), "Encompass Product and Pricing Service"
	GUI_Object_WaitTillExistX objOrderDialog.SwfButton("swfname:=submitBtn"), 240
	GUI_SwfButton_Click objOrderDialog.SwfButton("swfname:=submitBtn")
	Set objOrderDialog = Nothing
End Function



'This function is used to Submit Fraud Guard Details
'@code
'	 BIZ_Services_SubmitFraudGuardDetails(strRowID)
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Services_SubmitFraudGuardDetails(strRowID)
	Set objData = FRM_DS_GetTestData("Services", "FraudService", strRowID)
	strUser = FRM_DS_GetValue(objData, "User")
	strPassword = FRM_DS_GetValue(objData, "Password")
	Set objFraudGuardScreen = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CGenPropertySheet")
	GUI_SwfEdit_Set objFraudGuardScreen.SwfEdit("swfname:=txtUserName"), strUser
	GUI_SwfEdit_Set objFraudGuardScreen.SwfEdit("swfname:=txtPassword"), strPassword
	GUI_TreeView_SetItemState objFraudGuardScreen.SwfTreeView("Swfname:=m_oTreeCtrl"), "Fraud Report", micChecked
	GUI_SwfButton_Click objFraudGuardScreen.SwfButton("swfname:=btnNext")
	If GUI_Object_IsExistX(objFraudGuardScreen.SwfButton("swfname:=btnView"),400) Then
		GUI_SwfButton_Click objFraudGuardScreen.SwfButton("swfname:=btnView")
		  If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CGenPropertySheet").SwfWindow("swfname:=DocumentDetailsDialog").SwfButton("swfname:=btnClose"),400)) Then 
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=CGenPropertySheet").SwfWindow("swfname:=DocumentDetailsDialog").SwfButton("swfname:=btnClose")
			FRM_Logger_ReportPassEvent "Enter the fraud credentials and check the checkbox for fraud report click order", "In the Fraud guard request window under 'view and check status' fraud report status should be completed.", null 
			Wait g_TinyWaitMedium			
			GUI_SwfButton_Click objFraudGuardScreen.SwfButton("swfname:=btnCancel")
		Else
			FRM_Logger_ReportFailEvent "Enter the fraud credentials and check the checkbox for fraud report click order", "Fraud Request Details are not displayed", null 
		End If
	End If
End Function



'This function is used to Process Fraud Guard Details
'@code
'	 BIZ_Service_ProcessFraudGraud(strRowID)
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Service_ProcessFraudGraud(strRowID)
	BIZ_Nav_SelectLoanTab()
	BIZ_Services_ShowInOrder
	BIZ_Services_Open "Fraud/Audit Services"
	BIZ_Services_SelectFraudService "FraudGUARD"
	BIZ_Services_SubmitFraudGuardDetails(strRowID)
End Function



'This function is used to Import conditions in Underwriting
'@code
'	 BIZ_Service_UnderwritingImportConditions(strRowID)
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Service_UnderwritingImportConditions(strRowID)
	'Select Show in Alpha order
	BIZ_Services_ShowInOrder

	'Order Request Underwriting service with required test data
	BIZ_Services_RequestUnderwriting strRowID

	Dim objConditionDialog, strDuRecommendation, objWshShell, objImportCondition, objLVconditions, objImportButtons

	strDuRecommendation      = "Approve/Eligible"
	Set objConditionDialog   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ImportConditionsDialog")
	Set objWshShell          = CreateObject("WScript.Shell")

	'Verify is DU Result is returned as Approve/Eligible
	FRM_VerifyEqual BIZ_Services_GetDUResult("Recommendation"),strDuRecommendation , "DU Recommendation Status", "Recommendation should be Approve/Eligible"
	Wait g_TinyWaitMedium

	Set objImportButtons = SwfWindow("swfname:=MainForm").Page("title:=Ellie Mae - DO Direct").Frame("name:=FanImport").WebButton("name:=Import Conditions")
	GUI_Object_WaitTillExistX objImportButtons, 240
	'Import conditions from DU after the DU result 
	GUI_WebButton_Click objImportButtons
	If(GUI_Object_IsExistX(objConditionDialog, 90)) Then 
		FRM_Logger_ReportInfoEvent "Click 'import conditions' button in the DU underwriting page.", "A list of conditions will be shown", null
		GUI_List_Select objConditionDialog.SwfListView("swfname:=lvConditions"), "Misc"
		objWshShell.SendKeys "+{DOWN}"
		GUI_SwfButton_Click objConditionDialog.SwfButton("swfname:=btnImport")
	End If
	Set objConditionDialog   = Nothing
	Set objWshShell          = Nothing
End Function



'@} ''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Services\Svc.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\BusinessRules.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_BusinessRules BIZ_Settings_BusinessRules
'
' List of functions here
' @code    
'	Function BIZ_BR_MilestoneCompletion_DeactivateAll
'	Function BIZ_BR_FieldDataEntry_CreateRule(strRuleName, strRowID)
'   Function BIZ_BR_FieldDataEntry_SetFieldDataEntry(strRuleName, strRowId)
'	Function BIZ_BR_FieldDataEntry_ActivateRule(strRuleName)
'	Function BIZ_BR_FieldDataEntry_DeActivateRule(strRuleName)
'	Function BIZ_BR_FieldDataEntry_CreateRule_PreRequiredFields(strRuleName, strFieldName, strPreRequiredFields)
'	Function BIZ_BR_FieldDataEntry_Select(strFieldDataEntry)
' 	Function BIZ_BR_FieldDataEntry_DeleteExisting(strFieldDataEntry)
'	Function BIZ_BR_PersonaAccesstoFields_Select(strRulesName, strOrperateStyle)
'   Function BIZ_BR_PersonaAccesstoFields_DeleteExisting(strRuleName)
'   Function BIZ_BR_PersonaAccesstoFields_CreateRule(strRuleName, strRowId)
'   Function BIZ_BR_PersonaAccesstoFields_SetPersonaAccessToFields(strRuleName, strRowId)
'	Function BIZ_BR_PersonaAccesstoFields_CreateNew(strRulesName, arrFields, strPersona, strRight)
'	Function BIZ_BR_PersonaAccesstoFields_AddFields(arrFields)	
'	Function BIZ_BR_PersonaAccesstoFields_AssignRight(strPersona, strRight)
'	Function BIZ_BR_PersonaAccesstoFields_ActiveRule(strRuleName)	
'   Function BIZ_BR_FieldTrigger_SaveRule()
'   Function BIZ_BR_FieldTriggers_DeleteExisting(strFieldDataEntry)
'   Function BIZ_BR_FieldTrigger_Select(strFieldDataEntry,strAction)
'   Function BIZ_BR_FieldTrigger_Cancel()
'   Function BIZ_BR_FieldTrigger_CreateNewFieldTrigger(strRowID)
'   Function BIZ_BR_FieldTrigger_CreateNew(strRowID)
'   Function BIZ_BR_FieldTrigger_FieldEvent_Select(strColumnValue)
'   Function BIZ_BR_FieldTrigger_FieldEvent_ClickEdit()
'   Function BIZ_BR_FieldTrigger_FieldEvent_EditEvent_EditActivation(strActionType,strSelectTask,strLDP)
'   Function BIZ_BR_FieldTrigger_FieldEvent_EditEvent_RemoveAction(strActionType)
'   Function BIZ_BR_FieldTrigger_FieldEvent_EditEvent_AddAction (strValue)
'   Function BIZ_BR_FieldTrigger_FieldEvent_OK_Click()
'   Function BIZ_BR_FieldTrigger_Dialog_ClickYes()
'   Function BIZ_BR_FieldTrigger_FieldEvent_Click_OK()
'   Function BIZ_BR_FieldTrigger_FieldEvent_Click_Remove()
'   Function BIZ_BR_PersonaAccessToLoanActions_ValidateGridHeaderText(objListView , strsearchHeaderText)
'   Function BIZ_BR_LoanActionCompletion_CreateNewRule(strRowID)
'   Function BIZ_BR_Common_LoanActionCompletion_CreateNew(strRowID)
'   Function BIZ_BR_LoanActionCompletion_CreateNew(strBusinessRuleName)
'   Function BIZ_BR_LoanActionCompletion_Click_AddRequiredDoc()
'   Function BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredDocumentsWindow(arrExpectedValuesForLoanAction,strAddDocuments,strForLoanAction)
'   Function BIZ_BR_LoanActionCompletion_SaveRule()
'   Function BIZ_BR_LoanActionCompletion_Cancel()
'   Function BIZ_BR_LoanActionCompletion_AddRequiredDocuments(strRowID)
'   Function BIZ_BR_LoanActionCompletion_Select(strFieldDataEntry,strAction)
'   Function BIZ_BR_LoanActionCompletion_VerifyRemoveDocument()
'   Function BIZ_BR_LoanActionCompletion_RequiredDoc_Select_Remove(arrRequiredDoc,intNumofDocumentsRemoved) 
'   Function BIZ_BR_LoanActionCompletion_RequiredDoc_VerifyRequiredDocTab(strRowID ) 
'   Function BIZ_BR_LoanActionCompletion_Check_RequiresAttachment()
'   Function BIZ_BR_LoanActionCompletion_RequiredDoc_Select(strChangeLoanActionRequiredDoc)
'   Function BIZ_BR_LoanActionCompletion_CancelRequiredDocuments(strLoanAction,arrRequiredDocuments)
'   Function BIZ_BR_LoanActionCompletion_RequiredTasks_ClickAddButton(strRequiredTasks,strAddTask)
'   Function BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredTasksWindow(strRowID)
'   Function BIZ_BR_LoanActionCompletion_AddRequiredTasks(strRowID)
'   Function BIZ_BR_LoanActionCompletion_RequiredTasks_SaveRule()
'   Function BIZ_BR_LoanActionCompletion_RequiredDocuments(strRowID)
'   Function BIZ_BR_LoanActionCompletion_LoanActionSelection(strRowID)
'   Function BIZ_BR_LoanActionCompletion_AttachRequired(strRowID)
'   Function BIZ_BR_LoanActionCompletion_ValidateContent(objListView , strsearchHeaderText)
'   Function BIZ_BR_LoanActionCompletion_RequiredTasks(strRowID)
'   Function BIZ_BR_LoanActionCompletion_Validate_RequiredTask_Present(strRowID) 
'   Function BIZ_BR_LoanActionCompletion_RequiredDocumentsTab_ValidateContent(strRowID,objListViewItems)
'   Function BIZ_BR_LoanActionCompletion_RequiredTasksTab_Validation(objListViewItems,strRowID)
'   Function BIZ_BR_LoanActionCompletion_RequiredTask_Select_Remove(strRowID,intNumofTasksRemoved)
'   Function BIZ_BR_LoanActionCompletion_RequiredFieldsTab_UICheck(strRequiredFields)
'   Function BIZ_BR_LoanActionCompletion_RequiredFields_ClickAdd()
'   Function BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredFieldsWindow(strRowID) 
'   Function BIZ_BR_LoanActionCompletion_AddRequiredFields(strRowID)
'   Function BIZ_BR_LoanActionCompletion_RequiredFieldsTab_Validation(objListViewItems,strRowID)
'   Function BIZ_BR_LoanActionCompletion_RequiredFields(strRowID)
'   Function BIZ_BR_LoanActionCompletion_RequiredFields_Description(strRowID)
'   Function BIZ_BR_LoanActionCompletion_AdvancedConditions_UICheck(strRequiredFields)
'   Function BIZ_BR_LoanActionCompletion_AdvancedConditions_ClickAdd()
'   Function BIZ_BR_LoanActionCompletion_ValidateUI_AdvancedConditionsWindow(strRowID)
'   Function BIZ_BR_LoanActionCompletion_AddEditAdvancedCondition(strRowID)
'   Function BIZ_BR_LoanActionCompletion_AdvancedConditionTab_Validation(objListViewItems,strRowID)
'   Function BIZ_BR_LoanActionCompletion_Code(strRowID)
'   Function BIZ_BR_LoanActionCompletion_ChangeLoanAction_AdvancedConditionTab(arrCode,arrLoanAction)
'   Function BIZ_BR_LoanActionCompletion_RequiredMilestones_UICheck(strRequiredFields)
'   Function BIZ_BR_LoanActionCompletion_RequiredMilestones_ClickAdd()
'   Function BIZ_BR_LoanActionCompletion_ValidateUI_MilestonesWindow(strRowID)
'   Function BIZ_BR_LoanActionCompletion_AddRequiredMilestones(strRowID)
'   Function BIZ_BR_LoanActionCompletion_RequiredMilestones(strRowID)
'   Function BIZ_BR_LoanActionCompletion_RequiredMilestonesTab_Validation(objListViewItems,strRowID)
'   Function BIZ_BR_LoanActionCompletion_ChangeLoanAction_RequiredMilestonesTab(arrCode,arrLoanAction)
'   Function BIZ_BR_LoanActionCompletion_ValidateSection2()
'   Function BIZ_BR_LoanActionCompletion_ValidateSection3(strRowID)
'   Function BIZ_BR_LoanActionCompletion_Validate_LoanActionValues (obj,strLoanAction)
'   Function BIZ_BR_FieldDataEntry_Section4_Validation(objListViewItems,strRowID)
'   Function BIZ_BR_FieldDataEntry_CreateNew(strBusinessRuleName)
'   Function BIZ_BR_FieldDataEntry_AddValue_EditableDropdownList(strRowID)
'   Function BIZ_BR_PersonaAccessToLoanAction_VerifyAssignRights(strRowID)
'   Function BIZ_BR_PersonaAccessToLoanAction_AddActionsGrid_ValidateContent(strRowID)
'   Function BIZ_BR_PersonaAccessToLoanAction_CreateNew(strBusinessRuleName)
'   Function BIZ_BR_PersonaAccessToLoanAction_ValidateSection2()
'   Function BIZ_BR_PersonaAccessToLoanAction_ValidateSection3(strRowID)
'   Function BIZ_BR_PersonaAccessToLoanAction_AddLoanActions(strRowID)
'   Function BIZ_BR_PersonaAccessToLoanAction_RemoveLoanActions(strRowID)
'   Function BIZ_BR_PersonaaccessToLoanAction_ModifyAssignRightsForPersonaSelected(strPersona)
'   Function BIZ_BR_PersonaAccessToFields_AddRuleName(strBusinessRuleName)
'   Function BIZ_BR_PersonaAccessToFields_ValidateSection2()
'   Function BIZ_BR_PersonaAccessToFields_ValidateSection3(strRowID)
'   Function BIZ_BR_PersonaAccessToFields_AddaFieldGrid_ValidateContent(strRowID2)
'   Function BIZ_BR_PersonaAccessToFields_VerifyAssignRights(strRowIDRights)
'   Function BIZ_BR_FieldDataEntry_ValidateSection3(strRowID)
'   Function BIZ_BR_PersonaAccessToLoans_ValidateSection3(strRowID)
'   Function BIZ_BR_PersonaAccessToLoans_AddRuleName(strBusinessRuleName)
'   Function BIZ_BR_PersonaAccessToLoan_VerifyAssignRights(strRowID,intYValue)
'	Function BIZ_BR_AutomatedConditions_CreateNew(strRowID)
'	Function BIZ_BR_AutomatedConditions_SetAutomatedCondition(strRowID)
'	Function BIZ_BR_AutomatedConditions_ActivateAutomatedCondition(strConditionName)
'	Function BIZ_BR_AutomatedConditions_DeleteAutomatedCondition(strConditionName)
'	Function BIZ_BR_AutomatedConditions_ExportAutomatedCondition(strConditionName)
'	Function BIZ_BR_AutomatedConditions_ImportAutomatedCondition(strFileName)
'	Function BIZ_BR_MilestoneCompletion_CreateNew(strRowID)
'	Function BIZ_BR_MilestoneCompletion_SetMilestoneCompletion(strRowID)
'	Function BIZ_BR_MilestoneCompletion_ActivateMilestoneCompletion(strConditionName)
'	Function BIZ_BR_MilestoneCompletion_DeleteMilestoneCompletion(strConditionName)
'	Function BIZ_BR_MilestoneCompletion_ExportMilestoneCompletion(strConditionName)
'	Function BIZ_BR_MilestoneCompletion_ImportMilestoneCompletion(strFileName)
'	Function BIZ_BR_PrintAutoSelection_CreateRule(strRuleName, strRowID)
'   Function BIZ_BR_PrintAutoSelection_SetPrintAutoSelection(strRuleName, strRowId)
'	Function BIZ_BR_PrintAutoSelection_DeleteExisting(strPrintAutoSelection)
'   Function BIZ_BR_FieldTrigger_ImportBusinessRule(strFileName)
'   Function BIZ_BR_FieldTrigger_ExportBusinessRule(strFileName)
'   Function BIZ_BR_InputFormList_ImportBusinessRule(strFileName)
'   Function BIZ_BR_InputFormList_ExportBusinessRule(strFileName)
'   Function BIZ_BR_PersonaAccessToLoanRule_ImportBusinessRule(strFileName)
'   Function BIZ_BR_PersonaAccessToLoanRule_ExportBusinessRule(strFileName)
'   Function BIZ_BR_PersonaAccestoLoan_Select(strFieldDataEntry,strAction)
'   Function BIZ_BR_PerosnaAccessToLoans_Activate()
'   Function BIZ_BR_PersonaAccessToLoans_SetPersonaAccessToLoans(strRowID)
'   Function BIZ_BR_PerosnaAccessToLoan_CreateNewAccessRule(strRowID)
'   Function BIZ_BR_PersonaAccesstoLoan_DeleteExisting(strPersonaAccessToLoansRuleEntry)
'   Function BIZ_BR_InputFormList_Activate()
'   Function BIZ_BR_InputFormList_Select(strInputFormList,strAction)
'   Function BIZ_BR_InputFormList_SetInputFormList(strRowID)
'   Function BIZ_BR_InputFormList_CreateNewInputFormList(strRowID)
'   Function BIZ_BR_InputFormList_DeleteExisting(strInputFormList)
'	Function BIZ_BR_Common_ActivateRule(strRuleName)
'	Function BIZ_BR_FieldDataEntry_EditRule(strRuleName, strRowID)
'	Function BIZ_BR_Common_DeactivateRule(strRuleName)
'	Function BIZ_BR_Common_DeleteRule(strRuleName)
'	Function BIZ_BR_MilestoneCompletion_EditRule(strRuleName, strRowID)
'	Function BIZ_BR_PersonaAccesstoFields_EditRule(strRuleName, strRowID)
'	Function BIZ_BR_PersonaAccesstoLoans_EditRule(strRuleName, strRowID)
'	Function BIZ_BR_AutomatedConditions_EditRule(strRuleName, strRowID)
'	Function BIZ_BR_PrintAutoSelection_CreateNewRule(strRowID)
'	Function BIZ_BR_PrintAutoSelection_SetRule(strRowID)
'	Function BIZ_BR_PrintAutoSelection_EditRule(strRuleName, strRowID)
'	Function BIZ_BR_LoanFormPrinting_CreateRule(strRowID)
'	Function BIZ_BR_LoanFormPrinting_SetRule(strRowID)
'	Function BIZ_BR_LoanFormPrinting_EditRule(strRuleName, strRowID)
'	Function BIZ_BR_InputFormList_EditRule(strRuleName,strRowID)
'	Function BIZ_BR_FieldDataEntry_DuplicateRule(strRuleName)
'	Function BIZ_BR_FieldTrigger_DuplicateRule(strRuleName)
'	Function BIZ_BR_MilestoneCompletion_DuplicateRule(strRuleName)
'	Function BIZ_BR_PersonaAccessToFields_DuplicateRule(strRuleName)
'	Function BIZ_BR_PersonaAccesstoLoans_DuplicateRule(strRuleName)                 
'	Function BIZ_BR_AutomatedConditions_DuplicateRule(strRuleName)     
'	Function BIZ_BR_PrintAutoSelection_DuplicateRule(strRuleName)   
'	Function BIZ_BR_LoanFormPrinting_DuplicateRule(strRuleName)            
'	Function BIZ_BR_InputFormList_DuplicateRule(strRuleName)
'	Function BIZ_BR_Common_DuplicateRule(strRuleName)
'	Function BIZ_BR_LOCompensationRule(strRowID)
'	Function BIZ_BR_Common_ValidateRuleDeletion(strRuleName)
'   Function BIZ_BR_Common_ValidateRuleCreated(strRuleName)
'	Function BIZ_BR_VerifyLoanFormWithPrintingRules(strRowID)
'	Function BIZ_BR_ValidateLoanFormPrintingRule(strRowID)
'	Function BIZ_BR_LoanFormPrintingRule_CurrentRoleCondition(strRowID)
'   Function BIZ_BR_PersonaAccesstoLoan_DeleteExisting(strRuleName)
'	Function BIZ_BR_Export_LoanFormPrintingRule(strRuleName)
'	Function BIZ_BR_Import_LoanFormPrintingRule(strFileName)
'	Function BIZ_BR_PersonaAccessToLoanAction_AddPersona(strRowID)
'	Function BIZ_BR_PersonaAccessToLoanAction_SetRule(strRowID)
'	Function BIZ_BR_PersonaAccessToLoanAction_CreateRule(strRowID)
'	Function BR_VerifyImportedRuleDetails(strRuleName)
'	Function BIZ_BR_Import_Rule(strFileName,strScreenName)
'	Function BIZ_BR_Export_Rule(strRuleName,strScreenName)
'	Function BIZ_BR_VerifyImportedRuleDetails(strRuleName,strScreenName)
'	Function BIZ_BR_OpenExistingRule(strScreenName, strRuleName)
'	Function BIZ_BR_SaveRule(objNewRuleCreateDialog, strScreenName, strRuleName)
'	Function BIZ_BR_SetRuleData(objNewRuleCreateDialog,strScreenName,objTestData,strTCName)
'	Function BIZ_BR_ValidateLockExtensionOption_UnderSection3(objNewRuleCreateDialog, objTestData)
'	Function BIZ_BR_AddToLoanTemplate(strLoanTemplate,strTemplate,strTemplateSet,strfoldername)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to deactivate all Milestone Completion in business rules
'@code
'    BIZ_BR_MilestoneCompletion_DeactivateAll()
'@endcode
'@param

Function BIZ_BR_MilestoneCompletion_DeactivateAll()

    FRM_Logger_ReportInfoEvent "Deactivate Milestone Completion", "Deactivate all Milestone Completion in Business Rule", null

	BIZ_Nav_Settings_MilestoneCompletion

	Dim objMilestoneCompletionList, objScrollBar, iRowCount, iCnt, textStatus, textName
	Set objMilestoneCompletionList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set objScrollBar = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	'get the row count of the listview
	iRowCount = objMilestoneCompletionList.Object.Items.Count
	For iCnt = 0 to iRowCount-1
		textStatus = objMilestoneCompletionList.Object.Items.Item(iCnt).Subitems.Item(3).Text
		'if the status is "Active", then select this row & deactivate this row
		If textStatus = "Active" Then
			textName = objMilestoneCompletionList.Object.Items.Item(iCnt).Subitems.Item(0).Text
			GUI_List_ClickRow objMilestoneCompletionList, objScrollBar, 0, textName, True, False, False, "Single"
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfButton("swfname:=deactiveBtn")
		End If
	Next

	Set objMilestoneCompletionList = Nothing
	Set objScrollBar = Nothing

End Function



'This function is used to edit data in existing Milestone Completion rule
'@code
'	Function BIZ_BR_MilestoneCompletion_EditRule(strRuleName, strRowID)
'@endcode
'@param strRuleName - Milestone Completion Rule name to be changed
'@param strRowID - Row Id passed from BusinessRule_MilestoneCompletion sheet

Function BIZ_BR_MilestoneCompletion_EditRule(strRuleName, strRowID)
	FRM_Logger_ReportInfoEvent "Edit Milestone Completion Rule", "Edit Milestone Completion rule "&strRuleName, null
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_List_ClickRow objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Double"
	
	BIZ_BR_MilestoneCompletion_SetMilestoneCompletion objMainView, strRowID
	
	Set objMainView = Nothing
End Function



'This function is used to edit data for existing Input Form List rule 
'@code
'    BIZ_BR_InputFormList_EditRule(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_InputFormList_EditRule(strRuleName,strRowID) 
	FRM_Logger_ReportInfoEvent "Edit Input Form List Rule", "Edit Input Form List rule with name "& strRuleName, null
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_List_ClickRow objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single"
	GUI_SwfObject_Click objMainView.SwfObject("swfname:=stdIconBtnEdit")
	
	BIZ_BR_InputFormList_SetInputFormList strRowID
	Set objMainView = Nothing
End Function

'This function is used to initialize creation of new Loan Form Printing rule 
'@code
'    BIZ_BR_LoanFormPrinting_CreateRule(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_LoanFormPrinting_CreateRule(strRowID)
	FRM_Logger_ReportInfoEvent "Add Loan Form Printing Rule", "Add Loan Form Printing rule with given name ", null
	
	'====== Navigated to Loan Form Printing Rule Screen ======
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	'====== Navigated to Loan Form Printing Rule Screen ======
	GUI_SwfObject_Click objMainView.SwfObject("swfname:=stdIconBtnNew")
	
	'====== Start Creation of new Loan Form Printing Rule ======
	strRuleName = BIZ_BR_LoanFormPrinting_SetRule(strRowID)
	BIZ_BR_LoanFormPrinting_CreateRule = strRuleName
	Set objMainView = Nothing
End Function



'This function is used to edit existing data for Loan Form Printing rule 
'@code
'    BIZ_BR_LoanFormPrinting_EditRule(strRuleName, strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_LoanFormPrinting_EditRule(strRuleName, strRowID)
	FRM_Logger_ReportInfoEvent "Edit Loan Form Printing Rule", "Edit Loan Form Printing rule with name " & strRuleName, null
	
	'====== Start Edit of Loan Form Printing Rule ======
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_List_ClickRow objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Double"
	
	BIZ_BR_LoanFormPrinting_SetRule strRowID
	Set objMainView = Nothing
End Function



'This function is used to set data for Loan Form Printing rule 
'@code
'    BIZ_BR_LoanFormPrinting_SetRule(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_LoanFormPrinting_SetRule(strRowID)
	FRM_Logger_ReportInfoEvent "Set Loan Form Printing Rule", "Setting data for Loan Form Printing rule", null
	
	'====== Creation of Objects for Loan Form Printing Rule windows/screens ======
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objFormRuleDialog = objMainView.SwfWindow("swfname:=PrintFormRuleDialog")
	Set objEditFormDialog = objFormRuleDialog.SwfWindow("swfname:=EditPrintFormDialog")
	Set objAddPrintFormDialog = objEditFormDialog.SwfWindow("swfname:=AddPrintFormDialog")
	Set objData = FRM_DS_GetTestData("BusinessRule_LoanFormPrinting", "LoanFormPrinting", strRowID)
	
	'====== Entering the Rule Name ======
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	GUI_SwfEdit_Set objFormRuleDialog.SwfEdit("swfname:=textBoxName"),FRM_DS_GetValue(objData, "RuleName")
	
	'====== Entering the Channel Values ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then        
        GUI_SwfList_SetCheckbox objFormRuleDialog.SwfList("swfname:=chkListChannels"),FRM_DS_GetValue(objData,"Channel"),FRM_DS_GetValue(objData,"ChannelValue") 
	End If
	
	'====== Checking the Condition ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then
		GUI_SwfRadioButton_Click objFormRuleDialog.SwfRadioButton("swfname:=radioCondition")
		GUI_SwfComboBox_Select objFormRuleDialog.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "Condition")
		If FRM_DS_GetValue(objData, "Condition") = "Loan Purpose" Then
			GUI_SwfComboBox_Select objFormRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanPurpose")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Advanced Conditions" Then
			GUI_SwfButton_Click objFormRuleDialog.SwfButton("swfname:=btnSelect")
			GUI_SwfObject_click objFormRuleDialog.SwfWindow("swfname:=AdvConditionEditor").Swfobject("swfname:=btnAddFilter")
			GUI_SwfEdit_Set objFormRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "FilterField")
			Util_Win_SendKey "{TAB}"
			GUI_SwfComboBox_Select objFormRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"), FRM_DS_GetValue(objData, "FilterOperator")
			GUI_SwfEdit_Set objFormRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"), FRM_DS_GetValue(objData, "FilterValue")
			GUI_SwfButton_Click objFormRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
			GUI_SwfButton_Click objFormRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Doc Type" Then
			GUI_SwfComboBox_Select objFormRuleDialog.SwfComboBox("swfname:=comboCondition"), Mid(FRM_DS_GetValue(objData, "DocType"), 5)
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Program" Then
			GUI_SwfEdit_Set objFormRuleDialog.SwfEdit("swfname:=textConditionCode"), FRM_DS_GetValue(objData, "LoanProgram")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Type" Then
			GUI_SwfComboBox_Select objFormRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanType")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Status" Then
			GUI_SwfComboBox_Select objFormRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanStatus")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Property State" Then
			GUI_SwfComboBox_Select objFormRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "PropertyState")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Rate" Then
			GUI_SwfComboBox_Select objFormRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Rate")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Current Role" Then
			GUI_SwfObject_Click objFormRuleDialog.SwfObject("swfname:=btnSelect")
			GUI_List_ClickRow objFormRuleDialog.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"), Null, 0, FRM_DS_GetValue(objData, "CurrentRole"), True, False, False, "Double"
			GUI_SwfComboBox_Select objFormRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Milestone")
		End If
	End If
	
	'====== Adding the Forms to Rules ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GeneralForms")) Then
		GUI_SwfButton_Click objFormRuleDialog.SwfButton("swfname:=btnAdd")
		GUI_SwfButton_Click objEditFormDialog.SwfButton("swfname:=findBtn")
		Set objViewRights = objAddPrintFormDialog.SwfObject("swfname:=gridViewFiles")
		Set objScrollBar = objAddPrintFormDialog.SwfScrollBar("swfname:=vPanelScrollBar")
		intRowNum = GUI_List_GetRowIndex(objViewRights, "Name", FRM_DS_GetValue(objData, "GeneralForms"))
		GUI_List_ClickOnCell objViewRights, objScrollBar, intRowNum, 0, True, False, False, "Single"
		GUI_SwfButton_Click objAddPrintFormDialog.SwfButton("swfname:=btnOK")
	End If
	
	'====== Adding the Required Fields to Rules ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredFields")) Then
		GUI_SwfButton_Click objEditFormDialog.SwfButton("swfname:=addBtn")
		GUI_SwfEdit_Set objEditFormDialog.SwfWindow("swfname:=AddFields").SwfEdit("swfname:=textBoxID1"), FRM_DS_GetValue(objData, "RequiredFields")
		GUI_SwfButton_Click objEditFormDialog.SwfWindow("swfname:=AddFields").SwfButton("swfname:=okBtn")
		GUI_SwfButton_Click objEditFormDialog.SwfButton("swfname:=okBtn")
	End If
	
	'====== Saving the Rule ======
	GUI_SwfButton_Click objFormRuleDialog.SwfButton("swfname:=okBtn")
	
	'====== Set Nothing for the Created Objects ======
	Set objMainView = Nothing
	Set objFormRuleDialog = Nothing
	Set objEditFormDialog = Nothing
	Set objAddPrintFormDialog = Nothing
	Set objViewRights = Nothing
	Set objScrollBar = Nothing
	
	'====== Returing the Created New Loan Form Printing Rule ======
	BIZ_BR_LoanFormPrinting_SetRule = strRuleName
	
End Function



'This function is used to edit existing persona access to loans rule
'@code
'    Function BIZ_BR_PersonaAccesstoLoans_EditRule(strRowId)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PersonaAccesstoLoans_EditRule(strRuleName, strRowID)
	FRM_Logger_ReportInfoEvent "Edit Persona Access to Loans Rule", "Edit Persona Access to Loans rule with name "& strRuleName, null
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single"
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnEdit")
	BIZ_BR_PersonaAccessToLoans_SetPersonaAccessToLoans strRowID
	
End Function



'This function is used to edit existing Print Auto Selection rule 
'@code
'    BIZ_BR_PrintAutoSelection_EditRule(strRuleName, strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PrintAutoSelection_EditRule(strRuleName, strRowID)
	FRM_Logger_ReportInfoEvent "Edit Print Auto Selection Rule", "Edit Print Auto Selection rule with name " & strRuleName, null
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_List_ClickRow objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single"
	GUI_SwfObject_Click objMainView.SwfObject("swfname:=stdIconBtnEdit")
	
	BIZ_BR_PrintAutoSelection_SetRule strRowID
	Set objMainView = Nothing
End Function



'This function is used to edit existing persona access to fields rule 
'@code
'    Function BIZ_BR_PersonaAccesstoFields_EditRule(strRuleName, strRowId)
'@endcode
'@param strRuleName - Persona Access to Fields Rule Name
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PersonaAccesstoFields_EditRule(strRuleName, strRowID)
	FRM_Logger_ReportInfoEvent "Edit Persona Access to Fields Rule", "Edit Persona Access to Fields rule " & strRuleName, null
	
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Double"
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldAccessRuleDialog"),15
	BIZ_BR_PersonaAccesstoFields_SetPersonaAccessToFields strRuleName, strRowID
	

End Function



'This is a function under Business Rules used to delete a rule  
'@code
'    BIZ_BR_Common_DeleteRule(strRuleName)
'@endcode
'@param strRuleName - rule name to act on 

Function BIZ_BR_Common_DeleteRule(strRuleName)
	Dim boolExist, objMainView
	FRM_Logger_ReportInfoEvent "Delete existing Rule", "Delete selected rule with name " & strRuleName, null
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	'Returns true if rule name is visible and clicked
	GUI_Object_WaitTillVisibleX objMainView.SwfObject("swfname:=listViewRule"),70
	boolExist = GUI_List_ClickRow(objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single")
	If boolExist Then
		GUI_SwfObject_Click objMainView.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Yes ""
	Else 
		FRM_Logger_ReportInfoEvent "Rule name not present", "Given rule: "&strRuleName&" is not present in the list", Null
	End If
	Set objMainView = Nothing
End Function



'This is a function under Business Rules used to deactivate a rule  
'@code
'    BIZ_BR_Common_DeactivateRule(strRuleName)
'@endcode
'@param strRuleName - Rule name to act on

Function BIZ_BR_Common_DeactivateRule(strRuleName)
	FRM_Logger_ReportInfoEvent "Deactivate existing Rule", "Deactivate selected rule with name " & strRuleName, null
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	boolExist = GUI_List_ClickRow(objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single")
	If boolExist Then 
		GUI_SwfButton_Click objMainView.SwfButton("swfname:=deactiveBtn")
	Else 
		FRM_Logger_ReportFailEvent "Rule name not present", "Given rule "&strRuleName&" is not present in the list", Null
	End If 
	Set objMainView = Nothing
End Function



'This function is used to initialize creation of new Print Auto Selection rule 
'@code
'    BIZ_BR_PrintAutoSelection_CreateNewRule(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PrintAutoSelection_CreateNewRule(strRowID)
		FRM_Logger_ReportInfoEvent "Add Print Auto Selection Rule", "Add Print Auto Selection rule with given name ", null
		Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
		GUI_SwfObject_Click objMainView.SwfObject("swfname:=stdIconBtnNew")
		strRuleName=BIZ_BR_PrintAutoSelection_SetRule(strRowID)
		Set objMainView = Nothing
        BIZ_BR_PrintAutoSelection_CreateNewRule = strRuleName
End Function



'This function is used to set necessary data for Print Auto Selection rule 
'@code
'    BIZ_BR_PrintAutoSelection_SetRule(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PrintAutoSelection_SetRule(strRowID)
	
	FRM_Logger_ReportInfoEvent "Set Print Auto Selection Rule", "Setting data for print auto selection rule", null
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPrintRuleDialog = objMainView.SwfWindow("swfname:=PrintSelectionRuleDialog")
	Set objPrintRuleEditor = objPrintRuleDialog.SwfWindow("swfname:=PrintSelectionEventEditor")
	Set objData = FRM_DS_GetTestData("BusinessRule_PrintAutoSelection", "RuleDetails", strRowID)
    
    strRuleName = FRM_DS_GetValue(objData, "RuleName")
    
	GUI_SwfEdit_Set objPrintRuleDialog.SwfEdit("swfname:=textBoxName"),strRuleName
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then
		GUI_SwfRadioButton_Click objPrintRuleDialog.SwfRadioButton("swfname:=radioCondition")
		GUI_SwfComboBox_Select objPrintRuleDialog.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "Condition")
		If FRM_DS_GetValue(objData, "Condition") = "Loan Purpose" Then
			GUI_SwfComboBox_Select objPrintRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanPurpose")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Advanced Conditions" Then
			GUI_SwfButton_Click objPrintRuleDialog.SwfButton("swfname:=btnSelect")
			GUI_SwfObject_click objPrintRuleDialog.SwfWindow("swfname:=AdvConditionEditor").Swfobject("swfname:=btnAddFilter")
			GUI_SwfEdit_Set objPrintRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "FilterField")
			Util_Win_SendKey "{TAB}"
			GUI_SwfComboBox_Select objPrintRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"), FRM_DS_GetValue(objData, "FilterOperator")
			GUI_SwfEdit_Set objPrintRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"), FRM_DS_GetValue(objData, "FilterValue")
			GUI_SwfButton_Click objPrintRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
			GUI_SwfButton_Click objPrintRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Doc Type" Then
			GUI_SwfComboBox_Select objPrintRuleDialog.SwfComboBox("swfname:=comboCondition"), Mid(FRM_DS_GetValue(objData, "DocType"), 5)
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Program" Then
			GUI_SwfEdit_Set objPrintRuleDialog.SwfEdit("swfname:=textConditionCode"), FRM_DS_GetValue(objData, "LoanProgram")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Type" Then
			GUI_SwfComboBox_Select objPrintRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanType")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Status" Then
			GUI_SwfComboBox_Select objPrintRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanStatus")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Property State" Then
			GUI_SwfComboBox_Select objPrintRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "PropertyState")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Rate" Then
			GUI_SwfComboBox_Select objPrintRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Rate")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Current Role" Then
			GUI_SwfObject_Click objPrintRuleDialog.SwfObject("swfname:=btnSelect")
			GUI_List_ClickRow objPrintRuleDialog.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"), Null, 0, FRM_DS_GetValue(objData, "CurrentRole"), True, False, False, "Double"
			GUI_SwfComboBox_Select objPrintRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Milestone")
		End If
	End If
	Dim intRowNum, objViewRights, objScrollBar
	GUI_SwfButton_Click objPrintRuleDialog.SwfButton("swfname:=btnAdd")
	GUI_SwfEdit_Set objPrintRuleEditor.SwfEdit("swfname:=txtFieldID"), FRM_DS_GetValue(objData, "FieldID")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GeneralForms")) Then
		GUI_SwfButton_Click objPrintRuleEditor.SwfButton("swfname:=btnAddForm")
		Set objViewRights = objPrintRuleEditor.SwfWindow("swfname:=AddPrintFormContainer").SwfObject("swfname:=gridViewFiles")
		Set objScrollBar = objPrintRuleEditor.SwfWindow("swfname:=AddPrintFormContainer").SwfScrollBar("swfname:=vPanelScrollBar")
		intRowNum = GUI_List_GetRowIndex(objViewRights, "Name", FRM_DS_GetValue(objData, "GeneralForms"))
		GUI_List_ClickOnCell objViewRights, objScrollBar, intRowNum, 0, True, False, False, "Single"
		GUI_SwfButton_Click objPrintRuleEditor.SwfWindow("swfname:=AddPrintFormContainer").SwfButton("swfname:=btnAdd")
		GUI_SwfButton_Click objPrintRuleEditor.SwfWindow("swfname:=AddPrintFormContainer").SwfButton("swfname:=btnOK")
	End If
	
	GUI_SwfButton_Click objPrintRuleEditor.SwfButton("swfname:=btnOK")
	GUI_SwfButton_Click objPrintRuleDialog.SwfButton("swfname:=btnOK")
	
	Set objMainView = Nothing
	Set objPrintRuleDialog = Nothing
	Set objViewRights = Nothing
	Set objScrollBar = Nothing
	Set objPrintRuleEditor = Nothing
	Set objMainView = Nothing
	Set objData = Nothing
    BIZ_BR_PrintAutoSelection_SetRule = strRuleName
End Function


'This is a function under Business Rules used to field data entry  
'@code
'     BIZ_BR_FieldDataEntry_EditRule(strRuleName, strRowID)
'@endcode
'@param strRuleName - Rule name to act on
'@param strRowID

Function BIZ_BR_FieldDataEntry_EditRule(strRuleName, strRowID)
	FRM_Logger_ReportInfoEvent "Edit Field Data Entry Rule", "Modify Field Data Entry rule identified by name " & strRuleName, null
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_List_ClickRow objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single"
	GUI_SwfObject_Click objMainView.SwfObject("swfname:=stdIconBtnEdit")
	
	BIZ_BR_FieldDataEntry_SetFieldDataEntry strRuleName, strRowID
End Function



'This is a function under Business Rules used to activate a rule  
'@code
'    BIZ_BR_Common_ActivateRule(strRuleName)
'@endcode
'@param strRuleName - Rule name to act on

Function BIZ_BR_Common_ActivateRule(strRuleName)
	FRM_Logger_ReportInfoEvent "Activate existing Rule", "Activate selected rule with name " & strRuleName, null

	Dim boolExist, objMainView
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	boolExist = GUI_List_ClickRow(objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single")
	
	If boolExist Then 
		GUI_SwfButton_Click objMainView.SwfButton("swfname:=activeBtn")
	Else 
		FRM_Logger_ReportFailEvent "Rule name not present", "Given rule "&strRuleName&" is not present in the list", Null
	End If
	Set objMainView = Nothing
End Function



'This function is used to create new field data entry rule 
'@code
'    Function BIZ_BR_FieldDataEntry_CreateRule(strRuleName, strRowId)
'@endcode
'@param strRuleName - Field Data Entry Rule Name
'@param strRowID - RowID in the datasheet

Function BIZ_BR_FieldDataEntry_CreateRule(strRuleName, strRowID)

	FRM_Logger_ReportInfoEvent "Add Field Data Entry Rule", "Add Field Data Entry with name " & strRuleName, null
	Set objFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog")
	Set objEditFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog")
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")
	BIZ_BR_FieldDataEntry_SetFieldDataEntry strRuleName, strRowID

End Function



'This function is used to set data in field data entry rule
'@code
'    Function BIZ_BR_FieldDataEntry_SetFieldDataEntry(strRuleName, strRowId)
'@endcode
'@param strRuleName - Field Data Entry Rule Name
'@param strRowID - RowID in the datasheet

Function BIZ_BR_FieldDataEntry_SetFieldDataEntry(strRuleName, strRowID)

	Set objFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog")
	Set objEditFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog")
	FRM_Logger_ReportInfoEvent "Set Field Data Entry Rule", "Set data in Field Data Entry with name " & strRuleName, null

	GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog"), 3, "Field Rule Dialog"
	GUI_SwfEdit_Set objFieldRuleDialog.SwfEdit("swfname:=textBoxName"), strRuleName

	Set objData = FRM_DS_GetTestData("BusinessRule_FieldDataEntry", "RuleDetails", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then
		GUI_SwfRadioButton_Click objFieldRuleDialog.SwfRadioButton("swfname:=radioCondition")
		GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "Condition")
		If FRM_DS_GetValue(objData, "Condition") = "Loan Purpose" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanPurpose")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Advanced Conditions" Then
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CopyAndPasteCondition")) Then
				GUI_SwfEditor_Type objFieldRuleDialog.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData,"CopyAndPasteCondition") 
			Else
				GUI_SwfButton_Click objFieldRuleDialog.SwfButton("swfname:=btnSelect")
				GUI_SwfObject_click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").Swfobject("swfname:=btnAddFilter")
				GUI_SwfEdit_Set objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "FilterField")
				Util_Win_SendKey "{TAB}"
				GUI_SwfComboBox_Select objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"), FRM_DS_GetValue(objData, "FilterOperator")
				GUI_SwfEdit_Set objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"), FRM_DS_GetValue(objData, "FilterValue")
				GUI_SwfButton_Click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
				GUI_SwfButton_Click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
			End If
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Doc Type" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), Mid(FRM_DS_GetValue(objData, "DocType"), 5)
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Program" Then
			GUI_SwfEdit_Set objFieldRuleDialog.SwfEdit("swfname:=textConditionCode"), FRM_DS_GetValue(objData, "LoanProgram")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Type" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanType")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Status" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanStatus")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Property State" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "PropertyState")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Rate" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Rate")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Current Role" Then
			GUI_SwfObject_Click objFieldRuleDialog.SwfObject("swfname:=btnSelect")
			GUI_List_ClickRow objFieldRuleDialog.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"), Null, 0, FRM_DS_GetValue(objData, "CurrentRole"), True, False, False, "Double"
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Milestone")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "TPO Actions" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "TPOActions")
			GUI_SwfList_Select objFieldRuleDialog.SwfList("swfname:=chkdListTPOActions"), "Register Loan"
		End If
	End If
	 
	GUI_SwfButton_Click objFieldRuleDialog.SwfButton("swfname:=addFieldBtn")
	GUI_Object_ValidateExists objEditFieldRuleDialog, 3, "Edit Field Dialog"
	
	GUI_SwfEdit_Set objEditFieldRuleDialog.SwfEdit("swfname:=textBoxField"), FRM_DS_GetValue(objData, "FieldID")
	GUI_SwfTab_Click objEditFieldRuleDialog.SwfTab("swfname:=tabControl1"), "Value Rule"
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RuleType")) Then
		GUI_SwfComboBox_Select objEditFieldRuleDialog.SwfComboBox("swfname:=comboBoxType"), FRM_DS_GetValue(objData, "RuleType")
		If FRM_DS_GetValue(objData, "RuleType") = "Dropdown List" Then
			arrRuleTypeOptions = Split(FRM_DS_GetValue(objData, "RuleTypeOptions"), ",")
			For i = 0 To Ubound(arrRuleTypeOptions)
				GUI_SwfButton_Click objEditFieldRuleDialog.SwfButton("swfname:=newBtn")
				GUI_SwfEdit_Set objEditFieldRuleDialog.SwfWindow("swfname:=EditDropdownDialog").SwfEdit("swfname:=textBoxOption"), arrRuleTypeOptions(i)
				GUI_SwfButton_Click objEditFieldRuleDialog.SwfWindow("swfname:=EditDropdownDialog").SwfButton("swfname:=okBtn")
			Next
		End If
	End If
	GUI_SwfTab_Click objEditFieldRuleDialog.SwfTab("swfname:=tabControl1"), "Pre-Required Fields"
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Pre-RequiredFields")) Then
		GUI_SwfButton_Click objEditFieldRuleDialog.SwfButton("swfname:=addBtn")
		GUI_Object_ValidateExists objEditFieldRuleDialog.SwfWindow("swfname:=AddFields"), 3, "Add Fields Dialog"
		arrPreRequiredFields = Split(FRM_DS_GetValue(objData, "Pre-RequiredFields"),",")
		For i =  1 To (UBound(arrPreRequiredFields) + 1)
			GUI_SwfEdit_Set objEditFieldRuleDialog.SwfWindow("swfname:=AddFields").SwfEdit("swfname:=textBoxID" & i), arrPreRequiredFields(i-1)
		Next
		GUI_SwfButton_Click objEditFieldRuleDialog.SwfWindow("swfname:=AddFields").SwfButton("swfname:=okBtn")
	End If	
	GUI_SwfButton_Click objEditFieldRuleDialog.SwfButton("swfname:=okBtn")
	GUI_SwfObj_PerClick objFieldRuleDialog.SwfButton("swfname:=okBtn")
End Function



'This function is used to activate field data entry rule 
'@code
'    Function BIZ_BR_FieldDataEntry_ActivateRule(strRuleName)
'@endcode
'@param strRuleName - Field Data Entry Rule Name

Function BIZ_BR_FieldDataEntry_ActivateRule(strRuleName)
	FRM_Logger_ReportInfoEvent "Activate Field Data Entry Rule", "Activate Field Data Entry with name " & strRuleName, null
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single"
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfButton("swfname:=activeBtn")
End Function



'This function is used to Deactivate field data entry rule 
'@code
'    Function BIZ_BR_FieldDataEntry_InActivateRule(strRuleName)
'@endcode
'@param strRuleName - Field Data Entry Rule Name

Function BIZ_BR_FieldDataEntry_DeActivateRule(strRuleName)
	FRM_Logger_ReportInfoEvent "DeActivate Field Data Entry Rule", "DeActivate Field Data Entry with name " & strRuleName, null
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single"
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfButton("swfname:=deactiveBtn")
End Function



'This function is used to create new field data entry rule, for pre-required fields
'@code
'    Function BIZ_BR_FieldDataEntry_CreateRule_PreRequiredFields(strRuleName, strFieldName, strPreRequiredFields)
'@endcode
'@param strRuleName - Field Data Entry Rule Name
'@param strFieldName - Field Name for which pre-required fields is to be created
'@param strPreRequiredFields - Comma seperated list of upto 10 pre-required fields

Function BIZ_BR_FieldDataEntry_CreateRule_PreRequiredFields(strRuleName, strFieldName, strPreRequiredFields)

	FRM_Logger_ReportInfoEvent "Add Field Data Entry Rule", "Add Field Data Entry with name " & strRuleName, null

	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")
	GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog"), 3, "Field Rule Dialog"
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfEdit("swfname:=textBoxName"), strRuleName
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfButton("swfname:=addFieldBtn")
	
	GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog"), 3, "Edit Field Dialog"
	
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfEdit("swfname:=textBoxField"), strFieldName
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfTab("swfname:=tabControl1"), "Pre-Required Fields"
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfButton("swfname:=addBtn")
	
	GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfWindow("swfname:=AddFields"), 3, "Add Fields Dialog"
	
	arrPreRequiredFields = Split(strPreRequiredFields,",")
	For i =  1 To UBound(arrPreRequiredFields) + 1
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfWindow("swfname:=AddFields").SwfEdit("swfname:=textBoxID" & i), arrPreRequiredFields(i-1)
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfWindow("swfname:=AddFields").SwfButton("swfname:=okBtn")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfButton("swfname:=okBtn")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfButton("swfname:=okBtn")
End Function



'This function is used to select Field Data Entry row from the list
'@code
'    BIZ_BR_FieldDataEntry_Select(strFieldDataEntry)
'@endcode
'@param strFieldDataEntry - Field Data Entry name

Function BIZ_BR_FieldDataEntry_Select(strFieldDataEntry)

	FRM_Logger_ReportInfoEvent "Open Field Data Entry", "Open Field Data Entry with name", null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry, exist
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarFieldDataEntry = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	GUI_List_ClickRow objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strFieldDataEntry, True, False, False, "Single"
	
	Set objFieldDataEntryList = Nothing
	Set scrollbarFieldDataEntry = Nothing

End Function



'This function is used to delete existing Field Data Entry row from the list
'@code
'    Function BIZ_BR_FieldDataEntry_DeleteExisting(strFieldDataEntry)
'@endcode
'@param strFieldDataEntry - Field Data Entry name

Function BIZ_BR_FieldDataEntry_DeleteExisting(strFieldDataEntry)

	FRM_Logger_ReportInfoEvent "Delete Field Data Entry", "Delete Field Data Entry with name", null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry, exist
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarFieldDataEntry = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	exist = GUI_List_ClickRow (objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strFieldDataEntry, True, False, False, "Single")

	If exist  Then

        GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnDelete"), "SwfObject", "Delete Field Data Entry"
		GUI_Dialog_Encompass_Yes ""

	End If
	
	Set objFieldDataEntryList = Nothing
	Set scrollbarFieldDataEntry = Nothing

End Function



'This function is used to Select a Field Access Rule
'@code
'    BIZ_BR_PersonaAccesstoFields_Select(strLoanTemplateName, strOrperateStyle)
'@endcode
'@param strLoanTemplateName - The name of Rules you want to select
'@param strOrperateStyle - "Single" or "Double" click on the record

Function BIZ_BR_PersonaAccesstoFields_Select(strRulesName, strOrperateStyle)
	FRM_Logger_ReportInfoEvent "Persona Access to Fields", "Select Rule with name "&strLoanTemplateName, null	
	
	Set objWndPersonaAccesstoField = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objFieldAccessRule = objWndPersonaAccesstoField.SwfObject("swfname:=listViewRule","index:=0")
	Set objScrollbar = objWndPersonaAccesstoField.SwfScrollBar("swfname:=vPanelScrollBar")
	
	BIZ_BR_PersonaAccesstoFields_Select = GUI_List_ClickRow(objFieldAccessRule, objScrollbar, "Name", strRulesName, True, False, False, strOrperateStyle)
	
	Set objWndLoanTemplate = nothing 
	Set objLoanTemplateList = nothing
	Set objScrollbar = nothing
End Function



'This function is used to Select a Access to Loan Rule
'@code
'    BIZ_BR_PersonaAccesstoLoan_Select(strLoanTemplateName, strOrperateStyle)
'@endcode
'@param strLoanTemplateName - The name of Rules you want to select
'@param strOrperateStyle - "Single" or "Double" click on the record

Function BIZ_BR_PersonaAccesstoLoan_Select(strRulesName, strOrperateStyle)
	FRM_Logger_ReportInfoEvent "Persona Access to Loan", "Select Rule with name "&strLoanTemplateName, null	
	
	Set objWndPersonaAccesstoField = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objFieldAccessRule = objWndPersonaAccesstoField.SwfObject("swfname:=listViewRule","index:=0")
	Set objScrollbar = objWndPersonaAccesstoField.SwfScrollBar("swfname:=vPanelScrollBar")
	
	BIZ_BR_PersonaAccesstoFields_Select = GUI_List_ClickRow(objFieldAccessRule, objScrollbar, "Name", strRulesName, True, False, False, strOrperateStyle)
	
	Set objWndLoanTemplate = nothing 
	Set objLoanTemplateList = nothing
	Set objScrollbar = nothing
End Function



'This function is used to delete an existing rule
'@code
'    BIZ_BR_PersonaAccesstoFields_DeleteExisting(strRuleName)
'@endcode
'@param strRuleName - The name of existing Rule

Function BIZ_BR_PersonaAccesstoFields_DeleteExisting(strRuleName)
	FRM_Logger_ReportInfoEvent "Persona Access to Fields", "Delete an existing rule named'"&strRuleName&"'",  null
	
	boolExist = BIZ_BR_PersonaAccesstoFields_Select(strRuleName, "Single")
	If boolExist Then
		BIZ_Settings_ClickDelete
		GUI_Dialog_Encompass_Yes "Are you sure you want to delete the selected Business Rule?"
	End If
End Function



'This function is used to delete an existing rule
'@code
'    BIZ_BR_PersonaAccesstoLoan_DeleteExisting(strRuleName)
'@endcode
'@param strRuleName - The name of existing Rule

Function BIZ_BR_PersonaAccesstoLoan_DeleteExisting(strRuleName)
	FRM_Logger_ReportInfoEvent "Persona Access to Loan", "Delete an existing rule named'"&strRuleName&"'",  null
	
	boolExist = BIZ_BR_PersonaAccesstoLoan_Select(strRuleName, "Single")
	If boolExist Then
		BIZ_Settings_ClickDelete
		GUI_Dialog_Encompass_Yes "Are you sure you want to delete the selected Business Rule?"
	End If
End Function



'This function is used to create new persona access to fields rule 
'@code
'    Function BIZ_BR_PersonaAccesstoFields_CreateRule(strRuleName, strRowId)
'@endcode
'@param strRuleName - Persona Access to Fields Rule Name
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PersonaAccesstoFields_CreateRule(strRuleName, strRowID)

	FRM_Logger_ReportInfoEvent "Add Persona Access to Fields Rule", "Add Persona Access to Fields rule with name " & strRuleName, null
	Set objFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldAccessRuleDialog")

	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")
	BIZ_BR_PersonaAccesstoFields_SetPersonaAccesstoFields strRuleName, strRowID

End Function



'This function is used to set data in persona access to fields rule 
'@code
'    Function BIZ_BR_PersonaAccesstoFields_SetPersonaAccessToFields(strRuleName, strRowId)
'@endcode
'@param strRuleName - Persona Access to Fields Rule Name
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PersonaAccesstoFields_SetPersonaAccessToFields(strRuleName, strRowID)

	FRM_Logger_ReportInfoEvent "Set Persona Access to Fields Rule", "Set data in Persona Access to Fields rule with name " & strRuleName, null
	Set objFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldAccessRuleDialog")

	GUI_Object_ValidateExists objFieldRuleDialog, 3, "Field Access Rule Dialog"
	GUI_SwfEdit_Set objFieldRuleDialog.SwfEdit("swfname:=textBoxName"), strRuleName

	Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToFields", "RuleDetails", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then
		GUI_SwfRadioButton_Click objFieldRuleDialog.SwfRadioButton("swfname:=radioCondition")
		GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "Condition")
		If FRM_DS_GetValue(objData, "Condition") = "Loan Purpose" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanPurpose")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Advanced Conditions" Then
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CopyAndPasteCondition")) Then
				GUI_SwfEditor_Type objFieldRuleDialog.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData,"CopyAndPasteCondition") 
			Else
				GUI_SwfButton_Click objFieldRuleDialog.SwfButton("swfname:=btnSelect")
				GUI_SwfObject_click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").Swfobject("swfname:=btnAddFilter")
				GUI_SwfEdit_Set objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "FilterField")
				Util_Win_SendKey "{TAB}"
				GUI_SwfComboBox_Select objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"), FRM_DS_GetValue(objData, "FilterOperator")
				GUI_SwfEdit_Set objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"), FRM_DS_GetValue(objData, "FilterValue")
				GUI_SwfButton_Click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
				GUI_SwfButton_Click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
			End If
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Doc Type" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), Mid(FRM_DS_GetValue(objData, "DocType"), 5)
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Program" Then
			GUI_SwfEdit_Set objFieldRuleDialog.SwfEdit("swfname:=textConditionCode"), FRM_DS_GetValue(objData, "LoanProgram")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Type" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanType")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Status" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanStatus")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Property State" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "PropertyState")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Rate" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Rate")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Current Role" Then
			GUI_SwfObject_Click objFieldRuleDialog.SwfObject("swfname:=btnSelect")
			GUI_List_ClickRow objFieldRuleDialog.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"), Null, 0, FRM_DS_GetValue(objData, "CurrentRole"), True, False, False, "Double"
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Milestone")
		End If
	End If
	 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldID")) Then 
		GUI_SwfButton_Click objFieldRuleDialog.SwfButton("swfname:=addBtn")
		
		GUI_SwfEdit_Set objFieldRuleDialog.SwfWindow("swfname:=AddFields").SwfEdit("swfname:=textBoxID1"), FRM_DS_GetValue(objData, "FieldID")
		GUI_SwfButton_Click objFieldRuleDialog.SwfWindow("swfname:=AddFields").SwfButton("swfname:=okBtn")
	End If
	Set objViewRights = objFieldRuleDialog.SwfObject("swfname:=gridViewRights")
	Set objScrollBar = objViewRights.SwfScrollBar("swfname:=vPanelScrollBar")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Persona")) Then
		intRowNum = GUI_List_GetRowIndex(objViewRights, "Persona", FRM_DS_GetValue(objData, "Persona"))
		GUI_List_ClickOnCell objViewRights, objScrollBar, intRowNum, 1, True, False, False, "Double"
		GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:="), FRM_DS_GetValue(objData, "Right")
	End If
	GUI_SwfButton_Click objFieldRuleDialog.SwfButton("swfname:=okBtn")
	Set objFieldRuleDialog = nothing
	Set objViewRights = nothing	

End Function



'This function is used to create a new Rule
'@code
'    BIZ_BR_PersonaAccesstoFields_CreateNew(strRulesName, arrFields, strPersona, strRight)
'@endcode
'@param strRulesName - The name of new created Rule
'@param arrFields - Required fields id
'@param strPersona - Persona name
'@param strRight - assign right

Function BIZ_BR_PersonaAccesstoFields_CreateNew(strRulesName, arrFields, strPersona, strRight)
	FRM_Logger_ReportInfoEvent "Persona Access to Fields", "Create a new rule named'"&strRulesName&"'",  null
	
	Set objWndPersonaAccesstoField = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objWndFieldAccessRule = objWndPersonaAccesstoField.SwfWindow("swfname:=FieldAccessRuleDialog")
	
	bolExist = BIZ_BR_PersonaAccesstoFields_Select(strRulesName, "Single")
	If bolExist Then
		BIZ_Settings_ClickDelete
		GUI_Dialog_Encompass_Yes "Are you sure you want to delete the selected Business Rule?"
	End If
	BIZ_Settings_ClickAdd
	GUI_SwfEdit_Set objWndFieldAccessRule.SwfEdit("swfname:=textBoxName"), strRulesName
	'add field
	GUI_SwfButton_Click objWndFieldAccessRule.SwfButton("swfname:=addBtn")	
	BIZ_BR_PersonaAccesstoFields_AddFields arrFields
	'assign right	
	BIZ_BR_PersonaAccesstoFields_AssignRight strPersona, strRight
	GUI_SwfButton_Click objWndFieldAccessRule.SwfButton("swfname:=okBtn")

	Set objWndPersonaAccesstoField = nothing
	Set objWndFieldAccessRule = nothing
End Function



'This function is used to add fields to the rule
'@code
'    BIZ_BR_PersonaAccesstoFields_AddFields(arrFields)
'@endcode
'@param arrFields - Required fields id


Function BIZ_BR_PersonaAccesstoFields_AddFields(arrFields)	
	FRM_Logger_ReportInfoEvent "Add Required Fields", "Set Field ID", null
	
	Set objWndPersonaAccesstoField = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objWndFieldAccessRule = objWndPersonaAccesstoField.SwfWindow("swfname:=FieldAccessRuleDialog")	
	Set objWndAddFields = objWndFieldAccessRule.SwfWindow("swfname:=AddFields")
	
	itemNum = GUI_Object_ChildrenCount(objWndAddFields, "SwfEdit")
	intItemNum = itemNum
	j = 0
	For i = 0 To Ubound(arrFields)
		intIndex = j + 1
		If i = itemNum Then
			GUI_SwfButton_Click objWndAddFields.SwfButton("swfname:=moreBtn")
			intIndex = i + 1 - itemNum
			itemNum = itemNum + intItemNum
			j = 0
		End If	
		GUI_SwfEdit_Set objWndAddFields.SwfEdit("swfname:=textBoxID"&intIndex,"index:=0"), arrFields(i)
		j = j + 1
	Next
	
	GUI_SwfButton_Click objWndAddFields.SwfButton("swfname:=okBtn")
	
	Set objWndPersonaAccesstoField = nothing
	Set objWndFieldAccessRule = nothing
	Set objWndAddFields = nothing
End Function



'This function is used to add fields to the rule
'@code
'    BIZ_BR_PersonaAccesstoFields_AssignRight(strPersona, strRight)
'@endcode
'@param strPersona - Persona name
'@param strRight - assign right

Function BIZ_BR_PersonaAccesstoFields_AssignRight(strPersona, strRight)
	FRM_Logger_ReportInfoEvent "Assign Right", "Assign '"&strRight&"' to '"&strRight&"'", null
	
	Set objWndPersonaAccesstoField = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objWndFieldAccessRule = objWndPersonaAccesstoField.SwfWindow("swfname:=FieldAccessRuleDialog")
	Set objViewRights = objWndFieldAccessRule.SwfObject("swfname:=gridViewRights")
	Set objScrollBar = objViewRights.SwfScrollBar("swfname:=vPanelScrollBar")
	intRowNum = GUI_List_GetRowIndex(objViewRights, "Persona", strPersona)
	GUI_List_ClickOnCell objViewRights, objScrollBar, intRowNum, 1, True, False, False, "Double"
	'GUI_SwfComboBox_Select objWndFieldAccessRule.SwfComboBox("swfname path:=;gridViewRights;FieldAccessRuleDialog"), strRight
	GUI_SwfComboBox_Select objWndFieldAccessRule.SwfComboBox("swfname:="), strRight	
	Set objWndPersonaAccesstoField = nothing
	Set objWndFieldAccessRule = nothing
	Set objViewRights = nothing	
End Function



'This function is used to active the rule
'@code
'    BIZ_BR_PersonaAccesstoFields_ActiveRule(strRuleName)
'@endcode
'@param strRuleName - The name of new created Rule

Function BIZ_BR_PersonaAccesstoFields_ActiveRule(strRuleName)	
	FRM_Logger_ReportInfoEvent "Active Rule", "Active '"&strRuleName&"' Rule", null
	
	BIZ_BR_PersonaAccesstoFields_Select strRuleName, "Single"
	
	Set objWndPersonaAccesstoField = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_SwfButton_Click objWndPersonaAccesstoField.SwfButton("swfname:=activeBtn")
	
	Set objWndPersonaAccesstoField = nothing
End Function



'Function to click on Save in Field Trigger Window
'@code
'    BIZ_BR_FieldTrigger_SaveRule()
'@endcode

Function BIZ_BR_FieldTrigger_SaveRule()
	FRM_Logger_ReportInfoEvent "Save the Field Trigger Rule", "Save the Field Trigger in Business Rule", null
	
	Dim objMainContainer,objTriggerEditor 
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	 
	GUI_SwfButton_Click objTriggerEditor.SwfButton("swfname:=okBtn")
	
	Set objMainContainer =  Nothing
	Set objTriggerEditor =  Nothing
	 
End Function



'Function to check if TRIGGER is present and delete if present  in Field Trigger Pane
'@code
'    BIZ_BR_FieldTriggers_DeleteExisting(strFieldDataEntry)
'@endcode
'@param strFieldDataEntry - The name of created Rule
'@see GUI_List_ClickRow

Function BIZ_BR_FieldTriggers_DeleteExisting(strFieldDataEntry)

	FRM_Logger_ReportInfoEvent "Delete Field Triggers", "Delete Field Triggers with name "&strFieldDataEntry, null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry, boolExist
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarFieldDataEntry = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	boolExist = GUI_List_ClickRow (objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strFieldDataEntry, True, False, False, "Single")

	If boolExist  Then

      	BIZ_Settings_ClickDelete
		BIZ_Settings_Dialog_ClickYes
	
	End If
	
	Set objFieldDataEntryList = Nothing
	Set scrollbarFieldDataEntry = Nothing
	BIZ_BR_FieldTriggers_DeleteExisting = boolExist
End Function



'Function to select the TRIGGER present and perform a Single Click or Double Click
'@code
'    BIZ_BR_FieldTrigger_Select(strFieldDataEntry,strAction)
'@endcode
'@param strAction - action to be checked ie "Single" or "Double"
'@param strFieldDataEntry - trigger name to be checked 
'@see GUI_List_ClickRow

Function BIZ_BR_FieldTrigger_Select(strFieldDataEntry,strAction)

	FRM_Logger_ReportInfoEvent "Open Field Trigger", "Open Field Trigger with name"&strFieldDataEntry, null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarFieldDataEntry = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	GUI_List_ClickRow objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strFieldDataEntry, True, False, False, strAction
	
	Set objFieldDataEntryList = Nothing
	Set scrollbarFieldDataEntry = Nothing

End Function



'Function to cancel  the TRIGGER created
'@code
'    BIZ_BR_FieldTrigger_Cancel()
'@endcode

Function BIZ_BR_FieldTrigger_Cancel()
	
	FRM_Logger_ReportInfoEvent "Cancel the Field Trigger Rule", "Cancel the Field Trigger in Business Rule", null
	Dim objMainContainer,objtriggerEditor
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objtriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	 
	GUI_SwfButton_Click objtriggerEditor.SwfButton("swfname:=cancelBtn")
	
	Set objMainContainer = nothing
	Set objtriggerEditor = nothing
		 
End Function



'Function to Create a new TRIGGER 
'@code
'    BIZ_BR_FieldTrigger_CreateNewFieldTrigger(strRowID)
'@endcode
'@param strRowID - Row ID passed from the script to add a trigger

Function BIZ_BR_FieldTrigger_CreateNewFieldTrigger(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create the Field Trigger Rule", "Create the Field Trigger in Business Rule", null
	Dim objMainContainer
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	 
	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnNew")
	
	strRuleName=BIZ_BR_FieldTrigger_CreateNew(strRowID)
	
	Set objMainContainer = nothing
    
    BIZ_BR_FieldTrigger_CreateNewFieldTrigger =strRuleName
		 
End Function



'Function to Create a new Loan Action Completion 
'@code
'    BIZ_BR_LoanActionCompletion_CreateNewRule(strRowID)
'@endcode
'@param strRowID - Row ID passed from the script to add a trigger

Function BIZ_BR_LoanActionCompletion_CreateNewRule(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create the Loan Action Completion Rule", "Create the Loan Action Completion in Business Rule", null
	Dim objMainContainer
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	 
	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnNew")
	
	strRuleName=BIZ_BR_Common_LoanActionCompletion_CreateNew(strRowID)
	
	Set objMainContainer = nothing
    
    BIZ_BR_LoanActionCompletion_CreateNewRule =strRuleName
		 
End Function



'Function to Create a new Loan Action Completion 
'@code
'    BIZ_BR_Common_LoanActionCompletion_CreateNew(strRowID)
'@endcode
'@param strRowID - Row ID passed from the script to add a trigger

Function BIZ_BR_Common_LoanActionCompletion_CreateNew(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create a New Loan ActionCompletion Rule", "Create a New Loan ActionCompletion Rule in Business Rule"&strFieldTriggerName, null
	
	Dim objMainContainer,objLoanActionCompletion 

	Set objMainContainer        = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
   	Set objMainForm             = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objNewRuleCreateDialog  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
    Set objData                 = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RuleDetails", strRowID)
    
	If objLoanActionCompletion.Exist(1) Then
		FRM_Logger_ReportPassEvent "Add/Edit Loan Action Completion Window ","Loan Action Completion Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Loan Action Completion Window ","Loan Action Completion Window Not Loaded", null
	End If
    GUI_Object_ValidateText objLoanActionCompletion.SwfLabel("swfname:=label1"),"1. Create a Rule Name","Text Label Should Match"	

    strRuleName=FRM_DS_GetValue(objData, "RuleName")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RuleName")) Then        
        GUI_SwfEdit_Set objLoanActionCompletion.SwfEdit("swfname:=textBoxName"),strRuleName      		
	End If
    GUI_SwfRadioButton_Click objNewRuleCreateDialog.SwfRadioButton("swfname:=radioCondition")
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then        
        GUI_SwfComboBox_Select objNewRuleCreateDialog.SwfComboBox("swfname:=comboType"),FRM_DS_GetValue(objData, "Condition")      		
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOActions")) Then        
        GUI_List_Select objNewRuleCreateDialog.SwfList("swfname:=chkdListTPOActions"),FRM_DS_GetValue(objData, "TPOActions")      		
	End If
        
    GUI_SwfButton_Click objNewRuleCreateDialog.swfButton("swfname:=addDocBtn")
    
	strListItemtoGet = GUI_List_GetCellData(objNewRuleCreateDialog.swfWindow("swfname:=AddFormBaseDialog").SwfObject("swfname:=gridViewAll"),2, 0)
    GUI_List_ClickRow objNewRuleCreateDialog.swfWindow("swfname:=AddFormBaseDialog").SwfObject("swfname:=gridViewAll"),Null,0, strListItemtoGet,False,False,False,"Single"

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ForLoanAction")) Then        
        GUI_SwfComboBox_Select objNewRuleCreateDialog.swfWindow("swfname:=AddFormBaseDialog").SwfComboBox("swfname:=cboRuleValues"),FRM_DS_GetValue(objData, "ForLoanAction")      		
	End If
        
    GUI_SwfButton_Click objNewRuleCreateDialog.swfWindow("swfname:=AddFormBaseDialog").swfButton("swfname:=okBtn")
    GUI_SwfButton_Click objNewRuleCreateDialog.swfButton("swfname:=okBtn")
    boolval = GUI_List_ClickRow(objMainForm.SwfObject("swfname:=listViewRule"), objMainForm.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strRuleName, True, False, False, "Single")
    
    If boolval Then
       FRM_Logger_ReportPassEvent "Creation of New Rule","Rule has been created. Rule Name: '" & strRuleName, Null
    Else
       FRM_Logger_ReportFailEvent "Creation of New Rule","Rule has not been created. Rule Name: '" & strRuleName, Null
    End If 
     
    Set objMainForm            = Nothing
    Set objNewRuleCreateDialog = Nothing 
    
    
    BIZ_BR_Common_LoanActionCompletion_CreateNew = strRuleName
	
End Function



'Function to Create a new TRIGGER 
'@code
'    BIZ_BR_FieldTrigger_CreateNew(strRowID)
'@endcode
'@param strRowID - Row ID passed from the script to add a trigger

Function BIZ_BR_FieldTrigger_CreateNew(strRowID)
	FRM_Logger_ReportInfoEvent "Create a New Field Trigger Rule", "Create a New Field Trigger Rule in Business Rule '" & strRowID & "'", null
	
	Dim objMainContainer,objTriggerEditor
	Dim objaddFieldEvent

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	Set WshShell = CreateObject("WScript.Shell")
	
	If objTriggerEditor.Exist(1) Then
		FRM_Logger_ReportPassEvent "Add/Edit Trigger Window ","Add/Edit Trigger Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Add/Edit Trigger Window ","Add/Edit Trigger Window Not Loaded", null
	End If
	
	'========  Adding name to the rule  BR_FieldTriggers_AddRule ======== 
    
    Set objData = FRM_DS_GetTestData("BusinessRule_FieldTrigger", "TriggerDetails", strRowID)
	strRuleName=FRM_DS_GetValue(objData, "TriggerName")
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerName")) Then
	 GUI_SwfEdit_Set objTriggerEditor.SwfEdit("swfname:=textBoxName"),strRuleName
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then
	 GUI_SwfList_Select objTriggerEditor.SwfList("swfname:=chkListChannels"),FRM_DS_GetValue(objData, "Channel")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerConditionApply")) Then
	 GUI_SwfRadioButton_Click objTriggerEditor.SwfRadioButton("swfname:=radioCondition")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerCondition")) Then
	 GUI_SwfComboBox_Select objTriggerEditor.SwfComboBox("swfname:=comboType"),FRM_DS_GetValue(objData, "TriggerCondition")
	 
	 If FRM_DS_GetValue(objData, "TriggerCondition") = "Advanced Conditions" Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CopyAndPasteCondition")) Then
				GUI_SwfEditor_Type objTriggerEditor.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData,"CopyAndPasteCondition") 
		Else
			'=============Click on select==================
			GUI_SwfObject_Click objTriggerEditor.SwfObject("swfname:=btnSelect")
			'==================Click on Add button===============
			GUI_SwfObject_Click objTriggerEditor.SwfWindow("swfname:=AdvConditionEditor").SwfObject("swfname:=btnAddFilter")
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionFieldID")) Then
				GUI_SwfEdit_Set objTriggerEditor.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"),FRM_DS_GetValue(objData, "ConditionFieldID")
			End If
			'=============Press Enter=======
			WshShell.SendKeys "{TAB}"
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionOperator")) Then
				GUI_SwfComboBox_Select objTriggerEditor.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"),FRM_DS_GetValue(objData, "ConditionOperator")
			End If
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			   If FRM_DS_GetValue(objData, "ConditionOperator") = "Is any of" Then
				 strArrayValue = Split(FRM_DS_GetValue(objData, "ConditionValue"),";")
				 For i = 0 to UBOUND(strArrayValue)
					 GUI_SwfList_Select objTriggerEditor.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfList("swfname:=lstOptions"),strArrayValue(i)
				 Next
			  Else
				  GUI_SwfEdit_Set objTriggerEditor.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"),FRM_DS_GetValue(objData, "ConditionValue")
			  End If
			End If
			GUI_SwfButton_Click objTriggerEditor.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
			GUI_SwfButton_Click objTriggerEditor.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
	 	End If
	ElseIf FRM_DS_GetValue(objData, "TriggerCondition") = "Current Role" Then
		'=============Click on select==================
	 	GUI_SwfObject_Click objTriggerEditor.SwfObject("swfname:=btnSelect")
	 	
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_List_ClickRow objTriggerEditor.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"),NULL,"Role",FRM_DS_GetValue(objData, "ConditionValue"),TRUE,FALSE,FALSE,"Single"
		End If
		GUI_SwfButton_Click objTriggerEditor.SwfWindow("swfname:=SelectCurrentRoleForm").SwfButton("swfname:=btnOK")
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Milestone")) Then
			GUI_SwfComboBox_Select objTriggerEditor.SwfComboBox("swfname:=comboCondition"),FRM_DS_GetValue(objData, "Milestone")
		End If
		
	ElseIf FRM_DS_GetValue(objData, "TriggerCondition") = "Loan Program" Then
		'=============Click on select==================
	 	GUI_SwfObject_Click objTriggerEditor.SwfObject("swfname:=btnSelect")
	 	GUI_SwfComboBox_Select objTriggerEditor.SwfWindow("swfname:=TemplateSelectionDialog").SwfComboBox("swfname:=cmbBoxFolder"),"Companywide"
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_List_ClickRow objTriggerEditor.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory"),NULL,"Name",FRM_DS_GetValue(objData, "ConditionValue"),TRUE,FALSE,FALSE,"Single"
		End If
		GUI_SwfButton_Click objTriggerEditor.SwfWindow("swfname:=TemplateSelectionDialog").SwfButton("swfname:=selectBtn")
	Else
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_SwfComboBox_Select objTriggerEditor.SwfComboBox("swfname:=comboCondition"),FRM_DS_GetValue(objData, "ConditionValue")
		End If
	End If
	
	End If

	GUI_SwfButton_Click objTriggerEditor.SwfButton("swfname:=addFieldBtn")
    '========   Adding details in Add/Edit Field Event Window ======== 
		
	BIZ_BR_FieldTrigger_AddEdit_FieldEvent strRowID
			
	Set objMainContainer = Nothing
	Set objTriggerEditor = Nothing
	
	BIZ_BR_FieldTrigger_CreateNew = strRuleName
	
End Function



'Function to activate field trigger
'@code
'    BIZ_BR_FieldTrigger_Activate()
'@endcode

Function BIZ_BR_FieldTrigger_Activate()

	FRM_Logger_ReportInfoEvent "Activate the Field Trigger Rule", "Activate the Field Trigger in Business Rule", null
	Dim objMainContainer
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	 
	GUI_SwfButton_Click objMainContainer.Swfbutton("Swfname:=activeBtn")
	
	Set objMainContainer = nothing
	
End Function



'Function to Add a Field Event in a TRIGGER 
'@code
'    BIZ_BR_FieldTrigger_FieldEvent_Select(strColumnValue)
'@endcode
'@param strColumnValue - Column Value to be selected

Function BIZ_BR_FieldTrigger_FieldEvent_Select(strColumnValue)

	FRM_Logger_ReportInfoEvent "Field Trigger: Select the Event ", "Select the event in Add/Edit event Trigger"&strColumnValue, null
	Dim objMainContainer,objTriggerEditor 

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	
	GUI_SwfList_Select objTriggerEditor.SwfListView("swfname:=listViewItems"), strColumnValue

	Set objMainContainer = Nothing
	Set objTriggerEditor = Nothing
	
End Function



'Function to click on Edit in a Field Event in a TRIGGER 
'@code
'    BIZ_BR_FieldTrigger_FieldEvent_ClickEdit()
'@endcode

Function BIZ_BR_FieldTrigger_FieldEvent_ClickEdit()
	FRM_Logger_ReportInfoEvent "Field Trigger: Select the Edit Button in Add/Edit Event ", "Select the Edit Button in Add/Edit Event ", null
	Dim objMainContainer,objTriggerEditor,objEditButton

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
		
	GUI_SwfButton_Click objTriggerEditor.SwfListView("swfname:=editBtn")
	
	Set objMainContainer = Nothing
	Set objTriggerEditor = Nothing
		
End Function



'Function to Edit a TRigger rule by  Editing a Field Event and Activation Type in a TRIGGER 
'@code
'    BIZ_BR_FieldTrigger_FieldEvent_EditEvent_EditActivation(strActionType,strSelectTask,strLDP)
'@endcode
'@param strRowID - RowID passed as parameter from script

Function BIZ_BR_FieldTrigger_FieldEvent_EditEvent_EditActivation(strRowID)

	FRM_Logger_ReportInfoEvent "Field Trigger : Edit Trigger in Business Rule", "Edit Field Event and ACtivation Type", null
	
	Dim objMainContainer,objTriggerEditor,objAddFieldEvent 
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	Set objAddFieldEvent = objTriggerEditor.SwfWindow("swfname:=TriggerEventEditor")
    
    Set objData = FRM_DS_GetTestData("BusinessRule_FieldTrigger", "TriggerDetails", strRowID)
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActionID")) Then
	 GUI_SwfComboBox_Select objAddFieldEvent.SwfComboBox("swfname:=cboActivationType"),Trim(FRM_DS_GetValue(objData, "ActionID"))
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActionType")) Then
	 GUI_SwfComboBox_Select objAddFieldEvent.SwfComboBox("swfname:=cboActionType"),Trim(FRM_DS_GetValue(objData, "ActionType"))
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompleteTheseTasks")) Then
	 GUI_SwfList_Select objAddFieldEvent.SwfList("swfname:=lstTasks"),Trim(FRM_DS_GetValue(objData, "CompleteTheseTasks"))
	End If
    
	GUI_SwfButton_Click objAddFieldEvent.SwfButton("swfname:=btnOK")
	
	Set objMainContainer = Nothing
	Set objTriggerEditor = Nothing
	Set objAddFieldEvent = Nothing
	
		
End Function



'Function to Edit a TRigger rule by  removing a Action Type in a TRIGGER 
'@code
'    BIZ_BR_FieldTrigger_FieldEvent_EditEvent_RemoveAction(strRowID)
'@endcode
'@param strActionType - action to be added

Function BIZ_BR_FieldTrigger_FieldEvent_EditEvent_RemoveAction(strRowID)

	FRM_Logger_ReportInfoEvent "Field Trigger : Delete Action Type", "Edit Trigger in Business Rule by Deleting the action type"&strRowID, null
	
	Dim objMainContainer,objTriggerEditor,objAddFieldEvent 
	

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	Set objAddFieldEvent = objTriggerEditor.SwfWindow("swfname:=TriggerEventEditor")
	
    Set objData = FRM_DS_GetTestData("BusinessRule_FieldTrigger", "TriggerDetails", strRowID)
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActionID")) Then
	 GUI_SwfList_Select objAddFieldEvent.SwfListView("swfname:=lvwAssignments"), Trim(FRM_DS_GetValue(objData, "ActionID"))
	End If
    
		
	GUI_SwfButton_Click objAddFieldEvent.SwfButton("swfname:=btnRemoveAssignment")
	
	BIZ_BR_FieldTrigger_Dialog_ClickYes
	strActualText = objAddFieldEvent.SwfListView("swfname:=lvwAssignments").GetContent
		
	If strActualText = "" Then
		FRM_Logger_ReportPassEvent "Action in Add/Edit Field Events", "Action Type Removed", ""
	Else
		FRM_Logger_ReportFailEvent "Action in Add/Edit Field Events", "Action Type Not Removed: "&strActionType, ""
	End If
	
	Set objMainContainer = Nothing
	Set objTriggerEditor = Nothing
	Set objAddFieldEvent = Nothing
	

End Function



'Function to Add/Edit Field Event for Activation or Action Type in Field Trigger
'@code
'    BIZ_BR_FieldTrigger_AddEdit_FieldEvent(strRowID)
'@endcode
'@param strRowID - RowID passed from data sheet
'@param strActionValue - action value to added

Function BIZ_BR_FieldTrigger_AddEdit_FieldEvent(strRowID)

	FRM_Logger_ReportInfoEvent "Field Trigger : Add/Edit  Field Event", "Adding Activation and Action Type " & strRowID & "'", null
	
	'====== Declaring the variabes ======
	Dim objMainContainer,objTriggerEditor,objAddFieldEvent 
	Dim objAddAssignment 

	'====== Creating the objects for application windows ======
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	Set objAddFieldEvent = objTriggerEditor.SwfWindow("swfname:=TriggerEventEditor")
    Set objAddAssignment = objAddFieldEvent.SwfWindow("swfname:=TriggerAssignmentEditor")
    
    '====== Veriying the 'Add/Edit' window existence  ======
    If objaddFieldEvent.Exist(1) Then
		FRM_Logger_ReportPassEvent "Add/Edit Field Event Window ","Add/Edit Field Event Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Add/Edit Field Event Window ","Add/Edit Field Event Window Not Loaded", null
	End If
    
    '====== Creating the Test data object  ======
    Set objData = FRM_DS_GetTestData("BusinessRule_FieldTrigger", "TriggerDetails", strRowID)
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerFieldID")) Then
	 GUI_SwfEdit_Set objaddFieldEvent.SwfEdit("swfname:=txtFieldID"),FRM_DS_GetValue(objData, "TriggerFieldID")
	 UTIL_Win_SendKey "{TAB}"
	End If
    
    '====== Adding the data for Action ID  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActionID")) Then
     GUI_SwfButton_Click objAddFieldEvent.SwfButton("swfname:=btnAddAssignment")
	 GUI_SwfEdit_Set objAddAssignment.SwfEdit("swfname:=txtFieldID"),FRM_DS_GetValue(objData, "ActionID")
	End If
	
	'====== Adding the data for Action value  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActionValue")) Then
	 GUI_SwfEditor_Type objAddAssignment.SwfEditor("swfname:=txtValue"), FRM_DS_GetValue(objData, "ActionValue")
     GUI_SwfButton_Click objAddAssignment.SwfButton("swfname:=btnOK")
	End If
	
	'====== Adding the data for Criterion value  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Criterion")) Then
	 GUI_SwfComboBox_Select objaddFieldEvent.SwfComboBox("swfname:=cboCondType"),FRM_DS_GetValue(objData, "Criterion")
	End If
    
    '====== Adding the data for CriterionValues data  ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CriterionValues")) Then
		If objaddFieldEvent.SwfEdit("swfname:=txtCondValue").Exist(5) Then
			GUI_SwfEdit_Set objaddFieldEvent.SwfEdit("swfname:=txtCondValue"),FRM_DS_GetValue(objData, "CriterionValues")
		ElseIf objaddFieldEvent.SwfComboBox("swfname:=cboCondValue").Exist(5) Then
			GUI_SwfComboBox_Select objaddFieldEvent.SwfComboBox("swfname:=cboCondValue"),Trim(FRM_DS_GetValue(objData, "CriterionValues"))
		End If
	End If
    
    '====== Adding the data for ActivationType data  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActivationType")) Then
	 GUI_SwfComboBox_Select objAddFieldEvent.SwfComboBox("swfname:=cboActivationType"),Trim(FRM_DS_GetValue(objData, "ActivationType"))
	End If
	
	'====== Adding the data for Milestone data  ======
'    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Milestone")) Then
'	 GUI_SwfComboBox_Select objAddFieldEvent.SwfComboBox("swfname:=cboMilestones"),Trim(FRM_DS_GetValue(objData, "Milestone"))
'	End If
    
    '====== Adding the data for TPOAction data  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOAction")) Then
	 GUI_SwfComboBox_Select objAddFieldEvent.SwfComboBox("swfname:=cboActions"),Trim(FRM_DS_GetValue(objData, "TPOAction"))
	End If
    
    '====== Adding the data for ActionType data  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActionType")) Then
        GUI_SwfComboBox_Select objAddFieldEvent.SwfComboBox("swfname:=cboActionType"),Trim(FRM_DS_GetValue(objData, "ActionType"))
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActionTypeLabel")) Then
            strActionLabel= Trim(FRM_DS_GetValue(objData, "ActionTypeLabel"))
            '=========Validate the Label on selecting the Action Type --	
            GUI_Object_ValidateExists objAddFieldEvent.SwfObject("swfname:=btnSelectLoanTemplate"),4,"Magnifying Glass Should Be Present" 
            GUI_SwfObject_Click objAddFieldEvent.SwfObject("swfname:=btnSelectLoanTemplate")
            GUI_List_ClickRow objAddFieldEvent.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory"), objScrollBar, "Name", strActionLabel, True, False, False, "Single"	
            strLoanName = GUI_List_GetCellData(objAddFieldEvent.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory"),0,0)
            GUI_SwfButton_Click objAddFieldEvent.SwfWindow("swfname:=TemplateSelectionDialog").SwfButton("swfname:=selectBtn")
            strtxtLoanTemplate = GUI_Object_GetPropertyValue(objAddFieldEvent.SwfEdit("swfname:=txtLoanTemplate"),"text")
            If InStr(strtxtLoanTemplate,strActionLabel)>0 Then
                FRM_Logger_ReportPassEvent "Validating the Loan Template Text", "The Following Loan Template Text Is Displayed"&strtxtLoanTemplate, null 
            Else
                FRM_Logger_ReportFailEvent "Validating the Loan Template Text", "The Following Loan Template Text Is Not Displayed"&strtxtLoanTemplate, null
            End If            
        End If
    End If
     '====== Adding hte data for AdvancedCode data  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AdvancedCode")) Then
        GUI_SwfEditor_Type objAddFieldEvent.SwfEditor("swfname:=txtAdvancedCode"),FRM_DS_GetValue(objData, "AdvancedCode")
    End If
    
     '====== Adding hte data for CompleteTheseTasks data  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompleteTheseTasks")) Then
	 GUI_SwfList_Select objAddFieldEvent.SwfList("swfname:=lstTasks"),Trim(FRM_DS_GetValue(objData, "CompleteTheseTasks"))
	End If
    '====== Adding hte data for Select_Folder data  ======
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Select_Folder")) Then
        BIZ_BR_FieldTrigger_LoanFolder_ValidateContent  objAddFieldEvent.SwfComboBox("swfname:=cboLoanFolder"),"(Trash)" 
        GUI_SwfComboBox_Select objAddFieldEvent.SwfComboBox("swfname:=cboLoanFolder"),Trim(FRM_DS_GetValue(objData, "Select_Folder"))
	End If
    
    '====== Click on OK button ======
	GUI_SwfButton_Click objaddFieldEvent.SwfButton("swfname:=btnOK")	
	
	'======Set Nothing for Created Objects  ======
	Set objMainContainer = Nothing
	Set objTriggerEditor = Nothing
	Set objAddFieldEvent = Nothing
	Set objAddAssignment = Nothing
	
End Function  



'Function to Validate the Loan Folder Doesnt contain "(Trash)" Folder
'@code
'    BIZ_BR_FieldTrigger_LoanFolder_ValidateContent(obj, strTrash)
'@endcode    

Function BIZ_BR_FieldTrigger_LoanFolder_ValidateContent(obj, strTrash)
    FRM_Logger_ReportInfoEvent "Validating the Loan Folder Content", "Check If the ComboBox Contains"&strTrash, null
	Dim intCount,strActualValue
	intCount=obj.GetItemsCount
	For i= 0 To intCount - 1
		strActualValue = obj.GetItem(i)
		If strTrash = strActualValue Then
		  boolflag = True
		Else
		  boolflag = False
		End If
		
	Next
	If boolflag Then
	   FRM_Logger_ReportFailEvent "Validating the Move Loan To ComBo Box Content", "(Trash) Folder is Shown Up in The List", null 
    Else
       FRM_Logger_ReportPassEvent "Validating the Move Loan To ComBo Box Content", "(Trash) Folder is Not Shown Up in The List", null        
	End If
End Function



'Function to Click on "OK" in Field Event 
'@code
'    BIZ_BR_FieldTrigger_FieldEvent_OK_Click()
'@endcode

Function BIZ_BR_FieldTrigger_FieldEvent_OK_Click()
	FRM_Logger_ReportInfoEvent "Field Trigger : Click on OK", "Click on OK in Add/Edit Field Event", null
	
	Dim objMainContainer,objtriggerEditor,objaddFieldEvent
    
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objtriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	Set objaddFieldEvent = objtriggerEditor.SwfWindow("swfname:=TriggerEventEditor")
		
	GUI_SwfButton_Click objaddFieldEvent.SwfButton("swfname:=btnOK")
	
	Set objMainContainer = Nothing
	Set objtriggerEditor = Nothing
	Set objaddFieldEvent = Nothing
		
End Function



'This function is used for click the "Yes" icon of popup dialog 
'@code
'    BIZ_Settings_Dialog_ClickYes() 
'@endcode

Function BIZ_BR_FieldTrigger_Dialog_ClickYes()

	Dim objMainContainer,objTriggerEditor,objAddFieldEvent
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	Set objAddFieldEvent = objTriggerEditor.SwfWindow("swfname:=TriggerEventEditor")
	
	GUI_SwfButton_Click objAddFieldEvent.Dialog("text:=Encompass").WinButton("text:=&Yes")
	
	Set objMainContainer = Nothing
	Set objTriggerEditor = Nothing
	Set objAddFieldEvent = Nothing
		
End Function



'Function to Click on "OK" in Field Event 
'@code
'    BIZ_BR_FieldTrigger_FieldEvent_Click_OK()
'@endcode

Function BIZ_BR_FieldTrigger_FieldEvent_Click_OK()
    Dim objMainContainer ,objTriggerEditor, objAddFieldEvent
    
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
	Set objAddFieldEvent = objTriggerEditor.SwfWindow("swfname:=TriggerEventEditor")
	    
	GUI_SwfButton_Click objAddFieldEvent.SwfButton("swfname:=btnOK")
    Set objMainContainer = Nothing
    Set objTriggerEditor =  Nothing
    Set objAddFieldEvent = Nothing
	
End Function



'Function to Click on "Remove" in Field Event 
'@code
'    BIZ_BR_FieldTrigger_FieldEvent_Click_Remove()
'@endcode

Function BIZ_BR_FieldTrigger_FieldEvent_Click_Remove()
	FRM_Logger_ReportInfoEvent "Field Trigger : Select the Remove Button in Add/Edit Event ", "Remove Button Click in Add/Edit Event ", null
	Dim objMainContainer,objTriggerEditor

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTriggerEditor = objMainContainer.SwfWindow("swfname:=TriggerEditor")
		
	GUI_SwfButton_Click objTriggerEditor.SwfButton("swfname:=removeFieldBtn")
	
	Set objMainContainer = Nothing
	Set objTriggerEditor = Nothing
		
End Function 



'Function to Validate the Header Name of the Grid 
'@code
'    BIZ_BR_PersonaAccessToLoanActions_ValidateGridHeaderText(objListView,strsearchHeaderText)
'@endcode
'@param obj- object to verify and judge
'@param strsearchHeaderText - text to check if present

Function BIZ_BR_PersonaAccessToLoanActions_ValidateGridHeaderText(objListView , strsearchHeaderText)
	Dim boolHeaderPresent
	boolHeaderPresent=objListView.GetTextLocation(strsearchHeaderText,-1,-1,-1,-1)
	If boolHeaderPresent Then
		
		On Error Resume Next
		FRM_Logger_ReportPassEvent "Validate Header Names of Listview in Loan Action  ",strsearchHeaderText&" is Present as a Header Name in Grid ", Null
		On Error Goto 0	
			
	Else
		
		'Failed
		On Error Resume Next
		FRM_Logger_ReportFailEvent "Validate Header Names of Listview in Loan Action  ",strsearchHeaderText&" is Not Present as a Header Name in Grid ", Null
		On Error Goto 0
					
	End If
 End Function
 
 
 
 'Function to Create a new Loan Action Completion Rule 
'@code
'    BIZ_BR_LoanActionCompletion_CreateNew(strBusinessRuleName)
'@endcode
'@param strBusinessRuleName - Create a Rule with the name passed as parameter

Function BIZ_BR_LoanActionCompletion_CreateNew(strBusinessRuleName)
	FRM_Logger_ReportInfoEvent "Create a New Loan ActionCompletion Rule", "Create a New Loan ActionCompletion Rule in Business Rule"&strFieldTriggerName, null
	
	Dim objMainContainer,objLoanActionCompletion 

	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	
	If objLoanActionCompletion.Exist(1) Then
		FRM_Logger_ReportPassEvent "Add/Edit Loan Action Completion Window ","Loan Action Completion Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Loan Action Completion Window ","Loan Action Completion Window Not Loaded", null
	End If
    GUI_Object_ValidateText objLoanActionCompletion.SwfLabel("swfname:=label1"),"1. Create a Rule Name","Text Label Should Match"	
	GUI_SwfEdit_Set objLoanActionCompletion.SwfEdit("swfname:=textBoxName"),strBusinessRuleName
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
		
	
End Function



'Function to Click on Add in Required Docs for Loan Action Completion Rule 
'@code
'    BIZ_BR_LoanActionCompletion_AddRequiredDoc()
'@endcode

Function BIZ_BR_LoanActionCompletion_Click_AddRequiredDoc()
	FRM_Logger_ReportInfoEvent "Click on Add in Required Docs", "Click on Add in Required Docs", null
	
	Dim objMainContainer,objLoanActionCompletion

	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	'===========Validate the Required Docs UI On Loan Action Completion Window
		
	GUI_Object_ValidateText objLoanActionCompletion.SwfObject("swfname:=tabPageEx1"),"Required Docs","Validate if Required Docs Tab is Selected"  
	GUI_SwfButton_Click objLoanActionCompletion.SwfObject("swfname:=tabPageEx1").SwfButton("swfname:=addDocBtn")
	
	If objLoanActionCompletion.SwfWindow("swfname:=AddFormBaseDialog").Exist(1) Then
		FRM_Logger_ReportPassEvent "Add Required Documents Window ","Add Required Documents Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Add Required Documents Window ","Add Required Documents Window Not Loaded", null
	End If
	GUI_Object_ValidateText  objLoanActionCompletion.SwfWindow("swfname:=AddFormBaseDialog"),"Add Required Documents","Check if Add Required Documents Window is Present"
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
		
	
End Function



'Function to Validate the UI for Add Required Documents Window in Loan Action Completion
'This covers the Radio Button, Label of For Loan Action and the list of values in For Loan ACtion validation
'@code
'    BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredDocumentsWindow(strRowID)
'@endcode
'@param strRowID - RowID from the datasheet

Function BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredDocumentsWindow(strRowID)
	FRM_Logger_ReportInfoEvent "Validate the UI For Add Required Documents Window", "The Add Required Documents window should be similar to Milestone Completion", null
	Dim objMainContainer,objLoanActionCompletion,objAddRequiredDocsWindow 
	
	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objAddRequiredDocsWindow = objLoanActionCompletion.SwfWindow("swfname:=AddFormBaseDialog")
	
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredDocuments", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "LoanActionValues"))
	End If
    arrExpectedValuesForLoanAction = split(strActionValues,",")
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DocumentLabel")) Then
        strAddDocuments= Trim(FRM_DS_GetValue(objData, "DocumentLabel"))
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActioLabel")) Then
        strForLoanAction= Trim(FRM_DS_GetValue(objData, "LoanActioLabel"))
	End If
            
	GUI_Object_ValidateText objAddRequiredDocsWindow.SwfRadioButton("swfname:=radioAll"),strAddDocuments,"Validate if Add from All Documents is Present"
	GUI_Object_ValidateText objAddRequiredDocsWindow.SwfLabel("swfname:=label1"),strForLoanAction,"Validate if For Loan Action is Present"
	
	'=================Validate the dropdown content for the Loan Actions  =====================
	GUI_SwfComboBox_ValidateContent objAddRequiredDocsWindow.SwfComboBox("swfname:=cboRuleValues"), arrExpectedValuesForLoanAction	
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objAddRequiredDocsWindow = Nothing 
	
	
End Function



'Function to click on Save in Loan Action Completion Window
'@code
'    BIZ_BR_LoanActionCompletion_SaveRule()
'@endcode

Function BIZ_BR_LoanActionCompletion_SaveRule()
	FRM_Logger_ReportInfoEvent "Save the Loan Action Completion Rule", "Save the Loan Action Completion in Business Rule", null
	
	Dim objMainContainer,objLoanActionCompletion
	Set objMainContainer = SwfWindow("swfname:=MainForm")
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	GUI_Object_ValidateExists objLoanActionCompletion.SwfButton("swfname:=okBtn"),2,"Save Button"
	GUI_SwfButton_Click objLoanActionCompletion.SwfButton("swfname:=okBtn")
	
	Set objMainContainer =  Nothing
	Set objLoanActionCompletion =  Nothing
	
	
End Function



'Function to cancel  the Loan ACtion Completion Rule created
'@code
'    BIZ_BR_LoanActionCompletion_Cancel()
'@endcode

Function BIZ_BR_LoanActionCompletion_Cancel()
	
	FRM_Logger_ReportInfoEvent "Cancel the Loan Action Completion Rule", "Cancel the Loan Action Completion in Business Rule", null
		
	Dim objMainContainer,objLoanActionCompletion
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	GUI_Object_ValidateExists objLoanActionCompletion.SwfButton("swfname:=cancelBtn"),2,"Cancel Button"
	GUI_SwfButton_Click objLoanActionCompletion.SwfButton("swfname:=cancelBtn")
	
	Set objMainContainer = nothing
	Set objLoanActionCompletion = nothing
	 
End Function
 
	

'Function to Add Required Documents for a Loan Action in Add Required Documents Window 
'@code
'    BIZ_BR_LoanActionCompletion_AddRequiredDocuments(strRowID)
'@endcode
'@param strRowID - Row ID in BusinessRule_LoanActionCompletion.xls containing the documents and loan action

Function BIZ_BR_LoanActionCompletion_AddRequiredDocuments(strRowID)
	Dim objMainContainer,objLoanActionCompletion,objAddRequiredDocsWindow,objscrollBar
 
	
	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objAddRequiredDocsWindow = objLoanActionCompletion.SwfWindow("swfname:=AddFormBaseDialog")
	
	arrRequiredDocuments = BIZ_BR_LoanActionCompletion_RequiredDocuments(strRowID)
        
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredDocuments", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction1")) Then
	   GUI_SwfComboBox_Select objAddRequiredDocsWindow.SwfComboBox("swfname:=cboRuleValues"), FRM_DS_GetValue(objData, "AddLoanAction1")
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddAttachment1")) Then
        strAttachmentReq = Trim(FRM_DS_GetValue(objData, "AddAttachment1"))
        If strAttachmentReq = "Yes" Then
            GUI_SwfCheckbox_Set objAddRequiredDocsWindow.SwfCheckBox("swfname:=chkAttached"), 1
        End If
	End If
	For i = 0 To UBound(arrRequiredDocuments)
		boolExist = GUI_List_ClickRow (objAddRequiredDocsWindow.SwfObject("swfname:=gridViewAll"), objscrollBar,0, arrRequiredDocuments(i), False, False, False, "Single")
		If boolExist Then
			FRM_Logger_ReportPassEvent "Required Documents To be Present in List ","Required Document"&arrRequiredDocuments(i)&" Present in the List", null
		Else 
			FRM_Logger_ReportFailEvent "Required Documents To be Present in List ","Required Document"&arrRequiredDocuments(i)&"Not Present in the List", null
		End If
		objAddRequiredDocsWindow.SwfObject("swfname:=gridViewAll").Type micCtrlDwn
	Next
	objAddRequiredDocsWindow.SwfObject("swfname:=gridViewAll").Type micCtrlUp
	GUI_SwfButton_Click objAddRequiredDocsWindow.SwfButton("swfname:=okBtn")
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objAddRequiredDocsWindow = Nothing
	
End Function	



'Function to select the Loan Action Rule present and perform a Single Click or Double Click
'@code
'    BIZ_BR_LoanActionCompletion_Select(strFieldDataEntry,strAction)
'@endcode
'@param strAction - action to be checked ie "Single" or "Double"
'@param strFieldDataEntry - Loan ACtion Completion Rule name to be checked 
'@see GUI_List_ClickRow

Function BIZ_BR_LoanActionCompletion_Select(strFieldDataEntry,strAction)

	FRM_Logger_ReportInfoEvent "Open Loan Action Completion Rule", "Open Loan Action Completion Rule"&strFieldDataEntry, null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry, exist
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarFieldDataEntry = objFieldDataEntryList.SwfScrollBar("swfname:=vPanelScrollBar")

	GUI_List_ClickRow objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strFieldDataEntry, True, False, False, strAction
	
	Set objFieldDataEntryList = Nothing
	Set scrollbarFieldDataEntry = Nothing

End Function



'Function to verify if Required Documents,Tasks are removed
'@code
'    BIZ_BR_LoanActionCompletion_VerifyRemoveFromList
'@endcode
'@param objTab - Tab to be selected. ie:- Required Doc, Required Tasks
'@param strTabSelection -String to be selected

Function BIZ_BR_LoanActionCompletion_VerifyRemoveFromList(objTab,strTabSelection)
	FRM_Logger_ReportInfoEvent "Verifying the "&strTabSelection&" is Removed after Re-Login ", "Verifying"&strTabSelection& "is Removed after Re-Login", null
	
	'Dim objMainContainer,objLoanActionCompletion,objRequiredDocsTab
	'Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
	'Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	'Set objRequiredDocsTab = objLoanActionCompletion.SwfObject("swfname:=tabControl1").SwfObject("swfname:=tabPageEx1")
	
	'======  Verify  fields ========================

	'intRowCount = objRequiredDocsTab.SwfObject("swfname:=emListViewDocs").Object.Items.Count
    intRowCount = objTab.Object.Items.Count

	If intRowCount > 1 Then
		FRM_Logger_ReportFailEvent strTabSelection&" Not Removed after Re-Login", strTabSelection&" Not Removed after Re-Login", ""

	Else
		FRM_Logger_ReportPassEvent strTabSelection&" Is Removed after Re-Login", strTabSelection&" Is Removed after Re-Login", ""
	End If

	'Set objMainContainer = Nothing
	'Set objLoanActionCompletion = Nothing
	'Set objRequiredDocsTab = Nothing
	
	
End Function



'Function to Select the Required Document in the Required Document Tab
'@code
'    BIZ_BR_LoanActionCompletion_RequiredDoc_Select_Remove(strRowID,intNumofDocumentsRemoved)
'@endcode
'@param strRowID - RowID of the sheet
'@param intNumofDocumentsRemoved - Number of documents to be removed

Function BIZ_BR_LoanActionCompletion_RequiredDoc_Select_Remove(strRowID,intNumofDocumentsRemoved) 

	FRM_Logger_ReportInfoEvent "Select the Required Doc To Remove ", "Required Document To Be Removed", null
	Dim objMainContainer,objLoanActionCompletion,objRequiredDocsTab
	Dim objRemoveDocument,scrollbarFieldDataEntry

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objRequiredDocsTab = objLoanActionCompletion.SwfObject("swfname:=tabControl1").SwfObject("swfname:=tabPageEx1")
	
    arrRequiredDoc = BIZ_BR_LoanActionCompletion_RequiredDocuments(strRowID)
    
 	intRowCount = objRequiredDocsTab.SwfObject("swfname:=emListViewDocs").Object.Items.Count
 	
	For i = 0 To intNumofDocumentsRemoved - 1
		FRM_Logger_ReportInfoEvent "Remove Document ", "Remove Document: "&arrRequiredDoc(i), null
		GUI_List_ClickRow objRequiredDocsTab.SwfObject("swfname:=emListViewDocs"), scrollbarFieldDataEntry, "Name", arrRequiredDoc(i), True, False, False, "Single"
		objRequiredDocsTab.SwfObject("swfname:=emListViewDocs").Type micCtrlDwn
	Next
 	objRequiredDocsTab.SwfObject("swfname:=emListViewDocs").Type micCtrlUp
	GUI_SwfButton_Click objRequiredDocsTab.SwfButton("swfname:=removeDocBtn")
		 	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objRequiredDocsTab = Nothing 
	
End Function



'Function to Check the Required Attachment checkbox in Add required Documents window
'@code
'    BIZ_BR_LoanActionCompletion_Check_RequiresAttachment()
'@endcode

Function BIZ_BR_LoanActionCompletion_Check_RequiresAttachment()
	Dim objMainContainer,objLoanActionCompletion,objAddRequiredDocsWindow ,objRequiresAnAttachmentCheckBox 

	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objAddRequiredDocsWindow = objLoanActionCompletion.SwfWindow("swfname:=AddFormBaseDialog")
		
	GUI_SwfCheckbox_Set objAddRequiredDocsWindow.SwfCheckBox("swfname:=chkAttached"), 1
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objAddRequiredDocsWindow = Nothing
	
	
End Function



'Function to Select the Required Row 
'@code
'    BIZ_BR_LoanActionCompletion_SelectRowNumber(objListView,strChangeLoanAction))
'@endcode
'@param strChangeLoanAction - Select the required Documents
'@param objListView - Obj to be checked

Function BIZ_BR_LoanActionCompletion_SelectRowNumber(objListView,strChangeLoanAction,strColumnName) 

	FRM_Logger_ReportInfoEvent "Loan Action Completion: Select the Required Row", "Required Row To Be Selected"&strChangeLoanAction, null
	Dim scrollbarFieldDataEntry,intRowNumber

	intRowCount = objListView.Object.Items.Count
    FRM_Logger_ReportStepEvent "Selecting the Row", "Selecting Row: "&strChangeLoanAction, null
	For i = 0 To intRowCount - 1
		strRequiredDoc=objListView.Object.Items.Item(i).Subitems.Item(0).Text
       	If strRequiredDoc = strChangeLoanAction Then
		    boolisFound=GUI_List_ClickRow(objListView, scrollbarFieldDataEntry, strColumnName, strChangeLoanAction, True, False, False, "Single")
			intRowNumber=i
			Exit For
		End If
	Next
 	BIZ_BR_LoanActionCompletion_SelectRowNumber = intRowNumber
		
End Function



'Function to Cancel Required Documents for a Loan Action in Add Required Documents Window 
'@code
'    BIZ_BR_LoanActionCompletion_CancelRequiredDocuments(strLoanAction,arrRequiredDocuments)
'@endcode
'@param strRowID -  RowID passed from datasheet

Function BIZ_BR_LoanActionCompletion_CancelRequiredDocuments(strRowID)
	Dim objMainContainer,objLoanActionCompletion,objAddRequiredDocsWindow,objscrollBar
 	
	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objAddRequiredDocsWindow = objLoanActionCompletion.SwfWindow("swfname:=AddFormBaseDialog")
    
    arrRequiredDocuments = BIZ_BR_LoanActionCompletion_RequiredDocuments(strRowID)
        
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredDocuments", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction1")) Then
	   GUI_SwfComboBox_Select objAddRequiredDocsWindow.SwfComboBox("swfname:=cboRuleValues"), FRM_DS_GetValue(objData, "AddLoanAction1")
	End If
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddAttachment1")) Then
        strAttachmentReq = Trim(FRM_DS_GetValue(objData, "AddAttachment1"))
        If strAttachmentReq = "Yes" Then
            GUI_SwfCheckbox_Set objAddRequiredDocsWindow.SwfCheckBox("swfname:=chkAttached"), 1
        End If
	End If
		
	For i = 0 To UBound(arrRequiredDocuments)
		boolExist = GUI_List_ClickRow (objAddRequiredDocsWindow.SwfObject("swfname:=gridViewAll"), objscrollBar,0, arrRequiredDocuments(i), False, False, False, "Single")
		If boolExist Then
			FRM_Logger_ReportPassEvent "Required Documents To be Present in List ","Required Document"&arrRequiredDocuments(i)&" Present in the List", null
		Else 
			FRM_Logger_ReportFailEvent "Required Documents To be Present in List ","Required Document"&arrRequiredDocuments(i)&"Not Present in the List", null
		End If
		objAddRequiredDocsWindow.SwfObject("swfname:=gridViewAll").Type micCtrlDwn
	Next
	objAddRequiredDocsWindow.SwfObject("swfname:=gridViewAll").Type micCtrlUp
	GUI_SwfButton_Click objAddRequiredDocsWindow.SwfButton("swfname:=cancelBtn")
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objAddRequiredDocsWindow = Nothing
	
End Function 
    


'Function to Click on Add Button in Required Tasks for Loan Action Completion Rule 
'@code
'    BIZ_BR_LoanActionCompletion_RequiredTasks_ClickAddButton()
'@endcode
'@param strRequiredTasks - "Required Tasks" text to be checked
'@param strAddTask = "Add Tasks" text to be checked

Function BIZ_BR_LoanActionCompletion_RequiredTasks_ClickAddButton(strRequiredTasks,strAddTask)
	FRM_Logger_ReportInfoEvent "Click on Add Button in Required Tasks", "Click on Add Button in Required Tasks", null
	
	Dim objMainContainer,objLoanActionCompletion,objRequiredDocsTab,objAddRequiredDocsTab,boolPresent

	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	
	'===========Validate the Required Tasks UI On Loan Action Completion Window
	
	boolPresent = GUI_ClickElement_ByGetTextLocation(objLoanActionCompletion.SwfObject("swfname:=tabControl1"),strRequiredTasks)
	
	If boolPresent Then
		FRM_Logger_ReportPassEvent "Required Tasks Validation ","Required Tasks Tab is Clicked", null
	Else 
		FRM_Logger_ReportFailEvent "Required Tasks Validation","Required Tasks Tab Not Clicked", null
	End If	
	GUI_Object_ValidateText  objLoanActionCompletion.SwfObject("swfname:=tabPageEx2"),strRequiredTasks,"Validate if Required Tasks Tab is Present" 
	
	GUI_SwfButton_Click objLoanActionCompletion.SwfObject("swfname:=tabPageEx2").SwfButton("swfname:=btnAddTask")
	If objLoanActionCompletion.SwfWindow("swfname:=AddTasksForLoanActionCompletion").Exist(1) Then
		FRM_Logger_ReportPassEvent "Required Task Window Validation","Required Tasks Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Required Task Window Validation","Required Tasks Window Not Loaded", null
	End If
	GUI_Object_ValidateText  objLoanActionCompletion.SwfWindow("swfname:=AddTasksForLoanActionCompletion"),strAddTask,"Check if Add Tasks Window is Titled properly"
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	
	
End Function

'Function to Validate the UI for Add Required Tasks Window in Loan Action Completion
'This covers the  Label of For Loan Action and the list of values in For Loan ACtion validation
'@code
'    BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredTasksWindow(strRowID)
'@endcode
'@param strRowdID - RowID from datasheet

Function BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredTasksWindow(strRowID)
	FRM_Logger_ReportInfoEvent "Validate the UI For Add Required Tasks Window", "The Add Required Tasks window should be similar to Milestone Completion", null
	
	Dim objMainContainer,objLoanActionCompletion,objAddRequiredDocsWindow 
	
	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objAddRequiredTasksWindow = objLoanActionCompletion.SwfWindow("swfname:=AddTasksForLoanActionCompletion")
    
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredTasks", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "LoanActionValues"))
	End If
    arrExpectedValuesForLoanAction = split(strActionValues,",")
     
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActioLabel")) Then
        strForLoanAction= Trim(FRM_DS_GetValue(objData, "LoanActioLabel"))
	End If
	
	GUI_Object_ValidateText objAddRequiredTasksWindow.SwfLabel("swfname:=label1"),strForLoanAction,"Validate if For Loan Action Label is Present"
	
	'=================Validate the dropdown content for the Loan Actions  =====================
	GUI_SwfComboBox_ValidateContent objAddRequiredTasksWindow.SwfComboBox("swfname:=cboLoanAction"), arrExpectedValuesForLoanAction	
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objAddRequiredTasksWindow = Nothing 
		
End Function



'Function to Add Required Tasks for a Loan Action in Add Required Tasks Window 
'@code
'    BIZ_BR_LoanActionCompletion_AddRequiredTasks(strRowID)
'@endcode
'@param strRowID - Row ID in RequiredTasks sheet to add the task 

Function BIZ_BR_LoanActionCompletion_AddRequiredTasks(strRowID)

	Dim objMainContainer,objLoanActionCompletion,objAddRequiredTasksWindow ,objscrollBar
 		
	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objAddRequiredTasksWindow = objLoanActionCompletion.SwfWindow("swfname:=AddTasksForLoanActionCompletion")
	
	
	arrRequiredTasks = BIZ_BR_LoanActionCompletion_RequiredTasks(strRowID)
        
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredTasks", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction1")) Then
	   GUI_SwfComboBox_Select objAddRequiredTasksWindow.SwfComboBox("swfname:=cboLoanAction"), FRM_DS_GetValue(objData, "AddLoanAction1")
	End If
		
		print "arrRequiredTasks(i)"&arrRequiredTasks(0)
		print "value in arr"&UBound(arrRequiredTasks)
	For i = 0 To UBound(arrRequiredTasks)
		boolExist = GUI_List_ClickRow (objAddRequiredTasksWindow.SwfObject("swfname:=MilestoneTaskListPanel").SwfObject("swfname:=lvwTasks"), objscrollBar,0, arrRequiredTasks(i), True, False, False, "Single")
		print "boolExist"&boolExist
		If boolExist Then
			FRM_Logger_ReportPassEvent "Required Tasks To be Present in List ","Required Task"&arrRequiredTasks(i)&" Present in the List", null
		Else 
			FRM_Logger_ReportFailEvent "Required Tasks To be Present in List ","Required Task"&arrRequiredTasks(i)&"Not Present in the List", null
		End If
		objAddRequiredTasksWindow.SwfObject("swfname:=lvwTasks").Type micCtrlDwn
	Next
	objAddRequiredTasksWindow.SwfObject("swfname:=lvwTasks").Type micCtrlUp
	GUI_SwfButton_Click objAddRequiredTasksWindow.SwfButton("swfname:=btnOK")
	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objAddRequiredTasksWindow = Nothing
	
	 	
End Function	



'Function to click on Save in Loan Action Completion Window for Required Tasks Entered
'@code
'    BIZ_BR_LoanActionCompletion_RequiredTasks_SaveRule()
'@endcode

Function BIZ_BR_LoanActionCompletion_RequiredTasks_SaveRule()
	FRM_Logger_ReportInfoEvent "Save the Loan Action Completion Rule", "Save the Loan Action Completion in Business Rule for Required Tasks", null
	
	Dim objMainContainer,objLoanActionCompletion
	Set objMainContainer = SwfWindow("swfname:=MainForm")  
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	
	GUI_SwfButton_Click objLoanActionCompletion.SwfButton("swfname:=okBtn")
	
	Set objMainContainer =  Nothing
	Set objLoanActionCompletion =  Nothing
		
End Function



'Function to Add Required Documents in Add Required Documents Window 
'@code
'    BIZ_BR_LoanActionCompletion_RequiredDocuments(strRowID)
'@endcode
'@param strRowID - Passing the rowID in BusinessRule_LoanActionCompletion.xls 

Function BIZ_BR_LoanActionCompletion_RequiredDocuments(strRowID)
        Dim arrRequiredDoc()
        Dim strReqDoc
        Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredDocuments", strRowID)
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqDoc1")) Then
	       ReDim arrRequiredDoc(0)
		   arrRequiredDoc(0) = FRM_DS_GetValue(objData, "AddReqDoc1")	'Add Required Document1
		   
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqDoc2")) Then
	       ReDim Preserve arrRequiredDoc(1)
		   arrRequiredDoc(1) = FRM_DS_GetValue(objData, "AddReqDoc2")	'Add Required Document2
		  
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqDoc3")) Then
	        ReDim Preserve arrRequiredDoc(2)
	        arrRequiredDoc(2) = FRM_DS_GetValue(objData, "AddReqDoc3")	'Add Required Document3
		  
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqDoc4")) Then
	       ReDim Preserve arrRequiredDoc(3)
		   arrRequiredDoc(3) = FRM_DS_GetValue(objData, "AddReqDoc4")	'Add Required Document4
		  
	    End If
	    
	    
	    BIZ_BR_LoanActionCompletion_RequiredDocuments = arrRequiredDoc
        
 End Function
 
 
 
 'Function to Select the Loan Action in Add Required Documents Window 
'@code
'    BIZ_BR_LoanActionCompletion_LoanActionSelection(strRowID,strTab)
'@endcode
'@param strRowID - Passing the rowID in BusinessRule_LoanActionCompletion.xls 
'@param strTab - The Tab selected in Loan Action Completion - ie "RequiredDocuments" , "RequiredTasks"

Function BIZ_BR_LoanActionCompletion_LoanActionSelection(strRowID,strTab)
        Dim arrLoanActionType()
       
        Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", strTab, strRowID)
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction1")) Then
	       ReDim arrLoanActionType(0)
		   arrLoanActionType(0) = FRM_DS_GetValue(objData, "AddLoanAction1")	'Add Loan Action1
		   
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction2")) Then
	       ReDim Preserve arrLoanActionType(1)
		   arrLoanActionType(1) = FRM_DS_GetValue(objData, "AddLoanAction2")	'Add Loan Action2
		  
	    End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction3")) Then
	       ReDim Preserve arrLoanActionType(2)
		   arrLoanActionType(2) = FRM_DS_GetValue(objData, "AddLoanAction3")	'Add Loan Action3
		  
	    End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction4")) Then
	       ReDim Preserve arrLoanActionType(3)
		   arrLoanActionType(3) = FRM_DS_GetValue(objData, "AddLoanAction4")	'Add Loan Action4
		  
	    End If
	    
	    BIZ_BR_LoanActionCompletion_LoanActionSelection = arrLoanActionType
        
 End Function

 
 
'Function to Select Attach Requirements in Add Required Documents Window 
'@code
'    BIZ_BR_LoanActionCompletion_AttachRequired(strRowID)
'@endcode
'@param strRowID - Passing the rowID in BusinessRule_LoanActionCompletion.xls 

Function BIZ_BR_LoanActionCompletion_AttachRequired(strRowID)
        Dim arrRequiredAttachment()
       
        Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredDocuments", strRowID)
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddAttachment1")) Then
	       ReDim arrRequiredAttachment(0)
		   arrRequiredAttachment(0) = FRM_DS_GetValue(objData, "AddAttachment1")	'Add Required Attachment1
		   
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddAttachment2")) Then
	       ReDim Preserve arrRequiredAttachment(1)
		   arrRequiredAttachment(1) = FRM_DS_GetValue(objData, "AddAttachment2")	'Add Required Attachment2
		  
	    End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddAttachment3")) Then
	       ReDim Preserve arrRequiredAttachment(2)
		   arrRequiredAttachment(2) = FRM_DS_GetValue(objData, "AddAttachment3")	'Add Required Attachment3
		  
	    End If
        
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddAttachment4")) Then
	       ReDim Preserve arrRequiredAttachment(3)
		   arrRequiredAttachment(3) = FRM_DS_GetValue(objData, "AddAttachment4")	'Add Required Attachment4
		  
	    End If
	    
	    BIZ_BR_LoanActionCompletion_AttachRequired = arrRequiredAttachment
        
 End Function

 
 
'Function to check the content is present and validate to true
'@code
'    BIZ_BR_LoanActionCompletion_ValidateContent(objListView,strsearchHeaderText)
'@endcode
'@param objListView - obj to be checked
'@param strsearchHeaderText - text description to be checked 
'@return if validation passes, logs True; if validation fails, logs False

Function BIZ_BR_LoanActionCompletion_ValidateContent(objListView , strsearchHeaderText)
	Dim boolHeaderPresent
	boolHeaderPresent=objListView.GetTextLocation(strsearchHeaderText,-1,-1,-1,-1)
	If boolHeaderPresent Then
		
		On Error Resume Next
		FRM_Logger_ReportPassEvent "Validate Content  ",strsearchHeaderText&" is Present ", Null
		On Error Goto 0	
			
	Else
		
		'Failed
		On Error Resume Next
		FRM_Logger_ReportFailEvent "Validate Content ",strsearchHeaderText&" is Not Present  ", Null
		On Error Goto 0
					
	End If
End Function



'Function to Add Required Tasks in Add Required Tasks Window 
'@code
'    BIZ_BR_LoanActionCompletion_RequiredTasks(strRowID)
'@endcode
'@param strRowID - Passing the rowID in BusinessRule_LoanActionCompletion.xls 

Function BIZ_BR_LoanActionCompletion_RequiredTasks(strRowID)
        Dim arrRequiredTasks()
        
        Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredTasks", strRowID)
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqTasks1")) Then
	       ReDim arrRequiredTasks(0)
		   arrRequiredTasks(0) = FRM_DS_GetValue(objData, "AddReqTasks1")	'Add Required Document1
		   
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqTasks2")) Then
	       ReDim Preserve arrRequiredTasks(1)
		   arrRequiredTasks(1) = FRM_DS_GetValue(objData, "AddReqTasks2")	'Add Required Document2
		  
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqTasks3")) Then
	        ReDim Preserve arrRequiredTasks(2)
	        arrRequiredTasks(2) = FRM_DS_GetValue(objData, "AddReqTasks3")	'Add Required Document3
		  
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqTasks4")) Then
	       ReDim Preserve arrRequiredTasks(3)
		   arrRequiredTasks(3) = FRM_DS_GetValue(objData, "AddReqTasks4")	'Add Required Document4
		  
	    End If
	    
	    BIZ_BR_LoanActionCompletion_RequiredTasks = arrRequiredTasks
        
 End Function
 
 
 
'Function to Validate the Required Tasks is present in the List
'@code
'    BIZ_BR_LoanActionCompletion_Validate_RequiredTask_Present(strRowID)
'@endcode
'@param strRowID - Select the required Task as per the Row ID passed

Function BIZ_BR_LoanActionCompletion_Validate_RequiredTask_Present(strRowID) 

	FRM_Logger_ReportInfoEvent "Verifying the Deleted  Task", "Verifying the Task Deleted from Loan Setup- Task Module", null
	Dim objMainContainer,objLoanActionCompletion,objAddRequiredTasksWindow
	Dim scrollbarFieldDataEntry,boolPresent

	Set objMainContainer = SwfWindow("swfname:=MainForm") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objAddRequiredTasksWindow = objLoanActionCompletion.SwfWindow("swfname:=AddTasksForLoanActionCompletion")
	
	       
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredTasks", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqTasks1")) Then
	  strRequiredTasks = FRM_DS_GetValue(objData, "AddReqTasks1")
	End If

 	
 	intRowCount = objAddRequiredTasksWindow.SwfObject("swfname:=MilestoneTaskListPanel").SwfObject("swfname:=lvwTasks").Object.Items.Count
 	For i = 0 To intRowCount - 1
		FRM_Logger_ReportStepEvent "Verifying if Deleted Tasks is Present", "Verifying Task: "&strRequiredTasks, null
		strRequiredActualTasks=objAddRequiredTasksWindow.SwfObject("swfname:=MilestoneTaskListPanel").SwfObject("swfname:=lvwTasks").Object.Items.Item(i).Subitems.Item(0).Text
		
		If strRequiredActualTasks = strRequiredTasks Then
		   boolPresent = True
		   Exit For
        Else 
	       boolPresent = False
		
	    End If	
	Next
	
	
 	If boolPresent Then
 	  FRM_Logger_ReportFailEvent "Verifying Deleted Tasks in Required Tasks Window","Required Tasks"&strRequiredTasks&" Is Present in the List", null
	Else 
	  FRM_Logger_ReportPassEvent "Verifying Deleted Tasks in Required Tasks Window","Required Tasks"&strRequiredTasks&" Is Not Present in the List", null
	End If
		
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objAddRequiredTasksWindow = Nothing 
	
	
End Function



'This function is used to Validate the Content of the Required Documents Tab
'@code
'    Function BIZ_BR_LoanActionCompletion_RequiredDocumentsTab_ValidateContent(strRowID,objListViewItems)
'@endcode
'@param strRowID - RowID  from the Data sheet 
'@param objListViewItems - obj to be checked

Function BIZ_BR_LoanActionCompletion_RequiredDocumentsTab_ValidateContent(strRowID,objListViewItems)
    FRM_Logger_ReportStepEvent "Validating the Required Docs Section ","Required Documents Added should be retained in the Tab",Null
       
    arrRequiredDocuments = BIZ_BR_LoanActionCompletion_RequiredDocuments(strRowID)
    arrLoanActionType = BIZ_BR_LoanActionCompletion_LoanActionSelection(strRowID,"RequiredDocuments")
 	arrRequiredAttachment = BIZ_BR_LoanActionCompletion_AttachRequired(strRowID)
   	
	For i = 0 To UBound(arrRequiredDocuments)
	    GUI_List_ValidateCellData objListViewItems, i, 0, arrRequiredDocuments(i)
        GUI_List_ValidateCellData objListViewItems, i, 1, arrLoanActionType(i)
        GUI_List_ValidateCellData objListViewItems, i, 2, arrRequiredAttachment(i)
	Next
      	       
End Function



'Function to validate the Required Tasks Tab in Section 4
'@code
'    BIZ_BR_LoanActionCompletion_RequiredTasksTab_Validation(objListViewItems,strRowID)
'@endcode
'@param objListViewItems- Grid in which the docs are added
'@param strRowID -  RowID of the datasheet
        
Function BIZ_BR_LoanActionCompletion_RequiredTasksTab_Validation(objListViewItems,strRowID)
      
    arrRequiredTasks = BIZ_BR_LoanActionCompletion_RequiredTasks(strRowID)
    arrLoanAction = BIZ_BR_LoanActionCompletion_LoanActionSelection(strRowID,"RequiredTasks")
         
    '======  Verify  fields ========================
    FRM_Logger_ReportStepEvent "Validating the Required Tasks Section ","Required Tasks Added should be retained in the Tab",Null
    intRowCount = objListViewItems.Object.Items.Count
    For i = 0 To intRowCount  - 1
        GUI_List_ValidateCellData objListViewItems, i, 0, arrRequiredTasks(i)
        GUI_List_ValidateCellData objListViewItems, i, 1, arrLoanAction(i)
       	   
    Next
End Function



'Function to Select the Required Task in the Required Tasks Tab
'@code
'    BIZ_BR_LoanActionCompletion_RequiredTask_Select_Remove(strRowID,intNumofTasksRemoved)
'@endcode
'@param strRowID - RowID of the sheet
'@param intNumofTasksRemoved - Number of Tasks to be removed

Function BIZ_BR_LoanActionCompletion_RequiredTask_Select_Remove(strRowID,intNumofTasksRemoved) 

	FRM_Logger_ReportInfoEvent "Select the Required Task To Remove ", "Required Task To Be Removed", null
	Dim objMainContainer,objLoanActionCompletion,objRequiredTasksTab
	Dim objRemoveDocument,scrollbarFieldDataEntry

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
	Set objLoanActionCompletion = objMainContainer.SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objRequiredTasksTab = objLoanActionCompletion.SwfObject("swfname:=tabControl1").SwfObject("swfname:=tabPageEx2")
	
    arrRequiredTasks = BIZ_BR_LoanActionCompletion_RequiredTasks(strRowID)
    
 	intRowCount = objRequiredTasksTab.SwfObject("swfname:=emListViewTasks").Object.Items.Count
 	
	For i = 0 To intNumofTasksRemoved - 1
		FRM_Logger_ReportInfoEvent "Remove Tasks ", "Remove Tasks: "&arrRequiredTasks(i), null
		GUI_List_ClickRow objRequiredTasksTab.SwfObject("swfname:=emListViewTasks"), scrollbarFieldDataEntry, "Name", arrRequiredTasks(i), True, False, False, "Single"
		objRequiredTasksTab.SwfObject("swfname:=emListViewTasks").Type micCtrlDwn
	Next
 	objRequiredTasksTab.SwfObject("swfname:=emListViewTasks").Type micCtrlUp
	GUI_SwfButton_Click objRequiredTasksTab.SwfButton("swfname:=btnRemoveTask")
		 	
	Set objMainContainer = Nothing
	Set objLoanActionCompletion = Nothing
	Set objRequiredTasksTab = Nothing 
	
End Function



'Function to Validate the Required Fields Tab for Loan Action Completion Rule 
'@code
'    BIZ_BR_LoanActionCompletion_RequiredFieldsTab_UICheck(strRequiredFields)
'@endcode
'@param strRequiredFields - "Required Fields" text to be checked

Function BIZ_BR_LoanActionCompletion_RequiredFieldsTab_UICheck(strRequiredFields)
	FRM_Logger_ReportInfoEvent "Validate the Required Tasks Tab and Click on Add Button in Required Fields", "Validate the Required Tasks Tab and Click on Add Button in Required Fields", null
	
	Dim objLoanActionCompletion,objRequiredDocsTab,objAddRequiredDocsTab,boolPresent

	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	
	'===========Validate the Required Fields Tab UI On Loan Action Completion Window
	boolPresent = GUI_ClickElement_ByGetTextLocation(objLoanActionCompletion.SwfObject("swfname:=tabControl1"),strRequiredFields)
	
	If boolPresent Then
		FRM_Logger_ReportPassEvent "Required Fields Validation ","Required Fields Tab is Clicked", null
	Else 
		FRM_Logger_ReportFailEvent "Required Fields Validation","Required Fields Tab Not Clicked", null
	End If	
	GUI_Object_ValidateText  objLoanActionCompletion.SwfObject("swfname:=tabPageEx3"),strRequiredFields,"Validate if Required Fields Tab is Present" 
	
	FRM_Logger_ReportStepEvent "Required Fields Tab: Button Validation ","Verification of Add,Find,Remove Button ",Null
	GUI_Object_ValidateDisabled objLoanActionCompletion.SwfObject("swfname:=tabPageEx3").SwfButton("swfname:=removeFieldBtn"),"Remove"
	GUI_Object_ValidateEnabled objLoanActionCompletion.SwfObject("swfname:=tabPageEx3").SwfButton("swfname:=addFieldBtn"),"Add"
	GUI_Object_ValidateEnabled objLoanActionCompletion.SwfObject("swfname:=tabPageEx3").SwfButton("swfname:=findBtn"),"Find"
	
    FRM_Logger_ReportStepEvent "Required Fields Tab ","Verification of Column Names in Required Fields Tab ",Null
    GUI_List_ValidateColumnName objLoanActionCompletion.SwfObject("swfname:=tabPageEx3").SwfObject("swfname:=emListViewFields"),"ID"
    GUI_List_ValidateColumnName objLoanActionCompletion.SwfObject("swfname:=tabPageEx3").SwfObject("swfname:=emListViewFields"),"Description"
    GUI_List_ValidateColumnName objLoanActionCompletion.SwfObject("swfname:=tabPageEx3").SwfObject("swfname:=emListViewFields"),"For Loan Action"
   
	Set objLoanActionCompletion = Nothing
	
	
End Function



'Function to Click on Add Button in Required Fields Tab in Loan Action Completion
'This covers the  click on Add Button
'@code
'    BIZ_BR_LoanActionCompletion_RequiredFields_ClickAdd()
'@endcode

Function BIZ_BR_LoanActionCompletion_RequiredFields_ClickAdd()
    Dim objLoanActionCompletion
    Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	   
    GUI_SwfButton_Click objLoanActionCompletion.SwfObject("swfname:=tabPageEx3").SwfButton("swfname:=addFieldBtn")
	If objLoanActionCompletion.SwfWindow("swfname:=AddFields").Exist(1) Then
		FRM_Logger_ReportPassEvent "Required Fields Window Validation","Required Fields Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Required Fields Window Validation","Required Fields Window Not Loaded", null
	End If
	Set objLoanActionCompletion = Nothing
	
End Function    


   
'Function to Validate the UI for Add Required Fields Pop-Up Window in Loan Action Completion
'This covers the  the list of values in For Loan ACtion validation and UI of it
'@code
'    BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredTasksWindow(strRowID)
'@endcode
'@param strRowdID - RowID from datasheet

Function BIZ_BR_LoanActionCompletion_ValidateUI_AddRequiredFieldsWindow(strRowID)
	FRM_Logger_ReportInfoEvent "Validate the UI For Add Required Fields Window", "The Add Required Fields window should be similar to Milestone Completion", null
	
	Dim objLoanActionCompletion 
	
	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredFields", strRowID)
	
	FRM_Logger_ReportStepEvent "Required Fields Window ","Verification of Header in Required Fields Window ",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredFieldsHeader")) Then
        GUI_Object_ValidateText  objLoanActionCompletion.SwfWindow("swfname:=AddFields"),trim(FRM_DS_GetValue(objData, "RequiredFieldsHeader")),"Check if Add Fields Window is Titled properly"
	End If
    FRM_Logger_ReportStepEvent "Required Fields Window ","Verification of Sub-Title Name in Required Fields Window ",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredFieldsSubTitle")) Then
        GUI_Object_ValidateText  objLoanActionCompletion.SwfWindow("swfname:=AddFields").SwfObject("swfname:=groupContainer1"),trim(FRM_DS_GetValue(objData, "RequiredFieldsSubTitle")),"Check if Add Fields Window is Sub-Titled properly"
	End If
	
    FRM_Logger_ReportStepEvent "Required Fields Window ","Verification of Loan Action Values in Required Fields Window ",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "LoanActionValues"))
	End If
    arrExpectedValuesForLoanAction = split(strActionValues,",")
     
   	'=================Validate the dropdown content for the Loan Actions  =====================
	GUI_SwfComboBox_ValidateContent objLoanActionCompletion.SwfWindow("swfname:=AddFields").SwfComboBox("swfname:=cboMilestones"), arrExpectedValuesForLoanAction	
	
	FRM_Logger_ReportStepEvent "Required Fields Window ","Verification of Add, Add More, Cancel Button Present ",Null
	GUI_Object_ValidateExists objLoanActionCompletion.SwfWindow("swfname:=AddFields").SwfButton("swfname:=okBtn"),2,"Add Button Should Be Present"
	GUI_Object_ValidateExists objLoanActionCompletion.SwfWindow("swfname:=AddFields").SwfButton("swfname:=moreBtn"),2,"Add More Button Should Be Present"
	GUI_Object_ValidateExists objLoanActionCompletion.SwfWindow("swfname:=AddFields").SwfButton("swfname:=cancelBtn"),2,"Cancel Button Should Be Present"
	
	FRM_Logger_ReportStepEvent "Required Fields Window ","Verification of 10 Required Fields Text Box Present ",Null
	For i = 1 To 10
	    Set objRequiredFields = objLoanActionCompletion.SwfWindow("swfname:=AddFields").SwfObject("swfname:=groupContainer1").SwfEdit("swfname:=textBoxID"&i)
	    GUI_Object_ValidateExists objRequiredFields,2,"RequiredField"&i&" Text Box Should Be Present"
	Next
	
    boolPresent = GUI_Object_IsExist(objLoanActionCompletion.SwfWindow("swfname:=AddFields").SwfObject("swfname:=groupContainer1").SwfEdit("swfname:=textBoxID11"))
	If boolPresent Then
	   FRM_Logger_ReportFailEvent "Required Fields Validation","Required Fields 11 Text Box is Present. Only 10 Text Boxes should be Present", null
	Else 
	   FRM_Logger_ReportPassEvent "Required Fields Validation ","Required Fields 11 Text Box is Not Present. Only 10 Text Boxes are Present", null
	End If
	
	Set objLoanActionCompletion = Nothing
	
		
End Function



'Function to Add Required Fields for a Loan Action in Add Required Fields Window 
'@code
'    BIZ_BR_LoanActionCompletion_AddRequiredFields(strRowID)
'@endcode
'@param strRowID - Row ID in RequiredFields sheet to add the Fields in Required Fields tab 
 
Function BIZ_BR_LoanActionCompletion_AddRequiredFields(strRowID)
    FRM_Logger_ReportInfoEvent "Adding Field ID and Loan Action in Required Fields Pop-Up Window", "Adding Field IDs and Loan Action Values", null
	Dim objLoanActionCompletion,objAddRequiredFieldsWindow ,objscrollBar
 	
	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objAddRequiredFieldsWindow = objLoanActionCompletion.SwfWindow("swfname:=AddFields")
	
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredFields", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqField1")) Then
	    GUI_SwfEdit_Set objAddRequiredFieldsWindow.SwfObject("swfname:=groupContainer1").SwfEdit("swfname:=textBoxID1"),Trim(FRM_DS_GetValue(objData, "AddReqField1"))
	End If	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction1")) Then
	    GUI_SwfComboBox_Select objAddRequiredFieldsWindow.SwfComboBox("swfname:=cboMilestones"),Trim(FRM_DS_GetValue(objData, "AddLoanAction1"))
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddMore")) Then
	       GUI_SwfButton_Click objAddRequiredFieldsWindow.SwfButton("swfname:=moreBtn") 
	       GUI_SwfEdit_Set objAddRequiredFieldsWindow.SwfObject("swfname:=groupContainer1").SwfEdit("swfname:=textBoxID2"),Trim(FRM_DS_GetValue(objData, "AddReqField2"))
	       GUI_SwfComboBox_Select objAddRequiredFieldsWindow.SwfComboBox("swfname:=cboMilestones"),Trim(FRM_DS_GetValue(objData, "AddLoanAction2"))
		
	End If
		
	
	GUI_SwfButton_Click objAddRequiredFieldsWindow.SwfButton("swfname:=okBtn")
	
	Set objLoanActionCompletion = Nothing
	Set objAddRequiredFieldsWindow = Nothing
	
	 	
End Function	



'Function to validate the Required Fields Tab Content in Section 4
'@code
'    BIZ_BR_LoanActionCompletion_RequiredFieldsTab_Validation(objListViewItems,strRowID)
'@endcode
'@param objListViewItems- Grid in which the Req Fields are added
'@param strRowID -  RowID of the datasheet
        
Function BIZ_BR_LoanActionCompletion_RequiredFieldsTab_Validation(objListViewItems,strRowID)
      
    arrRequiredFields = BIZ_BR_LoanActionCompletion_RequiredFields(strRowID)
    arrLoanAction = BIZ_BR_LoanActionCompletion_LoanActionSelection(strRowID,"RequiredFields")
    arrDescription = BIZ_BR_LoanActionCompletion_RequiredFields_Description(strRowID)
         
    '======  Verify  fields ========================
    FRM_Logger_ReportStepEvent "Validating the Required Fields Section ","Required Fields Added should be retained in the Tab",Null
    intRowCount = objListViewItems.Object.Items.Count
    For i = 0 To intRowCount  - 1
        GUI_List_ValidateCellData objListViewItems, i, 0, arrRequiredFields(i)
        GUI_List_ValidateCellData objListViewItems, i, 1, arrDescription(i)
        GUI_List_ValidateCellData objListViewItems, i, 2, arrLoanAction(i)
    Next
End Function



'Function to Add Required Fields in Add Required Fields Tab 
'@code
'    BIZ_BR_LoanActionCompletion_RequiredFields(strRowID)
'@endcode
'@param strRowID - Passing the rowID in BusinessRule_LoanActionCompletion.xls 

Function BIZ_BR_LoanActionCompletion_RequiredFields(strRowID)
    Dim arrRequiredFields()
        
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredFields", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqField1")) Then
	   ReDim arrRequiredFields(0)
	   arrRequiredFields(0) = FRM_DS_GetValue(objData, "AddReqField1")	'Add Required Field1
    End If
	    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqField2")) Then
	   ReDim Preserve arrRequiredFields(1)
	   arrRequiredFields(1) = FRM_DS_GetValue(objData, "AddReqField2")	'Add Required Field2
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqField3")) Then
	   ReDim Preserve arrRequiredFields(2)
	   arrRequiredFields(2) = FRM_DS_GetValue(objData, "AddReqField3")	'Add Required Field3
    End If
	  	    
    BIZ_BR_LoanActionCompletion_RequiredFields = arrRequiredFields    
        
End Function
 

 
'Function to Check Description in Required Fields in Add Required Fields Tab 
'@code
'    BIZ_BR_LoanActionCompletion_RequiredFields_Description(strRowID)
'@endcode
'@param strRowID - Passing the rowID in BusinessRule_LoanActionCompletion.xls 

Function BIZ_BR_LoanActionCompletion_RequiredFields_Description(strRowID)
    Dim arrDescription()
        
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredFields", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description1")) Then
	   ReDim arrDescription(0)
	   arrDescription(0) = FRM_DS_GetValue(objData, "Description1")	'Add Description1
    End If
	    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description2")) Then
	   ReDim Preserve arrDescription(1)
	   arrDescription(1) = FRM_DS_GetValue(objData, "Description2")	'Add Description2
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description3")) Then
	   ReDim Preserve arrDescription(2)
	   arrDescription(2) = FRM_DS_GetValue(objData, "Description3")	'Add Description3
    End If
	  	    
    BIZ_BR_LoanActionCompletion_RequiredFields_Description = arrDescription    
       
End Function
 
 
 
'Function to Validate the Advanced Conditions Tab for Loan Action Completion Rule 
'@code
'    BIZ_BR_LoanActionCompletion_AdvancedConditionsTab_UICheck(strRequiredFields)
'@endcode
'@param strRequiredFields - "Advanced Conditions" text to be checked

Function BIZ_BR_LoanActionCompletion_AdvancedConditions_UICheck(strRequiredFields)
	FRM_Logger_ReportInfoEvent "Validate the Advanced Conditions Tab", "Validate the Advanced Conditions Tab ", null
	
	Dim objLoanActionCompletion,boolPresent

	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	
	'===========Validate the Advanced Conditions Tab UI On Loan Action Completion Window
	boolPresent = GUI_ClickElement_ByGetTextLocation(objLoanActionCompletion.SwfObject("swfname:=tabControl1"),strRequiredFields)
	
	If boolPresent Then
		FRM_Logger_ReportPassEvent "Advanced Conditions Validation ","Advanced Conditions Tab is Clicked", null
	Else 
		FRM_Logger_ReportFailEvent "Advanced Conditions Validation","Advanced Conditions Tab Not Clicked", null
	End If	
	GUI_Object_ValidateText  objLoanActionCompletion.SwfObject("swfname:=tabPageEx4"),strRequiredFields,"Validate if Advanced Conditions Tab is Present" 
	
	FRM_Logger_ReportStepEvent "Advanced Conditions Tab: Button Validation ","Verification of Add,Edit,Remove Button ",Null
	GUI_Object_ValidateDisabled objLoanActionCompletion.SwfObject("swfname:=tabPageEx4").SwfButton("swfname:=removeCodeBtn"),"Remove"
	GUI_Object_ValidateEnabled objLoanActionCompletion.SwfObject("swfname:=tabPageEx4").SwfButton("swfname:=addCodeBtn"),"Add"
	GUI_Object_ValidateDisabled objLoanActionCompletion.SwfObject("swfname:=tabPageEx4").SwfButton("swfname:=editCodeBtn"),"Edit"
	
    FRM_Logger_ReportStepEvent "Advanced Conditions Tab ","Verification of Column Names in Advanced Conditions Tab ",Null
    GUI_List_ValidateColumnName objLoanActionCompletion.SwfObject("swfname:=tabPageEx4").SwfObject("swfname:=emListViewCode"),"Code"
    GUI_List_ValidateColumnName objLoanActionCompletion.SwfObject("swfname:=tabPageEx4").SwfObject("swfname:=emListViewCode"),"For Loan Action"
   
	Set objLoanActionCompletion = Nothing
	
	
End Function



'Function to Click on Add Button in Advanced Conditions Tab in Loan Action Completion
'This covers the  click on Add Button
'@code
'    BIZ_BR_LoanActionCompletion_AdvancedConditions_ClickAdd()
'@endcode

Function BIZ_BR_LoanActionCompletion_AdvancedConditions_ClickAdd()
    Dim objLoanActionCompletion
    Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	   
    GUI_SwfButton_Click objLoanActionCompletion.SwfObject("swfname:=tabPageEx4").SwfButton("swfname:=addCodeBtn")
	If objLoanActionCompletion.SwfWindow("swfname:=AddAdvCodeForLoanActionCompletion").Exist(1) Then
		FRM_Logger_ReportPassEvent "Add Advanced Code Window Validation","Advanced Code Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Advanced Code Window Validation","Advanced Code Window Not Loaded", null
	End If
	Set objLoanActionCompletion = Nothing
	
End Function



'Function to Validate the UI for Advanced Conditions Pop-Up Window in Loan Action Completion
'@code
'    BIZ_BR_LoanActionCompletion_ValidateUI_AdvancedConditionsWindow()
'@endcode
'@param strRowdID - RowID from datasheet

Function BIZ_BR_LoanActionCompletion_ValidateUI_AdvancedConditionsWindow(strRowID)
	FRM_Logger_ReportInfoEvent "Validate the UI For Add Required Fields Window", "The Add Required Fields window should be similar to Milestone Completion", null
	
	Dim objLoanActionCompletion 
	
	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "AdvancedConditions", strRowID)
	
	FRM_Logger_ReportStepEvent "Advanced Conditions Window ","Verification of Description in Advanced Conditions Window ",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then
        GUI_Object_ValidateText  objLoanActionCompletion.SwfWindow("swfname:=AddAdvCodeForLoanActionCompletion").SwfLabel("swfname:=label1"),trim(FRM_DS_GetValue(objData, "Description")),"Check the Description"
	End If
       
	FRM_Logger_ReportStepEvent "Advanced Conditions  Window ","Verification of Add, Add More, Cancel Button Present ",Null
	GUI_Object_ValidateExists objLoanActionCompletion.SwfWindow("swfname:=AddAdvCodeForLoanActionCompletion").SwfEditor("swfname:=txtSourceCode"),2,"Description Editor Should Be Present"
	GUI_Object_ValidateExists objLoanActionCompletion.SwfWindow("swfname:=AddAdvCodeForLoanActionCompletion").SwfButton("swfname:=btnCancel"),2,"Cancel Button Should Be Present"
	GUI_Object_ValidateExists objLoanActionCompletion.SwfWindow("swfname:=AddAdvCodeForLoanActionCompletion").SwfButton("swfname:=btnOK"),2,"OK Button Should Be Present"
	
	Set objLoanActionCompletion = Nothing
	
		
End Function



'Function for Adding Advanced Condition code in AdvancedCondition Pop-Up Window
'@code
'    BIZ_BR_LoanActionCompletion_AddEditAdvancedCondition(strRowID)
'@endcode
'@param strRowID - Row ID in RequiredFields sheet to add the Code in Advanced Condition tab 
'@param objLoanActionCompletion -  Loan Action completion window object passed
 
Function BIZ_BR_LoanActionCompletion_AddEditAdvancedCondition(strRowID,objLoanActionCompletion)
    FRM_Logger_ReportInfoEvent "Adding Advanced Condition code in AdvancedCondition Pop-Up Window", "Adding Advanced Condition code ", null
	Dim objAdvancedConditionWindow 
	
	'Set objAdvancedConditionWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog").SwfWindow("swfname:=AddAdvCodeForLoanActionCompletion")
    Set objAdvancedConditionWindow = objLoanActionCompletion.SwfWindow("swfname:=AddAdvCodeForLoanActionCompletion")
	
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "AdvancedConditions", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddCode")) Then
	    GUI_SwfEditor_Type objAdvancedConditionWindow.SwfEditor("swfname:=txtSourceCode"),Trim(FRM_DS_GetValue(objData, "AddCode"))
	End If	
		
	GUI_SwfButton_Click objAdvancedConditionWindow.SwfButton("swfname:=btnOK")
	
	Set objAdvancedConditionWindow = Nothing
	
	 	
End Function	



'Function to validate the Advanced Condition Tab Content in Section 4
'@code
'    BIZ_BR_LoanActionCompletion_AdvancedConditionTab_Validation(objListViewItems,strRowID)
'@endcode
'@param objListViewItems- Grid in which the Code are added
'@param strRowID -  RowID of the datasheet
        
Function BIZ_BR_LoanActionCompletion_AdvancedConditionTab_Validation(objListViewItems,strRowID)
      
    arrCode = BIZ_BR_LoanActionCompletion_Code(strRowID)
    arrLoanAction = BIZ_BR_LoanActionCompletion_LoanActionSelection(strRowID,"AdvancedConditions")
          
    '======  Verify  fields ========================
    FRM_Logger_ReportStepEvent "Validating the Advanced Condition Tab Section ","Code  Added should be retained in the Adv condition Tab",Null
    intRowCount = objListViewItems.Object.Items.Count
    For i = 0 To intRowCount  - 1
        wait 4
        GUI_List_ValidateCellData objListViewItems, i, 0, arrCode(i)
        GUI_List_ValidateCellData objListViewItems, i, 1, arrLoanAction(i)
       
    Next
End Function



'Function to AddCode in Add Adv Condition Tab 
'@code
'    BIZ_BR_LoanActionCompletion_Code(strRowID)
'@endcode
'@param strRowID - Passing the rowID in BusinessRule_LoanActionCompletion.xls 

Function BIZ_BR_LoanActionCompletion_Code(strRowID)
    Dim arrCode()
        
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "AdvancedConditions", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddCode")) Then
	   ReDim arrCode(0)
	   arrCode(0) = FRM_DS_GetValue(objData, "AddCode")	'Add Code1
    End If
	    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddCode2")) Then
	   ReDim Preserve arrCode(1)
	   arrCode(1) = FRM_DS_GetValue(objData, "AddCode2")	'Add Code2
    End If
	  	    
    BIZ_BR_LoanActionCompletion_Code = arrCode    
        
End Function



'Function to change the Loan Action for the Advanced Condition Code Added
'@code
'    BIZ_BR_LoanActionCompletion_ChangeLoanAction_AdvancedConditionTab(arrCode,arrLoanAction)
'@endcode
'@param arrCode - The Adv code of which the Loan ACtion has to be changed
'@param arrLoanAction - The Loan Action to be selected for the Code 
'@param objLoanActionCompletion -  The object of Loan ACtion Completion window to be passed

Function BIZ_BR_LoanActionCompletion_ChangeLoanAction_AdvancedConditionTab(arrCode,arrLoanAction,objLoanActionCompletion)
    FRM_Logger_ReportInfoEvent "Changing Loan Action in  Advanced Condition code ", "Loan ACtion Change in Advanced Condition code ", null
    
    Dim objAdvConditionTab,intSelectedRowNumber
    'Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
    Set objAdvConditionTab = objLoanActionCompletion.SwfObject("swfname:=tabControl1").SwfObject("swfname:=tabPageEx4")
     
    
    intSelectedRowNumber=BIZ_BR_LoanActionCompletion_SelectRowNumber(objAdvConditionTab.SwfObject("swfname:=emListViewCode"),arrCode(0),"Code")
        
    GUI_List_ClickOnCellData objAdvConditionTab.SwfObject("swfname:=emListViewCode"), intSelectedRowNumber, 1, True, False, False, "Double"
    wait 2
    GUI_SwfComboBox_Select objAdvConditionTab.SwfComboBox("micClass:=SwfComboBox"),arrLoanAction(0)
    wait 2
    GUI_List_ClickOnCellData objAdvConditionTab.SwfObject("swfname:=emListViewCode"), intSelectedRowNumber, 1, True, False, False, "Single"      	
    
    strLoanActionType = objAdvConditionTab.SwfComboBox("micClass:=SwfComboBox").getSelection()
    FRM_Logger_ReportStepEvent "Verifying the Change in Loan Action Type", "Verifying Loan Action changed to"&strLoanActionType, null
    If strLoanActionType = arrLoanAction(0) Then
       	FRM_Logger_ReportPassEvent "Loan Action Type Changed", "Loan Action changed to "&arrLoanAction(0), ""
    Else
    	FRM_Logger_ReportFailEvent "Loan Action Type Not Changed", "Loan Action Not changed to "&arrLoanAction(0), ""
    End If
    wait 2
    GUI_List_ClickOnCellData objAdvConditionTab.SwfObject("swfname:=emListViewCode"), intSelectedRowNumber, 0, True, False, False, "Single"      	
    
    Set objLoanActionCompletion = Nothing
    Set objAdvConditionTab = Nothing
    
End Function



'Function to Validate the Required Milestones Tab for Loan Action Completion Rule 
'@code
'    BIZ_BR_LoanActionCompletion_RequiredMilestones_UICheck(strRequiredFields)
'@endcode
'@param strRequiredFields - "Required Milestones" text to be checked

Function BIZ_BR_LoanActionCompletion_RequiredMilestones_UICheck(strRequiredFields)
	FRM_Logger_ReportInfoEvent "Validate the Required Milestones Tab", "Validate the Required Milestones Tab ", null
	
	Dim objLoanActionCompletion,boolPresent
  	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	
	objLoanActionCompletion.SwfObject("swfname:=tabControl1").Click 364,14
	GUI_Object_ValidateText  objLoanActionCompletion.SwfObject("swfname:=tabPageEx5"),strRequiredFields,"Validate if Required Milestones Tab is Present" 
	
	FRM_Logger_ReportStepEvent "Required Milestones Tab: Button Validation ","Verification of Add,Remove Button ",Null
	GUI_Object_ValidateDisabled objLoanActionCompletion.SwfObject("swfname:=tabPageEx5").SwfButton("swfname:=removeMilestoneBtn"),"Remove"
	GUI_Object_ValidateEnabled objLoanActionCompletion.SwfObject("swfname:=tabPageEx5").SwfButton("swfname:=addMilestoneBtn"),"Add"
	
    FRM_Logger_ReportStepEvent "Required Milestones Tab ","Verification of Column Names in Required Milestones Tab ",Null
    GUI_List_ValidateColumnName objLoanActionCompletion.SwfObject("swfname:=tabPageEx5").SwfObject("swfname:=emListViewMilestones"),"Milestone Name"
    GUI_List_ValidateColumnName objLoanActionCompletion.SwfObject("swfname:=tabPageEx5").SwfObject("swfname:=emListViewMilestones"),"For Loan Action"
   
	Set objLoanActionCompletion = Nothing
	
	
End Function



'Function to Click on Add Button in Required Milestones Tab in Loan Action Completion
'This covers the  click on Add Button
'@code
'    BIZ_BR_LoanActionCompletion_RequiredMilestones_ClickAdd()
'@endcode

Function BIZ_BR_LoanActionCompletion_RequiredMilestones_ClickAdd()
    Dim objLoanActionCompletion
    Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	   
    GUI_SwfButton_Click objLoanActionCompletion.SwfObject("swfname:=tabPageEx5").SwfButton("swfname:=addMilestoneBtn")
	If objLoanActionCompletion.SwfWindow("swfname:=AddMilestonesForLoanActionCompletion").Exist(1) Then
		FRM_Logger_ReportPassEvent "Add Milestones Window Validation","Milestones Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Add Milestones Window Validation","Milestones Window Not Loaded", null
	End If
	Set objLoanActionCompletion = Nothing
	
End Function



'Function to Validate the UI for Required Milestones Pop-Up Window in Loan Action Completion
'@code
'    BIZ_BR_LoanActionCompletion_ValidateUI_MilestonesWindow()
'@endcode
'@param strRowdID - RowID from datasheet

Function BIZ_BR_LoanActionCompletion_ValidateUI_MilestonesWindow(strRowID)
	FRM_Logger_ReportInfoEvent "Validate the UI For Add Milestones Window", "The Add Milestones window should be similar to Milestone Completion", null
	
	Dim objLoanActionCompletion 
	
	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredMilestones", strRowID)
	
	FRM_Logger_ReportStepEvent "Milestones Window ","Verification of Loan Action Label in Milestones Window ",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActionLabel")) Then
        GUI_Object_ValidateText  objLoanActionCompletion.SwfWindow("swfname:=AddMilestonesForLoanActionCompletion").SwfLabel("swfname:=label1"),trim(FRM_DS_GetValue(objData, "LoanActionLabel")),"Check the Loan Action Label"
	End If
    
    '=================Validate the dropdown content for the Loan Actions  =====================
	FRM_Logger_ReportStepEvent "Required Milestones Window ","Verification of Loan Action Values in Required Milestones Window ",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "LoanActionValues"))
	End If
    arrExpectedValuesForLoanAction = split(strActionValues,",")
    GUI_SwfComboBox_ValidateContent objLoanActionCompletion.SwfWindow("swfname:=AddMilestonesForLoanActionCompletion").SwfComboBox("swfname:=cboLoanAction"), arrExpectedValuesForLoanAction	
	
	'=================Validate the Milestone List============== 
	FRM_Logger_ReportStepEvent "Required Milestones Window ","Verification of List of Milestones in Required Milestones Window ",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MilestoneValues")) Then
        strMilestoneValues= Trim(FRM_DS_GetValue(objData, "MilestoneValues"))
	End If
    arrExpectedValuesMilestones = split(strMilestoneValues,",")
    'get the row count of the listview
    Set objMilestoneCompletionList = objLoanActionCompletion.SwfWindow("swfname:=AddMilestonesForLoanActionCompletion").SwfObject("swfname:=lvwMilestones")
	iRowCount = objMilestoneCompletionList.Object.Items.Count
	For iCnt = 0 to iRowCount-1
		'strMilestone = objMilestoneCompletionList.Object.Items.Item(iCnt).Subitems.Item(iCnt).Text
		strActualMilestone = GUI_List_GetCellData(objMilestoneCompletionList,iCnt,0)
		FRM_VerifyEqual arrExpectedValuesMilestones(iCnt),strActualMilestone,"Comparing Milestones"&strActualMilestone,"Milestones should match"
	Next
	  
	Set objMilestoneCompletionList = Nothing
	Set objLoanActionCompletion = Nothing 
	
		
End Function



'Function to Add Required Milestones for a Loan Action in Add Required Milestones Window 
'@code
'    BIZ_BR_LoanActionCompletion_AddRequiredMilestones(strRowID)
'@endcode
'@param strRowID - Row ID in RequiredMilestones sheet to add the Milestones 

Function BIZ_BR_LoanActionCompletion_AddRequiredMilestones(strRowID)

	Dim objLoanActionCompletion,objAddRequiredMilestonesWindow ,objscrollBar
 	
	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objMilestonesWindow = objLoanActionCompletion.SwfWindow("swfname:=AddMilestonesForLoanActionCompletion")
		
	arrRequiredMilestones = BIZ_BR_LoanActionCompletion_RequiredMilestones(strRowID)
        
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredMilestones",strRowID )
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddLoanAction1")) Then
	   GUI_SwfComboBox_Select objMilestonesWindow.SwfComboBox("swfname:=cboLoanAction"), FRM_DS_GetValue(objData, "AddLoanAction1")
	End If
    
	For i = 0 To UBound(arrRequiredMilestones)
		boolExist = GUI_List_ClickRow (objMilestonesWindow.SwfObject("swfname:=LoanActionMilestonesListPanel").SwfObject("swfname:=lvwMilestones"), objscrollBar,0, arrRequiredMilestones(i), True, False, False, "Single")
		print "boolExist"&boolExist
		If boolExist Then
			FRM_Logger_ReportPassEvent "Required Milestones To be Present in List ","Required Milestones"&arrRequiredMilestones(i)&" Present in the List", null
		Else 
			FRM_Logger_ReportFailEvent "Required Milestones To be Present in List ","Required Milestones"&arrRequiredMilestones(i)&"Not Present in the List", null
		End If
		objMilestonesWindow.SwfObject("swfname:=lvwMilestones").Type micCtrlDwn
	Next
	objMilestonesWindow.SwfObject("swfname:=lvwMilestones").Type micCtrlUp
	GUI_SwfButton_Click objMilestonesWindow.SwfButton("swfname:=btnOK")
	
	Set objLoanActionCompletion = Nothing
	Set objMilestonesWindow = Nothing
	
	 	
End Function	



'Function to Add Required Milestones in Add Required Milestones Window 
'@code
'    BIZ_BR_LoanActionCompletion_RequiredMilestones(strRowID)
'@endcode
'@param strRowID - Passing the rowID in BusinessRule_LoanActionCompletion.xls 

Function BIZ_BR_LoanActionCompletion_RequiredMilestones(strRowID)
        Dim arrRequiredMilestones()
        
        Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredMilestones", strRowID)
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddMilestone")) Then
	       ReDim arrRequiredMilestones(0)
		   arrRequiredMilestones(0) = FRM_DS_GetValue(objData, "AddMilestone")	'AddMilestone
		   
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddMilestone2")) Then
	       ReDim Preserve arrRequiredMilestones(1)
		   arrRequiredMilestones(1) = FRM_DS_GetValue(objData, "AddMilestone2")	'AddMilestone2
		  
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddMilestone3")) Then
	        ReDim Preserve arrRequiredMilestones(2)
	        arrRequiredMilestones(2) = FRM_DS_GetValue(objData, "AddMilestone3")	'AddMilestone3
		  
	    End If
	    
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddMilestone4")) Then
	       ReDim Preserve arrRequiredMilestones(3)
		   arrRequiredMilestones(3) = FRM_DS_GetValue(objData, "AddMilestone4")	'AddMilestone4
		  
	    End If
	    
	    BIZ_BR_LoanActionCompletion_RequiredMilestones = arrRequiredMilestones
        
End Function


 
 'Function to validate the Required Milestones Tab Content in Section 4
'@code
'    BIZ_BR_LoanActionCompletion_RequiredMilestonesTab_Validation(objListViewItems,strRowID)
'@endcode
'@param objListViewItems- Grid in which the Code are added
'@param strRowID -  RowID of the datasheet
        
Function BIZ_BR_LoanActionCompletion_RequiredMilestonesTab_Validation(objListViewItems,strRowID)
      
    arrMilestones = BIZ_BR_LoanActionCompletion_RequiredMilestones(strRowID)
    arrLoanAction = BIZ_BR_LoanActionCompletion_LoanActionSelection(strRowID,"RequiredMilestones")
          
    '======  Verify  fields ========================
    FRM_Logger_ReportStepEvent "Validating the Required Milestones Tab Section ","Milestone  Added should be retained in theRequired Milestones Tab",Null
    intRowCount = objListViewItems.Object.Items.Count
    For i = 0 To intRowCount  - 1
        wait 2
        print "arrMilestones(i)"&arrMilestones(i)
        print "arrLoanAction(i)"&arrLoanAction(i)
        GUI_List_ValidateCellData objListViewItems, i, 0, arrMilestones(i)
        GUI_List_ValidateCellData objListViewItems, i, 1, arrLoanAction(i)
       
    Next
End Function



'Function to change the Loan Action for the Advanced Condition Code Added
'@code
'    BIZ_BR_LoanActionCompletion_ChangeLoanAction_AdvancedConditionTab(arrCode,arrLoanAction)
'@endcode
'@param arrCode - The Adv code of which the Loan ACtion has to be changed
'@param arrLoanAction - The Loan Action to be selected for the Code 


Function BIZ_BR_LoanActionCompletion_ChangeLoanAction_RequiredMilestonesTab(arrCode,arrLoanAction)
    FRM_Logger_ReportInfoEvent "Changing Loan Action in  Required Milestones ", "Loan ACtion Change in Required Milestones ", null
    
    Dim objAdvConditionTab,intSelectedRowNumber
    Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
    Set objReqMilestonesTab = objLoanActionCompletion.SwfObject("swfname:=tabControl1").SwfObject("swfname:=tabPageEx5")
     
    
    intSelectedRowNumber=BIZ_BR_LoanActionCompletion_SelectRowNumber(objReqMilestonesTab.SwfObject("swfname:=emListViewMilestones"),arrCode(0),"Milestone Name")
        
    GUI_List_ClickOnCellData objReqMilestonesTab.SwfObject("swfname:=emListViewMilestones"), intSelectedRowNumber, 1, True, False, False, "Double"
    GUI_SwfComboBox_Select objReqMilestonesTab.SwfComboBox("micClass:=SwfComboBox"),arrLoanAction(0)
    wait 2
    strLoanActionType = objReqMilestonesTab.SwfComboBox("micClass:=SwfComboBox").getSelection()
    FRM_Logger_ReportStepEvent "Verifying the Change in Loan Action Type", "Verifying Loan Action changed to"&strLoanActionType, null
    If strLoanActionType = arrLoanAction(0) Then
       	FRM_Logger_ReportPassEvent "Loan Action Type Changed", "Loan Action changed to "&arrLoanAction(0), ""
    Else
    	FRM_Logger_ReportFailEvent "Loan Action Type Not Changed", "Loan Action Not changed to "&arrLoanAction(0), ""
    End If
    GUI_List_ClickOnCellData objReqMilestonesTab.SwfObject("swfname:=emListViewMilestones"), intSelectedRowNumber, 0, True, False, False, "Single"      	
    
    Set objLoanActionCompletion = Nothing
    Set objReqMilestonesTab = Nothing
    
End Function



'Function to Validate Section 2 in Loan Action Completion Rule UI
'@code
'    BIZ_BR_LoanActionCompletion_ValidateSection2()
'@endcode 
   
Function BIZ_BR_LoanActionCompletion_ValidateSection2()
    Dim objLoanActionCompletion,objChannel
	Set objLoanActionCompletion = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog")
	Set objChannel = objLoanActionCompletion.SwfObject("swfname:=panelChannel").SwfList("swfname:=chkListChannels")
    
    FRM_Logger_ReportInfoEvent "Validate the Section 2  ", "Check the Label Name and the Checked Property", null
    GUI_Object_ValidateText objLoanActionCompletion.SwfLabel("swfname:=label6"),"2. Select all Channels this rule applies to","Text Label Should Match in Section 2"
    
    intRowCount = objChannel.Object.Items.Count
	For i = 0 To intRowCount - 1
	   strListValue=objChannel.GetItem(i)
	   strListProperty = objChannel.GetItemProperty(i,"Checked")
	   If strListProperty Then
		'Success
		On Error Resume Next
		FRM_Logger_ReportPassEvent "Validate Property", "Checked Property For : " & strListValue & "Is" &strListProperty, Null
		On Error Goto 0						
	   Else
		'Failed
		On Error Resume Next
		FRM_Logger_ReportFailEvent "Validate Property","Checked Property For : " & strListValue & "Is" &strListProperty , Null
		On Error Goto 0
	End If
	
	Next
	
End Function



'Function to Validate Section 3 in Loan Action Completion Rule UI
'@code
'    BIZ_BR_LoanActionCompletion_ValidateSection3(strRowID)
'@endcode    
'@param strRowID = Row ID of datasheet

Function BIZ_BR_LoanActionCompletion_ValidateSection3(strRowID)

    Dim objRuleCondition 
	Set objRuleCondition = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanActionCompletionRuleDialog").SwfObject("swfname:=RuleConditionControl")
    
    FRM_Logger_ReportStepEvent "Loan Action Completion Rule:Section 3", "Click on Yes in Section 3 and Validate the Combo Box Content", null
    GUI_SwfRadioButton_Click objRuleCondition.SwfRadioButton("swfname:=radioCondition")
    
    Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "Section3", strRowID)
    '=================Validate the dropdown content for the Section 3 if Yes is Clicked=====================
	FRM_Logger_ReportStepEvent "Section 3 ","Verification of Values in Droplist if Yes is Clicked",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "ConditionValues"))
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOActionValues")) Then
        strTPOActionValues= Trim(FRM_DS_GetValue(objData, "TPOActionValues"))
	End If
	
    arrExpectedValuesForCondition = split(strActionValues,",")
    arrExpectedValuesForTPOActions = split(strTPOActionValues,",")
    GUI_SwfComboBox_ValidateContent objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"), arrExpectedValuesForCondition	
	'========================Select TPO Actions from the List================
    FRM_Logger_ReportStepEvent "Loan Action Completion Rule:Section 3", "Select TPO Actions from droplist and Validate the TPO action Values", null
    GUI_SwfComboBox_Select objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"),"TPO Actions"
    
    
    intRowCount = objRuleCondition.SwfList("swfname:=chkdListTPOActions").Object.Items.Count
	For i = 0 To intRowCount - 1
	   strListValue=objRuleCondition.SwfList("swfname:=chkdListTPOActions").GetItem(i)
	   FRM_VerifyEqual strListValue,arrExpectedValuesForTPOActions(i) ,"TPO Actions in Section 3","TPO Actions should match"
	Next  
	
End Function



'Function to validate the Loan Action Values in the List in Section 4
'@code
'    BIZ_BR_LoanActionCompletion_Validate_LoanActionValues(strLoanAction)
'@endcode
'@param strLoanAction - Loan Action Selected in Section 3
'@param obj - The obj to be checked

Function BIZ_BR_LoanActionCompletion_Validate_LoanActionValues (obj,strLoanAction)
    Dim intCount,strExpectedValue,strActualValue,boolPresent
	intCount=obj.GetItemsCount
	For i= 0 To intCount - 1
		strActualValue = obj.GetItem(i)
		strExpectedValue = strLoanAction
		If strActualValue = strExpectedValue  Then
		  boolPresent = True
		  Exit For
		End If
	Next
	BIZ_BR_LoanActionCompletion_Validate_LoanActionValues = boolPresent
    
End Function



'Function to validate the Content in Section 4 for Field Data Entry
'@code
'    BIZ_BR_FieldDataEntry_Section4_Validation(objListViewItems,strRowID)
'@endcode
'@param objListViewItems- Grid in which the Code are added
'@param strRowID -  RowID of the datasheet

Function BIZ_BR_FieldDataEntry_Section4_Validation(objListViewItems,strRowID)
     
    Set objData = FRM_DS_GetTestData("BusinessRule_FieldDataEntry", "FieldRule", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldID")) Then
        strFieldID = Trim(FRM_DS_GetValue(objData, "FieldID"))
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then
        strDescription = Trim(FRM_DS_GetValue(objData, "Description"))
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RuleType")) Then
        strRuleType = Trim(FRM_DS_GetValue(objData, "RuleType"))
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OptionsValue")) Then
        strOptionValues = Trim(FRM_DS_GetValue(objData, "OptionsValue"))   
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PreRequiredFields")) Then
        strPreRequiredFields = Trim(FRM_DS_GetValue(objData, "PreRequiredFields"))   
    Else
        strPreRequiredFields = ""
    End If
	
    '======  Verify  fields ========================
    FRM_Logger_ReportStepEvent "Validating the Section 4 in Field Data Entry Rule ","Data Added should be retained in the Section 4",Null
    intRowCount = objListViewItems.Object.Items.Count
    For i = 0 To intRowCount  - 1
        wait 2
        GUI_List_ValidateCellData objListViewItems, i, 0, strFieldID
        GUI_List_ValidateCellData objListViewItems, i, 1, strDescription
        GUI_List_ValidateCellData objListViewItems, i, 2, strRuleType
        GUI_List_ValidateCellData objListViewItems, i, 3, strOptionValues
        GUI_List_ValidateCellData objListViewItems, i, 4, strPreRequiredFields
    Next
End Function



'Function to Create a new Field Data Entry Rule 
'@code
'    BIZ_BR_FieldDataEntry_CreateNew(strBusinessRuleName)
'@endcode
'@param strBusinessRuleName - Create a Rule with the name passed as parameter

Function BIZ_BR_FieldDataEntry_CreateNew(strBusinessRuleName)
	FRM_Logger_ReportInfoEvent "Create a New Field Data Entry Rule", "Create a New Field Data Entry Rule in Business Rule"&strBusinessRuleName, null
	
	Dim objFieldRule 
	Set objFieldRule = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog")
	
	If objFieldRule.Exist(1) Then
		FRM_Logger_ReportPassEvent "Field Rule Window ","Field Rule Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Field Rule Window ","Field Rule Window Not Loaded", null
	End If

	GUI_SwfEdit_Set objFieldRule.SwfEdit("swfname:=textBoxName"),strBusinessRuleName
	Set objFieldRule = Nothing
End Function



'Function to Add a Field ID Value
'@code
'    BIZ_BR_FieldDataEntry_AddValue_EditableDropdownList(strRowID)
'@endcode
'@param strRowID - Row ID from datasheet

Function BIZ_BR_FieldDataEntry_AddValue_EditableDropdownList(strRowID)
    Dim objFieldRule 
	Set objFieldRule = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog")
    
	'==================Enter MORNET.X67 in the Field ID=============
	Set objData = FRM_DS_GetTestData("BusinessRule_FieldDataEntry", "FieldRule", strRowID)
	
	FRM_Logger_ReportStepEvent "Edit Field Rule Window ","Adding Field ID ",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldID")) Then
        GUI_SwfEdit_Set objFieldRule.SwfWindow("swfname:=EditFieldDialog").SwfEdit("swfname:=textBoxField"),FRM_DS_GetValue(objData, "FieldID")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OptionsValue")) Then
        strOptionValues = Trim(FRM_DS_GetValue(objData, "OptionsValue"))   
        arrOptionValues = split(strOptionValues,",")        
	End If
	
	GUI_SwfComboBox_Select objFieldRule.SwfWindow("swfname:=EditFieldDialog").SwfObject("swfname:=tabRule").SwfComboBox("swfname:=comboBoxType"),"Editable Dropdown List"
	
	For i = 0 To UBound(arrOptionValues)
	   	GUI_SwfButton_Click objFieldRule.SwfWindow("swfname:=EditFieldDialog").SwfObject("swfname:=tabRule").SwfButton("swfname:=newBtn")
	    GUI_SwfEdit_Set objFieldRule.SwfWindow("swfname:=EditFieldDialog").SwfWindow("swfname:=EditDropdownDialog").SwfEdit("swfname:=textBoxOption"),arrOptionValues(i)
	    GUI_SwfButton_Click objFieldRule.SwfWindow("swfname:=EditFieldDialog").SwfWindow("swfname:=EditDropdownDialog").SwfButton("swfname:=okBtn")
    Next

	'=================Validate the dropdown content for the Create Options=====================
	FRM_Logger_ReportStepEvent "Validating the Create Options Content ","Create Options added should be displayed in the List ",Null
	GUI_SwfComboBox_ValidateContent objFieldRule.SwfWindow("swfname:=EditFieldDialog").SwfObject("swfname:=tabRule").SwfList("swfname:=listBoxOptions"), arrOptionValues	
    
    GUI_SwfButton_Click objFieldRule.SwfWindow("swfname:=EditFieldDialog").SwfButton("swfname:=okBtn")
End Function    



'Function to Verify Assign Rights
'@code
'    BIZ_BR_PersonaAccessToLoanAction_VerifyAssignRights(strRowID)
'@endcode
'@param strRowID - Row ID of Data Sheet

Function BIZ_BR_PersonaAccessToLoanAction_VerifyAssignRights(strRowID)
    FRM_Logger_ReportStepEvent "Verifying Assign Rights", "Enable Should Be Selected As Default, And Enable,Disable,Hide SHould Be Present as Assign Rights", null
    
    Dim objPersonaAccessToLoanAction,objData
    Set objPersonaAccessToLoanAction = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanActionAccessRuleDialog").SwfObject("swfname:=panel1")
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToLoanAction", "LoanActions", strRowID)
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Rights")) Then
	   strRights = Trim(FRM_DS_GetValue(objData, "Rights"))
	   arrRights = Split(strRights,",")
    End If
     
    GUI_List_ClickOnCellData objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewRights"),0, 1,True, False, False, "Double"
    
    strRights = objPersonaAccessToLoanAction.SwfComboBox("micClass:=SwfComboBox").getSelection()
    FRM_Logger_ReportStepEvent "Verifying The Default Assign Rights", "Enable Should Be Selected By Default", null
    If Instr(strRights,"Enable") >0 Then
       	FRM_Logger_ReportPassEvent "Verifying The Default Assign Rights", "Enable Is Selected By Default", ""
    Else
    	FRM_Logger_ReportFailEvent "Verifying The Default Assign Rights", "Enable Is Not Selected By Default", ""
    End If
    GUI_SwfComboBox_ValidateContent objPersonaAccessToLoanAction.SwfComboBox("micClass:=SwfComboBox"), arrRights
    GUI_SwfComboBox_Select objPersonaAccessToLoanAction.SwfComboBox("micClass:=SwfComboBox"),"Hide"
    wait 2
    GUI_List_ClickOnCellData objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewRights"), 1,0, True, False, False, "Single"      	
    
    Set objPersonaAccessToLoanAction = Nothing
    Set objData = Nothing
    
End Function



'This function is used to Validate the Content of the Add An Action Grid
'@code
'    Function BIZ_BR_PersonaAccessToLoanAction_AddActionsGrid_ValidateContent(strRowID)
'@endcode
'@param strRowID - RowID  from the Data sheet 

Function BIZ_BR_PersonaAccessToLoanAction_AddActionsGrid_ValidateContent(strRowID)
    FRM_Logger_ReportStepEvent "Validating the Add An Action Grid ","Selected Loan Actions should be retained in the Grid",Null
       
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToLoanAction", "LoanActions", strRowID)
	Set objLoanActionAccess = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanActionAccessRuleDialog")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActions")) Then
	   strLoanActions = Trim(FRM_DS_GetValue(objData, "LoanActions"))
	   arrLoanActions = Split(strLoanActions,",")
    End If
	For i = 0 To UBound(arrLoanActions)
	    GUI_List_ValidateCellData objLoanActionAccess.SwfObject("swfname:=gridViewLoanActions"),i,0,arrLoanActions(i)
    Next
      	       
End Function    

	    
    
'Function to Create a new Persona Access To Loan Action Completion Rule 
'@code
'    BIZ_BR_PersonaAccessToLoanAction_CreateNew(strBusinessRuleName)
'@endcode
'@param strBusinessRuleName - Create a Rule with the name passed as parameter

Function BIZ_BR_PersonaAccessToLoanAction_CreateNew(strBusinessRuleName)
	FRM_Logger_ReportInfoEvent "Create a New Persona Access To Loan Action Rule", "Create a New Persona Access To Loan ActionCompletion Rule in Business Rule"&strBusinessRuleName, null
	
	Dim objMainContainer,objPersonaAccess 

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPersonaAccess = objMainContainer.SwfWindow("swfname:=LoanActionAccessRuleDialog")
	
	If objPersonaAccess.Exist(1) Then
		FRM_Logger_ReportPassEvent "Persona Access To Loan Action Completion Window ","Persona Access To Loan Action Completion Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Persona Access To Loan Action Completion Window ","Persona Access To Loan Action Completion Window Not Loaded", null
	End If
    GUI_Object_ValidateText objPersonaAccess.SwfLabel("swfname:=label5"),"1. Create a Rule Name","Text Label Should Match"	
	GUI_SwfEdit_Set objPersonaAccess.SwfEdit("swfname:=textBoxName"),strBusinessRuleName
	
	Set objMainContainer = Nothing
	Set objPersonaAccess = Nothing
		
	
End Function



'Function to Validate Section 2 in Persona Access To Loan Action Rule UI
'@code
'    BIZ_BR_PersonaAccessToLoanAction_ValidateSection2()
'@endcode  
  
Function BIZ_BR_PersonaAccessToLoanAction_ValidateSection2()
    Dim objPersonaAccessToLoanAction,objChannel
    
    Set objPersonaAccess = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanActionAccessRuleDialog")
	Set objChannel = objPersonaAccess.SwfObject("swfname:=panelChannel").SwfList("swfname:=chkListChannels")
    
    FRM_Logger_ReportInfoEvent "Validate the Section 2  ", "Check the Label Name and the Checked Property", null
    GUI_Object_ValidateText objPersonaAccess.SwfLabel("swfname:=label6"),"2. Select all Channels this rule applies to","Text Label Should Match in Section 2"
    
    intRowCount = objChannel.Object.Items.Count
	For i = 0 To intRowCount - 1
	   strListValue=objChannel.GetItem(i)
	   strListProperty = objChannel.GetItemProperty(i,"Checked")
	   If strListProperty Then
		'Success
		On Error Resume Next
		FRM_Logger_ReportPassEvent "Validate Property", "Checked Property For : " & strListValue & "Is" &strListProperty, Null
		On Error Goto 0						
	   Else
		'Failed
		On Error Resume Next
		FRM_Logger_ReportFailEvent "Validate Property","Checked Property For : " & strListValue & "Is" &strListProperty , Null
		On Error Goto 0
	End If
	
	Next
	
End Function



'Function to Validate Section 3 in PersonaAccessToLoanAction Rule UI
'@code
'    BIZ_BR_PersonaAccessToLoanAction_ValidateSection3(strRowID)
'@endcode    
'@param strRowID = Row ID of datasheet

Function BIZ_BR_PersonaAccessToLoanAction_ValidateSection3(strRowID)
    Dim objRuleCondition 
	Set objRuleCondition = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanActionAccessRuleDialog").SwfObject("swfname:=RuleConditionControl")
    
    FRM_Logger_ReportStepEvent "Persona Access To Loan Action Completion Rule:Section 3", "Click on Yes in Section 3 and Validate the Combo Box Content", null
    GUI_SwfRadioButton_Click objRuleCondition.SwfRadioButton("swfname:=radioCondition")
    
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToLoanAction", "Section3", strRowID)
    '=================Validate the dropdown content for the Section 3 if Yes is Clicked=====================
	FRM_Logger_ReportStepEvent "Section 3 ","Verification of Values in Droplist if Yes is Clicked",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "ConditionValues"))
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOActionValues")) Then
        strTPOActionValues= Trim(FRM_DS_GetValue(objData, "TPOActionValues"))
	End If
	
    arrExpectedValuesForCondition = split(strActionValues,",")
    arrExpectedValuesForTPOActions = split(strTPOActionValues,",")
    GUI_SwfComboBox_ValidateContent objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"), arrExpectedValuesForCondition
    '========================Select TPO Actions from the List================
    FRM_Logger_ReportStepEvent "Loan Action Completion Rule:Section 3", "Select TPO Actions from droplist and Validate the TPO action Values", null
    GUI_SwfComboBox_Select objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"),"TPO Actions"
        
    intRowCount = objRuleCondition.SwfList("swfname:=chkdListTPOActions").Object.Items.Count
	For i = 0 To intRowCount - 1
	   strListValue=objRuleCondition.SwfList("swfname:=chkdListTPOActions").GetItem(i)
	   FRM_VerifyEqual strListValue,arrExpectedValuesForTPOActions(i) ,"TPO Actions in Section 3","TPO Actions should match"
	Next  
	Set objRuleCondition = Nothing
	
End Function



'Function to Add Loan Actions in Add Loan Actions Window 
'@code
'    BIZ_BR_PersonaAccessToLoanAction_AddLoanActions(strRowID)
'@endcode
'@param strRowID - Row ID in BusinessRule_PersonaAccessToLoanAction.xls containing the loan action

Function BIZ_BR_PersonaAccessToLoanAction_AddLoanActions(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_BR_PersonaAccessToLoanAction_AddLoanActions", "Add Loan Actions to 'Persona Access To Loan Action' rule", null
	
	Dim objPersonaAccessToLoanAction,objLoanActions,objData,objscrollBar
 
	Set objPersonaAccessToLoanAction = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanActionAccessRuleDialog")
	Set objLoanActions = objPersonaAccessToLoanAction.SwfWindow("swfname:=AddLoanActionsForPersonaAccess").SwfObject("swfname:=lvwLoanActionList")
	Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToLoanAction", "LoanActions", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActions")) Then
	   strLoanActions = Trim(FRM_DS_GetValue(objData, "LoanActions"))
	   arrLoanActions = Split(strLoanActions,",")
    End If
	
    
	For i = 0 To UBound(arrLoanActions)
		boolExist = GUI_List_ClickRow (objLoanActions, objscrollBar,0, arrLoanActions(i),True,False, False, "Single")
		If boolExist Then
			FRM_Logger_ReportPassEvent "Required LoanAction To be Present in List ","Required LoanAction '"&arrLoanActions(i)&"' Present in the List", null
		Else 
			FRM_Logger_ReportFailEvent "Required LoanAction To be Present in List ","Required LoanAction '"&arrLoanActions(i)&"' Not Present in the List", null
		End If
		objLoanActions.Type micCtrlDwn
	Next
	objLoanActions.Type micCtrlUp
	GUI_SwfButton_Click objPersonaAccessToLoanAction.SwfWindow("swfname:=AddLoanActionsForPersonaAccess").SwfButton("swfname:=btnOK")
	
	Set objPersonaAccessToLoanAction = Nothing
	Set objLoanActions = Nothing
	Set objData = Nothing
	
End Function	



'Function to Remove Loan Actions in Grid
'@code
'    BIZ_BR_PersonaAccessToLoanAction_RemoveLoanActions(strRowID)
'@endcode
'@param strRowID - Row ID in BusinessRule_PersonaAccessToLoanAction.xls containing the loan action

Function BIZ_BR_PersonaAccessToLoanAction_RemoveLoanActions(strRowID)
	Dim objPersonaAccessToLoanAction,objData,objscrollBar
 
	Set objPersonaAccessToLoanAction = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanActionAccessRuleDialog")
	Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToLoanAction", "LoanActions", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanActions")) Then
	   strLoanActions = Trim(FRM_DS_GetValue(objData, "LoanActions"))
	   arrLoanActions = Split(strLoanActions,",")
    End If
	
    
	For i = 0 To UBound(arrLoanActions)
		boolExist = GUI_List_ClickRow (objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewLoanActions"), objscrollBar,0, arrLoanActions(i),True,False, False, "Single")
		If boolExist Then
			FRM_Logger_ReportPassEvent "Required LoanAction To be Present in List ","Required LoanAction"&arrLoanActions(i)&" Present in the List", null
		Else 
			FRM_Logger_ReportFailEvent "Required LoanAction To be Present in List ","Required LoanAction"&arrLoanActions(i)&"Not Present in the List", null
		End If
		objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewLoanActions").Type micCtrlDwn
	Next
	objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewLoanActions").Type micCtrlUp
	
	GUI_SwfButton_Click objPersonaAccessToLoanAction.SwfButton("swfname:=removeBtn")
	
	Set objPersonaAccessToLoanAction = Nothing
	Set objData = Nothing
	
End Function



'Function to Modify Assign Rights for the Persona Selected
'@code
'    BIZ_BR_PersonaaccessToLoanAction_ModifyAssignRightsForPersonaSelected(strPersona)
'@endcode
'@param strPersona - Persona Name for Which Rights Need To Be Changed

Function BIZ_BR_PersonaaccessToLoanAction_ModifyAssignRightsForPersonaSelected(strPersona)
    Dim objPersonaAccessToLoanAction
    Set objPersonaAccessToLoanAction = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanActionAccessRuleDialog").SwfObject("swfname:=panel1")
      
    GUI_List_ClickRow objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewRights"),objScrollBar,0,strPersona,True,False,False,"Single"
    GUI_List_ClickOnCellData objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewRights"),0,1,True, False, False, "Double"
    GUI_SwfComboBox_Select objPersonaAccessToLoanAction.SwfComboBox("micClass:=SwfComboBox"),"Hide"
    wait 2
    Set objPersonaAccessToLoanAction = Nothing
End Function	



'Function to Create a new Persona Access To Persona Access To Fields Rule 
'@code
'    BIZ_BR_PersonaAccessToFields_AddRuleName(strBusinessRuleName)
'@endcode
'@param strBusinessRuleName - Create a Rule with the name passed as parameter

Function BIZ_BR_PersonaAccessToFields_AddRuleName(strBusinessRuleName)
	FRM_Logger_ReportInfoEvent "Create a New Persona Access To Fields Rule", "Create a New Persona Access To Fields Rule in Business Rule"&strBusinessRuleName, null
	
	Dim objMainContainer,objPersonaAccess 

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPersonaAccess = objMainContainer.SwfWindow("swfname:=FieldAccessRuleDialog")
	
	If objPersonaAccess.Exist(1) Then
		FRM_Logger_ReportPassEvent "Persona Access To Fields Window ","Persona Access To Fields Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Persona Access To Fields Window ","Persona Access To Fields Window Not Loaded", null
	End If
    GUI_Object_ValidateText objPersonaAccess.SwfLabel("swfname:=label5"),"1. Create a Rule Name","Text Label Should Match"	
	GUI_SwfEdit_Set objPersonaAccess.SwfEdit("swfname:=textBoxName"),strBusinessRuleName
	
	Set objMainContainer = Nothing
	Set objPersonaAccess = Nothing
		
	
End Function



'Function to Validate Section 2 in Persona Access To Fields Rule UI
'@code
'    BIZ_BR_PersonaAccessToFields_ValidateSection2()
'@endcode 
   
Function BIZ_BR_PersonaAccessToFields_ValidateSection2()
    Dim objPersonaAccessToLoanAction,objChannel
    
    Set objPersonaAccess = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldAccessRuleDialog")
	Set objChannel = objPersonaAccess.SwfObject("swfname:=panelChannel").SwfList("swfname:=chkListChannels")
    
    FRM_Logger_ReportInfoEvent "Validate the Section 2  ", "Check the Label Name and the Checked Property", null
    GUI_Object_ValidateText objPersonaAccess.SwfLabel("swfname:=label6"),"2. Select all Channels this rule applies to","Text Label Should Match in Section 2"
    
    intRowCount = objChannel.Object.Items.Count
	For i = 0 To intRowCount - 1
	   strListValue=objChannel.GetItem(i)
	   strListProperty = objChannel.GetItemProperty(i,"Checked")
	   If strListProperty Then
		'Success
		On Error Resume Next
		FRM_Logger_ReportPassEvent "Validate Property", "Checked Property For : " & strListValue & "Is" &strListProperty, Null
		On Error Goto 0						
	   Else
		'Failed
		On Error Resume Next
		FRM_Logger_ReportFailEvent "Validate Property","Checked Property For : " & strListValue & "Is" &strListProperty , Null
		On Error Goto 0
	End If
	
	Next
	
End Function



'Function to Validate Section 3 in PersonaAccessToFields Rule UI
'@code
'    BIZ_BR_PersonaAccessToFields_ValidateSection3(strRowID)
'@endcode    
'@param strRowID = Row ID of datasheet

Function BIZ_BR_PersonaAccessToFields_ValidateSection3(strRowID)
    Dim objRuleCondition 
	Set objRuleCondition = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldAccessRuleDialog").SwfObject("swfname:=RuleConditionControl")
    
    FRM_Logger_ReportStepEvent "Persona Access To Fields Rule:Section 3", "Click on Yes in Section 3 and Validate the Combo Box Content", null
    GUI_SwfRadioButton_Click objRuleCondition.SwfRadioButton("swfname:=radioCondition")
    
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToFields", "Section3", strRowID)
    '=================Validate the dropdown content for the Section 3 if Yes is Clicked=====================
	FRM_Logger_ReportStepEvent "Section 3 ","Verification of Values in Droplist if Yes is Clicked",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "ConditionValues"))
        arrExpectedValuesForCondition = split(strActionValues,",")
        GUI_SwfComboBox_ValidateContent objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"), arrExpectedValuesForCondition
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOActionValues")) Then
        strTPOActionValues= Trim(FRM_DS_GetValue(objData, "TPOActionValues"))
        arrExpectedValuesForTPOActions = split(strTPOActionValues,",")
        '========================Select TPO Actions from the List================
        FRM_Logger_ReportStepEvent "Loan Action Completion Rule:Section 3", "Select TPO Actions from droplist and Validate the TPO action Values", null
        GUI_SwfComboBox_Select objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"),"TPO Actions"
        
        intRowCount = objRuleCondition.SwfList("swfname:=chkdListTPOActions").Object.Items.Count
        For i = 0 To intRowCount - 1
            strListValue=objRuleCondition.SwfList("swfname:=chkdListTPOActions").GetItem(i)
            FRM_VerifyEqual strListValue,arrExpectedValuesForTPOActions(i) ,"TPO Actions in Section 3","TPO Actions should match"
        Next  
	End If
	   
	Set objRuleCondition = Nothing
	
End Function



'This function is used to Validate the Content of the Add a Field Grid
'@code
'    Function BIZ_BR_PersonaAccessToFields_AddaFieldGrid_ValidateContent(strRowID2)
'@endcode
'@param strRowID - RowID  from the Data sheet 

Function BIZ_BR_PersonaAccessToFields_AddaFieldGrid_ValidateContent(strRowID2)
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToFields", "FieldID", strRowID2)
	Set objPersonaAccess = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldAccessRuleDialog")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ID")) Then
	    strID = Trim(FRM_DS_GetValue(objData, "ID"))
        arrID = Split(strID,",")
    End If
	For i = 0 To UBound(arrID)
	    GUI_List_ValidateCellData objPersonaAccess.SwfObject("swfname:=gridViewFields"),i,0,arrID(i)
    Next
      	       
End Function



'Function to Verify Assign Rights
'    BIZ_BR_PersonaAccessToFields_VerifyAssignRights(strRowIDRights)
'@endcode
'@param strRowID - Row ID of Data Sheet
'BIZ_BR_PersonaAccessToFields_VerifyAssignRights "TC-02-AssignRights"

Function BIZ_BR_PersonaAccessToFields_VerifyAssignRights(strRowIDRights)
    FRM_Logger_ReportStepEvent "Verifying Assign Rights", "Hide , View Only/Disabled,Edit/Enabled, Does Not Apply SHould Be Present as Assign Rights", null
    
    Dim objPersonaAccessToFields,objData
    Set objPersonaAccessToFields = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldAccessRuleDialog").SwfObject("swfname:=panelSection4")
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToFields", "FieldID", strRowIDRights)
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Rights")) Then
	   strRights = Trim(FRM_DS_GetValue(objData, "Rights"))
	   arrRights = Split(strRights,",")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DefaultRights")) Then
	   strDefaultRights = Trim(FRM_DS_GetValue(objData, "DefaultRights"))
	  
    End If
    
    GUI_List_ClickOnCellData objPersonaAccessToFields.SwfObject("swfname:=gridViewRights"),0, 1,True, False, False, "Double"
    
    GUI_SwfComboBox_ValidateContent objPersonaAccessToFields.SwfComboBox("micClass:=SwfComboBox"), arrRights
    GUI_SwfComboBox_Select objPersonaAccessToFields.SwfComboBox("micClass:=SwfComboBox"),"Hide"
    wait 2
    GUI_List_ClickOnCellData objPersonaAccessToFields.SwfObject("swfname:=gridViewRights"), 1,0, True, False, False, "Single"      	
    
    Set objPersonaAccessToFields = Nothing
    Set objData = Nothing
    
End Function



'Function to Validate Section 3 in Field Data Entry Rule UI
'@code
'    BIZ_BR_FieldDataEntry_ValidateSection3(strRowID)
'@endcode    
'@param strRowID = Row ID of datasheet

Function BIZ_BR_FieldDataEntry_ValidateSection3(strRowID)
    Dim objRuleCondition 
	Set objRuleCondition = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfObject("swfname:=RuleConditionControl")
    
    FRM_Logger_ReportStepEvent "Field Data Entry Rule:Section 3", "Click on Yes in Section 3 and Validate the Combo Box Content", null
    GUI_SwfRadioButton_Click objRuleCondition.SwfRadioButton("swfname:=radioCondition")
    
    Set objData = FRM_DS_GetTestData("BusinessRule_FieldDataEntry", "Section3", strRowID)
    '=================Validate the dropdown content for the Section 3 if Yes is Clicked=====================
	FRM_Logger_ReportStepEvent "Section 3 ","Verification of Values in Droplist if Yes is Clicked",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "ConditionValues"))
        arrExpectedValuesForCondition = split(strActionValues,",")
        GUI_SwfComboBox_ValidateContent objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"), arrExpectedValuesForCondition
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOActionValues")) Then
        strTPOActionValues= Trim(FRM_DS_GetValue(objData, "TPOActionValues"))
        arrExpectedValuesForTPOActions = split(strTPOActionValues,",")
        '========================Select TPO Actions from the List================
        FRM_Logger_ReportStepEvent "Field Data Entry Rule:Section 3", "Select TPO Actions from droplist and Validate the TPO action Values", null
        GUI_SwfComboBox_Select objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"),"TPO Actions"
        
        intRowCount = objRuleCondition.SwfList("swfname:=chkdListTPOActions").Object.Items.Count
        For i = 0 To intRowCount - 1
            strListValue=objRuleCondition.SwfList("swfname:=chkdListTPOActions").GetItem(i)
            FRM_VerifyEqual strListValue,arrExpectedValuesForTPOActions(i) ,"TPO Actions in Section 3","TPO Actions should match"
        Next  
        FRM_Logger_ReportStepEvent "Field Data Entry Rule:Section 3", "Validate the Any Of, All Of Values", null
        strActionTypes= Trim(FRM_DS_GetValue(objData, "ActionType"))
        arrActionTypes = split(strActionTypes,",")
        GUI_SwfComboBox_Select objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboCondition"),"Any of"
        GUI_SwfComboBox_ValidateContent objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboCondition"), arrActionTypes
        
	End If
	   
	Set objRuleCondition = Nothing
	
End Function



'Function to Validate Section 3 in PersonaAccessToLoans Rule UI
'@code
'    BIZ_BR_PersonaAccessToLoans_ValidateSection3(strRowID)
'@endcode    
'@param strRowID = Row ID of datasheet

Function BIZ_BR_PersonaAccessToLoans_ValidateSection3(strRowID)
    Dim objRuleCondition 
	Set objRuleCondition = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanAccessRuleDialog").SwfObject("swfname:=RuleConditionControl")
    
    FRM_Logger_ReportStepEvent "Persona Access To Loans Rule:Section 3", "Click on Yes in Section 3 and Validate the Combo Box Content", null
    GUI_SwfRadioButton_Click objRuleCondition.SwfRadioButton("swfname:=radioCondition")
    
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToFields", "Section3", strRowID)
    '=================Validate the dropdown content for the Section 3 if Yes is Clicked=====================
	FRM_Logger_ReportStepEvent "Section 3 ","Verification of Values in Droplist if Yes is Clicked",Null
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValues")) Then
        strActionValues= Trim(FRM_DS_GetValue(objData, "ConditionValues"))
        arrExpectedValuesForCondition = split(strActionValues,",")
        GUI_SwfComboBox_ValidateContent objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"), arrExpectedValuesForCondition
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOActionValues")) Then
        strTPOActionValues= Trim(FRM_DS_GetValue(objData, "TPOActionValues"))
        arrExpectedValuesForTPOActions = split(strTPOActionValues,",")
        '========================Select TPO Actions from the List================
        FRM_Logger_ReportStepEvent "Loan Action Completion Rule:Section 3", "Select TPO Actions from droplist and Validate the TPO action Values", null
        GUI_SwfComboBox_Select objRuleCondition.SwfObject("swfname:=panelConditions").SwfComboBox("swfname:=comboType"),"TPO Actions"
        
        intRowCount = objRuleCondition.SwfList("swfname:=chkdListTPOActions").Object.Items.Count
        For i = 0 To intRowCount - 1
            strListValue=objRuleCondition.SwfList("swfname:=chkdListTPOActions").GetItem(i)
            FRM_VerifyEqual strListValue,arrExpectedValuesForTPOActions(i) ,"TPO Actions in Section 3","TPO Actions should match"
        Next  
	End If
	   
	Set objRuleCondition = Nothing
	
End Function



'Function to Create a new Persona Access To Loans Rule 
'@code
'    BIZ_BR_PersonaAccessToLoans_AddRuleName(strBusinessRuleName)
'@endcode
'@param strBusinessRuleName - Create a Rule with the name passed as parameter

Function BIZ_BR_PersonaAccessToLoans_AddRuleName(strBusinessRuleName)
	FRM_Logger_ReportInfoEvent "Create a New Persona Access To Loans Rule", "Create a New Persona Access To Loans Rule in Business Rule"&strBusinessRuleName, null
	
	Dim objMainContainer,objPersonaAccess 

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPersonaAccess = objMainContainer.SwfWindow("swfname:=LoanAccessRuleDialog")
	
	If objPersonaAccess.Exist(10) Then
		FRM_Logger_ReportPassEvent "Persona Access To Loans Window ","Persona Access To  Loans Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Persona Access To Loans Window ","Persona Access To Loans Window Not Loaded", null
	End If
    GUI_Object_ValidateText objPersonaAccess.SwfLabel("swfname:=label1"),"1. Create a Rule Name","Text Label Should Match"	
	GUI_SwfEdit_Set objPersonaAccess.SwfEdit("swfname:=textBoxName"),strBusinessRuleName
	
	Set objMainContainer = Nothing
	Set objPersonaAccess = Nothing
		
	
End Function



'Function to Verify Assign Rights
'@code
'    BIZ_BR_PersonaAccessToLoan_VerifyAssignRights(strRowID,intYValue)
'@endcode
'@param strRowID - Row ID of Data Sheet

Function BIZ_BR_PersonaAccessToLoan_VerifyAssignRights(strRowID,intYValue)
    FRM_Logger_ReportStepEvent "Verifying Assign Rights", "Edit Should Be Selected As Default, And View Only,Custom,Does Not Apply Should Be Present as Assign Rights", null
    
    Dim objPersonaAccessToLoan,objData
    Set objPersonaAccessToLoan = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanAccessRuleDialog").SwfObject("swfname:=panelSection4")
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccessToLoan", "LoanActions", strRowID)
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Rights")) Then
	   strRights = Trim(FRM_DS_GetValue(objData, "Rights"))
	   arrRights = Split(strRights,",")
    End If
     
    Y_axis = Cint(Trim(intYValue))
    strRights = objPersonaAccessToLoan.SwfListView("swfname:=emListViewRights").SwfComboBox("swfname:=comboBoxRights","abs_x:=543","abs_y:="&Y_axis).getSelection()
    FRM_Logger_ReportStepEvent "Verifying The Default Assign Rights", "Edit Should Be Selected By Default", null
    If Instr(strRights,"Edit") >0 Then
       	FRM_Logger_ReportPassEvent "Verifying The Default Assign Rights", "Edit Is Selected By Default", ""
    Else
    	FRM_Logger_ReportFailEvent "Verifying The Default Assign Rights", "Edit Is Not Selected By Default", ""
    End If
    
    GUI_SwfComboBox_ValidateContent objPersonaAccessToLoan.SwfListView("swfname:=emListViewRights").SwfComboBox("swfname:=comboBoxRights","abs_x:=543","abs_y:="&Y_axis), arrRights
    
    Set objPersonaAccessToLoan = Nothing
    Set objData = Nothing
    
End Function



'This function is used to Edit existing Automated Condition rule
'@code
'    Function BIZ_BR_AutomatedConditions_EditRule(strRowID)
'@endcode
'@param strRowID - Row Id passed from BusinessRule_AutomatedCondition sheet

Function BIZ_BR_AutomatedConditions_EditRule(strRuleName, strRowID)
	FRM_Logger_ReportInfoEvent "Edit Automated Condition", "Edit existing Automated Condition "&strRuleName, null
	
	Dim objMainContainer

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_List_ClickRow objMainContainer.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single"
	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnEdit")
	
	BIZ_BR_AutomatedConditions_SetAutomatedCondition strRowID
	
	Set objMainContainer = Nothing
End Function



'This function is used to create new Automated Condition rule
'@code
'    Function BIZ_BR_AutomatedConditions_CreateNew(strRowID)
'@endcode
'@param strRowID - Row Id passed from BusinessRule_AutomatedCondition sheet

Function BIZ_BR_AutomatedConditions_CreateNew(strRowID)
	FRM_Logger_ReportInfoEvent "Create a new Automated Condition", "Create a new Automated Condition in Business Rule", null
	
	Dim objMainContainer

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnNew")
	
    '====== 'Set data in Automated Condition rule ======
	strRuleName=BIZ_BR_AutomatedConditions_SetAutomatedCondition(strRowID)
	
	Set objMainContainer = Nothing
	BIZ_BR_AutomatedConditions_CreateNew = strRuleName
End Function



'This function is used to set data in Automated Condition rule
'@code
'	Function BIZ_BR_AutomatedConditions_SetAutomatedCondition(strRowID)
'@endcode
'@param strRowID - Row Id passed from BusinessRule_AutomatedCondition sheet

Function BIZ_BR_AutomatedConditions_SetAutomatedCondition(strRowID)
	FRM_Logger_ReportInfoEvent "Set Automated Condition", "Set Automated Condition in Business Rule", null
	
	Dim objMainContainer,objAutomatedCondition, objSelectConditionForm, objConditionName, objScrollBar,  objData

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objAutomatedCondition = objMainContainer.SwfWindow("swfname:=AutomatedConditionEditor")
	Set objSelectConditionForm = objAutomatedCondition.SwfWindow("swfname:=SelectConditionForm")
	Set objConditionName = objSelectConditionForm.SwfObject("swfname:=gridViewConditions")
	Set objAdvancedConditionEditor = objAutomatedCondition.SwfWindow("swfname:=AdvConditionEditor")
	Set objAddSearchFilter = objAdvancedConditionEditor.SwfWindow("swfname:=AddEditFilterDialog")
	Set objScrollBar = objSelectConditionForm.SwfScrollbar("swfname:=vPanelScrollBar")
	Set objData = FRM_DS_GetTestData("BusinessRule_AutomatedCondition", "SetAutomatedCondition", strRowID)
	
    strRuleName=FRM_DS_GetValue(objData, "AutomatedConditionName")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AutomatedConditionName")) Then        
        GUI_SwfEdit_Set objAutomatedCondition.SwfEdit("swfname:=textBoxName"), strRuleName        		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then        
        GUI_SwfList_SetCheckbox objAutomatedCondition.SwfList("swfname:=chkListChannels"),FRM_DS_GetValue(objData,"Channel"),FRM_DS_GetValue(objData,"ChannelValue") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplyThisRule")) Then        
        If FRM_DS_GetValue(objData,"ApplyThisRule") = "No" Then
        	GUI_SwfRadioButton_Click objAutomatedCondition.SwfRadioButton("swfname:=radioGeneral")
        ElseIf FRM_DS_GetValue(objData,"ApplyThisRule") = "Yes" Then
        	GUI_SwfRadioButton_Click objAutomatedCondition.SwfRadioButton("swfname:=radioCondition")
        End If
     End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then        
        GUI_SwfComboBox_Select objAutomatedCondition.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "Condition")        		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CopyAndPasteCondition")) Then
		GUI_SwfEditor_Type objAutomatedCondition.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData,"CopyAndPasteCondition") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TextCondition")) Then        
        GUI_SwfObject_Click objAutomatedCondition.SwfObject("swfname:=btnSelect")
		GUI_List_ClickRow objAutomatedCondition.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory"), Null, "Name", FRM_DS_GetValue(objData, "TextCondition"), True, False, False, "Single"
		GUI_SwfButton_Click objAutomatedCondition.SwfWindow("swfname:=TemplateSelectionDialog").SwfButton("swfname:=selectBtn")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ComboCondition2")) Then        
        GUI_SwfObject_Click	objAutomatedCondition.SwfObject("swfname:=btnSelect")
        GUI_List_ClickRow objAutomatedCondition.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"),Null,0,FRM_DS_GetValue(objData, "ComboCondition2"),True,False,False,"Single"
        GUI_SwfButton_Click objAutomatedCondition.SwfWindow("swfname:=SelectCurrentRoleForm").SwfButton("swfname:=btnOK")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ComboCondition")) Then        
        GUI_SwfComboBox_Select objAutomatedCondition.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "ComboCondition")        		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldId")) Then    
		GUI_SwfObject_Click objAutomatedCondition.SwfObject("swfname:=btnSelect")
		GUI_SwfObject_Click objAdvancedConditionEditor.SwfObject("swfname:=btnAddFilter")
		GUI_SwfEdit_Set  objAddSearchFilter.SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "FieldId")
		
		Set WshShell = CreateObject("WScript.Shell")
		WshShell.SendKeys "{TAB}"
		Set WshShell = Nothing
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then        
        GUI_SwfEdit_Set  objAddSearchFilter.SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "txtDescription")      		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Operator")) Then        
        GUI_SwfComboBox_Select  objAddSearchFilter.SwfComboBox("swfname:=cboOperator"), FRM_DS_GetValue(objData, "Operator")      		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Value")) Then        
        GUI_SwfEdit_Set  objAddSearchFilter.SwfEdit("swfname:=txtStringValue"), FRM_DS_GetValue(objData, "Value")      		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldId")) Then    
		GUI_SwfButton_Click objAddSearchFilter.SwfButton("swfname:=btnOK")
		GUI_SwfButton_Click objAdvancedConditionEditor.SwfButton("swfname:=btnOK")
	End If
	
	GUI_SwfButton_Click objAutomatedCondition.SwfButton("swfname:=addBtn")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionType")) Then        
        GUI_SwfComboBox_Select objSelectConditionForm.SwfComboBox("swfname:=cboConditionType"), FRM_DS_GetValue(objData, "ConditionType")        		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionName")) Then        
        GUI_List_ClickRow objConditionName,objScrollBar,0, FRM_DS_GetValue(objData, "ConditionName"),True,False,False,"Single"
        GUI_SwfButton_Click objSelectConditionForm.SwfButton("swfname:=btnAdd")
    Else
        GUI_SwfButton_Click objSelectConditionForm.SwfButton("swfname:=btnCancel")
	End If
	
	GUI_SwfButton_Click objAutomatedCondition.SwfButton("swfname:=okBtn")
	
	Set objMainContainer = Nothing
	Set objAutomatedCondition = Nothing
	Set objSelectConditionForm = Nothing
	Set objConditionName = Nothing
	Set objScrollBar = Nothing
	Set objData = Nothing
    
    BIZ_BR_AutomatedConditions_SetAutomatedCondition = strRuleName
		
End Function



'This function is used to activate in Automated Condition rule
'@code
'	Function BIZ_BR_AutomatedConditions_ActivateAutomatedCondition(strConditionName)
'@endcode
'@param strConditionName - Automated Condition name that needs to be activated

Function BIZ_BR_AutomatedConditions_ActivateAutomatedCondition(strConditionName)
	
	FRM_Logger_ReportInfoEvent "Activate Automated Condition", "Activate Automated Condition in Business Rule: " & strConditionName, null
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objAutomatedCondition = objMainContainer.SwfObject("swfname:=listViewRule")
	Set objScrollBar = objMainContainer.SwfScrollBar("swfname:=vPanelScrollBar")
	
	Wait 3

	GUI_List_ClickRow objAutomatedCondition, objScrollBar, 0, strConditionName, True, False, False, "Single"
	GUI_SwfButton_Click objMainContainer.SwfButton("swfname:=activeBtn")
	wait 3

	Set objMainContainer = Nothing
	Set objAutomatedCondition = Nothing
	Set objScrollBar = Nothing
		
End Function



'This function is used to delete Automated Condition rule
'@code
'	Function BIZ_BR_AutomatedConditions_DeleteAutomatedCondition(strConditionName)
'@endcode
'@param strConditionName - Automated Condition name that needs to be deleted

Function BIZ_BR_AutomatedConditions_DeleteAutomatedCondition(strConditionName)

	FRM_Logger_ReportInfoEvent "Delete Automated Condition", "Delete Automated Condition in Business Rule: " & strConditionName, null
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objAutomatedCondition = objMainContainer.SwfObject("swfname:=listViewRule")
	Set objScrollBar = objMainContainer.SwfScrollBar("swfname:=vPanelScrollBar")
	
	boolexist = GUI_List_ClickRow (objAutomatedCondition, objScrollBar, 0, strConditionName, True, False, False, "Single")
	
	If boolexist Then
		GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Yes ""
	End If
	
	Set objMainContainer = Nothing
	Set objAutomatedCondition = Nothing
	Set objScrollBar = Nothing
	
End Function



'This function is used to export Automated Condition rule
'@code
'	Function BIZ_BR_AutomatedConditions_ExportAutomatedCondition(strConditionName)
'@endcode
'@param strConditionName - Automated Condition name that needs to be exported

Function BIZ_BR_AutomatedConditions_ExportAutomatedCondition(strConditionName)
	
	FRM_Logger_ReportInfoEvent "Export Automated Condition", "Export Automated Condition: " & strConditionName, null
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objAutomatedCondition = objMainContainer.SwfObject("swfname:=listViewRule")
	Set objScrollBar = objMainContainer.SwfScrollBar("swfname:=vPanelScrollBar")
	
	boolexist = GUI_List_ClickRow (objAutomatedCondition, objScrollBar, 0, strConditionName, True, False, False, "Single")
	
	If boolexist Then
		GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnExport")
		
		'============================= Save the file in Test Report folder ============================
		strFileLocation = FRM_RT_ReportDirPath & "BR_AutomatedCondition_" & "E2E_TestScenario1" & UTIL_Date_Now_mmddyyyy_HHnnss
		FRM_Logger_ReportInfoEvent "Save the file", "Save file at location: " & strFileLocation, Null
		
		Set myObj = Description.Create
		myObj("micclass").value = "WinEdit"
		myObj("attached text").value = "File name:"
		Set objChildObject = SwfWindow("swfname:=MainForm").Swfwindow("swfname:=SetUpContainer").Dialog("text:=Save As").ChildObjects (myobj)
		objChildObject(0).Type strFileLocation
		GUI_WinButton_Click SwfWindow("swfname:=MainForm").Swfwindow("swfname:=SetUpContainer").Dialog("text:=Save As").WinButton("text:=&Save")
		
		Set myObj = Nothing
		Set objChildObject = Nothing
	Else
		FRM_Logger_ReportInfoEvent "Export Automated Condition", "Export Automated Condition doesn't exist in Business Rule: " & strConditionName, null
	End If
	
	Set objMainContainer = Nothing
	Set objAutomatedCondition = Nothing
	Set objScrollBar = Nothing
	
End Function



'This function is used to import Automated Condition rule
'@code
'	Function BIZ_BR_AutomatedConditions_ImportAutomatedCondition(strFileName)
'@endcode
'@param strFileName - Automated Condition name that needs to be imported

Function BIZ_BR_AutomatedConditions_ImportAutomatedCondition(strFileName)
	
	FRM_Logger_ReportInfoEvent "Import Automated Condition", "Import Automated Condition: " & strConditionName, null
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objBusinessRuleImport = objMainContainer.SwfWindow("swfname:=ImportBusinessRuleDialog")

	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnImport")
	Set myObj = Description.Create
	myObj("micclass").value = "WinEdit"
	myObj("attached text").value = "File &name:"
	Set objChildObject = SwfWindow("swfname:=MainForm").Swfwindow("swfname:=SetUpContainer").Dialog("text:=Open").ChildObjects (myobj)
	objChildObject(0).Type strFileName
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").Swfwindow("swfname:=SetUpContainer").Dialog("text:=Open").WinButton("text:=&Open")
	
	wait 3
	GUI_SwfButton_Click objBusinessRuleImport.SwfButton("swfname:=btnValidateImport")
	wait 3
	GUI_SwfButton_Click objBusinessRuleImport.SwfButton("swfname:=btnValidateImport")
	
	Set objMainContainer = Nothing
	Set objBusinessRuleImport = Nothing
	
End Function



'This function is used to create new Milestone Completion rule
'@code
'    Function BIZ_BR_MilestoneCompletion_CreateNew(strRowID)
'@endcode
'@param strRowID - Row Id passed from BusinessRule_MilestoneCompletion sheet

Function BIZ_BR_MilestoneCompletion_CreateNew(strRowID)
	FRM_Logger_ReportInfoEvent "Create a new Milestone Completion", "Create a new Milestone Completion in Business Rule", null
	
	Dim objMainView

	Set objMainView = SwfWindow("swfname:=MainForm")
	GUI_SwfObject_Click objMainView.SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")
	
	strRuleName=BIZ_BR_MilestoneCompletion_SetMilestoneCompletion(objMainView, strRowID)
	
	Set objMainView = Nothing
     
    BIZ_BR_MilestoneCompletion_CreateNew   = strRuleName  
     
End Function



'This function is used to set data in Milestone Completion rule
'@code
'	Function BIZ_BR_MilestoneCompletion_SetMilestoneCompletion(objMainView, strRowID)
'@endcode
'@param strRowID - Row Id passed from BusinessRule_MilestoneCompletion sheet

Function BIZ_BR_MilestoneCompletion_SetMilestoneCompletion(objMainView, strRowID)
	FRM_Logger_ReportInfoEvent "Set Milestone Completion", "Set Milestone Completion in Business Rule", null
	
	Dim objMainContainer,objMilestoneCompletion, objSelectConditionForm, objConditionName, objScrollBar,  objData

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMilestoneCompletion = objMainView.SwfWindow("swfname:=ConditionRuleDialog")
	Set objAddRequiredDocs = objMilestoneCompletion.SwfWindow("swfname:=AddFormBaseDialog")
	Set objAdvancedConditionEditor = objMilestoneCompletion.SwfWindow("swfname:=AdvConditionEditor")
	Set objAddSearchFilter = objAdvancedConditionEditor.SwfWindow("swfname:=AddEditFilterDialog")
		
	Set objData = FRM_DS_GetTestData("BusinessRule_MilestoneCompletion", "SetMilestoneCompletion", strRowID)
	
    strRuleName = FRM_DS_GetValue(objData, "MilestoneCompletionName")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MilestoneCompletionName")) Then        
        GUI_SwfEdit_Set objMilestoneCompletion.SwfEdit("swfname:=textBoxName"), strRuleName        		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then        
        GUI_SwfList_SetCheckbox objMilestoneCompletion.SwfList("swfname:=chkListChannels"),FRM_DS_GetValue(objData,"Channel"),FRM_DS_GetValue(objData,"ChannelValue") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ApplyThisRule")) Then        
        If FRM_DS_GetValue(objData,"ApplyThisRule") = "No" Then
        	GUI_SwfRadioButton_Click objMilestoneCompletion.SwfRadioButton("swfname:=radioGeneral")
        ElseIf FRM_DS_GetValue(objData,"ApplyThisRule") = "Yes" Then
        	GUI_SwfRadioButton_Click objMilestoneCompletion.SwfRadioButton("swfname:=radioCondition")
        End If
     End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then        
        GUI_SwfComboBox_Select objMilestoneCompletion.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "Condition")        		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CopyAndPasteCondition")) Then
		GUI_SwfEditor_Type objMilestoneCompletion.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData,"CopyAndPasteCondition") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TextCondition")) Then        
        GUI_SwfObject_Click objMilestoneCompletion.SwfObject("swfname:=btnSelect")
		GUI_List_ClickRow objMilestoneCompletion.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory"), Null, "Name", FRM_DS_GetValue(objData, "TextCondition"), True, False, False, "Single"
		GUI_SwfButton_Click objMilestoneCompletion.SwfWindow("swfname:=TemplateSelectionDialog").SwfButton("swfname:=selectBtn")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ComboCondition2")) Then        
        GUI_SwfObject_Click	objMilestoneCompletion.SwfObject("swfname:=btnSelect")
        GUI_List_ClickRow objMilestoneCompletion.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"),Null,0,FRM_DS_GetValue(objData, "ComboCondition2"),True,False,False,"Single"
        GUI_SwfButton_Click objMilestoneCompletion.SwfWindow("swfname:=SelectCurrentRoleForm").SwfButton("swfname:=btnOK")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ComboCondition")) Then        
        GUI_SwfComboBox_Select objMilestoneCompletion.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "ComboCondition")        		
	End If
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldId")) Then    
		GUI_SwfObject_Click objMilestoneCompletion.SwfObject("swfname:=btnSelect")
		GUI_SwfObject_Click objAdvancedConditionEditor.SwfObject("swfname:=btnAddFilter")
		GUI_SwfEdit_Set  objAddSearchFilter.SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "FieldId")
		
		Set WshShell = CreateObject("WScript.Shell")
		WshShell.SendKeys "{TAB}"
		Set WshShell = Nothing
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then        
        GUI_SwfEdit_Set  objAddSearchFilter.SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "txtDescription")      		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Operator")) Then        
        GUI_SwfComboBox_Select  objAddSearchFilter.SwfComboBox("swfname:=cboOperator"), FRM_DS_GetValue(objData, "Operator")      		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Value")) Then        
        GUI_SwfEdit_Set  objAddSearchFilter.SwfEdit("swfname:=txtStringValue"), FRM_DS_GetValue(objData, "Value")      		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FieldId")) Then    
		GUI_SwfButton_Click objAddSearchFilter.SwfButton("swfname:=btnOK")
		GUI_SwfButton_Click objAdvancedConditionEditor.SwfButton("swfname:=btnOK")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredDocs")) Then     
		GUI_ClickElement_ByGetTextLocation objMilestoneCompletion.SwfObject("swfname:=tabControl1"), "Required Docs"
		GUI_SwfButton_Click objMilestoneCompletion.SwfButton("swfname:=addDocBtn")	
        GUI_List_ClickRow objAddRequiredDocs.SwfObject("swfname:=gridViewAll"),Null,0, FRM_DS_GetValue(objData, "RequiredDocs"),False,False,False,"Single"      		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ForMilestone_Docs")) Then        
        GUI_SwfComboBox_Select objAddRequiredDocs.SwfComboBox("swfname:=cboRuleValues"), FRM_DS_GetValue(objData, "ForMilestone_Docs")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredDocs")) Then      
		GUI_SwfButton_Click objAddRequiredDocs.SwfButton("swfname:=okBtn")			
	End If
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredTasks")) Then     
		GUI_SwfObject_SelectTab objMilestoneCompletion.SwfObject("swfname:=tabControl1"), "Requited Tasks"
		GUI_SwfButton_Click objMilestoneCompletion.SwfButton("swfname:=btnAddTask")	
        GUI_List_ClickRow objMilestoneCompletion.SwfWindow("swfname:=AddTasks").SwfObject("swfname:=lvwTasks"),Null,0, FRM_DS_GetValue(objData, "RequiredTasks"),True,False,False,"Single"      		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ForMilestone_Tasks")) Then        
        GUI_SwfComboBox_Select objMilestoneCompletion.SwfWindow("swfname:=AddTasks").SwfComboBox("swfname:=cboMilestone"), FRM_DS_GetValue(objData, "ForMilestone_Tasks")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredTasks")) Then      
		GUI_SwfButton_Click objMilestoneCompletion.SwfWindow("swfname:=AddTasks").SwfButton("swfname:=btnOK")			
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredFields")) Then     
		GUI_SwfObject_SelectTab objMilestoneCompletion.SwfObject("swfname:=tabControl1"), "Requited Fields"
		GUI_SwfButton_Click objMilestoneCompletion.SwfButton("swfname:=addFieldBtn")	
        GUI_SwfEdit_Set objMilestoneCompletion.SwfWindow("swfname:=AddFields").SwfEdit("swfname:=textBoxID1"), 	FRM_DS_GetValue(objData, "RequiredFields")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ForMilestone_Fields")) Then        
        GUI_SwfComboBox_Select objMilestoneCompletion.SwfWindow("swfname:=AddFields").SwfComboBox("swfname:=cboMilestones"), FRM_DS_GetValue(objData, "ForMilestone_Fields")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RequiredFields")) Then      
		GUI_SwfButton_Click objMilestoneCompletion.SwfWindow("swfname:=AddFields").SwfButton("swfname:=okBtn")			
	End If
	
	GUI_SwfButton_Click objMilestoneCompletion.SwfButton("swfname:=okBtn")
	
	Set objMainContainer = Nothing
	Set objMilestoneCompletion = Nothing
	Set objSelectConditionForm = Nothing
	Set objConditionName = Nothing
	Set objScrollBar = Nothing
	Set objData = Nothing
    
    BIZ_BR_MilestoneCompletion_SetMilestoneCompletion = strRuleName
		
End Function



'This function is used to activate in Milestone Completion rule
'@code
'	Function BIZ_BR_MilestoneCompletion_ActivateMilestoneCompletion(strConditionName)
'@endcode
'@param strConditionName - Milestone Completion name that needs to be activated

Function BIZ_BR_MilestoneCompletion_ActivateMilestoneCompletion(strConditionName)
	
	FRM_Logger_ReportInfoEvent "Activate Milestone Completion", "Activate Milestone Completion in Business Rule: " & strConditionName, null
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objScrollBar = objMainContainer.SwfScrollBar("swfname:=vPanelScrollBar")
	
	Wait 3

	GUI_List_ClickRow objMainContainer, objScrollBar, 0, strConditionName, True, False, False, "Single"
	GUI_SwfButton_Click objMainContainer.SwfButton("swfname:=activeBtn")
	wait 3

	Set objMainContainer = Nothing
	Set objScrollBar = Nothing
		
End Function



'This function is used to delete Milestone Completion rule
'@code
'	Function BIZ_BR_MilestoneCompletion_DeleteMilestoneCompletion(strConditionName)
'@endcode
'@param strConditionName - Milestone Completion name that needs to be deleted

Function BIZ_BR_MilestoneCompletion_DeleteMilestoneCompletion(strConditionName)

	FRM_Logger_ReportInfoEvent "Delete Milestone Completion", "Delete Milestone Completion in Business Rule: " & strConditionName, null
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objScrollBar = objMainContainer.SwfScrollBar("swfname:=vPanelScrollBar")
	
	boolexist = GUI_List_ClickRow (objMainContainer.SwfObject("swfname:=listViewRule"), objScrollBar, 0, strConditionName, True, False, False, "Single")
	
	If boolexist Then
		GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Yes ""
	End If
	
	Set objMainContainer = Nothing
	Set objScrollBar = Nothing
	
End Function



'This function is used to export Milestone Completion rule
'@code
'	Function BIZ_BR_MilestoneCompletion_ExportMilestoneCompletion(strConditionName)
'@endcode
'@param strConditionName - Milestone Completion name that needs to be exported

Function BIZ_BR_MilestoneCompletion_ExportMilestoneCompletion(strConditionName)
	
	FRM_Logger_ReportInfoEvent "Export Milestone Completion", "Export Milestone Completion: " & strConditionName, null
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objScrollBar = objMainContainer.SwfScrollBar("swfname:=vPanelScrollBar")
	
	boolexist = GUI_List_ClickRow (objMainContainer.SwfObject("swfname:=listViewRule"), objScrollBar, 0, strConditionName, True, False, False, "Single")
	
	If boolexist Then
		GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnExport")
		
		'============================= Save the file in Test Report folder ============================
		strFileLocation = FRM_RT_ReportDirPath & "BR_AutomatedCondition_" & "E2E_TestScenario1" & UTIL_Date_Now_mmddyyyy_HHnnss
		FRM_Logger_ReportInfoEvent "Save the file", "Save file at location: " & strFileLocation, Null
		
		Set myObj = Description.Create
		myObj("micclass").value = "WinEdit"
		myObj("attached text").value = "File name:"
		Set objChildObject = SwfWindow("swfname:=MainForm").Swfwindow("swfname:=SetUpContainer").Dialog("text:=Save As").ChildObjects (myobj)
		objChildObject(0).Type strFileLocation
		GUI_WinButton_Click SwfWindow("swfname:=MainForm").Swfwindow("swfname:=SetUpContainer").Dialog("text:=Save As").WinButton("text:=&Save")
		
		Set myObj = Nothing
		Set objChildObject = Nothing
	Else
		FRM_Logger_ReportInfoEvent "Export Milestone Completion", "Export Milestone Completion doesn't exist in Business Rule: " & strConditionName, null
	End If
	
	Set objMainContainer = Nothing
	Set objScrollBar = Nothing
    
    BIZ_BR_MilestoneCompletion_ExportMilestoneCompletion = strFileLocation
	
End Function



'This function is used to import Milestone Completion rule
'@code
'	Function BIZ_BR_MilestoneCompletion_ImportMilestoneCompletion(strFileName)
'@endcode
'@param strFileName - Milestone Completion name that needs to be imported

Function BIZ_BR_MilestoneCompletion_ImportMilestoneCompletion(strFileName)
	
	FRM_Logger_ReportInfoEvent "Import Milestone Completion", "Import Milestone Completion: " & strConditionName, null
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objBusinessRuleImport = objMainContainer.SwfWindow("swfname:=ImportBusinessRuleDialog")

	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnImport")
	Set myObj = Description.Create
	myObj("micclass").value = "WinEdit"
	myObj("attached text").value = "File &name:"
	Set objChildObject = SwfWindow("swfname:=MainForm").Swfwindow("swfname:=SetUpContainer").Dialog("text:=Open").ChildObjects (myobj)
	objChildObject(0).Type strFileName
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").Swfwindow("swfname:=SetUpContainer").Dialog("text:=Open").WinButton("text:=&Open")
	
	wait 3
	GUI_SwfButton_Click objBusinessRuleImport.SwfButton("swfname:=btnValidateImport")
	wait 3
	GUI_SwfButton_Click objBusinessRuleImport.SwfButton("swfname:=btnValidateImport")
	
	Set objMainContainer = Nothing
	Set objBusinessRuleImport = Nothing
	
End Function



'Function to check if TRIGGER is present and delete if present  in Field Trigger Pane
'@code
'    BIZ_BR_InputFormList_DeleteExisting(strInputFormList)
'@endcode
'@param strInputFormList - The name of created Rule
'@see GUI_List_ClickRow

Function BIZ_BR_InputFormList_DeleteExisting(strInputFormList)

	FRM_Logger_ReportInfoEvent "Delete Input Form List", "Delete Input Form List with name "&strInputFormList, null

	Dim objInputFormList, boolExist
	Set objInputFormList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	
	boolExist = GUI_List_ClickRow (objInputFormList, NULL, "Name", strInputFormList, True, False, False, "Single")

	If boolExist  Then

      	BIZ_Settings_ClickDelete
		BIZ_Settings_Dialog_ClickYes
	
	End If
	
	Set objInputFormList = Nothing
	BIZ_BR_InputFormList_DeleteExisting = boolExist
End Function



'Function to Create a new InputFormList 
'@code
' Function   BIZ_BR_InputFormList_CreateNew(strRowID)
'@endcode
'@param strRowID - Row ID passed from the script to add a InputFormList

Function BIZ_BR_InputFormList_CreateNewInputFormList(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create the Input Form List", "Create the Input Form List in Business Rule", null
	Dim objMainContainer
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	 
	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnNew")
	
	strRuleName = BIZ_BR_InputFormList_SetInputFormList(strRowID)
	BIZ_BR_InputFormList_CreateNewInputFormList = strRuleName
	Set objMainContainer = nothing
		 
End Function



'Function to Create a new InputFormList 
'@code
' Function   BIZ_BR_InputFormList_SetInputFormList(strRowID)
'@endcode
'@param strRowID - Row ID passed from the script to add data for InputFormList

Function BIZ_BR_InputFormList_SetInputFormList(strRowID)
	FRM_Logger_ReportInfoEvent "Create/Edit a New Input Form List", "Create/Edit a New Input Form List in Business Rule"&strRowID, null
	
	Dim objInputFormList
	
	Set objInputFormList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("Swfname:=InputFormRuleDialog")
	Set WshShell = CreateObject("WScript.Shell")
	
    Set objData = FRM_DS_GetTestData("BusinessRule_InputFormList", "InputFormList", strRowID)
	
	strRuleName = FRM_DS_GetValue(objData, "TriggerName")
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerName")) Then
	 GUI_SwfEdit_Set objInputFormList.SwfEdit("swfname:=textBoxName"),strRuleName
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then
	 GUI_SwfList_Select objInputFormList.SwfList("swfname:=chkListChannels"),FRM_DS_GetValue(objData, "Channel")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerCondition")) Then
	 GUI_SwfComboBox_Select objInputFormList.SwfComboBox("swfname:=comboType"),FRM_DS_GetValue(objData, "TriggerCondition")
	 
	 If FRM_DS_GetValue(objData, "TriggerCondition") = "Advanced Conditions" Then
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CopyAndPasteCondition")) Then
				GUI_SwfEditor_Type objInputFormList.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData,"CopyAndPasteCondition") 
		Else
		 	'=============Click on select==================
		 	GUI_SwfObject_Click objInputFormList.SwfObject("swfname:=btnSelect")
		 	'==================Click on Add button===============
		 	GUI_SwfObject_Click objInputFormList.SwfWindow("swfname:=AdvConditionEditor").SwfObject("swfname:=btnAddFilter")
		 	
		 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionFieldID")) Then
			 	GUI_SwfEdit_Set objInputFormList.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"),FRM_DS_GetValue(objData, "ConditionFieldID")
		 	End If
	    	'=============Press Enter=======
			WshShell.SendKeys "{TAB}"
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionOperator")) Then
				GUI_SwfComboBox_Select objInputFormList.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"),FRM_DS_GetValue(objData, "ConditionOperator")
			End If
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
				GUI_SwfEdit_Set objInputFormList.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"),FRM_DS_GetValue(objData, "ConditionValue")
			End If
			GUI_SwfButton_Click objInputFormList.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
			GUI_SwfButton_Click objInputFormList.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
	 	End If
	ElseIf FRM_DS_GetValue(objData, "TriggerCondition") = "Current Role" Then
		'=============Click on select==================
	 	GUI_SwfObject_Click objInputFormList.SwfObject("swfname:=btnSelect")
	 	
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_List_ClickRow objInputFormList.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"),NULL,"Role",FRM_DS_GetValue(objData, "ConditionValue"),TRUE,FALSE,FALSE,"Single"
		End If
		GUI_SwfButton_Click objInputFormList.SwfWindow("swfname:=SelectCurrentRoleForm").SwfButton("swfname:=btnOK")
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Milestone")) Then
			GUI_SwfComboBox_Select objInputFormList.SwfComboBox("swfname:=comboCondition"),FRM_DS_GetValue(objData, "Milestone")
		End If
		
	ElseIf FRM_DS_GetValue(objData, "TriggerCondition") = "Loan Program" Then
		'=============Click on select==================
	 	GUI_SwfObject_Click objInputFormList.SwfObject("swfname:=btnSelect")
	 	GUI_SwfComboBox_Select objInputFormList.SwfWindow("swfname:=TemplateSelectionDialog").SwfComboBox("swfname:=cmbBoxFolder"),"Companywide"
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_List_ClickRow objInputFormList.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory"),NULL,"Name",FRM_DS_GetValue(objData, "ConditionValue"),TRUE,FALSE,FALSE,"Single"
		End If
		GUI_SwfButton_Click objInputFormList.SwfWindow("swfname:=TemplateSelectionDialog").SwfButton("swfname:=selectBtn")
	Else
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_SwfComboBox_Select objInputFormList.SwfComboBox("swfname:=comboCondition"),FRM_DS_GetValue(objData, "ConditionValue")
		End If
	End If
	
End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FormName")) Then
	   GUI_SwfButton_Click objInputFormList.SwfButton("swfname:=addBtn")
	   Wait 2
	   GUI_List_ClickRow objInputFormList.SwfWindow("swfname:=AddFormBaseDialog").SwfObject("swfname:=gridViewAll"),NULL,0,FRM_DS_GetValue(objData, "FormName"),FALSE,FALSE,FALSE,"Single"
	   GUI_SwfRadioButton_Click objInputFormList.SwfWindow("swfname:=AddFormBaseDialog").SwfButton("swfname:=okBtn")
    End If 
    
    GUI_SwfButton_Click objInputFormList.SwfButton("swfname:=okBtn")
    
  	BIZ_BR_InputFormList_SetInputFormList = strRuleName
	Set objInputFormList = Nothing
	
End Function



'Function to select the TRIGGER present and perform a Single Click or Double Click
'@code
' Function BIZ_BR_InputFormList_Select(strInputFormList,strAction)
'@endcode
'@param strAction - action to be checked ie "Single" or "Double"
'@param strInputFormList - InputFormList name to be checked 
'@see GUI_List_ClickRow

Function BIZ_BR_InputFormList_Select(strInputFormList,strAction)

	FRM_Logger_ReportInfoEvent "Select Input Form List", "Select Input Form List with name"&strInputFormList, null

	Dim objInputFormList
	Set objInputFormList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	
	GUI_List_ClickRow objInputFormList, NULL, "Name", strInputFormList, True, False, False, strAction
	
	Set objInputFormList = Nothing
	
End Function



'Function to activate Input Form List
'@code
'    BIZ_BR_InputFormList_Activate()
'@endcode

Function BIZ_BR_InputFormList_Activate()

	FRM_Logger_ReportInfoEvent "Activate the Input Form List", "Activate the Input Form List in Business Rule", null
	Dim objMainContainer
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

    If GUI_Object_IsEnabled(objMainContainer.Swfbutton("Swfname:=activeBtn")) Then
        GUI_SwfButton_Click objMainContainer.Swfbutton("Swfname:=activeBtn")    
    End If
		
	Set objMainContainer = nothing
	Wait 5
	
End Function



'This function is used to create new print auto selection rule 
'@code
'    Function BIZ_BR_PrintAutoSelection_CreateRule(strRuleName, strRowId)
'@endcode
'@param strRuleName - Print Auto Selection Rule Name
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PrintAutoSelection_CreateRule(strRuleName, strRowID)

	FRM_Logger_ReportInfoEvent "Add Print Auto Selection Rule", "Add Print Auto Selection rule with name " & strRuleName, null
	Set objFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=PrintSelectionRuleDialog")
	Set objEditFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=PrintSelectionRuleDialog").SwfWindow("swfname:=PrintSelectionEventEditor")

	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")
	BIZ_BR_PrintAutoSelection_SetPrintAutoSelection strRuleName, strRowID

End Function



'This function is used to set data in print auto selection rule 
'@code
'    Function BIZ_BR_PrintAutoSelection_SetPrintAutoSelection(strRuleName, strRowId)
'@endcode
'@param strRuleName - Print Auto Selection Rule Name
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PrintAutoSelection_SetPrintAutoSelection(strRuleName, strRowID)

	FRM_Logger_ReportInfoEvent "Set Print Auto Selection Rule", "Set data in Print Auto Selection rule with name " & strRuleName, null
	Set objFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=PrintSelectionRuleDialog")
	Set objEditFieldRuleDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=PrintSelectionRuleDialog").SwfWindow("swfname:=PrintSelectionEventEditor")


	GUI_Object_ValidateExists objFieldRuleDialog, 3, "Field Rule Dialog"
	GUI_SwfEdit_Set objFieldRuleDialog.SwfEdit("swfname:=textBoxName"), strRuleName

	Set objData = FRM_DS_GetTestData("BusinessRule_PrintAutoSelection", "RuleDetails", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then
		GUI_SwfRadioButton_Click objFieldRuleDialog.SwfRadioButton("swfname:=radioCondition")
		GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "Condition")
		If FRM_DS_GetValue(objData, "Condition") = "Loan Purpose" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanPurpose")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Advanced Conditions" Then
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CopyAndPasteCondition")) Then
				GUI_SwfEditor_Type objFieldRuleDialog.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData,"CopyAndPasteCondition") 
			Else
				GUI_SwfButton_Click objFieldRuleDialog.SwfButton("swfname:=btnSelect")
				GUI_SwfObject_click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").Swfobject("swfname:=btnAddFilter")
				GUI_SwfEdit_Set objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "FilterField")
				Util_Win_SendKey "{TAB}"
				GUI_SwfComboBox_Select objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"), FRM_DS_GetValue(objData, "FilterOperator")
				GUI_SwfEdit_Set objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"), FRM_DS_GetValue(objData, "FilterValue")
				GUI_SwfButton_Click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
				GUI_SwfButton_Click objFieldRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
			End If
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Doc Type" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), Mid(FRM_DS_GetValue(objData, "DocType"), 5)
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Program" Then
			GUI_SwfEdit_Set objFieldRuleDialog.SwfEdit("swfname:=textConditionCode"), FRM_DS_GetValue(objData, "LoanProgram")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Type" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanType")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Status" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanStatus")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Property State" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "PropertyState")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Rate" Then
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Rate")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Current Role" Then
			GUI_SwfObject_Click objFieldRuleDialog.SwfObject("swfname:=btnSelect")
			GUI_List_ClickRow objFieldRuleDialog.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"), Null, 0, FRM_DS_GetValue(objData, "CurrentRole"), True, False, False, "Double"
			GUI_SwfComboBox_Select objFieldRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Milestone")
		End If
	End If
	 
	GUI_SwfButton_Click objFieldRuleDialog.SwfButton("swfname:=btnAdd")
	GUI_Object_ValidateExists objEditFieldRuleDialog, 3, "Add/Edit Field Event"
	
	GUI_SwfEdit_Set objEditFieldRuleDialog.SwfEdit("swfname:=txtFieldID"), FRM_DS_GetValue(objData, "FieldID")
	Util_Win_SendKey "{TAB}"
	GUI_SwfEdit_Set objEditFieldRuleDialog.SwfEdit("swfname:=txtCondValue"), FRM_DS_GetValue(objData, "Value")
	GUI_SwfButton_Click objEditFieldRuleDialog.SwfButton("swfname:=btnAddForm")
	GUI_List_ClickRow objEditFieldRuleDialog.SwfWindow("swfname:=AddPrintFormContainer").SwfObject("swfname:=gridViewFiles"), objEditFieldRuleDialog.SwfWindow("swfname:=AddPrintFormContainer").SwfScrollBar("swfname:=vPanelScrollBar"), "Name", "1003 Page 1", True, False, False, "Single"
	GUI_SwfButton_Click objEditFieldRuleDialog.SwfWindow("swfname:=AddPrintFormContainer").SwfButton("swfname:=btnAdd")
	GUI_SwfButton_Click objEditFieldRuleDialog.SwfWindow("swfname:=AddPrintFormContainer").SwfButton("swfname:=btnOK")
	GUI_SwfButton_Click objEditFieldRuleDialog.SwfButton("swfname:=btnOK")
	GUI_SwfButton_Click objFieldRuleDialog.SwfButton("swfname:=btnOK")
End Function



'This function is used to delete existing Print Auto Selection row from the list
'@code
'    Function BIZ_BR_PrintAutoSelection_DeleteExisting(strPrintAutoSelection)
'@endcode
'@param strPrintAutoSelection - Print Auto Selection rule

Function BIZ_BR_PrintAutoSelection_DeleteExisting(strPrintAutoSelection)

	FRM_Logger_ReportInfoEvent "Delete Print Autoo Selection", "Delete Print Auto Selection with name " & strPrintAutoSelection , null

	Dim objPrintAutoSelectionList, scrollbarFieldDataEntry, exist
	Set objPrintAutoSelectionList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarstrPrintAutoSelection = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	exist = GUI_List_ClickRow (objPrintAutoSelectionList, scrollbarPrintAutoSelection, "Name", strPrintAutoSelection, True, False, False, "Single")

	If exist  Then

        	GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnDelete"), "SwfObject", "Delete Print Auto Selection"
		GUI_Dialog_Encompass_Yes ""

	End If
	
	Set objPrintAutoSelectionList = Nothing
	Set scrollbarstrPrintAutoSelection = Nothing

End Function



'Function to check if Loan Access Rules is present and delete if present  in Loan Access Pane
'@code
' Function BIZ_BR_PersonaAccesstoLoan_DeleteExisting(strPersonaAccessToLoansRuleEntry)
'@endcode
'@param strFieldDataEntry - The name of created Rule
'@see GUI_List_ClickRow

Function BIZ_BR_PersonaAccesstoLoan_DeleteExisting(strPersonaAccessToLoansRuleEntry)

	FRM_Logger_ReportInfoEvent "Delete Persona Access To Loans", "Delete Persona Access To Loans with name "&strPersonaAccessToLoansRuleEntry, null

	Dim objPersonaAccesstoLoanEntryList, scrollbarPersonaAccessRuleEntry, boolExist
	Set objPersonaAccesstoLoanEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarPersonaAccessRuleEntry = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	boolExist = GUI_List_ClickRow (objPersonaAccesstoLoanEntryList, scrollbarPersonaAccessRuleEntry, "Name", strPersonaAccessToLoansRuleEntry, True, False, False, "Single")

	If boolExist  Then

      	BIZ_Settings_ClickDelete
		BIZ_Settings_Dialog_ClickYes
	
	End If
	
	Set objPersonaAccesstoLoanEntryList = Nothing
	Set scrollbarPersonaAccessRuleEntry = Nothing
	BIZ_BR_PersonaAccesstoLoan_DeleteExisting = boolExist
End Function



'Function to Create a new access to loan rule
'@code
'  Function BIZ_BR_PerosnaAccessToLoan_CreateNewAccessRule(strRowID)
'@endcode
'@param strRowID - Row ID passed from the script to add a trigger

Function BIZ_BR_PerosnaAccessToLoan_CreateNewAccessRule(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create the Perosna Access to Loans Rule", "Create the Perosna Access to Loans in Business Rule", null
	Dim objMainContainer
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	 
	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnNew")
	
	strRuleName=BIZ_BR_PersonaAccessToLoans_SetPersonaAccessToLoans(strRowID)
	
	Set objMainContainer = nothing
	BIZ_BR_PerosnaAccessToLoan_CreateNewAccessRule=	strRuleName 
End Function



'Function to Create a new access to loan rule
'@code
' Function BIZ_BR_PersonaAccessToLoans_SetPersonaAccessToLoans(strRowID)
'@endcode
'@param strRowID - Row ID passed from the script to add data for persona access to loans trigger

Function BIZ_BR_PersonaAccessToLoans_SetPersonaAccessToLoans(strRowID)
	FRM_Logger_ReportInfoEvent "Create/Edit a Perosna Access to Loans Rule", "Create/Edit a Perosna Access to Loans Rule in Business Rule"&strRowID, null
	
	Dim objMainContainer,objLoanAccessRuleDialog
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanAccessRuleDialog = objMainContainer.SwfWindow("swfname:=LoanAccessRuleDialog")
	
	If objLoanAccessRuleDialog.Exist(20) Then
		FRM_Logger_ReportPassEvent "Add/Edit Access to Loan Window","Add/Edit Access to Loan Window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "Add/Edit Access to Loan Window","Add/Edit Access to Loan Window NOT Loaded", null
	End If
	
	'========  Adding name to the rule  BR_FieldTriggers_AddRule ======== 
    
    Set objData = FRM_DS_GetTestData("BusinessRule_PersonaAccesstoLoans", "PerosnaAccesstoLoans", strRowID)
	strRuleName=FRM_DS_GetValue(objData, "TriggerName")
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerName")) Then
	 GUI_SwfEdit_Set objLoanAccessRuleDialog.SwfEdit("swfname:=textBoxName"),strRuleName
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then
	 GUI_SwfList_Select objLoanAccessRuleDialog.SwfList("swfname:=chkListChannels"),FRM_DS_GetValue(objData, "Channel")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerConditionApply")) Then
	 If FRM_DS_GetValue(objData, "TriggerConditionApply") = "Yes" Then
	 	GUI_SwfRadioButton_Click objLoanAccessRuleDialog.SwfRadioButton("swfname:=radioCondition")
	 ElseIf FRM_DS_GetValue(objData, "TriggerConditionApply") = "No" Then	 	
	 	GUI_SwfRadioButton_Click objLoanAccessRuleDialog.SwfRadioButton("swfname:=radioGeneral")
	 End If
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerCondition")) Then
	 GUI_SwfComboBox_Select objLoanAccessRuleDialog.SwfComboBox("swfname:=comboType"),FRM_DS_GetValue(objData, "TriggerCondition")
	 
	 If FRM_DS_GetValue(objData, "TriggerCondition") = "Advanced Conditions" Then
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CopyAndPasteCondition")) Then
				GUI_SwfEditor_Type objLoanAccessRuleDialog.SwfEditor("swfname:=textConditionCode"), FRM_DS_GetValue(objData,"CopyAndPasteCondition") 
		Else
			'=============Click on select==================
			GUI_SwfObject_Click objLoanAccessRuleDialog.SwfObject("swfname:=btnSelect")
			'==================Click on Add button===============
			GUI_SwfObject_Click objLoanAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfObject("swfname:=btnAddFilter")
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionFieldID")) Then
				GUI_SwfEdit_Set objLoanAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"),FRM_DS_GetValue(objData, "ConditionFieldID")
			End If
			
			'=============Press Enter=======
			UTIL_Win_SendKey "{ENTER}"
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionOperator")) Then
				GUI_SwfComboBox_Select objLoanAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"),FRM_DS_GetValue(objData, "ConditionOperator")
			End If
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
				GUI_SwfEdit_Set objLoanAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"),FRM_DS_GetValue(objData, "ConditionValue")
			End If
			GUI_SwfButton_Click objLoanAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
			GUI_SwfButton_Click objLoanAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
	 	End If
	ElseIf FRM_DS_GetValue(objData, "TriggerCondition") = "Current Role" Then
		'=============Click on select==================
	 	GUI_SwfObject_Click objLoanAccessRuleDialog.SwfObject("swfname:=btnSelect")
	 	
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_List_ClickRow objLoanAccessRuleDialog.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"),NULL,"Role",FRM_DS_GetValue(objData, "ConditionValue"),TRUE,FALSE,FALSE,"Single"
			GUI_SwfButton_Click objLoanAccessRuleDialog.SwfWindow("swfname:=SelectCurrentRoleForm").SwfButton("swfname:=btnOK")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Milestone")) Then
			GUI_SwfComboBox_Select objLoanAccessRuleDialog.SwfComboBox("swfname:=comboCondition"),FRM_DS_GetValue(objData, "Milestone")
		End If
		
	ElseIf FRM_DS_GetValue(objData, "TriggerCondition") = "Loan Program" Then
		'=============Click on select==================
	 	GUI_SwfObject_Click objLoanAccessRuleDialog.SwfObject("swfname:=btnSelect")
	 	strTemplateFolder = objLoanAccessRuleDialog.SwfWindow("swfname:=TemplateSelectionDialog").SwfComboBox("swfname:=cmbBoxFolder").GetContent
	 	strArrayValue = Split(strTemplateFolder,";")
        For i = 0 to UBOUND(strArrayValue)
            If strArrayValue(i) = "Companywide" Then
                GUI_SwfComboBox_Select objLoanAccessRuleDialog.SwfWindow("swfname:=TemplateSelectionDialog").SwfComboBox("swfname:=cmbBoxFolder"),"Companywide"   
            End If
        Next    
        GUI_List_ClickRow objLoanAccessRuleDialog.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory"),NULL,"Name","Companywide",TRUE,FALSE,FALSE,"Double"
        
	 	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_List_ClickRow objLoanAccessRuleDialog.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory"),NULL,"Name",FRM_DS_GetValue(objData, "ConditionValue"),TRUE,FALSE,FALSE,"Single"
		End If
		GUI_SwfButton_Click objLoanAccessRuleDialog.SwfWindow("swfname:=TemplateSelectionDialog").SwfButton("swfname:=selectBtn")
	Else
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConditionValue")) Then
			GUI_SwfComboBox_Select objLoanAccessRuleDialog.SwfComboBox("swfname:=comboCondition"),FRM_DS_GetValue(objData, "ConditionValue")
		End If
	End If
	
End If

	GUI_SwfObj_PerClick objLoanAccessRuleDialog.SwfButton("swfname:=okBtn")
			
	Set objMainContainer = Nothing
	Set objLoanAccessRuleDialog = Nothing
	
    BIZ_BR_PersonaAccessToLoans_SetPersonaAccessToLoans = strRuleName
	
End Function



'Function to activate access to loan rule
'@code
'    BIZ_BR_PerosnaAccessToLoans_Activate()
'@endcode

Function BIZ_BR_PerosnaAccessToLoans_Activate()

	FRM_Logger_ReportInfoEvent "Activate the Field Trigger Rule", "Activate the Field Trigger in Business Rule", null
	Dim objMainContainer
	
	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	 
	If GUI_Object_IsEnabled(objMainContainer.Swfbutton("Swfname:=activeBtn")) Then
        GUI_SwfButton_Click objMainContainer.Swfbutton("Swfname:=activeBtn")    
    End If
    
	Set objMainContainer = nothing
	
End Function



'Function to select the persona access to loan rule present and perform a Single Click or Double Click
'@code
'    BIZ_BR_PersonaAccestoLoan_Select(strFieldDataEntry,strAction)
'@endcode
'@param strAction - action to be checked ie "Single" or "Double"
'@param strFieldDataEntry - trigger name to be checked 
'@see GUI_List_ClickRow

Function BIZ_BR_PersonaAccestoLoan_Select(strPersonaAccessToLoansRuleEntry,strAction)

	FRM_Logger_ReportInfoEvent "Open Persona Access To Loans", "Open Persona Access To Loans  with name"&strPersonaAccessToLoansRuleEntry, null

	Dim objPersonaAccesstoLoanEntryList, scrollbarPersonaAccessRuleEntry
	Set objPersonaAccesstoLoanEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarPersonaAccessRuleEntry = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	GUI_List_ClickRow objPersonaAccesstoLoanEntryList, scrollbarPersonaAccessRuleEntry, "Name", strPersonaAccessToLoansRuleEntry, True, False, False, strAction
	
	Set objPersonaAccesstoLoanEntryList = Nothing
	Set scrollbarPersonaAccessRuleEntry = Nothing

End Function



'This function is used to export the business rule
'@code
'    Function BIZ_BR_PersonaAccessToLoanRule_ExportBusinessRule(strFileName)
'@endcode
'@param strFileName - File name of a zip file.

Function BIZ_BR_PersonaAccessToLoanRule_ExportBusinessRule(strFileName)

	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnExport")
	
	GUI_Object_WaitTillExistX objSettings.Dialog("text:=Save As").WinEdit("attached text:=File name:","index:=0"),50
	
	Set winEditChildObj = Description.Create()

	winEditChildObj("micclass").value = "WinEdit"

	winEditChildObj("attached text").value = "File name:"

	Set winEditChildObj1 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Save As").ChildObjects(winEditChildObj)

	winEditChildObj1(0).type strFileName

	GUI_WinButton_Click objSettings.Dialog("text:=Save As").Winbutton("text:=&Save")
	
	If Dialog("text:=Confirm Save As").Exist(10) Then
		GUI_WinButton_Click Dialog("text:=Confirm Save As").WinButton("text:=&Yes")
	End If
	
	Set objSettings = Nothing
	
End Function



'This function is used to import the business rule
'@code
'    Function BIZ_BR_PersonaAccessToLoanRule_ImportBusinessRule(strFileName)
'@endcode
'@param strFileName - File name of a zip file.

Function BIZ_BR_PersonaAccessToLoanRule_ImportBusinessRule(strFileName)

	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnImport")
	
	GUI_Object_WaitTillExist objSettings.Dialog("text:=Open").WinEdit("attached text:=File &name:","index:=0")
	
	Set winEditChildObj = Description.Create()

	winEditChildObj("micclass").value = "WinEdit"

	winEditChildObj("attached text").value = "File &name:"

	Set winEditChildObj1 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Open").ChildObjects(winEditChildObj)

	winEditChildObj1(0).type strFileName
	
	GUI_WinButton_Click objSettings.Dialog("text:=Open").Winbutton("text:=&Open")
	
	If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Exist(10) Then
		GUI_SwfButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").SwfButton("swfname:=btnValidateImport")
		If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Dialog("text:=Rule Import").Exist(10) Then
	   	   GUI_WinButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Dialog("text:=Rule Import").WinButton("text:=&Yes")
	    End If
		If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Exist(10) Then
			GUI_SwfButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").SwfButton("swfname:=btnValidateImport")
		End If
	End If
	
	Set winEditChildObj1 = Nothing
	Set winEditChildObj = Nothing
	Set objSettings = Nothing
	
End Function



'This function is used to export the business rule
'@code
'    Function BIZ_BR_InputFormList_ExportBusinessRule(strFileName)
'@endcode
'@param strFileName - File name of a zip file.

Function BIZ_BR_InputFormList_ExportBusinessRule(strFileName)

	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnExport")
	
	GUI_Object_WaitTillExistX objSettings.Dialog("text:=Save As").WinEdit("attached text:=File name:","index:=0"),200
	
	Set winEditChildObj = Description.Create()

	winEditChildObj("micclass").value = "WinEdit"

	winEditChildObj("attached text").value = "File name:"

	Set winEditChildObj1 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Save As").ChildObjects(winEditChildObj)

	winEditChildObj1(0).type strFileName

	GUI_WinButton_Click objSettings.Dialog("text:=Save As").Winbutton("text:=&Save")
	
	If Dialog("text:=Confirm Save As").Exist(10) Then
		GUI_WinButton_Click Dialog("text:=Confirm Save As").WinButton("text:=&Yes")
	End If
	
	Set objSettings = Nothing
	
End Function



'This function is used to import the business rule
'@code
'    Function BIZ_BR_InputFormList_ImportBusinessRule(strFileName)
'@endcode
'@param strFileName - File name of a zip file.

Function BIZ_BR_InputFormList_ImportBusinessRule(strFileName)

	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnImport")
	
	GUI_Object_WaitTillExist objSettings.Dialog("text:=Open").WinEdit("attached text:=File &name:","index:=0")
	
	Set winEditChildObj = Description.Create()

	winEditChildObj("micclass").value = "WinEdit"

	winEditChildObj("attached text").value = "File &name:"

	Set winEditChildObj1 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Open").ChildObjects(winEditChildObj)

	winEditChildObj1(0).type strFileName
	
	GUI_WinButton_Click objSettings.Dialog("text:=Open").Winbutton("text:=&Open")
	
	If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Exist(20) Then
		GUI_SwfButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").SwfButton("swfname:=btnValidateImport")
		If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Dialog("text:=Rule Import").Exist(5) Then
	       GUI_WinButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Dialog("text:=Rule Import").WinButton("text:=&Yes")
	    End If
		If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Exist(10) Then
		  GUI_SwfButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").SwfButton("swfname:=btnValidateImport")
	   End If
	End If
	
	Wait 5
	
	Set winEditChildObj1 = Nothing
	Set winEditChildObj = Nothing
	Set objSettings = Nothing
	
End Function



'This function is used to export the business rule
'@code
'    Function BIZ_BR_FieldTrigger_ExportBusinessRule(strFileName)
'@endcode
'@param strFileName - File name of a zip file.

Function BIZ_BR_FieldTrigger_ExportBusinessRule(strFileName)

	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnExport")
	
	GUI_Object_WaitTillExistX objSettings.Dialog("text:=Save As").WinEdit("attached text:=File name:","index:=0"),200
	
	Set winEditChildObj = Description.Create()

	winEditChildObj("micclass").value = "WinEdit"

	winEditChildObj("attached text").value = "File name:"

	Set winEditChildObj1 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Save As").ChildObjects(winEditChildObj)

	winEditChildObj1(0).type strFileName

	GUI_WinButton_Click objSettings.Dialog("text:=Save As").Winbutton("text:=&Save")
	
	If Dialog("text:=Confirm Save As").Exist(10) Then
		GUI_WinButton_Click Dialog("text:=Confirm Save As").WinButton("text:=&Yes")
	End If
	
	Set objSettings = Nothing
	
End Function



'This function is used to import the business rule
'@code
'    Function BIZ_BR_FieldTrigger_ImportBusinessRule()
'@endcode
'@param strFileName - File name of a zip file.

Function BIZ_BR_FieldTrigger_ImportBusinessRule(strFileName)

	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnImport")
	
	GUI_Object_WaitTillExist objSettings.Dialog("text:=Open").WinEdit("attached text:=File &name:","index:=0")
	
	Set winEditChildObj = Description.Create()

	winEditChildObj("micclass").value = "WinEdit"

	winEditChildObj("attached text").value = "File &name:"

	Set winEditChildObj1 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Open").ChildObjects(winEditChildObj)

	winEditChildObj1(0).type strFileName
	
	GUI_WinButton_Click objSettings.Dialog("text:=Open").Winbutton("text:=&Open")
	
	If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Exist(20) Then
		GUI_SwfButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").SwfButton("swfname:=btnValidateImport")
		If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Dialog("text:=Rule Import").Exist(5) Then
	       GUI_WinButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Dialog("text:=Rule Import").WinButton("text:=&Yes")
	    End If
		If objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").Exist(10) Then
		  GUI_SwfButton_Click objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog").SwfButton("swfname:=btnValidateImport")
	   End If
	End If
	
	Set winEditChildObj1 = Nothing
	Set winEditChildObj = Nothing
	Set objSettings = Nothing
	
End Function



'This function is used to duplicate existing field data entry rule 
'@code
'    Function BIZ_BR_FieldDataEntry_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - Field Data Entry Rule Name

Function BIZ_BR_FieldDataEntry_DuplicateRule(strRuleName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Field Data Entry Rule", "Duplicate existing Field Data Entry rule " & strRuleName, null
	Set objFieldDataEntry = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog")
	'select the rule and click on duplicate option
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objFieldDataEntry.SwfButton("swfname:=okBtn")
	Set objFieldDataEntry = Nothing
End Function



'This function is used to duplicate existing field trigger rule
'@code
'    Function BIZ_BR_FieldTrigger_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - Field Data Entry Rule Name

Function BIZ_BR_FieldTrigger_DuplicateRule(strRuleName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Field Trigger Rule", "Duplicate existing Field Trigger rule " & strRuleName, Null
	Set objFieldTrigger = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TriggerEditor")
	'select the rule and click on duplicate option
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objFieldTrigger.SwfButton("swfname:=okBtn")
	Set objFieldTrigger = Nothing
End Function



'This function is used to duplicate existing milestone completion rule
'@code
'    Function BIZ_BR_MilestoneCompletion_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - Field Data Entry Rule Name

Function BIZ_BR_MilestoneCompletion_DuplicateRule(strRuleName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Milestone Completion Rule", "Duplicate existing Milestone Completion rule " & strRuleName, Null
	Set objMilestone = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ConditionRuleDialog")
	'select the rule and click on duplicate option
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objMilestone.SwfButton("swfname:=okBtn")
	Set objMilestone = Nothing
End Function



'This function is used to duplicate existing Persona Access to Fields rule
'@code
'    Function BIZ_BR_PersonaAccessToFields_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - Persona Access to Fields Rule Name

Function BIZ_BR_PersonaAccessToFields_DuplicateRule(strRuleName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Persona Access to Fields Rule", "Duplicate existing Persona Access to Fields rule " & strRuleName, Null
	Set objMilestone = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldAccessRuleDialog")
	'select the rule and click on duplicate option
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objMilestone.SwfButton("swfname:=okBtn")
	Set objMilestone = Nothing
End Function



'This function is used to duplicate existing Persona Access to Loans rule from the list
'@code
'    Function BIZ_BR_PersonaAccesstoLoans_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - Persona Access to Loans rule name

Function BIZ_BR_PersonaAccesstoLoans_DuplicateRule(strRuleName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Rule", "Duplicate existing Persona Access to Loans rule "& strRuleName, Null
	Set objPersonaAccesstoLoans = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanAccessRuleDialog")
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objPersonaAccesstoLoans.SwfButton("swfname:=okBtn")
	Set objPersonaAccesstoLoans = Nothing
End Function



'This function is used to duplicate existing Automated Conditions rule
'@code
'    Function BIZ_BR_AutomatedConditions_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - Automated Conditions rule name

Function BIZ_BR_AutomatedConditions_DuplicateRule(strRuleName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Rule", "Duplicate existing Automated Conditions rule "&strRuleName, Null
	Set objAutomatedConditions = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AutomatedConditionEditor")
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objAutomatedConditions.SwfButton("swfname:=okBtn")
	Set objAutomatedConditions = Nothing
End Function



'This function is used to duplicate existing Print Auto Selection rule
'@code
'    Function BIZ_BR_PrintAutoSelection_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - Print Auto Selection Rule Name

Function BIZ_BR_PrintAutoSelection_DuplicateRule(strRuleName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Print Auto Selection Rule", "Duplicate existing Print Auto Selection rule " & strRuleName, Null
	Set objPrintAuto = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=PrintSelectionRuleDialog")
	'select the rule and click on duplicate option
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objPrintAuto.SwfButton("swfname:=btnOK")
	Set objPrintAuto = Nothing
End Function



'This function is used to duplicate existing Loan Form Printing rule
'@code
'    Function BIZ_BR_LoanFormPrinting_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - Loan Form Printing Rule Name

Function BIZ_BR_LoanFormPrinting_DuplicateRule(strRuleName)
	
	FRM_Logger_ReportInfoEvent "Duplicate Loan Form Printing Rule", "Duplicate existing Loan Form Printing rule " & strRuleName, Null
	Set objLoanForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=PrintFormRuleDialog")
	'select the rule and click on duplicate option
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objLoanForm.SwfButton("swfname:=okBtn")
	Set objLoanForm = Nothing
End Function



'This function is used to duplicate existing Input form list rule
'@code
'    BIZ_BR_InputFormList_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName Input form list rule name

Function BIZ_BR_InputFormList_DuplicateRule(strRuleName)
	FRM_Logger_ReportInfoEvent "Duplicate Rule", "Duplicate existing Input Form List rule "&strRuleName, Null
	Set objInputForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=InputFormRuleDialog")
	BIZ_BR_Common_DuplicateRule strRuleName
	GUI_SwfButton_Click objInputForm.SwfButton("swfname:=okBtn")
	Set objInputForm = Nothing
End Function



'This is a function under Business Rules used to duplicate a rule  
'@code
'    BIZ_BR_Common_DuplicateRule(strRuleName)
'@endcode
'@param strRuleName - rule name to act on 

Function BIZ_BR_Common_DuplicateRule(strRuleName)
	FRM_Logger_ReportInfoEvent "Duplicate existing Rule", "Duplicate selected rule with name " & strRuleName, null
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	boolExist = GUI_List_ClickRow(objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single")
	If boolExist Then 
		GUI_SwfObject_Click objMainView.SwfObject("swfname:=stdIconBtnDuplicate")
	End If
	Set objMainView = Nothing
End Function



'This function is for making data entry in LOCompensationRule Window 
'@code
'    BIZ_BR_LOCompensationRule(strRowID)
'@endcode
'@param strRowID RowID for data

Function BIZ_BR_LOCompensationRule(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_BR_LOCompensationRule", "Setting the data in LO compensation rule window", null
	
	Dim objSettings, objData, strSelectControl, strCompensationField, arrCompensationField, strValue, strBorrowerOrThirdParty
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData     = FRM_DS_GetTestData("BusinessRule_LOCompensation", "LOCompensationData", strRowID)
	
	strSelectControl        = FRM_DS_GetValue(objData, "SelectControl")
	strCompensationField    = FRM_DS_GetValue(objData, "SelectCompensationField")
	arrCompensationField    = Split(strCompensationField, ";")
	strValue                = FRM_DS_GetValue(objData, "Value")
	strBorrowerOrThirdParty = FRM_DS_GetValue(objData, "BorrowerOrThirdParty")
	
	If Not UTIL_String_IsEmpty(strSelectControl) Then
		GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboRule"), strSelectControl     
	End If
	
	If Not UTIL_String_IsEmpty(strCompensationField) Then
		For intNumField = 0 To UBound(arrCompensationField)
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("text:=801 "&arrCompensationField(intNumField)), strValue
		Next
	End If
	
	If Not UTIL_String_IsEmpty(strBorrowerOrThirdParty) Then
		If strBorrowerOrThirdParty = "Borrower" Then
			GUI_SwfRadioButton_Click objSettings.SwfRadioButton("swfname:=rdoBorrower")     
		End If
	
		If strBorrowerOrThirdParty = "Third-Party" Then
			GUI_SwfRadioButton_Click objSettings.SwfRadioButton("swfname:=rdo3rdParty")     
		End If
		
		If GUI_Object_IsExist(objSettings.Dialog("regexpwndtitle:=Encompass")) = True Then
			GUI_WinButton_Click objSettings.Dialog("regexpwndtitle:=Encompass").WinButton("text:=OK")
		End If
	End If
	
	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If
	
	Set objSettings = Nothing
	Set objData		= Nothing
	
End Function



'This function is used to validate the deletion of a business rule
'@code
'    BIZ_BR_Common_ValidateRuleDeletion(strRuleName)
'@endcode
'@param strRuleName - rule name to act on 

Function BIZ_BR_Common_ValidateRuleDeletion(strRuleName)
	Dim boolNotDeleted, objMainView
	
	FRM_Logger_ReportInfoEvent "Verify Rule Deletion", "Verify deletion of business rule: " & strRuleName, null
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_Object_WaitTillVisibleX objMainView.SwfObject("swfname:=listViewRule"),70
	boolNotDeleted=GUI_List_ClickRow(objMainView.SwfObject("swfname:=listViewRule"), Null, "Name", strRuleName, True, False, False, "Single")
	
	FRM_VerifyFalse boolNotDeleted,"Rule Deletion","Business rule: '"&strRuleName&"' is deleted"
		
	Set objMainView=Nothing
End Function



'This function is used to Verify the Loan Form with Printing Rules 
'@code
'    Function BIZ_BR_VerifyingTheLoanFormWithPrintingRules(strRowId)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_VerifyLoanFormWithPrintingRules(strRowID)

	FRM_Logger_ReportInfoEvent "BIZ_BR_VerifyingtheLoanFormWithPrintingRules", "Verifying the Loan Form With Printing Rules", Null
	
	'====== Declaring the objects  ======
	Dim objData, objFormSelectorDialog, objPrintBusinessRulesDialog
	
	'====== Createing the objects  ======
	Set objFormSelectorDialog        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objPrintBusinessRulesDialog  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm")
	
	Set objData = FRM_DS_GetTestData("BusinessRule_LoanFormPrinting", "LoanFormPrinting", strRowID)
	
	strCondition = FRM_DS_GetValue(objData, "Condition")
	
	'====== Set the data based on the Condition  ======
	If UTIL_String_IsNotEmpty(strCondition) Then
		If Trim(UCase(strCondition)) = UCase("Loan Purpose") Then
			BIZ_Forms_Open Trim(FRM_DS_GetValue(objData, "GeneralForms"))
			If Trim(FRM_DS_GetValue(objData, "PurposeofLoan")) = "Purchase" Then
				GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebCheckBox("html id:=__cid_CheckBox15_Ctrl"), "ON"
			End If
		ElseIf Trim(UCase(strCondition)) = UCase("Advanced Conditions") Then
			BIZ_Forms_Open Trim(FRM_DS_GetValue(objData, "GeneralForms"))
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_37"), FRM_DS_GetValue(objData, "FilterValue")
		ElseIf Trim(UCase(strCondition)) = UCase("Doc type") Then
			BIZ_Forms_Open "Borrower Summary - Origination"
			SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebTable("innertext:=Copy Loan Number to lender case number Loan Number .*","index:=0").WebEdit("html id:=l_1264").Highlight
			GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").Page("micClass:=Page").WinEdit("window id:=1001"),70
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WinEdit("window id:=1001"), FRM_DS_GetValue(objData, "DocType")
		ElseIf Trim(UCase(FRM_DS_GetValue(objData, "Condition"))) = UCase("Loan Program") Then
			BIZ_Forms_Open "Borrower Summary - Origination"
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_1401"), FRM_DS_GetValue(objData, "LoanProgram")
		ElseIf Trim(UCase(FRM_DS_GetValue(objData, "Condition"))) = UCase("Loan Type") Then
			BIZ_Forms_Open "Borrower Summary - Origination"
			GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebCheckBox("html id:=__cid_CheckBox21_Ctrl"), "ON"
		ElseIf Trim(UCase(FRM_DS_GetValue(objData, "Condition"))) = UCase("Loan Status") Then
			BIZ_Forms_Open "Borrower Summary - Origination"
			GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "LoanStatus")
		ElseIf Trim(UCase(FRM_DS_GetValue(objData, "Condition"))) = UCase("Property State") Then
			BIZ_Forms_Open "Borrower Summary - Origination"
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebEdit("html id:=l_14"), FRM_DS_GetValue(objData, "PropertyStateCode")
		ElseIf Trim(UCase(FRM_DS_GetValue(objData, "Condition"))) = UCase("Rate") Then
			BIZ_Forms_Open "Borrower Summary - Origination"
		ElseIf Trim(UCase(FRM_DS_GetValue(objData, "Condition"))) = UCase("Current Role") Then
			BIZ_BR_LoanFormPrintingRule_CurrentRoleCondition strRowID
		End If
	Else
		BIZ_Forms_Open "Borrower Summary - Origination"
	End If 
	
	'====== Saving the Selected Forms & Print  ======
	BIZ_Loan_Print
	
	'====== Validating created Printing rule  ====== 
	BIZ_BR_ValidateLoanFormPrintingRule strRowID
	
	'====== Closing the Pring Bussiness Rule window  ======
	If GUI_Object_IsExistX(objPrintBusinessRulesDialog,30) Then objPrintBusinessRulesDialog.Close
	If GUI_Object_IsExistX(objFormSelectorDialog,30) Then objFormSelectorDialog.Close
	
	'====== Close the Loan ======
	BIZ_Loan_Exit False
	
	'====== Set Nothing for Created Objects ======
	Set objData 					 = Nothing
	Set objFormSelectorDialog        = Nothing
	Set objPrintBusinessRulesDialog  = Nothing
	
End Function



'This function is used to Validate Printing Rule with Non Admin User
'@code
'    Function BIZ_BR_ValidatePrintingRule(strRowId)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_ValidateLoanFormPrintingRule(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_BR_ValidatePrintingRule", "Validating the Loan Form With Printing Rules", Null
	
	'====== Declaring the Variables ======
	Dim objData, boolExist, strUnPrintableFormData, strUnPrintableFieldsData, strPrintableData, strMileStonetextName, boolFormSelected, boolSaveBtnExist, boolDataExist, intIncrement

	'====== Creating the Objects ======
	Set objData = FRM_DS_GetTestData("BusinessRule_LoanFormPrinting", "LoanFormPrinting", strRowID)
	
	Set objFormSelectorDialog        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objPrintBusinessRulesDialog  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm")
	Set objFieldQuickEditForm        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfWindow("swfname:=FieldQuickEditForm")
	Set objScrollBar                 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")
	Set objMilestoneCompletionList   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanPage").swfObject("swfname:=gvLog")
	
	'====== Verifying Loan Form Section in Form Selection window ======
	boolExist = GUI_List_ClickRow(objFormSelectorDialog.SwfObject("swfname:=gridViewSelectedFiles"), objFormSelectorDialog.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", Trim(FRM_DS_GetValue(objData, "GeneralForms")), True, False, False, "Single")
	If Not boolExist Then
		GUI_SwfObject_SelectFormsTab objFormSelectorDialog.SwfObject("swfname:=tabControlEx1"), Trim("Standard Forms") 
		boolFormSelected = GUI_List_ClickRow(objFormSelectorDialog.SwfObject("swfname:=gridViewFiles"), objFormSelectorDialog.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", Trim(FRM_DS_GetValue(objData, "GeneralForms")), True, False, False, "Single")
		GUI_SwfButton_Click objFormSelectorDialog.SwfButton("swfname:=btnAdd")
		boolBorrowerPgeExist = GUI_List_ClickRow(objFormSelectorDialog.SwfObject("swfname:=gridViewSelectedFiles"), objFormSelectorDialog.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", Trim("Borrower Summary"), True, False, False, "Single")	
		If boolBorrowerPgeExist Then
			GUI_SwfButton_Click objFormSelectorDialog.SwfButton("swfname:=btnRemove")
		End If
		boolExist = GUI_List_ClickRow(objFormSelectorDialog.SwfObject("swfname:=gridViewSelectedFiles"), Null, "Name", Trim(FRM_DS_GetValue(objData, "GeneralForms")), True, False, False, "Single")
	End If
	
	'====== Validate Loan Form Section in Form Selection window ======
	FRM_VerifyTrue boolExist, "verify '"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' in 'Selected forms' Tab ","'"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' form is displayed in the 'Selected forms'"
	
	'====== Clicking Preview button  & Validating 'Print Business Rules' Dialog  ======
	GUI_SwfButton_Click objFormSelectorDialog.SwfButton("swfname:=btnPreview")
	boolSaveBtnExist = GUI_Object_WaitTillExistX(SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=&Yes"),60) 
		
	If boolSaveBtnExist Then GUI_Dialog_Click SwfWindow("swfname:=MainForm").Dialog("index:=0").WinButton("text:=&Yes")
	
	'====== Validating 'Print Business Rules' Dialog  ======
	If GUI_Object_WaitTillExistX(objPrintBusinessRulesDialog,60) Then
		GUI_List_ClickRow objPrintBusinessRulesDialog.SwfObject("swfname:=gridViewUnprintForms"), Null, "Form", Trim(FRM_DS_GetValue(objData, "GeneralForms")), True, False, False, "Single"
		FRM_Logger_ReportPassEvent "verify 'Print Business Rules Dialog' exist","'Print Business Rules Dialog' is displayed", Null
	Else
		FRM_Logger_ReportFailEvent "verify 'Print Business Rules Dialog' exist","'Print Business Rules Dialog' is not displayed", Null
		boolWndExits = GUI_Object_IsExist(Dialog("index:=0").Winbutton("text:=OK"))
		If boolWndExits Then GUI_Dialog_Click Dialog("index:=0").Winbutton("text:=OK")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=PdfPreviewDialog").swfButton("swfname:=btnClose")
		If GUI_Object_IsExist(objFormSelectorDialog) Then objFormSelectorDialog.Close
		Exit Function
	End If
	boolDataExist = False
	intIncrement = 1
	Do
		'====== Validating 'UnPrintable forms' window  ======
		intRowsInUnPrintableForms = GUI_List_GetNumberofRows(objPrintBusinessRulesDialog.SwfObject("swfname:=gridViewUnprintForms"))
		For intRowCnt = 0 To intRowsInUnPrintableForms
			strUnPrintableFormData = GUI_List_GetCellData (objPrintBusinessRulesDialog.SwfObject("swfname:=gridViewUnprintForms"), intRowCnt, 0)
			strUnPrintableFieldsData = GUI_List_GetCellData (objPrintBusinessRulesDialog.SwfObject("swfname:=gridViewUnprintForms"), intRowCnt, 1)
			If Trim(UCase(strUnPrintableFormData)) = Trim(UCase(Trim(FRM_DS_GetValue(objData, "GeneralForms")))) Or Trim(UCase(strUnPrintableFieldsData)) = Trim(UCase("4001(Borrower Middle Name)"))  Then
				FRM_Logger_ReportPassEvent "verify '"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' value in 'UnPrintable forms' window ","'"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' form is displayed in the 'UnPrintable forms' window", Null
				Exit For
			Else
				FRM_Logger_ReportFailEvent "verify '"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' value in 'UnPrintable forms' window ","'"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' form is not displayed in the 'UnPrintable forms' window", Null
			End If
		Next
		
		'====== Clicking on Complete Fields ======
		GUI_SwfButton_Click objPrintBusinessRulesDialog.SwfButton("swfname:=btnCompleteFields")
		
		GUI_Object_WaitTillExistX objFieldQuickEditForm,30
		Set oDesc = Description.Create
		oDesc("micclass").Value = "swfedit"
		GUI_Object_WaitTillVisibleX objFieldQuickEditForm.ChildObjects(oDesc)(0),30
		GUI_SwfEdit_Set objFieldQuickEditForm.ChildObjects(oDesc)(0), "test"
		GUI_SwfButton_Click objFieldQuickEditForm.SwfButton("swfname:=btnOK")
		
		'====== Validating 'Printable forms' window  ======
		GUI_Object_WaitTillExistX objPrintBusinessRulesDialog, 30
		intRowsInPrintableForms = GUI_List_GetNumberofRows(objPrintBusinessRulesDialog.SwfObject("swfname:=gridViewPrintForms"))
		Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement 
		If intRowsInPrintableForms > 0 Then
			For intCnt = 0 To intRowsInPrintableForms
				strPrintableData = GUI_List_GetCellData (objPrintBusinessRulesDialog.SwfObject("swfname:=gridViewPrintForms"), intCnt, 0)
				If Trim(UCase(strPrintableData)) = Trim(UCase(Trim(FRM_DS_GetValue(objData, "GeneralForms")))) Then
					FRM_Logger_ReportPassEvent "verify '"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' value in 'Printable forms' window ","'"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' form is displayed in the 'Printable forms' window", Null
					boolDataExist = True
					Exit For
				End If
			Next
		End If
		intIncrement = intIncrement + 1 
	Loop Until boolDataExist = True Or intIncrement = 4
	
	If NOT boolDataExist Then
		FRM_Logger_ReportFailEvent "verify '"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' value in 'Printable forms' window ","'"& Trim(FRM_DS_GetValue(objData, "GeneralForms")) & "' form is not displayed in the 'Printable forms' window", Null
	End If
	'====== Set Nothing for Created Objects  ======
	Set objData                      = Nothing
	Set objFormSelectorDialog        = Nothing
	Set objPrintBusinessRulesDialog  = Nothing
	Set objFieldQuickEditForm        = Nothing
	Set objScrollBar                 = Nothing
	Set objMilestoneCompletionList   = Nothing
	
End Function



'This function is used to validate Loan Form Printing Rule with CurrentRole Condition
'@code
'    Function BIZ_BR_LoanFormPrintingRule_CurrentRoleCondition(strRowId)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_LoanFormPrintingRule_CurrentRoleCondition(strRowID)
	
	FRM_Logger_ReportInfoEvent "Loan Form Printing Rule", "Validation with Current Role Condition", null
	
	'====== Declaring the Variables ======
	Dim objData, obUserData, strLoanUser, strMileStonetextName
	
	'====== Creation of Objects for Application windows ======
	Set objData    = FRM_DS_GetTestData("BusinessRule_LoanFormPrinting", "LoanFormPrinting", strRowID)
	Set obUserData = FRM_DS_GetGlobalTestData("Login", "BusinessRules_NonAdmin")
	
	Set objProcessorSelectionDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ProcessorSelectionDialog")
	Set objuserAvaliable = objProcessorSelectionDialog.SwfObject("swfname:=gvUsers")
	Set objSelectUserScrollBar = objProcessorSelectionDialog.SwfScrollBar("swfname:=vPanelScrollBar")
	'====== Get the Loand User & MileStone Variables  ======
	strLoanUser = obUserData.Item("UserName")
    
	strMileStonetextName = FRM_DS_GetValue(objData, "Milestone")
	BIZ_AlertsAndLog_ClickOnRecord "Log", strMileStonetextName
	
	'====== Selecting the Mile Sote User ======
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxCurrentLA")
'	BIZ_Loan_SelectMilestoneUser(strLoanUser)
	GUI_List_ActOnRow objuserAvaliable,0, True, False, False, "Double"
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=pictureBoxNextLA")
'	BIZ_Loan_SelectMilestoneUser(strLoanUser)
	GUI_List_ActOnRow objuserAvaliable,0, True, False, False, "Double"
	GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=checkBoxFinished"),"ON"	
	GUI_Dialog_Encompass_OKX 5, ""
	
	Set objData    = Nothing
	Set obUserData = Nothing
	
End Function



'This function is used to Import the rule from loacl drive
'@code
'    	BIZ_BR_Export_LoanFormPrintingRule(strRuleName)
'@endcode
'@param strRuleName - passing rule name

Function BIZ_BR_Export_LoanFormPrintingRule(strRuleName)
        
    FRM_Logger_ReportInfoEvent "BR_Export_LoanFormPrintingRule_Local", "Export Loan Form Priting Rule: " & strRuleName, null
	
	'====== Declaring the Variables ======
    Dim objButtonView, objMainView, objScrollBar, boolExist, strFileLocation
    
    '====== Creating the Objects for Application windows ======
    Set objButtonView    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMainView      = objButtonView.SwfObject("swfname:=listViewRule")
	Set objScrollBar     = objButtonView.SwfScrollBar("swfname:=vPanelScrollBar")
	
	Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_Object_WaitTillExistX objMainView, 120
	boolExist = GUI_List_ClickRow (objMainView, objScrollBar, 0, strRuleName, True, False, False, "Single")
    
    If boolExist Then
	    GUI_SwfObject_Click objButtonView.SwfObject("swfname:=stdIconBtnExport")
		Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	    GUI_Object_WaitTillExistX objButtonView.Dialog("text:=Save As"), 180
	
	    '============================= Save the file in Test Report folder ============================
	    strFileLocation = FRM_RT_ReportDirPath & strRuleName 
	    FRM_Logger_ReportInfoEvent "Save the file", "Save file at location: " & strFileLocation, Null
	
	    GUI_WinEdit_Type objButtonView.Dialog("text:=Save As").WinEdit("attached text:=File name:","object class:=Edit"), strFileLocation
	    GUI_WinButton_Click objButtonView.Dialog("text:=Save As").WinButton("text:=&Save")
	    Wait g_LongWaitShort        'Explicit Wait Added Due to Sync
	    
        If UTIL_File_FileExists(strFileLocation&".zip") Then
	   		FRM_Logger_ReportPassEvent "File should be exported to local","Successfully exported business rule,file path:"&strFileLocation,Null 
		Else
	   		FRM_Logger_ReportFailEvent "File should be exported to local","Failed to export the business rule,file path:"&strFileLocation,Null 
		End If
	    
    Else
	    FRM_Logger_ReportFailEvent "Export Print Auto Selection", "Export Print Auto Selection doesn't exist in Business Rule: " & strConditionName, null
    End If
    
    '====== Set Nothing for created objects ======
    Set objButtonView        = Nothing
	Set objMainView          = Nothing
	Set objScrollBar         = Nothing

	'====== Returing the File Location ======
    BIZ_BR_Export_LoanFormPrintingRule = strFileLocation
    
End Function



'This function is used to import the business rule
'@code
'    Function BIZ_BR_Import_LoanFormPrintingRule(strFileName)
'@endcode
'@param strFileName - File name of a zip file.

Function BIZ_BR_Import_LoanFormPrintingRule(strFileName)

    FRM_Logger_ReportInfoEvent "BR_Import_LoanFormPrintingRule_Local", "Import Loan Form Printing Rule: " & strFileName, null

	'====== Declaring the Variables ======
    Dim objSettings, objImportRuleDialog
    
	'====== Creating the Objects for Application Windows ======
	Set objSettings         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objImportRuleDialog = objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog")
	Wait g_ShortWaitMedium  'Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	'====== Clicking on the Import Button ======
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnImport")
	Wait g_ShortWaitMedium + g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_Object_WaitTillExistX objSettings.Dialog("text:=Open").WinEdit("attached text:=File &name:","index:=0"),30
	
	'====== Start creation of Loan Form Importing Rule ======
	GUI_WinEdit_Type objSettings.Dialog("text:=Open").WinEdit("attached text:=File &name:","object class:=Edit"), strFileName
	GUI_WinButton_Click objSettings.Dialog("text:=Open").Winbutton("text:=&Open")
	Wait g_ShortWaitMedium + g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	'====== Validation of  Loan Form Printing Importing Rule ======
	If GUI_Object_IsExistX(objImportRuleDialog, 120) Then
		FRM_Logger_ReportPassEvent "Verification of Business Rule Import window","Business Rule Import window has been displayed.",Null 
		GUI_SwfButton_Click objImportRuleDialog.SwfButton("swfname:=btnValidateImport")
		If GUI_Object_IsExistX(objImportRuleDialog.Dialog("text:=Rule Import"),30) Then
	       GUI_WinButton_Click objImportRuleDialog.Dialog("text:=Rule Import").WinButton("text:=&Yes")
	    End If
		If GUI_Object_IsExistX(objImportRuleDialog,30) Then
		  GUI_SwfButton_Click objImportRuleDialog.SwfButton("swfname:=btnValidateImport")
		  FRM_Logger_ReportPassEvent "Validation of Rule in Import Rule Window","Rule has been validated in Import Rule Window",Null 
	   End If
	Else
		FRM_Logger_ReportFailEvent "Verification of Business Rule Import window","Business Rule Import window has not been displayed.",Null 
	End If
		
	'====== Set Nothing for Created Objects ======		
	Set objSettings         = Nothing
	Set objImportRuleDialog = Nothing
	
End Function



'This function is used to export the rule from loacl drive
'@code
'    	BIZ_BR_Export_Rule(strRuleName)
'@endcode
'@param strRuleName - passing rule name
'@param strScreenName - passing screen name

Function BIZ_BR_Export_Rule(strRuleName,strScreenName)
        
    FRM_Logger_ReportInfoEvent "BIZ_BR_Export_Rule", "Export '" & strScreenName & "' screen Rule: " & strRuleName, null

	'====== Declaring the Variables ======
    Dim objButtonView, objMainView, bjScrollBar, boolExist, strFileLocation
    
    '====== Creating the Objects for Application Windows ======
    Set objButtonView    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMainView      = objButtonView.SwfObject("swfname:=listViewRule")
	Set objScrollBar     = objButtonView.SwfScrollBar("swfname:=vPanelScrollBar")
	
	boolExist = GUI_List_ClickRow (objMainView, objScrollBar, 0, strRuleName, True, False, False, "Single")
    
    If boolExist Then
	    GUI_SwfObject_Click objButtonView.SwfObject("swfname:=stdIconBtnExport")
	    GUI_Object_WaitTillExistX objButtonView.Dialog("text:=Save As"), 120
	
	    '============================= Save the file in Test Report folder ============================
	    strFileLocation = FRM_RT_ReportDirPath & strRuleName & UTIL_Date_Now_mmddyyyy_HHnnss
	    FRM_Logger_ReportInfoEvent "Save the file", "Save file at location: " & strFileLocation, Null
	
		GUI_WinEdit_Type objButtonView.Dialog("text:=Save As").WinEdit("attached text:=File name:","object class:=Edit"), strFileLocation
	    GUI_WinButton_Click objButtonView.Dialog("text:=Save As").WinButton("text:=&Save")
	    Wait g_LongWaitShort        'Explicit Wait Added Due to Sync
	   
        If UTIL_File_FileExists(strFileLocation&".zip") Then
	   		FRM_Logger_ReportPassEvent "File should be exported to local","Successfully exported business rule,file path:"&strFileLocation,Null 
		Else
	   		FRM_Logger_ReportFailEvent "File should be exported to local","Failed to export the business rule,file path:"&strFileLocation,Null 
		End If
	    
    Else
	    FRM_Logger_ReportFailEvent "Export '" & strScreenName & "' Rule ", "Export '" & strScreenName & "' Rule doesn't exist in Business Rule: " & strConditionName, null
    End If
    
    '====== Set Nothing for created Objects ======
    Set objButtonView        = Nothing
	Set objMainView          = Nothing
	Set objScrollBar         = Nothing

    BIZ_BR_Export_Rule = strFileLocation
    
End Function



'This function is used to import the business rule
'@code
'    Function BIZ_BR_Import_Rule(strFileName)
'@endcode
'@param strFileName - File name of a zip file.
'@param strScreenName - Screen Name

Function BIZ_BR_Import_Rule(strFileName,strScreenName)

    FRM_Logger_ReportInfoEvent "BIZ_BR_Import_Rule", "Import '" & strScreenName & "' screen Rule Location: " & strFileName, null

	'====== Declaring the Objects ======
    Dim objSettings, objImportRuleDialog

	'====== Creating the Objects for Application Windows ======
	Set objSettings         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objImportRuleDialog = objSettings.SwfWindow("swfname:=ImportBusinessRuleDialog")
	
	'====== Clicking the import button ======
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnImport")
	GUI_Object_WaitTillExistX objSettings.Dialog("text:=Open").WinEdit("attached text:=File &name:","index:=0"),30
	
	'====== Start improting the Rule ======
	GUI_WinEdit_Type objSettings.Dialog("text:=Open").WinEdit("attached text:=File &name:","object class:=Edit"), strFileName
	GUI_WinButton_Click objSettings.Dialog("text:=Open").Winbutton("text:=&Open")
	
	'====== Validating the import Rule ======
	If GUI_Object_IsExistX(objImportRuleDialog, 30) Then
		FRM_Logger_ReportPassEvent "Verification of Business Rule Import window","Business Rule Import window has been displayed.",Null 
		GUI_SwfButton_Click objImportRuleDialog.SwfButton("swfname:=btnValidateImport")
		If GUI_Object_IsExistX(objImportRuleDialog.Dialog("text:=Rule Import"),30) Then
	       GUI_WinButton_Click objImportRuleDialog.Dialog("text:=Rule Import").WinButton("text:=&Yes")
	    End If
		If GUI_Object_IsExistX(objImportRuleDialog,30) Then
		  GUI_SwfButton_Click objImportRuleDialog.SwfButton("swfname:=btnValidateImport")
		  FRM_Logger_ReportPassEvent "Validation of Rule in Import Rule Window","Rule has been validated in Import Rule Window",Null 
	   End If
	Else
		FRM_Logger_ReportFailEvent "Verification of Business Rule Import window","Business Rule Import window has not been displayed.",Null 
	End If
	
	'====== Set Nothing for Created objects ======
	Set objSettings         = Nothing
	Set objImportRuleDialog = Nothing
	
End Function



'This function is used to import the business rule
'@code
'   BR_VerifyImportedRuleDetails(strRuleName)
'@endcode
'@param strRuleName - read rule name from data sheet

Function BR_VerifyImportedRuleDetails(strRuleName)

    FRM_Logger_ReportInfoEvent "Verify Imported Rule Details", "Verify Imported Rule Details in 'Persona Access To Loan Action' Page", null

	'====== Declaring the variables ======
    Dim objButtonView, objListView, boolExist, strRowNo, strRuleStatus
    
    '====== Creating the objects for Application/windows ======
    Set objButtonView      =  SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objListView        =  objButtonView.SwfObject("swfname:=listViewRule")

	'====== Selecting the Rule to Import Rule ======
    boolExist = GUI_List_ClickRow (objListView, objScrollBar, "Name", strRuleName, True, False, False, "Single")
    
    '====== Start Validate/Verify the Rule ======
	If boolExist Then
        strRowNo  =  GUI_List_GetRowIndex(objListView, "Name", strRuleName)
        strRuleStatus  =  GUI_List_GetCellData(objListView, strRowNo, "Status")
        strExpectedRuleName =  GUI_List_GetCellData(objListView, strRowNo, "Name")
        FRM_VerifyEqual strExpectedRuleName, strExpectedRuleName, "Importing Rule", "Rule has been Imported. Rule Name: " & strExpectedRuleName
        FRM_VerifyEqual strRuleStatus, "Inactive", "Rule Status", "Verified Rule Status"
        FRM_Logger_ReportPassEvent "Verification of import fields are correct","Verified All the import fields are correct in 'Business Rule Import' window",Null 
    Else
        FRM_Logger_ReportFailEvent "Verify Rule Imported or not","Failed to import Rule,Rule Name:"&strRuleName,Null
    End If

'====== Set Nothing for Created objects ======
    Set objButtonView  =  Nothing
    Set objListView    =  Nothing
    
End Function



'This function is used to initialize creation of new Persona Access To Loan Action Create rule 
'@code
'    BIZ_BR_PersonaAccessToLoanAction_CreateRule(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PersonaAccessToLoanAction_CreateRule(strRowID)

	FRM_Logger_ReportInfoEvent "Add Persona Access To Loan Action Rule", "Add Persona Access To Loan Action with given name ", null
	
	'====== Declaring the Variables ======
	Dim objMainView, objLoanActionAccessRuleDialog, strRuleName
	
	'====== Creating the Objects ======
	Set objMainView                   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanActionAccessRuleDialog = objMainView.SwfWindow("swfname:=LoanActionAccessRuleDialog")
	
	'====== Start Creating the New Rule ======
	GUI_SwfObject_Click objMainView.SwfObject("swfname:=stdIconBtnNew")
	GUI_Object_WaitTillExistX objLoanActionAccessRuleDialog,30
	strRuleName = BIZ_BR_PersonaAccessToLoanAction_SetRule(strRowID)
	BIZ_BR_PersonaAccessToLoanAction_CreateRule = strRuleName
	
	'====== Set Nothing for Created objects ======
	Set objMainView                   = Nothing
	Set objLoanActionAccessRuleDialog = Nothing
	
End Function



'This function is used to set data for Persona Access To Loan Ation window
'@code
'    BIZ_BR_PersonaAccessToLoanAction_SetRule(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PersonaAccessToLoanAction_SetRule(strRowID)
	
	
	FRM_Logger_ReportInfoEvent "Set Persona Access To Loan Action Rule", "Setting data for 'Persona Access To Loan Action' rule", null
	
	'====== Declaring the Variables ======
	Dim objMainView, objLoanActionAccessRuleDialog, objEditFormDialog, objAddPrintFormDialog, objData, strRuleName
	
	'====== Creating Objects for screens ======
	Set objMainView                   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanActionAccessRuleDialog = objMainView.SwfWindow("swfname:=LoanActionAccessRuleDialog")
	Set objEditFormDialog             = objLoanActionAccessRuleDialog.SwfWindow("swfname:=EditPrintFormDialog")
	Set objAddPrintFormDialog         = objEditFormDialog.SwfWindow("swfname:=AddPrintFormDialog")
	Set objData                       = FRM_DS_GetTestData("BusinessRule_PersonaAccessToLoanAction", "RuleDetails", strRowID)
	
	strRuleName = FRM_DS_GetValue(objData, "RuleName")
	
	'====== Set the Rule Name ======
	GUI_SwfEdit_Set objLoanActionAccessRuleDialog.SwfEdit("swfname:=textBoxName"),strRuleName
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Channel")) Then        
        GUI_SwfList_SetCheckbox objLoanActionAccessRuleDialog.SwfList("swfname:=chkListChannels"),FRM_DS_GetValue(objData,"Channel"),FRM_DS_GetValue(objData,"ChannelValue") 
	End If
	
	'====== Checking the Condition ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Condition")) Then
		GUI_SwfRadioButton_Click objLoanActionAccessRuleDialog.SwfRadioButton("swfname:=radioCondition")
		GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objData, "Condition")
		If FRM_DS_GetValue(objData, "Condition") = "Loan Purpose" Then
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanPurpose")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Advanced Conditions" Then
			GUI_SwfButton_Click objLoanActionAccessRuleDialog.SwfButton("swfname:=btnSelect")
			GUI_SwfObject_click objLoanActionAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").Swfobject("swfname:=btnAddFilter")
			GUI_SwfEdit_Set objLoanActionAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtField"), FRM_DS_GetValue(objData, "FilterField")
			Util_Win_SendKey "{TAB}"
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfComboBox("swfname:=cboOperator"), FRM_DS_GetValue(objData, "FilterOperator")
			GUI_SwfEdit_Set objLoanActionAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfEdit("swfname:=txtStringValue"), FRM_DS_GetValue(objData, "FilterValue")
			GUI_SwfButton_Click objLoanActionAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfWindow("swfname:=AddEditFilterDialog").SwfButton("swfname:=btnOK")
			GUI_SwfButton_Click objLoanActionAccessRuleDialog.SwfWindow("swfname:=AdvConditionEditor").SwfButton("swfname:=btnOK")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Doc Type" Then
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboCondition"), Mid(FRM_DS_GetValue(objData, "DocType"), 5)
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Program" Then
			GUI_SwfEdit_Set objLoanActionAccessRuleDialog.SwfEdit("swfname:=textConditionCode"), FRM_DS_GetValue(objData, "LoanProgram")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Type" Then
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanType")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Loan Status" Then
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "LoanStatus")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Property State" Then
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "PropertyState")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Rate" Then
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Rate")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Finished Milestone" Then
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Milestone")
		ElseIf FRM_DS_GetValue(objData, "Condition") = "Current Role" Then
			GUI_SwfObject_Click objLoanActionAccessRuleDialog.SwfObject("swfname:=btnSelect")
			GUI_List_ClickRow objLoanActionAccessRuleDialog.SwfWindow("swfname:=SelectCurrentRoleForm").SwfObject("swfname:=lsvMilestone"), Null, 0, FRM_DS_GetValue(objData, "CurrentRole"), True, False, False, "Double"
			GUI_SwfComboBox_Select objLoanActionAccessRuleDialog.SwfComboBox("swfname:=comboCondition"), FRM_DS_GetValue(objData, "Milestone")
		End If
	End If
	
	'====== Clicking the Add Butotn ======
	GUI_SwfButton_Click objLoanActionAccessRuleDialog.swfButton("swfname:=addBtn")
	
	'====== Adding the Loan Action ======
	BIZ_BR_PersonaAccessToLoanAction_AddLoanActions FRM_DS_GetValue(objData, "LoanAction")
	
	'====== Adding the Loan Personas ======
	BIZ_BR_PersonaAccessToLoanAction_AddPersona FRM_DS_GetValue(objData, "Persona")
	
	GUI_SwfButton_Click objLoanActionAccessRuleDialog.SwfButton("swfname:=okBtn")
	
	'====== Set Nothing for Created objects ======
	Set objMainView                   = Nothing
	Set objLoanActionAccessRuleDialog = Nothing
	Set objEditFormDialog             = Nothing
	Set objAddPrintFormDialog         = Nothing
	Set objData                       = Nothing
	
	'====== Returing the Rule Name ======
	BIZ_BR_PersonaAccessToLoanAction_SetRule = strRuleName
	
End Function



'This function is used to set data for Persona Access To Loan Action AddPersona
'@code
'    BIZ_BR_PersonaAccessToLoanAction_AddPersona(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_BR_PersonaAccessToLoanAction_AddPersona(strRowID)

	FRM_Logger_ReportInfoEvent "BIZ_BR_PersonaAccessToLoanAction_AddPersona", "Add Persona to 'Persona Access To Loan Action' rule", null
	
	'====== Declaring the Variables ======
	Dim objPersonaAccessToLoanAction, objData, strPersona, arrPersona, arrRights, intPersonaCnt, boolPersonalSelected, intRowCnt
	
	'====== Creating Objects for screens ======
	Set objPersonaAccessToLoanAction = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanActionAccessRuleDialog").SwfObject("swfname:=panel1")
	Set objData                      = FRM_DS_GetTestData("BusinessRule_PersonaAccessToLoanAction", "LoanActions", strRowID)

	'====== Spliting the Personas ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Persona")) Then
	   strPersona = Trim(FRM_DS_GetValue(objData, "Persona"))
	   arrPersona = Split(strPersona,",")
	   arrRights = Split(Trim(FRM_DS_GetValue(objData, "Rights")),",")
    End If
        
    '====== Adding the Personas ======
   For intPersonaCnt = 0 To UBound(arrPersona)
		boolPersonalSelected = GUI_List_ClickRow (objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewRights"),objScrollBar,0,arrPersona(intPersonaCnt),True,False,False,"Single")
		If boolPersonalSelected Then
			FRM_Logger_ReportPassEvent "Required Persona To be Present in List ","Required Persona '" & arrPersona(intPersonaCnt) & "' selected in the List", null
		Else 
			FRM_Logger_ReportPassEvent "Required Persona To be Present in List ","Required Persona '" & arrPersona(intPersonaCnt) & "' not selected in the List", null
		End If
		
		'====== Selecting the Rights ======
		intRowCnt = GUI_List_GetRowIndex(objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewRights"),"Persona",arrPersona(intPersonaCnt))
		boolPersonalSelected = GUI_List_ClickOnCell (objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewRights"),objScrollBar,intRowCnt,1,True,False,False,"Single")
		Set oDesc = Description.Create
		oDesc("micclass").Value = "SwfComboBox"
		objPersonaAccessToLoanAction.SwfObject("swfname:=gridViewRights").ChildObjects(oDesc)(0).Select arrRights(intPersonaCnt)
	Next
    
    '====== Set Nothing for created objects ======
	Set objPersonaAccessToLoanAction = Nothing
	Set objData                      = Nothing

End Function



'This function is used to import the business rule
'@code
'   BIZ_BR_VerifyImportedRuleDetails(strRuleName)
'@endcode
'@param strRuleName - read rule name from data sheet

Function BIZ_BR_VerifyImportedRuleDetails(strRuleName,strScreenName)

    FRM_Logger_ReportInfoEvent "Verify Imported Rule Details", "Verify Imported Rule Details in '" & strScreenName & "' Page", null

	'====== Declaring the variables ======
    Dim objButtonView, objListView, boolExist, strRowNo, strRuleStatus
    
    '====== Creating the objects for Application/windows ======
    Set objButtonView      =  SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objListView        =  objButtonView.SwfObject("swfname:=listViewRule")

	'====== Selecting the Rule to Import Rule ======
    boolExist = GUI_List_ClickRow (objListView, objScrollBar, "Name", strRuleName, True, False, False, "Single")
	
	'====== Selecting the Rule to Import Rule ======
    boolExist = GUI_List_ClickRow (objListView, objScrollBar, "Name", strRuleName, True, False, False, "Single")
    
    '====== Start Validate/Verify the Rule ======
	If boolExist Then
        strRowNo  =  GUI_List_GetRowIndex(objListView, "Name", strRuleName)
        strRuleStatus  =  GUI_List_GetCellData(objListView, strRowNo, "Status")
        strExpectedRuleName =  GUI_List_GetCellData(objListView, strRowNo, "Name")
        FRM_VerifyEqual strExpectedRuleName, strExpectedRuleName, "Importing Rule", "Rule has been Imported. Rule Name: " & strExpectedRuleName
        FRM_VerifyEqual strRuleStatus, "Inactive", "Rule Status", "Verified Rule Status"
        FRM_Logger_ReportPassEvent "Verification of import fields are correct","Verified All the import fields are correct in 'Business Rule Import' window",Null 
    Else
        FRM_Logger_ReportFailEvent "Verify Rule Imported or not","Failed to import Rule,Rule Name:"&strRuleName,Null
    End If

'====== Set Nothing for Created objects ======
    Set objButtonView  =  Nothing
    Set objListView    =  Nothing
    
End Function


''This function is used to Create Replica Rule to Validate 'Lock Extesion' 
'@code
'   BIZ_BR_SetRuleData(objNewRuleCreateDialog,strMenuItem,objTestData,strTCName)
'@endcode
'@param strTCName - Test Case Name 
''@param objNewRuleCreateDialog - Window reference
'@param objTestData - Object for Test Data reference
'@param strScreenName - Rule Window Name

Function BIZ_BR_SetRuleData(objNewRuleCreateDialog,strScreenName,objTestData,strTCName)
	
	FRM_Logger_ReportInfoEvent "BIZ_BR_SetRuleData", " Start Creating New Rule for '" & strScreenName & "'", null
	
	'====== Declaring the objects ======
	Dim strRuleName, objMainForm
	
	'====== Creating the objects  ======
	Set objMainForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	'====== Creation of Replica Rule ======
	GUI_SwfObject_Click objMainForm.SwfObject("swfname:=stdIconBtnNew")
	GUI_Object_WaitTillVisibleX objNewRuleCreateDialog, 90
	If objNewRuleCreateDialog.Exist(5) Then
		FRM_Logger_ReportPassEvent "'" & strScreenName & "' Rule window" , "'" & strScreenName & "' Rule window Loaded", null
	Else 
		FRM_Logger_ReportFailEvent "'" & strScreenName & "' Rule window" ,"'" & strScreenName & "' Rule window Not Loaded", null
	End If
	
	strRuleName = FRM_DS_GetValue(objTestData,"RuleName")
	GUI_SwfEdit_Set objNewRuleCreateDialog.swfEdit("swfname:=textBoxName"), strRuleName
	GUI_SwfRadioButton_Click objNewRuleCreateDialog.SwfRadioButton("swfname:=radioCondition")
	GUI_SwfComboBox_Select objNewRuleCreateDialog.SwfComboBox("swfname:=comboType"), FRM_DS_GetValue(objTestData,"Condition") 
	Wait g_LongWaitSmall 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_List_Select objNewRuleCreateDialog.SwfList("swfname:=chkdListTPOActions"), FRM_DS_GetValue(objTestData,"TPOActions")
	Wait g_TinyWaitLarge 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	'====== Creation the rule w.r.t screen ======
	If Trim(strTCName) = "LoanActionCompletion_ValidationForLockExtension" Then
		GUI_SwfButton_Click objNewRuleCreateDialog.swfButton("swfname:=addDocBtn")
		strListItemtoGet = GUI_List_GetCellData(objNewRuleCreateDialog.swfWindow("swfname:=AddFormBaseDialog").SwfObject("swfname:=gridViewAll"),2, 0)
		GUI_List_ClickRow objNewRuleCreateDialog.swfWindow("swfname:=AddFormBaseDialog").SwfObject("swfname:=gridViewAll"),Null,0, strListItemtoGet,False,False,False,"Single"      
		GUI_SwfComboBox_Select objNewRuleCreateDialog.swfWindow("swfname:=AddFormBaseDialog").SwfComboBox("swfname:=cboRuleValues"), FRM_DS_GetValue(objTestData,"ForLoanAction")
		GUI_SwfButton_Click objNewRuleCreateDialog.swfWindow("swfname:=AddFormBaseDialog").swfButton("swfname:=okBtn")
    ElseIf Trim(strTCName) = "PersonaAccesstoFields_ValidationForLockExtension" Then
    	GUI_SwfButton_Click objNewRuleCreateDialog.swfButton("swfname:=addBtn")
    	GUI_SwfEdit_Set objNewRuleCreateDialog.swfWindow("swfname:=AddFields").swfEdit("swfname:=textBoxID1"),FRM_DS_GetValue(objTestData,"FieldID") 
    	GUI_SwfButton_Click objNewRuleCreateDialog.swfWindow("swfname:=AddFields").swfButton("swfname:=okBtn")
    ElseIf Trim(strTCName) = "PersonaAccesstoLoans_ValidationForLockExtension" Then	
    ElseIf Trim(strTCName) = "PersonaAccessToLoanActions_ValidationForLockExtension" Then	
    	GUI_SwfButton_Click objNewRuleCreateDialog.swfButton("swfname:=addDocBtn|addBtn")
    	Set objAddLoanActionWnd = objNewRuleCreateDialog.swfWindow("swfname:=AddLoanActionsForPersonaAccess")
    	boolItemSelected = GUI_List_ClickRow(objAddLoanActionWnd.swfObject("swfname:=lvwLoanActionList"),Null,"Loan Action","Register Loan",True,False,False,"Single")
		GUI_SwfButton_Click objAddLoanActionWnd.swfButton("swfname:=btnOK")
	ElseIf Trim(strTCName) = "FieldDataEntry_ValidationForLockExtension" Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfButton("swfname:=addFieldBtn")
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfEdit("swfname:=textBoxField"), FRM_DS_GetValue(objTestData,"FieldID")
		GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfTab("swfname:=tabControl1"), "Pre-Required Fields"
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfButton("swfname:=addBtn")
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfWindow("swfname:=AddFields").SwfEdit("swfname:=textBoxID1"), FRM_DS_GetValue(objTestData,"Pre-RequiredFields")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfWindow("swfname:=AddFields").SwfButton("swfname:=okBtn")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FieldRuleDialog").SwfWindow("swfname:=EditFieldDialog").SwfButton("swfname:=okBtn")
	ElseIf Trim(strTCName) = "FieldTriggers_ValidationForLockExtension" Then
		GUI_SwfButton_Click objNewRuleCreateDialog.SwfButton("swfname:=addFieldBtn")
		BIZ_BR_FieldTrigger_AddEdit_FieldEvent strTCName
	End If
	
	'====== Returing the Rule ======
	BIZ_BR_SetRuleData = strRuleName
	
	'====== Set Nothing for created objects ======
	Set objMainForm = Nothing
	
End Function


'This function is used to Save the rule
'@code
'   BIZ_BR_SaveRule(objNewRuleCreateDialog, strScreenName, strRuleName)
'@endcode
'@param objNewRuleCreateDialog - Rule window Object
'@param strScreenName - Rule Window/Screen Name
'@Param strRuleName - Rule Name

Function BIZ_BR_SaveRule(objNewRuleCreateDialog, strScreenName, strRuleName)

	FRM_Logger_ReportInfoEvent "Save the '" & strScreenName & "' Rule", "Save the '" & strScreenName & "' in Business Rule", null
	
	'====== Declaring the variables ======
	Dim intRowIdx
	
	GUI_SwfButton_Click objNewRuleCreateDialog.SwfButton("swfname:=okBtn")
	Wait g_LongWaitSmall 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_Object_WaitTillEnabledX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule"), 90
	
	'====== Verifying the created Rule ======
	intRowIdx = GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule"), 0, strRuleName)
	FRM_VerifyTrue intRowIdx >= 0, "'" & strScreenName & "' Rule creation","Rule has been created & Saved. Rule Name: '" & strRuleName & "'"

End Function


'This function is used to select/open existing rule from the list
'@code
'   BIZ_BR_OpenExistingRule(strScreenName, strRuleName)
'@endcode
'@param strScreenName - Rule Window/Screen Name
'@Param strRuleName - Rule Name


Function BIZ_BR_OpenExistingRule(strScreenName, strRuleName)

	FRM_Logger_ReportInfoEvent "Opening '" & strScreenName & "' Rule", "Open '" & strScreenName & "' Rule with name'" & strRuleName & "'", null
	
	'====== Declaring the variables ======
	Dim objFieldDataEntryList, scrollbarFieldDataEntry, exist
	
	'====== Creating objects ======
	Set objRuleWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set objscrollbar = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	'====== Opening the Existing Rule ======
	GUI_List_ClickRow objRuleWnd, objscrollbar, "Name", strRuleName, True, False, False, "Double"
	
	'====== Set Nothing for created objects ======
	Set objRuleWnd = Nothing
	Set objscrollbar = Nothing

End Function


'This function is used to Verify 'Lock Extension' Option Under Section3
'@code
'    Function BIZ_BR_ValidateLockExtensionOption_UnderSection3(objNewRuleCreateDialog, objTestData)
'@endcode
'@param objNewRuleCreateDialog - Window reference
'@param objTestData - Object for Test Data reference

Function BIZ_BR_ValidateLockExtensionOption_UnderSection3(objNewRuleCreateDialog, objTestData)

	FRM_Logger_ReportInfoEvent "BR_ValidateLockExtension_OptionUnderSection3", "Validate 'Lock Extension' Option Under Section3", null
	
	'====== Declaring the variables ======
	Dim arrListItems, blnListItemExist
	
	blnListItemExist = False
	GUI_Object_WaitTillVisibleX objNewRuleCreateDialog, 90
	'====== Verifying the 'Submit for Purchase' Option under Section 3 ======
	arrListItems = Split(GUI_Object_GetPropertyValue(objNewRuleCreateDialog.SwfList("swfname:=chkdListTPOActions"),"all items"),vbLf)
	For IntIterator = LBound(arrListItems) To UBound(arrListItems) 
		If UCase(Trim(arrListItems(IntIterator))) = UCase("Re-submit Loan") Then
			FRM_VerifyEqual Trim(arrListItems(IntIterator + 1)), Trim(FRM_DS_GetValue(objTestData,"TPOActions")), "'Lock Extension' Check Box should be positioned exactly below the 'Re-submit Loan'", _
			"'Lock Extension' Check Box is positioned exactly below 'Re-submit Loan' option under section 3"
			blnListItemExist = True
			Exit For
		End If
	Next
	
	'====== Validating the False Statements ======
	If Not blnListItemExist Then
		FRM_Logger_ReportFailEvent "Validation of 'Lock Extension' List Item",  "'Lock Extension' List Item is NOT Existed Under TPO Action List Item", Null
	End If
	
End Function



'This function is used to Add Template to Loan Template Set
'@code
'    BIZ_BR_AddToLoanTemplate(strTemplate,strLoanTemplate,strTemplateSet,strFolderName)
'@endcode
'@param strLoanTemplate - The name of a Loan Template
'@param strTemplate     - Template to select
'@param strTemplateSet  - Template name
'@param strFolderName   - The name of a folder to select

Function BIZ_BR_AddToLoanTemplate(strLoanTemplate,strTemplate,strTemplateSet,strFolderName)

	FRM_Logger_ReportInfoEvent "Add Template to Loan Template set", "Add Template to Loan Template Set using Row Id in the Settings", null
    
    Dim objWndLoanTemplate,objWndLoanTemplateDetails,objWndTemplateSelection,objTemplateSelectionList,objScrollBar,objDataTemplateList,boolLoanTemplateExist
	
	Set objWndLoanTemplate         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objWndLoanTemplateDetails  = objWndLoanTemplate.SwfWindow("swfname:=LoanTemplateDialog")
	Set objWndTemplateSelection    = objWndLoanTemplateDetails.SwfWindow("swfname:=TemplateSelectionDialog")
	Set objTemplateSelectionList   = objWndTemplateSelection.SwfObject("swfname:=gvDirectory")
	Set objScrollBar               = objWndTemplateSelection.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDataTemplateList        = objWndLoanTemplate.SwfObject("swfname:=gvDirectory")
    
	BIZ_Nav_HierarchyTree "Loan Templates", "Loan Template Sets"
	FRM_Logger_ReportInfoEvent "Creation of New Loan Template Set", "Creating New Loan Template. Loan Template Set: '" & strLoanTemplate & "'", null
	GUI_Object_WaitTillExistX objWndLoanTemplate, 60
	GUI_SwfComboBox_Select objWndLoanTemplate.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strFolderName
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	boolLoanTemplateExist = GUI_List_ClickRow(objDataTemplateList, scrollbarDataTemplate, "Name", strLoanTemplate, True, False, False, "Single")
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement	
	If  boolLoanTemplateExist Then
		GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDelete"), "SwfObject", "Delete Data Template"
		GUI_Dialog_Encompass_Yes ""
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	End If
	
	GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnAdd"), "SwfObject", "Add Data Template"
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("micclass:=SwfEdit","index:=0","focused:=True"), strLoanTemplate
	GUI_Object_Click objDataTemplateList, "SwfObject", "Data Template List"
	GUI_List_ClickRow objDataTemplateList, scrollbarDataTemplate, "Name", strLoanTemplate, True, False, False, "Double"	
	FRM_Logger_ReportInfoEvent "Select Loan Template", "Select Loan Template in Template Selection Dialog", null 

	Select Case Lcase (strTemplate)
		Case LCase ("Document Sets")
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnDocumentSet","index:=0"), "SwfObject", "Click on Template"
		Case LCase ("Loan Program")
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnLoanProgram","index:=0"), "SwfObject", "Click on Template"
		Case LCase ("Milestone Template")
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnMilestoneTemplate","index:=0"), "SwfObject", "Click on Template"
		Case LCase ("Closing Costs")
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnClosingCosts","index:=0"), "SwfObject", "Click on Template"
		Case LCase ("InputForm Set")
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnInputFormSet","index:=0"), "SwfObject", "Click on Template"
		Case LCase ("Settlement Service Providers")
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnProviders","index:=0"), "SwfObject", "Click on Template"
		Case LCase ("Task Set") 
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnTaskSet","index:=0"), "SwfObject", "Click on Template"
		Case LCase ("Data Template") 
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnDataTemplate","index:=0"), "SwfObject", "Click on Template"
		Case LCase ("Affiliate Template") 
			GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnAffiliates","index:=0"), "SwfObject", "Click on Template"
		Case Else
			FRM_Logger_ReportFailEvent "Select Loan Template", "Template not found", Null 
	End Select
	
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_List_ClickRow objTemplateSelectionList, objScrollBar, "Name", strTemplateSet, True, False, False, "Single"
	GUI_SwfButton_Click objWndTemplateSelection.SwfButton("swfname:=selectBtn","index:=0") 
	GUI_Object_WaitTillExistX objWndLoanTemplateDetails.SwfButton("swfname:=saveBtn","index:=0"), 60
	GUI_SwfButton_Click objWndLoanTemplateDetails.SwfButton("swfname:=saveBtn","index:=0")
	
	Set objWndLoanTemplate         = Nothing
	Set objWndLoanTemplateDetails  = Nothing
	Set objWndTemplateSelection    = Nothing
	Set objTemplateSelectionList   = Nothing
	Set objScrollBar               = Nothing
	Set objDataTemplateList        = Nothing
		
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\BusinessRules.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\ChangedCircumstances.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_ChangedCircumstances BIZ_Settings_ChangedCircumstances
'
' List of functions here
' @code
'   Function BIZ_ChangedCircumstances_SelectChangedCircumstance(strRowID)
'	Function BIZ_ChangedCircumstances_SetChangedCircumstanceDetails(strRowID)
'	Function BIZ_ChangedCircumstances_VerifySave(strRowID)
'   Funciton BIZ_ChangedCircumstances_Delete(strRowID)
'   Function BIZ_ChangedCircumstances_Add(strRowID)
'	Function BIZ_ChangedCircumstances_EditChangedCircumstanceDetails(strDescription, strNewDescription, strNewReason, strNewCode, strComments) 
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used for select a Changed Circumstance from the Changed Circumstances list table
'@code
'    BIZ_ChangedCircumstances_SelectChangedCircumstance(strRowID) 
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ChangedCircumstances_SelectChangedCircumstance(strRowID)
    FRM_Logger_ReportInfoEvent "Settings Changed Circumstance", "Select Changed Circumstance using Row Id '"&strRowID&"' in the Setttings_ChangedCircumstanceSetup datasheet", null
    
	Dim objChangedCircumstancesList,objScrollbar,objData
    Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "SelectChangedCircumstance", strRowID)
    Set objChangedCircumstancesList=SwfWindow("swfname:=Mainform").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewOptions")
    Set objScrollbar=SwfWindow("swfname:=Mainform").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")
    
    GUI_List_ClickRow ObjChangedCircumstancesList,objScrollbar,"Code",FRM_DS_GetValue(objData, "Code"),True,False,False,"Select a Changed Circustance"

	Set objChangedCircumstancesList=nothing
	Set objScrollbar=nothing
    Set objData=nothing
End Function



'This function is used for set the detail for Changed Circumstance 
'@code
'    BIZ_ChangedCircumstances_SetChangedCircumstanceDetails(strRowID) 
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ChangedCircumstances_SetChangedCircumstanceDetails(strRowID)
 
    FRM_Logger_ReportInfoEvent "Settings Changed Circumstance", "Set Changed Circumstance details using Row Id '"&strRowID&"' in the Setttings_ChangedCircumstanceSetup datasheet", null
    
	Dim objSettings, objData
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "SetChangedCircumstanceDetails", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then
		strDescription	=	FRM_DS_GetValue(objData, "Description")
       GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtDescription"), strDescription
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Reason")) Then
       GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cmbReason"),FRM_DS_GetValue(objData, "Reason")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Code")) Then
	   If GUI_Object_GetPropertyValue(objSettings.SwfEdit("swfname:=txtCode"),"enabled") Then
	       GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtCode"),FRM_DS_GetValue(objData, "Code")
	   End If
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Comments")) Then
       GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtComments"),FRM_DS_GetValue(objData, "Comments")
    End If
   
    Set objSettings = Nothing
    Set objData = Nothing
    
	BIZ_ChangedCircumstances_SetChangedCircumstanceDetails	=	strDescription
End Function



'This function is used for verify the result of save the Changed Circumstance 
'@code
'    BIZ_ChangedCircumstances_VerifySave(strRowID) 
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ChangedCircumstances_VerifySave(strRowID)
    FRM_Logger_ReportInfoEvent "Verify Save Changed Circumstance","",""
    
    Dim objChangedCircumstancesList,objData,objSettingsDialog
    Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "VerifySave", strRowID)
	
	If UTIL_String_IsEmpty(FRM_DS_GetValue(objData,"StaticMsg")) Then
	    Set objChangedCircumstancesList=SwfWindow("swfname:=Mainform").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewOptions")
	    If GUI_List_TextExists(objChangedCircumstancesList,"Code",FRM_DS_GetValue(objData,"Code")) Then
	       FRM_Logger_ReportPassEvent "Verify Save the Changed Circumstance","The Changed Circumstance has been saved successfully",""
	    Else
	       FRM_Logger_ReportErrorEvent "Verify Save the Changed Circumstance","The Changed Circumstance has not been saved successfully",""
	    End If

    Else
        Set objSettingsDialog=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("index:=0")	
	    If UTIL_String_IsEmpty(FRM_DS_GetValue(objData,"Code")) Then
		    GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),FRM_DS_GetValue(objData,"StaticMsg"),"Popup Dialog's Static Message"
	    Else
	        GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),FRM_DS_GetValue(objData,"StaticMsg")&" '"&FRM_DS_GetValue(objData, "Code")&"'.","Popup Dialog's Static Message"
	    End If
	    GUI_WinButton_Click objSettingsDialog.WinButton("text:=OK")
	End If
		
	Set objChangedCircumstancesList=Nothing
	Set objData=Nothing
    Set objSettingsDialog=Nothing
End Function



'This function is used for delete the selected Changed Circumstance 
'@code
'    BIZ_ChangedCircumstances_Delete(strRowID) 
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ChangedCircumstances_Delete(strRowID)
     
    Dim objChangedCircumstancesList,objData,objScrollbar
    Set objChangedCircumstancesList=SwfWindow("swfname:=Mainform").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewOptions")
    Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "SelectChangedCircumstance", strRowID)
    Set objScrollbar=SwfWindow("swfname:=Mainform").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")
    
    If GUI_List_TextExists(objChangedCircumstancesList,"Code",FRM_DS_GetValue(objData, "Code")) Then
        FRM_Logger_ReportInfoEvent "Delete the Changed Circumstance which 'Code' value is '"&FRM_DS_GetValue(objData, "Code")&"'","",""
    	GUI_List_ClickRow ObjChangedCircumstancesList,objScrollbar,"Code",FRM_DS_GetValue(objData, "Code"),True,False,False,"Select a Changed Circustance"
        BIZ_Settings_ClickDelete
        BIZ_Settings_Dialog_ClickYes 
    End If
	
    Set objChangedCircumstancesList=nothing
    Set objData = nothing
    Set objScrollbar=nothing   
	
End Function



'This function is used for add a Changed Circumstance using the data in the data spreadsheet
'@code
'    BIZ_ChangedCircumstances_Add(strRowID) 
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ChangedCircumstances_Add(strRowID)
	BIZ_Settings_ClickAdd
    BIZ_ChangedCircumstances_SetChangedCircumstanceDetails strRowID
    BIZ_Settings_ClickSave		
End Function



'This function is used for set the detail for Changed Circumstance 
'@code
'    BIZ_ChangedCircumstances_EditChangedCircumstanceDetails(strDescription, strNewDescription, strNewReason, strNewCode, strComments) 
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ChangedCircumstances_EditChangedCircumstanceDetails(strDescription, strNewDescription, strNewReason, strNewCode, strComments) 
	
	FRM_Logger_ReportInfoEvent "Modify Settings Changed Circumstance", "Change Circumstance details", Null
    
	Dim objSettings
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
       
    GUI_Object_WaitTillVisibleX objSettings.SwfObject("swfname:=listViewOptions"), 480		'@ To handle sync Related Issues 
	GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewOptions"), Null, "Description", strDescription, True, False, False, "Double"
	
	GUI_Object_WaitTillEnabledX objSettings.SwfEditor("swfname:=txtDescription"), 45		'@ To handle sync Related Issues 
    GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtDescription"), strNewDescription
	GUI_Object_WaitTillEnabledX objSettings.SwfComboBox("swfname:=cmbReason"), 45		'@ To handle sync Related Issues 
	GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cmbReason"),strNewReason
	
	If GUI_Object_GetPropertyValue(objSettings.SwfEdit("swfname:=txtCode"),"enabled") Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtCode"),strNewCode
		FRM_Logger_ReportFailEvent "Code Status", "code field is enabled", null
	Else 
		FRM_Logger_ReportPassEvent "Code Status", "code field is disabled", null
	End If
	
	GUI_Object_WaitTillEnabledX objSettings.SwfEditor("swfname:=txtComments"), 45		'@ To handle sync Related Issues 
	GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtComments"), strComments
   
    Set objSettings = Nothing
        
	BIZ_ChangedCircumstances_EditChangedCircumstanceDetails	=	strNewDescription
	
End Function


'This function is for SetupChanged Circumstance
'@code
'    BIZ_ChangedCircumstances_ChangedCircumstanceSetup
'@endcode
Function BIZ_ChangedCircumstances_ChangedCircumstanceSetup(strRowID)

    Dim objSettings, objData
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "SetChangedCircumstanceDetails", strRowID)
    
    BIZ_Nav_OpenMenuItem "Encompass;Settings..."
                BIZ_Nav_HierarchyTree "Loan Setup", "Changed Circumstances Setup"

    strDescription                =             FRM_DS_GetValue(objData, "Description")
    boolCoC = GUI_List_ClickRow(objSettings.SwfObject("swfname:=listViewOptions"), Null,"Description", strDescription, True, False, False, "Single")
    
    If Not(boolCoC) Then
                FRM_Logger_ReportPassEvent "Setup Changed Circumstance", "Setup Changed Circumstance details using Row Id '"&strRowID&"' in the Setttings_ChangedCircumstanceSetup datasheet", null
                
                 '=====Click on New button=====
                    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")   
                
                    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then
                                                strDescription    =             FRM_DS_GetValue(objData, "Description")
                       GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtDescription"), strDescription
                    End If
                    
                    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Reason")) Then
                       GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cmbReason"),FRM_DS_GetValue(objData, "Reason")
                    End If
                    
                    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Code")) Then
                                   If GUI_Object_GetPropertyValue(objSettings.SwfEdit("swfname:=txtCode"),"enabled") Then
                                       GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtCode"),FRM_DS_GetValue(objData, "Code")
                                   End If
                    End If 
                    
                    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Comments")) Then
                       GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtComments"),FRM_DS_GetValue(objData, "Comments")
                    End If                 
                                ' ======Click on save button =======                  
                                GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave") 
                Else
                                FRM_Logger_ReportPassEvent "Setup Changed Circumstance", "Already Setup Changed Circumstance details using Row Id '"&strRowID&"' in the Setttings_ChangedCircumstanceSetup Datasheet", null                
    End If
   
   '============= Close Settings Window =============
                GUI_Window_Close objSettings  
                
    Set objSettings = Nothing
    Set objData = Nothing               
End Function


'This function is for Changed Circumstance Settings_
'@code
'    BIZ_Settings_ChangedCircumstance
'@endcode
'@param boolFeeLvlCoC string that used to select checkbox 'Require fee level Changed Circumstances prior to disclosure'
Function BIZ_Settings_ChangedCircumstance(boolFeeLvlCoC)
                Dim objSettings                                
    Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    
                If boolFeeLvlCoC Then
                                FRM_Logger_ReportPassEvent "Check 'Require fee level Changed Circumstances prior to disclosure'", "Check 'Require fee level Changed Circumstances prior to disclosure' check box", Null
                                GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkCoCPriorDisclosure"), "ON"
                Else
                                FRM_Logger_ReportPassEvent "Uncheck 'Require fee level Changed Circumstances prior to disclosure'", "Uncheck 'Require fee level Changed Circumstances prior to disclosure' check box", Null
                                GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkCoCPriorDisclosure"), "OFF"
                End If
                
                '========================= Save Settings =================
                If GUI_Object_GetPropertyValue(objSettings.SwfObject("swfname:=stdIconBtnSave"), "enabled") Then
                                GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
                End If    
                
                '========================= Close Settings Window ======================
                GUI_Window_Close objSettings  
                Set objSettings = Nothing 
End Function



'======= Fee Level Disclosures  on LEPage1=======
Function BIZ_CoC_FeeLevelDisclosures(boolCheck,boolEnable)		
	FRM_Logger_ReportInfoEvent "'Fee Level Disclosures' Checkbox","Verify 'Fee Level Disclosures' Checkbox", Null
	Set objLEPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	If boolCheck Then
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_4461_Ctrl"),"1","Fee Level Disclosures"
	Else
	   GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_4461_Ctrl"),"0","Fee Level Disclosures"	
	End If
	
	If boolEnable Then
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_4461_Ctrl"),"Fee Level Disclosures"
	Else
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_4461_Ctrl"),"Fee Level Disclosures"
	End If
	Set objLEPage1=Nothing
End Function



'======= Changed Circumstance on LEPage1 =======
Function BIZ_CoC_ChangedCircumstance(boolCheck,boolEnable)	
	FRM_Logger_ReportInfoEvent "'Changed Circumstance' Checkbox","Verify 'Changed Circumstance' Checkbox", Null
	Set objLEPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	If boolCheck Then
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_3168_Ctrl"),"1","Changed Circumstance" 
	Else
	   GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_3168_Ctrl"),"0","Changed Circumstance" 	
	End If
	
	If boolEnable Then
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_3168_Ctrl"),"Changed Circumstance" 
	Else
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_3168_Ctrl"),"Changed Circumstance" 
	End If
	Set objLEPage1=Nothing
End Function



'======= Changed Circumstance on CDPage1=======
Function BIZ_CoC_CD_ChangedCircumstance(boolCheck,boolEnable)	
	FRM_Logger_ReportInfoEvent "'Changed Circumstance' Checkbox","Verify 'Changed Circumstance' Checkbox", Null
	Set objLEPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	If boolCheck Then
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_CD1X61_Ctrl"),"1","Changed Circumstance" 
	Else
	   GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_CD1X61_Ctrl"),"0","Changed Circumstance" 	
	End If
	
	If boolEnable Then
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_CD1X61_Ctrl"),"Changed Circumstance" 
	Else
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_CD1X61_Ctrl"),"Changed Circumstance" 
	End If
	Set objLEPage1=Nothing
End Function



'============ Fields in Changed Circumstance - LEPage1 =============
Function BIZ_CoC_ChangedCircumstanceFields(boolEnable,boolEmpty,strRowID)
	'======= Verifying fields are enabled or disabled======	
	Set objLEPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")	
	If boolEnable Then
		FRM_Logger_ReportInfoEvent "Fields in Changed Circumstance","Fields in Changed Circumstance are Enabled", Null
		'GUI_Object_ValidateEnabled objLEPage1.WebEdit("html id:=I_LE1X98"),"Date Fee Changed"
		GUI_Object_ValidateEnabled objLEPage1.WebEdit("html id:=I_3165"),"Changes Received Date"  
		GUI_Object_ValidateDisabled objLEPage1.WebEdit("html id:=I_3167"),"Revised LE Due Date"  
		GUI_Object_ValidateEnabled objLEPage1.WebButton("html id:=stdbtn_3169"),"Changed Circumstance" 
		GUI_Object_ValidateEnabled objLEPage1.WebEdit("html id:=I_LE1X86"),"Comments"
	Else
		FRM_Logger_ReportInfoEvent "Fields in Changed Circumstance","Fields in Changed Circumstance are Disabled", Null
		'GUI_Object_ValidateDisabled objLEPage1.WebEdit("html id:=I_LE1X98"),"Date Fee Changed"
		GUI_Object_ValidateDisabled objLEPage1.WebEdit("html id:=I_3165"),"Changes Received Date"  
		GUI_Object_ValidateDisabled objLEPage1.WebEdit("html id:=I_3167"),"Revised LE Due Date"  
		GUI_Object_ValidateDisabled objLEPage1.WebButton("html id:=stdbtn_3169"),"Changed Circumstance" 
		GUI_Object_ValidateDisabled objLEPage1.WebEdit("html id:=I_LE1X86"),"Comments"
	End If
	
	'======= Verifying fields are Empty or not ======	
	If boolEmpty Then
		FRM_Logger_ReportInfoEvent "Fields in Changed Circumstance","Fields in Changed Circumstance are Blank", Null
		'FRM_VerifyEqual GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_LE1X98"),"value"),"//","Date Fee Changed","Date Fee Changed"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_3165"),"value"),"//","Changes Received Date","Changes Received Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_3167"),"value"),"//","Revised LE Due Date","Revised LE Due Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_3169"),"value"),"","Changed Circumstance","Changed Circumstance"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_LE1X86"),"value"),"","Comments","Comments"
	Else
		FRM_Logger_ReportInfoEvent "Fields in Changed Circumstance","Fields in Changed Circumstance are populated with values", Null
		Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "SetChangedCircumstanceDetails", strRowID) 
		strCircumstance=FRM_DS_GetValue(objData, "Description")
		strComments=FRM_DS_GetValue(objData, "Comments")
		dtRevisedLEDueDate=BIZ_DisclosureTracking_DateCalculation(Date,3,"CompanyCalender")
		dtRevisedLEDueDate=UTIL_Date_FormatDateByPattern(dtRevisedLEDueDate,"mm/dd/yyyy")
		strRecDate=UTIL_Date_FormatDateByPattern(Date,"mm/dd/yyyy")	
		'strChangedDate=UTIL_Date_FormatDateByPattern(Date,"mm/dd/yyyy")	
		
		'FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_LE1X98"),"value")),cdate(strChangedDate),"Date Fee Changed","Date Fee Changed"
		FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_3165"),"value")),cdate(strRecDate),"Changes Received Date","Changes Received Date"
		FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_3167"),"value")),cdate(dtRevisedLEDueDate),"Revised LE Due Date","Revised LE Due Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_3169"),"value"),trim(strCircumstance),"Changed Circumstance","Changed Circumstance"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objLEPage1.WebEdit("html id:=I_LE1X86"),"value"),strComments,"Comments","Comments"
		Set objData=Nothing
	End If
	Set objLEPage1=Nothing
End Function



'============ Fields in Changed Circumstance  - CDPage1 =============
Function BIZ_CoC_CD_ChangedCircumstanceFields(boolEnable,boolEmpty,strRowID)
	'======= Verifying fields are enabled or disabled======		
	Set objCDPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")	
	If boolEnable Then
		FRM_Logger_ReportInfoEvent "Fields in Changed Circumstance","Fields in Changed Circumstance are Enabled", Null
		'GUI_Object_ValidateEnabled objCDPage1.WebEdit("html id:=I_CD1X75"),"Date Fee Changed"
		GUI_Object_ValidateEnabled objCDPage1.WebEdit("html id:=I_CD1X62"),"Changes Received Date"  
		GUI_Object_ValidateDisabled objCDPage1.WebEdit("html id:=I_CD1X63"),"Revised CD Due Date"  
		GUI_Object_ValidateEnabled objCDPage1.WebButton("html id:=stdbtn_CD1X64"),"Changed Circumstance" 
		GUI_Object_ValidateEnabled objCDPage1.WebEdit("html id:=I_CD1X65"),"Comments"
	Else
		FRM_Logger_ReportInfoEvent "Fields in Changed Circumstance","Fields in Changed Circumstance are Disabled", Null
		'GUI_Object_ValidateDisabled objCDPage1.WebEdit("html id:=I_CD1X75"),"Date Fee Changed"
		GUI_Object_ValidateDisabled objCDPage1.WebEdit("html id:=I_CD1X62"),"Changes Received Date"  
		GUI_Object_ValidateDisabled objCDPage1.WebEdit("html id:=I_CD1X63"),"Revised CD Due Date"  
		GUI_Object_ValidateDisabled objCDPage1.WebButton("html id:=stdbtn_CD1X64"),"Changed Circumstance" 
		GUI_Object_ValidateDisabled objCDPage1.WebEdit("html id:=I_CD1X65"),"Comments"
	End If
	
	'======= Verifying fields are Empty or not ======	
	If boolEmpty Then
		FRM_Logger_ReportInfoEvent "Fields in Changed Circumstance","Fields in Changed Circumstance are Blank", Null
		'FRM_VerifyEqual GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X75"),"value"),"//","Date Fee Changed","Date Fee Changed"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X62"),"value"),"//","Changes Received Date","Changes Received Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X63"),"value"),"//","Revised LE Due Date","Revised LE Due Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X64"),"value"),"","Changed Circumstance","Changed Circumstance"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X65"),"value"),"","Comments","Comments"
	Else
		FRM_Logger_ReportInfoEvent "Fields in Changed Circumstance","Fields in Changed Circumstance are populated with values", Null
		Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "SetChangedCircumstanceDetails", strRowID) 
		strCircumstance=FRM_DS_GetValue(objData, "Description")
		strComments=FRM_DS_GetValue(objData, "Comments")
		dtRevisedCDDueDate=BIZ_DisclosureTracking_DateCalculation(Date,3,"CompanyCalender")
		dtRevisedCDDueDate=UTIL_Date_FormatDateByPattern(dtRevisedCDDueDate,"mm/dd/yyyy")
		strRecDate=UTIL_Date_FormatDateByPattern(Date,"mm/dd/yyyy")
		'strChangedDate=UTIL_Date_FormatDateByPattern(Date,"mm/dd/yyyy")	
		
		'FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X75"),"value")),cdate(strChangedDate),"Date Fee Changed","Date Fee Changed"
		FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X62"),"value")),cdate(strRecDate),"Changes Received Date","Changes Received Date"
		FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X63"),"value")),cdate(dtRevisedCDDueDate),"Revised CD Due Date","Revised CD Due Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X64"),"value"),trim(strCircumstance),"Changed Circumstance","Changed Circumstance"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objCDPage1.WebEdit("html id:=I_CD1X65"),"value"),strComments,"Comments","Comments"
		Set objData=Nothing
	End If
	Set objCDPage1=Nothing
End Function


'============ Fields in Changed Circumstance - Disclosure Tracking Reason Tab =============
Function BIZ_CoC_DT_ChangedCircumstanceFields(boolEnable,boolEmpty,strRowID)
	'======= Verifying fields are enabled or disabled======	
	Set objReasonTab=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")
	If boolEnable Then
		FRM_Logger_ReportInfoEvent "Disclosure Tracking Reason Tab","Fields in Changed Circumstance are Enabled", Null
		'GUI_Object_ValidateEnabled objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpDateFeeChangedDate.*"),"Date Fee Changed"
		GUI_Object_ValidateEnabled objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpChangesRecievedDate.*"),"Changes Received Date"  
		GUI_Object_ValidateEnabled objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpRevisedDueDate.*"),"Revised LE Due Date"  
		GUI_Object_ValidateEnabled objReasonTab.SwfObject("swfname:=btnSelect"),"Changed Circumstance"
		GUI_Object_ValidateEnabled objReasonTab.SwfEditor("swfname:=txtCiCComment"),"Comments"
	Else
		FRM_Logger_ReportInfoEvent "Disclosure Tracking Reason Tab","Fields in Changed Circumstance are Disabled ", Null
		'GUI_Object_ValidateDisabled objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpDateFeeChangedDate.*"),"Date Fee Changed"
		GUI_Object_ValidateDisabled objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpChangesRecievedDate.*"),"Changes Received Date"  
		GUI_Object_ValidateDisabled objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpRevisedDueDate.*"),"Revised LE Due Date"  
		GUI_Object_ValidateDisabled objReasonTab.SwfObject("swfname:=btnSelect"),"Changed Circumstance" 
		'GUI_Object_ValidateDisabled objReasonTab.SwfEditor("swfname:=txtCiCComment"),"Comments"
	End If
	
	'======= Verifying fields are Empty or not ======	 
	If boolEmpty Then
		FRM_Logger_ReportInfoEvent "Disclosure Tracking Reason Tab","Fields in Changed Circumstance are Blank", Null
		'FRM_VerifyEqual GUI_Object_GetPropertyValue(objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpDateFeeChangedDate.*"),"value"),"","Date Fee Changed","Date Fee Changed"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpChangesRecievedDate.*"),"value"),"","Changes Received Date","Changes Received Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpRevisedDueDate.*"),"value"),"","Revised LE Due Date","Revised LE Due Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objReasonTab.SwfEditor("swfname:=txtChangedCircumstance"),"value"),trim(strCircumstance),"Changed Circumstance","Changed Circumstance"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objReasonTab.SwfEditor("swfname:=txtCiCComment"),"value"),strComments,"Comments","Comments"
	Else
		FRM_Logger_ReportInfoEvent "Disclosure Tracking Reason Tab","Fields in Changed Circumstance are populated with values", Null
		Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "SetChangedCircumstanceDetails", strRowID) 
		strCircumstance=FRM_DS_GetValue(objData, "Description")
		strComments=FRM_DS_GetValue(objData, "Comments")
		dtRevisedLEDueDate=BIZ_DisclosureTracking_DateCalculation(Date,3,"CompanyCalender")
		dtRevisedLEDueDate=UTIL_Date_FormatDateByPattern(dtRevisedLEDueDate,"mm/dd/yyyy")
		strRecDate=UTIL_Date_FormatDateByPattern(Date,"mm/dd/yyyy")
		'strChangedDate=UTIL_Date_FormatDateByPattern(Date,"mm/dd/yyyy")	
		
		'FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpDateFeeChangedDate.*"),"text")),cdate(strChangedDate),"Date Fee Changed","Date Fee Changed"
		FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpChangesRecievedDate.*"),"text")),cdate(strRecDate),"Changes Received Date","Changes Received Date"
		FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objReasonTab.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpRevisedDueDate.*"),"text")),cdate(dtRevisedLEDueDate),"Revised LE Due Date","Revised LE Due Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objReasonTab.SwfEditor("swfname:=txtChangedCircumstance"),"text"),trim(strCircumstance),"Changed Circumstance","Changed Circumstance"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objReasonTab.SwfEditor("swfname:=txtCiCComment"),"text"),strComments,"Comments","Comments"
		Set objData=Nothing
	End If
	Set objReasonTab=Nothing
End Function




'======= Disclosure Reasons for LE=======
'strLEPage1_Reasons - Reasons LE Page1 OR Disclosure Details Window
Function BIZ_CoC_LE_DTReasons(strLEPage1_Reasons)	
	If lcase(strLEPage1_Reasons)="lepage1" Then
		FRM_Logger_ReportInfoEvent "'Reason' Checkboxes on LE Page1","'Reason' Checkboxes on LE Page1 are Unchecked and Editable", Null
		Set objLEPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X78_Ctrl"),"0","Changed Circumstance - Settlement Charges"
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X78_Ctrl"),"Changed Circumstance - Settlement Charges"
	
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X79_Ctrl"),"0","Changed Circumstance - Eligibility"
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X79_Ctrl"),"Changed Circumstance - Eligibility"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X80_Ctrl"),"0","Revisions requested by the Consumer"
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X80_Ctrl"),"Revisions requested by the Consumer"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X81_Ctrl"),"0","Interest Rate dependent charges (Rate Lock)"
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X81_Ctrl"),"Interest Rate dependent charges (Rate Lock)"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X82_Ctrl"),"0","Expiration (Intent to Proceed received after 10 business days)"
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X82_Ctrl"),"Expiration (Intent to Proceed received after 10 business days)"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X83_Ctrl"),"0","Delayed Settlement on Construction Loans"
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X83_Ctrl"),"Delayed Settlement on Construction Loans"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X84_Ctrl"),"0","Other"
		GUI_Object_ValidateEnabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X84_Ctrl"),"Other"
	Else
		FRM_Logger_ReportInfoEvent "'Reason' Checkboxes on Disclosure Details Reason Tab","'Reason' Checkboxes on Disclosure Details Reason Tab are Unchecked and Editable", Null
		Set objReasonTab=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason1"),"False","Changed Circumstance - Settlement Charges"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason1"),"Changed Circumstance - Settlement Charges"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason2"),"False","Changed Circumstance - Eligibility"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason2"),"Changed Circumstance - Eligibility"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason3"),"False","Revisions requested by the Consumer"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason3"),"Revisions requested by the Consumer"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason4"),"False","Interest Rate dependent charges (Rate Lock)"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason4"),"Interest Rate dependent charges (Rate Lock)"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason5"),"False","Expiration (Intent to Proceed received after 10 business days)"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason5"),"Expiration (Intent to Proceed received after 10 business days)"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason6"),"False","Delayed Settlement on Construction Loans"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason6"),"Delayed Settlement on Construction Loans"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReasonOther"),"False","Other"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReasonOther"),"Other"
	End If
	
	Set objLEPage1=Nothing
	Set objReasonTab=Nothing	
End Function



'======= Disclosure Reasons for CD=======
'strCDPage1_Reasons - Reasons LE Page1 OR Disclosure Details Window
Function BIZ_CoC_CD_DTReasons(strCDPage1_Reasons)	
	If lcase(strCDPage1_Reasons)="cdpage1" Then
		FRM_Logger_ReportInfoEvent "'Reason' Checkboxes on CD Page1","'Reason' Checkboxes on CD Page1 are Unchecked and Editable", Null
		Set objCDPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X52_Ctrl"),"0","Change in APR"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X52_Ctrl"),"Change in APR"
	
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X53_Ctrl"),"0","Change in Loan Product"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X53_Ctrl"),"Change in Loan Product"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X54_Ctrl"),"0","Prepayment Penalty Added"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X54_Ctrl"),"Prepayment Penalty Added"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X55_Ctrl"),"0","Change in Settlement Charges"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X55_Ctrl"),"Change in Settlement Charges"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X68_Ctrl"),"0","Changed Circumstance - Eligibility"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X68_Ctrl"),"Changed Circumstance - Eligibility"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X66_Ctrl"),"0","Revisions requested by the Consumer"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X66_Ctrl"),"Revisions requested by the Consumer"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X67_Ctrl"),"0","Interest Rate dependent charges (Rate Lock)"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X67_Ctrl"),"Interest Rate dependent charges (Rate Lock)"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X56_Ctrl"),"0","24-hour Advanced Preview"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X56_Ctrl"),"24-hour Advanced Preview"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X57_Ctrl"),"0","Tolerance Cure"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X57_Ctrl"),"Tolerance Cure"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X58_Ctrl"),"0","Clerical Error Correction"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X58_Ctrl"),"Clerical Error Correction"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X59_Ctrl"),"0","Other"
		GUI_Object_ValidateEnabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X59_Ctrl"),"Other"
	Else
		FRM_Logger_ReportInfoEvent "'Reason' Checkboxes on Disclosure Details Reason Tab","'Reason' Checkboxes on Disclosure Details Reason Tab are Unchecked and Editable", Null
		Set objReasonTab=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason1"),"False","Change in APR"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason1"),"Change in APR"
	
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason2"),"False","Change in Loan Product"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason2"),"Change in Loan Product"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason3"),"False","Prepayment Penalty Added"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason3"),"Prepayment Penalty Added"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason4"),"False","Change in Settlement Charges"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason4"),"Change in Settlement Charges"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason5"),"False","Changed Circumstance - Eligibility"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason5"),"Changed Circumstance - Eligibility"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason6"),"False","Revisions requested by the Consumer"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason6"),"Revisions requested by the Consumer"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason7"),"False","Interest Rate dependent charges (Rate Lock)"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason7"),"Interest Rate dependent charges (Rate Lock)"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason8"),"False","24-hour Advanced Preview"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason8"),"24-hour Advanced Preview"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason9"),"False","Tolerance Cure"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason9"),"Tolerance Cure"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason10"),"False","Clerical Error Correction"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReason10"),"Clerical Error Correction"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReasonOther"),"False","Other"
		GUI_Object_ValidateEnabled objReasonTab.SwfCheckBox("swfname:=chkReasonOther"),"Other"
	End If
	
	Set objLEPage1=Nothing
	Set objReasonTab=Nothing	
End Function


'============Validate Fee Changes Details ===============
Function BIZ_CoC_FeeChangesValidation(strRowID)	
	Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "FeeChanges", strRowID)	    
	Set objFeeList= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfObject("swfname:=feeDetailsGV")	
	
	strLOAmount=FormatNumber(FRM_DS_GetValue(objData, "LO_NewAmount"),2)
	strAFAmount=FormatNumber(FRM_DS_GetValue(objData, "AF_NewAmount"),2)
	
	FRM_Logger_ReportInfoEvent "Fee Changes details","Verify 'Loan Origination Fee Changes'", Null
	FRM_VerifyEqual  Trim(GUI_List_GetCellData (objFeeList,0,"Fee Description")),Trim(FRM_DS_GetValue(objData, "LO_FeeDescription")),"Loan Origination Fee","Fee Description"
	FRM_VerifyEqual  GUI_List_GetCellData (objFeeList,0,"New Amount $"),strLOAmount,"Loan Origination Fee","New Amount $" 
	FRM_VerifyEqual  Trim(GUI_List_GetCellData (objFeeList,0,"Description")),Trim(FRM_DS_GetValue(objData, "Description")),"Loan Origination Fee","Description"
	FRM_VerifyEqual  Trim(GUI_List_GetCellData (objFeeList,0,"Comments")),Trim(FRM_DS_GetValue(objData, "Comments")),"Loan Origination Fee","Comments" 
	FRM_VerifyEqual  Trim(GUI_List_GetCellData (objFeeList,0,"Reason")),Trim(FRM_DS_GetValue(objData, "Reason")),"Loan Origination Fee","Reason"
	
	FRM_Logger_ReportInfoEvent "Fee Changes details","Verify 'Application Fee Changes'", Null
	FRM_VerifyEqual  Trim(GUI_List_GetCellData (objFeeList,1,"Fee Description")),Trim(FRM_DS_GetValue(objData, "AF_FeeDescription")),"Application Fees","Fee Description"
	FRM_VerifyEqual  GUI_List_GetCellData (objFeeList,1,"New Amount $"),strAFAmount,"Application Fees","New Amount $" 
	FRM_VerifyEqual  Trim(GUI_List_GetCellData (objFeeList,1,"Description")),Trim(FRM_DS_GetValue(objData, "Description")),"Application Fees","Description"
	FRM_VerifyEqual  Trim(GUI_List_GetCellData (objFeeList,1,"Comments")),Trim(FRM_DS_GetValue(objData, "Comments")),"Application Fees","Comments" 
	FRM_VerifyEqual  Trim(GUI_List_GetCellData (objFeeList,1,"Reason")),Trim(FRM_DS_GetValue(objData, "Reason")),"Application Fees","Reason" 
	
	Set objFeeList=Nothing
	Set objData=Nothing	
End Function

'====Good Faith Fee Variance Voilated Details ========
Function BIZ_CoC_GFE_FeeDetails(strRowID,strRowID1)
	Set objGFE = SwfWindow("swfname:=MainForm")
	Set objScroll=objGFE.SwfScrollBar("swfname:=vPanelScrollBar","swfname path:=vPanelScrollBar;gvFields;grpFields;.*")
	Set objData = FRM_DS_GetTestData("Forms_2015Itemization", "SetBasicData", strRowID) 
	strFeeFields=FRM_DS_GetValue(objData, "FeeIncreased_Fields")
	arrFields=Split(strFeeFields,"|")
	intFields=ubound(arrFields)
	
	Set objData1 = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "SetChangedCircumstanceDetails", strRowID1)
	strCircumstance=FRM_DS_GetValue(objData1, "Description")
	strComments=FRM_DS_GetValue(objData1, "Comments")
	strReason=FRM_DS_GetValue(objData1, "Reason")
	strReason=Split(strReason,"[")(0)

	For i = 0 To intFields
		'Select Fee Description
		FRM_Logger_ReportInfoEvent "Select Fee Changes","Select "&arrFields(i), Null
		If objScroll.Exist(2) Then
			GUI_List_ClickRow objGFE.SwfObject("swfname:=gvFields"),objScroll,"Description",arrFields(i),True,False,False,"Single"
		Else
			intRow=GUI_List_GetRowIndex(objGFE.SwfObject("swfname:=gvFields"),"Description",arrFields(i))
			GUI_List_ActOnRow objGFE.SwfObject("swfname:=gvFields"),intRow,True,False,False,"Single"		
		End If 
		'=======select Changed Circumstance =====
		'GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dateFeeChanged.*"),Date
		Set objCCList= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions")
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSelect")
		GUI_List_ClickRow objCCList,objCCList.SwfScrollBar("swfname:=vPanelScrollBar"),"Changed Circumstance",strCircumstance,True,False,False,"Signle"
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfButton("swfname:=btnOK")
		
		'======= Fields in Changed Circumstance - GFE =======	
		FRM_Logger_ReportInfoEvent "Good Faith Fee Variance Voilated","Fields in Changed Circumstance are populated with values on GFE alert", Null
		dtRevisedLEDueDate=BIZ_DisclosureTracking_DateCalculation(Date,3,"CompanyCalender")
		dtRevisedLEDueDate=UTIL_Date_FormatDateByPattern(dtRevisedLEDueDate,"mm/dd/yyyy")
		strRecDate=UTIL_Date_FormatDateByPattern(Date,"mm/dd/yyyy")
		strChangedDate=UTIL_Date_FormatDateByPattern(Date,"mm/dd/yyyy")	
		
		'FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objGFE.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dateFeeChanged.*"),"text")),cdate(strChangedDate),"Date Fee Changed","Date Fee Changed"
		FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objGFE.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dateChangedCircumstance.*"),"text")),cdate(strRecDate),"Changes Received Date","Changes Received Date"
		FRM_VerifyEqual cdate(GUI_Object_GetPropertyValue(objGFE.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dateRevisedDate.*"),"text")),cdate(dtRevisedLEDueDate),"Revised LE Due Date","Revised LE Due Date"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objGFE.SwfEditor("swfname:=txtDescription"),"text"),trim(strCircumstance),"Changed Circumstance","Changed Circumstance"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objGFE.SwfComboBox("swfname:=cboReason"),"text"),trim(strReason),"Reason","Reason"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objGFE.SwfEditor("swfname:=txtComments"),"text"),trim(strComments),"Comments","Comments" 
		Set objData=Nothing
	Next
	Set objData=Nothing
	Set objGFEFeeList=Nothing
End Function

'======= Fee Level Disclosure Reasons for LE=======
'strLEPage1_Reasons - Reasons LE Page1 OR Disclosure Details Window
Function BIZ_CoC_FeeLvlLE_DTReasons(strLEPage1_Reasons)	
	If lcase(strLEPage1_Reasons)="lepage1" Then
		FRM_Logger_ReportInfoEvent "'Reason' Checkboxes on LE Page1","'Reason' Checkboxes on LE Page1 are unchecked and locked", Null
		Set objLEPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X78_Ctrl"),"0","Changed Circumstance - Settlement Charges"
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X78_Ctrl"),"Changed Circumstance - Settlement Charges"
	
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X79_Ctrl"),"0","Changed Circumstance - Eligibility"
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X79_Ctrl"),"Changed Circumstance - Eligibility"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X80_Ctrl"),"0","Revisions requested by the Consumer"
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X80_Ctrl"),"Revisions requested by the Consumer"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X81_Ctrl"),"0","Interest Rate dependent charges (Rate Lock)"
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X81_Ctrl"),"Interest Rate dependent charges (Rate Lock)"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X82_Ctrl"),"0","Expiration (Intent to Proceed received after 10 business days)"
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X82_Ctrl"),"Expiration (Intent to Proceed received after 10 business days)"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X83_Ctrl"),"0","Delayed Settlement on Construction Loans"
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X83_Ctrl"),"Delayed Settlement on Construction Loans"
		
		GUI_Object_ValidateChecked objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X84_Ctrl"),"0","Other"
		GUI_Object_ValidateDisabled objLEPage1.WebCheckBox("html id:=__cid_chk_LE1X84_Ctrl"),"Other"
	Else
		FRM_Logger_ReportInfoEvent "'Reason' Checkboxes on Disclosure Details Reason Tab","'Reason' Checkboxes on Disclosure Details Reason Tab are unchecked and locked", Null
		Set objReasonTab=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason1"),"False","Changed Circumstance - Settlement Charges"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason1"),"Changed Circumstance - Settlement Charges"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason2"),"False","Changed Circumstance - Eligibility"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason2"),"Changed Circumstance - Eligibility"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason3"),"False","Revisions requested by the Consumer"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason3"),"Revisions requested by the Consumer"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason4"),"False","Interest Rate dependent charges (Rate Lock)"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason4"),"Interest Rate dependent charges (Rate Lock)"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason5"),"False","Expiration (Intent to Proceed received after 10 business days)"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason5"),"Expiration (Intent to Proceed received after 10 business days)"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason6"),"False","Delayed Settlement on Construction Loans"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason6"),"Delayed Settlement on Construction Loans"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReasonOther"),"False","Other"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReasonOther"),"Other"
	End If
	
	Set objLEPage1=Nothing
	Set objReasonTab=Nothing	
End Function



'======= Disclosure Reasons for CD=======
'strCDPage1_Reasons - Reasons LE Page1 OR Disclosure Details Window
Function BIZ_CoC_FeeLvlCD_DTReasons(strCDPage1_Reasons)	
	If lcase(strCDPage1_Reasons)="cdpage1" Then
		FRM_Logger_ReportInfoEvent "'Reason' Checkboxes on CD Page1","'Reason' Checkboxes on CD Page1 are Unchecked and Editable", Null
		Set objCDPage1 = SwfWindow("swfname:=MainForm").Page("index:=0")
	
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X52_Ctrl"),"0","Change in APR"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X52_Ctrl"),"Change in APR"
	
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X53_Ctrl"),"0","Change in Loan Product"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X53_Ctrl"),"Change in Loan Product"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X54_Ctrl"),"0","Prepayment Penalty Added"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X54_Ctrl"),"Prepayment Penalty Added"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X55_Ctrl"),"0","Change in Settlement Charges"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X55_Ctrl"),"Change in Settlement Charges"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X68_Ctrl"),"0","Changed Circumstance - Eligibility"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X68_Ctrl"),"Changed Circumstance - Eligibility"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X66_Ctrl"),"0","Revisions requested by the Consumer"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X66_Ctrl"),"Revisions requested by the Consumer"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X67_Ctrl"),"0","Interest Rate dependent charges (Rate Lock)"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X67_Ctrl"),"Interest Rate dependent charges (Rate Lock)"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X56_Ctrl"),"0","24-hour Advanced Preview"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X56_Ctrl"),"24-hour Advanced Preview"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X57_Ctrl"),"0","Tolerance Cure"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X57_Ctrl"),"Tolerance Cure"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X58_Ctrl"),"0","Clerical Error Correction"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X58_Ctrl"),"Clerical Error Correction"
		
		GUI_Object_ValidateChecked objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X59_Ctrl"),"0","Other"
		GUI_Object_ValidateDisabled objCDPage1.WebCheckBox("html id:=__cid_chk_CD1X59_Ctrl"),"Other"
	Else
		FRM_Logger_ReportInfoEvent "'Reason' Checkboxes on Disclosure Details Reason Tab","'Reason' Checkboxes on Disclosure Details Reason Tab are Unchecked and Editable", Null
		Set objReasonTab=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason1"),"False","Change in APR"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason1"),"Change in APR"
	
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason2"),"False","Change in Loan Product"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason2"),"Change in Loan Product"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason3"),"False","Prepayment Penalty Added"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason3"),"Prepayment Penalty Added"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason4"),"False","Change in Settlement Charges"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason4"),"Change in Settlement Charges"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason5"),"False","Changed Circumstance - Eligibility"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason5"),"Changed Circumstance - Eligibility"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason6"),"False","Revisions requested by the Consumer"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason6"),"Revisions requested by the Consumer"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason7"),"False","Interest Rate dependent charges (Rate Lock)"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason7"),"Interest Rate dependent charges (Rate Lock)"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason8"),"False","24-hour Advanced Preview"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason8"),"24-hour Advanced Preview"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason9"),"False","Tolerance Cure"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason9"),"Tolerance Cure"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReason10"),"False","Clerical Error Correction"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReason10"),"Clerical Error Correction"
		
		GUI_Object_ValidateChecked objReasonTab.SwfCheckBox("swfname:=chkReasonOther"),"False","Other"
		GUI_Object_ValidateDisabled objReasonTab.SwfCheckBox("swfname:=chkReasonOther"),"Other"
	End If
	
	Set objLEPage1=Nothing
	Set objReasonTab=Nothing	
End Function


'To Include or Exclude DT records from Timeline'
Function BIZ_DT_LEorCD_IncludeExclude(strType,strLEorCD,boolExclude)
	FRM_Logger_ReportInfoEvent "Include/Exclude DT Records from Timeline","Include/Exclude DT Records from Timeline", Null
	BIZ_Tools_Open "Disclosure Tracking"
	Set objMainForm    =    SwfWindow("swfname:=MainForm") 
	intInitialCDRow	=	BIZ_GetRowOfDisclosureType (strType,"Yes",strLEorCD)
	GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialCDRow, True, False, False, "Single"
	If boolExclude Then
		FRM_Logger_ReportPassEvent "Exclude DT Records from Timeline", "Exclude DT Records from Timeline", null 					
		GUI_SwfButton_Click objMainForm.SwfButton("swfname:=btnMarkInvalid")
	Else
		FRM_Logger_ReportPassEvent "Include DT Records from Timeline", "Include DT Records from Timeline", null 
		GUI_SwfButton_Click objMainForm.SwfButton("swfname:=btnMarkValid")
	End If	
End Function


'=======Adding CoC options to User Group =======

Function BIZ_UserGroup_AddCoCOptions(strRowID)
	'==== Adding New User Group========
	FRM_Logger_ReportInfoEvent "Create a New User Group","Creating a New User Group", Null
	    
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")		
	Set objTreeView 	  = objSettings.SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer")
	Set objGroupList = objSettings.SwfListView("swfname:=lvGroup")
	 	
	Set objData    = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Groups", strRowID)	
	strGroupName= trim(FRM_DS_GetValue(objData, "GroupName"))
	strActualMember=trim(FRM_DS_GetValue(objData, "Member"))
	strCoCOptions= trim(FRM_DS_GetValue(objData, "CoC_Options"))
	
	'==========Verify User Group Exist or Not and add If not ===========
	GUI_Object_WaitTillExistX objGroupList, 300
	Wait g_LongWaitMedium				
	intGetNewRowIndex = GUI_List_GetRowIndex(objGroupList, 0,strGroupName)	
	If(intGetNewRowIndex > -1) then 
		BIZ_UserGroups_SelectExistingGroup strGroupName	
		FRM_Logger_ReportPassEvent "Create a User group","Already created User Group with naem of "&strGroupName,""
	Else
	 BIZ_UserGroups_CreateNew strRowID
	End If 

	'==========Verify Member (User) Exist or Not and add If not ===========
	If UTIL_String_IsNotEmpty(strActualMember) Then
	    FRM_Logger_ReportInfoEvent "Add a user to User Group","Adding a user to User Group", Null
		'=======Select User Group=====    
		BIZ_UserGroups_SelectExistingGroup strGroupName
		GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"),"Members"	

		'========== adding member to user group=======
	    intIndex=GUI_List_GetRowIndex(objSettings.SwfListView("swfname:=lvGroupMember"),"Name",strActualMember)	
		If(intIndex > -1) then 	
		    objSettings.SwfListView("swfname:=lvGroupMember").Select strActualMember
		   FRM_Logger_ReportPassEvent "Add a member to User Group","Already member added to User Group",""
		Else
			GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnConfigGroup")
		    GUI_Object_WaitTillExistX objTreeView,50
		    objTreeView.Expand("Administration")
		    Wait g_LongWaitMedium  				' Explicit wait used to handle sync issues
		    GUI_SwfTreeView_Select objTreeView,"Administration;"&strActualMember
		    GUI_SwfObject_Click objSettings.SwfWindow("swfname:=ResourceSetViewer").SwfObject("swfname:=btnAddToGroup")
			GUI_Object_WaitTillExistX objSettings.SwfWindow("swfname:=ResourceSetViewer").SwfButton("swfname:=btnOK"),300
			GUI_SwfButton_Click objSettings.SwfWindow("swfname:=ResourceSetViewer").SwfButton("swfname:=btnOK")
			Wait g_LongWaitMedium  				' Explicit wait used to handle sync issues
			BIZ_Settings_ClickSave
		End If
	End If	
	
	'=======Adding CoC options to User Group =======
	'BIZ_UserGroup_ChangedCircumstances_AddOptions(strRowID)	
	
	'=== Navigate to Resources tab ======
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"), "Resources"
	Wait(2)
	'========== to move down====
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listView1","swfname path:=listView1;gcTemplate;ResourceBasePanel;pnlExRow3Right;pnlExRow3;.*").Click
	UTIL_Win_SendKey "{TAB}"
	UTIL_Win_SendKey "{TAB}"
	UTIL_Win_SendKey "{TAB}"
	UTIL_Win_SendKey "{TAB}"
	UTIL_Win_SendKey "{TAB}"
	
	'=====Select CoC options and added to user group======
	arrCoC = Split(strCoCOptions,"|")
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnAdd","swfname path:=stdIconBtnAdd;gcTemplate;ResourceBasePanel;pnlExRow6Right;panelExRow6;.*")
	Set objAllCoCoptions=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ChangeOfCircumstanceSelectionPage").SwfObject("swfname:=gcAll")
	For i = 0 To ubound(arrCoC)     
		If cint(GUI_List_GetRowIndex(objAllCoCoptions,"Description",arrCoC(i)))>0 Then
			FRM_Logger_ReportInfoEvent "Add CoC to User Group", "Adding CoC "&arrCoC(i)&" to User Group", null
			GUI_List_ClickRow objAllCoCoptions,objAllCoCoptions.SwfScrollBar("swfname:=vPanelScrollBar"),"Description",arrCoC(i),True,False,False,"Single"
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ChangeOfCircumstanceSelectionPage").SwfButton("swfname:=btnAdd")
		Else
			FRM_Logger_ReportInfoEvent "Add CoC to User Group", "Already added CoC "&arrCoC(i)&" to User Group", null
		End If
	Next
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ChangeOfCircumstanceSelectionPage").SwfButton("swfname:=btnOK") 
	
	 '========================= Save Settings =================
    If GUI_Object_GetPropertyValue(objSettings.SwfObject("swfname:=stdIconBtnSave"), "enabled") Then
         GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
    End If 

	'============= Close Settings Window =============
	GUI_Window_Close objSettings 	
	
	Set objSettings  = Nothing	
	Set objTreeView 	  = Nothing
	Set objGroupList = Nothing	 	
	Set objData    = Nothing
End Function
    
'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\ChangedCircumstances.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\ClosingCostTemplates.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_ClosingCostTemplates BIZ_Settings_ClosingCostTemplates 
' List of functions here
' @code
'   BIZ_Settings_UpdateClosingCostTemplate(strRowID,strNewFolderName,strSubLoantemplate)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Update the Closing Cost Template
'@code
'    BIZ_Settings_UpdateClosingCostTemplate(strRowID,strNewFolderName,strSubLoantemplate)
'@endcode
'@param strRowID            - The numeric or string unique ID that used to find the line in the Settings_ContactSetUp data spreadsheet
'@param strNewFolderName    - Name of the Folder
'@param strSubLoantemplate  - Name of the Template

Function BIZ_Settings_UpdateClosingCostTemplate(strRowID,strClosingCostTemplate)

	Dim  objData, objClosingCostTemplate, objClosingCostTemplateDetails

	FRM_Logger_ReportInfoEvent "Update Closing Cost Template", "Update values for the Closing Cost Template", null
	
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "ClosingCost", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar       = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objClosingCostTemplate = objSettings.SwfWindow("swfname:=TemplateDialog")
	Set objClosingCostTemplateDetails = objClosingCostTemplate.Page("index:=0")
    
	BIZ_LoanTemplates_AddDescriptionToExistingClosingCostTemplate strRowID,strClosingCostTemplate
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strClosingCostTemplate, True, False, False, "Double"
	
	'objClosingCostTemplateDetails.WebElement("innertext:=800. Items Payable in Connection with Loan","html tag:=SPAN").Highlight
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanOrinationFees")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=TextBox12","html tag:=INPUT"), FRM_DS_GetValue(objData, "LoanOrinationFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L228_ApplicationFee")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_L228"), FRM_DS_GetValue(objData, "L228_ApplicationFee")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1621_UnderwritingFees")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData, "1621_UnderwritingFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "367_ProcessingFeees")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=TextBox67"), FRM_DS_GetValue(objData, "367_ProcessingFeees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DailyIntCharges")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_332"), FRM_DS_GetValue(objData, "DailyIntCharges")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L244_InterestFrom")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_L244"), FRM_DS_GetValue(objData, "L244_InterestFrom")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "L245_InterestTo")) Then
		objClosingCostTemplateDetails.WebButton("html id:=FieldLock2","html tag:=BUTTON").Click
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_L245"), FRM_DS_GetValue(objData, "L245_InterestTo")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "902_MtgInsPremiu")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=TextBox1103"), FRM_DS_GetValue(objData, "902_MtgInsPremiu") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "903_HomeOwnersIns")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_L252"), FRM_DS_GetValue(objData, "903_HomeOwnersIns")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "904_PropertyTaxes")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=TextBox227"), FRM_DS_GetValue(objData, "904_PropertyTaxes")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1002_HomeOwnersIns")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_1956"), FRM_DS_GetValue(objData, "1002_HomeOwnersIns")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1003_MortgageIns")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_1296"), FRM_DS_GetValue(objData, "1003_MortgageIns")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1004_PropertyTaxes")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_1386"), FRM_DS_GetValue(objData, "1004_PropertyTaxes")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1005_CityPropertyTax")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_L267"), FRM_DS_GetValue(objData, "1005_CityPropertyTax")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1006_FloodInsReservce")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_1388"), FRM_DS_GetValue(objData, "1006_FloodInsReservce")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_RecordingFees")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_610"), FRM_DS_GetValue(objData, "1202_RecordingFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1202_RecordingFees")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "1202_RecordingFees")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1302_BankruptcyMonitoringFees")) Then
		GUI_WebEdit_Set objClosingCostTemplateDetails.WebEdit("html id:=l_1388"), FRM_DS_GetValue(objData, "1302_BankruptcyMonitoringFees")
		objClosingCostTemplateDetails.WebButton("html id:=pklist_NEWHUDX251", "html tag:=BUTTON").Image("file name:=dropdown.png", "html tag:=IMG", "Image type:=Plain Image").Click
		GUI_SwfList_Select objClosingCostTemplate.SwfWindow("swfname:=FieldRuleDropdownDialog").SwfList("swfname:=listBoxValues"),"Bankruptcy Monitoring Fee"
		Wait g_TinyWaitSmall
		GUI_SwfObject_Click objClosingCostTemplate.SwfWindow("swfname:=FieldRuleDropdownDialog").SwfObject("swfname:=pictureBox1")
		Wait g_TinyWaitSmall
	End If
	GUI_SwfButton_Click objClosingCostTemplate.SwfButton("swfname:=saveBtn")
	
	wait TinyWaitMedium
	Set objData                       = Nothing
	Set objClosingCostTemplate        = Nothing
	Set objClosingCostTemplateDetails = Nothing
	
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\ClosingCostTemplates.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\CompanySettings.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_CompanySettings BIZ_CompanySettings
'
' List of functions here
'@code
'   Function BIZ_CompanyDetails_TPO_Delete(strTPOPath)
'	Function BIZ_CompanyDetails_TPO_Create(strTPOName, strRowID)
'	Function BIZ_CompanyDetails_TPOContact_Create(strTPOName, strRowID)
'   Function BIZ_CompanyDetails_TPOContact_ValidateCreatedTPOContact(strRowID,strTPOName)
'   Function BIZ_CompanyDetails_TPOContact_ValidatePersonas(arrPersonaNames)
'   Function BIZ_CompanyDetails_TPO_EditContact(strTPOPath)
'   Function BIZ_CompanyDetails_TPO_EditOrg(strTPOPath)
'   Function BIZ_CompanyDetails_TPO_InsertContactsExcelToCSV(strRowID,strExcelFileName,strCSVFileName)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to delete a Third Party Originator
'@code
'    BIZ_CompanyDetails_TPO_Delete(strTPOPath)
'@endcode
'@param strTPOPath - Full Path of the TPO node to be deleted

Function BIZ_CompanyDetails_TPO_Delete(strTPOPath)

	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree").ExpandAll "Third Party Originators"
	wait(5)
	strAllTPOs = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree").GetContent()
	
	'====================If the TPO to be deleted exists===============================
	If InStr(strAllTPOs, strTPOPath) > 0 Then
		'===================================Select the TPO===================================
		GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), strTPOPath
		'=================Delete all the contacts for the TPO======================================
		intRowCount = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gridViewContacts").Object.Items.Count
		For i = 1 To intRowCount
			GUI_List_ActOnRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gridViewContacts"), 0, True, False, False, "Single"
			GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDeleteContact")
			GUI_Dialog_Encompass_YesX 3, ""
            If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanReassignmentForm").SwfRadioButton("swfname:=radioButton2").Exist(2) Then
                GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanReassignmentForm").SwfRadioButton("swfname:=radioButton2")
                GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=LoanReassignmentForm").SwfButton("swfname:=button1")
            End If
		Next
		'================Delete the TPO=======================================
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnDeleteOrg")
		GUI_Dialog_Encompass_YesX 3, ""
		GUI_Dialog_Encompass_OKX 3, ""
	End If

End Function



'This function is used to create company details TPO
'@code
'    BIZ_CompanyDetails_TPO_Create(strTPOName, strRowID)
'@endcode
'@param strTPOPath - Full Path of the TPO 
'@param strRowID

Function BIZ_CompanyDetails_TPO_Create(strTPOName, strRowID)
	
	FRM_Logger_ReportInfoEvent "Company Settings", "Set TPO information using Row Id '"&strRowID&"' in the Company Settings datasheet", null
    Set objData = FRM_DS_GetTestData("Settings_CompanySettings", "SetTPO", strRowID)
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOFlag")) Then
        strTPOOrg = FRM_DS_GetValue(objData, "TPOOrgName")
        strTPOPath = "Third Party Originators;"&strTPOOrg
        wait(2)
        GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), strTPOPath
        wait(2)
    Else
        GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), "Third Party Originators"
        wait(2)
    End If
    
    Set objCompanyDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog")
	    
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNewOrg")
	GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtOrgName"), strTPOName
    strTPOFlag = FRM_DS_GetValue(objData, "TPOFlag")
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOFlag")) AND strTPOFlag = "True" Then
        GUI_Object_ValidateText objCompanyDialog.SwfCheckBox("swfname:=chkVisibleOnTPOWCsite"),"Visible on TPOWC site","Text Should Match"
        GUI_Object_ValidateChecked objCompanyDialog.SwfCheckBox("swfname:=chkVisibleOnTPOWCsite"),False,"Default Value Should Be Unchecked"
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VisibleOnTPOWCsite")) Then
            GUI_SwfCheckBox_Set objCompanyDialog.SwfCheckBox("swfname:=chkVisibleOnTPOWCsite"),FRM_DS_GetValue(objData, "VisibleOnTPOWCsite")
        End If
		GUI_SwfCheckBox_Set objCompanyDialog.SwfCheckBox("swfname:=chkUseParentInfoForCompany"), False
        GUI_SwfComboBox_Select objCompanyDialog.SwfComboBox("swfname:=cmbOrgType"), FRM_DS_GetValue(objData, "OrgType")
        strOrgValue = FRM_DS_GetValue(objData, "OrgType")
        If strOrgValue = "Branch" Then
            GUI_Object_ValidateNotExists objCompanyDialog.SwfCheckBox("swfname:=chkVisibleOnTPOWCsite"),4,"TPOWCsite Checkbox should Not Be Present"
        End If
    Else
     
        If strTPOFlag = "False" Then
            GUI_Object_ValidateNotExists objCompanyDialog.SwfCheckBox("swfname:=chkVisibleOnTPOWCsite"),4,"TPOWCsite Checkbox should Not Be Present"
            GUI_SwfCheckBox_Set objCompanyDialog.SwfCheckBox("swfname:=chkUseParentInfoForCompany"), False
            GUI_SwfComboBox_Select objCompanyDialog.SwfComboBox("swfname:=cmbOrgType"), FRM_DS_GetValue(objData, "OrgType")
        Else
            If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOFlag")) Then
			GUI_Object_ValidateNotExists objCompanyDialog.SwfCheckBox("swfname:=chkVisibleOnTPOWCsite"),4,"TPOWCsite Checkbox should Not Be Present"
			End IF
        End If
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Broker")) Then
		GUI_SwfCheckBox_Set objCompanyDialog.SwfCheckBox("swfname:=chkBroker"), FRM_DS_GetValue(objData, "Broker")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Correspondent")) Then
		GUI_SwfCheckBox_Set objCompanyDialog.SwfCheckBox("swfname:=chkCorrespondent"), FRM_DS_GetValue(objData, "Correspondent")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "OrganizationID")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtOrgID"), FRM_DS_GetValue(objData, "OrganizationID")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyOwnersName")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtOwnerName"), FRM_DS_GetValue(objData, "CompanyOwnersName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyLegalName")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtName"), FRM_DS_GetValue(objData, "CompanyLegalName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Address")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtAddress"), FRM_DS_GetValue(objData, "Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "City")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtCity"), FRM_DS_GetValue(objData, "City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "State")) Then
		GUI_SwfComboBox_Select objCompanyDialog.SwfComboBox("swfname:=cboStateAddr"), FRM_DS_GetValue(objData, "State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Zip")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtZip"), FRM_DS_GetValue(objData, "Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PhoneNumber")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtPhone"), FRM_DS_GetValue(objData, "PhoneNumber")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FaxNumber")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtFax"), FRM_DS_GetValue(objData, "FaxNumber")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompanyEmail")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtEmail"), FRM_DS_GetValue(objData, "CompanyEmail")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Website")) Then
		GUI_SwfEdit_Set objCompanyDialog.SwfEdit("swfname:=txtWebsite"), FRM_DS_GetValue(objData, "Website")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPOManager")) Then
		GUI_SwfComboBox_Select objCompanyDialog.SwfComboBox("swfname:=cboManager"), FRM_DS_GetValue(objData, "TPOManager")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PrimarySalesRepName")) Then
		GUI_SwfObject_Click objCompanyDialog.SwfObject("swfname:=btnAddRep")
		boolExists = GUI_List_ClickRow(objCompanyDialog.SwfWindow("swfname:=AddSalesRepForm").SwfObject("swfname:=gridViewSales"), Null, 0, FRM_DS_GetValue(objData, "PrimarySalesRepName"), True, False, False, "Single")
		If Not boolExists Then
			GUI_List_ActOnRow objCompanyDialog.SwfWindow("swfname:=AddSalesRepForm").SwfObject("swfname:=gridViewSales"), 0, True, False, False, "Single"
		End If
		GUI_SwfButton_Click objCompanyDialog.SwfWindow("swfname:=AddSalesRepForm").SwfButton("swfname:=btnOK")
	End If
		
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog").SwfButton("swfname:=btnOK")
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog").Dialog("text:=Encompass").WinButton("text:=.*Yes")

End Function



'This function is used to create company details TPOcontact
'@code
'    BIZ_CompanyDetails_TPOContact_Create(strTPOName, strRowID)
'@endcode
'@param strTPOPath - Full Path of the TPO 
'@param strRowID

Function BIZ_CompanyDetails_TPOContact_Create(strTPOName, strRowID)
	GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), "Third Party Originators;" & strTPOName
	wait(2)
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnAddContact")
	
	Set objTPOContactForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm")
	Set objData = FRM_DS_GetTestData("Settings_CompanySettings", "SetTPOContact", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstName")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtFirstName"), FRM_DS_GetValue(objData, "FirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MiddleName")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtMiddleName"), FRM_DS_GetValue(objData, "MiddleName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastName")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtLastName"), FRM_DS_GetValue(objData, "LastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Suffix")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtSuffix"), FRM_DS_GetValue(objData, "Suffix")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Title")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtTitle"), FRM_DS_GetValue(objData, "Title")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PhoneNumber")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtPhone"), FRM_DS_GetValue(objData, "PhoneNumber")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CellPhoneNumber")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtCell"), FRM_DS_GetValue(objData, "CellPhoneNumber")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FaxNumber")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtFax"), FRM_DS_GetValue(objData, "FaxNumber")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Email")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtEmail"), FRM_DS_GetValue(objData, "Email")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NMLSID")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtNMLSID"), FRM_DS_GetValue(objData, "NMLSID")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NMLSCurrent")) Then
		GUI_SwfCheckBox_Set objTPOContactForm.SwfCheckBox("swfname:=NMLS Current"), FRM_DS_GetValue(objData, "NMLSCurrent")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SSN")) Then
		GUI_SwfEdit_Set objTPOContactForm.SwfEdit("swfname:=txtSSN"), FRM_DS_GetValue(objData, "SSN")
	End If
	
If objTPOContactForm.SwfObject("swfname:=btnAddRole").Exist Then	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Role")) Then
    	GUI_SwfObject_Click objTPOContactForm.SwfObject("swfname:=btnAddRole")
		intRowNumber = GUI_List_GetRowIndex(objTPOContactForm.SwfWindow("swfname:=AddRolesForContacts").SwfObject("swfname:=gvAvailableRoles"), 0, FRM_DS_GetValue(objData, "Role"))
		If intRowNumber <> -1 Then
			objTPOContactForm.SwfWindow("swfname:=AddRolesForContacts").SwfObject("swfname:=gvAvailableRoles").Object.Items.Item(intRowNumber).Subitems.Item(0).Checked = True
		Else
			objTPOContactForm.SwfWindow("swfname:=AddRolesForContacts").SwfObject("swfname:=gvAvailableRoles").Object.Items.Item(0).Subitems.Item(0).Checked = True
		End If
		GUI_SwfButton_Click objTPOContactForm.SwfWindow("swfname:=AddRolesForContacts").SwfButton("swfname:=btnSubmit")
	End If
End IF	
	
	
	If objTPOContactForm.SwfObject("swfname:=btnAddRep").Exist Then		
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PrimarySalesRepName")) Then
			Set objTPOContactForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm")
		   	GUI_SwfObject_Click objTPOContactForm.SwfObject("swfname:=btnAddRep")
			boolExists = GUI_List_ClickRow(objTPOContactForm.SwfWindow("swfname:=AddSalesRepForm").SwfObject("swfname:=gridViewSales"), Null, 0, FRM_DS_GetValue(objData, "PrimarySalesRepName"), True, False, False, "Single")
			If Not boolExists Then
				GUI_List_ActOnRow objTPOContactForm.SwfWindow("swfname:=AddSalesRepForm").SwfObject("swfname:=gridViewSales"), 0, True, False, False, "Single"
			End If
			GUI_SwfButton_Click objTPOContactForm.SwfWindow("swfname:=AddSalesRepForm").SwfButton("swfname:=btnOK")
		End If	
	
	End IF
	
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "License_State")) Then
		arrStates = Split(FRM_DS_GetValue(objData, "License_State"), ",")
		For i = 0 To Ubound(arrStates)
			intRowNumber = GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm").SwfObject("swfname:=gridViewStates"), 1, arrStates(i))
			SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm").SwfObject("swfname:=gridViewStates").Object.Items.Item(intRowNumber).SubItems.Item(0).checked = True
		Next
	End If
    	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "License_License#")) Then
		arrLicenses = Split(FRM_DS_GetValue(objData, "License_License#"), ",")
		For i = 0 To Ubound(arrLicenses)
			arrStr = Split(arrLicenses(i),":")
			intRowNumber = GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm").SwfObject("swfname:=gridViewStates"), 1, arrStr(0))
			GUI_List_ClickOnCell SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm").SwfObject("swfname:=gridViewStates"), SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm").SwfScrollBar("swfname:=vPanelScrollBar"), intRowNumber, 2, True, False, True, "Double"
			UTIL_Win_SendKey arrStr(1) & "{ENTER}"
		NExt
	End If
	If objTPOContactForm.SwfObject("swfname:=btnAssignPersona").Exist Then
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Personas")) Then
         
    	    GUI_Object_ValidateText objTPOContactForm.SwfObject("swfname:=grpPersonas"),"Personas","Text Should Match"
    	    GUI_Object_ValidateEnabled objTPOContactForm.SwfObject("swfname:=btnAssignPersona"),"Add Persona Button Should Be Enabled"
    	    GUI_Object_ValidateDisabled objTPOContactForm.SwfObject("swfname:=btnRemovePersona"),"Remove Persona Button Should Be Disabled"
    	    GUI_Object_ValidateDisabled objTPOContactForm.SwfButton("swfname:=btnViewPersonaRights"),"View/Edit Rights Button Should Be Disabled"

			GUI_SwfObject_Click objTPOContactForm.SwfObject("swfname:=btnAssignPersona")
    	    If objTPOContactForm.SwfWindow("swfname:=PersonaSelectionForm").Exist(10) Then
    	        FRM_Logger_ReportPassEvent "Persona Selection Window","Persona Selection Pop-Up Window Should Appear", null        
    	        GUI_Object_ValidateText objTPOContactForm.SwfWindow("swfname:=PersonaSelectionForm").SwfLabel("swfname:=lblLine1"),"Select persona(s) that this user belongs to. If you assign multiple personas to the user, the user will have the greater rights of those personas.","Text Should Match"
    	        strPersona = trim(FRM_DS_GetValue(objData, "Personas"))
    	        arrSearchText = Split(strPersona,",")
    	        For i = 0 To UBound(arrSearchText)
    	            GUI_List_ClickRow objTPOContactForm.SwfWindow("swfname:=PersonaSelectionForm").SwfObject("swfname:=gvPersonas"),objscrollBar,0,arrSearchText(i),False,False,True,"Single"
    	            objTPOContactForm.SwfWindow("swfname:=PersonaSelectionForm").SwfObject("swfname:=gvPersonas").Type micCtrlDwn
    	              Set objUserPersona=objTPOContactForm.SwfWindow("swfname:=PersonaSelectionForm").SwfObject("swfname:=gvPersonas")
    	                GUI_List_ClickCheckbox objUserPersona, objScrollBar, arrSearchText(i), 0, False, False, "Single", True
    	        Next 
    	        objTPOContactForm.SwfWindow("swfname:=PersonaSelectionForm").SwfObject("swfname:=gvPersonas").Type micCtrlUp
    
    	        GUI_SwfButton_Click objTPOContactForm.SwfWindow("swfname:=PersonaSelectionForm").SwfButton("swfname:=btnOK")
          
    	    Else
    	        FRM_Logger_ReportFailEvent "Persona Selection Window","Window is Not Displayed", null
    	    End If
	
		End If
    	
	End If
	
    
    If objTPOContactForm.SwfObject("swfname:=grpLoanAccess").SwfCheckBox("swfname:=chbPeerAccess").Exist(2) Then
        GUI_SwfCheckbox_Set objTPOContactForm.SwfObject("swfname:=grpLoanAccess").SwfCheckBox("swfname:=chbPeerAccess"),True
        GUI_SwfCheckbox_Set objTPOContactForm.SwfObject("swfname:=grpLoanAccess").SwfCheckBox("swfname:=chbEditSubordinate"),True
	End If	
	
	GUI_SwfObj_PerClick SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm").SwfButton("swfname:=btnSave")
	
	If GUI_Object_IsExistX(Dialog("text:=RunDLL", "regexpwndtitle:=RunDLL"), 10) Then
		GUI_WinButton_Click Dialog("text:=RunDLL", "regexpwndtitle:=RunDLL").WinButton("text:=OK")
	End If
	If GUI_Object_IsExistX(Window("regexpwndtitle:=Outlook").Dialog("text:=Microsoft Outlook"), 5) Then
		Window("regexpwndtitle:=Outlook").Dialog("text:=Microsoft Outlook").Activate()
		GUI_WinButton_Click Window("regexpwndtitle:=Outlook").Dialog("text:=Microsoft Outlook").WinButton("text:=&Deny")
	End If
End Function



'This function is used to Validate the Personas in TPO Contact depending upon the Type of Personas passed
'@code
'    BIZ_CompanyDetails_TPOContact_ValidatePersonas(arrPersonaNames)
'@endcode
'@param arrPersonaNames - The list of Persona passed as Parameter as "External", "Both"

Function BIZ_CompanyDetails_TPOContact_ValidatePersonas(arrPersonaNames)
    
    Set objTPOContactForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TPOContactSetupForm")
    Set objPersonaList = objTPOContactForm.SwfWindow("swfname:=PersonaSelectionForm").SwfObject("swfname:=gvPersonas")  
   
    intRowCount = objPersonaList.Object.Items.Count
    For i = 0 To intRowCount - 1
        strActualValue=objPersonaList.Object.Items.Item(i).Subitems.Item(0).Text
        strExpectedValue = arrPersonaNames(i)
        FRM_VerifyEqual strExpectedValue,strActualValue,"Comparing All Personas"&strActualValue,"Personas should match"
    Next
    
End Function



'This function is used to Validate the the TPO Contact Created
'@code
'    BIZ_CompanyDetails_TPOContact_ValidateCreatedTPOContact(strRowID,strTPOName)
'@endcode
'@param strRowID - The strRowID passed as parameter
'@param strTPOName -  The TPO Org under which the TPO Contact is created that needs to be validated

Function BIZ_CompanyDetails_TPOContact_ValidateCreatedTPOContact(strRowID,strTPOName)
    
    GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), "Third Party Originators;" & strTPOName
	wait(5)
	Set objTPOContactDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gridViewContacts")
    '=================Select the contact created for the TPO======================================
    Set objData = FRM_DS_GetTestData("Settings_CompanySettings", "SetTPOContact", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstName")) Then
	   strFirstName = FRM_DS_GetValue(objData, "FirstName")	'First Name
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastName")) Then
	   strLastName = FRM_DS_GetValue(objData, "LastName")	'LastName
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Email")) Then
	   strEmail = FRM_DS_GetValue(objData, "Email")	'Email
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Role")) Then
	   strRolePersona = FRM_DS_GetValue(objData, "Role")	'Role
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Personas")) Then
	   strRolePersona = FRM_DS_GetValue(objData, "Personas")	'Personas
    End If
    
	'======  Verify  fields ========================
    FRM_Logger_ReportStepEvent "Validating the TPO Contacts Created", "TPO Contacts should Match",Null
    intRowCount = objTPOContactDetails.Object.Items.Count
    For i = 0 To intRowCount  - 1
        GUI_List_ValidateCellData objTPOContactDetails, i, 0, strLastName
        GUI_List_ValidateCellData objTPOContactDetails, i, 1, strFirstName
        GUI_List_ValidateCellData objTPOContactDetails, i, 2, strRolePersona
        GUI_List_ValidateCellData objTPOContactDetails, i, 5, strEmail
    Next
    Set objTPOContactDetails = Nothing
    Set objData = Nothing
End Function



'This function is used to Edit the the TPO Contact Created : Re-opening the TPO Contact Created for verification
'@code
'    BIZ_CompanyDetails_TPO_EditContact(strTPOPath)
'@endcode
'@param strTPOPath - Full Path of the TPO node to be Edited

Function BIZ_CompanyDetails_TPO_EditContact(strTPOPath)

    SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree").ExpandAll "Third Party Originators"
    wait(5)
    strAllTPOs = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree").GetContent()
    	
    '====================If the TPO  exists===============================
    If InStr(strAllTPOs, strTPOPath) > 0 Then
    	'===================================Select the TPO===================================
    	GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), strTPOPath
    	'=================Re-open the contacts for the TPO Created======================================
    	intRowCount = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gridViewContacts").Object.Items.Count
    	For i = 1 To intRowCount
    		GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gridViewContacts"),objScrollBar,0,"Last",True,False,False,"Single"  
    		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnEditContact")
    			
        Next
    End If	

End Function



'This function is used to Edit the the TPO Org Created : Re-opening the TPO Org Created for verification
'@code
'    BIZ_CompanyDetails_TPO_EditOrg(strTPOPath)
'@endcode
'@param strTPOPath - Full Path of the TPO node to be Edited

Function BIZ_CompanyDetails_TPO_EditOrg(strTPOPath)

    SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree").ExpandAll "Third Party Originators"
    wait(5)
    strAllTPOs = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree").GetContent()
    	
    '====================If the TPO Org exists===============================
    If InStr(strAllTPOs, strTPOPath) > 0 Then
    	'===================================Select the TPO===================================
    	FRM_Logger_ReportPassEvent "TPO Org Created should Be Displayed ","TPO Org created is Displayed", null
    	GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), strTPOPath
    	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnEditOrg")
    Else
        FRM_Logger_ReportFailEvent "TPO Org Created should Be Displayed ","TPO Org created is Not Present", null
    End If	

End Function  



'This function is used to Insert TPO Contacts In an Excel Sheet and Later convert it to a CSV For Import
'@code
'    BIZ_CompanyDetails_TPO_InsertContactsExcelToCSV(strRowID,strExcelFileName,strCSVFileName)
'@endcode
'@param strRowID - The TPO Contact that needs to be added in excel sheet 
'@param strExcelFileName -  The Excel File Name 
'@param strCSVFileName - The CSV File Name of the TPO Contact Created

Function BIZ_CompanyDetails_TPO_InsertContactsExcelToCSV(strRowID,strExcelFileName,strCSVFileName)
    Dim objData,myxl,mysheet
    Set objData = FRM_DS_GetTestData("Settings_CompanySettings", "SetTPOContact", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstName")) Then
	    strFirstName = FRM_DS_GetValue(objData, "FirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LastName")) Then
	    strLastName = FRM_DS_GetValue(objData, "LastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Email")) Then
	    strEmail = FRM_DS_GetValue(objData, "Email")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Role")) Then
	    strContactType = FRM_DS_GetValue(objData, "Role")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Personas")) Then
	    strContactType = FRM_DS_GetValue(objData, "Personas")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SalesRepID")) Then
	    strSalesRepID = FRM_DS_GetValue(objData, "SalesRepID")
	End If
	    
    Set myxl = createobject("excel.application")
       
    strFilePath = FRM_RT_ReportDirPath() & strExcelFileName
    
    myxl.Workbooks.Open strFilePath 
    myxl.Application.Visible = true
 
    Set mysheet = myxl.ActiveWorkbook.Worksheets("Table")
 
    'Enter values in Sheet1.
    'The format of entering values in Excel is excelSheet.Cells(row,column)=value

    mysheet.cells(2,1).value = strFirstName
    mysheet.cells(2,3).value = strLastName
    mysheet.cells(2,11).value = strEmail
    mysheet.cells(2,17).value = strEmail
    mysheet.cells(2,29).value = strSalesRepID
    mysheet.cells(2,31).value = strContactType    
    
    'Save the Excel file as qtp.csv
    strFilePath = FRM_RT_ReportDirPath() & strCSVFileName
       
    'ImportContact_FilePath = FRM_RT_ReportDirPath() &  "ImportContactsAutomation.csv"
    myxl.ActiveWorkbook.SaveAs  strFilePath, 23
    Window("micClass:=Window","regexpwndtitle:=Excel").Activate 
    Window("micClass:=Window","regexpwndtitle:=Excel").Close
    Window("micClass:=Window","regexpwndtitle:=Excel").Window("regexpwndtitle:=Microsoft Excel").WinObject("height:=83").WinButton("acc_name:=Save","height:=23").Click
    Dialog("text:=Save As").WinButton("text:=.*Save").Click
    Dialog("regexpwndtitle:=Confirm Save As","height:=123").WinButton("height:=22","text:=&Yes").Click 
    Window("regexpwndclass:=XLMAIN").Dialog("text:=Microsoft Excel").WinButton("text:=&Yes").Click
    UTIL_Win_CloseExcel()    
   
    Set myxl = Nothing
    Set mysheet = Nothing
    Set objData = Nothing
    
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\CompanySettings.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\CompanyUserSetup.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_CompanyUserSetup BIZ_Settings_CompanyUserSetup
'
' List of functions here
' @code
'   Function BIZ_Roles_CreateNew(strRowID)
'   Function BIZ_Delete_Role(strRoleName)
'   Function BIZ_Roles_SelectExistingRole(strFieldDataEntry)
'	Function BIZ_CompanyUserSetup_Roles_EditRole(strRowID,NewRole)
'	Function BIZ_CompanyUserSetup_Roles_DeleteRole(strRowID,NewRole)
'   Function BIZ_UserGroups_CreateNew(strRowID) 
'   Function BIZ_UserGroups_SelectExistingGroup(strFieldDataEntry)
'   Funciton BIZ_UserGroups_SelectExistingGroupsWithResponsiblity(strFieldDataEntry, strSecondaryName, strResponsibilityName)
'   Function BIZ_UserGroups_AddMembers(strTPOPath)
'   Function BIZ_UserGroups_DeleteGroup(strRowID)
'	Function BIZ_UserGroups_RenameUserGroup(strRowID,strUserGroupName)
'   Function BIZ_UserGroups_SelectLoanFolder()
'   Function CompanyUserSetup_UserGroups_EditGroup(strRowID,NewUser)
'   Function CompanyUserSetup_UserGroups_DuplicateGroup(NewUser)
'   Function CompanyUserSetup_UserGroups_DeleteGroup(DuplicateGroup)
'   Function CompanyUserSetup_UserGroups_UserMemebrGroup(strRowID,NewUser,strActualMember)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to select loan folder
'@code
'    BIZ_UserGroups_AssignLoanFolderToUser()
'@endcode
'@param strRowID - Row ID of the datasheet

Function BIZ_UserGroups_SelectLoanFolder()

    FRM_Logger_ReportInfoEvent  "Select Loan Folder Group ","Select the Existing Loan Folder",Null
	
    Dim objMainWin,objData,strGroupName
    Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    
	GUI_SwfTab_Click objMainWin.SwfTab("swfname:=tabControl1"), "Loans"
	GUI_Object_IsExistX objMainWin.SwfListView("swfname:=listViewLoanFolders"), 30
	
	GUI_List_Select objMainWin.SwfListView("swfname:=listViewLoanFolders"), "Secondary Folder"
	
End Function



'This function is used to select existing group responsibility
'@code
'    BIZ_UserGroups_SelectExistingGroupsWithResponsiblity( strFieldDataEntry, strSecondaryName, strResponsibilityName)
'@endcode
'@param strRowID - Row ID of the datasheet

Function BIZ_UserGroups_SelectExistingGroupsWithResponsiblity( strFieldDataEntry, strSecondaryName, strResponsibilityName)

    FRM_Logger_ReportInfoEvent  "Select Existing Group ","Select the Existing Groups",Null
	
    Dim objMainWin,objData,strGroupName
    Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gcGroupList").SwfListView("swfname:=lvGroup")
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Company/User Setup","User Groups"
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gcGroupList")
	intCount=objFieldDataEntryList.GetItemsCount
	For i= 0 To intCount - 1
		strActualValue = objFieldDataEntryList.GetItem(i)
		If strActualValue = strFieldDataEntry  Then
		  boolExist = True
		  GUI_List_Select objFieldDataEntryList,strActualValue
		  wait 5
		  GUI_Object_IsExistX objMainWin.SwfObject("swfname:=stdIconBtnConfigGroup"), 30
		  BIZ_UserGroups_AddMembersInResponsibility strSecondaryName, strResponsibilityName
		  Exit For
		Else
		  boolExist = False
		End If
    Next
	
	GUI_SwfObject_Click objMainWin.SwfObject("swfname:=SecurityGroupSetupForm").SwfObject("swfname:=gcGroupList").SwfObject("swfname:=stdIconBtnNew") 
	strGroupName= trim(FRM_DS_GetValue(objData, "GroupName"))
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GroupName")) Then
        GUI_SwfEdit_Set objMainWin.SwfWindow("swfname:=SecurityGroupNameDlg").SwfEdit("swfname:=textBoxSecurityGroupName"),strGroupName
	End If
	
	GUI_SwfButton_Click objMainWin.SwfWindow("swfname:=SecurityGroupNameDlg").SwfButton("swfname:=btnOK")
    
	BIZ_UserGroups_CreateNew = strGroupName
	
	Set objMainWin = Nothing
	Set objData    = Nothing	
End Function


'Function to Create a New Role
'@code
'    BIZ_Roles_CreateNew(strRowID)
'@endcode
'@param strRowID - RowID of the datasheet
Function BIZ_Roles_CreateNew(strRowID)
    FRM_Logger_ReportInfoEvent  "Creating a Role ","Role Needs To Be Created",Null
	
    Dim objMainWin,objData, arrSearchText,strUserGroup, strPersona, arrUserGroup, objscrollBar
    Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData    = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Roles", strRowID)
	
	strRoleName= Trim(FRM_DS_GetValue(objData, "RoleName"))
	
	BIZ_Settings_ClickAdd
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RoleName")) Then
        GUI_SwfEdit_Set objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfEdit("swfname:=boxRoleName"),trim(FRM_DS_GetValue(objData, "RoleName"))
	End If
   
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RoleAbbr")) Then
        GUI_SwfEdit_Set objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfEdit("swfname:=boxAbbr"),trim(FRM_DS_GetValue(objData, "RoleAbbr"))
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Persona")) Then
        strPersona = trim(FRM_DS_GetValue(objData, "Persona"))
	End If
	arrSearchText = Split(strPersona,",")
	'strActualSearchText=arrSearchText(UBound(arrSearchText))
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "UserGroup")) Then
        strUserGroup = trim(FRM_DS_GetValue(objData, "UserGroup"))
        arrUserGroup = Split(strUserGroup,",")
        'User Group Selection
        GUI_SwfObject_Click objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfObject("swfname:=btnAddGroup")
        For i = 0 To UBound(arrUserGroup)
            GUI_List_ClickRow objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectUserGroupForm").SwfObject("swfname:=gvUserGroups"),objscrollBar,0,arrUserGroup(i),True,False,False,"Single"
            objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectUserGroupForm").SwfObject("swfname:=gvUserGroups").Type micCtrlDwn
        Next 
        objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectUserGroupForm").SwfObject("swfname:=gvUserGroups").Type micCtrlUp
        GUI_SwfButton_Click objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectUserGroupForm").SwfButton("swfname:=buttonSelect")
	
	End If
	
	'Persona Selection
	GUI_SwfObject_Click objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfObject("swfname:=btnAddPersona")
    
    Set objscrollBar = objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectPersonaForm").SwfObject("swfname:=gvPersonas").SwfScrollBar("swfname:=vPanelScrollBar")

    For i = 0 To UBound(arrSearchText)
        GUI_List_ClickRow objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectPersonaForm").SwfObject("swfname:=gvPersonas"),objscrollBar,0,arrSearchText(i),True,False,False,"Single"
        objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectPersonaForm").SwfObject("swfname:=gvPersonas").Type micCtrlDwn
    Next 
    objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectPersonaForm").SwfObject("swfname:=gvPersonas").Type micCtrlUp
    GUI_SwfButton_Click objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectPersonaForm").SwfButton("swfname:=buttonSelect")
      
	GUI_SwfButton_Click objMainWin.SwfWindow("swfname:=RoleDetailForm").SwfButton("swfname:=saveBtn")
			
	Set objMainWin   = Nothing
	Set objData      = Nothing
	Set objscrollBar = Nothing
	
	BIZ_Roles_CreateNew = strRoleName	
End Function

'Function to delete an existing Role
'@code
'    BIZ_Delete_Role(strRoleName)
'@endcode
Function BIZ_Delete_Role(strRoleName)
	Set objRoleList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRole")
	Set objScrollBar = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")
	boolExist = GUI_List_ClickRow(objRoleList, objScrollBar, 0, strRoleName, True, False, False, "Single")
	If boolExist Then        
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Click "2","Are you sure you want to delete selected role?","Yes"			
	End If
	Set objRoleList = Nothing
	Set objScrollBar = Nothing
End Function



' This function is used to Verificaiton of editing the Role.
'@code
'   BIZ_CompanyUserSetup_Roles_EditRole(strRowID,NewRole) 
'@endcode
'@Param strRowID - is row id in excel for reading data
'@Param NewRole - is for edit New Role data

Function BIZ_CompanyUserSetup_Roles_EditRole(strRowID,NewRole)

	FRM_Logger_ReportInfoEvent "Edit Role","Verificaiton of editing the Role", Null
	
	Dim objSetting,objData,objlistViewRole,objSelectPersonaForm,objscrollBar
	
	Set objSetting 		    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData    		    = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Roles", strRowID)
	Set objlistViewRole   	= objSetting.SwfObject("swfname:=listViewRole")
	Set objSelectPersonaForm= objSetting.SwfWindow("swfname:=RoleDetailForm").SwfWindow("swfname:=SelectPersonaForm")
	Set objscrollBar 		= objSelectPersonaForm.SwfObject("swfname:=gvPersonas").SwfScrollBar("swfname:=vPanelScrollBar")
	
	BIZ_Roles_SelectExistingRole NewRole
	GUI_SwfObject_Click objSetting.SwfObject("swfname:=stdIconBtnEdit")
    GUI_Object_WaitTillExistX objSetting.SwfWindow("swfname:=RoleDetailForm"),50
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RoleAbbr1")) Then
		GUI_SwfEdit_Set objSetting.SwfWindow("swfname:=RoleDetailForm").SwfEdit("swfname:=boxAbbr"), FRM_DS_GetValue(objData, "RoleAbbr1")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Persona1")) Then
        strPersona = trim(FRM_DS_GetValue(objData, "Persona1"))
	End If	
	arrSearchText = Split(strPersona,",")
	'Persona Selection
	GUI_SwfObject_Click objSetting.SwfWindow("swfname:=RoleDetailForm").SwfObject("swfname:=btnAddPersona")
    
    For i = 0 To UBound(arrSearchText)
        GUI_List_ClickRow objSelectPersonaForm.SwfObject("swfname:=gvPersonas"),objscrollBar,0,arrSearchText(i),True,False,False,"Single"
        objSelectPersonaForm.SwfObject("swfname:=gvPersonas").Type micCtrlDwn
    Next 
    objSelectPersonaForm.SwfObject("swfname:=gvPersonas").Type micCtrlUp
    GUI_SwfButton_Click objSelectPersonaForm.SwfButton("swfname:=buttonSelect")
	     
	GUI_SwfButton_Click objSetting.SwfWindow("swfname:=RoleDetailForm").SwfButton("swfname:=saveBtn")
    
	GUI_Object_WaitTillExistX objlistViewRole, 30
		
	intRowNum=GUI_List_GetRowIndex(objlistViewRole,"Role Name",NewRole)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RoleAbbr1")) Then
		GUI_List_ValidateCellDataWithCustomMsg objlistViewRole, intRowNum,"Abbreviation", Trim(FRM_DS_GetValue(objData, "RoleAbbr1")),"Abbreviation"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Persona1")) Then
		strPersona= GUI_List_GetCellData(objlistViewRole,intRowNum,2)
		strPersona1=split(strPersona,",")
		FRM_VerifyEqual strPersona1(1),FRM_DS_GetValue(objData, "Persona1"),"Comparing values","Values should match"
	End If
	
	Set objSetting 		  	= Nothing
	Set objData    		  	= Nothing
	Set objlistViewRole   	= Nothing
	Set objscrollBar 	  	= Nothing
	Set objSelectPersonaForm= Nothing
	
End Function



'Function to Delete a New User Group
'@code
'    BIZ_CompanyUserSetup_Roles_DeleteRole(strRowID)
'@endcode
'@param strRowID - Row ID of the datasheet
'@Param NewRole - is for delete New Role data

Function BIZ_CompanyUserSetup_Roles_DeleteRole(strRowID,NewRole)

    FRM_Logger_ReportInfoEvent  "Deleting a Role ","Role Should Be Deleted",Null
	
    Dim objSetting,objData
    Set objSetting = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objData    = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Roles", strRowID)
	
	If UTIL_String_IsNotEmpty(NewRole) Then
		BIZ_Roles_SelectExistingRole NewRole
		GUI_SwfObject_Click objSetting.SwfObject("swfname:=stdIconBtnDelete")
	End If
	GUI_Dialog_Encompass_Yes("Are you sure you want to delete selected role?")
		
	boolExist= BIZ_Roles_SelectExistingRole(NewRole)
	FRM_VerifyFalse boolExist," Deleted Role","'"&NewRole &"' Selected Role is deleted "
	    
	Set objSetting = Nothing
	Set objData    = Nothing
	
End Function



'Function to select the Role present if Exist and return false if not present
'@code
'    BIZ_Roles_SelectExistingRole(strFieldDataEntry)
'@endcode
'@param strFieldDataEntry - Rule name to be checked 
'@see GUI_List_ClickRow

Function BIZ_Roles_SelectExistingRole(strFieldDataEntry)

	FRM_Logger_ReportInfoEvent "Search Existing Role", "Existing Role with name Present:"&strFieldDataEntry, null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry, boolExist
	Set objFieldDataEntryList   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRole")
	Set scrollbarFieldDataEntry = objFieldDataEntryList.SwfScrollBar("swfname:=vPanelScrollBar")

	boolExist = GUI_List_ClickRow (objFieldDataEntryList, scrollbarFieldDataEntry, "Role Name", strFieldDataEntry, True, False, False, "Single")
	 
	BIZ_Roles_SelectExistingRole = boolExist
	
	Set objFieldDataEntryList   = Nothing
	Set scrollbarFieldDataEntry = Nothing
	
End Function



'Function to Create a New User Group
'@code
'    BIZ_UserGroups_CreateNew(strRowID)
'@endcode
'@param strRowID - Row ID of the datasheet

Function BIZ_UserGroups_CreateNew(strRowID)

    FRM_Logger_ReportInfoEvent  "Creating a Group ","Group Needs To Be Created",Null
	
    Dim objMainWin,objData,strGroupName
    Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objData    = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Groups", strRowID)
	
	GUI_SwfObject_Click objMainWin.SwfObject("swfname:=SecurityGroupSetupForm").SwfObject("swfname:=gcGroupList").SwfObject("swfname:=stdIconBtnNew") 
	strGroupName= trim(FRM_DS_GetValue(objData, "GroupName"))
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GroupName")) Then
        GUI_SwfEdit_Set objMainWin.SwfWindow("swfname:=SecurityGroupNameDlg").SwfEdit("swfname:=textBoxSecurityGroupName"),strGroupName
	End If
	
	GUI_SwfButton_Click objMainWin.SwfWindow("swfname:=SecurityGroupNameDlg").SwfButton("swfname:=btnOK")
    
	BIZ_UserGroups_CreateNew = strGroupName
	
	Set objMainWin = Nothing
	Set objData    = Nothing
	
End Function



'@code
'    BIZ_UserGroups_CreateNew(strRowID)
'@endcode
'@param strRowID - Row ID of the datasheet

Function BIZ_UserGroups_SelectExistingGroups( strFieldDataEntry, strSecondaryName, strResponsibilityName)

    FRM_Logger_ReportInfoEvent  "Select Existing Group ","Select the Existing Groups",Null
	
    Dim objMainWin,objData,strGroupName
    Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gcGroupList").SwfListView("swfname:=lvGroup")
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Company/User Setup","User Groups"
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gcGroupList")
	intCount=objFieldDataEntryList.GetItemsCount
	For i= 0 To intCount - 1
		strActualValue = objFieldDataEntryList.GetItem(i)
		If strActualValue = strFieldDataEntry  Then
		  boolExist = True
		  GUI_List_Select objFieldDataEntryList,strActualValue
		  wait 5
		  GUI_Object_IsExistX objMainWin.SwfObject("swfname:=stdIconBtnConfigGroup"), 30
		  BIZ_UserGroups_AddMembersInResponsibility strSecondaryName, strResponsibilityName
		  Exit For
		Else
		  boolExist = False
		End If
    Next
	
	GUI_SwfObject_Click objMainWin.SwfObject("swfname:=SecurityGroupSetupForm").SwfObject("swfname:=gcGroupList").SwfObject("swfname:=stdIconBtnNew") 
	strGroupName= trim(FRM_DS_GetValue(objData, "GroupName"))
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GroupName")) Then
        GUI_SwfEdit_Set objMainWin.SwfWindow("swfname:=SecurityGroupNameDlg").SwfEdit("swfname:=textBoxSecurityGroupName"),strGroupName
	End If
	
	GUI_SwfButton_Click objMainWin.SwfWindow("swfname:=SecurityGroupNameDlg").SwfButton("swfname:=btnOK")
    
	BIZ_UserGroups_CreateNew = strGroupName
	
	Set objMainWin = Nothing
	Set objData    = Nothing
	
End Function



'Function to select the Group present if Exist and return false if not present
'@code
'    BIZ_UserGroups_SelectExistingGroup(strFieldDataEntry)
'@endcode
'@param strFieldDataEntry - Rule name to be checked 
'@see GUI_List_Select

Function BIZ_UserGroups_SelectExistingGroup(strFieldDataEntry)

	FRM_Logger_ReportInfoEvent "Search Existing Group", "Existing Group with name Present:"&strFieldDataEntry, null

	Dim objFieldDataEntryList, boolExist, intCount
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gcGroupList").SwfListView("swfname:=lvGroup")
	 
    intCount=objFieldDataEntryList.GetItemsCount
	For i= 0 To intCount - 1
		strActualValue = objFieldDataEntryList.GetItem(i)
		
		If strActualValue = strFieldDataEntry  Then
		  boolExist = True
		  GUI_List_Select objFieldDataEntryList,strActualValue
		  Exit For
		Else
		  boolExist = False
		End If
    Next
	
    BIZ_UserGroups_SelectExistingGroup = boolExist
	
End Function



'This function is used to Add a Org to a Group
'@code
'    BIZ_UserGroups_AddMembers(strTPOPath)
'@endcode
'@param strTPOPath - Full Path of the Org node to be Added To Group

Function BIZ_UserGroups_AddMembers(strTPOPath)

    FRM_Logger_ReportInfoEvent "Adding Org To A Group Selected", "Org Should Be Added To a User Group"&strTPOPath , null

    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnConfigGroup")
    
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer").ExpandAll "Third Party Originators"
	wait(5)
	strAllTPOs = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer").GetContent()
	
	'====================If the TPO to be selected exists===============================
	If InStr(strAllTPOs, strTPOPath) > 0 Then
		'===================================Select the TPO===================================
		GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer"), strTPOPath
		'=================Add the TPO to the Group======================================
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfObject("swfname:=btnAddAllToGroup")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfButton("swfname:=btnOK")
	End If

End Function



'This function is used to Add a Org to a Group
'@code
'    BIZ_UserGroups_AddMembers(strTPOPath)
'@endcode
'@param strTPOPath - Full Path of the Org node to be Added To Group

Function BIZ_UserGroups_AddMembersInResponsibility(strTPOPath,strResponsibility)

    FRM_Logger_ReportInfoEvent "Adding Org To A Group Selected", "Org Should Be Added To a User Group"&strTPOPath , null

    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnConfigGroup")
    
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer").ExpandAll strResponsibility
	wait(5)
	strAllTPOs = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer").GetContent()
	
	'====================If the TPO to be selected exists===============================
	If InStr(strAllTPOs, strTPOPath) > 0 Then
		'===================================Select the TPO===================================
		GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer"), strTPOPath
		'=================Add the TPO to the Group======================================
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfObject("swfname:=btnAddAllToGroup")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=ResourceSetViewer").SwfButton("swfname:=btnOK")
	End If

End Function



'Function to Delete a New User Group
'@code
'    BIZ_UserGroups_DeleteGroup(strRowID)
'@endcode
'@param strRowID - Row ID of the datasheet

Function BIZ_UserGroups_DeleteGroup(strRowID)

    FRM_Logger_ReportInfoEvent  "Deleting a Group ","Group Should Be Deleted",Null
	
    Dim objMainWin,objData
    Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objData    = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Groups", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GroupName")) Then
        GUI_List_Select objMainWin.SwfObject("swfname:=SecurityGroupSetupForm").SwfListView("swfname:=lvGroup"),trim(FRM_DS_GetValue(objData, "GroupName"))
        GUI_SwfObject_Click objMainWin.SwfObject("swfname:=SecurityGroupSetupForm").SwfObject("swfname:=gcGroupList").SwfObject("swfname:=stdIconBtnDelete") 
    End If
	GUI_Dialog_Encompass_Yes("Are you sure you want to delete the group?")
	    
	Set objMainWin = Nothing
	Set objData    = Nothing
	
End Function



'This Function is Used to Rename User Group
'@ code
'  		BIZ_UserGroups_RenameUserGroup(strRowID,strUserGroupName)
'@ endcode
'@param strRowID         - The numeric or string unique ID that used to find the line in the CompanyUserSetup_Roles_Groups data spreadsheet
'@param strUserGroupName - The name of User Group

Function BIZ_UserGroups_RenameUserGroup(strRowID,strUserGroupName)
	
	FRM_Logger_ReportInfoEvent "Rename UserGroup", "Rename UserGroup using '"&strUserGroupName&"'", null
	
	Dim objData,objMainWin,objgroup,strRenameUserGroupName
	
	Set objData    = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Groups", strRowID)
	Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objgroup   = objMainWin.SwfListView("swfname:=lvGroup")
		
	GUI_SwfList_Select objgroup,strUserGroupName			
	
	objgroup.Select strUserGroupName, micRightBtn           'Select is to handle Right Click    
	objgroup.WinMenu("menuobjtype:=3").Select "Rename"
		
	strRenameUserGroupName= Cstr(Trim(FRM_DS_GetValue(objData, "GroupName")))
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GroupName")) Then
       GUI_WinEdit_Set objgroup.WinEdit("Index:=0"),strRenameUserGroupName
	End If
	      
	UTIL_Win_SendKey "{ENTER}"  'Enter is used handle Rename Functionality
	Wait g_ShortWaitMedium		'Due To Sync Issues We Are Calling Wait Statement Explicitly
	
	If GUI_List_TextExists (objgroup,0,strRenameUserGroupName) Then				
		FRM_Logger_ReportPassEvent "Rename User Group","'"&strUserGroupName&"' renamed to '"&strRenameUserGroupName&"' ", Null			 
	Else
		FRM_Logger_ReportFailEvent "Rename User Group","'"&strUserGroupName&"' is not renamed", Null
	End If
	
	Set objData 	= Nothing
    Set objMainWin  = Nothing
	Set objgroup    = Nothing
		
	BIZ_UserGroups_RenameUserGroup = strRenameUserGroupName
	
End Function



' This function is used to Verificaiton of editing the User Group.
'@code
'   BIZ_CompanyUserSetup_UserGroups_EditGroup(strRowID,NewUser) 
'@endcode
'@Param strRowID - is row id in excel for reading data
'@Param NewUser - is for edit New user data

Function BIZ_CompanyUserSetup_UserGroups_EditGroup(strRowID,NewUser)

	FRM_Logger_ReportInfoEvent "Edit user group","Verificaiton of editing the User Group", Null
	
	Dim objSetting,objData,objTreeView,strActualMember,strExpectedMember, StrRc
	
	Set objSetting 		  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData 		  = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Groups", strRowID)
	Set objTreeView 	  = objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer")
		
		
	BIZ_UserGroups_SelectExistingGroup NewUser
	GUI_SwfTab_Click objSetting.SwfTab("swfname:=tabControl1"),"Borrower Contacts"
	GUI_SwfObject_Click objSetting.SwfObject("swfname:=stdIconBtnAdd")
    GUI_Object_WaitTillExistX objTreeView,50
    objTreeView.Expand("Administration")
    GUI_Object_WaitTillExistX objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer"),50
    Set objNodes = objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer").Object.nodes.item(0)
	icount = cint(objNodes.nodes.count)
	For i = icount-1 To 0 step -1
		Set objNodes1 = objNodes.nodes.item(i)
		If cint(objNodes1.nodes.count)=0 Then
			strActualMember= objNodes1.text
			Exit for
		End If
	Next
	GUI_SwfTreeView_Select objTreeView,"Administration;"&strActualMember
    GUI_SwfObject_Click objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfObject("swfname:=btnAddToGroup")
    GUI_Object_WaitTillExistX objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfButton("swfname:=btnOK"), 50
	GUI_SwfButton_Click objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfButton("swfname:=btnOK")
	Wait g_LongWaitMedium  				' Explicit wait used to handle sync issues
	BIZ_Settings_ClickSave
	GUI_Object_WaitTillExistX objSetting.SwfListView("swfname:=listViewGroupContact"), 50
	StrRc=GUI_List_GetRowIndex(objSetting.SwfListView("swfname:=listViewGroupContact"),"Name",strActualMember)
	strExpectedMember = GUI_List_GetCellData(objSetting.SwfListView("swfname:=listViewGroupContact"),StrRc,0)
	
	FRM_VerifyEqual strActualMember,strExpectedMember,"Comparing values","Values should match"
   
	Set objSetting   = Nothing
	Set objTreeView  = Nothing
	Set objData   	 = Nothing
	
	BIZ_CompanyUserSetup_UserGroups_EditGroup=strActualMember
	
End Function



' This function is used to delete existing organization user.
'@code
'   BIZ_CompanyUserSetup_UserGroups_DuplicateGroup(NewUser) 
'@endcode
'@Param NewUser - for delete data

Function BIZ_CompanyUserSetup_UserGroups_DuplicateGroup(NewUser)

	FRM_Logger_ReportInfoEvent "Delete user","Verification of deleting an user", Null
	
	Dim objSetting,objGroupList,strDuplicateGroup,intGetNewRowIndex
	
	Set objSettings 		  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objGroupList          = objSettings.SwfListView("swfname:=lvGroup")
		    
	BIZ_UserGroups_SelectExistingGroup NewUser
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDuplicate")
	GUI_Dialog_Encompass_Yes("")
	Wait g_TinyWaitMedium
	strDuplicateGroup = "Copy of " & NewUser
	GUI_Object_WaitTillExistX objGroupList, 300 
	intGetNewRowIndex = GUI_List_GetRowIndex(objGroupList, 0,strDuplicateGroup )
	If(intGetNewRowIndex > 0) then 
		FRM_Logger_ReportPassEvent "Validate Duplicate User Group","User Group '"&strDuplicateGroup&"'",null
	Else
		FRM_Logger_ReportFailEvent "Validate Duplicate User Group","User persona '"&strDuplicateGroup&"' not created ",null
	End If
	
	Set objSetting        = Nothing
	Set objGroupList	  = Nothing
		
	BIZ_CompanyUserSetup_UserGroups_DuplicateGroup = strDuplicateGroup
	
End Function



'Function to Delete a New User Group
'@code
'    BIZ_CompanyUserSetup_UserGroups_DeleteGroup(DuplicateGroup)
'@endcode
'@param DuplicateGroup - is for duplicating the user group

Function BIZ_CompanyUserSetup_UserGroups_DeleteGroup(DuplicateGroup)

    FRM_Logger_ReportInfoEvent  "Deleting a Group ","Group Should Be Deleted",Null
    
    Dim objMainWin
    
    Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    	
	If UTIL_String_IsNotEmpty(DuplicateGroup) Then
        BIZ_UserGroups_SelectExistingGroup DuplicateGroup
        GUI_SwfObject_Click objMainWin.SwfObject("swfname:=SecurityGroupSetupForm").SwfObject("swfname:=gcGroupList").SwfObject("swfname:=stdIconBtnDelete")
    End If
    Wait g_TinyWaitMedium 
	GUI_Dialog_Encompass_Yes("Are you sure you want to delete the group?")
	GUI_Object_WaitTillExistX objMainWin.SwfObject("swfname:=gcGroupList").SwfListView("swfname:=lvGroup"),30
	boolExist=GUI_List_TextExists(objMainWin.SwfObject("swfname:=gcGroupList").SwfListView("swfname:=lvGroup"), 0,DuplicateGroup)
	FRM_VerifyFalse boolExist, "Delete user", "user: "&DuplicateGroup&" is deleted"
	    
	Set objMainWin = Nothing
	
End Function



' This function is used to Verification of adding users to the User Group
'@code
'   BIZ_CompanyUserSetup_UserGroups_UserMemebrGroup(strRowID,NewUser) 
'@endcode
'@Param strRowID - is row id in excel for reading data
'@Param NewUser - is used for crating user 
'@Param strActualMember - is used for select the member 

Function BIZ_CompanyUserSetup_UserGroups_UserMemebrGroup(strRowID,NewUser,strActualMember)

	FRM_Logger_ReportInfoEvent "Add user","Verification of adding users to the User Group", Null
	
	Dim objSetting,objData,objTreeView,StrRc
	
	Set objSetting 		  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData 		  = FRM_DS_GetTestData("CompanyUserSetup_Roles_Groups", "Groups", strRowID)
	Set objTreeView 	  = objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfTreeView("swfname:=treeViewer")
				
	BIZ_UserGroups_SelectExistingGroup NewUser
	GUI_SwfTab_Click objSetting.SwfTab("swfname:=tabControl1"),"Members"
	GUI_SwfObject_Click objSetting.SwfObject("swfname:=stdIconBtnConfigGroup")
    GUI_Object_WaitTillExistX objTreeView,50
    objTreeView.Expand("Administration")
    Wait g_LongWaitMedium  				' Explicit wait used to handle sync issues
    GUI_SwfTreeView_Select objTreeView,"Administration;"&strActualMember
    GUI_SwfObject_Click objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfObject("swfname:=btnAddToGroup")
	GUI_Object_WaitTillExistX objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfButton("swfname:=btnOK"),300
	GUI_SwfButton_Click objSetting.SwfWindow("swfname:=ResourceSetViewer").SwfButton("swfname:=btnOK")
	Wait g_LongWaitMedium  				' Explicit wait used to handle sync issues
	BIZ_Settings_ClickSave
	GUI_Object_WaitTillExistX objSetting.SwfListView("swfname:=lvGroupMember"), 50
	StrRc=GUI_List_GetRowIndex(objSetting.SwfListView("swfname:=lvGroupMember"),"Name",strActualMember)
	strExpectedMember = GUI_List_GetCellData(objSetting.SwfListView("swfname:=lvGroupMember"),StrRc,0)
	FRM_VerifyEqual strActualMember,strExpectedMember,"Comparing values","Values should match"
			   
	Set objSetting   = Nothing
	Set objData  	 = Nothing
	Set objTreeView  = Nothing
		
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\CompanyUserSetup.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\ContactSetUp.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_ContactSetUp BIZ_Settings_ContactSetUp 
' List of functions here
' @code
'   Function BIZ_ContactSetUp_StatusOrCategoryCreation(strRowID,strContactSetUpName)
'	Function BIZ_ContactSetUp_RenameStatusOrCategory(strRowID,strContactSetUpName,strcreateContactSetUp)
'	Function BIZ_ContactSetUp_MappingtoContacts(strRenameContactSetUp,strContactSetUpName)
'	Function BIZ_ContactSetUp_StatusOrCategoryDeletion(strRenameContactSetUp,strContactSetUpName)
'	Function BIZ_ContactSetUp_CreatePublicBussinessContactGroup(strRowID)
'	Function BIZ_ContactSetUp_EditPublicBussinessContactGroup(strcreateContactSetUp)
'	Function BIZ_ContactSetUp_DeletePublicBussinessContactGroup(strcreateContactSetUp)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Create Status or Category 
'@code
'    BIZ_ContactSetUp_StatusOrCategoryCreation(strRowID,strContactSetUpName)
'@endcode
'@param strRowID            - The numeric or string unique ID that used to find the line in the Settings_ContactSetUp data spreadsheet
'@param strContactSetUpName - str Status (or) Category

Function BIZ_ContactSetUp_StatusOrCategoryCreation(strRowID,strContactSetUpName)
    
	FRM_Logger_ReportInfoEvent "'"&strContactSetUpName&"' Creation", "New '"&strContactSetUpName&"' using Row Id '"&strRowID&"'", Null
	
	Dim objData,objSettings,objContactSetUpList,StrDefaultName,Strrc,strcreateContactSetUp
	
	Set objData      = FRM_DS_GetTestData("Settings_ContactSetUp", "SetData", strRowID)
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

	If Cstr(strContactSetUpName)= "Status" Then
		Set objContactSetUpList = objSettings.SwfObject("swfname:=lvExStatuses")
	ElseIf cstr(strContactSetUpName)= "Category" Then
		Set objContactSetUpList = objSettings.SwfObject("swfname:=lvExCategories")
	End If
	
	GUI_Object_WaitTillExistX objSettings, 200 
	Strrc=GUI_List_GetNumberofRows(objContactSetUpList)
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnNew")
	StrDefaultName= GUI_List_GetCellData (objContactSetUpList,Strrc,0)
	FRM_Logger_ReportInfoEvent "Verify Default Name", "Default name with'"&StrDefaultName&"' Created", null	
	strcreateContactSetUp = CStr(FRM_DS_GetValue(objData, "CreateContactSetUp")) 
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strcreateContactSetUp 
	GUI_SwfObject_Click objContactSetUpList
	GUI_Object_WaitTillExistX objContactSetUpList, 300 
	objContactSetUpList.RefreshObject
	
	If GUI_List_TextExists(objContactSetUpList, 0, strcreateContactSetUp) Then
	    FRM_Logger_ReportPassEvent "'"&strContactSetUpName&"' Creation","New '"&strContactSetUpName&"' created with name '"&strcreateContactSetUp&"'",null
	Else
		FRM_Logger_ReportFailEvent "'"&strContactSetUpName&"' Creation","'"&strContactSetUpName&"' is not created",null
	End If
		
	BIZ_ContactSetUp_StatusOrCategoryCreation = strcreateContactSetUp
	
	Set objData             = Nothing
	Set objSettings 		= Nothing
	Set objContactSetUpList = Nothing
			
End Function



'This function is used to Rename Status or Category
'@code
'    BIZ_ContactSetUp_RenameStatusOrCategory(strRowID,strContactSetUpName,strcreateContactSetUp)
'@endcode
'@param strRowID              - The numeric or string unique ID that used to find the line in the Settings_ContactSetUp data spreadsheet
'@param strContactSetUpName   - Status (or) Category
'@param strcreateContactSetUp - Status (or) Category name

Function BIZ_ContactSetUp_RenameStatusOrCategory(strRowID,strContactSetUpName,strcreateContactSetUp)

	FRM_Logger_ReportInfoEvent "Rename '"&strContactSetUpName&"'", "Rename '"&strContactSetUpName&"' using '"&strcreateContactSetUp&"'", Null
	
	Dim objData,objSettings,objContactSetUpList,objScrollbar,strRename
	
	Set objData      = FRM_DS_GetTestData("Settings_ContactSetUp", "SetData", strRowID)	
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	If Cstr(strContactSetUpName)= "Status" Then
		Set objContactSetUpList = objSettings.SwfObject("swfname:=lvExStatuses")
	ElseIf cstr(strContactSetUpName)= "Category" Then
		Set objContactSetUpList = objSettings.SwfObject("swfname:=lvExCategories")
	End If
			
	GUI_List_ClickRow objContactSetUpList, objScrollbar, 0, strcreateContactSetUp, False, False, False, "Single"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnRename")
	strRenameContactSetUp = CStr(FRM_DS_GetValue(objData, "RenameContactSetUp")) 
	GUI_Object_WaitTillExistX objSettings,100
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strRenameContactSetUp	
	GUI_SwfObject_Click objContactSetUpList
	GUI_Object_WaitTillExistX objContactSetUpList, 300 
	
	If GUI_List_TextExists(objContactSetUpList, 0, strRenameContactSetUp) Then
	    FRM_Logger_ReportPassEvent "Rename '"&strContactSetUpName&"'","'"&strcreateContactSetUp&"' renamed to '"&strRenameContactSetUp&"'",null
	Else
	    FRM_Logger_ReportFailEvent "Rename '"&strContactSetUpName&"'","'"&strcreateContactSetUp&"' renamed to '"&strRenameContactSetUp&"'",null
	End If
		
	BIZ_ContactSetUp_RenameStatusOrCategory = strRenameContactSetUp
	
	Set objData             = Nothing
	Set objSettings 		= Nothing
	Set objContactSetUpList = Nothing
	Set objScrollbar        = Nothing
		
End Function



'This function is used to Mapping to Contacts
'@code
'    BIZ_ContactSetUp_MappingtoContacts(strRenameContactSetUp,strContactSetUpName)
'@endcode
'@param strRenameContactSetUp - Status (or) Category name
'@param strContactSetUpName   - Status (or) Category

Function BIZ_ContactSetUp_MappingtoContacts(strRenameContactSetUp,strContactSetUpName)

	FRM_Logger_ReportInfoEvent "Mapping Contacts", "Verify Mapping Contacts", null
	
	Dim objSettings,objContactSetUpList	
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	If Cstr(strContactSetUpName)= "Status" Then
		Set objContactSetUpList = objSettings.SwfObject("swfname:=lvExStatuses")
	ElseIf cstr(strContactSetUpName)= "Category" Then
		Set objContactSetUpList = objSettings.SwfObject("swfname:=lvExCategories")
	End If
	
	If Cstr(strContactSetUpName)= "Status"  Then
	    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBorrower","index:=0")
	    GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl1"),"Extra"
	    GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cmbBoxStatus"),strRenameContactSetUp
	    GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cmbBoxStatus"),100,strRenameContactSetUp
	ElseIf cstr(strContactSetUpName)= "Category" Then
		    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnBizPartner")
		    GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl1"),"Details"
		    GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cmbBoxCategoryID"),strRenameContactSetUp
		    GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfComboBox("swfname:=cmbBoxCategoryID"),100,strRenameContactSetUp
	End If
	
	Set objSettings 		= Nothing
	Set objContactSetUpList = Nothing
		
End Function



'This function is used to Delete Status or Category
'@code
'    BIZ_ContactSetUp_StatusOrCategoryDeletion(strRenameContactSetUp,strContactSetUpName)
'@endcode
'@param strRenameContactSetUp - Status (or) Category name
'@param strContactSetUpName   - Status (or) Category

Function BIZ_ContactSetUp_StatusOrCategoryDeletion(strRenameContactSetUp,strContactSetUpName)

	FRM_Logger_ReportInfoEvent "Delete '"&strContactSetUpName&"'", "Delete '"&strContactSetUpName&"' using '"&strRenameContactSetUp&"'", Null
	
	Dim objSettings,objContactSetUpList,objScrollbar
	
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	If Cstr(strContactSetUpName)= "Status" Then
		Set objContactSetUpList = objSettings.SwfObject("swfname:=lvExStatuses")
	ElseIf cstr(strContactSetUpName)= "Category" Then
		Set objContactSetUpList = objSettings.SwfObject("swfname:=lvExCategories")
	End If
	
	GUI_Object_WaitTillExistX objContactSetUpList, 300 	
	GUI_List_ClickRow objContactSetUpList, objScrollbar, 0, strRenameContactSetUp, False, False, False, "Single"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDelete")
	GUI_Object_WaitTillExistX objContactSetUpList, 20
	GUI_WinButton_Click objSettings.Dialog("text:=Delete Item").WinButton("text:=Cancel")
	GUI_Object_WaitTillExistX objContactSetUpList, 100
	
	If GUI_List_TextExists(objContactSetUpList, 0, strRenameContactSetUp) Then
	   FRM_Logger_ReportPassEvent "Delete '"&strContactSetUpName&"'","'"&strRenameContactSetUp&"' is not deleted",null
	Else
	   FRM_Logger_ReportPassEvent "Delete '"&strContactSetUpName&"'","'"&strRenameContactSetUp&"' is deleted",null
	End If
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDelete")
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Delete Item").WinButton("text:=OK").Click
	GUI_SwfObject_Click objContactSetUpList
	GUI_Object_WaitTillExistX objContactSetUpList, 300
	
	If (GUI_List_TextExists(objContactSetUpList, 0, strRenameContactSetUp)) = False Then
	   FRM_Logger_ReportPassEvent "Delete '"&strContactSetUpName&"'","'"&strRenameContactSetUp&"' is deleted",null
	Else
	   FRM_Logger_ReportPassEvent "Delete '"&strContactSetUpName&"'","'"&strRenameContactSetUp&"' is not deleted",null
	End If
	
	Set objSettings 		= Nothing
	Set objContactSetUpList = Nothing
	Set objScrollbar        = Nothing
		
End Function



'This function is used to Create Public Bussiness Contact Group
'@code
'    BIZ_ContactSetUp_CreatePublicBussinessContactGroup(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_CompanyUserSetUp data spreadsheet

Function BIZ_ContactSetUp_CreatePublicBussinessContactGroup(strRowID)
    
	FRM_Logger_ReportInfoEvent "Create Public Bussiness Contact Group", "New Public Bussiness Contact Group using Row Id '"&strRowID&"'", null
	
	Dim objData,objSettings,objContactSetUpList,objScrollbar,strcreateContactSetUp
	
	Set objData             = FRM_DS_GetTestData("Settings_ContactSetUp", "SetData", strRowID)
	Set objSettings         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objContactSetUpList = objSettings.SwfObject("swfname:=gvContactGroupList")
	Set objScrollbar        = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillExistX objSettings, 200 
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=siBtnNew")
	strcreateContactSetUp = CStr(FRM_DS_GetValue(objData, "CreateContactSetUp")) 
	GUI_SwfEdit_Set objSettings.SwfWindow("swfname:=EditPublicBizContactGroup").SwfEdit("swfname:=txtGroupName"),strcreateContactSetUp
	GUI_SwfButton_Click  objSettings.SwfWindow("swfname:=EditPublicBizContactGroup").SwfButton("swfname:=btnSave")
	GUI_SwfObject_Click objContactSetUpList
	GUI_Object_WaitTillExistX objContactSetUpList, 300 
	
	If GUI_List_TextExists(objContactSetUpList, "Group Name", strcreateContactSetUp) Then
		FRM_Logger_ReportPassEvent "Create Public Bussiness Contact Group","New Public Bussiness Contact Group created with name '"&strcreateContactSetUp&"'",null
	Else
		FRM_Logger_ReportFailEvent "Create Public Bussiness Contact Group","New Public Bussiness Contact Group is not created",null
	End If

	BIZ_ContactSetUp_CreatePublicBussinessContactGroup = strcreateContactSetUp
		
	Set objData             = Nothing
	Set objSettings 		= Nothing
	Set objContactSetUpList = Nothing
	Set objScrollbar        = Nothing
		
End Function



'This function is used to Edit Public Bussiness Contact Group
'@code
'    BIZ_ContactSetUp_EditPublicBussinessContactGroup(strcreateContactSetUp)
'@endcode
'@param strRowID              - The numeric or string unique ID that used to find the line in the Settings_CompanyUserSetUp data spreadsheet
'@param strcreateContactSetUp - ContactGroup name to Edit

Function BIZ_ContactSetUp_EditPublicBussinessContactGroup(strcreateContactSetUp)
    
	FRM_Logger_ReportInfoEvent "Edit Public Bussiness Contact Group", "Edit Public Bussiness Contact Group using '"&strcreateContactSetUp&"'", null
	
	Dim objSettings,objContactSetUpList,objContactGroup,objScrollbar,intRowcount,sdata,sdata1,sdata2,sdata3
	
	Set objSettings         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objContactSetUpList = objSettings.SwfObject("swfname:=gvContactGroupList")
	Set objContactGroup     = objSettings.SwfWindow("swfname:=EditPublicBizContactGroup")
	Set objScrollbar        = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	intRowcount = GUI_List_GetNumberofRows(objContactSetUpList)
	
	If intRowCount >=0 then
			For i = 0 To intRowCount Step 1
				sdata = GUI_List_GetCellData(objContactSetUpList, i, 0)
				If Util_String_IsMatch(sdata,strcreateContactSetUp) Then
					sdata1 = GUI_List_GetCellData(objContactSetUpList, i, 1)					
					GUI_List_ActOnRow objContactSetUpList,i+1,False,False,False,"Single" 
					GUI_SwfObject_Click objSettings.SwfObject("swfname:=siBtnEdit")
					Exit For
	        	End If
			Next
	Else
		FRM_Logger_ReportFailEvent "Public Contact Groups","Public Contact Groups are not available",null
	End If
	
	GUI_SwfObject_Click objContactGroup.SwfObject("swfname:=siBtnSearch")
	GUI_SwfObject_Click objContactGroup.SwfWindow("swfname:=EditPublicBizContactGroupMembers").SwfObject("swfname:=gvContactList")
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_SwfButton_Click objContactGroup.SwfWindow("swfname:=EditPublicBizContactGroupMembers").SwfButton("swfname:=btnAdd")
	GUI_SwfButton_Click objContactGroup.SwfButton("swfname:=btnSave")
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	intRowcount = GUI_List_GetNumberofRows(objContactSetUpList)
	
	If intRowCount >=0 then
			For i = 0 To intRowCount Step 1
				sdata2 = GUI_List_GetCellData(objContactSetUpList, i, 0)
				If Util_String_IsMatch(sdata2,strcreateContactSetUp) Then
					sdata3 = GUI_List_GetCellData(objContactSetUpList, i, 1)
					Exit For
	        	End If
			Next
		If Util_String_IsMatch(sdata3,sdata1+1) Then
	       FRM_Logger_ReportPassEvent "Edit Public Bussiness Contact Group","Added contacts count appears as '1' under '# of Contacts' Column header",null
		Else
	       FRM_Logger_ReportFailEvent "Edit Public Bussiness Contact Group","Added contacts count not appears as '1' under '# of Contacts' Column header'",null
		End If
	Else
		FRM_Logger_ReportFailEvent "Public Contact Groups","Public Contact Groups are not available",null
	End If
	
	Set objSettings 		= Nothing
	Set objContactSetUpList = Nothing
	Set objContactGroup     = Nothing
	Set objScrollbar        = Nothing
			
End Function



'This function is used to Delete Public Bussiness Contact Group
'@code
'    BIZ_ContactSetUp_DeletePublicBussinessContactGroup(strcreateContactSetUp)
'@endcode
'@param strRowID              - The numeric or string unique ID that used to find the line in the Settings_CompanyUserSetUp data spreadsheet
'@param strcreateContactSetUp - strcreateContactSetUp name to Delete

Function BIZ_ContactSetUp_DeletePublicBussinessContactGroup(strcreateContactSetUp)
    
	FRM_Logger_ReportInfoEvent "Delete Public Bussiness Contact Group", "Delete Public Bussiness Contact Group using '"&strcreateContactSetUp&"'", null
	
	Dim objSettings,objContactSetUpList,objScrollbar,intRowcount,sdata,sdata1
	
	Set objSettings         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objContactSetUpList = objSettings.SwfObject("swfname:=gvContactGroupList")
	Set objScrollbar        = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	intRowcount = GUI_List_GetNumberofRows(objContactSetUpList)
	
	If intRowCount >=0 then
			For i = 0 To intRowCount Step 1
				sdata = GUI_List_GetCellData(objContactSetUpList, i, 0)
				If Util_String_IsMatch(sdata,strcreateContactSetUp) Then
					sdata1 = GUI_List_GetCellData(objContactSetUpList, i, 1)
					GUI_List_ActOnRow objContactSetUpList,i+1,False,False,False,"Single" 
					GUI_SwfObject_Click objSettings.SwfObject("swfname:=siBtnDelete")
					Exit For
	        	End If
			Next
	Else
		FRM_Logger_ReportFailEvent "Public Contact Groups","Public Contact Groups are not available",null
	End If
	
	GUI_Dialog_Encompass_No "No"
	
	If GUI_List_TextExists(objContactSetUpList, "Group Name", strcreateContactSetUp) Then
	   FRM_Logger_ReportPassEvent "Delete Public Bussiness Contact Group","'"&strcreateContactSetUp&"' is not deleted",null
	Else
	   FRM_Logger_ReportFailEvent "Delete Public Bussiness Contact Group","'"&strcreateContactSetUp&"' is deleted",null
	End If
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=siBtnDelete")
	GUI_Dialog_Encompass_YesX 90, "Yes"
	GUI_Object_WaitTillExistX objContactSetUpList, 500 
	
	If(GUI_List_TextExists(objContactSetUpList, "Group Name", strcreateContactSetUp))= False Then
		FRM_Logger_ReportPassEvent "Delete Public Bussiness Contact Group","'"&strcreateContactSetUp&"' is deleted",null
	Else
		FRM_Logger_ReportFailEvent "Delete Public Bussiness Contact Group","'"&strcreateContactSetUp&"' is not deleted",null
	End If
	
	Set objSettings 		= Nothing
	Set objContactSetUpList = Nothing
	Set objScrollbar        = Nothing
			
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\ContactSetUp.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\eDisclosureFulfillment.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_eDisclosureFulfillment BIZ_Settings_eDisclosureFulfillment
'
' List of functions here
' @code
'	Function BIZ_eDisclosureFulfillment_Service(startOrStop)
'	Function BIZ_eDisclosureFulfillment_CheckScheduleFullfillment(boolSchedule)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to start/stop eDisclosure Fulfillment Service.
'@code
'    BIZ_eDisclosureFulfillment_Service(startOrStop)
'    BIZ_eDisclosureFulfillment_Service "Start"
'@endcode
'@param startOrStop - 'start' or 'stop'

Function BIZ_eDisclosureFulfillment_Service(startOrStop)
 
    FRM_Logger_ReportInfoEvent "eDisclosure Fulfillment Service", "'"&startOrStop&"' eDisclosure Fulfillment Service", null
    
	Dim objSettings, strSeviceStatus
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	strSeviceStatus = GUI_Object_GetPropertyValue(objSettings.SwfLabel("swfname:=statusLbl"), "text")
    
	If LCase(startOrStop) = "start" And strSeviceStatus = "- Stopped" Then
        GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnStartStopService")
        GUI_WinButton_Click objSettings.Dialog("text:=Disclosure Fulfillment").WinButton("text:=OK")
	End If
    If LCase(startOrStop) = "stop" And strSeviceStatus = "- Running" Then
        GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnStartStopService")
        GUI_WinButton_Click objSettings.Dialog("text:=Disclosure Fulfillment").WinButton("text:=&Yes")
        GUI_WinButton_Click objSettings.Dialog("text:=Disclosure Fulfillment").WinButton("text:=OK")
	End If
    
    Set objSettings = Nothing
    
End Function



'This function is used to check/uncheck to schedule fullfillment Service for all packages.
'@code
'    BIZ_eDisclosureFulfillment_CheckScheduleFullfillment(boolSchedule)
'@endcode
'@param boolSchedule - whether to check the schedule fullfillment Service for all packages.

Function BIZ_eDisclosureFulfillment_CheckScheduleFullfillment(boolSchedule)
 
    FRM_Logger_ReportInfoEvent "Check or uncheck schedule fullfillment Service", "'"&boolSchedule&"' schedule fullfillment Service for all packages", null
    
	Dim objSettings, strSeviceStatus
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
    If boolSchedule Then
        GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkFulfillment"), "ON"
    Else 
        GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkFulfillment"), "OFF"
    End If
    
    Set objSettings = Nothing
    
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\eDisclosureFulfillment.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\eDisclosurePackages.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_eDisclosurePackages BIZ_Settings_eDisclosurePackages
'
' List of functions here
' @code
'	Function BIZ_eDisclosurePackages_SettingConsents(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to setting Consents section in eDisclosure Packages page.
'@code
'    BIZ_eDisclosurePackages_SettingConsents(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_eDisclosurePackages_SettingConsents(strRowID)
 
    FRM_Logger_ReportInfoEvent "Setting Consents", "Setting Consents using Row Id '"&strRowID&"' in the Setttings_eDisclosurePackages datasheet", null
    
	Dim objSettings, objData
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objData = FRM_DS_GetTestData("Setttings_eDisclosurePackages", "SettingConsents", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ConsentsRequired")) Then
        ConsentsRequired = FRM_DS_GetValue(objData, "ConsentsRequired")
        GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboConsent"), ConsentsRequired
    End If
    
    If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
        GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnSave"), "SwfObject", "Save Setting Consents"
    End If
    
    Set objSettings = Nothing
    Set objData = Nothing
    
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\eDisclosurePackages.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\EDocumentMangement.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_EDocManagement BIZ_Settings_EDocManagement
'
' List of functions here
' @code
'	Function BIZ_EDocManagement_AccessRight(arrUsers)
' @endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to set the access right to E-Document Mangement for persona
'@code
'    BIZ_EDocManagement_AccessRight(arrUsers)
'@endcode
'@param arrUsers - Users array list

Function BIZ_EDocManagement_AccessRight(arrUsers)

    FRM_Logger_ReportInfoEvent "Set AccessRight", "Set the access right to E-Document Mangement for Persona", null
    
    Dim objSettings, objUserList, objUserScrollBar
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objUserList = objSettings.SwfObject("swfname:=lvwUsers")
	Set objUserScrollBar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
    
	For i = LBound(arrUsers) to UBound(arrUsers)
		GUI_List_ClickCheckbox objUserList, objUserScrollBar, arrUsers(i), 0, True, False, "Single", True
	Next

	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If
    
End Function


'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\EDocumentMangement.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\eFolderSetup.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_eFolderSetup BIZ_Settings_eFolderSetup
'
' List of functions here
' @code
'	Function BIZ_eFolderSetup_CreateNewDocument(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to create a new document under eFolder Setup-->Documents.
'@code
'    BIZ_eFolderSetup_CreateNewDocument(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_eFolderSetup_CreateNewDocument(strRowID)
 
    FRM_Logger_ReportInfoEvent "New Document Creation", "Creating new document using Row Id '"&strRowID&"' in the Settings_eFolderSetup datasheet", null
    
	Dim objSettings, objData, objDocTemplate
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDocTemplate= objSettings.SwfWindow("swfname:=DocumentTemplateDialog")
	Set objData = FRM_DS_GetTestData("Settings_eFolderSetup", "Documents", strRowID)
	
	If GUI_List_TextExists (objSettings.SwfObject("swfname:=gvTemplates"),0,FRM_DS_GetValue(objData, "Name")) Then
		FRM_Logger_ReportInfoEvent "New Document Creation", "Document '"&FRM_DS_GetValue(objData, "Name")&"' already exists", null
	Else
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnNewTemplate")		
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Name")) Then
			strName = FRM_DS_GetValue(objData, "Name")
			GUI_SwfEdit_Set objDocTemplate.SwfEdit("swfname:=txtName"), trim(strName)
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Type")) Then
			strType = FRM_DS_GetValue(objData, "Type")
			GUI_SwfComboBox_Select objDocTemplate.SwfComboBox("swfname:=cboType"), trim(strType)
		End If 
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DaysToReceive")) Then
			strDaysToReceive = FRM_DS_GetValue(objData, "DaysToReceive")
			GUI_SwfEdit_Set objDocTemplate.SwfEdit("swfname:=txtDaysTillDue"), trim(strDaysToReceive)
		End If    

		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DaysToExpire")) Then
			strDaysToExpire = FRM_DS_GetValue(objData, "DaysToExpire")
			GUI_SwfEdit_Set objDocTemplate.SwfEdit("swfname:=txtDaysTillExpire"), trim(strDaysToExpire)
		End If 
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Webcenter")) Then
			chkWebCenter = FRM_DS_GetValue(objData, "Webcenter")
			GUI_SwfCheckbox_Set objDocTemplate.SwfCheckBox("swfname:=chkWebCenter"), trim(chkWebCenter)
		End If     
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TPO Webcenter Portal")) Then
			chkTPOWebcenterPortal = FRM_DS_GetValue(objData, "TPO Webcenter Portal")
			GUI_SwfCheckbox_Set objDocTemplate.SwfCheckBox("swfname:=chkTPOWebcenterPortal"), trim(chkTPOWebcenterPortal)
		End If    

		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EDM Lenders")) Then
			chkEDMLenders = FRM_DS_GetValue(objData, "EDM Lenders")
			GUI_SwfCheckbox_Set objDocTemplate.SwfCheckBox("swfname:=chkThirdParty"), trim(chkEDMLenders)
		End If
		
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Keep copy of original format")) Then
			chkKeepCopy = FRM_DS_GetValue(objData, "Keep copy of original format")
			GUI_SwfCheckbox_Set objDocTemplate.SwfCheckBox("swfname:=chkOriginalFormat"), trim(chkKeepCopy)
		End If    


		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Conversion Format")) Then
			strConversionFormat = FRM_DS_GetValue(objData, "Conversion Format")
			GUI_SwfComboBox_Select objDocTemplate.SwfComboBox("swfname:=cboImageFormat"), trim(strConversionFormat)
		End If 
		
		GUI_SwfButton_Click objDocTemplate.SwfButton("swfname:=btnOK")	    
		
		FRM_Logger_ReportInfoEvent "New Document Creation", "New Document Created '"&FRM_DS_GetValue(objData, "Name")&"'", null
    End If 
	
    Set objDocTemplate=Nothing
    Set objSettings = Nothing
    Set objData = Nothing 
    
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\eFolderSetup.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\ExternalCompanySetup.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_ExternalCompanySetup BIZ_Settings_ExternalCompanySetup
'
' List of functions here
' @code
'   Function BIZ_TPOWebCenterSiteManagement_Reset()
'   Function BIZ_TPOWebCenterSiteManagement_Save()
'   Function BIZ_TPOWebCenterSiteManagement_ValidateResetDialog(strText)
'   Function BIZ_TPOWebCenterSiteManagement_ValidateContent(objListView , strsearchHeaderText)
'	Function BIZ_ExternalCompanySetup_TPOSettings_CurrentStatusMoveOperations(strTPOSelect,strStatus)
'	Function BIZ_ExternalCompanySetup_TPOSettings_EditCurrentStatus(strTPOSelect,strStatus)
'	Function BIZ_ExternalCompanyDetails_VerifyCurrentStatus_InCompanyDetails(strTPOName,strStatusType,strStatus,boolExist)
'	Function BIZ_ExternalCompanySetup_TPOSettings_CreateCurrentStatus(strTPOSelect)
'	Function BIZ_ExternalCompanyDetails_VerifyCurrentStatus_InCompanyDetails strTPOName,strTPOSelect,strEditStatus,False
'	Function BIZ_ExternalCompanySetup_TPOFees_VerifyTPOFeeValues(strSearchText,strRowID)
'	Function BIZ_ExternalCompanySetup_TPOFees_EditTPOFeeValues(strSearchText,strRowID)
'	Function BIZ_ExternalCompanySetup_TPOFees_CreateTPOFees(strRowID)
'	Function BIZ_ExternalCompanySetUp_TPOWebCenterDoc_CreateDocument(strDocFileName,strRowID)
'	Function BIZ_ExternalCompanySetUp_TPOWebCenterDoc_VerifyDocument(strDocName,strRowID)
'	Function BIZ_ExternalCompanySetUp_TPOWebCenterDoc_VerifyDocumentInCompanyDetails(strDocName)
'	Function BIZ_ExternalCompanySetUp_SetTPOCustomFields(strRowID)
'	Function BIZ_ExternalCompanySetUp_CompanyDetails_SetTPOCustomFieldValues(strRowID)
'	Function BIZ_ExternalCompanySetUp_CompanyDetails_VerifyTPOCustomFields(strRowID)
'	Function BIZ_ExternalCompanySetUp_CompanyDetails_SetBankDetails(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'Function to click on Reset in TPOWebCenterSiteManagement
'@code
'    BIZ_TPOWebCenterSiteManagement_Reset()
'@endcode

Function BIZ_TPOWebCenterSiteManagement_Reset()
	Dim objMainWin
	Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
		
	GUI_SwfObject_Click objMainWin.SwfObject("swfname:=gpHeader").SwfObject("swfname:=stdIconBtnReset")
	Set objMainWin = Nothing
	
End Function



'Function to click on Save in TPOWebCenterSiteManagement
'@code
'    BIZ_TPOWebCenterSiteManagement_Save()
'@endcode

Function BIZ_TPOWebCenterSiteManagement_Save()
	Dim objMainWin 
	Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
		
	GUI_SwfObject_Click objMainWin.SwfObject("swfname:=gpHeader").SwfObject("swfname:=stdIconBtnSave")
	Set objMainWin = Nothing
	
End Function



'Function to validate Reset dialog box in Credit Settings
'@code
'    BIZ_TPOWebCenterSiteManagement_ValidateResetDialog()
'@endcode
'@param strText - Text to be validated
'@see BIZ_TPOWebCenterSiteManagement_ValidateContent

Function BIZ_TPOWebCenterSiteManagement_ValidateResetDialog(strText)
	Dim objMainWin , objEncompassNoButton , objEncompassYesButton , objEncompassDialog
	
	Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
	Set objEncompassDialog = objMainWin.Dialog("text:=Encompass")
		
	If objEncompassDialog.Activate Then
		BIZ_TPOWebCenterSiteManagement_ValidateContent objEncompassDialog,strText
		
	End If
	
	 
	Set objMainWin = Nothing
	Set objEncompassDialog = Nothing
	
End Function



'Function to check the content is present and validate to true
'@code
'    BIZ_TPOWebCenterSiteManagement_ValidateContent(objListView,strsearchHeaderText)
'@endcode
'@param objListView - obj to be checked
'@param strsearchHeaderText - text description to be checked 
'@return if validation passes, logs True; if validation fails, logs False

Function BIZ_TPOWebCenterSiteManagement_ValidateContent(objListView , strsearchHeaderText)
	Dim boolHeaderPresent
	boolHeaderPresent=objListView.GetTextLocation(strsearchHeaderText,-1,-1,-1,-1)
	If boolHeaderPresent Then
		
		On Error Resume Next
		FRM_Logger_ReportPassEvent "Validate Content  ",strsearchHeaderText&" is Present ", Null
		On Error Goto 0	
			
	Else
		
		'Failed
		On Error Resume Next
		FRM_Logger_ReportFailEvent "Validate Content ",strsearchHeaderText&" is Not Present  ", Null
		On Error Goto 0
					
	End If
End Function



'This function is used to Create Category Status
'@code
'    BIZ_ExternalCompanySetup_TPOSettings_CreateCurrentStatus(strTPOSelect,strRowID)
'@endcode
'@param strTPOSelect Category
'Param strRowID Point row in excel

Function  BIZ_ExternalCompanySetup_TPOSettings_CreateCurrentStatus(strTPOSelect,strRowID)
	
	FRM_Logger_ReportInfoEvent "External Company Setup", "TPO Settings Create Current Status", null
	Dim objSettings,objCompanySettingForm,objAddNewSetting,objTPOSettingSelect,objSettingAddNew,objAddNewSettingCancelBTN,objData
    Dim objAddNewSettingGroupCode,objAddNewSettingGroupName,objAddNewSettingOKBTN,objPriceGroupDialog,objPriceGroupCancel,objPriceGroupOK
	
	Set objData = FRM_DS_GetTestData("Settings_CompanySettings", "SetTPOStatus", strRowID)
	Set objSettings					=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCompanySettingForm		=	objSettings.SwfWindow("swfname:=CompanySettingForm")
	Set objAddNewSetting			=	objSettings.SwfWindow("swfname:=AddNewSetting")
	Set objTPOSettingSelect			=	objCompanySettingForm.SwfComboBox("swfname:=cboStatusType")
	Set objSettingAddNew			=	objCompanySettingForm.SwfObject("swfname:=btnAddSetting")
	Set objAddNewSettingCancelBTN	=	objAddNewSetting.SwfButton("swfname:=btnCancel")
	Set objAddNewSettingGroupCode	=	objAddNewSetting.SwfEdit("swfname:=txtCode")
	Set objAddNewSettingGroupName	=	objAddNewSetting.SwfEdit("swfname:=txtSettingName")
	Set objAddNewSettingOKBTN		=	objAddNewSetting.SwfEdit("swfname:=btnOK")																 
	Set objPriceGroupDialog			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AddNewSetting")
	Set objPriceGroupCancel			=	objPriceGroupDialog.SwfButton("swfname:=btnCancel") 
	Set objPriceGroupOK				=	objPriceGroupDialog.SwfButton("swfname:=btnOK") 

    BIZ_Nav_HierarchyTree "External Company Setup", "TPO Settings"
	GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect


	If strTPOSelect = "Price Group" Then
         
         If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GroupCode")) Then
         strGroupCode=FRM_DS_GetValue(objData, "GroupCode")
         End IF
         
         If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GroupName")) Then
         strGroupName=FRM_DS_GetValue(objData, "GroupName")
         End IF
         
		
							
		GUI_SwfObject_Click objSettingAddNew

		GUI_SwfEdit_Set objPriceGroupDialog.SwfEdit("swfname:=txtCode"), strGroupCode
		GUI_SwfEdit_Set objPriceGroupDialog.SwfEdit("swfname:=txtSettingName"),strGroupName
		GUI_SwfButton_Click objPriceGroupCancel
		GUI_SwfObject_Click objSettingAddNew
		GUI_SwfEdit_Set objPriceGroupDialog.SwfEdit("swfname:=txtCode"),strGroupCode
		GUI_SwfEdit_Set objPriceGroupDialog.SwfEdit("swfname:=txtSettingName"),strGroupName
		GUI_SwfButton_Click objPriceGroupOK
		strStatus=strGroupCode&" - "&strGroupName

	Else
	     
	     If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Status")) Then
         strStatus=FRM_DS_GetValue(objData, "Status")
         End IF     
		
		GUI_SwfObject_Click  objSettingAddNew
		GUI_SwfEdit_Set objAddNewSettingGroupName ,strStatus
		GUI_SwfObject_Click objAddNewSettingOKBTN
		GUI_SwfObject_Click objSettingAddNew
		GUI_SwfEdit_Set objAddNewSettingGroupName ,strStatus
		GUI_SwfButton_Click objAddNewSettingCancelBTN

	End If
    FRM_Logger_ReportInfoEvent "External Company Setup", strTPOSelect&" Created  '"&strStatus&" '", null
	
	Set objSettings					=	Nothing 
	Set objCompanySettingForm		=	Nothing
	Set objAddNewSetting			=	Nothing
	Set objTPOSettingSelect			=	Nothing
	Set objSettingAddNew			=	Nothing
	Set objAddNewSettingCancelBTN	=	Nothing
	Set objAddNewSettingGroupCode	=	Nothing
	Set objAddNewSettingGroupName	=	Nothing
	Set objAddNewSettingOKBTN		=	Nothing																 
	Set objPriceGroupDialog			=	Nothing
	Set objPriceGroupCancel			=	Nothing
	Set objPriceGroupOK				=	Nothing
	Set objData						=	Nothing
	
	BIZ_ExternalCompanySetup_TPOSettings_CreateCurrentStatus=strStatus

End Function



'This function is used to Verify Current Status In Company Details
'@code
'    BIZ_ExternalCompanyDetails_VerifyCurrentStatus_InCompanyDetails(strTPOName,strStatusType,strStatus,boolExist)
'@endcode
'@param strTPOName Company Name
'@param strStatusType - Category
'@param strStatus - Status 
'@param boolExist True for positive validation,false for negative

Function BIZ_ExternalCompanyDetails_VerifyCurrentStatus_InCompanyDetails(strTPOName,strStatusType,strStatus,boolExist)
	
	FRM_Logger_ReportInfoEvent "External Company Setup", "Verify Status in Company Details ' "&strStatus&" '", null
	Dim objSettings,objEditCompanySettingForm,objCompanyStatus,objCompanyRating,objPriceGroup,objCloseBTN,objEditCompanyDetailsDialog
	Dim objAddAttachmentForm,objComboAttachment,objAttachmentCancel,objDocContent,objAddDocumentForm,objComboCategory,objCancel,objAddDoc
 
	Set objSettings					=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEditCompanySettingForm	=	objSettings.SwfWindow("swfname:=EditCompanyDetailsDialog")
	Set objCompanyStatus			=	objEditCompanySettingForm.SwfComboBox("swfname:=cboCurrentStatus")
	Set objCompanyRating			=  	objEditCompanySettingForm.SwfComboBox("swfname:=cboCompanyRating")
	Set objPriceGroup				=  	objEditCompanySettingForm.SwfComboBox("swfname:=cboPriceGroup")
	Set objCloseBTN					=	objEditCompanySettingForm.SwfButton("swfname:=btnOK")
	Set objEditCompanyDetailsDialog	=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog")
	Set objAddAttachmentForm		=	objEditCompanyDetailsDialog.SwfWindow("swfname:=AddAttachmentForm")
	Set objComboAttachment			=	objAddAttachmentForm.SwfComboBox("swfname:=cboCategory")
	Set objAttachmentCancel			=	objAddAttachmentForm.SwfButton("swfname:=btnCancel")
    Set objDocContent				=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=pnlContent")
	Set objAddDocumentForm			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AddDocumentForm")
	Set objComboCategory			= 	objAddDocumentForm.SwfComboBox("swfname:=cboCategory")
	Set objCancel					= 	objAddDocumentForm.SwfObject("swfname:=btnCancel")
	Set objAddDoc					=	objDocContent.SwfObject("swfname:=btnAdd")
   

	
	If Not(strStatusType="Document Category") Then

		BIZ_Nav_HierarchyTree "External Company Setup", "Company Details"
		strTPOPath = "Third Party Originators;"&strTPOName
		GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), strTPOPath
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnEditOrg")
		
	End if

	Select Case strStatusType
		   
		   Case "Current Company Status"
			
				boolValue=GUI_SwfComboBox_VerifyItemExists (objCompanyStatus, strStatus)
		   
		   Case "Company Rating"
		   
				boolValue=GUI_SwfComboBox_VerifyItemExists (objCompanyRating, strStatus)
		   
		   Case "Attachment Category"
			
				GUI_SwfTab_Click objEditCompanyDetailsDialog.SwfTab("swfname:=tabControlExAll"),"Attachments"
				GUI_SwfObject_Click objEditCompanyDetailsDialog.SwfObject("swfname:=btnAdd")
				boolValue=GUI_SwfComboBox_VerifyItemExists (objComboAttachment, strStatus)		
				GUI_SwfButton_Click objAttachmentCancel
			
			Case "Price Group"
			
				boolValue=GUI_SwfComboBox_VerifyItemExists (objPriceGroup, strStatus)
			
			Case "Document Category"
			
				BIZ_Nav_HierarchyTree "External Company Setup", "TPO Docs"
				GUI_SwfObject_Click objAddDoc
				boolValue=GUI_SwfComboBox_VerifyItemExists (objComboCategory, strStatus)
				GUI_SwfObject_Click objCancel
			Case Else
				FRM_Logger_ReportFailEvent "Select Status Option ", "Select Status Option is not valid '"&strStatusType&"'", null		
	End Select

	If boolExist Then
		FRM_VerifyTrue boolValue, strStatusType, strStatusType&" Available is ' "&strStatus& " '"
	Else
		FRM_VerifyFalse boolValue, strStatusType, strStatusType&" Not Available is ' "&strStatus& " '" 
	End If
 
	If Not (strStatusType="Document Category") Then
		GUI_SwfButton_Click objCloseBTN
	End IF

	Set objSettings					=	Nothing 
	Set objEditCompanySettingForm	=	Nothing
	Set objCompanyStatus			=	Nothing
	Set objCompanyRating			=  	Nothing
	Set objPriceGroup				=  	Nothing
	Set objCloseBTN					=	Nothing
	Set objEditCompanyDetailsDialog	=	Nothing
	Set objAddAttachmentForm		=	Nothing
	Set objComboAttachment			=	Nothing
	Set objAttachmentCancel			=	Nothing
    Set objDocContent				=	Nothing
	Set objAddDocumentForm			=	Nothing
	Set objComboCategory			= 	Nothing
	Set objCancel					= 	Nothing
	Set objAddDoc					=	Nothing
End Function



'This function is used to Edit Current Status
'@code
'    BIZ_ExternalCompanySetup_TPOSettings_EditCurrentStatus(strTPOSelect,strStatus)
'@endcode
'@param strTPOSelect - Category
'@param strStatus - Status 

Function  BIZ_ExternalCompanySetup_TPOSettings_EditCurrentStatus(strTPOSelect,strStatus)
    
	FRM_Logger_ReportInfoEvent "External Company Setup", "Edit Current Status ' "&strStatus&" ' in "&strTPOSelect, null
	Dim objSettings,objCompanySettingForm,objCompanySettingFormMainView,objAddNewSetting,objSettingEditStatus
	Dim objTPOSettingSelect,objAddNewSettingOKBTN,objPriceGroupDialog,objPriceGroupOK

	Set objSettings						=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCompanySettingForm			=	objSettings.SwfWindow("swfname:=CompanySettingForm")
	Set objCompanySettingFormMainView	=	objSettings.SwfWindow("swfname:=CompanySettingForm").swfObject("swfname:=gvSettings")
	Set objAddNewSetting				=	objSettings.SwfWindow("swfname:=AddNewSetting")
	Set objSettingEditStatus			=	objCompanySettingForm.SwfObject("swfname:=btnEditSetting")
	Set objTPOSettingSelect				=	objCompanySettingForm.SwfComboBox("swfname:=cboStatusType")
	Set objAddNewSettingOKBTN			=	objAddNewSetting.SwfEdit("swfname:=btnOK")																 
	Set objPriceGroupDialog				=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AddNewSetting")
	Set objPriceGroupOK					=	objPriceGroupDialog.SwfButton("swfname:=btnOK")
    Set objAddNewSettingGroupName		=	objAddNewSetting.SwfEdit("swfname:=txtSettingName")
	
	BIZ_Nav_HierarchyTree "External Company Setup", "TPO Settings"
	strEditedStatus="Edit_"&strStatus

	Select Case strTPOSelect
       
       Case "Current Company Status"
		    
		   GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
		   GUI_List_ClickRow objCompanySettingFormMainView, Null, "Status", strStatus, True, false, false, "Single"
		   GUI_SwfObject_Click objSettingEditStatus
		   GUI_SwfEdit_Set objAddNewSettingGroupName ,strEditedStatus
		   GUI_SwfObject_Click objAddNewSettingOKBTN
		   
		Case "Current Contact Status"
		    
		   GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
		   GUI_List_ClickRow objCompanySettingFormMainView, Null, "Status", strStatus, True, false, false, "Single"
		   GUI_SwfObject_Click objSettingEditStatus
		   GUI_SwfEdit_Set objAddNewSettingGroupName ,strEditedStatus
		   GUI_SwfObject_Click objAddNewSettingOKBTN   
		   
	   
	   Case "Company Rating"
       		
       		GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
       		GUI_List_ClickRow objCompanySettingFormMainView, Null, "Rating", strStatus, True, false, false, "Single"
		   	GUI_SwfObject_Click objSettingEditStatus
		   	GUI_SwfEdit_Set objAddNewSettingGroupName ,strEditedStatus
		   	GUI_SwfObject_Click objAddNewSettingOKBTN
	
      Case "Attachment Category"
       		
       		GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
       		GUI_List_ClickRow objCompanySettingFormMainView, Null, "Category", strStatus, True, false, false, "Single"
		   	GUI_SwfObject_Click objSettingEditStatus
		   	GUI_SwfEdit_Set objAddNewSettingGroupName ,strEditedStatus
		   	GUI_SwfObject_Click objAddNewSettingOKBTN	
	  
	  Case "Price Group"
       
            strGroupCode=Trim(Split(strStatus,"-")(0))
            strGroupName=Trim(Split(strStatus,"-")(1))
       		
       		GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
       		GUI_List_ClickRow objCompanySettingFormMainView, Null, "Group Code", strGroupCode, True, false, false, "Single"
		   	strGroupCode="Edited_"&strGroupCode
		   	strGroupName="Edited_"&strGroupName
		   	
		   	GUI_SwfObject_Click objSettingEditStatus
		   	GUI_SwfEdit_Set objPriceGroupDialog.SwfEdit("swfname:=txtCode"), strGroupCode
			GUI_SwfEdit_Set objPriceGroupDialog.SwfEdit("swfname:=txtSettingName"),strGroupName		   	
		   	GUI_SwfButton_Click objPriceGroupOK	   
		   	strEditedStatus=strGroupCode&" - "&strGroupName
		
       Case "Document Category"		
		   	
			GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
       		GUI_List_ClickRow objCompanySettingFormMainView, Null, "Document Category", strStatus, True, false, false, "Single"
		   	GUI_SwfObject_Click objSettingEditStatus
		   	GUI_SwfEdit_Set objAddNewSettingGroupName ,strEditedStatus
		   	GUI_SwfObject_Click objAddNewSettingOKBTN
		
		Case Else
			FRM_Logger_ReportFailEvent "Select  Option ", "Selected  Option is not valid '"&strTPOSelect&"'", null	
    End Select
    
	Set objSettings						=	Nothing
	Set objCompanySettingForm			=	Nothing
	Set objCompanySettingFormMainView	=	Nothing
	Set objAddNewSetting				=	Nothing
	Set objSettingEditStatus			=	Nothing
	Set objTPOSettingSelect				=	Nothing
	Set objAddNewSettingCancelBTN		=	Nothing
	Set objAddNewSettingOKBTN			=	Nothing															 
	Set objPriceGroupDialog				=	Nothing
	Set objPriceGroupOK					=	Nothing 
	
	BIZ_ExternalCompanySetup_TPOSettings_EditCurrentStatus=strEditedStatus
End Function



'This function is used to Move up and down Current Status
'@code
'    BIZ_ExternalCompanySetup_TPOSettings_CurrentStatusMoveOperations(strTPOSelect,strStatus)
'@endcode
'@param strTPOSelect - Category
'@param strStatus - Status 

Function  BIZ_ExternalCompanySetup_TPOSettings_CurrentStatusMoveOperations(strTPOSelect,strStatus)
    
	FRM_Logger_ReportInfoEvent "External Company Setup", "Move Up Down Current Status ' "&strStatus&" ' in "&strTPOSelect, null
	Dim objSettings,objCompanySettingForm,objCompanySettingFormMainView,objAddNewSetting
	Dim objTPOSettingSelect,objCompanySettingMoveUp,objCompanySettingMoveDown

	Set objSettings						=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCompanySettingForm			=	objSettings.SwfWindow("swfname:=CompanySettingForm")
	Set objCompanySettingFormMainView	=	objSettings.SwfWindow("swfname:=CompanySettingForm").swfObject("swfname:=gvSettings")
	Set objAddNewSetting				=	objSettings.SwfWindow("swfname:=AddNewSetting")															 
	Set objTPOSettingSelect				=	objCompanySettingForm.SwfComboBox("swfname:=cboStatusType")
	Set objCompanySettingMoveUp			=	objSettings.SwfWindow("swfname:=CompanySettingForm").swfObject("swfname:=btnMoveSettingUp")
	Set objCompanySettingMoveDown		=	objSettings.SwfWindow("swfname:=CompanySettingForm").swfObject("swfname:=btnMoveSettingDown")


	BIZ_Nav_HierarchyTree "External Company Setup", "TPO Settings"


	strCompanyStatus=strStatus
		
		Select Case strTPOSelect
		   
			 Case "Current Company Status"
				 
				 GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
				 strColName="Status"
				 
			 Case "Current Contact Status"
				 
				 GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
				 strColName="Status"	 
		   
			 Case "Company Rating"
				 
				 GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
				 strColName="Rating"
		   
			 Case "Attachment Category"
				 
				 GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
				 strColName="Category"
		   
			 Case "Price Group"
				 
				 GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
				 strGroupCode=Trim(Split(strCompanyStatus,"-")(0))
				 strGroupName=Trim(Split(strCompanyStatus,"-")(1))
				 strColName="Group Code"
				 strCompanyStatus = trim(strGroupCode)           
			 
			 Case "Document Category"		
				 
				 GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
				 strColName="Document Category"		 
			 
			 Case Else
				 
				 FRM_Logger_ReportFailEvent "Select  Option ", "Selected  Option is not valid '"&strTPOSelect&"'", null	
		
		End Select

		intRow = GUI_List_GetRowIndex(objCompanySettingFormMainView, strColName, strCompanyStatus)

		If intRow>=1 Then
			
			GUI_List_ClickRow objCompanySettingFormMainView, Null, strColName, strCompanyStatus, True, false, false, "Single"
			intRow1 = GUI_List_GetRowIndex(objCompanySettingFormMainView, strColName, strCompanyStatus)
			GUI_SwfObject_Click  objCompanySettingMoveUp
			Wait g_TinyWaitMedium
			intRow2 = GUI_List_GetRowIndex(objCompanySettingFormMainView, strColName, strCompanyStatus)
			FRM_VerifyTrue (intRow1>intRow2),  strTPOSelect&" Move Up", strTPOSelect&" is Moved Up ' "&strCompanyStatus&" '"	
			
			Wait g_TinyWaitMedium
			intRow1 = GUI_List_GetRowIndex(objCompanySettingFormMainView, strColName, strCompanyStatus)
			GUI_SwfObject_Click  objCompanySettingMoveDown
			Wait g_TinyWaitMedium
			intRow2 = GUI_List_GetRowIndex(objCompanySettingFormMainView, strColName, strCompanyStatus)
			FRM_VerifyTrue (intRow1<intRow2),  strTPOSelect&" Move Down", strTPOSelect&" is Moved Down ' "&strCompanyStatus&" '"
		else	

		FRM_Logger_ReportInfoEvent "External Company Setup TPOSettings", "External Company Setup TPOSettings Required More Than One Status Record Move UP/Down Validation", null
	End If

	Set objSettings						=	Nothing
	Set objCompanySettingForm			=	Nothing
	Set objCompanySettingFormMainView	=	Nothing
	Set objAddNewSetting				=	Nothing
	Set objAddNewSettingOKBTN			=	Nothing																 
	Set objTPOSettingSelect				=	Nothing
	Set objCompanySettingMoveUp			=	Nothing
	Set objCompanySettingMoveDown		=	Nothing
 
End Function



'This function is used to Delete Current Status
'@code
'    BIZ_ExternalCompanySetup_TPOSettings_DeleteCurrentStatus(strTPOSelect,strStatus,strPopupMsg)
'@endcode
'@param strTPOSelect - Category
'@param strStatus - Status 
'@param strCompanyPopupMsg - POP UP Message while delete status

Function  BIZ_ExternalCompanySetup_TPOSettings_DeleteCurrentStatus(strTPOSelect,strStatus,strPopupMsg)
    
	FRM_Logger_ReportInfoEvent "External Company Setup", "Delete Current Status' "&strStatus&" ' in "&strTPOSelect, null 
	Dim objSettings,objCompanySettingForm,objCompanySettingFormMainView
	Dim objTPOSettingSelect,objSettingDeleteStatus

	Set objSettings						=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCompanySettingForm			=	objSettings.SwfWindow("swfname:=CompanySettingForm")
	Set objCompanySettingFormMainView	=	objSettings.SwfWindow("swfname:=CompanySettingForm").swfObject("swfname:=gvSettings")
	Set objTPOSettingSelect				=	objCompanySettingForm.SwfComboBox("swfname:=cboStatusType")
	Set objSettingDeleteStatus			=	objCompanySettingForm.SwfObject("swfname:=btnDeleteSetting")

	BIZ_Nav_HierarchyTree "External Company Setup", "TPO Settings"
	strCompanyStatus=strStatus

	Select Case strTPOSelect
       
		Case "Current Company Status"	  		
	  		
			GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
	 		strColName="Status"
		
		Case "Current Contact Status"	  		
	  		
			GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
	 		strColName="Status"
	  
		Case "Company Rating"
       		
			GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
       		strColName="Rating"
      
		Case "Attachment Category"
			
			GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
			strColName="Category"
			
		Case "Price Group"
            
			GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
            strGroupCode=Trim(Split(strCompanyStatus,"-")(0))
            strGroupName=Trim(Split(strCompanyStatus,"-")(1))
            strColName="Group Code"
            strCompanyStatus = trim(strGroupCode)
		
		Case "Document Category"		
		   	
			GUI_SwfComboBox_Select objTPOSettingSelect, strTPOSelect
            strColName="Document Category"		   	
		
		Case Else
			 
			 FRM_Logger_ReportFailEvent "Select  Option ", "Selected  Option is not valid '"&strTPOSelect&"'", null	
    
	End Select
	
	GUI_List_ClickRow objCompanySettingFormMainView, Null, strColName, strCompanyStatus, True, false, false, "Single"
	GUI_SwfObject_Click objSettingDeleteStatus
	GUI_Dialog_Encompass_Click 3, strPopupMsg, "No"
	
	BIZ_Nav_HierarchyTree "External Company Setup", "TPO Settings"
	boolValue=GUI_List_ClickRow (objCompanySettingFormMainView, Null, strColName, strCompanyStatus, True, false, false, "Single")
	FRM_VerifyTrue boolValue, strTPOSelect&" Delete -No", strTPOSelect&" Not Deleted is ' "&strCompanyStatus&" '"
	
	GUI_SwfObject_Click objSettingDeleteStatus
	GUI_Dialog_Encompass_Click 3, strPopupMsg, "Yes"
	
	If strTPOSelect="Document Category" Then
		GUI_Dialog_Encompass_Click 3, "", "Yes"					
	End If
	
	boolValue=GUI_List_ClickRow (objCompanySettingFormMainView, Null, strColName, strCompanyStatus, True, false, false, "Single")
	FRM_VerifyFalse boolValue, strTPOSelect&" Delete -Yes", strTPOSelect&" Deleted is ' "&strCompanyStatus& " '"
	   
	Set objSettings						=	Nothing
	Set objCompanySettingForm			=	Nothing
	Set objCompanySettingFormMainView	=	Nothing
	Set objAddNewSetting				=	Nothing
	Set objTPOSettingSelect				=	Nothing
	Set objSettingAddNew				=	Nothing
	Set objSettingEditStatus			=	Nothing
	Set objSettingDeleteStatus			=	Nothing
  	    	  
End Function



'This function is used to Create TPOFees
'@code
'     BIZ_ExternalCompanySetup_TPOFees_CreateTPOFees(strRowID)
'@endcode
'@param strRowID - Points to row In Excel

Function BIZ_ExternalCompanySetup_TPOFees_CreateTPOFees(strRowID)
    
	FRM_Logger_ReportInfoEvent "External Company Setup", "TPO Fees Creation", null 
	Dim objSettings,objTPOFeesAddBtn,objTPOAddEditFees,objTPOFeesOK,objTPOFeesCancel,objData
	Set objSettings			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTPOFeesAddBtn	=	objSettings.SwfObject("swfname:=btnAddSetting")
	Set objTPOAddEditFees	=	objSettings.SwfWindow("swfname:=AddEditTPOFee")
	Set objTPOFeesOK		=	objTPOAddEditFees.SwfButton("swfname:=btnOK")
	Set objTPOFeesCancel	=	objTPOAddEditFees.SwfButton("swfname:=btnCancel")
	Set objData            	= 	FRM_DS_GetTestData("Settings_CompanySettings", "TPOFees", strRowID)
	
	
	GUI_SwfObject_Click objTPOFeesAddBtn
	strTPOFeesName			=	FRM_DS_GetValue(objData,"TPOFeeName")
	If UTIL_String_IsNotEmpty(strTPOFeesName) Then
	 GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtName") ,strTPOFeesName    
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeDescription")) Then
	 GUI_SwfEditor_Type objTPOAddEditFees.SwfEditor("Swfname:=rtDesc") ,FRM_DS_GetValue(objData,"TPOFeeDescription")    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeAmount")) Then
	 GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtFeeAmt") ,FRM_DS_GetValue(objData,"TPOFeeAmount")   
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeAmountPlus")) Then
	  GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtFeePlus"),FRM_DS_GetValue(objData,"TPOFeeAmountPlus")   
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeCode")) Then
	GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtCode") ,FRM_DS_GetValue(objData,"TPOFeeCode")
	     
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeStartDate")) Then
	 GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtDate","Index:=1") ,FRM_DS_GetValue(objData,"TPOFeeStartDate")    
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeEndDate")) Then
	 GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtDate","Index:=0"),FRM_DS_GetValue(objData,"TPOFeeEndDate")
	    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeTrigger")) Then
	GUI_SwfComboBox_Select objTPOAddEditFees.SwfComboBox("Swfname:=cmbTrigger"),FRM_DS_GetValue(objData,"TPOFeeTrigger")     
	End If
	
	GUI_SwfButton_Click objTPOFeesOK
	FRM_Logger_ReportInfoEvent "External Company Setup", "TPO Fees Created' "&strTPOFeesName, null 
	BIZ_ExternalCompanySetup_TPOFees_CreateTPOFees=strTPOFeesName
    
    Set objSettings			=	Nothing
	Set objTPOFeesAddBtn	=	Nothing
	Set objTPOAddEditFees	=	Nothing
	Set objTPOFeesOK		=	Nothing
	Set objTPOFeesCancel	=	Nothing
	Set objData            	= 	Nothing
	
End Function



'This function is used to Edit TPOFees
'@code
'     BIZ_ExternalCompanySetup_TPOFees_EditTPOFeeValues(strSearchText,strRowID)
'@endcode
'@param strRowID - Points to row In Excel
'@param strSearchText - TPOFeeName

Function BIZ_ExternalCompanySetup_TPOFees_EditTPOFeeValues(strSearchText,strRowID)
    
	FRM_Logger_ReportInfoEvent "External Company Setup", "Edit TPO FeeValues '"&strSearchText, null 
	Dim objSettings,objTPOFeesEditBtn,objTPOAddEditFees,objTPOFeesOK,objMainView,objData,strTPOFeesName 
	Set objSettings			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTPOFeesEditBtn	=	objSettings.SwfObject("swfname:=btnEditSetting")
	Set objTPOAddEditFees	=	objSettings.SwfWindow("swfname:=AddEditTPOFee")
	Set objTPOFeesOK		=	objTPOAddEditFees.SwfButton("swfname:=btnOK")
	Set objMainView			=	objSettings.SwfObject("swfname:=gvFees")
	Set objData            	= 	FRM_DS_GetTestData("Settings_CompanySettings", "TPOFees", strRowID)
	
	
	GUI_List_ClickRow objMainView, Null, "Fee Name", strSearchText, true, false, false, "Single"
	GUI_SwfObject_Click objTPOFeesEditBtn
	
	strTPOFeesName="Edit_"&strSearchText
	
	If UTIL_String_IsNotEmpty(strTPOFeesName) Then
	 GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtName") ,strTPOFeesName    
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeDescription")) Then
	 GUI_SwfEditor_Type objTPOAddEditFees.SwfEditor("Swfname:=rtDesc") ,FRM_DS_GetValue(objData,"TPOFeeDescription")    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeAmount")) Then
	 GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtFeeAmt") ,FRM_DS_GetValue(objData,"TPOFeeAmount")   
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeAmountPlus")) Then
	  GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtFeePlus"),FRM_DS_GetValue(objData,"TPOFeeAmountPlus")   
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeCode")) Then
	GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtCode") ,FRM_DS_GetValue(objData,"TPOFeeCode")
	     
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeStartDate")) Then
	 GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtDate","Index:=1") ,FRM_DS_GetValue(objData,"TPOFeeStartDate")    
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeEndDate")) Then
	 GUI_SwfEdit_Set objTPOAddEditFees.SwfEdit("Swfname:=txtDate","Index:=0"),FRM_DS_GetValue(objData,"TPOFeeEndDate")
	    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeTrigger")) Then
	GUI_SwfComboBox_Select objTPOAddEditFees.SwfComboBox("Swfname:=cmbTrigger"),FRM_DS_GetValue(objData,"TPOFeeTrigger")     
	End If
	
	GUI_SwfButton_Click objTPOFeesOK
	FRM_Logger_ReportInfoEvent "External Company Setup", "Edit TPO Created '"&strTPOFeesName, null 
	BIZ_ExternalCompanySetup_TPOFees_EditTPOFeeValues=strTPOFeesName

	Set objSettings			=	Nothing
	Set objTPOFeesEditBtn	=	Nothing
	Set objTPOAddEditFees	=	Nothing
	Set objTPOFeesOK		=	Nothing
	Set objMainView			=	Nothing
	Set objData            	= 	Nothing

End Function



'This function is used to Verify TPO Fee Values
'@code
'     BIZ_ExternalCompanySetup_TPOFees_VerifyTPOFeeValues(strSearchText,strRowID)
'@endcode
'@param strRowID - Points to row In Excel
'@param strSearchText - TPOFeeName

Function BIZ_ExternalCompanySetup_TPOFees_VerifyTPOFeeValues(strSearchText,strRowID)
    
	FRM_Logger_ReportInfoEvent "External Company Setup", "Verify TPO Fee Values", null
    Dim objData,objMainView,intRowNum,strFeeName,strDescription,strFeeAmount,strFeePlus
    Dim strCode,strStartDate,strEndDate
   	Set objData     =   FRM_DS_GetTestData("Settings_CompanySettings", "TPOFees", strRowID)
	Set objMainView	=   SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvFees")	
	
	intRowNum		=   GUI_List_GetRowIndex(objMainView, "Fee Name", strSearchText)		
	strFeeName		=	GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "Fee Name"))
	strDescription	=	GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "Description"))
	strFeeAmount	=	GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "Fee %"))
	strFeePlus		=	GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "Fee Amount"))
	strCode			=	GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "Code"))
	strStartDate	=	GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "Start Date"))
	strEndDate		=	GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "End Date"))
	
	FRM_Logger_ReportPassEvent "TPO Fee Record", strSearchText&" 'Record has created successfully'", null
	If UTIL_String_IsNotEmpty(strSearchText) Then
	  FRM_VerifyEqual strFeeName,strSearchText, "TPO Fee Name", "TPO Fee Name"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeDescription")) Then
	  FRM_VerifyEqual strDescription,FRM_DS_GetValue(objData,"TPOFeeDescription") , "TPO Description", "TPO Description" 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeAmount")) Then
	 FRM_VerifyEqual Trim(strFeeAmount), Trim(FRM_DS_GetValue(objData,"TPOFeeAmount")), "TPO Fee Amount", "TPO Fee Amount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeAmountPlus")) Then
	  FRM_VerifyEqual Trim(strFeePlus),Trim(FRM_DS_GetValue(objData,"TPOFeeAmountPlus")) , "Plus", "Plus"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeCode")) Then
	   FRM_VerifyEqual FormatDateTime(strCode,2),FormatDateTime(FRM_DS_GetValue(objData,"TPOFeeCode"),2) , "TPO Fee Code", "TPO Fee Code" 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeStartDate")) Then
	 FRM_VerifyEqual FormatDateTime(strStartDate,2),FormatDateTime(FRM_DS_GetValue(objData,"TPOFeeStartDate"),2) , "TPO Fee Start Date", "TPO Fee Start Date"
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TPOFeeEndDate")) Then
	   FRM_VerifyEqual FormatDateTime(strEndDate,2), FormatDateTime(FRM_DS_GetValue(objData,"TPOFeeEndDate"),2), "TPO Fee End Date", "TPO Fee End Date" 
	End If

    Set objData     =   Nothing
	Set objMainView	=   Nothing

End Function



'This function is used to Create Category Status
'@code
'    BIZ_ExternalCompanySetup_TPOFees_DeleteTPOFeeRecord(strSearchText)
'@endcode
'@param strSearchText TPO Fee Name

Function BIZ_ExternalCompanySetup_TPOFees_DeleteTPOFeeRecord(strSearchText)
    
    FRM_Logger_ReportInfoEvent "External Company Setup", "TPO Fee Record Delete' "&strSearchText, null
	
	Dim objSettings,objMainView,objTPOFeesDelete 
	Set objSettings			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objTPOFeesDelete	=	objSettings.SwfObject("swfname:=btnDeleteSetting")
	Set objMainView			=	objSettings.SwfObject("swfname:=gvFees")
	
	BIZ_Nav_HierarchyTree "External Company Setup", "TPO Fees"
	Wait g_TinyWaitMedium 'Explicit wait added Due to Sync
	GUI_List_ClickRow objMainView, Null, "Fee Name", strSearchText, true, false, false, "Single"
	GUI_SwfObject_Click objTPOFeesDelete
	GUI_Dialog_Encompass_YesX  10,""
	Wait g_TinyWaitMedium 'Explicit wait added Due to Sync
wait(10)
	boolValue=GUI_List_ClickRow (objMainView, Null, "Fee Name", strSearchText, true, false, false, "Single")
	FRM_VerifyFalse boolValue, "TPO Fee Record Deleted", "TPO Fee Record Not Available is ' "&strSearchText& " '" 
	
	Set objSettings			=	Nothing
	Set objTPOFeesDelete	=	Nothing
	Set objMainView			=	Nothing
	
End Function
	

    
'This function is used for Docment Creation in TPO WebCenter
'@code
'    BIZ_ExternalCompanySetUp_TPOWebCenterDoc_CreateDocument(strDocFileName,strRowID) 
'@endcode
'@Param strDocFileName Name of Document
'@Param strRowID points to row in excel

Function BIZ_ExternalCompanySetUp_TPOWebCenterDoc_CreateDocument(strDocFileName,strRowID)

    FRM_Logger_ReportInfoEvent "External Company SetUP TPO WebDoc Center", "New Document Creation", null
    Dim objData,objSettings,objSettingsAdd,objSettingsDocumentForm,objDocumentFormOK,objDocumentFormAttachBrowse,objDocumentFormAttachDialog
    Dim objDocumentFormAttachDialogEdit,objDocumentFormAttachDialogOpen,strExcelFilePathWithName
	
	Set objData            				= 	FRM_DS_GetTestData("Settings_CompanySettings", "TPOAddNewDoc", strRowID)
	Set objSettings						=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objSettingsAdd            		=   objSettings.SwfObject("swfname:=btnAdd")
	Set objSettingsDocumentForm			=   objSettings.SwfWindow("swfname:=AddDocumentForm")
	Set objDocumentFormOK               =   objSettingsDocumentForm.SwfButton("swfname:=btnOK")
	Set objDocumentFormAttachBrowse     =	objSettingsDocumentForm.SwfObject("swfname:=btnAttachBrowse")                                          
	Set objDocumentFormAttachDialog 	=   objSettingsDocumentForm.Dialog("text:=Browse and Attach")
	Set objDocumentFormAttachDialogEdit =   objDocumentFormAttachDialog.WinEdit("attached text:=File &name:","enabled:=true","index:=0")
	Set objDocumentFormAttachDialogOpen =   objDocumentFormAttachDialog.WinEdit("text:=&Open")
	
	
	strExcelFilePathWithName   = Pathfinder.Locate("Test Data\")&strDocFileName
	GUI_SwfObject_Click objSettingsAdd
	GUI_SwfObject_Click objDocumentFormAttachBrowse
	Wait  g_LongWaitMedium 'Explicit wait added due to sync
	GUI_WinEdit_Type objDocumentFormAttachDialogEdit, strExcelFilePathWithName

	GUI_WinObject_Click(objDocumentFormAttachDialogOpen)
	strDocName=Trim(FRM_DS_GetValue(objData,"DisplayName"))
	
	If UTIL_String_IsNotEmpty(strDocName) Then
	 GUI_SwfEdit_Set objSettingsDocumentForm.SwfEdit("swfname:=txtDocDisplayName") ,strDocName    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Date1")) Then
	 GUI_SwfEdit_Set objSettingsDocumentForm.SwfEdit("swfname:=txtDate","index:=0") ,FRM_DS_GetValue(objData,"Date1")    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Date2")) Then
	 GUI_SwfEdit_Set objSettingsDocumentForm.SwfEdit("swfname:=txtDate","index:=1") ,FRM_DS_GetValue(objData,"Date2")    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Category")) Then
	 GUI_SwfComboBox_Select objSettingsDocumentForm.SwfComboBox("swfname:=cboCategory") ,FRM_DS_GetValue(objData,"Category")    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Channel")) Then
	 GUI_SwfComboBox_Select objSettingsDocumentForm.SwfComboBox("swfname:=cboChannel") ,FRM_DS_GetValue(objData,"Channel")    
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"AllTPORadio")) and FRM_DS_GetValue(objData,"AllTPORadio")="Yes"  Then
	 GUI_SwfRadioButton_Click objSettingsDocumentForm.SwfRadioButton("swfname:=rdoAvailableToAllTposYes") 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"AllTPORadio")) and FRM_DS_GetValue(objData,"AllTPORadio")="No"  Then
	 GUI_SwfRadioButton_Click objSettingsDocumentForm.SwfComboBox("swfname:=rdoAvailableToAllTposNo") 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Assign To")) Then
	 GUI_SwfComboBox_Select objSettingsDocumentForm.SwfComboBox("swfname:=cboAssignto") ,FRM_DS_GetValue(objData,"Assign To")    
	End If
	
	GUI_SwfButton_Click objDocumentFormOK
	GUI_Dialog_Encompass_OKX 3, "Document uploaded successfully!"
	BIZ_ExternalCompanySetUp_TPOWebCenterDoc_CreateDocument= strDocName

	Set objData            				= 	Nothing
	Set objSettings						=	Nothing
	Set objSettingsAdd            		=   Nothing
	Set objSettingsDocumentForm			=   Nothing
	Set objDocumentFormOK               =   Nothing
	Set objDocumentFormAttachBrowse     =	Nothing                                          
	Set objDocumentFormAttachDialog 	=   Nothing
	Set objDocumentFormAttachDialogEdit =   Nothing
	Set objDocumentFormAttachDialogOpen =   Nothing

End Function



'This function is used for verify Docment Created in TPO WebCenter
'@code
'    BIZ_ExternalCompanySetUp_TPOWebCenterDoc_VerifyDocument(strDocName,strRowID)
'@endcode
'@Param strDocName Name of Document
'@Param strRowID points to row in excel

Function BIZ_ExternalCompanySetUp_TPOWebCenterDoc_VerifyDocument(strDocName,strRowID)
    
    FRM_Logger_ReportInfoEvent "External Company SetUP TPO WebDoc Center", "Verify Document Fields", null
	Dim objMainView,objData,intRow
	Wait g_LongWaitLarge 'Explicit Wait Added Due to Sync
	Set objMainView	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gridViewDocumentList")
	Set objData    	= FRM_DS_GetTestData("Settings_CompanySettings", "TPOAddNewDoc", strRowID)
	intRow			= GUI_List_GetRowIndex(objMainView, "Document Display Name", strDocName)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"DisplayName")) Then
	FRM_VerifyEqual strDocName, GUI_List_GetCellData(objMainView, intRow, "Document Display Name"), "Document Display Name", "Document Display Name"
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Category")) Then
	FRM_VerifyEqual FRM_DS_GetValue(objData,"Category"), GUI_List_GetCellData(objMainView, intRow, "Category"), "Category", "Category"
	End IF
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Channel")) Then
	FRM_VerifyEqual FRM_DS_GetValue(objData,"Channel"), GUI_List_GetCellData(objMainView, intRow, "Channel"), "Channel", "Channel"
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Date1")) Then
	FRM_VerifyEqual FormatDateTime(FRM_DS_GetValue(objData,"Date1"),2), FormatDateTime(GUI_List_GetCellData(objMainView, intRow, "Start Date"),2), "Start Date", "Start Date"
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Date2")) Then
	FRM_VerifyEqual FormatDateTime(FRM_DS_GetValue(objData,"Date2"),2), FormatDateTime(GUI_List_GetCellData(objMainView, intRow, "End Date"),2), "End Date", "End Date"
	End IF
    
    Set objMainView	= Nothing
	Set objData    	= Nothing
	
End Function



'This function is used for verify Docment Created in Organization
'@code
'    BIZ_ExternalCompanySetUp_TPOWebCenterDoc_VerifyDocumentInCompanyDetails(strDocName)
'@endcode
'@Param strDocName Name of Document

Function BIZ_ExternalCompanySetUp_TPOWebCenterDoc_VerifyDocumentInCompanyDetails(strDocName)
   
    FRM_Logger_ReportInfoEvent "External Company SetUP TPO WebDoc Center", "Verify Document Name In Organization", null
    Set objEditCompanyDetailsDialog   =	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog")
	Set  objMainView                  = objEditCompanyDetailsDialog.SwfObject("swfname:=gridViewDocumentList")
	Dim boolValue,intRow,strValue
	
	boolValue	= False
	GUI_SwfTab_Click objEditCompanyDetailsDialog.SwfTab("swfname:=tabControlExAll"),"TPO Docs"
	Wait g_ShortWaitMedium 'Wait added due to sync
	intRow		= GUI_List_GetNumberofRows(objMainView)
	For Iterator = 0 To intRow-1 Step 1
		strValue=trim(GUI_List_GetCellData(objMainView, Iterator, 1))
		If strValue=strDocName Then
			boolValue=True
			Iterator=intRow
		End If
	Next
	FRM_VerifyTrue boolValue, "TPO Docs" , strDocName&" Available in TPO Docs" 
    GUI_SwfButton_Click objEditCompanyDetailsDialog.SwfButton("swfname:=btnOK")
    Set  objMainView= Nothing
    
 End Function
 


'This function is used for Set TPO Custom Fields
'@code
'    BIZ_ExternalCompanySetUp_SetTPOCustomFields(strRowID)
'@endcode
'@Param strRowID points to row in excel

Function BIZ_ExternalCompanySetUp_SetTPOCustomFields(strRowID)

	FRM_Logger_ReportInfoEvent "External Company SetUp TPO CustomFields", "TPO Custom Fields Creation", null
	Dim objData,objSettings,objLoanFieldMapping,objLoanFieldEdit,objLoanFieldSelect,objDialogOK
	
	Set objData    			= 	FRM_DS_GetTestData("Settings_CompanySettings", "SetTPOCustomFields", strRowID)
	Set objSettings			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanFieldMapping =	objSettings.SwfWindow("swfname:=LoanFieldMappingDialog")
	Set objLoanFieldEdit 	=	objLoanFieldMapping.SwfEdit("swfname:=txtLoanFieldId")
	Set objLoanFieldSelect	=	objLoanFieldMapping.SwfButton("swfname:=btnOk")
	Set objDialogOK         =   objSettings.Dialog("text:=Encompass").WinButton("text:=OK")


	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strCustomTabName")) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtPageName"), FRM_DS_GetValue(objData,"strCustomTabName")
	End IF 

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDescription1")) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtFieldDescription1"), FRM_DS_GetValue(objData,"strDescription1")
	End IF 
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldType1")) Then
	GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboFieldType1"), FRM_DS_GetValue(objData,"strFieldType1")
	End IF
	IF GUI_Object_IsExistX(objDialogOK, 5) Then
		GUI_Dialog_Encompass_OKX 2, ""
	End IF
	GUI_SwfObject_Click  objSettings.SwfObject("swfname:=picLoanFieldSearch1")
	GUI_Object_WaitTillExistX objLoanFieldEdit,3
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldID1")) Then
		GUI_SwfEdit_Set objLoanFieldEdit,FRM_DS_GetValue(objData,"strFieldID1")
	End IF
	GUI_SwfButton_Click objLoanFieldSelect


	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDescription2")) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtFieldDescription2"), FRM_DS_GetValue(objData,"strDescription2")
	End IF
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldType2")) Then
		GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboFieldType2"), FRM_DS_GetValue(objData,"strFieldType2")
	End IF
	IF GUI_Object_IsExistX(objDialogOK, 5) Then
		GUI_Dialog_Encompass_OKX 2, ""
	End IF
	GUI_SwfObject_Click  objSettings.SwfObject("swfname:=picLoanFieldSearch2")
	GUI_Object_WaitTillExistX  objLoanFieldEdit,3
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldID2")) Then
		GUI_SwfEdit_Set objLoanFieldEdit,FRM_DS_GetValue(objData,"strFieldID2")
	End IF
	GUI_SwfButton_Click objLoanFieldSelect


	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDescription3")) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtFieldDescription3"), FRM_DS_GetValue(objData,"strDescription3")
	End IF
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldType3")) Then
		GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboFieldType3"), FRM_DS_GetValue(objData,"strFieldType3")
	End IF
	IF GUI_Object_IsExistX(objDialogOK, 5) Then
		GUI_Dialog_Encompass_OKX 2, ""
	End IF
	GUI_SwfObject_Click  objSettings.SwfObject("swfname:=picLoanFieldSearch3")
	GUI_Object_WaitTillExistX objLoanFieldEdit,3
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldID3")) Then
		GUI_SwfEdit_Set objLoanFieldEdit,FRM_DS_GetValue(objData,"strFieldID3")
	End IF
	GUI_SwfButton_Click objLoanFieldSelect


	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDescription4")) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtFieldDescription4"), FRM_DS_GetValue(objData,"strDescription4")
	End IF
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldType4")) Then
		GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboFieldType4"), FRM_DS_GetValue(objData,"strFieldType4")
	End IF
	IF GUI_Object_IsExistX(objDialogOK, 5) Then
		GUI_Dialog_Encompass_OKX 2, ""
	End IF
	GUI_SwfObject_Click  objSettings.SwfObject("swfname:=picLoanFieldSearch4")
	GUI_Object_WaitTillExistX objLoanFieldEdit,3
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldID4")) Then
		GUI_SwfEdit_Set objLoanFieldEdit,FRM_DS_GetValue(objData,"strFieldID4")
	End IF
	GUI_SwfButton_Click objLoanFieldSelect


	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDescription5")) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtFieldDescription5"), FRM_DS_GetValue(objData,"strDescription5")
	End IF
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldType5")) Then
	GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboFieldType5"), FRM_DS_GetValue(objData,"strFieldType5")
	End IF
	IF GUI_Object_IsExistX(objDialogOK, 5) Then
		GUI_Dialog_Encompass_OKX 2, ""
	End IF
	GUI_SwfObject_Click  objSettings.SwfObject("swfname:=picLoanFieldSearch5")
	GUI_Object_WaitTillExistX  objLoanFieldEdit,3
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strFieldID5")) Then
	GUI_SwfEdit_Set objLoanFieldEdit,FRM_DS_GetValue(objData,"strFieldID5")
	End IF
	GUI_SwfButton_Click objLoanFieldSelect

	BIZ_Settings_ClickSave()
	GUI_Dialog_Encompass_OKX 5, ""
	BIZ_Settings_ClickClose()
	
	Set objData    			= 	Nothing
	Set objSettings			=	Nothing
	Set objLoanFieldMapping =	Nothing
	Set objLoanFieldEdit 	=	Nothing
	Set objLoanFieldSelect	=	Nothing
	Set objDialogOK         =   Nothing


End Function



'This function is used for Set TPO Custom Fields values in CompanyDetails
'@code
'    BIZ_ExternalCompanySetUp_CompanyDetails_SetTPOCustomFieldValues(strRowID)
'@endcode
'@Param strRowID points to row in excel

Function BIZ_ExternalCompanySetUp_CompanyDetails_SetTPOCustomFieldValues(strRowID)

    FRM_Logger_ReportInfoEvent "External Company SetUp TPO CustomFields", "Set TPO Custom Field Values in Company Details  ", null
	Dim objData,objEditCompanyDetailsDialog
	Set objData    					= 	FRM_DS_GetTestData("Settings_CompanySettings", "SetTPOCustomFieldValues", strRowID)
	Set objEditCompanyDetailsDialog	=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog")
	
	GUI_SwfTab_Click objEditCompanyDetailsDialog.SwfTab("swfname:=tabControlExAll"),"Custom Fields"
	GUI_Object_WaitTillExistX objEditCompanyDetailsDialog.WinEdit("index:=0"), 7
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strBorrowerName")) Then
		GUI_WinEdit_Type objEditCompanyDetailsDialog.WinEdit("index:=0"),FRM_DS_GetValue(objData,"strBorrowerName")   	                                                                                                             
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strZipCode")) Then
		GUI_WinEdit_Set objEditCompanyDetailsDialog.WinEdit("index:=1"),FRM_DS_GetValue(objData,"strZipCode")
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDate")) Then
		GUI_WinEdit_Set objEditCompanyDetailsDialog.WinEdit("index:=2"),FRM_DS_GetValue(objData,"strDate")
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strPhone")) Then
		GUI_WinEdit_Set objEditCompanyDetailsDialog.WinEdit("index:=3"),FRM_DS_GetValue(objData,"strPhone")
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDecimal")) Then
		GUI_WinEdit_Set objEditCompanyDetailsDialog.WinEdit("index:=4"),FRM_DS_GetValue(objData,"strDecimal")
	End IF
	
	GUI_SwfObject_Click objEditCompanyDetailsDialog.SwfObject("swfname:=saveButton")
	GUI_SwfButton_Click objEditCompanyDetailsDialog.SwfButton("swfname:=btnOK")
    
    Set objData    					= 	Nothing
	Set objEditCompanyDetailsDialog	=	Nothing
	
End Function



'This function is used for Verify TPO Custom Field values in CompanyDetails
'@code
'    BIZ_ExternalCompanySetUp_CompanyDetails_VerifyTPOCustomFields(strRowID)
'@endcode
'@Param strRowID points to row in excel

Function BIZ_ExternalCompanySetUp_CompanyDetails_VerifyTPOCustomFields(strRowID)

	FRM_Logger_ReportInfoEvent "External Company SetUp TPO CustomFields", "Verify TPO Custom Field Values in Company Details  ", null
	Dim objData,objEditCompanyDetailsDialog
	Set objData    					= 	FRM_DS_GetTestData("Settings_CompanySettings", "SetTPOCustomFieldValues", strRowID)
	Set objEditCompanyDetailsDialog	=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=EditCompanyDetailsDialog")
	
	GUI_SwfTab_Click objEditCompanyDetailsDialog.SwfTab("swfname:=tabControlExAll"),"Custom Fields"
	GUI_Object_WaitTillExistX objEditCompanyDetailsDialog.WinEdit("index:=0"), 7
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strBorrowerName")) Then
	    FRM_VerifyEqual FRM_DS_GetValue(objData,"strBorrowerName"), GUI_Object_GetPropertyValue(objEditCompanyDetailsDialog.WinEdit("index:=0"),"text"), "Borrower Name", "Borrower Name"
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strZipCode")) Then	
		FRM_VerifyEqual Cstr(FRM_DS_GetValue(objData,"strZipCode")), Cstr(GUI_Object_GetPropertyValue(objEditCompanyDetailsDialog.WinEdit("index:=1"),"text")), "ZipCode", "ZipCode"
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDate")) Then
		FRM_VerifyEqual Formatdatetime(FRM_DS_GetValue(objData,"strDate"),2), FormatDateTime(GUI_Object_GetPropertyValue(objEditCompanyDetailsDialog.WinEdit("index:=2"),"text"),2), "Date", "Date"
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strPhone")) Then
		FRM_VerifyEqual Cstr(FRM_DS_GetValue(objData,"strPhone")), Cstr(GUI_Object_GetPropertyValue(objEditCompanyDetailsDialog.WinEdit("index:=3"),"text")), "Phone", "Phone"	
	End IF
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"strDecimal")) Then	
		FRM_VerifyEqual Cstr(FRM_DS_GetValue(objData,"strDecimal")), Cstr(GUI_Object_GetPropertyValue(objEditCompanyDetailsDialog.WinEdit("index:=4"),"text")), "Decimal_2", "Decimal_2"	
	End IF
	GUI_SwfButton_Click objEditCompanyDetailsDialog.SwfButton("swfname:=btnOK")
	
	Set objData    					= 	Nothing
	Set objEditCompanyDetailsDialog	=	Nothing

End Function



'This function is used to SetBankDetails in CompanyDetails
'@code
'    BIZ_ExternalCompanySetUp_CompanyDetails_SetBankDetails(strRowID)
'@endcode
'@param strRowID Points Row in Excel

Function BIZ_ExternalCompanySetUp_CompanyDetails_SetBankDetails(strRowID)

	FRM_Logger_ReportInfoEvent "Company Details Settings", "Set Bank Details", null
	Dim objBankSetUp,objData
	Set objBankSetUp		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=BankSetupForm")
	Set objData 			= FRM_DS_GetTestData("Settings_CompanySettings", "SetBankDetails", strRowID)
	
	GUI_SwfTreeView_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTreeView("swfname:=hierarchyTree"), "Banks"        
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNewOrg")
	
	strBankName=FRM_DS_GetValue(objData, "strName")
	
	If UTIL_String_IsNotEmpty(strBankName) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtName"), strBankName
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strAddress")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtAddress"), FRM_DS_GetValue(objData, "strAddress")
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strAddress1")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtAddress1"), FRM_DS_GetValue(objData, "strAddress1")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strCity")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtCity"), FRM_DS_GetValue(objData, "strCity")
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strState")) Then
			GUI_SwfComboBox_Select objBankSetUp.SwfComboBox("swfname:=cbState"), FRM_DS_GetValue(objData, "strState")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strZipCode")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtZip"), FRM_DS_GetValue(objData, "strZipCode")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strContactName")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtContactName"), FRM_DS_GetValue(objData, "strContactName")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strEmail")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtEmail"), FRM_DS_GetValue(objData, "strEmail")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strPhone")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtPhone"), FRM_DS_GetValue(objData, "strPhone")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strFax")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtFax"), FRM_DS_GetValue(objData, "strFax")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strABA")) Then
			GUI_SwfEdit_Set objBankSetUp.SwfEdit("swfname:=txtAba"), FRM_DS_GetValue(objData, "strABA")
	End If
	
	GUI_SwfButton_Click objBankSetUp.SwfButton("swfName:=button1")
	
	Set objBankSetUp		=	Nothing
	Set objData 			=   Nothing
	BIZ_ExternalCompanySetUp_CompanyDetails_SetBankDetails=strBankName

End Function



	
'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\ExternalCompanySetup.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\FundingTemplates.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_FundingTemplates BIZ_Settings_FundingTemplates
'
' List of functions here
' @code
' 	Function BIZ_FundingTemplate_DeleteExisting(strFundingTemplate)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

' Added by Sameer Gupta as of 6th Jan 2016
'This function is used to delete existing Funding Template row from the list
'@code
'    Function BIZ_FundingTemplate_DeleteExisting(strFundingTemplate)
'@endcode
'@param strFundingTemplate - Funding Template name

Function BIZ_FundingTemplate_DeleteExisting(strFundingTemplate)

	FRM_Logger_ReportInfoEvent "Delete Funding Template", "Delete Funding Template with name " & strFundingTemplate & "", null

	Dim objFundingTemplateList, scrollbarFundingTemplate, exist
	Set objFundingTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=lvwTemplates")
	Set scrollbarFundingTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	exist = GUI_List_ClickRow (objFundingTemplateList, scrollbarFundingTemplate, "Name", strFundingTemplate, True, False, False, "Single")

	If exist  Then

        GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnDelete"), "SwfObject", "Delete Funding Template"
		GUI_Dialog_Encompass_OK ""

	End If
	
	Set objFundingTemplateList = Nothing
	Set scrollbarFundingTemplate = Nothing

End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\FundingTemplates.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\LoanReassignment.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_SystemAdministration_LoanReassignment BIZ_Settings_SystemAdministration_LoanReassignment 
' List of functions here
' @code
'	Function BIZ_Settings_SystemAdministration_LoanReassignment_ReassignLoan(strRowID, strLoanNum)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to reassign the loan.
'@code
'    BIZ_Settings_SystemAdministration_LoanReassignment_ReassignLoan(strRowID, strLoanNum)
'@endcode
'@param strRowID - RowID for Data
'@param strLoanNum - Loan to assign

Function BIZ_Settings_SystemAdministration_LoanReassignment_ReassignLoan(strRowID, strLoanNum)
	
	FRM_Logger_ReportInfoEvent "BIZ_Settings_SystemAdministration_LoanReassignment_ReassignLoan", "Reaasign Loan '"&strLoanNum&"' to an asignee", Null

	Dim objContainer, objData, objSelectUser, objUserList, objLoanList, objAsigneeList, objProgressDialog
	Set objContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData = FRM_DS_GetTestData("Settings_SystemAdministration", "LoanReassignment", strRowID)
	Set objSelectUser = objContainer.SwfWindow("swfname:=ContactAssignment")
	Set objUserList = objSelectUser.SwfListView("swfname:=listView1")
	Set objLoanList = objContainer.SwfObject("swfname:=listvwLoan")
	Set objAsigneeList = objContainer.SwfObject("swfname:=listvwUser")
	Set objProgressDialog = objContainer.SwfWindow("swfname:=ProgressReportDialog")
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Company")) Then
		FRM_Logger_ReportInfoEvent "Set Company", "Set '"&FRM_DS_GetValue(objData, "Company")&"' in Company", Null
		objContainer.SwfComboBox("swfname:=cboCompany").Select FRM_DS_GetValue(objData, "Company")     
	End If
	 
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "LoanFolder")) Then
		FRM_Logger_ReportInfoEvent "Set Loan Folder", "Set '"&FRM_DS_GetValue(objData, "LoanFolder")&"' in Loan Folder", Null
		objContainer.SwfComboBox("swfname:=comBoxLoanFolder").Select FRM_DS_GetValue(objData, "LoanFolder")     
	End If 
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Role")) Then
		FRM_Logger_ReportInfoEvent "Set Role", "Set '"&FRM_DS_GetValue(objData, "Role")&"' Role", Null
		objContainer.SwfComboBox("swfname:=comBoxSearchJobFunction").Select FRM_DS_GetValue(objData, "Role")     
	End If
	 
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Name")) Then
		FRM_Logger_ReportInfoEvent "Set Name", "Set '"&FRM_DS_GetValue(objData, "Name")&"' in Name", Null
		GUI_SwfObject_Click objContainer.SwfObject("swfname:=stdIconBtnFind")
		GUI_Object_WaitTillExistX objSelectUser, 30
		objUserList.Activate LCase(FRM_DS_GetValue(objData, "Name"))
		Wait g_ShortWaitMedium     'Sync Issue
	End If 	
	
	GUI_SwfButton_Click objContainer.SwfButton("swfname:=btnSearch")
	Wait g_LongWaitLarge
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "AllLoans")) Then
		FRM_Logger_ReportInfoEvent "Select Loan", "Select all loans", Null
		GUI_SwfCheckbox_Set objContainer.SwfCheckBox("swfname:=checkBox1", "Text:="&FRM_DS_GetValue(objData, "AllLoans")), FRM_DS_GetValue(objData, "Check")
	End If	
	
	If Not UTIL_String_IsEmpty(strLoanNum) Then
		FRM_Logger_ReportInfoEvent "Select Loan", "Select '"&strLoanNum&"' loan in loan list", Null
		GUI_List_ClickRow objLoanList, objLoanList.SwfScrollBar("swfname:=vPanelScrollBar"), "Loan #", strLoanNum, True, False, False, "Single"  
	End If	

	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "AsigneeRole")) Then
		FRM_Logger_ReportInfoEvent "Set Asignee Role", "Set '"&FRM_DS_GetValue(objData, "AsigneeRole")&"' role For Asignee. ", Null
		objContainer.SwfComboBox("swfname:=comBoxAssignToJobFunction").Select FRM_DS_GetValue(objData, "AsigneeRole") 
	End If	

	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "AsigneeName")) Then
		FRM_Logger_ReportInfoEvent "Select Asignee", "Select '"&FRM_DS_GetValue(objData, "AsigneeName")&"' as Asignee. ", Null
		GUI_List_ClickRow objAsigneeList, objAsigneeList.SwfScrollBar("swfname:=vPanelScrollBar"), "User ID", FRM_DS_GetValue(objData, "AsigneeName"), True, False, Falsse, "Single"
	End If	
	
	Wait g_LongWaitLarge
	GUI_SwfButton_Click objContainer.SwfButton("swfname:=btnReassign")
	
	Wait g_ShortWaitTime 'Added by Savik
	
	If GUI_Object_IsExist(objProgressDialog) Then
		intRowNum = GUI_List_GetRowIndex(objProgressDialog.SwfListView("swfname:=listView1"), "Record", strLoanNum)
		GUI_List_ValidateCellDataWithCustomMsg objProgressDialog.SwfListView("swfname:=listView1"), intRowNum, "Description", "Success", "'Batch Loan Reassignment process' Popup is displayed with Success message"
		GUI_SwfButton_Click objProgressDialog.SwfButton("swfname:=btnClose")
		
	End If
	
	Set objContainer      = Nothing
	Set objData 	      = Nothing
	Set objSelectUser     = Nothing
	Set objUserList	      = Nothing
	Set objLoanList	      = Nothing
	Set objAsigneeList 	  = Nothing
	Set objProgressDialog = Nothing

End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\LoanReassignment.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\LoanSetup.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_LoanSetup BIZ_Settings_LoanSetup
'
' List of functions here
' @code
'	Function BIZ_Alerts_EnableAlert(strAlertsName)
'	Function BIZ_Alerts_Select(strAlertsName)
'   Function BIZ_AlertEditor_ChooseTriggersDate(strDateType)
'   Function BIZ_AlertEditor_Save()
'	Function BIZ_Settings_CreateLoanFolder (strRowID,strArchiveInFolder,strIncludeInDuplicate)
'   Function BIZ_Settings_CreateNewLoanFolder(strFolderName)
'   Function BIZ_Tasks_DeleteExisting(strRowID)
'   Function BIZ_Tasks_AddEditTasks(strRowID)
'   Function BIZ_Tasks_SelectExistingTasks(strRowID,strAction)
'	Function BIZ_PrintFormGroups_DeleteExisting(strPrintFormGroups)
'	Function BIZ_PrintFormGroups_CreateNew(strPrintFormGroup)
'	Function BIZ_PrintFormGroups_Open(strPrintFormGroup)
'   Function BIZ_Settings_DeleteLoanFolder(strLoanFolder)
'	Function BIZ_Settings_LoanSetUpCheckUI(strLoanFolder)
'	Function BIZ_Settings_AddLoanFolder(strRowID)
'	Function BIZ_Settings_EditLoanFolder(strRowID,Arc,Dup)
'	Function BIZ_LoanSetUp_ButtonDisablecheck(strButtonName,strDesc)
'	Function BIZ_LoanSetUp_ButtonEnablecheck(strButtonName,strDesc)
'	Function BIZ_LoanSetUp_ConditionForms_UIVerfication(strRowID)  
'	Function BIZ_LoanSetup_AddIcon(strRowID,strdesc)
'	Function BIZ_LoanSetup_Duplicate(strRowID,strdesc)
'	Function BIZ_LoanSetup_DeleteIcon(strRowID,strdesc,strButton)
'	Function BIZ_LoanSetup_SelectFolder(strFolderName)
'	Function BIZ_Settings_RenameCustomPrintForms(strRowID,strdesc)
'	Function BIZ_Settings_AddAndRenameFolderCustomPrintForms(strRowID,strdesc)
'	Function BIZ_LoanSetup_DuplicateCustomForm(strRowID)
'	Function BIZ_Settings_CopyPasteInDiffFolders(strRowID,strdesc,strData)
'	Function BIZ_Settings_AddPersonalCustomForm(strRowID,strdesc)
'	Function BIZ_Settings_CopyPasteInSameFolders(strRowID,strdesc,strData)
'   Function BIZ_LoanSetUp_ConditionForms_Rename(strRowID)
'	Function BIZ_Settings_CreateCustomPrintFormFolder(strRowID)
'	Function BIZ_Settings_CustomPrintFormFolderIconCreation(strRowID)
'	Function BIZ_Settings_DeleteFolder(strRowID,strButton,strdesc,strFormName)
'	Function BIZ_LoanSetup_Forms_CopyPasteOperationinDiffFolders(strLoanProgram,strDestnFlder)
'	Function BIZ_LoanSetup_Forms_CopyPasteOperationinSameFolders(strLoanProgram,strFlderName)
'	Function BIZ_LoanSetup_Forms_Duplicate(strLoanProgram,strdesc)
'	Function BIZ_LoanSetup_ValidateRenameTemplatewithExistingName(strRowID,strIconName,strRenameicon,strDesc)  
'	Function BIZ_LoanSetUp_Forms_Rename(strIconName,strdesc) 
'	Function BIZ_Settings_CreateFormFolder(strRowID)
'	Function BIZ_PrintFormGroup_CreateNew(strRowID,strdesc,StrFldrName)
' 	Function BIZ_Settings_CutPasteoperationinDifferentFolders(StrSrcfldr,strIconName,strDestnfldr)
'	Function BIZ_Settings_CutPasteoperationinSameFolders(strRowID)	
'	Function BIZ_Settings_IconCreationinFormFolder(strRowID,strValue)
'	Function BIZ_Settings_CreateCustomField(strRowID)
'	Function BIZ_Settings_DeletePreDefCustomField()
'	Function BIZ_Settings_DeleteCustomField(strRowID)
'	Function BIZ_Settings_AddIconInVerificationSetup()
'	Function BIZ_Settings_NavigateToBorrowerSummaryOrign()
'   Function BIZ_LoanSetup_CreateIcon(strRowID,strdesc)
'   Function BIZ_LoanSetup_ValidateTemplatewithExistingName(strRowID,strdesc,strNewIconName)
'   Function BIZ_LoanSetup_CreateDuplicateForm(strRowID,strdesc,strLoanProgram)
'	Function BIZ_LoanSetUp_Forms_ValidateinPrintwindow(strRowID,strText,StrFormName)
'	Function BIZ_Settings_DeleteFolderIfNotEmpty(strRowID,strButton,StrFormName)
'	Function BIZ_LoanSetup_Forms_CopyPasteOperationinFolders(strFormName,strFlderName,strFolderIn)
'	Function BIZ_Settings_LoanSetup_SetTrusteeDetails(strRowID)
'	Function BIZ_Settings_LoanSetup_EditTrusteeList(strRowID,strTrusteeName)
'	Function BIZ_Settings_LoanSetup_CreateTrusteeList(strRowID)
'	Function BIZ_Settings_LoanSetup_ValidateTrusteeListData(strRowID, strTrusteeName, strValidateWindow)
'	Function BIZ_Settings_LoanSetup_DeleteTrusteeList(strTrusteeName)
'	Function BIZ_Settings_Loansetup_PiggybackLoanSync_DeleteSyncField(strSyncFieldId)
'	Function BIZ_Settings_Loansetup_PiggybackLoanSync_CreateSyncField(strFieldID)
' 	Function BIZ_Settings_LoanSetup_SetDefaultInputFormSettings(strFormName,strDesc)
'	Function BIZ_Alerts_DisableAlert(strAlertsName)
'	Function BIZ_LoanSetup_Alerts_EditAlert(strRowID)
'	Function BIZ_Setting_Loansetup_DeleteDisclosureTrackingSettings(strRowID)
'	Function BIZ_Setting_Loansetup_CreateDisclosureTrackingSettings(strRowID)
'	Function BIZ_LoanSetup_VerifyMersMinNumberingStatus()
'	Function BIZ_LoanSetup_AddMersMinNumberingData(strRowID, ValueForCheckBox)
'	Function BIZ_LoanSetup_MakeEnableOrDisableMinMers(ValueForCheckBox)
'	Function BIZ_Settings_LoanSetup_SetZipcode(strRowID)
'	Function BIZ_Settings_LoanSetup_DeleteZipcode(strZipcode,strDialogYesorNo)
'	Function BIZ_Settings_Loansetup_SetChangedCircumstanceSetup(strRowId)
'	Function BIZ_Settings_Loansetup_DeleteChangedCircumstancesetup(StrDesc,strDialogYesorNo)
'	Function BIZ_LoanSetup_RESPA_CheckUncheckStatement(strOptionToCheckUncheck, strValue)
'	Function BIZ_Settings_LoanSetup_SetLog(strRowID)
'	Function BIZ_Loan_Tools_ConversationLog_AddNewLog(strRowID)
'	Function BIZ_LoanSetUp_AddDefaultTemplate(strRowID)
'	Function BIZ_LoanSetup_SetChannelOptions(strRowID)
'	Function BIZ_LoanSetup_ChannelOptions_Checked(strChannelOption,strCheckOnOrOff)
'	Function BIZ_Settings_Loansetup_CreateChangedCircumstanceSetup(strRowId)
'	Function BIZ_Settings_Loansetup_EditChangedCircumstanceSetup(strRowID,strCode)
'	Function BIZ_Settings_Loansetup_ChangedCircumstanceSetupSetData(strRowId)
'	Function BIZ_Settings_Loansetup_ValidateChangedCircumstanceSetup(strRowId,strCode)
'	Function BIZ_Settings_LoanSetup_DeleteCircumstanceSetup(strCode)
'	Function BIZ_LoanSetup_EditMERSMINNumbering(strRowID)
'	Function BIZ_LoanSetup_ValidateEditMERSMINNumbering(strStatus,strNextNumber)
'	Function BIZ_LoanSetup_VerifyMERSMINNumberingStatus(strStatus)
'	Function BIZ_LoanSetup_SetAutoMERSMINNumbering(strRowID)
'	Function BIZ_LoanSetup_ValidateAutoMERSMINNumbering(strRowID,strNextNumber)
'	Function BIZ_Setting_LoanSetup_DeleteTask(strTaskName)
'	Function BIZ_Setting_LoanSetup_EditTask(strRowID,strTaskName)
'	Function BIZ_Setting_LoanSetup_CreateTask(strRowID
'	Function BIZ_LoanCustomFields_AssignPersonaAccess(strRowID1,strFormName)
'	Function BIZ_LoanCustomFields_CreateNewForm(strRowID1)
'   Function BIZ_LoanCustomFields_CreateOrSetupNonAdminUser(strRowID1)
'	Function BIZ_LoanCustomFields_CreateCustom(strCustomFieldAction,strRowID1,strFormName)
'	Function BIZ_CustomFieldVerificationOnLoanFile(strCustomFieldAction,strRowID1,strFormName)
'	Function BIZ_LoanCustomFields_SelectCustomField(strRowID1,strFormName,strCustomField)
'	Function BIZ_ValidateCustomFieldInteger(strRowID1)
'	Function BIZ_ValidateCustomFieldString (strRowID1, "TextBox1")
'	Function BIZ_ValidateCustomFieldZipcode(strRowID1)
'	Function BIZ_ValidateCustomFieldSSN(strRowID1)
'	Function BIZ_ValidateCustomFieldDate(strRowID1)
'	Function BIZ_ValidateCustomFieldPhone(strRowID1)
'	Function BIZ_ValidateCustomFieldDecimal(strRowID1)
'	Function BIZ_ValidateCustomFieldYesorNo(strRowID1)
'	Function BIZ_ValidateCustomFieldDropDown(strRowID1)
'	Function BIZ_ValidateCustomFieldCheckBox(strRowID1)
'   Function BIZ_DeleteCustomField(strCustomField)
'	Function BIZ_GetCustomFormName(strRowID1,strFormAction)
'	Function BIZ_LoanSetup_EditOrValidateLoanDupFieldsWithDesc(strRowID,strValue,strCheckONOFF,strEditOrValidate)
'	Function BIZ_LoanSetup_DuplicateLoanNumber(strTemplate,strRadioButton)
'	Function BIZ_LoanSetUp_CustomPrintForms_Edit(strRowID,strFormName)
'	Function BIZ_Alerts_DeleteAlert(strAlertName)
'	Function BIZ_LoanSetup_CreatePrintFormGroupTemplateinFolder(strRowID,strdesc,strFldrName)
'	Function BIZ_Settings_LoanSetup_CreateCustomField(strRowID)
'   Function BIZ_Settings_LoanSetup_SetCustomFieldDetails(strCustomField,strRowID)
'	Function BIZ_Settings_LoanSetup_ValidateCustomField(strRowID)
'	Function BIZ_Settings_LoanSetup_EditCustomField(strRowID,strCustomField)
'	Function BIZ_Settings_LoanSetup_DeleteCustomField(strCustomField)
'	Function BIZ_LoanSetup_Alerts_CreateNewAlert(strRowID)
'	Function BIZ_LoanSetUp_PrintFormGroupEdit(strFormName,strRowID)
'	Function BIZ_Settings_LoanSetup_CreateLoanFolder(strRowID)
'	Function BIZ_LoanSetup_SearchLoanInLoanFolder(strPipeline,strLoanFolder)
'	Function BIZ_LoanSetup_DuplicateLoanInLoanFolder(strLoanFolder,strTemplate,strRadioButton)
'	Function BIZ_Settings_LoanSetup_EditLoanFolder(strRowID,strLoanFolder)
'	Function BIZ_LoanSetup_ValidateLoanFolderWithPopupMsg(strLoanFolder)
'	Function BIZ_LoanSetup_SearchWithLoanNumberInPipeline(strPipeline,strLoanFolder,strLoanNumber,strColTitle)
'	Function BIZ_LoanSetup_ComplianceCalendar_OurCompanyCalendar(strRowID)
'	Function BIZ_LoanSetup_DisclosureTrackingSettings(strRowID)
'   Function BIZ_LoanSetup_HMDASettings(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to enable Alert
'@code
'    BIZ_Alerts_EnableAlert(strAlertsName)
'@endcode
'@param strAlertsName - The name of alert

Function BIZ_Alerts_EnableAlert(strAlertsName)

	FRM_Logger_ReportInfoEvent "Loan SetUp;Alerts", "Enable '"&strAlertsName&"'in Alerts List", null

	Set objAlertSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AlertEditor")

	BIZ_Nav_HierarchyTree "Loan Setup","Alerts"
	BIZ_Alerts_Select strAlertsName, "Double"
	GUI_SwfRadioButton_Click objAlertSettings.SwfRadioButton("swfname:=radAlertEnabled")
	GUI_SwfButton_Click objAlertSettings.SwfButton("swfname:=btnSave")
	BIZ_Nav_Settings_Close 

	Set objAlertSettings = nothing
End Function



'This function is used to Select alert by name
'@code
'    BIZ_Alerts_Select(strAlertsName, strOrperateStyle)
'@endcode
'@param strAlertsName - The name of alert
'@param strOrperateStyle - "Double" or "Single" Click

Function BIZ_Alerts_Select(strAlertsName, strOrperateStyle)

	FRM_Logger_ReportInfoEvent "Loan SetUp;Alerts", "Select'"&strAlertsName&"'in Alerts List", null

	Set objAlertsList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvAlerts")
	Set AlertsScrollBar = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")
	BIZ_Alerts_Select = GUI_List_ClickRow(objAlertsList, AlertsScrollBar, "Name", strAlertsName, True, False, False, strOrperateStyle)	
	
	Set objAlertsList = nothing
	Set AlertsScrollBar = nothing	
End Function



'This function is used to Choose Triggers Date type
'@code
'    BIZ_AlertEditor_ChooseTriggersDate(strDateType)
'@endcode
'@param strDateType - "ApplicationDate" or "FileStartedDate"

Function BIZ_AlertEditor_ChooseTriggersDate(strDateType)

	FRM_Logger_ReportInfoEvent "Encompass Alerts Setting", "Select'"&strDateType&"'in Alerts List", null

	Set objWndAlertsEditor = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AlertEditor")
	GUI_SwfRadioButton_Click objWndAlertsEditor.SwfRadioButton("swfname:=rdo"&strDateType)
	
	Set objWndAlertsEditor = nothing	
End Function



'This function is used to save change in Encompass Alerts Setting window
'@code
'    BIZ_AlertEditor_Save()
'@endcode

Function BIZ_AlertEditor_Save()
	FRM_Logger_ReportInfoEvent "Encompass Alerts Setting", "Save changes", null
	
	Set objWndAlertsEditor = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AlertEditor")
	GUI_SwfButton_Click objWndAlertsEditor.SwfButton("swfname:=btnSave")
	
	Set objWndAlertsEditor = nothing	
End Function



'This function is used for creating Loan Folder
'@code
'    BIZ_Settings_CreateNewLoanFolder(strFolderName) 
'@endcode
'@param - strFolderName -string folder name for new folder

Function BIZ_Settings_CreateNewLoanFolder(strFolderName)
		Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    	If Not objSetupContainer.Exist(2) Then
        	BIZ_Nav_Settings_Open "Loan Setup"
    	End If
    	BIZ_Nav_HierarchyTree "Loan Setup", "Loan Folders"
    	
    	boolExist = GUI_List_ClickRow(objSetupContainer.SwfObject("swfname:=gvLoanFolders"), Null, 0,  strFolderName, False, False, False, "Single")
    	If Not boolExist Then
    		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnNew","index:=0")
    		If objSetupContainer.SwfWindow("swfname:=FolderSettingsDialog").Exist(5) Then
	        	GUI_SwfEdit_Set objSetupContainer.SwfWindow("swfname:=FolderSettingsDialog").SwfEdit("swfname:=txtBoxFolderName","index:=0"),strFolderName
	        	GUI_SwfCheckBox_Set objSetupContainer.SwfWindow("swfname:=FolderSettingsDialog").SwfCheckBox("swfname:=chkDupLoan","index:=0"),"OFF"
	    		GUI_SwfButton_Click objSetupContainer.SwfWindow("swfname:=FolderSettingsDialog").SwfButton("swfname:=btnOK","index:=0")    		
	    	End If
    	End If
    	BIZ_Nav_Settings_Close		
End Function



'Function to check if Rule is present and delete if present  in  Pane
'@code
'    BIZ_Tasks_DeleteExisting(strRowID)
'@endcode
'@see GUI_List_ClickRow
'@param strRowID- Row ID passed from the MainAction

Function BIZ_Tasks_DeleteExisting(strRowID)

	   FRM_Logger_ReportInfoEvent "Delete Tasks", "Delete Taskswith RowID"&strRowID, null

	   Dim objFieldDataEntryList, scrollbarFieldDataEntry, boolExist
	   Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=lvwTasks")
	   Set scrollbarFieldDataEntry = objFieldDataEntryList.SwfScrollBar("swfname:=vPanelScrollBar")
    
       Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredTasks", strRowID)
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqTasks1")) Then
	       strTaskName = FRM_DS_GetValue(objData, "AddReqTasks1")
	   End If
		
	   boolExist = GUI_List_ClickRow (objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strTaskName, True, False, False, "Single")

	   If boolExist  Then

        BIZ_Settings_ClickDelete
		BIZ_Settings_Dialog_ClickYes   
	   End If
	
	   Set objFieldDataEntryList = Nothing
	   Set scrollbarFieldDataEntry = Nothing
	   BIZ_Tasks_DeleteExisting = boolExist
	   
End Function



'Function to Add/Edit Tasks from Loan Setup Module
'@code
'    BIZ_Tasks_AddEditTasks(strRowID)
'@endcode
'@see GUI_List_ClickRow
'@param strRowID- Row ID passed from the MainAction

Function BIZ_Tasks_AddEditTasks(strRowID)

	   FRM_Logger_ReportInfoEvent "Add/Edit Tasks", "Add/Edit Tasks with RowID"&strRowID, null

	   Dim objMainContainer
	   Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=MilestoneTaskDetailSetupForm")
	   Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredTasks", strRowID)
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqTasks1")) Then
	       strTaskName = FRM_DS_GetValue(objData, "AddReqTasks1")
	   End If
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then
	       strDescription = FRM_DS_GetValue(objData, "Description")
	   End If
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DaysToComplete")) Then
	       strDaysToComplete = FRM_DS_GetValue(objData, "DaysToComplete")
	   End If
	   
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Priority")) Then
	      GUI_SwfComboBox_Select objMainContainer.SwfComboBox("swfname:=cboPriority"), FRM_DS_GetValue(objData, "Priority")
	   End If
	 
	   GUI_SwfEdit_Set objMainContainer.SwfEdit("swfname:=txtName"),strTaskName
	   GUI_SwfEditor_Type objMainContainer.SwfEditor("swfname:=txtDescription"),strDescription
	   GUI_SwfEdit_Set objMainContainer.SwfEdit("swfname:=txtDays"),strDaysToComplete
	   
	   GUI_SwfButton_Click objMainContainer.SwfButton("swfname:=btnOK")
	
	   Set objMainContainer = Nothing
	   Set objData = Nothing
	  
	  BIZ_Tasks_AddEditTasks = strTaskName
	   
End Function



'Function to Set Tasks from Loan Setup Module
'@code
'    BIZ_LoanSetup_SetTasks(strRowID)
'@endcode
'@param strRowID- Row ID passed from the MainAction

Function BIZ_LoanSetup_SetTasks(strRowID)

	   FRM_Logger_ReportInfoEvent "Set Tasks", "Set Tasks with RowID"&strRowID, null

	   Dim objMainContainer
	   Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=MilestoneTaskDetailSetupForm")
	   Set objData = FRM_DS_GetTestData("Settings_LoanSetup", "Task", strRowID)
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TaskName")) Then
	       strTaskName = FRM_DS_GetValue(objData, "TaskName")
	   End If
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then
	       strDescription = FRM_DS_GetValue(objData, "Description")
	   End If
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DaysToComplete")) Then
	       strDaysToComplete = FRM_DS_GetValue(objData, "DaysToComplete")
	   End If
	   
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Priority")) Then
	      GUI_SwfComboBox_Select objMainContainer.SwfComboBox("swfname:=cboPriority"), FRM_DS_GetValue(objData, "Priority")
	   End If
	 
	   GUI_SwfEdit_Set objMainContainer.SwfEdit("swfname:=txtName"),strTaskName
	   GUI_SwfEditor_Type objMainContainer.SwfEditor("swfname:=txtDescription"),strDescription
	   GUI_SwfEdit_Set objMainContainer.SwfEdit("swfname:=txtDays"),strDaysToComplete
	   
	   GUI_SwfButton_Click objMainContainer.SwfButton("swfname:=btnOK")
	
	   Set objMainContainer = Nothing
	   Set objData = Nothing
	  
	  BIZ_LoanSetup_SetTasks = strTaskName
	   
End Function
    

  
'Function to select the TAsks present and perform a Single Click or Double Click
'@code
'    BIZ_Tasks_SelectExistingTasks(strRowID,strAction)
'@endcode
'@param strAction - action to be checked ie "Single" or "Double"
'@param strRowID - Task name to be checked 
'@see GUI_List_ClickRow

Function BIZ_Tasks_SelectExistingTasks(strRowID,strAction)

	   FRM_Logger_ReportInfoEvent "Select Existing Task", "Select Existing Task with RowID"&strRowID, null

	   Dim objFieldDataEntryList, scrollbarFieldDataEntry 
	   Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=lvwTasks")
	   Set scrollbarFieldDataEntry = objFieldDataEntryList.SwfScrollBar("swfname:=vPanelScrollBar")
    
       Set objData = FRM_DS_GetTestData("BusinessRule_LoanActionCompletion", "RequiredTasks", strRowID)
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AddReqTasks2")) Then
	       strTaskName = FRM_DS_GetValue(objData, "AddReqTasks2")
	   End If
	   print "strTaskName"&strTaskName
	   GUI_List_ClickRow objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strTaskName, True, False, False, strAction
	
	   Set objFieldDataEntryList = Nothing
	   Set scrollbarFieldDataEntry = Nothing

End Function



'This function is used to delete existing Print Form Group row from the list
'@code
'    Function BIZ_PrintFormGroups_DeleteExisting(strPrintFormGroups)
'@endcode
'@param strPrintFormGroups - Print Form Group name

Function BIZ_PrintFormGroups_DeleteExisting(strPrintFormGroups)

	FRM_Logger_ReportInfoEvent "Delete Print Form Group", "Delete Print Form Group with name: " & strPrintFormGroups , null

	Dim objPrintFormGroupList, scrollbarPrintFormGroup, exist
	Set objPrintFormGroupList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Set scrollbarPrintFormGroup = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	exist = GUI_List_ClickRow (objPrintFormGroupList, scrollbarPrintFormGroup, "Name", strPrintFormGroups, True, False, False, "Single")

	If exist  Then

        GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDelete"), "SwfObject", "Delete Closing Costs"
		GUI_Dialog_Encompass_Yes ""

	End If
	
	Set objPrintFormGroupList = Nothing
	Set scrollbarPrintFormGroup = Nothing

End Function



'This function is used to create new Print Form Group
'@code
'    Function BIZ_PrintFormGroups_CreateNew(strPrintFormGroup)
'@endcode
'@param strPrintFormGroup - Print Form Group name

Function BIZ_PrintFormGroups_CreateNew(strPrintFormGroup)
	
	FRM_Logger_ReportInfoEvent "Create new Print Form Group", "Create new Print Form Group with name: " & strPrintFormGroup, null

	Dim objSettingsWindow, objPrintFormGroup, scrollbarPrintFormGroup
	Set objSettingsWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPrintFormGroup = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Set scrollbarPrintFormGroup = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_Click objSettingsWindow.SwfObject("swfname:=btnAdd"), "SwfObject", "Add Print Form Group"
	
	GUI_SwfEdit_Set objSettingsWindow.SwfEdit("micclass:=SwfEdit"), strPrintFormGroup
    GUI_Object_Click objPrintFormGroup, "SwfObject", "Print Form Group List"
	BIZ_PrintFormGroups_CreateNew=strPrintFormGroup
    
	Set objSettingsWindow = Nothing
	Set objPrintFormGroup = Nothing
	Set scrollbarPrintFormGroup = Nothing
	
End Function



'This function is used to open an existing Print Form Group
'@code
'    Function BIZ_PrintFormGroups_Open(strPrintFormGroup)
'@endcode
'@param strPrintFormGroup - Print Form Group name
'@param strPrintFormGroup - Print Form Group name

Function BIZ_PrintFormGroups_Open(strPrintFormGroup)

	FRM_Logger_ReportInfoEvent "Open Print Form Group", "Open Print Form Group with name: " & strPrintFormGroup, null

	Dim objPrintFormGroup, scrollbarPrintFormGroup, exist
	Set objPrintFormGroup = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Set scrollbarPrintFormGroup = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	exist = GUI_List_ClickRow (objPrintFormGroup, scrollbarPrintFormGroup, "Name", strPrintFormGroup, True, False, False, "Single")

	If exist  Then

        GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnOpen"), "SwfObject", "Open Print Form Group"

	End If
	
	Set objPrintFormGroup = Nothing
	Set scrollbarPrintFormGroup = Nothing

End Function



'This function is used for deleting Loan Folder
'@code
'    BIZ_Settings_DeleteLoanFolder(strLoanFolder) 
'@endcode
'@param - strLoanFolder -string folder name for new folder    

Function BIZ_Settings_DeleteLoanFolder(strLoanFolder)

	FRM_Logger_ReportInfoEvent "Delete Loan Folder", "Delete Loan Folder with name "&strLoanFolder, null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry, boolExist
	BIZ_Nav_HierarchyTree "Loan Setup", "Loan Folders"
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FolderSettingsForm").SwfObject("swfname:=gvLoanFolders")
	
	boolExist = GUI_List_ClickRow (objFieldDataEntryList, scrollbarFieldDataEntry, "Folder Name", strLoanFolder, True, False, False, "Single")

	If boolExist  Then
		FRM_Logger_ReportInfoEvent "Click on Delete icon: "&strLoanFolder, "Click on 'Delete Icon' for "&strLoanFolder, null	
      	BIZ_Settings_ClickDelete
		FRM_Logger_ReportPassEvent "Delete button click for: "&strLoanFolder, "Clicked on 'Delete Icon' "&strLoanFolder&" successfully", null	
		BIZ_Settings_Dialog_ClickYes
	
	End If
	
	Set objFieldDataEntryList = Nothing
	
	BIZ_Settings_DeleteLoanFolder = boolExist
End Function



'This function is used to create new Alert
'@code
'    BIZ_Alerts_CreateNewAlert(strRowID)
'@endcode
'@param strRowID - The row ID

Function BIZ_Alerts_CreateNewAlert(strRowID)

FRM_Logger_ReportInfoEvent "Loan SetUp;Alerts", "Create new alert using rowID "&strRowID,NULL

Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnAdd")

BIZ_Alerts_SetAlertData(strRowID)

Set objSettings = Nothing

End Function
    

    
'This function is used for checking UI of Loan Folder
'@code
'    BIZ_Settings_LoanSetUpCheckUI(strLoanFolder) 
'@endcode
'@param - strLoanFolder -string folder name for new folder  

Function BIZ_Settings_LoanSetUpCheckUI(strLoanFolder)

	FRM_Logger_ReportInfoEvent "Checking LoanFolders UI", "Checking of  Loanfolders UI started", Null

	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objforms = objSettings.SwfObject("swfname:=gvLoanFolders")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
	Set objData = FRM_DS_GetTestData("LoanSetup", "AddLoanFolder", strLoanFolder)
	
	strHeadervalue=objSettings.SwfLabel("swfname:=lblHeader").GetROProperty("Text")
	If strHeadervalue = "Loan Folders" Then
		FRM_Logger_ReportPassEvent "Checking Loan Folder Window Title","Loan Folder window title got dispalyed as"&strHeadervalue, Null
	Else
		FRM_Logger_ReportFailEvent "Checking Loan Folder Window Title","Loan Folder window title is not dispalyed as"&strHeadervalue, Null
	End If
	
	strHeadertextvalue=objSettings.SwfLabel("swfname:=lblSubTitle").GetROProperty("Text")
	If strHeadertextvalue = "Create loan folders to organize loans into groups." Then
		FRM_Logger_ReportPassEvent "Checking LoanFolder verbiage Title Text","LoanFolder verbiage title text got dispalyed as"&strHeadertextvalue, Null
	Else
		FRM_Logger_ReportFailEvent "Checking LoanFolder verbiage Title Text","LoanFolder verbiage title text is not dispalyed as"&strHeadertextvalue, Null
	End If
	
	Set objForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").swfobject("swfname:=gvLoanFolders")
	GUI_List_ValidateColumnName objForm,"Folder Name"
	GUI_List_ValidateColumnName objForm,"Archive Folder"	 
	GUI_List_ValidateColumnName objForm,"Duplicate Loan Check"
	
	addbtn = objSettings.SwfObject("swfname:=stdIconBtnNew").GetROProperty("enabled")
	If addbtn=True Then
		FRM_Logger_ReportPassEvent "Verify Add button enabled or not", "Add Button is enabled", null
	Else
		FRM_Logger_ReportFailEvent "Verify Add button enabled or not", "Add Button is disabled", null
	End If
	
	delbtn = objSettings.SwfObject("swfname:=stdIconBtnDelete").GetROProperty("enabled")
	If delbtn=False Then
		FRM_Logger_ReportPassEvent "Verify Delete button enabled or not", "Delete Button is disabled", null
	Else
		FRM_Logger_ReportFailEvent "Verify Delete button enabled or not", "Delete Button is enabled", null
	End If
	
	editbtn = objSettings.SwfObject("swfname:=stdIconBtnEdit").GetROProperty("enabled")
	If editbtn=False Then
		FRM_Logger_ReportPassEvent "Verify Edit button enabled or not", "Edit Button is disabled", null
	Else
		FRM_Logger_ReportFailEvent "Verify Edit button enabled or not", "Edit Button is enabled", null
	End If
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_Object_GetPropertyValue objSettings.SwfObject("swfname:=gcLoanFolders"),"Text"
	strLoanFolders=GUI_Object_GetPropertyValue(objSettings.SwfObject("swfname:=gcLoanFolders"),"Text") 
	strValue=split(strLoanFolders," ") 
	FRM_Logger_ReportInfoEvent "Checking LoanFolders Available Count", strLoanFolders&" are Available" , Null
	FRM_Logger_ReportInfoEvent "Checking LoanFolders Available Count", strValue(0)&" are Available" , Null
	FRM_Logger_ReportInfoEvent "Checking LoanFolders Available Count", strValue(2)&" are Available" , Null 
	
	GUI_List_ActOnRow objforms,1,True,False,False,"Single"
	
	addbtn = objSettings.SwfObject("swfname:=stdIconBtnNew").GetROProperty("enabled")
	If addbtn=True Then
		FRM_Logger_ReportPassEvent "Verify Add button enabled or not", "Add Button is enabled", null
	Else
		FRM_Logger_ReportFailEvent "Verify Add button enabled or not", "Add Button is disabled", null
	End If
	
	delbtn = objSettings.SwfObject("swfname:=stdIconBtnDelete").GetROProperty("enabled")
	If delbtn=True Then
		FRM_Logger_ReportPassEvent "Verify Delete button enabled or not", "Delete Button is enabled", null
	Else
		FRM_Logger_ReportFailEvent "Verify Delete button enabled or not", "Delete Button is disabled", null
	End If
	
	editbtn = objSettings.SwfObject("swfname:=stdIconBtnEdit").GetROProperty("enabled")
	If editbtn=True Then
		FRM_Logger_ReportPassEvent "Verify Edit button enabled or not", "Edit Button is enabled", null
	Else
		FRM_Logger_ReportFailEvent "Verify Edit button enabled or not", "Edit Button is disabled", null
	End If
	
	Set objSettings = nothing
	Set objData = nothing
	Set objForm = nothing
	Set objScrollbar = nothing 
  	Set objforms = nothing
End Function
 


'This function is used for Add Loan Folder
'@code
'    BIZ_Settings_AddLoanFolder() 
'@endcode
'@param - strLoanFolder -string folder name for new folder    
   
Function BIZ_Settings_AddLoanFolder (strRowID)

	Dim objMainView,objMaincheck,objData,strArc,strDup
	FRM_Logger_ReportInfoEvent "BIZ_Settings_AddLoanFolder", "BIZ_Settings_AddLoanFolder with "&strRowID, null
	Set objMaincheck=SwfWindow("name:=MainForm").SwfWindow("name:=SetUpContainer").SwfWindow("name:=FolderSettingsDialog").SwfCheckBox("name:=chkDupLoan") 
	GUI_SwfCheckbox_Set objMaincheck,"OFF"
	Set objMainView=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FolderSettingsDialog")
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "AddLoanFolder", strRowID)
	strLoanFolder=FRM_DS_GetValue(objData, "FolderName")
	strArc=FRM_DS_GetValue(objData, "ArchiveFolder")
	strDup=FRM_DS_GetValue(objData, "DuplicateLoanCheck")
	strFolderName=strLoanFolder&UTIL_Math_RandomNo
	If objMainView.exist =True then
		FRM_Logger_ReportInfoEvent "Checking Window Existence", "'CreateLoanFolder' window Exist successfully", null
	End If
	GUI_WinEdit_Set objMainView.SwfEdit("swfname:=txtBoxFolderName"),strFolderName
	If strArc="ON" Then
		Set objArch=objMainView.SwfCheckBox("name:=chkBoxArchiveFolder") 
		GUI_SwfCheckbox_Set objArch,strArc
	End IF
	If strDup="ON" Then
		Set objDup=objMainView.SwfCheckBox("name:=chkDupLoan") 
		GUI_SwfCheckbox_Set objDup,strDup
	End IF
	GUI_SwfButton_Click (objMainView.SwfButton("name:=btnOK"))
	FRM_DS_SetCellData "Settings_Loansetup", "AddLoanFolder", strRowID, "FolderID", strFolderName
	FRM_Logger_ReportPassEvent "Create the folder for "&strRowID&" in LoanSetup", "Created the folder "&strFolderName&" for "&strRowID&" in Settings_Loansetup", null
	Set objMainView = Nothing
	Set objMaincheck = Nothing
	Set objData = Nothing
	
End Function
	

    
'This function is used for Verify Loan Folder in Pipeline
'@code
'    BIZ_Settings_EditLoanFolder() 
'@endcode
'@param - strRowID -Row ID to which edit is to be done

Function BIZ_Settings_EditLoanFolder(strRowID,Arc,Dup)

	FRM_Logger_ReportInfoEvent "Edit Loan Folder", "Edit LoanFolder with name "&strLoanFolder, null
	Dim objFieldDataEntryList, boolExist,EditFolderName,objArc,objDup
	BIZ_Nav_HierarchyTree "Loan Setup", "Loan Folders"
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FolderSettingsForm").SwfObject("swfname:=gvLoanFolders")
	boolExist = GUI_List_ClickRow (objFieldDataEntryList, scrollbarFieldDataEntry, "Folder Name", strLoanFolder, True, False, False, "Single")
	If boolExist  Then
		BIZ_Settings_ClickEdit
	End if
	Set EditFolderName = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FolderSettingsDialog").SwfObject("swfname:=txtBoxFolderName").object.ReadOnly
	If EditFolderName=True Then
		FRM_Logger_ReportPassEvent "Unable to Edit the Loan Folder", "Passed successfully", null
	Else	
		FRM_Logger_ReportFailEvent "Unable to Edit the Loan Folder", "Failed:Able to edit the folder", null
	End If
	Set objArc=SwfWindow("name:=MainForm").SwfWindow("name:=SetUpContainer").SwfWindow("name:=FolderSettingsDialog").SwfCheckBox("name:=chkBoxArchiveFolder") 
	GUI_SwfCheckbox_Set objArc,Arc
	Set objDup=SwfWindow("name:=MainForm").SwfWindow("name:=SetUpContainer").SwfWindow("name:=FolderSettingsDialog").SwfCheckBox("name:=chkDupLoan") 
	GUI_SwfCheckbox_Set objDup,Dup
	Set objMainView =  Nothing
	Set objData = Nothing
	Set EditFolderName = Nothing
	Set objArc = Nothing
	Set objDup = Nothing
	
End Function



'Added by Vasantha k on 12/7/2016
'This function is used for Checking Buttton Disable Property in Loansetup
'@code
'    BIZ_LoanSetUp_ButtonDisablecheck() 
'@endcode
'Para:strButtonName  Name Property of the Button
'strDesc :Description of the Button

Function BIZ_LoanSetUp_ButtonDisablecheck(strButtonName,strDesc)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	strbtnprop=objSettings.SwfObject("swfname:="&strButtonName).GetROProperty("enabled")
	If strbtnprop="False" Then
	    FRM_Logger_ReportPassEvent "Checking"&strDesc&"Button Disable Property",strDesc&"Button is Disabled", Null
	Else
		FRM_Logger_ReportPassEvent "Checking"&strDesc&" Button Disable Property",strDesc&"Button is not Disabled", Null
	End If
	Set objSettings = nothing
End Function



'Added by Vasantha k on 12/7/2016
'This function is used for Checking Buttton Enable Property in Loansetup
'@code
'    BIZ_LoanSetUp_ButtonEnablecheck() 
'@endcode
'Para:strButtonName  Name of the Button
'strDesc :Description of the Button

Function BIZ_LoanSetUp_ButtonEnablecheck(strButtonName,strDesc)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	strbtnprop=objSettings.SwfObject("swfname:="&strButtonName).GetROProperty("enabled")
	If strbtnprop="True" Then
	    FRM_Logger_ReportPassEvent "Checking"&strDesc&"Button Enable Property",strDesc&"Button is Enabled", Null
	Else
		FRM_Logger_ReportPassEvent "Checking"&strDesc&" Button Enable Property",strDesc&"Button is not Enabled", Null
	End If
	Set objSettings = nothing
End Function



'Added by Vasantha k on 12/8/2016
'This function is used for Conditionform UI validation
'@code
'    BIZ_LoanSetUp_ConditionForms_UIVerfication() 
'@endcode

Function BIZ_LoanSetUp_ConditionForms_UIVerfication()  
	FRM_Logger_ReportInfoEvent "Checking ConditionForms UI", "Checking of  ConditionForms UI was started", Null
	Dim objSettings,objConditionForms,strConditionFormsCount
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objConditionForms = objSettings.SwfObject("swfname:=gvDirectory")
	
	GUI_Object_ValidateProperty objSettings.SwfLabel("swfname:=lblHeader"), "Text", "Condition Forms", "Header Value"
	GUI_Object_ValidateProperty objSettings.SwfLabel("swfname:=lblSubTitle"), "Text", "Create custom condition forms.", "ConditionForms Window Title Text"

	GUI_List_ValidateColumnName objConditionForms,"Name"
	 
	GUI_Object_ValidateDisabled objSettings.SwfButton("swfname:=btnDuplicate"),"Duplicate"
	GUI_Object_ValidateDisabled objSettings.SwfButton("swfname:=btnOpen"),"Open"
	GUI_Object_ValidateDisabled objSettings.SwfButton("swfname:=btnDelete"),"Delete"
	GUI_Object_ValidateDisabled objSettings.SwfButton("swfname:=btnRename"),"Rename"
	GUI_Object_ValidateDisabled objSettings.SwfButton("swfname:=btnAdd"),"New Icon"
	
		
	strConditionFormsCount=GUI_Object_GetPropertyValue(objSettings.SwfObject("swfname:=gcListView"),"Text")	
	strValue=split(strConditionFormsCount,"  ")	
	FRM_Logger_ReportInfoEvent "Checking ConditionFormsCount Available Count", strValue(0)&"are Available" , Null
	
	GUI_List_ActOnRow objConditionForms,1,True,False,False,"Single"
	
	GUI_Object_ValidateEnabled objSettings.SwfButton("swfname:=btnDuplicate"),"Duplicate"
	GUI_Object_ValidateEnabled objSettings.SwfButton("swfname:=btnOpen"),"Open"
	GUI_Object_ValidateEnabled objSettings.SwfButton("swfname:=btnDelete"),"Delete"
	GUI_Object_ValidateEnabled objSettings.SwfButton("swfname:=btnRename"),"Rename"
	GUI_Object_ValidateEnabled objSettings.SwfButton("swfname:=btnAdd"),"New Icon"
	
	Set objSettings = nothing
	Set objConditionForms = nothing
	  	
End Function



'This function is used for Duplicate the Loansetup Form
'@code
'    BIZ_LoanSetup_CreateDuplicateForm(strdesc,strFormName) 
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel
'@Param strdesc - loansetup form description
'@Param strFormName - loan program

Function BIZ_LoanSetup_CreateDuplicateForm(strdesc,strFormName)
	
	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_CreateDuplicateForm", "Create Duplicate Form functionality started for '"&strdesc &"'", null
    
    Dim  objSettings,objListView,objScrollbar,boolExist,boolValue    
   
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	FRM_Logger_ReportInfoEvent "Selected an existing form",strFormName &" is selected for Duplicate", null
	boolExist = GUI_List_ClickRow(objListView, objScrollbar, "Name", strFormName, True, False, False, "Single")	
	FRM_Logger_ReportInfoEvent "Loan Set Up 'Duplicate' the Name","Duplicate creation for the record '"&strFormName&"'" ,null
	If boolExist = True Then
		FRM_Logger_ReportInfoEvent "Click on Duplicate Button ","Duplicate button is clicked to Create Duplicate Record",null
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDuplicate")		
		UTIL_Win_SendKey "{ENTER}"
		Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
		boolValue=GUI_List_TextExists (objListView,"Name","Copy of "&strFormName)
		FRM_VerifyTrue boolExist, "Verify Duplicate Form Exist", "Duplicate Template 'Copy of "&strFormName&"' Created successfully"
	Else
		FRM_Logger_ReportFailEvent "Loan Set Up 'Duplicate' the Name","Record not exist in the GUIList", null
	End If
	
	Set objSettings  = Nothing
	Set objListView  = Nothing
	Set objScrollbar = Nothing
	
	BIZ_LoanSetup_CreateDuplicateForm=  "Copy of "&strFormName 
End Function



'This function is used for Delete the created Forms data in Loansetup
'@code
'    BIZ_LoanSetup_DeleteIcon(strRowID,strdesc) 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel
'strdesc:loansetup form description
'strButton:Required Button property

Function BIZ_LoanSetup_DeleteIcon(strRowID,strdesc,strButton )
	
	FRM_Logger_ReportInfoEvent "Deleting the icon in "&strdesc, "Deleting the Icon in  "&strdesc &" is started", null
    Dim  objSettings,objClosingCostsList,objScrollbar,objData       
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
   
    FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_DeleteIcon", "Set BIZ_LoanSetup_DeleteIcon using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null    
        	
		
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add Newicon in "&strdesc 	
	
	strNewIconName=FRM_DS_GetValue(objData, "FormName")
	strNewIconName=strNewIconName&UTIL_Math_RandomNo
	
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName	
    GUI_SwfObject_Click objListView
    
	FRM_DS_SetCellData "Settings_Loansetup", "Forms", strRowID, "FormName", strNewIconName
			   
	boolExist = GUI_List_ClickRow(objListView, objScrollbar, "Name", strNewIconName, True, False, False, "Single")	
	FRM_Logger_ReportInfoEvent "Deleting the record for item"&strNewIconName, strNewIconName& " Row selected to delete the record", null    
	If boolExist = True Then	
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDelete")	
		FRM_Logger_ReportInfoEvent "Deleting the record in Condition Forms", "Clicked on delete Button", null    
		Set objSettingsDialog=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
	 
	 	if GUI_Object_IsExistX(objSettingsDialog,10 )= "True" then 
	 	 strvalDialog=FRM_DS_GetValue(objData,"StaticMsg")& " '"&strNewIconName&"'?"
	 	 FRM_Logger_ReportInfoEvent "Validating Encompass dialog Existance", "Encompass Dialog Box  exist", null
		 GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"Popup Dialog's Static Message"	
		 FRM_Logger_ReportInfoEvent "selected delete option is "&strButton, strButton& " button is selected", null
		 If strButton ="Yes" Then
		 GUI_WinButton_Click objSettingsDialog.WinButton("text:=&Yes")
		 FRM_Logger_ReportInfoEvent "Clicking on Encompass Dialog Yes  Button", "Yes  button clicked", null
		 Else  
		 GUI_WinButton_Click objSettingsDialog.WinButton("text:=&No")
		 FRM_Logger_ReportInfoEvent "Clicking on Encompass Dialog No  Button", "No button cliked", null
		 End If
		 wait 1 
		 Strtext=GUI_List_TextExists (objListView,"Name",strNewIconName)
		 If Strtext = True  Then
		 FRM_Logger_ReportInfoEvent "Validting the selected form deleted or not", "Selected form "&strNewIconName&" Not deleted", null
		 Else
		 FRM_Logger_ReportInfoEvent "Validting the selected form deleted or not", "Selected form "&strNewIconName&"  deleted", null
		 End If
		 else
			FRM_Logger_ReportFailEvent "Validating Encompass Dialog Existance", "Encompass Dialog Box was not Exist", null
		End If	
	End if 	
	Set objSettings = nothing
	Set objListView = nothing
	Set objScrollbar = nothing
	Set objMainView=nothing

End Function



'This function is used to select Folder tab
'@code
'    BIZ_LoanSetup_SelectFolder
'@endcode
'@param strFolderName - Setting the FolderName

Function BIZ_LoanSetup_SelectFolder(strFolderName)
    
	FRM_Logger_ReportInfoEvent "Select Folder", "Select '"&strFolderName&"' Folder", null
    If Not UTIL_String_IsEmpty(strFolderName) Then
        GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbBoxFolder"),strFolderName
    End If 

End Function


	
'This function is used for Adding NewFolder LoansetupForms
'@code
'    BIZ_Settings_AddAndRenameFolderCustomPrintForms(strRowID,strdesc) 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel
'Strdesc"Loanset up form description

Function BIZ_Settings_AddAndRenameFolderCustomPrintForms(strRowID,strdesc)

	FRM_Logger_ReportInfoEvent "Create a Folder in "&strdesc, "Creating a Folder in "&strdesc &" has started", null
    Dim  objSettings,objListView,objScrollbar,objData
    
    FRM_Logger_ReportInfoEvent "BIZ_Settings_AddAndRenameFolderCustomPrintForms", "Set BIZ_Settings_AddAndRenameFolderCustomPrintForms using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
    
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	
	GUI_Object_Click objSettings.SwfObject("swfname:=btnNewFolder"), "SwfObject", "Add folder in "&strdesc 
	GUI_SwfObject_Click objListView
	strrc=objListView.Object.items.count
	strDefaulticon=objListView.Object.Items.Item(strrc-1).Subitems.Item(0).Text
	
	FRM_Logger_ReportInfoEvent "Verifying Default Folder Name", "Default Folder Name created as "&strDefaulticon, null
	
	GUI_Object_Click objSettings.SwfObject("swfname:=btnNewFolder"), "SwfObject", "Add Folder in "&strdesc 	
	
	strNewFolderName=FRM_DS_GetValue(objData, "FolderName")
	strNewFolderName=strNewFolderName&UTIL_Math_RandomNo
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnNewFolder")
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strNewFolderName	
    GUI_SwfObject_Click objListView
    
	FRM_DS_SetCellData "Settings_Loansetup", "Forms", strRowID, "FolderName", strNewFolderName
	
    GUI_Object_Click objListView, "SwfObject", strdesc
	GUI_List_TextExists objListView,"Name",strNewFolderName
	
	FRM_Logger_ReportPassEvent "Adding New Folder in"&strdesc,"New Folder in "& strdesc&" Was added Successfully",null
	
	GUI_Object_Click objSettings.SwfObject("swfname:=btnNewFolder"), "SwfObject", "Add Folder in "&strdesc
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewFolderName
	 
	FRM_Logger_ReportInfoEvent "Creating New Folder with Existed "&strdesc& "name", strNewFolderName&"name set for"&strdesc, null
	 
	GUI_SwfObject_Click objListView
	 
	Set objSettingsDialog=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
	 
	If GUI_Object_IsExistX(objSettingsDialog,10 )= "True" then 
		FRM_Logger_ReportInfoEvent "Validating Encompass Dialog Existance", "Encompass Dialog Box was Exist", null
		GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),FRM_DS_GetValue(objData,"StaticMsg"),"Popup Dialog's Static Message"		 	
		GUI_WinButton_Click objSettingsDialog.WinButton("text:=OK")
		FRM_Logger_ReportInfoEvent "Clicking on Encompass Dialog Ok Button", "Ok button Was clicked", null
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewFolderName&"1"
		GUI_SwfObject_Click objListView
	Else
		FRM_Logger_ReportFailEvent "Validating Encompass Dialog Existance", "Encompass Dialog Box was not Exist", null
	End If	
	      
	Set objSettings = nothing
	Set objListView = nothing
	Set objScrollbar = nothing
	Set objSettingsDialog=nothing

End Function

	
	
'This function is used for CopyPaste CustomPrintForms
'@code
'    BIZ_Settings_CopyPasteInSameFolders(strRowID,strdesc,strData) 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel
'Strdesc"Loanset up form description
'strData"ColName from the respective datasheet

Function BIZ_Settings_CopyPasteInSameFolders(strRowID,strdesc,strData)
     
    FRM_Logger_ReportInfoEvent "BIZ_Settings_CopyPasteInSameFolders", "BIZ_Settings_CopyPasteInSameFolders in CustomPrintForms using Row Id '"&strRowID&"' in the Settings_Loansetup datasheet", null 
	
	Dim  objSettings,objLoanProgramList,objScrollbar,objData,LoanProgramSettings
	
	FRM_Logger_ReportInfoEvent "Copy customformName of the "&strdesc, "Copy Name and Paste in CustomPrintForms in "&strdesc &" using Row Id '"&strRowID&"' in the Settings_setup datasheet", null
	
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar") 
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", CStr(FRM_DS_GetValue(objData, strData)), True, False, False, "Single" 
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCopy") 
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")
	FolderName = CStr(FRM_DS_GetValue(objData, strData))	
	GUI_SwfObject_Click objLoanProgramList
	
	Set LoanProgramSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Template = objSettings.SwfLabel("swfname:=lblHeader").GetROProperty("Text")
	GUI_Object_WaitTillExistX LoanProgramSettings, 120 
	GetNewRowIndex  = GUI_List_GetRowIndexByPartialText(LoanProgramSettings, 0, FolderName)
	If(GetNewRowIndex > 0) Then 
		FRM_Logger_ReportPassEvent "CopyAndPaste of "&strdesc &" in custom print form","'Copy' of "&strdesc &" in custom print form "&FolderName&" is Created with the prefix Copy of under " & Template& " in custom print forms",null
	Else
		FRM_Logger_ReportFailEvent "CopyAndPaste of "&strdesc &" in custom print form","'Copy' of "&strdesc &" in custom print form "&FolderName&" is not Created under " & Template& " in custom print forms",null
	End If
	
	Set objData = Nothing	
	Set objSettings = Nothing
	Set objLoanProgramList = Nothing
	Set objScrollbar = Nothing
	Set LoanProgramSettings = Nothing
	
End Function



'This function is used for creating new personal form in CustomPrintForms
'@code
'    BIZ_Settings_AddPersonalCustomForm(strRowID,strdesc) 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel
'Strdesc"Loanset up form description

Function BIZ_Settings_AddPersonalCustomForm(strRowID,strdesc)
	
	FRM_Logger_ReportInfoEvent "Add a PersonalCustomForm in "&strdesc, "Creating a PersonalCustomForm in "&strdesc &" is started", null
    Dim  objSettings,objClosingCostsList,objScrollbar,objData
    
    FRM_Logger_ReportInfoEvent "BIZ_Settings_AddPersonalCustomForm", "Set BIZ_Settings_AddPersonalCustomForm using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
    
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add Newicon in "&strdesc 
	GUI_SwfObject_Click objListView
	strrc=objListView.Object.items.count
	strDefaulticon=objListView.Object.Items.Item(strrc-1).Subitems.Item(0).Text
	
	FRM_Logger_ReportInfoEvent "Verifying Default Icon Name", "Default Icon Name created as "&strDefaulticon, null
	
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add Newicon in "&strdesc 	
	
	strNewIconName=FRM_DS_GetValue(objData, "PersonalFormName")
	strNewIconName=strNewIconName&UTIL_Math_RandomNo
	
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName	
    GUI_SwfObject_Click objListView
    
	FRM_DS_SetCellData "Settings_Loansetup", "Forms", strRowID, "PersonalFormName", strNewIconName
	
    GUI_Object_Click objListView, "SwfObject", strdesc
	GUI_List_TextExists objListView,"Name",strNewIconName
	
	FRM_Logger_ReportPassEvent "Adding New PersonalCustomForm in"&strdesc,"New icon "&strNewIconName&" in "& strdesc&" is added Successfully",null
	
	Set objData = Nothing	
	Set objSettings = Nothing
	Set objListView = Nothing
	Set objScrollbar = Nothing
	
End Function



'This function is used for CopyPaste different folders in CustomPrintForms
'@code
'    BIZ_Settings_CopyPasteInDiffFolders(strRowID,strdesc,strData) 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel
'Strdesc"Loanset up form description
'strData"ColName from the respective datasheet

Function BIZ_Settings_CopyPasteInDiffFolders(strRowID,strdesc,strData)
     
    FRM_Logger_ReportInfoEvent "BIZ_Settings_CopyPasteInDiffFolders", "BIZ_Settings_CopyPasteInDiffFolders in CustomPrintForms using Row Id '"&strRowID&"' in the Settings_Loansetup datasheet", null 
	Dim  objSettings,objLoanProgramList,objScrollbar,objData
	FRM_Logger_ReportInfoEvent "Copy CustomPrintFormName of the "&strdesc, "Copy Name and Paste of "&strdesc&" in CustomPrintForms using Row Id '"&strRowID&"' in the Settings_setup datasheet", null
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar") 
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", CStr(FRM_DS_GetValue(objData, strData)), True, False, False, "Single" 
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCopy") 
	
	BIZ_LoanSetup_SelectFolder strdesc
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")
	FolderName = CStr(FRM_DS_GetValue(objData, strData))	
	GUI_SwfObject_Click objLoanProgramList
	Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
	Template = objSettings.SwfLabel("swfname:=lblHeader").GetROProperty("Text")
	GUI_Object_WaitTillExistX objLoanProgramList, 120 
	GetNewRowIndex  = GUI_List_GetRowIndexByPartialText(objLoanProgramList, 0, FolderName)
	
	If(GetNewRowIndex > 0) Then 
		FRM_Logger_ReportPassEvent "CopyAndPaste "&strdesc,"'Copy' of "&FolderName&" is Created for "&strdesc&" with the prefix Copy of under " & Template& " in custom print forms",null
	Else
		FRM_Logger_ReportFailEvent "CopyAndPaste "&strdesc,"'Copy' of "&FolderName&" is not Created for "&strdesc&" under " & Template& " in custom print forms",null
	End If
	
	Set objData            = Nothing	
	Set objSettings        = Nothing
	Set objLoanProgramList = Nothing
	Set objScrollbar       = Nothing
	
End Function



'This function is used for Rename of conditionForm
'@code
'    BIZ_LoanSetUp_ConditionForms_Rename() 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel

Function BIZ_LoanSetUp_ConditionForms_Rename(strRowID) 

 FRM_Logger_ReportInfoEvent "Renaming of Conditionforms", "Renaming of Conditionforms started", null
	       
 Dim  objSettings,objClosingCostsList,objScrollbar,objData,strconditionform 
 Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
 Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
 Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
 Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
 
 strconditionform=FRM_DS_GetValue(objData,"FormName")
 GUI_List_ClickRow objListView,objScrollbar, "Name", strconditionform, True, False, False, "Single"
 FRM_Logger_ReportInfoEvent "Renaming of Conditionforms", "Selecting "&strconditionform& " Existing record ", null
 GUI_SwfObject_Click objSettings.SwfButton("swfname:=btnRename") 
 FRM_Logger_ReportInfoEvent "Renaming of Conditionforms", "Selecting Rename Button", null
 GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strconditionform&"1"	
 GUI_SwfObject_Click objListView
  
 FRM_DS_SetCellData "Settings_Loansetup", "Forms", strRowID, "RenameForm", strconditionform&"1"
 
 GUI_Object_Click objListView, "SwfObject", strdesc
 boolExist=GUI_List_TextExists(objListView,"Name",strconditionform&"1")
 
 If boolExist=True Then
 FRM_Logger_ReportPassEvent "Renaming of Conditionforms", "The renamed Condition Form "&strconditionform&"1 appears in the Loan Condition Forms list.", null	
 Else 
 FRM_Logger_ReportFailEvent "Renaming of Conditionforms", "The renamed Condition Form "&strconditionform&"1 not appears in the Loan Condition Forms list.", null	
 End If
     
 Set objSettings=nothing
 Set objListView=nothing
 Set objScrollbar=nothing
 Set objData=nothing
	
End Function



'This function is used for Adding NewFolder in  Customprintforms
'@code
'    BIZ_Settings_CreateCustomPrintFormFolder(strRowID) 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel

Function BIZ_Settings_CreateCustomPrintFormFolder(strRowID)

	FRM_Logger_ReportInfoEvent "Creation of  CustomPrintFormFolder", "Creation of CustomPrintFormFolder started", null
	'Variable Declaration
	Dim  objSettings,objData,objListView,strNewIconName,strFoldername
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	strFoldername=FRM_DS_GetValue(objData, "FolderName")
	'Selecting Folder Type
	BIZ_LoanSetup_SelectFolder strFoldername
	FRM_Logger_ReportInfoEvent "Clicking on Add Button", "Add Button clicked to create new record", null	
	'Creating new folder in Custom Print Forms
	GUI_Object_Click objSettings.SwfObject("swfname:=btnNewFolder"), "SwfObject", "Add New Folder in CustomPrintForms" 
	FRM_Logger_ReportInfoEvent "Cliking on Add Button", "Creating a new folder in CustomPrintForms", null
	strNewIconName="CPF"&UTIL_Math_RandomNo
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName	
    GUI_SwfObject_Click objListView    
	FRM_DS_SetCellData "Settings_Loansetup", "Forms", strRowID, "FormName", strNewIconName	
    GUI_Object_Click objListView, "SwfObject", "CustomPrintforms"
	boolexist=GUI_List_TextExists (objListView,"Name",strNewIconName)
	FRM_VerifyTrue boolexist, "Verify Folder Creation", "Folder Created in Customprint forms with name "&strNewIconName	
		
	Set objData = nothing
	Set objSettings = nothing
	Set objListView = nothing
End Function



'This function is used for Adding icon in Existing Folder
'@code
'    BIZ_Settings_CustomPrintFormFolderIconCreation(strRowID) 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel

Function BIZ_Settings_CustomPrintFormFolderIconCreation(strRowID)
	FRM_Logger_ReportInfoEvent "Creation of Icon in CustomPrintFormFolder", "Creation of Icon in CustomPrintFormFolde started", null
	
	Dim  objSettings,objData,objListView,objScrollbar,strFoldername,strrc,strDefaulticon
	
	Set objData 	= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strFoldername=FRM_DS_GetValue(objData, "FolderName")
	strValue=FRM_DS_GetValue(objData, "FormName")
	BIZ_LoanSetup_SelectFolder strFoldername	
	GUI_List_ClickRow objListView, objScrollbar, "Name", strValue, True, False, False, "Double"
	FRM_Logger_ReportInfoEvent "Creation of Icon in CustomPrintFormFolder", "Double clicking on "&strValue&" Folder", null
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add New Icon in CustomPrintFormsFolder" 
	FRM_Logger_ReportInfoEvent "Clicing on Add Button", "Creating a 'new icon' in CustomPrintForms Folder", null
	strNewIconName="CPF"&UTIL_Math_RandomNo
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName	
    GUI_SwfObject_Click objListView
    GUI_Object_Click objListView, "SwfObject", "CustomPrintforms"
	boolexist=GUI_List_TextExists (objListView,"Name",strNewIconName)
	FRM_VerifyTrue boolexist, "Verify Icon Creation", "Icon Created in Customprint forms Folder with name "&strNewIconName
	
	Set objData 	= nothing
	Set objSettings = nothing
	Set objListView = nothing
End Function



'This function is used for Delete an existing Custom Print Folder
'@code
'    BIZ_Settings_DeleteFolder(strRowID,strButton,strdesc,strFormName) 
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel
'@Param strButton - Required Button property
'@Param strdesc - Description of Form
'@Param strFormName - Form name to Delete 

Function BIZ_Settings_DeleteFolder(strRowID,strButton,strdesc,strFormName)
	
	Dim  objSettings,objData,objListView,objScrollbar,objSettingsDialog,strFoldername,boolExist,strtext
	
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strFoldername=FRM_DS_GetValue(objData, "FolderName")
	
	FRM_Logger_ReportInfoEvent "Deletion of '"&strdesc&" Folder", "Deletion of "&strdesc& " in"&strFormName, null
	BIZ_LoanSetup_SelectFolder strFoldername	
	
	boolExist = GUI_List_ClickRow(objListView, objScrollbar, "Name", strFormName, True, False, False, "Single")		
	
	If boolExist Then	
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDelete")	
		FRM_Logger_ReportInfoEvent "Deleting the record in "&strdesc, "Clicked on delete Button", null    
		
		Set objSettingsDialog=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
		
	 	If GUI_Object_IsExistX(objSettingsDialog,10 )= "True" then 
			
			strValDialog = FRM_DS_GetValue(objData,"DelStatMsg")& " '"&strFormName&"'?"
			FRM_Logger_ReportInfoEvent "Validating Encompass dialog Existance", "Encompass Dialog Box  exist", null
			GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strValDialog,"Popup Dialog's Static Message"	
			FRM_Logger_ReportInfoEvent "selected delete option is "&strButton, strButton& " button is selected", null
			
			If strButton ="Yes" Then			 
				GUI_WinButton_Click objSettingsDialog.WinButton("text:=&Yes")
				FRM_Logger_ReportInfoEvent "Clicking on Encompass Dialog Yes  Button", "Yes  button clicked", null
				
				Wait g_TinyWaitLarge ' Due To Sync Issue We Are Explicitly Passing Wait Statement
				strText = GUI_List_TextExists (objListView,"Name",strFormName)
		 		If strText Then
					FRM_Logger_ReportFailEvent "Validting the selected form deleted or not", "Selected form "&strFormName&" Not deleted", null
				Else					
					FRM_Logger_ReportPassEvent "Validting the selected form deleted or not", "Selected form "&strFormName&"  deleted", null
				End If					
			Else  			 
				GUI_WinButton_Click objSettingsDialog.WinButton("text:=&No")
				FRM_Logger_ReportInfoEvent "Clicking on Encompass Dialog No  Button", "No button clicked", null	
				
				Wait g_TinyWaitLarge ' Due To Sync Issue We Are Explicitly Passing Wait Statement
				strText = GUI_List_TextExists (objListView,"Name",strFormName)
		 		If strText Then
					FRM_Logger_ReportPassEvent "Validting the selected form deleted or not", "Selected form "&strFormName&" Not deleted", null
				Else
					FRM_Logger_ReportFailEvent "Validting the selected form deleted or not", "Selected form "&strFormName&"  deleted", null
				End If				
			End If
		Else
		 FRM_Logger_ReportFailEvent "Validating Encompass Dialog Existance", "Encompass Dialog Box was not Exist", null
		End If	
	Else
		FRM_Logger_ReportFailEvent "Select Item in the grid", "'"&strFormName&"' item does not exist in grid", null
	End if 	
	
	Set objData				= Nothing
	Set objSettings 		= Nothing
	Set objListView 		= Nothing
	Set objScrollbar		= Nothing
	Set objSettingsDialog	= Nothing

End Function



'This function is used for Validate the display of newly created Forms in Print window
'@code
'    BIZ_LoanSetUp_Forms_ValidateinPrintwindow(strRowID,strText,StrFormName) 
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel
'@Param strText - Template name
'@Param StrFormName - Form Name

Function BIZ_LoanSetUp_Forms_ValidateinPrintwindow(strRowID,strText,StrFormName)

	FRM_Logger_ReportInfoEvent "Validate the display of newly created Forms in Print window", "Validate the display of newly created Forms in Print window started", null
	
	Dim objSettings,objData,objprint,objTabControl,strFoldername,strconditionform,intrc
	
	Set objSettings 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objprint		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objTabControl 	= objprint.SwfObject("swfname:=tabControlEx1")
	
	strFolderName=FRM_DS_GetValue(objData, "FolderName")
	GUI_Window_Close objSettings
	
	'Create New Blank Loan
	BIZ_Loan_AddNewBlankLoanUnderSelectedLoanFolder "Super Administrator - Default View","My Pipeline"
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"),"Forms"
	BIZ_Forms_Open "Borrower Summary - Origination"
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=printBtn", "index:=0")
	FRM_Logger_ReportInfoEvent "Validate the display of newly created Forms in Print window", "Clicked on Print Button", null
	GUI_SwfObject_SelectFormsTab objTabControl,strText
	FRM_Logger_ReportInfoEvent "Validate the display of newly created Forms in Print window", "Selecting "&strText& " Tab", null

	Select Case lcase (strText)
		Case Lcase("Form Groups")
			GUI_SwfComboBox_Select objprint.SwfComboBox("swfname Path:=cmbBoxFolder;gcFormGroups;FormGroupsCont.*"),strFolderName
			Set objviewfiles=objprint.SwfObject("swfname:=gridViewForms")
		Case Lcase("Standard Forms")
			GUI_SwfComboBox_Select objprint.SwfComboBox("swfname Path:=cboFormTypes;grpContainerForms;OutputForm.*"),strFolderName
			Set objviewfiles=objprint.SwfObject("swfname:=gridViewFiles")
		Case Lcase("Custom Forms")
			GUI_SwfComboBox_Select objprint.SwfComboBox("swfname Path:=cmbBoxFolder;gcCustomForms;CustomFormList.*"),strFolderName
			Set objviewfiles=objprint.SwfObject("swfname:=gridViewFiles")         
		Case Else
			FRM_Logger_ReportFailEvent "Select cases Option ", "Option is not valid '"&strText&"'", null
	End Select
	
	FRM_Logger_ReportInfoEvent "Select Folder", ""&strFolderName& " Folder is Selected", null
	
	intrc=objviewfiles.Object.Items.Count     
	For i =0 to  intrc-1
		strconditionform = objviewfiles.Object.Items.Item(i).Subitems.Item(0).Text	
		j=0
		If  Lcase(cstr(strconditionform))= Lcase(StrFormName) Then 
			j=j+1
			Exit For
		End If
	Next

	Wait g_LongWaitLarge*2  'Due to sync issue
	If j=1 Then
		FRM_Logger_ReportPassEvent "Validate the display of newly created Forms in Print window", StrFormName&" Form appearing in Print window", null
	Else
		FRM_Logger_ReportFailEvent "Validate the display of newly created Forms in Print window", StrFormName&"Form not appearing in Print window", null
	End if 

	GUI_Window_Close objprint
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=closeBtn")
	GUI_Dialog_Encompass_NoX 5, ""

	Set objSettings		 = Nothing
	Set objData			 = Nothing
	Set objprint		 = Nothing
	Set objTabControl 	 = Nothing

End Function



'This function is used to create new Sync Template
'@code
'    Function BIZ_SyncTemplate_CreateNew(strRowID)
'@endcode
'@param strRowID - Row Id passed from Settings_LoanSetup sheet

Function BIZ_SyncTemplate_CreateNew(strRowID)
	FRM_Logger_ReportInfoEvent "Create New", "Create a new Sync Template", null
	
	Dim objMainContainer
	Flag=false
	Set objData = FRM_DS_GetTestData("Settings_LoanSetup", "SetSyncTemplate", strRowID)

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	for i=0 to objMainContainer.SwfObject("swfname:=listView").Object.Items.Count()-1
	  If (instr(FRM_DS_GetValue(objData, "TemplateName"),objMainContainer.SwfObject("swfname:=listView").Object.Items.Item(i).text))  Then
	  	
  	Flag =true
  	Exit For 
	  End If
 Next
 If not Flag Then
 	GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnNew")
	
	BIZ_SyncTemplate_SetData strRowID
 End If

	Set objMainContainer = Nothing
	
End Function



'This function is used to set data in Sync Template
'@code
'	Function BIZ_SyncTemplate_SetData(strRowID)
'@endcode
'@param strRowID - Row Id passed from Settings_LoanSetup sheet

Function BIZ_SyncTemplate_SetData(strRowID)
	
	FRM_Logger_ReportInfoEvent "Set Data", "Set data in Sync Template", null
	
	Dim objMainContainer, objData

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objSyncTemplate = objMainContainer.SwfWindow("swfname:=SyncTemplateSetupDialog")
	Set objData = FRM_DS_GetTestData("Settings_LoanSetup", "SetSyncTemplate", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TemplateName")) Then        
        GUI_SwfEdit_Set objSyncTemplate.SwfEdit("swfname:=txtName"), FRM_DS_GetValue(objData, "TemplateName")        		
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then        
        GUI_SwfEditor_Type objSyncTemplate.SwfEditor("swfname:=txtDescription"), FRM_DS_GetValue(objData, "Description")        		
	End If
	If FRM_DS_GetValue(objData, "DefaultList") = "Yes" Then        
        GUI_SwfButton_Click objSyncTemplate.SwfButton("swfname:=defaultBtn")      		
	End If
		
	GUI_SwfButton_Click objSyncTemplate.SwfButton("swfname:=btnSave")  
	
	Set objMainContainer = Nothing
	Set objSyncTemplate = Nothing
	Set objData = Nothing
	
End Function



'This function is used to delete Sync Template
'@code
'	Function BIZ_SyncTemplate_Delete(strRowID)
'@endcode
'@param strRowID - Row Id passed from Settings_LoanSetup sheet

Function BIZ_SyncTemplate_Delete(strRowID)

	Set objMainContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objSyncTemplate = objMainContainer.SwfObject("swfname:=listView")
	Set objScrollBar = objMainContainer.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData = FRM_DS_GetTestData("Settings_LoanSetup", "SetSyncTemplate", strRowID)
	
	FRM_Logger_ReportInfoEvent "Delete Sync Template", "Delete Sync Template: " & FRM_DS_GetValue(objData, "TemplateName"), null
	
	boolexist = GUI_List_ClickRow (objSyncTemplate, objScrollBar, "Name", FRM_DS_GetValue(objData, "TemplateName"), True, False, False, "Single")
	
	If boolexist Then
		GUI_SwfObject_Click objMainContainer.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Yes ""
	End If
	
	Set objMainContainer = Nothing
	Set objSyncTemplate = Nothing
	Set objScrollBar = Nothing
	Set objData = Nothing
	
End Function



'This function is used for Rename of Forms in Loansetup
'@code
'    BIZ_LoanSetUp_Forms_Rename(strIconName,strdesc) 
'@endcode
'@param strIconName - Icon Name
'@param strdesc - CustomPrintForms

Function BIZ_LoanSetUp_Forms_Rename(strIconName,strdesc)

	 FRM_Logger_ReportInfoEvent "Rename of '"&strdesc&"'", "Rename of '"&strdesc& "' started", null
	 
	 Dim objSettings,objListView,objScrollbar,boolExist
	 
	 Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	 Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	 Set objScrollbar= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	 GUI_List_ClickRow objListView,objScrollbar, "Name", strIconName, True, False, False, "Single" 
	 GUI_Object_WaitTillEnabled(objSettings.SwfButton("swfname:=btnRename"))
	 FRM_Logger_ReportInfoEvent "Rename of '"&strdesc&"'", "Select '"&strIconName& "' existing record ", null
	 
	 GUI_SwfObject_Click objSettings.SwfButton("swfname:=btnRename") 
	 FRM_Logger_ReportInfoEvent "Rename of '"&strdesc&"'", "Select Rename Button", null
	 GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strIconName&"2"	
	 UTIL_Win_SendKey "{ENTER}"
	 
	 Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
	 boolExist=GUI_List_TextExists(objListView,"Name",strIconName&"2")
	 FRM_VerifyTrue boolExist, "Verify Rename", "'"&strIconName&"' Icon Rename as "&strIconName&"2"
	  
	 Set objSettings	= Nothing
	 Set objListView	= Nothing
	 Set objScrollbar	= Nothing
 	
 	 BIZ_LoanSetUp_Forms_Rename = strIconName&"2"
End Function



'This function is used for Rename of Forms with Existing Name
'@code
'    BIZ_LoanSetup_ValidateRenameTemplatewithExistingName(strRowID,strIconName,strrenameicon,strdesc) 
'@endcode
'@Param strRowID:Loansetup data getting from Setting_Loansetup Excel
'@Param strIconName - Icon name
'@Param strRenameicon - Icon Name to rename icon  
'@Param strDesc - Form name  

Function BIZ_LoanSetup_ValidateRenameTemplatewithExistingName(strRowID,strIconName,strRenameicon,strDesc) 

	FRM_Logger_ReportInfoEvent "Rename of '"&strDesc &"' with existing Icon Name", "Rename of '"&strDesc& "' with existing Icon Name started", null
	
	Dim objSettings,objListView,objScrollbar,objSettingsDialog,objData
	
	Set objData 			= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView 		= objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objSettingsDialog	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
	
	GUI_List_ClickRow objListView,objScrollbar, "Name", strIconName, True, False, False, "Single"
	FRM_Logger_ReportInfoEvent "Rename of '"&strdesc&"'", "Select '"&strIconName&"' Existing record ", null
	GUI_SwfObject_Click objSettings.SwfButton("swfname:=btnRename") 
	FRM_Logger_ReportInfoEvent "Rename of '"&strdesc&"'", "Select Rename Button", null
	FRM_Logger_ReportInfoEvent "Validating Rename with Existing Name", "'"&strIconName &"' Rename with Existing record as '"&strRenameicon&"'", null
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strRenameicon	
	GUI_SwfObject_Click objListView
	
	IF GUI_Object_IsExistX(objSettingsDialog,40 )= "True" then 
		FRM_Logger_ReportInfoEvent "Validating 'Encompass Dialog' Existance", "'Encompass error message is displayed", null
		GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),FRM_DS_GetValue(objData,"StaticMsg"),"Popup Dialog's Static Message"		 	
		GUI_Dialog_Encompass_OK ""
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strRenameicon&"1"
		UTIL_Win_SendKey "{ENTER}"
		Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
	Else
		FRM_Logger_ReportFailEvent "Validating 'Encompass Dialog' Existance", "'Encompass Dialog' Box  not Exist", null
	End If
	
	Set objSettings			= Nothing
	Set objListView			= Nothing
	Set objScrollbar		= Nothing
	Set objData 			= Nothing
	Set objSettingsDialog	= Nothing	
	
	BIZ_LoanSetup_ValidateRenameTemplatewithExistingName = strRenameicon&"1"
	
End Function



'This function is used for Duplicate the Loansetup Form
'@code
'    BIZ_LoanSetup_Forms_Duplicate(strRowID,strdesc) 
'@endcode
'Param:strLoanProgram:Icon Name  
'strdesc:Loansetup form description

Function BIZ_LoanSetup_Forms_Duplicate(strLoanProgram,strdesc)
	
	FRM_Logger_ReportInfoEvent "Create a Duplicate in "&strdesc, "Duplicate Creation in "&strdesc &" is started", null
	
    Dim  objSettings,objClosingCostsList,objScrollbar,objData       
    
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")

	FRM_Logger_ReportInfoEvent "Select an existing form",strLoanProgram &" is selected for Duplicate", null
	boolExist = GUI_List_ClickRow(objListView, objScrollbar, "Name", strLoanProgram, True, False, False, "Single")	
	FRM_Logger_ReportPassEvent "Loan Set Up 'Duplicate' the Name","Duplicate creation for the record "&strLoanProgram ,null
	
	If boolExist = True Then
		FRM_Logger_ReportPassEvent "Click on Duplicate Button ","Duplicate button is clicked to Create Duplicate Record",null
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDuplicate")		
		UTIL_Win_SendKey "{ENTER}"
		boolExist=GUI_List_TextExists (objListView,"Name","Copy of "&strLoanProgram)
		Wait g_LongWaitLarge  'Explicit wait added due to sync, Here Wait increased
		FRM_VerifyTrue boolExist, "Verify Duplicate", strLoanProgram&" Icon Duplicate as Copy of "&strLoanProgram
	End If
	BIZ_LoanSetup_Forms_Duplicate= "Copy of "&strLoanProgram 
	Set objSettings = nothing
	Set objListView = nothing
	Set objScrollbar = nothing
	
End Function



'This function is used for Validate copy paste opeartion in same folders
'@code
'    BIZ_LoanSetup_Forms_CopyPasteOperationinSameFolders(strLoanProgram,strFlderName) 
'@endcode
'@Param strLoanProgram - Icon Name  
'@Param strFlderName - Folder Name

Function BIZ_LoanSetup_Forms_CopyPasteOperationinSameFolders(strLoanProgram,strFlderName)
	
	FRM_Logger_ReportInfoEvent "Validate Copy & Paste operation in Same folders ", "Copy & Paste operation in Same folders is started", null
   
    Dim  objSettings,objScrollbar,objData,objListView,boolExist
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbBoxFolder"),strFlderName
	
	FRM_Logger_ReportInfoEvent "Select an existing form",strLoanProgram &" is selected for Copy in '"&strFlderName&"'", null
	
	GUI_List_ClickRow objListView, objScrollbar, "Name", strLoanProgram, True, False, False, "Single"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCopy")	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")
	UTIL_Win_SendKey "{ENTER}"
	Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
	boolExist=GUI_List_TextExists (objListView,"Name","Copy of "&strLoanProgram)
	Wait g_LongWaitLarge  'Explicit wait added due to sync, Here Wait increased
	FRM_VerifyTrue boolExist, "Verify Pasted Icon", "'"&strLoanProgram&"' Icon Paste as Copy of '"&strLoanProgram&"'"
	
	Set objSettings  = Nothing
	Set objListView  = Nothing
	Set objScrollbar = Nothing
	
	BIZ_LoanSetup_Forms_CopyPasteOperationinSameFolders= "Copy of "&strLoanProgram 
	
End Function



'This function is used for Validate copy paste opeartion in Different folders
'@code
'    BIZ_LoanSetup_Forms_CopyPasteOperationinDiffFolders(strLoanProgram,strDestnFlder) 
'@endcode
'@Param strLoanProgram - Icon Name  
'@Param strDestnFlder - Folder Name

Function BIZ_LoanSetup_Forms_CopyPasteOperationinDiffFolders(strLoanProgram,strDestnFlder)
	
	FRM_Logger_ReportInfoEvent "Validate Copy & Paste Operation in different folders ", "Copy & Paste Operation in different folders is started", null
    
	Dim objSettings,objScrollbar,objListView,boolExist,boolValue
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	FRM_Logger_ReportInfoEvent "Select an existing form",strLoanProgram &" is selected for Copy", null
	boolExist = GUI_List_ClickRow(objListView, objScrollbar, "Name", strLoanProgram, True, False, False, "Single")	
	
	If boolExist Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCopy")	
		GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cmbBoxFolder"),strDestnFlder
		FRM_Logger_ReportInfoEvent "Select an existing form",strLoanProgram &" is selected for Copy in '"&strDestnFlder&"'", null
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")
		UTIL_Win_SendKey "{ENTER}"
		Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
		boolValue=GUI_List_TextExists (objListView,"Name",strLoanProgram)
		Wait g_LongWaitLarge  'Explicit wait added due to sync, Here Wait increased
		If boolValue Then 
			FRM_Logger_ReportPassEvent "Verify pasted Icon", "'"&strLoanProgram&"' Icon Paste as  '"&strLoanProgram &"' in '" &strDestnFlder&"'", null
		Else
			FRM_Logger_ReportFailEvent "Verify pasted Icon", "'"&strLoanProgram&"' Icon not Paste as  '"&strLoanProgram &"' in '" &strDestnFlder&"'", null
		End if 
	Else
		FRM_Logger_ReportInfoEvent "Select an existing form","'"&strLoanProgram &"' is not exist in list", null
	End If
	
	Set objSettings  = Nothing
	Set objListView  = Nothing
	Set objScrollbar = Nothing
	
End Function



'This function is used to avoid Cut & Paste option within the same folder 
'@code
'    BIZ_Settings_CutPasteoperationinSameFolders(strRowID,StrFormName)
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel
'@Param StrFormName - Form Name

Function  BIZ_Settings_CutPasteoperationinSameFolders(strRowID,StrFormName)

 FRM_Logger_ReportInfoEvent "Validate CutPaste Operation in '"&strFolderName &"' Forms", "Validate Cut and Paste operation in '"&strFolderName &"' Forms started", null  

 Dim objSettings,objLoanProgramList,objScrollbar,objData,strNewIconName,strFolderName

 Set objData 			= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
 Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
 Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
 Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar") 
 Set objSettingsDialog	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
 strFolderName 			= CStr(FRM_DS_GetValue(objData, "FolderName"))
 
 BIZ_LoanSetup_SelectFolder strFolderName
 GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", StrFormName, True, False, False, "Single" 
 FRM_Logger_ReportInfoEvent "Cut Operation", "'"&StrFormName&"' is select for Cut from '"&strFolderName& "'", null  
 GUI_Object_Click objSettings.SwfObject("swfname:=btnCut"), "SwfObject", "Cut operation on  Forms"
 Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
 GUI_Object_Click objSettings.SwfObject("swfname:=btnPaste"), "SwfObject", "Paste Operation on  forms"
 Wait g_LongWaitLarge  'Explicit wait added due to sync, Here Wait increased
 FRM_Logger_ReportInfoEvent "Paste Operation", "'"&StrFormName&"' is pasted in the '"&strFolderName& "'", null
 If objSettingsDialog.Static("text:=Unable to perform paste operation because the destination is the same as the source.").Exist(200) Then 		
	GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),FRM_DS_GetValue(objData,"AlertMsg"),"Popup Dialog's Static Message"		 	
	GUI_Dialog_Encompass_OK "Unable to perform paste operation because the destination is the same as the source."		
 Else 
	FRM_Logger_ReportFailEvent "Validating 'Encompass Dialog' Existance", "'Encompass Dialog' Box  not Exist",Null 
 End If	
 
 Set objData 			= Nothing
 Set objSettings 		= Nothing
 Set objLoanProgramList = Nothing
 Set objScrollbar		= Nothing
 
 BIZ_Settings_CutPasteoperationinSameFolders = StrFormName
 
End Function



'This function is used validate Forms can be moved from: "Public Form Group" to "Personal Form Group" viceversa
'@code
'    BIZ_Settings_CutPasteoperationinDifferentFolders(StrSrcfldr,strIconName,strDestnfldr) 
'@endcode
'@Param StrSrcfldr - Soucrce folder to cut
'@Param strIconName - Icon name 
'@Param strDestnfldr - Destination Folder To Be Pasted

Function  BIZ_Settings_CutPasteoperationinDifferentFolders(StrSrcfldr,strIconName,strDestnfldr)

	 FRM_Logger_ReportInfoEvent "Validate Cut & Paste operation between form folders", "Validate Cut & Paste operation between form folders started", null  
	 
	 Dim objSettings,objLoanProgramList,objScrollbar,objData,obiData1,strsourceFolderName,strDestinationFldrName,boolexist
	 
	 Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", StrSrcfldr)
	 Set obiData1= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strDestnfldr)
	 Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	 Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	 Set objScrollbar= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	 
	 strsourceFolderName = CStr(FRM_DS_GetValue(objData, "FolderName"))
	 strDestinationFldrName = CStr(FRM_DS_GetValue(obiData1, "FolderName"))
	 
	 BIZ_LoanSetup_SelectFolder strsourceFolderName
	 GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strIconName, True, False, False, "Single" 
	 GUI_Object_Click objSettings.SwfObject("swfname:=btnCut"), "SwfObject", "Cut operation on Forms"
	 FRM_Logger_ReportInfoEvent "Validate Cut & Paste Operation Between Form Folders", "Select Cut in '"&strsourceFolderName& "' for Icon '" &strIconName&"'", null  
	 Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
	 BIZ_LoanSetup_SelectFolder strDestinationFldrName 
	 GUI_Object_WaitTillExist(objSettings.SwfObject("swfname:=btnPaste"))
	 GUI_Object_Click objSettings.SwfObject("swfname:=btnPaste"), "SwfObject", "Paste Operation on forms"
	 FRM_Logger_ReportInfoEvent "Validate Cut & Paste operation between Form folders", "Select Paste in '"&strDestinationFldrName& "' for Icon '" &strIconName&"'", null  
	 GUI_Object_WaitTillExistx objLoanProgramList,60
	 boolexist=GUI_List_TextExists (objLoanProgramList,"Name",cstr(strIconName))
	 Wait g_LongWaitLarge  'Explicit wait added due to sync, Here Wait increased
	 FRM_VerifyTrue boolexist, "Verify Paste Icon  in '"&strDestinationFldrName&"'", "Icon pasted in forms  with name '"&strIconName&"'"
	 FRM_Logger_ReportInfoEvent "Validate Cut operation in source folder", "Select source folder to validate cut operation" , null  
	 BIZ_LoanSetup_SelectFolder strsourceFolderName
	 boolnotexist=GUI_List_TextExists (objLoanProgramList,"Name",cstr(strIconName))
	 Wait g_LongWaitLarge  'Explicit wait added due to sync, Here Wait increased
	 FRM_VerifyFalse boolnotexist, "Verify Cut Icon in '"&strsourceFolderName&"'", "Icon moved out from Source Folder"
	 
	 Set objData            = Nothing
	 Set obiData1           = Nothing
	 Set objSettings        = Nothing
	 Set objLoanProgramList = Nothing
	 Set objScrollbar       = Nothing
 
End Function



'This function is used to CreateFolder in Loansetup Forms
'@code
'    BIZ_Settings_CreateFormFolder(strRowID) 
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel

Function BIZ_Settings_CreateFormFolder(strRowID)

	Dim  objSettings,objData,objListView,strNewIconName,strFoldername,strDefaultName,strrc,boolExist
	
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	
	strFoldername = FRM_DS_GetValue(objData, "FolderName")
	FRM_Logger_ReportInfoEvent "Create Folder", "Create Folder in "& strFoldername, null
	
	'Selecting Folder Type
	BIZ_LoanSetup_SelectFolder strFoldername
	
	strrc = GUI_List_GetNumberofRows(objListView)
	
	GUI_Object_Click objSettings.SwfObject("swfname:=btnNewFolder"), "SwfObject", "Add New Record"
	FRM_Logger_ReportInfoEvent "Clicking on Add Button", "Creating a record", null	
	
	'Verifying Default Record	
	Wait g_TinyWaitLarge   		'Due to Sync issuse Explicitly added wait 
	strDefaultName = GUI_Object_GetPropertyValue(objSettings.SwfEdit("micclass:=SwfEdit"),"Text")
	FRM_Logger_ReportInfoEvent "Adding 'Default Record' ","'Default Record' added Successfully with Name "& strDefaultName,null		
	
	strNewIconName = FRM_DS_GetValue(objData, "FormName")	
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName
	UTIL_Win_SendKey "{ENTER}"		'Sendkeys used to create record to handle application
	boolExist = GUI_List_TextExists (objListView,"Name",strNewIconName)
	Wait g_LongWaitLarge  'Explicit wait added due to sync, Here Wait increased
	FRM_VerifyTrue boolExist, "Verify Folder Creation", "Folder Created in forms with name "&strNewIconName	

	Set objData 	= Nothing
	Set objSettings = Nothing
	Set objListView = Nothing
	
	BIZ_Settings_CreateFormFolder = strNewIconName
End Function



'This function is used for Adding icon in Existing Folder
'@code
'    BIZ_Settings_IconCreationinFormFolder(strRowID,StrFldrName) 
'@endcode
'Param:strRowID:Loansetup data getting from Setting_Loansetup Excel
'StrFldrName:Folder name to create icon

Function BIZ_Settings_IconCreationinFormFolder(strRowID,strValue)
	FRM_Logger_ReportInfoEvent "Creation of Icon in FormFolder", "Creation of Icon in FormFolder started", null
	Dim  objSettings,objData,objListView,objScrollbar,strrc,strDefaulticon
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	StrFldrName=FRM_DS_GetValue(objData, "FolderName")
	BIZ_LoanSetup_SelectFolder StrFldrName	
	GUI_List_ClickRow objListView, objScrollbar, "Name", strValue, True, False, False, "Double"
	FRM_Logger_ReportInfoEvent "Creation of Icon in FormFolder", "Double clicking on "&strValue&" Folder", null
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add New Icon in FormsFolder" 
	FRM_Logger_ReportInfoEvent "Clicing on Add Button", "Creating a 'new icon' in Forms Folder", null
	strNewIconName=FRM_DS_GetValue(objData, "FormName")
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName	
    UTIL_Win_SendKey "{ENTER}"
	boolexist=GUI_List_TextExists (objListView,"Name",cstr(strNewIconName))
	Wait g_LongWaitLarge  'Explicit wait added due to sync, Here Wait increased
	FRM_VerifyTrue boolexist, "Verify Icon Creation", "Icon Created in  forms Folder with name "&strNewIconName
	BIZ_Settings_IconCreationinFormFolder=strNewIconName
	Set objData = nothing
	Set objSettings = nothing
	Set objListView = nothing
End Function



'This function is used to create new Loan Custom Fields
'@code
'    BIZ_Settings_CreateCustomField(strRowID)
'@endcode
'@param strRowID- RowId of the testcase
Function BIZ_Settings_CreateCustomField(strRowID)
	Dim  objSettings,objCustomFields,objCustomEdit,objData,strCustField,strCustomField,strFid,strDesc,strFormatComboSelect,strFormat
	BIZ_Nav_HierarchyTree "Loan Setup", "Loan Custom Fields"	
    FRM_Logger_ReportInfoEvent "Create Custom Field", "Create Custom Field using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null    
	Set objData = FRM_DS_GetTestData("Settings_LoanSetup", "CustomFields", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCustomEdit = objSettings.SwfWindow("swfname:=CustomFieldEditor")
	Set objCustomFieldList = objSettings.SwfObject("swfname:=lstVwExCustomFields")
	Set objScrollBar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
	strCustField=FRM_DS_GetValue(objData,"FieldID")
	boolExist = GUI_List_ClickRow(objCustomFieldList, objScrollBar, "Field ID", "CX."&strCustField, True, False, False, "Single")
	If boolExist Then
		FRM_Logger_ReportInfoEvent "Create custom field","Custom field already exists: CX."&strCustField, Null
	Else
		'begin creating new custom field
		GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnNew"), "SwfObject", "Add New Custom Field in "&strRowID
		GUI_SwfEdit_Set objCustomEdit.SwfEdit("swfname:=txtFieldID"), strCustField
		strDesc = FRM_DS_GetValue(objData, "Description")
		GUI_SwfEdit_Set objCustomEdit.SwfEdit("swfname:=txtDescription"), strDesc	
		strFormat=FRM_DS_GetValue(objData,"Format")
		GUI_SwfComboBox_Select objCustomEdit.SwfComboBox("swfname:=cboFormat"), strFormat
		If strFormat="STRING" Then
			strMaxLength=FRM_DS_GetValue(objData,"MaxLength")
			GUI_SwfEdit_Set objCustomEdit.SwfEdit("swfname:=txtMaxLength"),strMaxLength
		End If
		strCalulation=FRM_DS_GetValue(objData,"Calulation")
		If len(strCalulation)>0 Then		
			GUI_SwfEditor_Type objCustomEdit.SwfEditor("swfname:=txtCalc"),strCalulation
		End If		
		GUI_SwfButton_Click objCustomEdit.SwfButton("swfname:=btnOK")
	End If
	Set objSettings = Nothing	
	Set objCustomEdit = Nothing
	Set objData = Nothing
	Set objCustomFieldList = Nothing
	Set objScrollBar = Nothing	
End Function



'This function is used to delete the existing pre-defined Loan Custom Fields
'@code
'    BIZ_Settings_DeletePreDefCustomField()
'@endcode
 
 Function BIZ_Settings_DeletePreDefCustomField()

	Dim  objSettings,objCustomFields,objCustomEdit,strFieldId
   
    FRM_Logger_ReportInfoEvent "BIZ_Settings_DeletePreDefCustomField", "Set BIZ_Settings_DeletePreDefCustomField using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
    
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCustomFields = objSettings.SwfObject("swfname:=lstVwExCustomFields")
	Set objCustomEdit = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=CustomFieldEditor")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	intRowCount = objCustomFields.Object.Items.Count
	For i =0 to  intRowCount-1
		strFieldId = objCustomFields.Object.Items.Item(i).Subitems.Item(0).Text	
		If InStr(1, strFieldId, "CUST") > 0 Then
			FRM_Logger_ReportPassEvent "Get the field id's for "&strRowID, "Fetched the pre-defined 'Field ID' value "&strFieldId&" from the list", null
		Exit for
		End If
	Next
	
	GUI_List_ClickRow objCustomFields, objScrollbar, "Field ID", strFieldId , True, False, False, "Single"
	GUI_Object_ValidateDisabled objSettings.SwfObject("swfname:=stdIconBtnDelete"),"Delete"

	Set objSettings = Nothing
	Set objCustomFields = Nothing
	Set objCustomEdit = Nothing
	Set objData = Nothing

End Function



'This function is used to delete the existing user-defined Loan Custom Fields
'@code
'    BIZ_Settings_DeleteCustomField(strRowID)
'@param strRowID- RowId of the testcase
'@endcode
Function BIZ_Settings_DeleteCustomField(strRowID)
	Dim  objSettings,objCustomFields,objCustomEdit,objData,strCustField,objScrollbar,strFieldId   
    FRM_Logger_ReportInfoEvent "Delete Custom Field", "Delete Custom Field using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
    
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCustomFields = objSettings.SwfObject("swfname:=lstVwExCustomFields")	
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	strCustField=FRM_DS_GetValue(objData,"FieldID")	
	strFieldId= "CX."&strCustField		
	boolExist = GUI_List_ClickRow(objCustomFields, objScrollbar, "Field ID", strFieldId, True, False, False, "Single")		
	If boolExist = True Then	
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Click "2","Are you sure","&Yes"
	Else
		 FRM_Logger_ReportInfoEvent "Delete Custom Field", "Custom Field '"&strFieldId&"' does not exist", null			
	End If 		
	Set objData = nothing
	Set objSettings = nothing	
	Set objCustomFields = nothing
	Set objScrollbar = nothing
End Function



'This function is used for Adding Newicon LoansetupForms
'@code
'    BIZ_LoanSetup_CreateIcon(strRowID,strdesc) 
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel
'@Param strdesc	- Loanset up form description

Function BIZ_LoanSetup_CreateIcon(strRowID,strdesc)

	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_CreateIcon", "Set BIZ_LoanSetup_CreateIcon using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
	
	Dim objSettings,objScrollbar,objData,objListView,strNewIconName,strFldrName,strrc,boolExist,strDefaultName
  	  
	Set objData 	= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strFldrName=FRM_DS_GetValue(objData, "FolderName")
	
	Select Case (strdesc)
		Case "LoanDuplication","ConditionForms"
			 'Nothing to perform
		Case else
			BIZ_LoanSetup_SelectFolder strFldrName
	End Select
	
		
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add New Record in "& strdesc
	FRM_Logger_ReportInfoEvent "Clicking on Add Button", "Creating a '"&strdesc& "' record", null	
	
	'Verifying Default Record	
	Wait g_TinyWaitLarge  ''Due to Sync issuse Explicitly added wait 
	strDefaultName = GUI_Object_GetPropertyValue(objSettings.SwfEdit("micclass:=SwfEdit"),"Text")
	FRM_Logger_ReportInfoEvent "Adding 'Default Record' in '"&strdesc&"'","'Default Record' in '"& strdesc&"' added Successfully with Name '"& strDefaultName&"'",null	
	
	'Verifying New Record Creation
	strNewIconName=FRM_DS_GetValue(objData, "FormName")	
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName
	UTIL_Win_SendKey "{ENTER}"
	
	Wait g_TinyWaitLarge  ''Due to Sync issuse Explicitly added wait 
	boolExist=GUI_List_TextExists (objListView,"Name",strNewIconName)
	FRM_VerifyTrue boolExist, "Verify 'New Record' Exist in '"&strdesc&"'", "'New Record' in '"& strdesc&"' added Successfully with Name '"& strNewIconName&"'"
		
	Set objSettings 	= Nothing
	Set objListView 	= Nothing
	Set objScrollbar	= Nothing
	Set objData			= Nothing
	
	BIZ_LoanSetup_CreateIcon=strNewIconName
	
End Function



'This function is used for Validating Template with ExistingName
'@code
'    BIZ_LoanSetup_ValidateTemplatewithExistingName(strRowID,strdesc,strNewIconName) 
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel
'@Param strNewIconName - Existing Template Name

Function BIZ_LoanSetup_ValidateTemplatewithExistingName(strRowID,strdesc,strNewIconName)

    Dim  objSettings,objScrollbar,objData,objListView,objSettingsDialog,strFldrName
	
    FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_ValidateTemplatewithExistingName", "Set BIZ_LoanSetup_ValidateTemplatewithExistingName using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
    
	Set objData     = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strFldrName=FRM_DS_GetValue(objData, "FolderName")
	
	Select Case (strdesc)
		Case "LoanDuplication","ConditionForms"
			'Nothing to perform
		Case else
			BIZ_LoanSetup_SelectFolder strFldrName
	End Select
	
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add New Icon in "&strdesc
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName
	 
	FRM_Logger_ReportInfoEvent "Create a 'New Record ' with Existing "&strdesc& "name","Enter an existing Name as "&strNewIconName, null
	UTIL_Win_SendKey "{ENTER}"
	Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
	
	Set objSettingsDialog=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
	IF 	GUI_Object_IsExistX(objSettingsDialog,30 )= "True" then 
 		FRM_Logger_ReportInfoEvent "Validating 'Encompass Dialog' Existance", "'Encompass error message is displayed", null
	 	GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),FRM_DS_GetValue(objData,"StaticMsg"),"Popup Dialog's Static Message"		 	
	 	GUI_WinButton_Click objSettingsDialog.WinButton("text:=OK")
	 	FRM_Logger_ReportInfoEvent "Clicking on 'Encompass Dialog' Ok Button", "Click on 'Ok' button", null
	 	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName&"1"
	 	GUI_SwfObject_Click objListView
	Else
		FRM_Logger_ReportFailEvent "Validating 'Encompass Dialog' Existance", "'Encompass Dialog' Box  not Exist", null
	End If	
		
	Set objSettings 		= Nothing
	Set objListView 		= Nothing
	Set objScrollbar 		= Nothing
	Set objSettingsDialog 	= Nothing
    Set objData             = Nothing
    
	BIZ_LoanSetup_ValidateTemplatewithExistingName=strNewIconName&"1"
End Function



'This function is used to add VOM in Verification Contact Setup
'@code
'    BIZ_Settings_AddIconInVerificationSetup()
'@endcode
 
 Function BIZ_Settings_AddIconInVerificationSetup()
     
	FRM_Logger_ReportInfoEvent "BIZ_Settings_AddIconInVerificationSetup", "BIZ_Settings_AddIconInVerificationSetup has started", null
	
	Dim  objVomHeader,objImportDialog
	
	Set objVomHeader = SwfWindow("swfname:=MainForm").SwfObject("swfname:=titlePanel")
	Set objImportDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=NewMortgageDialog")
   	  	
	BIZ_Nav_SelectPipelineTab()
	GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfComboBox("swfname:=cboFolder"),  "My Pipeline"
	BIZ_Loan_AddNewBlankLoan()
	GUI_Dialog_Encompass_YesX 3, ""
	
	BIZ_Nav_OpenMenuItem "Verifs;VOM"
		
	If GUI_Object_IsExistX(objVomHeader,20) Then
		FRM_Logger_ReportInfoEvent "Validating VOM form Window Existance", "'VOM window' is displayed", null
		GUI_Object_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnNew"), "SwfObject", "Add icon in VOM page in "&strRowID
	Else
		FRM_Logger_ReportFailEvent "Validating VOM form Window Existance", "'VOM window' does not Exist", null
	End If	
	
	If GUI_Object_IsExistX(objImportDialog,20) Then
		FRM_Logger_ReportInfoEvent "Validating Import Mortgage Window Existance", "'Import Mortgage Window' is displayed", null
		GUI_SwfButton_Click objImportDialog.SwfButton("swfname:=okBtn")
	Else
		FRM_Logger_ReportFailEvent "Validating Import Mortgage Window Existance", "'Import Mortgage Window' does not Exist", null
	End If
	
	Set objVomHeader 	= Nothing
	Set objImportDialog = Nothing

End Function



'This function is used to navigate to Borrower summary origination page from Pipeline tab
'@code
'    BIZ_Settings_NavigateToBorrowerSummaryOrign()
'@endcode
 
 Function BIZ_Settings_NavigateToBorrowerSummaryOrign()
   
    FRM_Logger_ReportInfoEvent "BIZ_Settings_NavigateToBorrowerSummaryOrign", "Navigation from pipeline then to Borrower Summary Info page has started", null
    
	BIZ_Nav_SelectPipelineTab()
	GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfComboBox("swfname:=cboFolder"),  "My Pipeline"
	BIZ_Loan_AddNewBlankLoan()
	GUI_Dialog_Encompass_YesX 3, ""
	BIZ_Forms_Open "Borrower Summary - Origination"
	
End Function



'This function is used for Adding Newicon in Loansetup folders
'@code
'    BIZ_PrintFormGroup_CreateNew(strRowID,strdesc,StrFldrName) 
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel
'@Param strdesc - Loanset up form description
'@Param strFldrName - Folder Name to Craete icon  

Function BIZ_PrintFormGroup_CreateNew(strRowID,strdesc,strFldrName)

    Dim  objSettings,objScrollbar,objListView,objData,strNewIconName,strFoldername
   
    FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_CreateIcon", "Set BIZ_PrintFormGroup_CreateNew using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
    
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strFoldername=FRM_DS_GetValue(objData, "FolderName")
	BIZ_LoanSetup_SelectFolder strFoldername
	GUI_List_ClickRow objListView,objScrollbar, "Name", strFldrName, True, False, False, "Double" 
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add New Record in "& strdesc
	FRM_Logger_ReportInfoEvent "Clicking on Add Button", "Creating a '"&strdesc& "' record", null	
	
	strNewIconName=FRM_DS_GetValue(objData, "FormName")			
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strNewIconName	
    GUI_SwfObject_Click objListView
    
	GUI_Object_Click objListView, "SwfObject", strdesc
	GUI_List_TextExists objListView,"Name",strNewIconName
	
	FRM_Logger_ReportPassEvent "Adding 'New Record' in"&strdesc,"'New Record' in "& strdesc&" added Successfully with Name "& strNewIconName,null
	BIZ_PrintFormGroup_CreateNew=strNewIconName
		
	Set objSettings	 = Nothing
	Set objListView  = Nothing
	Set objScrollbar = Nothing
	Set objData      = Nothing

End Function



'This function is used for Delete an existing Loansetup Folder
'@code
'    BIZ_Settings_DeleteFolderIfNotEmpty(strRowID,strButton,strFormName) 
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel
'@Param strButton - Required Button property delete
'@Param strFormName - Form name

Function BIZ_Settings_DeleteFolderIfNotEmpty(strRowID,strButton,strFormName)

	FRM_Logger_ReportInfoEvent "Delete folder which is not empty", "Delete folder which is not empty started", null 
	
	Dim  objSettings,objData,objListView,objScrollbar,objSettingsDialog,strFoldername,Strtext
	
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strFoldername=FRM_DS_GetValue(objData, "FolderName")
	
	FRM_Logger_ReportInfoEvent "Delete  CustomPrintFormFolder", "Delete  CustomPrintFormFolder in"&strFormName&" of "&strFoldername , null
	
	BIZ_LoanSetup_SelectFolder strFoldername	
	
	GUI_List_ClickRow objListView, objScrollbar, "Name", strFormName, True, False, False, "Single"	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDelete")	
	FRM_Logger_ReportInfoEvent "Deleting the record in  Forms", "Clicked on delete Button", null    
	
	Set objSettingsDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
		
	If GUI_Object_IsExistX(objSettingsDialog,10 )= "True" Then 
		strvalDialog = FRM_DS_GetValue(objData,"DelStatMsg")& " '"&strFormName&"'?"
		FRM_Logger_ReportInfoEvent "Validating Encompass dialog Existance", "Encompass Dialog Box  exist", null
		GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"Popup Dialog's Static Message"	
		FRM_Logger_ReportInfoEvent "selected delete option is "&strButton, strButton& " button is selected", null
		 
		If strButton = "Yes" Then
			GUI_WinButton_Click objSettingsDialog.WinButton("text:=&Yes")
			FRM_Logger_ReportInfoEvent "Clicking on Encompass Dialog Yes  Button", "Yes  button clicked", null
			
			GUI_Object_WaitTillExistX objSettingsDialog,10
			GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),"The folder '"&strFormName&"' cannot be deleted because it is not empty.","Popup Dialog's Static Message"	
			GUI_WinButton_Click objSettingsDialog.WinButton("text:=OK")
			
			boolExist = GUI_List_TextExists (objListView,"Name",strFormName)
			
			If boolExist Then
				FRM_Logger_ReportPassEvent "Validting the selected Folder deleted or not", "Selected Folder "&strFormName&" Not deleted", null
			Else
				FRM_Logger_ReportFailEvent "Validting the selected Folder deleted or not", "Selected Folder "&strFormName&" deleted", null
			End If
			 
		ElseIf strButton = "No" Then
			GUI_WinButton_Click objSettingsDialog.WinButton("text:=&No")
			FRM_Logger_ReportInfoEvent "Clicking on Encompass Dialog No  Button", "No button cliked", null
			
			boolExist = GUI_List_TextExists (objListView,"Name",strFormName)
			
			If boolExist Then
				FRM_Logger_ReportPassEvent "Validting the selected Folder deleted or not", "Selected Folder '"&strFormName&"' Not deleted", null
			Else
				FRM_Logger_ReportFailEvent "Validting the selected Folder deleted or not", "Selected Folder '"&strFormName&"' deleted", null
			End If
		End If					 
	Else
		FRM_Logger_ReportFailEvent "Validating Encompass Dialog Existance", "Encompass Dialog Box was not Exist", null
	End If	
			
	Set objData 	= Nothing
	Set objSettings = Nothing
	Set objListView = Nothing
	
End Function



'This function is used for Validate copy paste opeartion in specific folders
'@code
'    BIZ_LoanSetup_Forms_CopyPasteOperationinFolders(strFormName,strFlderName,strFolderIn)) 
'@endcode
'@Param strFormName - Icon Name  
'@Param strFlderName - Folder name
'@Param strFolderIn - Same or Different Folder 

Function BIZ_LoanSetup_Forms_CopyPasteOperationinFolders(strFormName,strFlderName,strFolderIn)
    
    FRM_Logger_ReportInfoEvent "Validate CopyPasteOperation in Folders ", "CopyPasteOperation in Folders is started", null
   
    Dim  objSettings,objScrollbar,objListView
    
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
    Set objFolder = objSettings.SwfComboBox("swfname:=cmbBoxFolder")
    
    FRM_Logger_ReportInfoEvent "Select an existing form","'"&strFormName &"' is selected for Copy", null
    GUI_List_ClickRow objListView, objScrollbar, "Name", strFormName, True, False, False, "Single"

    GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCopy")    
    GUI_SwfComboBox_Select objFolder,strFlderName
    strFolder = GUI_Object_GetPropertyValue (objFolder,"text")
    FRM_VerifyEqual strFlderName,strFolder , "Verify selected folder name", "Verified the selected folder name '"&strFolder&"'" 
    GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")
    UTIL_Win_SendKey "{ENTER}"
    
    If strFolderIn = "SameFolder" Then
        strFormName1 = "Copy of "&strFormName
    ElseIf strFolderIn = "DifferentFolder" Then 
       strFormName1 = strFormName
    End if
    
    boolValue = GUI_List_TextExists (objListView,"Name",strFormName1)
    FRM_VerifyTrue boolValue, "Verify Pasted Icon", "'"&strFormName&" Icon Paste as '"&strFormName1&"' in '"&strFlderName&"'"

    Set objSettings  = Nothing
    Set objListView  = Nothing
    Set objScrollbar = Nothing
    
    BIZ_LoanSetup_Forms_CopyPasteOperationinFolders= strFormName1 
    
End Function



'This function is used for Validating Default form Name
'@code
'    BIZ_LoanSetup_AddDefaultTemplate(strRowID,strdesc) 
'@endcode
'@Param strRowID:Loansetup data getting from Setting_Loansetup Excel
'@Param Strdesc: Loanset up form description

Function BIZ_LoanSetup_AddDefaultFolder(strRowID,strdesc)

    	'Variable Declaration
	Dim  objSettings,objData,objListView,strDefaultTempName,strFoldername,boolExist
	
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=gvDirectory")
	
	strFoldername=FRM_DS_GetValue(objData, "FolderName")
	FRM_Logger_ReportInfoEvent "Create Default Folder", "Create Default Folder in "& strFoldername, null
	
	'Selecting Folder Type
	BIZ_LoanSetup_SelectFolder strFoldername	
		
	GUI_Object_Click objSettings.SwfObject("swfname:=btnNewFolder"), "SwfObject", "Add New Record "
	FRM_Logger_ReportInfoEvent "Clicking on Add Button", "Creating a record", null	
	
	'Verifying Default Record		
	strDefaultTempName=GUI_Object_GetPropertyValue (objListView.SwfEdit("micclass:=SwfEdit","focused:=True"),"text")
	UTIL_Win_SendKey "{ENTER}"
	
	boolExist=GUI_List_TextExists (objListView,"Name",strDefaultTempName)
	
	FRM_VerifyTrue boolExist, "Verify Default Folder Creation", "Folder Created in forms with name "&strDefaultTempName	

	Set objData 	= Nothing
	Set objSettings = Nothing
	Set objListView = Nothing
	
	BIZ_LoanSetup_AddDefaultFolder=	strDefaultTempName
	
End Function



'This function is adding Trustee details in Trustee details window
'@code
'    BIZ_Settings_LoanSetup_SetTrusteeDetails(strRowID)
'@endcode
'@param strRowID - the RowID of the test data
 
Function BIZ_Settings_LoanSetup_SetTrusteeDetails(strRowID)
 	
 	FRM_Logger_ReportInfoEvent "TrusteeList - Set Trustee details in Trustee details window","Setting of Trustee details in Trustee details window ", Null		
 	
 	Dim objMainWin,objTrusteeWin,objData,strCity,strState,intDate,intPhone
	
 	Set objMainWin 	  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
 	Set objTrusteeWin = objMainWin.SwfWindow("swfname:=TrusteeDetailsEditor")
 	Set objData       = FRM_DS_GetTestData("Settings_Loansetup", "SetTrusteeList", strRowID)
 	
 	GUI_Object_WaitTillExistX objTrusteeWin, 10
	
	strTrusteeName = FRM_DS_GetValue(objData, "TrusteeName")
	
	If UTIL_String_IsNotEmpty (strTrusteeName) Then
		GUI_SwfEdit_Set objTrusteeWin.SwfEdit("swfname:=txtName","index:=0"), strTrusteeName
	End If
			
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Address")) Then
		GUI_SwfEdit_Set objTrusteeWin.SwfEdit("swfname:=txtAddress","index:=0"), FRM_DS_GetValue(objData, "Address")
	End If
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "ZipCode")) Then
		GUI_SwfEdit_Set objTrusteeWin.SwfEdit("swfname:=txtZip","index:=0"), FRM_DS_GetValue(objData, "ZipCode")
	End If
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "PhoneNumber")) Then
		GUI_SwfEdit_Set objTrusteeWin.SwfEdit("swfname:=txtPhone","index:=0"), FRM_DS_GetValue(objData, "PhoneNumber")
	End If
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Date")) Then 
		GUI_SwfEdit_Set objTrusteeWin.SwfEdit("swfname:=txtDate","index:=0"), FRM_DS_GetValue(objData, "Date")
	End If 
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "OrgState")) Then
		GUI_SwfComboBox_Select objTrusteeWin.SwfComboBox("swfname:=cboState"), FRM_DS_GetValue(objData, "OrgState")	
	End If
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "OrgType")) Then
		GUI_WinEdit_Set objTrusteeWin.WinEdit("nativeclass:=Edit"), FRM_DS_GetValue(objData, "OrgType")
	End If 
	
	GUI_Object_WaitTillEnabledX objTrusteeWin.SwfButton("swfname:=btnSave"), 10
	GUI_SwfButton_Click objTrusteeWin.SwfButton("swfname:=btnSave")
		
	Set objMainWin 	  = Nothing
	Set objTrusteeWin = Nothing
	Set objData       = Nothing
	
	BIZ_Settings_LoanSetup_SetTrusteeDetails = strTrusteeName
	
End Function

'This function is perform tool operations as add
'@code
'    BIZ_Settings_LoanSetup_CreateTrusteeList(strRowID)
'@endcode
'@param strRowID - RowID of the test data

Function BIZ_Settings_LoanSetup_CreateTrusteeList(strRowID)

	Dim strTrusteeName 
	
	'Click on Add button
	BIZ_Settings_ClickAdd()

	'Create Trustee
	strTrusteeName = BIZ_Settings_LoanSetup_SetTrusteeDetails (strRowID)

	BIZ_Settings_LoanSetup_CreateTrusteeList = strTrusteeName
	
End Function



'This function is perform tool operations as edit
'@code
'    BIZ_Settings_LoanSetup_EditTrusteeList(strRowID,strTrusteeName)
'@endcode
'@param strRowID - RowID of the test data
'@param strTrusteeName - Trustee name

Function BIZ_Settings_LoanSetup_EditTrusteeList(strRowID,strTrusteeName)

	Dim objMainWin
	Set objMainWin 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	intRowIndex = GUI_List_GetRowIndex(objMainWin.SwfObject("swfname:=gridViewContacts"), 0, strTrusteeName)
	
	'Select Truste
 	GUI_List_ActOnRow objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, True, False, False, "Single"
 	GUI_Object_WaitTillEnabledX objMainWin.SwfObject("swfname:=stdIconBtnEdit"), 10
	BIZ_Settings_ClickEdit()
	
 	'Edit Trustee
 	strEditTrusteeName = BIZ_Settings_LoanSetup_SetTrusteeDetails (strRowID)

	Set objMainWin 	 = Nothing
		
	BIZ_Settings_LoanSetup_EditTrusteeList = strEditTrusteeName
	
End Function



'This function is perform tool operations as delete and check  in Trustee list and Loan File
'@code
'    BIZ_Settings_LoanSetup_DeleteTrusteeList(strTrusteeName)
'@endcode
'@param strTrusteeName- Trustee Name 

Function BIZ_Settings_LoanSetup_DeleteTrusteeList(strTrusteeName)

	Dim objMainWin,objEncompassDialog,intRowIndex,strEncomPassWarn
	
	Set objMainWin 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEncompassDialog	= objMainWin.Dialog("text:=Encompass")
	strStaticMsg 			= "Do you want to delete the selected record(s)?"
	
	intRowIndex = GUI_List_GetRowIndex(objMainWin.SwfObject("swfname:=gridViewContacts"), 0, strTrusteeName)
	GUI_List_SelectItem objMainWin.SwfObject("swfname:=gridViewContacts"), strTrusteeName,0    'To maintain consistency incorporated the column number
	
	GUI_Object_WaitTillEnabledX objMainWin.SwfObject("swfname:=stdIconBtnDelete"), 10
	BIZ_Settings_ClickDelete()
	strEncomPassWarn = GUI_Object_GetPropertyValue(objEncompassDialog.Static("nativeclass:=Static","index:=1"),"text")
	FRM_VerifyEqual strEncomPassWarn,strStaticMsg , "Verify Encompass dialog with warning", "Verified the warning as '"&strEncomPassWarn&"'"
	BIZ_Settings_Dialog_YES_Click()
	
	wait g_ShortWaitTime ' Due To Sync Issue We Are Explicitly Passing Wait Statement
	intRowIndex = GUI_List_GetRowIndex(objMainWin.SwfObject("swfname:=gridViewContacts"), 0, strTrusteeName)
	If intRowIndex<0 Then
		FRM_Logger_ReportPassEvent "Verify Encompass dialog closed and selected Trustee is deleted from the 'TrusteeList'.","Verified  Encompass dialog and '"&strTrusteeName&"' Trustee deleted from the list", Null
	Else
		FRM_Logger_ReportFailEvent "Verify Encompass dialog closed and selected Trustee is deleted from the 'TrusteeList'.","Failed to delete '"&strTrusteeName&"'", Null
	End If

	Set objMainWin 	   		= Nothing
	Set objEncompassDialog	= Nothing
	
End Function



'This function is validate Trustee details in Trustee list window
'@code
'    BIZ_Settings_LoanSetup_ValidateTrusteeListData(strRowID, strTrusteeName, strValidateWindow )
'@endcode
'@param strRowID the RowID of the test data	
'@param strTrusteeName the array of test data for validation
'@param strValidateWindow window name to validate the trust details

Function BIZ_Settings_LoanSetup_ValidateTrusteeListData(strRowID, strTrusteeName, strValidateWindow)
	
	FRM_Logger_ReportInfoEvent "Start TrusteeList - Validate Trustee details in Trustee list window validations","Validation of Trustee in Trustee list window", Null		
	
	Dim objMainWin, objData, intRowIndex, intLoanFilePhone
 	
	Set objMainWin 	  	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "SetTrusteeList", strRowID)
	Set objMainWinPage 	= SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	
	Select Case strValidateWindow
		Case "TrusteeList"
		
			intRowIndex = GUI_List_GetRowIndex(objMainWin.SwfObject("swfname:=gridViewContacts"), 0, strTrusteeName)
			If UTIL_String_IsNotEmpty (strTrusteeName) Then	
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 0, strTrusteeName, "Trustee Name"   'With column name script is faied, So we used index instead of name. 
			End If
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Address")) Then
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 1, FRM_DS_GetValue(objData, "Address"),"Address"
			End If
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "City")) Then
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 2, FRM_DS_GetValue(objData, "City"),"City"
			End If
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "State")) Then		
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 3, FRM_DS_GetValue(objData, "State"),"State"
			End If
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "ZipCode")) Then		
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 4, FRM_DS_GetValue(objData, "ZipCode"),"ZipCode"
			End If	
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "PhoneNumber")) Then	
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 6, FRM_DS_GetValue(objData, "PhoneNumber"),"PhoneNumber"
			End If	
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Date")) Then
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 7, FRM_DS_GetValue(objData, "Date"), "Date"
			End If
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "OrgState")) Then	
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 8, FRM_DS_GetValue(objData, "OrgState"), "OrgState"
			End If 
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "OrgType")) Then
				GUI_List_ValidateCellDataWithCustomMsg objMainWin.SwfObject("swfname:=gridViewContacts"), intRowIndex, 9, FRM_DS_GetValue(objData, "OrgType"), "OrgType"
			End If	
		
		Case "LoanFile"
			
			If UTIL_String_IsNotEmpty (strTrusteeName) Then
				GUI_Object_ValidateValue objMainWinPage.WebEdit("html id:=l_L427","index:=63"), strTrusteeName, "Trust Name"
			End If 
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Address")) Then
				GUI_Object_ValidateValue objMainWinPage.WebEdit("html id:=TextBox8","index:=64"), FRM_DS_GetValue(objData, "Address"), "Address"
			End If 
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "City")) Then
				GUI_Object_ValidateValue objMainWinPage.WebEdit("index:=65","html id:=TextBox9"), FRM_DS_GetValue(objData, "City"), "City"
			End If
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "State")) Then
				GUI_Object_ValidateValue objMainWinPage.WebEdit("html id:=TextBox10","index:=66"), FRM_DS_GetValue(objData, "State"), "State"
			End If
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "ZipCode")) Then
				GUI_Object_ValidateValue objMainWinPage.WebEdit("html id:=l_1912","index:=67"), Trim(FRM_DS_GetValue(objData, "ZipCode")), "Zip"
			End If 
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "PhoneNumber")) Then
				intLoanFilePhone = GUI_Object_GetPropertyValue(objMainWinPage.WebEdit("html id:=TextBox28","index:=71"),"value")
				FRM_VerifyEqual cstr(Replace(intLoanFilePhone,"-", "")), cstr(FRM_DS_GetValue(objData, "PhoneNumber")), "Validate phone value ", "Actual is "&FRM_DS_GetValue(objData, "PhoneNumber")&" and Expected is "&Replace(intLoanFilePhone,"-", "")&" are equal"
			End If 
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Date")) Then
				GUI_Object_ValidateValue objMainWinPage.WebEdit("html id:=TextBox12","index:=68"), FRM_DS_GetValue(objData, "Date"), "Trust Date"
			End If 
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "OrgType")) Then
				GUI_Object_ValidateValue objMainWinPage.WebEdit("html id:=boxOrgType","index:=70"), FRM_DS_GetValue(objData, "OrgType"), "Org. Type"
			End If 
			If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "OrgState")) Then
				GUI_Object_ValidateValue objMainWinPage.WebList("html id:=boxOrgState","index:=0"), FRM_DS_GetValue(objData, "OrgState"), "Org. State"
			End If 
		
	End Select
	
	Set objMainWin 	  	= Nothing
	Set objData		  	= Nothing
	Set objMainWinPage	= Nothing

End Function 



'This function is for Add new Disclosure Tracking Forms to Disclosures list
'@code
'   BIZ_Settings_Loansetup_PiggybackLoanSync_CreateSyncField(strFieldID) 
'@endcode
'@Param strSyncFieldId - Sync Field Id

Function BIZ_Settings_Loansetup_PiggybackLoanSync_CreateSyncField(strFieldID)

	FRM_Logger_ReportInfoEvent "Add a new Sync field","Verify if the user is able to Add a new Sync field", Null
		
	Dim objSettings, objData, objContactList
	
	Set objSettings 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objContactList  = objSettings.SwfObject("swfname:=listView")
	
	'Adding New Sync Field
	GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnNew"), "SwfObject", "Add New Record in Piggyback Loan Synchronization page"
	
	If UTIL_String_IsNotEmpty(strFieldID) Then
		GUI_SwfEdit_Type objSettings.SwfWindow("swfname:=AddFields").SwfEdit("swfname:=textBoxID1"), strFieldID
	End If
	
	GUI_Object_Click objSettings.SwfWindow("swfname:=AddFields").SwfButton("swfname:=okBtn"), "SwfButton", "Click on add button in Piggyback Loan Synchronization page"
	
	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
	   	'Click the Save icon
	   	GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnSave"), "SwfObject", "Add New Record in Piggyback Loan Synchronization page"
	   	Wait g_TinyWaitShort 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	End if 
	
	Set objData     	= Nothing
	Set objSettings 	= Nothing
	Set objContactList  = Nothing
	
End Function



' This function is for Delete an existing sync field.
'@code
'   BIZ_Settings_Loansetup_PiggybackLoanSync_DeleteSyncField(strSyncFieldId) 
'@endcode
'@Param strSyncFieldId - Sync Field Id

Function BIZ_Settings_Loansetup_PiggybackLoanSync_DeleteSyncField(strSyncFieldId)
	
	FRM_Logger_ReportInfoEvent "Delete an existing Sync field","Verify if the user is able to Delete an existing Sync field", Null
	
	Dim objSettings, boolExist, intRowIndex, boolTextExist
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
		
	boolExist = GUI_List_SelectItem (objSettings.SwfObject("swfname:=listView"),cstr(strSyncFieldId),"Field ID")
	If boolExist Then
	
		'Deleting the Sync Record
		GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnDelete"), "SwfObject", "Click the Delete icon for Existing Record insync fields list"
		BIZ_Settings_Dialog_YES_Click
	
	   'Click the Save icon
	   	GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnSave"), "SwfObject", "Save the Record" 
	   	Wait g_TinyWaitShort ' Due To Sync Issue We Are Explicitly Passing Wait Statement
	   
	   'Validating Deleted Record
		boolTextExist = GUI_List_TextExists(objSettings.SwfObject("swfname:=listView"),"Field ID",cstr(strSyncFieldId))
		If not boolTextExist Then
			FRM_Logger_ReportPassEvent "Verify Delete an existing Sync field", "Deleted existing Sync field  '"&cstr(strSyncFieldId)&"' Deleted", null
		Else
			FRM_Logger_ReportFailEvent "VerifyDelete an existing Sync field", "Not Deleted existing Sync field '"&cstr(strSyncFieldId)&"' Not Deleted", null
		End If
		
	Else 
		FRM_Logger_ReportFailEvent "Piggyback Loan Synchronization", "'"&strSyncFieldId&"' field doesn't exists", null	
	End If
	
	
	Set objSettings  = Nothing
	
			
End Function



' This function is for Set/Change the Default input form Default Value
' @code
'   BIZ_Settings_LoanSetup_SetDefaultInputFormSettings(strFormName,strDesc)
' @endcode 
' @param strFormName - Form Names
' @Param strDesc - Type of setting Default/NonDefault

Function BIZ_Settings_LoanSetup_SetDefaultInputFormSettings(strFormName,strDesc)
	
	FRM_Logger_ReportInfoEvent "Checking "&strDesc&" settings of Input forms ", "Verification "&strDesc&" settings of Input forms started", Null
    
	Dim objSettings,objDefaultInputForms,objScrollbar,intRowNum,intColumnNum,boolExist,strStatus
	
	Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDefaultInputForms= objSettings.SwfObject("swfname:=listViewForms")
	Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
	
	intRowNum 	 = GUI_List_GetRowIndex(objDefaultInputForms,"Name",strFormName)
	intColumnNum = GUI_List_GetColumnIndexByTitle(objDefaultInputForms, "Default List")
 	
 	boolExist = GUI_List_ClickRow (objDefaultInputForms, objScrollbar, "Name", strFormName, True, False, False, "Single")
    
    If boolExist Then
     	If ucase(strDesc) = Ucase("Default") Then 
			FRM_Logger_ReportInfoEvent "Set 'Default' Settings", "'Default' Button selected for '"&strFormName&"' ", Null
	        GUI_SwfObject_Click objSettings.SwfObject("swfname:=defaultBtn")
	        GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	 		GUI_Object_WaitTillExistX objDefaultInputForms, 120
	 		strStatus = GUI_List_GetCellData(objDefaultInputForms,intRowNum,intColumnNum)
	 		FRM_VerifyEqual  Ucase(strStatus),Ucase("Yes") , "Validate Default Setting as 'Yes' for '"&strFormName&"'", "Default Status is 'Yes'"
	 	Else
			FRM_Logger_ReportInfoEvent "Set 'Not Default' Settings", "'Not Default' Button selected for '"&strFormName&"' ", Null
	        GUI_SwfObject_Click objSettings.SwfObject("swfname:=notDefaultBtn")
	        GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	 		GUI_Object_WaitTillExistX objDefaultInputForms, 120
	 		strStatus = GUI_List_GetCellData(objDefaultInputForms,intRowNum,intColumnNum)
	 		FRM_VerifyEqual  Ucase(strStatus),Ucase("No") , "Validate Not Default Setting as 'NO' for '"&strFormName&"'", "Default Status is 'No'"
	 	End If 
 	Else
 		FRM_Logger_ReportFailEvent "Set 'Default Form Names' in grid", "'"&strFormName &"' doesn't exists in the grid", Null
	End If 
	
	Set objSettings 		 = Nothing
	Set objDefaultInputForms = Nothing
	Set objScrollbar 		 = Nothing
	
End Function



'This function is used to disable Alert
'@code
'    BIZ_Alerts_DisableAlert(strAlertsName)
'@endcode
'@param strAlertsName - The name of alert

Function BIZ_Alerts_DisableAlert(strAlertsName)
	
	BIZ_Nav_HierarchyTree "Loan Setup","Alerts"
	
	FRM_Logger_ReportInfoEvent "Loan Setup;Alerts","Disable alert: '"&strAlertsName&"' in Alerts List",Null
	
	Set objAlertEditor = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AlertEditor")
	
	'Select and disable the alert
	BIZ_Alerts_Select strAlertsName, "Double"
	GUI_SwfRadioButton_Click objAlertEditor.SwfRadioButton("swfname:=radAlertDisabled")
	GUI_SwfButton_Click objAlertEditor.SwfButton("swfname:=btnSave")
	BIZ_Nav_Settings_Close 
	
	Set objAlertEditor = Nothing
End Function



'This function is used to set data and modifying Loan Setup > Alerts
'@code
'    BIZ_LoanSetup_Alerts_EditAlert(strRowID)
'@endcode
'@param strRowID - rowID from excel sheet to fetch required data

Function BIZ_LoanSetup_Alerts_EditAlert(strRowID)
	
	BIZ_Nav_HierarchyTree "Loan Setup", "Alerts"
	
	Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objAlertEditor = objMainView.SwfWindow("swfname:=AlertEditor")
	Set objAddTriggerFields = objAlertEditor.SwfWindow("swfname:=AddFields")
	Set objData = FRM_DS_GetTestData("Settings_LoanSetup", "Alerts", strRowID)
	
	Dim strAlertsName
	strAlertsName = FRM_DS_GetValue(objData, "AlertsName")
	BIZ_Alerts_Select strAlertsName, "Double"
	
	Dim arrStrFieldTrigger
	'Field Triggers
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Add_FieldTriggers")) Then
		
		FRM_Logger_ReportInfoEvent "Loan Setup >> Alerts", "Add selected Field Triggers for alert: '"&strAlertsName&"'",Null
		arrStrFieldTrigger = Split(FRM_DS_GetValue(objData, "Add_FieldTriggers"),";")
		For i = 0 To UBound(arrStrFieldTrigger) Step 1
			GUI_SwfObject_Click objAlertEditor.SwfObject("swfname:=btnAddField")
			GUI_SwfEdit_Set objAddTriggerFields.SwfEdit("swfname:=textBoxID1"),arrStrFieldTrigger(i)
			GUI_SwfButton_Click objAddTriggerFields.SwfButton("swfname:=okBtn")
		Next
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Remove_FieldTriggers")) Then
		
		FRM_Logger_ReportInfoEvent "Loan Setup >> Alerts", "Remove selected Field Triggers for alert: '"&strAlertsName&"'",Null
		boolres=GUI_List_ClickRow(objAlertEditor.SwfObject("swfname:=gvFields"),Null,1,FRM_DS_GetValue(objData,"Remove_FieldTriggers"),True,False,False,"Double")
		If boolres Then
		GUI_SwfObject_Click objAlertEditor.SwfObject("swfname:=btnRemoveField")
		GUI_WinButton_Click objAlertEditor.Dialog("text:=Encompass").WinButton("text:=&Yes")
		End If
	End If
	
	'Alerts (Enable or Disable)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EnableAlert")) Then
		If FRM_DS_GetValue(objData,"EnableAlert") ="Yes" Then
			FRM_Logger_ReportInfoEvent "Loan Setup >> Alerts", "Enable selected alert: '"&strAlertsName&"'",Null
			GUI_SwfRadioButton_Click objAlertEditor.SwfRadioButton("swfname:=radAlertEnabled")
		ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"EnableAlert"))="No" Then
			FRM_Logger_ReportInfoEvent "Loan Setup >> Alerts", "Disable selected alert: '"&strAlertsName&"'",Null
			GUI_SwfRadioButton_Click objAlertEditor.SwfRadioButton("swfname:=radAlertDisabled")
		End If
	End If
	
	'Milestone selection to which the rule applies
	Set objMilestoneSelection = objAlertEditor.SwfWindow("swfname:=MilestoneSelectionDialog")
	Dim arrStrMilestone
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"SelectMilestone")) Then
		GUI_SwfButton_Click objAlertEditor.SwfButton("swfname:=btnMilestone")
		arrStrMilestone = Split(FRM_DS_GetValue(objData,"SelectMilestone"),";")
		For i = 0 To UBound(arrStrMilestone) Step 1
			GUI_List_ClickCheckbox objMilestoneSelection.SwfObject("swfname:=lsvMilestone"),Null,arrStrMilestone(i),0,True,False,"Single",True
		Next
		GUI_SwfButton_Click objMilestoneSelection.SwfButton("swfname:=btnOK")
	End If
	
	'Trigger Date
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"TriggerDate")) Then
		FRM_Logger_ReportInfoEvent "Loan Setup >> Alerts","Apply Trigger Data to alert: '"&strAlertsName&"'",Null
		GUI_SwfRadioButton_Click objAlertEditor.SwfRadioButton("swfname:=rdo"&FRM_DS_GetValue(objData,"TriggerDate"))
	End If 
		
	'Save
	GUI_SwfButton_Click objAlertEditor.SwfButton("swfname:=btnSave")
	
	BIZ_Nav_Settings_Close()
	
	Set objMainView = Nothing
	Set objAlertEditor = Nothing
	Set objAddTriggerFields = Nothing
	Set objData = Nothing
	Set objMilestoneSelection=Nothing
End Function



' This function is for Add new Disclosure Tracking Forms to Disclosures list
' @code
'   BIZ_Setting_Loansetup_CreateDisclosureTrackingSettings(strRowID) 
' @endcode
' @Param strRowID - is row id in excel for reading data

Function BIZ_Setting_Loansetup_CreateDisclosureTrackingSettings(strRowID)

	FRM_Logger_ReportInfoEvent "Add new Disclosure Tracking Forms","Verify if the user is able to Add new Disclosure Tracking Forms to Disclosures list", Null

	Dim objSettings,objDisclosureTrackingList,objScrollBar,objData,objTabControl,intRowIndex,strDefaultTemplate,boolExist
	
	Set objSettings				  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDisclosureTrackingList = objSettings.SwfWindow("swfname:=DisclosureTrackingForms")
	Set objScrollBar			  = objDisclosureTrackingList.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objTabControl			  = objDisclosureTrackingList.SwfObject("swfname:=tabControlEx1")
	Set objData 				  = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)

	GUI_Object_Click objSettings.SwfObject("swfname:=siBtnNew"), "SwfObject", "Add New Record in Disclosure Tracking Forms"
	strDiscTrackingForm = FRM_DS_GetValue(objData, "DefaultFormname")
	Select Case strDiscTrackingForm
		Case "Standard Forms"
			FRM_Logger_ReportInfoEvent "Verify Standard forms tab", "Selected that standard form tab '"&strDiscTrackingForm&"' Selected", null
			GUI_SwfObject_SelectFormsTab objTabControl,strDiscTrackingForm
			
			strLookIn 			= FRM_DS_GetValue(objData,"FormName")
			strDefaultTemplate  = FRM_DS_GetValue(objData, "DisclosureFormName")
	
			If Not UTIL_String_IsEmpty(strLookIn) Then
				GUI_SwfComboBox_Select objDisclosureTrackingList.SwfComboBox("swfname:=cboFormTypes"), strLookIn
			End If
			
			GUI_List_ClickRow objDisclosureTrackingList.SwfObject("swfname:=gridViewFiles"), objScrollBar,"Name", strDefaultTemplate, True, False, False, "Single"
			GUI_Object_Click objDisclosureTrackingList.SwfButton("swfname:=btnAdd"), "SwfButton", "Click on 'Add' button in 'Disclosure Tracking Forms'"
			Wait g_TinyWaitShort 'Explicit Wait Added Due to Sync
			boolExist=GUI_List_TextExists(objDisclosureTrackingList.SwfObject("swfname:=gridViewSelectedFiles"), 0,cstr(strDefaultTemplate))
			FRM_VerifyTrue boolExist,"Verify Disclosure Form Name in seleted View","'"&strDefaultTemplate&"' is in selected view"
			GUI_Object_Click objDisclosureTrackingList.SwfObject("swfname:=btnOk"), "swfname", "Click on ok button in Disclosure Tracking Forms"
			Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
			intRowIndex=GUI_List_GetRowIndex(objSettings.SwfObject("swfname:=gvForms"), 0, strDefaultTemplate)
			GUI_List_ValidateCellData objSettings.SwfObject("swfname:=gvForms"), intRowIndex, 0, strDefaultTemplate
	Case Else
			FRM_Logger_ReportFailEvent "Select Disclosure Tracking Settings Forms ","'"&strDiscTrackingForm&"' is not a valid Option", Null
	End Select
	
	Set objSettings               = Nothing
	Set objDisclosureTrackingList = Nothing
	Set objScrollbar    		  = Nothing
	Set objData           		  = Nothing
	Set objTabControl             = Nothing
	
	BIZ_Setting_Loansetup_CreateDisclosureTrackingSettings = strDefaultTemplate
	
End Function



' This function is for Delete an existing Disclosure Tracking Form from the Disclosures list.
' @code
'   BIZ_Setting_Loansetup_DeleteDisclosureTrackingSettings(strRowID) 
' @endcode
' @Param strRowID - is row id in excel for reading data
' @Param DefaultTempalte - Template Name

Function BIZ_Setting_Loansetup_DeleteDisclosureTrackingSettings(strRowID)
	
	FRM_Logger_ReportInfoEvent "Delete an existing Disclosure Tracking Form","Verify if the user is able to Delete an existing Disclosure Tracking Form from the Disclosures list", Null
	
	Dim objSettings,objScrollBar,boolExist
	
	Set objSettings  				= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDisclosureTrackingList 	= objSettings.SwfObject("swfname:=gvForms")
	Set objScrollBar 				= objDisclosureTrackingList.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData 	 				= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	
	strDefaultTemplate  = FRM_DS_GetValue(objData, "DisclosureFormName")
	GUI_List_ClickRow objDisclosureTrackingList,objScrollBar, 0,strDefaultTemplate , FALSE, FALSE, FALSE, "Single" 'cloumn index is used due to No Column header   
	Wait g_TinyWaitShort 'Explicit Wait Added Due to Sync
	GUI_Object_Click objSettings.SwfObject("swfname:=stBtnDelete"), "SwfObject", "Delete New Record in Disclosure Tracking Forms"
	Wait g_TinyWaitLong 'Explicit Wait Added Due to Sync
	BIZ_Settings_Dialog_YES_Click
	GUI_Object_WaitTillExistX objSettings.SwfObject("swfname:=stdIconBtnSave"),60
	GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnSave"), "SwfObject", "Save Deleted Record"	
	Wait g_TinyWaitLong 'Explicit Wait Added Due to Sync
	boolExist = GUI_List_TextExists( objSettings.SwfObject("swfname:=gvForms"), 0,cstr(strDefaultTemplate))
	FRM_VerifyFalse boolExist,"Verify Deleted Form Name","'"&strDefaultTemplate &"' form Deleted in Disclosure Tracking Form "

	Set objSettings  = Nothing
	Set objScrollBar = Nothing
	Set objData 	 = Nothing		
End Function



' Verifying Organization specific checkbox is checked or not
'@code
'   BIZ_LoanSetup_VerifyMersMinNumberingStatus()
'@endcode

Function BIZ_LoanSetup_VerifyMersMinNumberingStatus()
	
	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_VerifyMersMinNumberingStatus", "Verifying the MersMinNumbering status is Enabled or Disabled", null
	
	Dim objSettings, objMersMinDialog, boolStatus
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMersMinDialog = objSettings.SwfWindow("swfname:=BranchMERSMINDialog")
	
	GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnBranchMERS")
	GUI_Object_WaitTillExist(objMersMinDialog)
	
	If GUI_Object_IsExist(objMersMinDialog) Then
		GUI_List_ActOnRow objMersMinDialog.SwfObject("swfname:=gvMERS"), 0, True, False, False, "Double"
		GUI_Object_WaitTillExist(objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog"))
		
		If GUI_Object_IsExist(objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog")) Then
			boolStatus = GUI_Object_GetPropertyValue(objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog").SwfCheckBox("swfname:=chkUseBranch"), "checked")
			If boolStatus = False Then
				FRM_Logger_ReportPassEvent "Pre-Condition: Generate Organization Specific MERS MIN checkbox should be disabled ", "Generate Organization Specific MERS MIN checkbox is disabled ", Null
			End If
		End If
	End If
	
	GUI_SwfButton_Click objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog").SwfButton("swfname:=okBtn")
	GUI_SwfButton_Click objMersMinDialog.SwfButton("swfname:=btnClose")
	
	Set objSettings      = Nothing
	Set objMersMinDialog = Nothing
	
	BIZ_LoanSetup_VerifyMersMinNumberingStatus = boolStatus

End Function



'This function is for Entering Data in AutoMersMinNumbering Window in loan setup 
'@code
'    BIZ_LoanSetup_AddMersMinNumberingData(strRowID, ValueForCheckBox)
'@endcode
'@param strRowID RowID for data
'@param ValueForCheckBox Value for checkbox

Function BIZ_LoanSetup_AddMersMinNumberingData(strRowID, ValueForCheckBox)
	
	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_AddMinMersNumberingData", "Entering the data for Mers Min", null
	
	Dim objData, objSettings, intOrganizationID, intItemization, intMersMinNumber
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData = FRM_DS_GetTestData("LoanSetup", "MersMinNumbering", strRowID)
	
	intOrganizationID = FRM_DS_GetValue(objData, "OrganizationID")
	intItemization    = FRM_DS_GetValue(objData, "NextNumber")
	intMersMinNumber  = intOrganizationID & intItemization
	
	If GUI_Object_IsExist(objSettings) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=orgIDTxt"), intOrganizationID
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=nextNumTxt"), intItemization
		GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=autoChk"), ValueForCheckBox
	End If
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	
	If UTIL_String_IsNotEmpty(intOrganizationID) Then
		GUI_Object_ValidateProperty objSettings.SwfEdit("swfname:=orgIDTxt"), "text", CStr(intOrganizationID), "OrganizationID"
	End If
	
	If UTIL_String_IsNotEmpty(intItemization) Then
		GUI_Object_ValidateProperty objSettings.SwfEdit("swfname:=nextNumTxt"), "text", CStr(intItemization), "NextNum"
	End If
	
	Set objData     = Nothing
	Set objSettings = Nothing
	
	BIZ_LoanSetup_AddMersMinNumberingData = Cstr(intMersMinNumber)
	
End Function



'This function is for Cheking or unchecking the Organization specific checkbox 
'@code
'    BIZ_LoanSetup_MakeEnableOrDisableMinMers(ValueForCheckBox)
'@endcode
'@param ValueForCheckBox Value for checkbox

Function BIZ_LoanSetup_MakeEnableOrDisableMinMers(ValueForCheckBox)

	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_MakeEnableOrDisableMinMers", "Checking Or Uncheking the Organization specific checkbox", null
	
	Dim objSettings, objMersMinDialog, strAutoMersMin, arrAutoMersMin
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMersMinDialog = objSettings.SwfWindow("swfname:=BranchMERSMINDialog")
	Set objMersMinEditDialog = objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog")
	GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnBranchMERS")
	GUI_Object_WaitTillExist(objMersMinDialog)
	If GUI_Object_IsExist(objMersMinDialog) Then
		GUI_List_ActOnRow objMersMinDialog.SwfObject("swfname:=gvMERS"), 0, True, False, False, "Double"
		GUI_Object_WaitTillExist(objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog"))
		If GUI_Object_IsExist(objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog")) Then
			GUI_SwfCheckbox_Set objMersMinEditDialog.SwfCheckBox("swfname:=chkUseBranch"), ValueForCheckBox
		End If
	End If
	
	If ValueForCheckBox = UCase("On") Then
		strOrgID       = GUI_Object_GetPropertyValue(objMersMinEditDialog.SwfEdit("swfname:=codeTxt"), "text")
		strNextNum     = GUI_Object_GetPropertyValue(objMersMinEditDialog.SwfEdit("swfname:=nextNumTxt"), "text")
		strAutoMersMin = GUI_Object_GetPropertyValue(objMersMinEditDialog.SwfLabel("swfname:=exampleLbl"), "text")
		GUI_Object_ValidateChecked objMersMinEditDialog.SwfCheckBox("swfname:=chkUseBranch"), True, " Status is enabled"
		FRM_Logger_ReportInfoEvent "Generate organization specific MERS MIN checkbox is enabled", "Auto generated OrgID is '"&strOrgID&"' and Next Number is '"&strNextNum&"'", null
		arrAutoMersMin = Split(strAutoMersMin," ")
		BIZ_LoanSetup_MakeEnableOrDisableMinMers = arrAutoMersMin(1)
	Else
		GUI_Object_ValidateChecked objMersMinEditDialog.SwfCheckBox("swfname:=chkUseBranch"), False, "Verify Status is disabled"
	End If

	GUI_SwfButton_Click objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog").SwfButton("swfname:=okBtn")
	GUI_SwfButton_Click objMersMinDialog.SwfButton("swfname:=btnClose")
	
	Set objSettings          = Nothing
	Set objMersMinDialog     = Nothing
	Set objMersMinEditDialog = Nothing
	
End Function



'This function is used to create Zipcode 
'@code
'    BIZ_Settings_LoanSetup_SetZipcode(strRowID)
'@endcode
'@param strRowId - test data row id

Function BIZ_Settings_LoanSetup_SetZipcode(strRowID)
	
	FRM_Logger_ReportInfoEvent "ZipcodeSetup - Verify if the user is able to Add a new Zipcode","Verification of addition of Zip code by user", Null
	
	Dim objMainWin, objZipcodeWin, objData
	Set objMainWin    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objZipcodeWin = objMainWin.SwfWindow("swfname:=EditZipcodeForm")
	Set objData       = FRM_DS_GetTestData("Settings_Loansetup", "Zipcode", strRowID)	
	
	strZipCode = FRM_DS_GetValue(objData, "ZipCode")
	If UTIL_String_IsNotEmpty (strZipCode) Then
		GUI_SwfEdit_Set objZipcodeWin.SwfEdit("swfname:=txtZip"), strZipCode
	End If
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "City")) Then
		GUI_SwfEdit_Set objZipcodeWin.SwfEdit("swfname:=txtCity"), FRM_DS_GetValue(objData, "City")
	End If 
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "State")) Then 
		GUI_SwfComboBox_Select objZipcodeWin.SwfComboBox("swfname:=cboState"), FRM_DS_GetValue(objData, "State")
	End If
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Country")) Then 
		GUI_SwfEdit_Set objZipcodeWin.SwfEdit("swfname:=txtCounty"), FRM_DS_GetValue(objData, "Country")
	End If
	
	GUI_Object_WaitTillEnabledX objZipcodeWin, 10
	GUI_SwfButton_Click objZipcodeWin.SwfButton("swfname:=btnOK")
	
	Set objMainWin 	  = Nothing
	Set objZipcodeWin = Nothing
	Set objData		  = Nothing	
	
	BIZ_Settings_LoanSetup_SetZipcode = strZipCode
End Function



'This function is used to create Zipcode 
'@code
'    BIZ_Settings_LoanSetup_CreateZipcodeSetUp(strRowId)
'@endcode
'@param strRowId - test data row id

Function BIZ_Settings_LoanSetup_CreateZipcodeSetUp(strRowId)
	FRM_Logger_ReportInfoEvent "ZipcodeSetup - Verify if the user is able to Add a new Zipcode","Verification of addition of Zip code by user", Null
	
	Dim strZipCode
	BIZ_Settings_ClickAdd()

	'Enter test data in Zipcode window
	strZipCode = BIZ_Settings_LoanSetup_SetZipcode (strRowID)
	
	BIZ_Settings_LoanSetup_CreateZipcodeSetUp = strZipCode
	
End Function



'This function is used to create Zipcode 
'@code
'    BIZ_Settings_LoanSetup_EditZipcodeSetUp(strRowId,strZipcode)
'@endcode
'@param strRowId - test data row id
'@param strZipcode - Zipcode 

Function BIZ_Settings_LoanSetup_EditZipcodeSetUp(strRowId,strZipcode)
	FRM_Logger_ReportInfoEvent "ZipcodeSetup - Verify if the user is able to Edit Zipcode","Verification of Edit of Zip code by user", Null
	
	Dim objMainWin, objZipcodeWin, objZipcodeList 
 	Set objMainWin		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objZipcodeWin	= objMainWin.SwfWindow("swfname:=EditZipcodeForm")
	Set objZipcodeList	= objMainWin.SwfObject("swfname:=lvwZipcode")
	
	GUI_List_SelectItem objZipcodeList,strZipcode,"Zipcode"
	BIZ_Settings_ClickEdit() 
	GUI_Object_WaitTillExistX objZipcodeWin, 20
	
	'Enter test data in Zipcode window
	strEditZipcode = BIZ_Settings_LoanSetup_SetZipcode(strRowID)
	GUI_Object_WaitTillExistX objZipcodeList, 10
	
	Set objMainWin		= Nothing
 	Set objZipcodeWin	= Nothing
 	Set objZipcodeList	= Nothing
 	
	BIZ_Settings_LoanSetup_EditZipcodeSetUp	= strEditZipcode
End Function



'This function is used to Delete Zipcode 
'@code
'    BIZ_Settings_LoanSetup_DeleteZipcode(strZipcode,strDialogYesorNo)
'@endcode
'@param strZipcode - Zipcode 
'@param strDialogYesorNo - Yes/No

Function BIZ_Settings_LoanSetup_DeleteZipcode(strZipcode,strDialogYesorNo)
	FRM_Logger_ReportInfoEvent "Verify Delete Zipcode","Verification of Zipcode Delete Options", Null
	Dim objMainWin, objData,objZipcodeList, objEncompassDialog, intRowIndex
	Set objMainWin  		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEncompassDialog	= objMainWin.Dialog("text:=Encompass")
	Set objZipcodeList		= objMainWin.SwfObject("swfname:=lvwZipcode")
	strStaticMsg 			= "Are you sure you want to delete selected zipcode record?"

	GUI_List_SelectItem objZipcodeList, strZipcode,"Zipcode"
	BIZ_Settings_ClickDelete()
	GUI_Object_WaitTillExistX objEncompassDialog,60
	strEncomPassWarn = GUI_Object_GetPropertyValue(objEncompassDialog.Static("nativeclass:=Static","index:=1"),"text")
	FRM_VerifyEqual strEncomPassWarn,strStaticMsg , "Verify Encompass dialog with warning", "Verified the warning as '"&strEncomPassWarn&"'"
	Select Case strDialogYesorNo
		Case "No"
			BIZ_Settings_Dialog_NO_Click()
			Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
			intRowIndex=GUI_List_GetRowIndex(objZipcodeList,"Zipcode", cstr(strZipcode))
			If intRowIndex>=0 Then
				FRM_Logger_ReportPassEvent "Verify Encompass dialog closed and '"&strZipcode&"' exists in list ","Verified  Encompass dialog and '"&strZipcode&"' is not deleted from the list", Null	
			Else
				FRM_Logger_ReportFailEvent "Verify Encompass dialog closed and '"&strZipcode&"' exists in list ","Verified  Encompass dialog and '"&strZipcode&" is deleted from the list", Null	
			End If
			
		Case "Yes"
			BIZ_Settings_Dialog_YES_Click()
			Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
			intRowIndex=GUI_List_GetRowIndex(objZipcodeList,"Zipcode", cstr(strZipcode))
			If intRowIndex<0 Then
				FRM_Logger_ReportPassEvent "Verify Encompass dialog closed and selected Zipcode is deleted from the 'Zipcode Setup' list box.","Verified  Encompass dialog and '"&strZipcode&"' Zipcode deleted from the list", Null
			Else
				FRM_Logger_ReportFailEvent "Verify Encompass dialog closed and selected Zipcode is deleted from the 'Zipcode Setup' list box.","Failed to delete '"&strZipcode&"'", Null
			End If
		Case Else
			FRM_Logger_ReportFailEvent "Verify encompass dialog static text","'"&strDialogYesorNo&"' is not a valide option", Null
	End Select
	
	Set objMainWin 		   = Nothing
	Set objEncompassDialog = Nothing
	Set objZipcodeList	   = Nothing
End Function



'This function is used to validate zipcode in zipcode list window 
'@code
'    BIZ_Settings_LoanSetup_ValideZipcodeSetup(strRowId,strZipcode)
'@endcode
'@param strRowId - test data row id
'@param strZipcode - Zipcode to select

Function BIZ_Settings_LoanSetup_ValideZipcodeSetup(strRowId,strZipcode)
	
	FRM_Logger_ReportInfoEvent "Verify in Zipcode setup grid","Verification of Zipcode data in the Zipcode setup grid ", Null
	
	Dim objMainWin,objZipcodeList,objData 
	Set objMainWin    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objZipcodeList  = objMainWin.SwfObject("swfname:=lvwZipcode")
	Set objData			= FRM_DS_GetTestData("Settings_Loansetup", "Zipcode", strRowId)
	
	GUI_Object_WaitTillExistX objZipcodeList, 10
	strAction		= FRM_DS_GetValue(objData, "Action")
	'Validating Enter Details Exist in GUIList
	intRecordCnt = GUI_List_GetRowIndex(objZipcodeList,"Zipcode",cstr(strZipcode))
	If intRecordCnt>=0 Then
		FRM_Logger_ReportPassEvent "'"&strAction&"' Zipcode Setup","Zipcode Setup '"&strAction&"' with name: '"&strZipcode&"'",null	
		GUI_List_ValidateCellDataWithCustomMsg objZipcodeList,intRecordCnt,"Zipcode", cstr(strZipcode),"Zipcode"
		GUI_List_ValidateCellDataWithCustomMsg objZipcodeList,intRecordCnt,"City", FRM_DS_GetValue(objData, "City"),"City"
		GUI_List_ValidateCellDataWithCustomMsg objZipcodeList,intRecordCnt, "State", FRM_DS_GetValue(objData, "State"),"State"
		GUI_List_ValidateCellDataWithCustomMsg objZipcodeList,intRecordCnt, "County", FRM_DS_GetValue(objData, "Country"),"County"
	Else
		FRM_Logger_ReportFailEvent "'"&strAction&"' Zipcode Setup","Zipcode Setup not '"&strAction&"'",null		
	End If
	
	Set objMainWin		= Nothing
	Set objZipcodeList	= Nothing
	Set objData			= Nothing	

End Function



'This function is used for Delete Changed Circumstance setup
'@code
'    BIZ_Settings_Loansetup_DeleteChangedCircumstancesetup(StrDesc,strDialogYesorNo)
'@endcode
'@Param strDesc - Record name to delete
'@param strDialogYesorNo - Yes/No

Function BIZ_Settings_Loansetup_DeleteChangedCircumstancesetup(StrDesc,strDialogYesorNo)

	FRM_Logger_ReportInfoEvent "Delete Changed Circumstance setup", "Delete Changed Circumstance setup Started ", null
	
	Dim  objSettings,objScrollbar,objListView,objSettingsDialog,Strtext,boolExist,strStaticMsg
	
	Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView 		= objSettings.SwfObject("swfname:=listViewOptions")
	Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objSettingsDialog	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
	strStaticMsg			= "Are you sure you want to delete selected option?"
	
	boolExist = GUI_List_ClickRow(objListView, objScrollbar, "Description", StrDesc, True, False, False, "Single")	
	FRM_Logger_ReportInfoEvent "Deleting the record for item '"&StrDesc&"'","'"&StrDesc&"' row selected to delete the record", null    
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDelete")	
	GUI_Object_WaitTillExistX objSettingsDialog,60
	GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strStaticMsg,"Popup Dialog's Static Message"	
	
	Select Case strDialogYesorNo
		Case "No"		
			BIZ_Settings_Dialog_NO_Click()
			Wait g_TinyWaitLarge 'Explicit Wait Added Due to Sync
		 	boolExist=GUI_List_TextExists (objListView,"Description",StrDesc)
	   		If boolExist Then
		  		FRM_Logger_ReportPassEvent "Verify Encompass dialog closed and '"&StrDesc&"' exists in list ","Verified Encompass dialog and '"&StrDesc&"' is not deleted from the list", Null	
		   Else
			  	FRM_Logger_ReportFailEvent "Verify Encompass dialog closed and '"&StrDesc&"' exists in list ","Failed - '"&StrDesc&" is deleted from the list", Null	
		   End If
		Case "Yes"
			BIZ_Settings_Dialog_YES_Click
			Wait g_TinyWaitLong 'Explicit Wait Added Due to Sync	
			boolExist=GUI_List_TextExists (objListView,"Description",StrDesc)
			If not boolExist Then
				FRM_Logger_ReportPassEvent "Verify Encompass dialog closed and selected '"&StrDesc&"' is deleted from the 'Changed Circumstance setup' list box.","Verified  Encompass dialog and '"&StrDesc&"' is deleted from the list", Null
			Else
				FRM_Logger_ReportFailEvent "Verify Encompass dialog closed and selected '"&StrDesc&"' is deleted from the 'Changed Circumstance Setup' list box.","Failed to delete '"&StrDesc&"'", Null
			End If
   		Case Else
			FRM_Logger_ReportFailEvent "Verify encompass dialog static text","'"&strDialogYesorNo&"' is not a valide option", Null
	End Select
		
	Set objSettings  		= Nothing
	Set objListView  		= Nothing
	Set objScrollbar 		= Nothing
	Set objSettingsDialog	= Nothing
    
End Function



'This function is used for Create new Circumstancesetup 
'@code
'    BIZ_Settings_Loansetup_SetChangedCircumstanceSetup(strRowId)
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel

Function BIZ_Settings_Loansetup_SetChangedCircumstanceSetup(strRowId)

	FRM_Logger_ReportInfoEvent "Create new Changed Circumstance Setup", "Create new Changed Circumstance Setup Started ", null
	
	Dim  objSettings,objData,strDescription,strReason,strCode,strComments
	
	Set objData 	= FRM_DS_GetTestData("Settings_Loansetup", "ChangedCircumstances", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	strDescription	= FRM_DS_GetValue(objData, "FormName")
	strReason		= FRM_DS_GetValue(objData, "Reason")
	strCode			= FRM_DS_GetValue(objData, "FormCode")
	strComments 	= FRM_DS_GetValue(objData, "Comments")
	
	If UTIL_String_IsNotEmpty(strDescription) Then
		GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtDescription"), strDescription
	End IF
	If UTIL_String_IsNotEmpty(strReason) Then
		GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cmbReason"), strReason
	End If
	If UTIL_String_IsNotEmpty(strCode) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtCode"), strCode
	End If
	If UTIL_String_IsNotEmpty(strComments) Then
		GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtComments"), strComments
	End If
	
	'Click on Save Button
	GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnSave"), "SwfObject","Save Button selected"

	Set objData      = Nothing
	Set objSettings  = Nothing
	
	BIZ_Settings_Loansetup_SetChangedCircumstanceSetup = strDescription &";"& strCode
	
End Function



'This function is used for Checking or unchecking the checkbox in RESPA in LoanSetup 
'@code
'    BIZ_LoanSetup_RESPA_CheckUncheckStatement(strOptionToCheckUncheck, strValue)
'@endcode
'@Param strOptionToCheckUncheck - option to checkOrUncheck
'@Param strValue - Value to set

Function BIZ_LoanSetup_RESPA_CheckUncheckStatement(strOptionToCheckUncheck, strValue)
	
	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_RESPA_CheckUncheckStatement", "check or uncheck the desired statement checkbox in RESPA", Null
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	If GUI_Object_IsExist (objSettings.Page("MicClass:=Page")) Then
	
		Select Case LCase(strOptionToCheckUncheck)
		
		Case LCase("We May assign, sell or transfer the servicing while loan is outstanding.")

			GUI_SwfCheckbox_Set objSettings.Page("MicClass:=Page").WebCheckBox("html id:=__cid_CheckBox1_Ctrl", "Index:=0"), strValue
			
		Case LCase("We do not service mortgage loans of the type for which you applied.")
	
			GUI_SwfCheckbox_Set objSettings.Page("MicClass:=Page").WebCheckBox("html id:=__cid_CheckBox2_Ctrl", "Index:=0"), strValue
			
		Case LCase("The loan for which you have applied will be serviced at this financial institution")
		
			GUI_SwfCheckbox_Set objSettings.Page("MicClass:=Page").WebCheckBox("html id:=__cid_CheckBox3_Ctrl", "Index:=0"), strValue
		
		Case Else
			
			FRM_Logger_ReportFailEvent "Wrong Option", "Option does not exist", Null
			
		End Select

	End If
	
	Set objSettings = Nothing
	
End Function



'This function is used for Checking or unchecking the print log and log data security 
'@code
'    BIZ_Settings_LoanSetup_SetLog(strRowID)
'@endcode
'@Param strRowID RowID for Data

Function BIZ_Settings_LoanSetup_SetLog(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_Settings_LoanSetup_SetLog", "Checking or unchecking the printing log and log data security option", Null
	
	Dim objSettings, objData
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "Log", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PrintingLog")) Then
		GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkBoxShowPrintingLogs"), FRM_DS_GetValue(objData, "PrintingLog")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LogDataSecurity")) Then
		GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkLockLog"), FRM_DS_GetValue(objData, "LogDataSecurity")
	End If
	
	strValue = GUI_Object_GetPropertyValue(objSettings.SwfObject("swfname:=stdIconBtnSave"), "enabled")
	
	If strValue Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If
	
	Set objSettings = Nothing
	Set objData		= Nothing
	
End Function



'This function is used for adding new conversation log 
'@code
'    BIZ_Loan_Tools_ConversationLog_AddNewLog(strRowID)
'@endcode
'@Param strRowID RowID for Data

Function BIZ_Loan_Tools_ConversationLog_AddNewLog(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_Loan_Tools_ConversationLog_AddNewLog", "Adding the new conversation log", Null
	
	Dim strName, strCompanyName, objLoanPage, objData
	Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
	Set objData = FRM_DS_GetTestData("Settings_LoanSetup", "Log",strRowID)
	
	strName = FRM_DS_GetValue(objData, "ConvLogName")
	strCompanyName = FRM_DS_GetValue(objData, "ConvLogCompanyName")
	
	GUI_SwfObject_Click objLoanPage.SwfObject("swfname:=btnNew")
	GUI_SwfEdit_Set objLoanPage.SwfEdit("swfname:=txtName"), strName
	GUI_SwfEdit_Set objLoanPage.SwfEdit("swfname:=txtCompany"), strCompanyName
	GUI_SwfObject_Click objLoanPage.SwfObject("swfname:=saveBtn")
	
	If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog")) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
	End If
	
	If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog")) Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog").SwfButton("swfname:=okBtn")
	End If
	
	Set objLoanPage = Nothing
	Set objData		= Nothing
	
End Function



'This function is used to Add Loan Folder
'@code
'		BIZ_Settings_CreateLoanFolder (strRowID,strArchiveInFolder,strIncludeInDuplicate)
'@endcode
'@param  strLoanFolder - string folder name for new folder    
'@param  strArchiveInFolder - "ON" or "OFF"
'@param  strIncludeInDuplicate - "ON" or "OFF"

Function BIZ_Settings_CreateLoanFolder (strRowID,strArchiveInFolder,strIncludeInDuplicate)

	Dim objMainView, objMaincheck, objData, strFolderName , objMainList , objSetting, boolLoanCreation
	
	Set objSetting		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMainList		= 	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvLoanFolders") 
	Set objMaincheck	=	SwfWindow("name:=MainForm").SwfWindow("name:=SetUpContainer").SwfWindow("name:=FolderSettingsDialog").SwfCheckBox("name:=chkDupLoan") 
	Set objMainView		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FolderSettingsDialog")
	Set objData 		= 	FRM_DS_GetTestData("Settings_Loansetup", "AddLoanFolder", strRowID)
	strFolderName		=	FRM_DS_GetValue(objData, "FolderName")		'@ Gets Folder Name
	
	GUI_Object_WaitTillVisibleX objMainList, 480		'@ To handle sync Related Issues 
	GUI_Object_WaitTillExistX objMainList, 480		'@ To handle sync Related Issues 
	boolExists = GUI_List_ClickRow(objMainList, objMainList.SwfScrollBar("swfname:=vPanelScrollBar"), "Folder Name" , strFolderName, True, False, False, "Single")
	
	If Not boolExists Then
	
		GUI_WinButton_Click objSetting.swfobject("swfname:=stdIconBtnNew")		'@ Selected New Button
		GUI_SwfCheckbox_Set objMaincheck,"OFF"		'@ Set duplicate checkbox off by default
		
		If GUI_Object_IsExist(objMainView) then
			FRM_Logger_ReportInfoEvent "Checking Window Existance", "'Create Loan Folder' window Exist", null
		End If
		
		If UTIL_String_IsNotEmpty(strFolderName) Then
			GUI_WinEdit_Set objMainView.SwfEdit("swfname:=txtBoxFolderName"),strFolderName		'@ Set folder name
			GUI_SwfCheckbox_Set objMainView.SwfCheckBox("name:=chkBoxArchiveFolder"),strArchiveInFolder		'@ Radio button "ON" or "OFF"
			GUI_SwfCheckbox_Set objMainView.SwfCheckBox("name:=chkDupLoan"),strIncludeInDuplicate		'@ Radio button "ON" or "OFF"
			GUI_SwfButton_Click (objMainView.SwfButton("name:=btnOK"))
			Wait g_TinyWaitLarge+g_ShortWaitMedium 'Explicit wait added due sync
			boolLoanCreation=GUI_List_TextExists (objMainList,"Folder Name",strFolderName)
			
			'If boolLoanCreation Then
			'	FRM_Logger_ReportPassEvent "Create Loan Folder under Loan Setup Using RowID: '"&strRowID&"' ", "Created the Loan Folder '"&strFolderName&"' in Settings_Loansetup", null
			'Else
				'FRM_Logger_ReportFailEvent "Create Loan Folder under Loan Setup Using RowID: '"&strRowID&"' ", "Unable to create Loan Folder '"&strFolderName&"' in Settings_Loansetup", null
			'End If
		Else
			FRM_Logger_ReportFailEvent "Datasheet needs to be filled","Corresponding RowID in sheet doesn't have folder name",Null
		End If
	Else
		FRM_Logger_ReportPassEvent "Loan Folder Creation","Loan Folder already Created",Null
	End If
	BIZ_Settings_CreateLoanFolder = strFolderName		'@ Returning To Function
	GUI_Window_Close objSetting		'@ Closing Window To Return To Main Menu
	
	Set objMainView		= 	Nothing
	Set objMaincheck	= 	Nothing
	Set objData 		= 	Nothing
	Set objMainList		= 	Nothing
	Set objSetting		=	Nothing
	
End Function



'This function is to add default template 
'@code
'	BIZ_LoanSetUp_AddDefaultTemplate(strRowID)
'@endcode
'@Param strRowID - Loansetup data getting from Setting_Loansetup Excel

Function BIZ_LoanSetUp_AddDefaultTemplate(strRowID)
	FRM_Logger_ReportInfoEvent "BIZ_LoanSetUp_AddDefaultTemplate", "Set BIZ_LoanSetUp_AddDefaultTemplate using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
	
	Dim objSettings,objData,strUIDefaultName,strFldrName,strLoanSetupType,strDefaultName
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData 	= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	
	strFldrName=FRM_DS_GetValue(objData, "FolderName")
	strLoanSetupType=FRM_DS_GetValue(objData, "LoanSetupType")
	strDefaultName=FRM_DS_GetValue(objData, "DefaultTemplateName")
	
	If Not UTIL_String_IsEmpty(strLoanSetupType) Then 
		BIZ_LoanSetup_SelectFolder strFldrName
	End If
				
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add New Record"
	
	'Verifying Default Record	
	Wait g_TinyWaitLarge  ''Due to Sync issuse Explicitly added wait 
	strUIDefaultName = GUI_Object_GetPropertyValue(objSettings.SwfEdit("micclass:=SwfEdit"),"Text")
	UTIL_Win_SendKey "{ENTER}"
	
	If instr(strDefaultName,strUIDefaultName)>=0  Then
		FRM_Logger_ReportPassEvent "Verify 'Default Name'","Verified 'Default Name'  '"& strUIDefaultName&"'",null
	Else 
		FRM_Logger_ReportFailEvent "Verify 'Default Name'","Failed 'Default Name' not matched '"& strUIDefaultName&"'",null	
	End If
	
	Set objSettings 	= Nothing
	Set objData			= Nothing
	
	BIZ_LoanSetUp_AddDefaultTemplate=strUIDefaultName

End Function



'This function is used to Check fields in Channel Options
'@code
'    BIZ_LoanSetup_SetChannelOptions(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanSetup data spreadsheet

Function BIZ_LoanSetup_SetChannelOptions(strRowID)

	FRM_Logger_ReportInfoEvent "Check Channel Options", "Check fields in Channel Options using Row ID '"&strRowID&"'", null
    
    Dim objData,objSettings,objdialog,arrCheckON,arrCheckOFF,intCheckON,intCheckOFF
	
	Set objData 		 = FRM_DS_GetTestData("Settings_Loansetup", "ChannelOptions", strRowID)
	Set objSettings 	 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objdialog        = objSettings.Dialog("text:=Encompass") 
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CheckOFF")) Then
		arrCheckOFF =  split(FRM_DS_GetValue(objData, "CheckOFF"),";")
		For intCheckOFF= 0 To ubound(arrCheckOFF)
			BIZ_LoanSetup_ChannelOptions_Checked arrCheckOFF(intCheckOFF),"OFF"
		Next
	End IF
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CheckON")) Then
		arrCheckON =  split(FRM_DS_GetValue(objData, "CheckON"),";")
		For intCheckON= 0 To ubound(arrCheckON)
			BIZ_LoanSetup_ChannelOptions_Checked arrCheckON(intCheckON),"ON"
		Next
	End If
	
	FRM_Logger_ReportInfoEvent "Check Checkboxes", "Checked Checkboxes in Channel Options", null
	GUI_SwfObject_Click objSettings.SwfObject("Swfname:=stdIconBtnSave")
	
	Set objData     = Nothing    
    Set objSettings = Nothing
    Set objdialog   = Nothing
        
End Function



'This function is used to Select fields in Channel Options
'@code
'    BIZ_LoanSetup_ChannelOptions_Checked(strChannelOption,strCheckOnOrOff)
'@endcode
'@param strChannelOption - Channel Option to Check (or) Uncheck checkboxes
'@param strCheckOnOrOff  - To Check ON (or) OFF

Function BIZ_LoanSetup_ChannelOptions_Checked(strChannelOption,strCheckOnOrOff)

	FRM_Logger_ReportInfoEvent "Select Channel Options", "Check  Fields in Channel Options", null
	
	Dim objSettings
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	Select Case strChannelOption
		Case "Banked - Retail"
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkBoxBankedRetail"),strCheckOnOrOff
			If strCheckOnOrOff = "ON"  Then
				GUI_Object_ValidateChecked objSettings.SwfCheckBox("swfname:=chkBoxBankedRetail"),True,strCheckOnOrOff
			End If
		Case "Banked - Wholesale"
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkBoxBankedWholesale"),strCheckOnOrOff
			If strCheckOnOrOff = "ON"  Then
				GUI_Object_ValidateChecked objSettings.SwfCheckBox("swfname:=chkBoxBankedWholesale"),True,strCheckOnOrOff
			End If	
		Case "Brokered"
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkBoxBrokered"),strCheckOnOrOff
			If strCheckOnOrOff = "ON"  Then
				GUI_Object_ValidateChecked objSettings.SwfCheckBox("swfname:=chkBoxBrokered"),True,strCheckOnOrOff
			End If
		Case "Correspondent"
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkBoxCorrespondent"),strCheckOnOrOff
			If strCheckOnOrOff = "ON"  Then
				GUI_Object_ValidateChecked objSettings.SwfCheckBox("swfname:=chkBoxCorrespondent"),True,strCheckOnOrOff
			End If
		Case Else
			FRM_Logger_ReportFailEvent "Check Checkboxes", "Checkboxes are not Checked in Channel Options", null
	End Select
	
	Set objSettings = Nothing
	
End Function



'This function is used for Create New Circumstancesetup 
'@code
'    BIZ_Settings_Loansetup_CreateChangedCircumstanceSetup(strRowId)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Setting_Loansetup data spreadsheet

Function BIZ_Settings_Loansetup_CreateChangedCircumstanceSetup(strRowId)

	FRM_Logger_ReportInfoEvent "Create new Circumstancesetup", "Create new Circumstancesetup  Started using '"&strRowId&"'", null
	
	Dim objData,objSettings,strNewTemplateName
	
	Set objData      = FRM_DS_GetTestData("Settings_Loansetup", "ChangedCircumstances", strRowID)
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
		
	FRM_Logger_ReportInfoEvent "Add Button", "Click on Add Icon", null
	GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnNew"), "SwfObject", "Add New Record in Change Circumstances"

	strCode = BIZ_Settings_Loansetup_ChangedCircumstanceSetupSetData(strRowId)

	Set objData      = Nothing
	Set objSettings  = Nothing
	Set objListView  = Nothing
	
	BIZ_Settings_Loansetup_CreateChangedCircumstanceSetup = strCode
		
End Function



'This function is used for Edit Changed Circumstance setup
'@code
'    BIZ_Settings_Loansetup_EditChangedCircumstanceSetup(strRowID,strCode)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Setting_Loansetup data spreadsheet
'@param strCode  - Code Value

Function BIZ_Settings_Loansetup_EditChangedCircumstanceSetup(strRowID,strCode)

	FRM_Logger_ReportInfoEvent "Edit Changed Circumstance setup", "Edit Changed Circumstance Setup using '"&strCode&"' ", null
	
	Dim  objSettings,objScrollbar,objListView,boolExist,strEditCode
	
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView  = objSettings.SwfObject("swfname:=listViewOptions")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
	
	boolExist = GUI_List_ClickRow(objListView, objScrollbar, "Code", strCode, True, False, False, "Single")
	If boolExist Then
		GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnEdit"), "SwfObject","Edit Button selected"
		strEditCode = BIZ_Settings_Loansetup_ChangedCircumstanceSetupSetData(strRowId)
	Else
		FRM_Logger_ReportFailEvent "Edit Changed Circumstancesetup","Changed Circumstancesetup not Edited",null	
	End If 
	
	Set objSettings  = Nothing
	Set objListView  = Nothing
	Set objScrollbar = Nothing
		
End Function



'This function is used for Set Circumstancesetup Data
'@code
'    BIZ_Settings_Loansetup_ChangedCircumstanceSetupSetData(strRowId)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Setting_Loansetup data spreadsheet

Function BIZ_Settings_Loansetup_ChangedCircumstanceSetupSetData(strRowId)

	FRM_Logger_ReportInfoEvent "Set Circumstancesetup", "Set Data using '"&strRowId&"'", null
	
	Dim objSettings,objData,strReason,strCode,strComments,strDesc
	
	Set objData      = FRM_DS_GetTestData("Settings_Loansetup", "ChangedCircumstances", strRowID)
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	strDesc = Trim(FRM_DS_GetValue(objData, "FormName"))
	If UTIL_String_IsNotEmpty(strDesc) Then
	   GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtDescription"), strDesc
	End If
	
	'Enter Reason 
	strReason = Trim(FRM_DS_GetValue(objData, "Reason"))
	If UTIL_String_IsNotEmpty(strReason) Then
	   GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cmbReason"), strReason
	End If
	
	'Enter code
	strCode = Trim(FRM_DS_GetValue(objData, "FormCode"))
	If UTIL_String_IsNotEmpty(strCode) Then
	   GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtCode"), strCode
	End If
	
	'Enter  comments
	strComments = Trim(FRM_DS_GetValue(objData, "Comments"))
	If UTIL_String_IsNotEmpty(strComments) Then
	   GUI_SwfEditor_Type objSettings.SwfEditor("swfname:=txtComments"), strComments	
	End If
		
	'Click on Save Button
	GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnSave"), "SwfObject","Save Button selected"
	
	Set objData      = Nothing
	Set objSettings  = Nothing
	
	BIZ_Settings_Loansetup_ChangedCircumstanceSetupSetData = strCode
	
End Function



'This function is used for Validate CircumstanceSetup 
'@code
'    BIZ_Settings_Loansetup_ValidateChangedCircumstanceSetup(strRowId,strCode)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Setting_Loansetup data spreadsheet
'@param strCode  - Code Value

Function BIZ_Settings_Loansetup_ValidateChangedCircumstanceSetup(strRowId,strCode)

	FRM_Logger_ReportInfoEvent "validate Circumstancesetup", "validate Circumstancesetup using '"&strCode&"'", null
	
	Dim objSettings,objData,objListView,strReason,intrc,strComments,strDesc
	
	Set objData      = FRM_DS_GetTestData("Settings_Loansetup", "ChangedCircumstances", strRowID)
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView  = objSettings.SwfObject("swfname:=listViewOptions")
	
	strReason   = Trim(FRM_DS_GetValue(objData, "Reason"))
	strComments = Trim(FRM_DS_GetValue(objData, "Comments"))
	strDesc 	= Trim(FRM_DS_GetValue(objData, "FormName"))
	
	intrc = GUI_List_GetRowIndex(objListView,"Code",strCode)
	
	If intrc >= 0 Then
		FRM_Logger_ReportPassEvent "New Changed Circumstancesetup","Changed CircumstanceSetup Created with name: "&strCode,null	
		
		If UTIL_String_IsNotEmpty(strReason) Then
			GUI_List_ValidateCellDataWithCustomMsg objListView, intrc,"Reason", strReason,"Reason"
		End If
		If UTIL_String_IsNotEmpty(strDesc) Then
			GUI_List_ValidateCellDataWithCustomMsg objListView, intrc,"Description", strDesc,"Description"	
		End If
		If UTIL_String_IsNotEmpty(strComments) Then
			GUI_List_ValidateCellDataWithCustomMsg objListView, intrc,"Comments", strComments,"Comments"
		End If		
		
	Else
		FRM_Logger_ReportFailEvent "Validate Changed CircumstanceSetup","Changed CircumstanceSetup is not validated",null		
	End If

	Set objData      = Nothing
	Set objSettings  = Nothing
	Set objListView  = Nothing
	
End Function



'This function is used to Delete CircumstanceSetup
'@code
'    BIZ_Settings_LoanSetup_DeleteCircumstanceSetup(strCode)
'@endcode
'@param strCode  - Code Value

Function BIZ_Settings_LoanSetup_DeleteCircumstanceSetup(strCode)
	
	FRM_Logger_ReportInfoEvent "Delete '"&strCode&"'","Delete '"&strCode&"' Under Settings", Null
	
	Dim objSettings,objListView,objScrollbar
	
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView  = objSettings.SwfObject("swfname:=listViewOptions")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
	
	GUI_List_ClickRow objListView, objScrollbar, "Description", strCode, True, False, False, "Single"
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDelete") 
	GUI_Dialog_Encompass_Yes "Yes"
	
	Set objSettings  = Nothing
	Set objListView	 = Nothing
	Set objScrollbar = Nothing
		
End Function



'This function is for Edit Values in MERS MIN Numbering Screen
'@code
'    BIZ_LoanSetup_EditMERSMINNumbering(strRowID)
'@endcode
'@param ValueForCheckBox Value for checkbox

Function BIZ_LoanSetup_EditMERSMINNumbering(strRowID)

	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_SetMERSMINNumbering", "Edit MERS MIN Numbering", null
	
	Dim objSettings, objMersMinDialog, strAutoMersMin, arrAutoMersMin
	
	Set objData 			= FRM_DS_GetTestData("Settings_Loansetup", "MersMinNumbering", strRowID)
	Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMersMinDialog 	= objSettings.SwfWindow("swfname:=BranchMERSMINDialog")
	Set objMersMinEditDialog= objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog")
	
	GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnBranchMERS")
	GUI_Object_WaitTillExistX objMersMinDialog,60
	
	GUI_List_ActOnRow objMersMinDialog.SwfObject("swfname:=gvMERS"), 0, True, False, False, "Double"
	GUI_Object_WaitTillExistX objMersMinEditDialog,60
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "GenerateOrgMERSMin")) Then
		GUI_SwfCheckbox_Set objMersMinEditDialog.SwfCheckBox("swfname:=chkUseBranch"), FRM_DS_GetValue(objData, "GenerateOrgMERSMin")
	End if
	
	strNextNum = FRM_DS_GetValue(objData, "NextNumber")
	If UTIL_String_IsNotEmpty (strNextNum) Then
		GUI_SwfEdit_Set objMersMinEditDialog.SwfEdit("swfname:=nextNumTxt"), strNextNum
	End If 
	
	strOrgId = GUI_Object_GetPropertyValue(objMersMinEditDialog.SwfEdit("swfname:=codeTxt"),"text")
	
	GUI_SwfButton_Click objMersMinDialog.SwfWindow("swfname:=BranchMERSNoEditDialog").SwfButton("swfname:=okBtn")
	GUI_SwfButton_Click objMersMinDialog.SwfButton("swfname:=btnClose")
	
	Set objData 			 = Nothing
	Set objSettings          = Nothing
	Set objMersMinDialog     = Nothing
	Set objMersMinEditDialog = Nothing
	
	BIZ_LoanSetup_EditMERSMINNumbering = strOrgId&"-"&strNextNum
End Function



'This function is for Edit Values in MERS MIN Numbering Screen
'@code
'    BIZ_LoanSetup_ValidateEditMERSMINNumbering(strStatus,strNextNumber)
'@endcode
'@param strStatus is Enable/Disable
'@param strNextNumber is MERS MIN Number

Function BIZ_LoanSetup_ValidateEditMERSMINNumbering(strStatus,strNextNumber)

	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_ValidateEditMERSMINNumbering", "Validate the Edit MERS MIN Numbering", null
	
	Dim objSettings, objMersMinDialog, boolStatus
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMersMinDialog = objSettings.SwfWindow("swfname:=BranchMERSMINDialog")
	
	GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnBranchMERS")
	GUI_Object_WaitTillExistX objMersMinDialog,60
	strUIStatus 	= GUI_List_GetCellData (objMersMinDialog.SwfObject("swfname:=gvMERS"), 0, GUI_List_GetColumnIndex(objMersMinDialog.SwfObject("swfname:=gvMERS"), "Status"))
	strUINextNumber = GUI_List_GetCellData (objMersMinDialog.SwfObject("swfname:=gvMERS"), 0, GUI_List_GetColumnIndex(objMersMinDialog.SwfObject("swfname:=gvMERS"), "Next Number"))
	strUIOrgId 		= GUI_List_GetCellData (objMersMinDialog.SwfObject("swfname:=gvMERS"), 0, GUI_List_GetColumnIndex(objMersMinDialog.SwfObject("swfname:=gvMERS"), "Org. ID"))
	
	strUIMERSMINNum = strUIOrgId&strUINextNumber
	
	If UTIL_String_IsNotEmpty(strNextNumber) Then
		FRM_VerifyEqual lcase(strUIMERSMINNum),Lcase(strNextNumber) , "OrgId + Next Number", "Verified the Org Id + Next Number '"&strUIMERSMINNum&"'"
	End If
	
	If UTIL_String_IsNotEmpty(strStatus) Then
		FRM_VerifyEqual Lcase(strUIStatus),Lcase(strStatus) , "Status", "Verified the Status '"&strUIStatus&"'"
	End If
	
	GUI_SwfButton_Click objMersMinDialog.SwfButton("swfname:=btnClose")
	
	Set objSettings      = Nothing
	Set objMersMinDialog = Nothing
End Function



' Verifying Organization specific checkbox is checked or not
'@code
'   BIZ_LoanSetup_VerifyMERSMINNumberingStatus(strStatus)
'@endcode

Function BIZ_LoanSetup_VerifyMERSMINNumberingStatus(strStatus)
	
	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_VerifyMERSMINNumberingStatus", "Verifying the MERS MIN Numbering status is Enabled or Disabled", null
	
	Dim objSettings, objMersMinDialog, boolStatus
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMersMinDialog = objSettings.SwfWindow("swfname:=BranchMERSMINDialog")
	
	GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnBranchMERS")
	GUI_Object_WaitTillExistX objMersMinDialog,60
	strUIStatus = GUI_List_GetCellData (objMersMinDialog.SwfObject("swfname:=gvMERS"), 0, GUI_List_GetColumnIndex(objMersMinDialog.SwfObject("swfname:=gvMERS"), "Status"))
	If strStatus = strUIStatus Then
		boolStatus = True
		FRM_Logger_ReportInfoEvent "Verify the Status in MERS MIN Numbering Popup", "Already status is '"&strUIStatus&"'", Null
	Else 
		boolStatus = false
	End If
	GUI_SwfButton_Click objMersMinDialog.SwfButton("swfname:=btnClose")
	Set objSettings      = Nothing
	Set objMersMinDialog = Nothing
	
	BIZ_LoanSetup_VerifyMersMinNumberingStatus = boolStatus

End Function



'This function is for Entering Data in AutoMersMinNumbering Window in loan setup 
'@code
'    BIZ_LoanSetup_SetAutoMERSMINNumbering(strRowID)
'@endcode
'@param strRowID RowID for data

Function BIZ_LoanSetup_SetAutoMERSMINNumbering(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_SetAutoMERSMINNumbering", "Entering the data for Auto MERS MIN Number", null
	
	Dim objData, objSettings, intOrganizationID, intItemization, intMersMinNumber
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "MersMinNumbering", strRowID)
	
	intOrganizationID = FRM_DS_GetValue(objData, "OrganizationID")
	intNextNum    	  = FRM_DS_GetValue(objData, "NextNumber")
	strChKAutoMERS    = FRM_DS_GetValue(objData, "AutoCreateMERS")
	intMersMinNumber  = intOrganizationID &"-"& intNextNum
	
	GUI_Object_WaitTillExistX objSettings,60
	If UTIL_String_IsNotEmpty(intOrganizationID) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=orgIDTxt"), intOrganizationID
	End if
	If UTIL_String_IsNotEmpty(intNextNum) Then
		GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=nextNumTxt"), intNextNum
	End if
	If UTIL_String_IsNotEmpty(strChKAutoMERS) Then
		GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=autoChk"), strChKAutoMERS
	End if
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	
	Set objData     = Nothing
	Set objSettings = Nothing
	
	BIZ_LoanSetup_SetAutoMERSMINNumbering = Cstr(intMersMinNumber)
	
End Function



'This function is for Entering Data in AutoMersMinNumbering Window in loan setup 
'@code
'    BIZ_LoanSetup_ValidateAutoMERSMINNumbering(strRowID,strNextNumber)
'@endcode
'@param strRowId - test data row id
'@param strNextNumber - Next Number

Function BIZ_LoanSetup_ValidateAutoMERSMINNumbering(strRowID,strNextNumber)
	
	FRM_Logger_ReportInfoEvent "BIZ_LoanSetup_SetAutoMERSMINNumbering", "Entering the data for Auto MERS MIN Number", null
	
	Dim objData, objSettings, intOrganizationID, intItemization, intMersMinNumber
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData = FRM_DS_GetTestData("Settings_Loansetup", "MersMinNumbering", strRowID)
	
	arrValue = split(strNextNumber,"-")
	intOrganizationID = arrValue(0)
	intNextNum    	  = arrValue(1)
	strChKAutoMERS    = FRM_DS_GetValue(objData, "AutoCreateMERS")
	
	If UTIL_String_IsNotEmpty(intOrganizationID) Then
		GUI_Object_ValidateProperty objSettings.SwfEdit("swfname:=orgIDTxt"), "text", CStr(intOrganizationID), "OrganizationID"
	End If
	
	If UTIL_String_IsNotEmpty(intNextNum) Then
		GUI_Object_ValidateProperty objSettings.SwfEdit("swfname:=nextNumTxt"), "text", CStr(intNextNum), "NextNum"
	End If
	
	If UTIL_String_IsNotEmpty(strChKAutoMERS) Then
		If strChKAutoMERS = "ON" Then 
			boolChKAutoMERS = True 
		Else  
			boolChKAutoMERS = False 
		End If
		GUI_Object_ValidateChecked objSettings.SwfCheckBox("swfname:=autoChk"), boolChKAutoMERS,"Auto Create MERS MIN"
	End if
	
	Set objData     = Nothing
	Set objSettings = Nothing
End Function



'This function is adding the task  
'@code
'    BIZ_Setting_LoanSetup_CreateTask(strRowID)
'@endcode
'@param strRowID for data

Function BIZ_Setting_LoanSetup_CreateTask(strRowID)
	FRM_Logger_ReportInfoEvent "BIZ_Setting_LoanSetup_CreateTask", "Create the task in LoanSetup", null
	
	Dim objSetting,strTaskName
	Set objSetting = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_SwfObject_Click objSetting.SwfObject("swfname:=stdIconBtnNew")
	GUI_Object_WaitTillExistX objSetting.SwfWindow("swfname:=MilestoneTaskDetailSetupForm"), 30 
	strTaskName   = BIZ_LoanSetup_SetTasks(strRowID)
	Wait g_ShortWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	boolTextExist = GUI_List_ClickRow (objSetting.SwfObject("swfname:=lvwTasks"), objSetting.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strTaskName, True, False, False, "Single")
	FRM_VerifyEqual boolTextExist, True, " the Task name", "Created Task name '"&strTaskName&"'"

	Set objSetting = Nothing
	
	BIZ_Setting_LoanSetup_CreateTask = strTaskName
	
End Function



'This function is editting the task  
'@code
'    BIZ_Setting_LoanSetup_EditTask(strRowID,strTaskName)
'@endcode
'@param strRowID for data
'@param strTaskName task name

Function BIZ_Setting_LoanSetup_EditTask(strRowID,strTaskName)
	FRM_Logger_ReportInfoEvent "BIZ_Setting_LoanSetup_EditTask", "Edit the task in LoanSetup", null
	
	Dim objSetting,strEditTaskName
	Set objSetting = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	boolTaskName = GUI_List_ClickRow (objSetting.SwfObject("swfname:=lvwTasks"), objSetting.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strTaskName, True, False, False, "Double")
	If boolTaskName Then
		GUI_Object_WaitTillExistX objSetting.SwfWindow("swfname:=MilestoneTaskDetailSetupForm"), 30 
		FRM_Logger_ReportInfoEvent "Select Task Name:", "'"&strTaskName&"' Task name selected for edit", null
		strEditTaskName   = BIZ_LoanSetup_SetTasks(strRowID)
		Wait g_TinyWaitLarge 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		boolTextExist = GUI_List_ClickRow (objSetting.SwfObject("swfname:=lvwTasks"), objSetting.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strEditTaskName, True, False, False, "Single")
		FRM_VerifyEqual boolTextExist, True, " the Task Edited", "Task '"&strEditTaskName&"' is Edited"
	Else
		FRM_Logger_ReportFailEvent "Check Task '"&strTaskName&"' exist in list or not ", "Task '"&strTaskName&"' is exist in list", Null
	End If
	
	Set objSetting = Nothing
	
	BIZ_Setting_LoanSetup_EditTask = strEditTaskName
	
End Function



'This function is deleting the task  
'@code
'    BIZ_Setting_LoanSetup_DeleteTask(strTaskName)
'@endcode
'@param strTaskName task name

Function BIZ_Setting_LoanSetup_DeleteTask(strTaskName)
	FRM_Logger_ReportInfoEvent "LoanSetup_DeleteTask", "Delete the task in LoanSetup", null
	
	Dim objFieldDataEntryList, scrollbarFieldDataEntry, boolExist
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=lvwTasks")
	Set objScrollbarFieldDataEntry = objFieldDataEntryList.SwfScrollBar("swfname:=vPanelScrollBar")
	
	boolExist = GUI_List_ClickRow (objFieldDataEntryList, objScrollbarFieldDataEntry, "Name", strTaskName, True, False, False, "Single")
	If boolExist  Then
		FRM_Logger_ReportInfoEvent "Select Task Name:", "'"&strTaskName&"' Task name selected for delete", null
		BIZ_Settings_ClickDelete
		BIZ_Settings_Dialog_ClickYes
		Wait g_TinyWaitLarge 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		boolExist = GUI_List_ClickRow (objFieldDataEntryList, objScrollbarFieldDataEntry, "Name", strTaskName, True, False, False, "Single")
		FRM_VerifyEqual boolExist,False , "Delete Task", "Delete Task '"&strTaskName&"'"
	Else
		FRM_Logger_ReportFailEvent "Check Task '"&strTaskName&"' exist in list or not ", "Task '"&strTaskName&"' is exist in list", Null
	End If
	
	Set objFieldDataEntryList = Nothing
	Set objScrollbarFieldDataEntry = Nothing
	
End Function



' This function is for Verification of creating a new Form
'@code
'   BIZ_LoanCustomFields_CreateNewForm(strRowID) 
'@endcode
'@Param strFormAction is used select form

Function BIZ_LoanCustomFields_CreateNewForm(strFormName)

	FRM_Logger_ReportInfoEvent "Custom form","Verify Custom Form existence:"&strFormName, Null
			
	Dim objOpenDialog
	
	Set objOpenDialog     = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FormOpenDialog")
						
	GUI_SwfButton_Click SwfWindow("swfname:=HostWin").SwfButton("swfname:=btnOpen")
	GUI_SwfTab_Click objOpenDialog.SwfTab("swfname:=tabsOpen"), "Custom Input Forms"
	intRowid= GUI_List_GetRowIndex(objOpenDialog.SWfListView("swfname:=lvwCustom"), 0, strFormName)
	GUI_SwfButton_Click objOpenDialog.SwfButton("swfname:=btnCancel")
	
	If intRowid < 0 Then
		BIZ_InputFormBuilder_CreateCustomForm()
		BIZ_InputFormBuilder_SaveCustomForm(strFormName)
	End If 
		
	Set objOpenDialog  = Nothing
	
	BIZ_LoanCustomFields_CreateNewForm	= strFormName
	
End Function



' This function is for Assign persona access for created form
'@code
'   BIZ_LoanCustomFields_AssignPersonaAccess(strRowID,strFormName) 
'@endcode
'@param strRowID for data
'@Param strFormName is used select form

Function BIZ_LoanCustomFields_AssignPersonaAccess(strRowID1,strFormName)
	
	FRM_Logger_ReportInfoEvent "Custom form","Assign Custom form access to Persona", Null
	
	Dim objSettings,objInputForms,objData,strPersonaName,intGetNewRowIndex
	Set objSettings       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objInputForms 	  = objSettings.SwfObject("swfname:=gvInputForms")
	Set objData 		  = FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	strPersonaName= FRM_DS_GetValue(objData,"PersonaName")
	objSettings.SwfListView("swfname:=lvPersona").Select strPersonaName
	GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"), "Forms/Tools"
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	intGetNewRowIndex= GUI_List_GetRowIndex (objInputForms, "Name", strFormName)
	GUI_List_SelectCheckBoxinCell objInputForms, "Accessible", intGetNewRowIndex
	
	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If
	
	If intGetNewRowIndex >= 0 Then
		FRM_Logger_ReportPassEvent "Custom Form","'"&strFormName&"' is Checked",null
	Else
		FRM_Logger_ReportFailEvent "Custom Form"," is NOT Checked",null
	End If
	
	Set objSettings		  = Nothing
	Set objInputForms 	  = Nothing
	Set objData 		  = Nothing
		
End Function



' This function is for Verification of Create/setup Non Admin User with Loan Officer persona.
'@code
'   BIZ_LoanCustomFields_CreateorValidateadminUser(strRowID) 
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_LoanCustomFields_CreateorValidateadminUser(strRowID1)

	FRM_Logger_ReportInfoEvent "Create/setup Loan Officer persona","Create/setup Non Admin User with Loan Officer persona", Null
	
	Dim objSettings, objUsersAvaliable, objUserDetails, objPersonaSelection, objUserPersona,_
    objLoanOfficerLicenses, objScrollBar, objData, strUserId,strActualPersona, boolUserFlag,strRc,_
    strExpectedPersona,strExpectedPersona1
	
	Set objSettings       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objUsersAvaliable = objSettings.SwfObject("swfname:=gvUsers")
	Set objUserDetails = objSettings.SwfWindow("swfname:=AddEditUserCEDialog")
	Set objPersonaSelection = objUserDetails.SwfWindow("swfname:=PersonaSelectionForm")
	Set objUserPersona = objPersonaSelection.SwfObject("swfname:=gvPersonas")
	Set objLoanOfficerLicenses = objUserDetails.SwfWindow("swfname:=LoanOfficerLicenseDialog")
	Set objScrollBar = objUsersAvaliable.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData 		  = FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
       
	BIZ_Nav_Settings_OrganizationUsers()
            
    objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"
	strUserId = objData.Item("UserID")
    strActualPersona= Trim(FRM_DS_GetValue(objData,"PersonaName"))
    boolUserFlag = GUI_List_ClickRow(objUsersAvaliable, objScrollBar, 0, strUserId, True, False, False, "Single") 
    
    If not boolUserFlag Then  
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnNewUser")
         
		If UTIL_String_IsNotEmpty(strUserId) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=useridTxt"), strUserId
		End If
		
		If UTIL_String_IsNotEmpty(objData.Item("Password")) Then
			 GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=passwTxt"), objData.Item("Password")
		End If
		
		If UTIL_String_IsNotEmpty(objData.Item("Password")) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=verifyPwdTxt"), objData.Item("Password")
		End If
        
		If UTIL_String_IsNotEmpty(objData.Item("FirstName")) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=fnameTxt"), objData.Item("FirstName")
		End If
		
        If UTIL_String_IsNotEmpty(objData.Item("LastName")) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=lnameTxt"), objData.Item("LastName")
		End If
       
		If UTIL_String_IsNotEmpty(objData.Item("Email")) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=emailTextBox"), objData.Item("Email")
		End If
        
		GUI_Object_WaitTillExistX objUserDetails.SwfObject("swfname:=loBtn"),30		
        GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=loBtn")
		GUI_Object_WaitTillExistX objLoanOfficerLicenses.SwfButton("swfname:=allBtn"),30	
       	GUI_SwfButton_Click objLoanOfficerLicenses.SwfButton("swfname:=allBtn")
		GUI_Object_WaitTillExistX objLoanOfficerLicenses.SwfButton("swfname:=okBtn"),30
		GUI_SwfButton_Click objLoanOfficerLicenses.SwfButton("swfname:=okBtn")
		GUI_Object_WaitTillExistX objUserDetails.SwfObject("swfname:=btnAssignPersona"),30
		GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=btnAssignPersona")
        GUI_List_ClickCheckbox objUserPersona, objScrollBar, strActualPersona, 0, False, False, "Single", True
		GUI_Object_WaitTillExistX objPersonaSelection.SwfButton("swfname:=btnOK"),30
        GUI_SwfButton_Click objPersonaSelection.SwfButton("swfname:=btnOK")
        objSettings.SwfWindow("swfname:=AddEditUserCEDialog").Activate
        Set WshShell = CreateObject("WScript.Shell")
        WshShell.SendKeys "%s"
    End If
End Function    



' This function is for Verification of Create/setup Non Admin User with Loan Officer persona.
'@code
'   BIZ_LoanCustomFields_CreateOrSetupNonAdminUser(strRowID) 
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_LoanCustomFields_CreateOrSetupNonAdminUser(strRowID1)

	FRM_Logger_ReportInfoEvent "Create/setup Loan Officer persona","Create/setup Non Admin User with Loan Officer persona", Null
	
	Dim objSettings, objUsersAvaliable, objUserDetails, objPersonaSelection, objUserPersona,_
    objLoanOfficerLicenses, objScrollBar, objData, strUserId,strActualPersona, boolUserFlag,strRc,_
    strExpectedPersona,strExpectedPersona1
	
	Set objSettings       		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objUsersAvaliable 		= objSettings.SwfObject("swfname:=gvUsers")
	Set objUserDetails 	  		= objSettings.SwfWindow("swfname:=AddEditUserCEDialog")
	Set objPersonaSelection 	= objUserDetails.SwfWindow("swfname:=PersonaSelectionForm")
	Set objUserPersona 			= objPersonaSelection.SwfObject("swfname:=gvPersonas")
	Set objLoanOfficerLicenses  = objUserDetails.SwfWindow("swfname:=LoanOfficerLicenseDialog")
	Set objScrollBar 			= objUsersAvaliable.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objData 		  		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
    Set objTreeView 	  		= objSettings.SwfWindow("swfname:=OrgHierarchyForm").SwfTreeView("swfname:=hierarchyTree")
	
	BIZ_Nav_Settings_OrganizationUsers()
	objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"
	strUserId = objData.Item("UserID")
	strActualPersona= Trim(FRM_DS_GetValue(objData,"PersonaName"))
	boolUserFlag = GUI_List_ClickRow(objUsersAvaliable, objScrollBar, 0, strUserId, True, False, False, "Single") 
	
	
	'Checking non admin user under the branch, if the non admin user is not visible under adminstartion folder then look into branch1 management
	'objSettings.SwfTreeView("swfname:=hierarchyTree").ExpandAll("Administration")
	'Wait g_TinyWaitLarge ' Explicit wait used to handle sync issues
	'objSettings.SwfTreeView("swfname:=hierarchyTree").highlight
	'objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"
	'objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration;Office Management;Branch 1 Management;Branch 1 Personnel"

	Wait g_TinyWaitLarge ' Explicit wait used to handle sync issues
    	'boolBranchFlag = GUI_List_ClickRow(objUsersAvaliable, objScrollBar, 0, strUserId, True, False, False, "Single") 
	boolBranchFlag = False
        
    If not boolUserFlag and not boolBranchFlag  Then  
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnNewUser")
         
		If UTIL_String_IsNotEmpty(strUserId) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=useridTxt"), strUserId
		End If
		
		If UTIL_String_IsNotEmpty(objData.Item("Password")) Then
			 GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=passwTxt"), objData.Item("Password")
		End If
		
		If UTIL_String_IsNotEmpty(objData.Item("Password")) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=verifyPwdTxt"), objData.Item("Password")
		End If
        
		If UTIL_String_IsNotEmpty(objData.Item("FirstName")) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=fnameTxt"), objData.Item("FirstName")
		End If
		
        If UTIL_String_IsNotEmpty(objData.Item("LastName")) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=lnameTxt"), objData.Item("LastName")
		End If
       
		If UTIL_String_IsNotEmpty(objData.Item("Email")) Then
			GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=emailTextBox"), objData.Item("Email")
		End If
        
		GUI_Object_WaitTillExistX objUserDetails.SwfObject("swfname:=loBtn"),30		
        GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=loBtn")
		GUI_Object_WaitTillExistX objLoanOfficerLicenses.SwfButton("swfname:=allBtn"),30	
       	GUI_SwfButton_Click objLoanOfficerLicenses.SwfButton("swfname:=allBtn")
		GUI_Object_WaitTillExistX objLoanOfficerLicenses.SwfButton("swfname:=okBtn"),30
		GUI_SwfButton_Click objLoanOfficerLicenses.SwfButton("swfname:=okBtn")
		GUI_Object_WaitTillExistX objUserDetails.SwfObject("swfname:=btnAssignPersona"),30
		GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=btnAssignPersona")
        GUI_List_ClickCheckbox objUserPersona, objUserPersona.SwfScrollBar("swfname:=vPanelScrollBar"), strActualPersona, 0, False, False, "Single", True
		GUI_Object_WaitTillExistX objPersonaSelection.SwfButton("swfname:=btnOK"),30
        GUI_SwfButton_Click objPersonaSelection.SwfButton("swfname:=btnOK")
        objSettings.SwfWindow("swfname:=AddEditUserCEDialog").Activate
        Set WshShell = CreateObject("WScript.Shell")
        WshShell.SendKeys "%s"
        
    Else
        
    Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
             
	strRc			    = GUI_List_GetRowIndex(objUsersAvaliable,"User ID",strUserId)
	strExpectedPersona  = GUI_List_GetCellData(objUsersAvaliable,strRc,3)
	strExpectedPersona1 = split(strExpectedPersona,"+")
	
		If Instr(strActualPersona,trim(strExpectedPersona1(0))) >0 Then
	       	FRM_Logger_ReportPassEvent "Verifying Loan Officer", "Loan officer assign to created user", ""
	    Else
    
	    	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnNewUser")
			
			If UTIL_String_IsNotEmpty(strUserId) Then
				GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=useridTxt"), strUserId
			End If
			
			If UTIL_String_IsNotEmpty(objData.Item("Password")) Then
				 GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=passwTxt"), objData.Item("Password")
			End If
			
			If UTIL_String_IsNotEmpty(objData.Item("Password")) Then
				GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=verifyPwdTxt"), objData.Item("Password")
			End If
			
			If UTIL_String_IsNotEmpty(objData.Item("FirstName")) Then
				GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=fnameTxt"), objData.Item("FirstName")
			End If
			
			If UTIL_String_IsNotEmpty(objData.Item("LastName")) Then
				GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=lnameTxt"), objData.Item("LastName")
			End If
		   
			If UTIL_String_IsNotEmpty(objData.Item("Email")) Then
				GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=emailTextBox"), objData.Item("Email")
			End If
        			
	        GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=loBtn")
	        GUI_SwfButton_Click objLoanOfficerLicenses.SwfButton("swfname:=allBtn")
			GUI_SwfButton_Click objLoanOfficerLicenses.SwfButton("swfname:=okBtn")
			GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=btnAssignPersona")
		    GUI_List_ClickCheckbox objUserPersona, objUserPersona.SwfScrollBar("swfname:=vPanelScrollBar"), strActualPersona, 0, False, False, "Single", True
	        GUI_SwfButton_Click objPersonaSelection.SwfButton("swfname:=btnOK")
	        
	        objSettings.SwfWindow("swfname:=AddEditUserCEDialog").Activate
	        Set WshShell = CreateObject("WScript.Shell")
	        WshShell.SendKeys "%s"
    	
    	End If
       
    End If
    
    Set objSettings 	   		= Nothing
    Set objUsersAvaliable  		= Nothing
    Set objUserDetails 	   		= Nothing
    Set objPersonaSelection 	= Nothing
    Set objUserPersona 			= Nothing
    Set objScrollBar 			= Nothing
    Set objLoanOfficerLicenses 	= Nothing
    Set objData 				= Nothing

	
End Function



' This function is for Verification of creating a new Custom fields.
'@code
'   BIZ_LoanCustomFields_CreateCustom(strCustomFieldAction,strRowID1,strFormName) 
'@endcode
'@Param strCustomFieldAction is used for Action type need to set
'@Param strRowID1 is row id in excel for reading data
'@Param strFormName1 is row id in excel for reading data

Function BIZ_LoanCustomFields_SelectCustomField(strRowID1,strFormName,strCustomField)
		
	FRM_Logger_ReportInfoEvent "Add Object ","Add an object to the Form", Null
	
	Dim objSettings,objData,objOpenDialog,objCheckBoxDialog,_
	strDropDown,strCheckBox,strTextBox,strCheckedValue,strUnCheckedValue
	
	Set objSettings 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
	Set objOpenDialog   = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FormOpenDialog")
	Set objCheckBoxDialog= SwfWindow("swfname:=HostWin").SwfWindow("swfname:=CheckboxOptionSelector")
		
	strDropDown			= FRM_DS_GetValue(objData,"DropDown")
	strCheckBox			= FRM_DS_GetValue(objData,"CheckBox")
	strTextBox			= FRM_DS_GetValue(objData,"TextBox")
	strCheckedValue		= FRM_DS_GetValue(objData,"CheckedValue")
	strUnCheckedValue	= FRM_DS_GetValue(objData,"UnCheckedValue")
	strSelectFld		= FRM_DS_GetValue(objData,"strSelectField")
	
	strFieldId= "CX."&strCustomField
			
	GUI_SwfButton_Click SwfWindow("swfname:=HostWin").SwfButton("swfname:=btnOpen")
	GUI_Object_WaitTillExistX objOpenDialog.SwfTab("swfname:=tabsOpen"),30
	GUI_SwfTab_Click objOpenDialog.SwfTab("swfname:=tabsOpen"), "Custom Input Forms"
	
	If UTIL_String_IsNotEmpty(strFormName) Then
		GUI_List_Select  objOpenDialog.SWfListView("swfname:=lvwCustom"), strFormName
		GUI_SwfButton_Click objOpenDialog.SwfButton("swfname:=btnOpen")
	End If
	Wait g_LongWaitMedium	' Explicit wait used to handle sync issues

	'Add objects to custom form
	Select Case strSelectFld
		Case "YesOrNo", "DropDown"
			BIZ_InputFormBuilder_AddObject strDropDown
		Case "CheckBox"
			BIZ_InputFormBuilder_AddObject strCheckBox
		Case Else 
			BIZ_InputFormBuilder_AddObject strTextBox
	End Select
	
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	
	If Not Util_String_IsMatch(strSelectFld,"UserDefined") Then
			
		'Click on Field Selector button
		SwfWindow("swfname:=HostWin").SwfPropertyGrid("swfname path:=;pgProperties;pgProperties;dockableWindow2;windowDockingArea1;HostWin","index:=1").SelectProperty "Field" 'GUI methods are not working here
		SwfWindow("swfname:=HostWin").SwfButton("swftypename:=System.Windows.Forms.PropertyGridInternal.DropDownButton","index:=0").click 'GUI methods are not working here
		Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		FRM_Logger_ReportInfoEvent "Field selector","Field selector window is displayed",""
		
		GUI_SwfTab_Click SwfWindow("swfname:=FieldSelector").SwfTab("swfname:=tabsFields"), "Custom Fields"
		GUI_Object_WaitTillExistX SwfWindow("swfname:=FieldSelector").SwfListView("swfname:=lvwCustom"), 30
		
		If UTIL_String_IsNotEmpty(strFieldId) Then
			GUI_List_Select  SwfWindow("swfname:=FieldSelector").SwfListView("swfname:=lvwCustom"), strFieldId
			GUI_SwfButton_Click SwfWindow("swfname:=FieldSelector").SwfButton("swfname:=btnSelect")
			FRM_Logger_ReportInfoEvent "Field Id","Field Id is assigned to Custom Field",""
			
		End If	
		
		If UTIL_String_IsMatch(strSelectFld, "CheckBox") Then
			GUI_Object_WaitTillExistX objCheckBoxDialog.SwfListView("swfname:=lvwChecked"),30
			GUI_List_Select  objCheckBoxDialog.SwfListView("swfname:=lvwChecked"), strCheckedValue
			FRM_Logger_ReportInfoEvent "Encompass input form builder","Select checked value as X",""
			GUI_List_Select  objCheckBoxDialog.SwfListView("swfname:=lvwUnchecked"), strUnCheckedValue
			FRM_Logger_ReportInfoEvent "Encompass input form builder","Select Unchecked value as Empty",""
			GUI_SwfButton_Click objCheckBoxDialog.SwfButton("swfname:=btnOK")
		
		End If
		
	End If
	
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues	
	If UTIL_String_IsNotEmpty(strFormName) Then
		BIZ_InputFormBuilder_SaveCustomForm strFormName
	End If
	
	Set objSettings 		= Nothing
	Set objData 			= Nothing
	Set objOpenDialog   	= Nothing
	Set objCheckBoxDialog	= Nothing
		
End Function 



' This function is for Validate custom fields
'@code
'   BIZ_CustomFieldVerificationOnLoanFile(strCustomFieldAction,strRowID1,strFormName)
'@endcode
'@Param strCustomFieldAction is used for Action type need to set
'@Param strRowID is row id in excel for reading data
'@Param strFormName is used select the form
	
Function BIZ_CustomFieldVerificationOnLoanFile(strCustomFieldAction,strRowID1,strFormName)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validate the Custom Field on Loan file: "&strCustomFieldAction, Null
	
	Dim objData,objEmail,strLoanNo
	
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
  
	'GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"),"Forms"
	'Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	'BIZ_Forms_Open "Borrower Summary - Origination"
	'Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	'BIZ_Forms_Open strFormName
	
	Select Case strCustomFieldAction
		
		Case "Integer"
			 BIZ_ValidateCustomFieldInteger strRowID1
			
		Case "String1"
			 BIZ_ValidateCustomFieldString strRowID1, "TextBox1"
			 
		Case "String"
			 BIZ_ValidateCustomFieldString strRowID1, "TextBox5"
			 
		Case "ZipCode"
			 BIZ_ValidateCustomFieldZipcode strRowID1
			
		Case "SSN"
			 BIZ_ValidateCustomFieldSSN strRowID1
			
		Case "Date"
			 BIZ_ValidateCustomFieldDate strRowID1
			
		Case "Phone"
			 BIZ_ValidateCustomFieldPhone strRowID1
			
		Case "Decimal"
			 BIZ_ValidateCustomFieldDecimal strRowID1
			
		Case "Yes/No"
			BIZ_ValidateCustomFieldYesorNo strRowID1
			
		Case "DropDown"
			BIZ_ValidateCustomFieldDropDown strRowID1
			
		Case "CheckBox"
			BIZ_ValidateCustomFieldCheckBox strRowID1
			
		Case Else
			  FRM_Logger_ReportFailEvent "Custom Field", "Custom option doesn't exists in select case", null
		
	End Select
	
	'Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	'GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=saveBtn")
	'Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	'If GUI_Object_IsExist (SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("Swfname:=btnClose")) then
	'	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("Swfname:=btnClose")
	'End If
	
	'Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	'objEmail= FRM_DS_GetValue(objData,"Email")
	
	'If UTIL_String_IsNotEmpty(objEmail) Then
	'	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog").SwfEdit("swfname:=emailTxt"),objEmail
	'End If
	
	
	
	'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog").SwfButton("swfname:=okBtn")
	'Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	'strLoanNo = SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblLoanNumber").GetROProperty("text")
		
	'If UTIL_String_IsNotEmpty(strLoanNo) = True Then
	'	FRM_Logger_ReportPassEvent "Loan Creation", "Loan has Created successfully - " &strLoanNo, Null
	'Else
	'	FRM_Logger_ReportFailEvent "Loan Creation", "Loan hasn't Created successfully", Null
	'End IF
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldInteger(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldInteger(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validation for created Custom Integer field ", Null
	
	Dim objData,strTextBox,intCal1,strMessage
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	strTextBox 	= FRM_DS_GetValue(objData,"TextBox")
	intCal1		= FRM_DS_GetValue(objData,"IntVal")
	strMessage	= FRM_DS_GetValue(objData,"IntegerMessage")
	
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	If UTIL_String_IsNotEmpty(strTextBox) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox4"),strTextBox
		FRM_Logger_ReportInfoEvent "Text Box", "Enter text field in the Integer text field: " & strTextBox, Null
	End If
	strTestMessage= GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Static("nativeclass:=Static","index:=1"),"text")
	
	If UTIL_String_IsMatch(strTestMessage, strMessage) Then
		FRM_Logger_ReportPassEvent "Verify custom field value", "Custom field is NOT accepted", null
	Else
		FRM_Logger_ReportFailEvent "Verify custom field value", "Custom field is accepted", null
	End If
	
	If UTIL_String_IsNotEmpty(strMessage) Then
		GUI_Dialog_Encompass_OK strMessage
    End If		
		
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox4"),30
	If UTIL_String_IsNotEmpty(IntCal1) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox4"),IntCal1
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox4"), FormatNumber(IntCal1,0) , "Integer value"
    End If
					
	Set objData 		= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldString(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldString(strRowID1,strTextBoxPro)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validate Custom String field on the Custom Form", Null
	
	Dim objData,strVal,strTextBox,intMax
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	strVal=FRM_DS_GetValue(objData,"StrTextBox")
	strTextBox= FRM_DS_GetValue(objData,"Yes")
	intMax= FRM_DS_GetValue(objData,"MaxLength")
	
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	
	If UTIL_String_IsNotEmpty(strVal) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:="&strTextBoxPro),strVal
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:="&strTextBoxPro), strVal ,"value"
    End If
	
	If UTIL_String_IsNotEmpty(strTextBox) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:="&strTextBoxPro),strTextBox
		GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:="&strTextBoxPro), strTextBox ,"value"
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:="&strTextBoxPro),""
    End If
	
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:="&strTextBoxPro),strVal
	strTextVal = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:="&strTextBoxPro),"text")
			
	If UTIL_String_IsMatch(len(strTextVal),intMax) Then
		FRM_Logger_ReportPassEvent "Verify Max Length of '"&intMax&"'", "Max length of Custom field is '"&len(strTextVal)&"' characters.", null
	End If
	
				
	Set objData 		= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldZipcode(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldZipcode(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validate Custom ZipCode field on the Custom Form", Null
	
	Dim objData,objZipcodeDialog,intZipCode,strCity,boolExist
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
	Set objZipcodeDialog=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ZipcodeSelectorDialog")
		
	intZipCode	=FRM_DS_GetValue(objData,"ZipCode")
	strCity		=FRM_DS_GetValue(objData,"City")
			
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	If UTIL_String_IsNotEmpty(intZipCode) Then
	   GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox6"),intZipCode
	   GUI_Object_ValidateValue SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox6"), intZipCode ,"value"
	End If
	
	Wait g_LongWaitMedium 		' Explicit wait used to handle sync issue	
	boolExist= GUI_List_ClickRow(objZipcodeDialog.SwfObject("swfname:=gvCities"), Null, 0, strCity, True, False, False, "Single")
	
	If boolExist Then
		FRM_Logger_ReportPassEvent "Verify City Popup", "City Popup is displayed", null
	Else
		FRM_Logger_ReportFailEvent "Verify City Popup", "City Popup is not displayed", null
	End If
	
	GUI_Object_WaitTillExistX objZipcodeDialog.SwfButton("swfname:=btnOK"),30	
	GUI_SwfButton_Click objZipcodeDialog.SwfButton("swfname:=btnOK")
		
	Set objData 		= Nothing
	Set objZipcodeDialog= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldSSN(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldSSN(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validate Custom SSN field on the Custom Form", Null
	
	Dim objData,intSsnValue,intSsnValue1,intSsnValue2
	Set objData 		=FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	intSsnValue=FRM_DS_GetValue(objData,"IntVal")
			
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox7"),30
	
	If UTIL_String_IsNotEmpty(intSsnValue) Then
	  GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox7"),intSsnValue
	End If
			
	intSsnValue1 = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox7"),"value")
	intSsnValue2= Replace(intSsnValue1,"-","")
	
	If UTIL_String_IsMatch(intSsnValue, intSsnValue2) Then
		FRM_Logger_ReportPassEvent "Verify SSN custom field value",intSsnValue2&" SSN Custom field is accepted", null
	Else
		FRM_Logger_ReportFailEvent "Verify SSN custom field value", "SSN Custom field is not accepted", null
	End If
		
	Set objData 		= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldDate(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldDate(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validate Custom Date field on the Custom Form ", Null
	
	Dim objData,intDate
	Set objData 		=FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	intDate=FRM_DS_GetValue(objData,"Date")
			
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox1"),30
	
	If UTIL_String_IsNotEmpty(intDate) Then
	  GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox1"),intDate
	  Wait g_ShortWaitMedium				' Explicit wait used to handle sync issues
	intDate1 = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox1"),"value")
	End If
	Wait g_ShortWaitMedium				' Explicit wait used to handle sync issues		
	If UTIL_String_IsMatch(BIZ_SecondaryMarket_ConvertDate(intDate), intDate1) Then
		FRM_Logger_ReportPassEvent "Verify Date custom field value", intDate&" Date Custom field is accepted", null
	Else
		FRM_Logger_ReportFailEvent "Verify Date custom field value", "Date Custom field is not accepted", null
	End If
			
	Set objData 		= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldPhone(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldPhone(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validate Custom Phone field on the Custom Form ", Null
	
	Dim objData,intPhone,intPhone1,intPhone2
	Set objData 		=FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	intPhone=FRM_DS_GetValue(objData,"IntVal")
		
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox2"),30
	
	If UTIL_String_IsNotEmpty(intPhone) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox2"),intPhone
		intPhone1 = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox2"),"value")
	End If
	
	intPhone2= Replace(intPhone1,"-","")
	
	If UTIL_String_IsMatch(intPhone, intPhone2) Then
		FRM_Logger_ReportPassEvent "Verify Phone custom field value",intPhone&" Phone Custom field is accepted", null
	Else
		FRM_Logger_ReportFailEvent "Verify Phone custom field value", "Phone Custom field is not accepted", null
	End If
			
	Set objData 		= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldDecimal(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldDecimal(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validate Custom Decimal field on the Custom Form ", Null
	
	Dim objData,intDecimal,intDecimal1
	Set objData 		=FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	intDecimal=FRM_DS_GetValue(objData,"IntVal")
	
	GUI_Object_WaitTillExistX SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox3"),30
	
	If UTIL_String_IsNotEmpty(intDecimal) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox3"),intDecimal
		intDecimal1 = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("index:=0").WebEdit("html id:=TextBox3"),"value")
	End If
		
	If UTIL_String_IsMatch(cdbl(intDecimal), cdbl(intDecimal1)) Then
		FRM_Logger_ReportPassEvent "Verify Decimal custom field value", "Decimal Custom field is accepted", null
	Else
		FRM_Logger_ReportFailEvent "Verify Decimal custom field value", "Decimal Custom field is not accepted", null
	End If
			
	Set objData 		= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldYesorNo(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldYesorNo(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validate Custom Yes/No field on the Custom Form", Null
	
	Dim objData,strYes,strNo,strYes1
	Set objData 		=FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	strYes=FRM_DS_GetValue(objData,"Yes")
	strNo=FRM_DS_GetValue(objData,"No")
		
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		
	listval= GUI_Object_GetPropertyValue (SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox1"), "all items")
	listvalues = split(listval,";")
	FRM_VerifyEqual strYes, listvalues(0), "Drop Down", "Verified dropdown box Yes Exists"
	FRM_VerifyEqual strNo, listvalues(1), "Drop Down", "Verified dropdown box No Exists"
	
	If UTIL_String_IsNotEmpty(strYes) Then
		GUI_List_Select SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox1"),strYes
		strYes1 = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox1"),"value")
	End If
		
	If UTIL_String_IsMatch(strYes1, strYes) Then
		FRM_Logger_ReportPassEvent "custom field value", "Custom field Yes is selected", null
	Else
		FRM_Logger_ReportFailEvent "custom field value", "Custom field Yes is not selected", null
	End If
			
	Set objData 		= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldDropDown(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldDropDown(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validation for created Custom Drop Down field ", Null
	
	Dim objData,strTest1,strTest2,listval,listvalues,strTest
	Set objData 		=FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
		
	strTest1=FRM_DS_GetValue(objData,"InputType1")
	strTest2=FRM_DS_GetValue(objData,"InputType2")
			
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		
	listval= GUI_Object_GetPropertyValue (SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox2.*"), "all items")
	listvalues = split(listval,";")
	FRM_VerifyEqual strTest1, listvalues(0), "Drop Down", "Verified dropdown box test1 Exists"
	FRM_VerifyEqual strTest2, listvalues(1), "Drop Down", "Verified dropdown box test2 Exists"
	
	If UTIL_String_IsNotEmpty(strTest1) Then
		GUI_List_Select SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox2.*"),strTest1
		strTest = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").Page("index:=0").WebList("html id:=DropdownBox2.*"),"value")
	End If
	
	
	If UTIL_String_IsMatch(strTest1, strTest) Then
		FRM_Logger_ReportPassEvent "custom field value", "Custom field test1 is selected", null
	Else
		FRM_Logger_ReportFailEvent "custom field value", "Custom field test1 is not selected", null
	End If
			
	Set objData 		= Nothing
	
End Function



' This function is for Validate custom fields
'@code
'   BIZ_ValidateCustomFieldCheckBox(strRowID1)
'@endcode
'@Param strRowID1 is row id in excel for reading data

Function BIZ_ValidateCustomFieldCheckBox(strRowID1)

	FRM_Logger_ReportInfoEvent "Custom field Validation","Validation for created Custom Check Box field ", Null
	
	Dim objData,boolExist,objCheckBox
	Set objData     = FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
	Set objCheckBox = SwfWindow("swfname:=MainForm").Page("index:=0").WebCheckBox("html id:=__cid_CheckBox1_Ctrl")
		
	boolExist= GUI_Object_IsExist(SwfWindow("swfname:=MainForm").Page("index:=0").WebCheckBox("html id:=__cid_CheckBox1_Ctrl"))
	
	If boolExist Then
		FRM_Logger_ReportPassEvent "Validate Check Box","Custom field is Check box ",null
	Else
		FRM_Logger_ReportFailEvent "Validate Check Box","Custom field is not Check box",null
	End If
	
	GUI_Object_Click objCheckBox, "WebCheckBox", "Check Box selected"
	GUI_Object_ValidateChecked objCheckBox, "1","Checkbox should be checked"
						
	Set objData 	= Nothing
	Set objCheckBox = Nothing
	
End Function



'This function is used to delete the Created custom fields
'@code
'   BIZ_DeleteCustomField(strCustomField)
'@endcode
'@param strCustomField- strCustomField is to delete

Function BIZ_DeleteCustomField(strCustomField)

	FRM_Logger_ReportInfoEvent "Delete Custom Field","Verification of  Deleting a created Custom Field.", Null

	Dim objSettings,objCustomFields,objScrollbar,objSettingsDialog,boolExist,strCustomField1
  	Set objSettings 	 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCustomFields  = objSettings.SwfObject("swfname:=lstVwExCustomFields")
	Set objScrollbar	 = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objSettingsDialog= objSettings.Dialog("text:=Encompass")
	
	strCustomField1=Split(strCustomField,"*")
	For i= 0 to UBound(strCustomField1)
		boolExist = GUI_List_ClickRow(objCustomFields, objScrollbar, "Field ID", strCustomField1(i), True, False, False, "Single")	
	
		If boolExist Then
			GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDelete")
			Wait g_TinyWaitSmall 'Explicit Wait Added Due to Sync
			GUI_WinButton_Click objSettingsDialog.WinButton("text:=&Yes")
		End If
	Next
	
	Set objSettings 	 = nothing
	Set objSettingsDialog= nothing
	Set objCustomFields  = nothing
	Set objScrollbar 	 = nothing
	
End function



'This function is used to Get the form name
'@code
'   BIZ_GetCustomFormName(strRowID1,strFormAction)
'@endcode
'@param strRowID1- Get data from excel
'@param strFormAction- is used to get custom field value

Function BIZ_GetCustomFormName(strRowID1,strFormAction)

	FRM_Logger_ReportInfoEvent "FieldValue","Get Field value in excel"&strFormAction, Null
	
	Dim objData
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "FormBuilderFields", strRowID1)
	
	Select Case strFormAction
		
		Case "ValidateFields"
			strFormName= FRM_DS_GetValue(objData,"CustomFormName")
			
		Case "ValidateString"
			strFormName= FRM_DS_GetValue(objData,"CustomFormName1")
			
		Case "PackageWizard"
			strFormName= FRM_DS_GetValue(objData,"CustomFormName2")
			
		Case Else
			FRM_Logger_ReportFailEvent "Select Option", "Form doesn't exists in select case", null
	End Select
			
	Set objData = Nothing
	
	BIZ_GetCustomFormName= strFormName
End Function



'This function is used to Edit or Validate loan duplication
'@code
'    BIZ_LoanSetup_EditOrValidateLoanDupFieldsWithDesc(strRowID,strValue,strCheckONOFF,strEditOrValidate)
'@endcode
'@param strRowID          - The numeric or string unique ID that used to find the line in the Setting_Loansetup data spreadsheet
'@param strvalue          - Template name to select
'@param strCheckONOFF     - Check box ON or OFF property
'@param strEditOrValidate - Edit or Validate process

Function BIZ_LoanSetup_EditOrValidateLoanDupFieldsWithDesc(strRowID,strValue,strCheckONOFF,strEditOrValidate)
	
	FRM_Logger_ReportInfoEvent "Edit and Validate Loan Duplication", "Edit and Validate Loan Duplicate Template with fields checked", null
    
    Dim objSettings,objData,objList,objWin,objScrollbar,objCheckBox,boolExist,strDesc,strTemplate,arrTemplate,strActualValue,strChecked
    
    Set objData 	 = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
    Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objList 	 = objSettings.SwfObject("swfname:=gvDirectory")
    Set objWin 		 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanDuplicationTemplateForm")
    Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
    
    'Selecting Existing Template for Editing
    boolExist=GUI_List_ClickRow (objList, objScrollbar, "Name", strValue, True, False, False, "Double")
    GUI_Object_WaitTillExist objWin
    
    If Lcase(strEditOrValidate) = Lcase("Edit") Then
		strDesc = FRM_DS_GetValue(objData, "Description")
		GUI_SwfEdit_Set objWin.SwfEdit("swfname:=txtDescription"),strDesc
	ElseIf Lcase(strEditOrValidate) = Lcase("Validate") Then
		'Verifing Description 
    	strDesc        = FRM_DS_GetValue(objData, "Description")
    	strActualValue = GUI_Object_GetPropertyValue(objWin.SwfEdit("swfname:=txtDescription"),"text")
    	FRM_VerifyEqual strDesc,strActualValue,"Comparing Description" &strActualValue,"Description should match"
    End If

    
	If boolExist Then
		    
		strTemplate = FRM_DS_GetValue(objData, "LoanDuplicationTemplate")
		arrTemplate = split(strTemplate,";")
		
		For i=0 to ubound(arrTemplate)
			Select Case lcase (arrTemplate(i))
				Case Lcase("Borrower Information")
					 Set objCheckBox  = objWin.SwfCheckBox("swfname:=chkBorInfo")
				Case Lcase("Co-Borrower Information")
					 Set objCheckBox  = objWin.SwfCheckBox("swfname:=chkCobInfo")
				Case Lcase("Borrower Employer Information")
					 Set objCheckBox  = objWin.SwfCheckBox("swfname:=chkBorEmpInfo")
				Case Lcase("Co-Borrower Employer Information")
					 Set objCheckBox  = objWin.SwfObject("swfname:=groupContainer4").SwfCheckBox("swfname:=chkCobEmpInfo")
				Case Lcase("Property Address")
					 Set objCheckBox  = objWin.SwfObject("swfname:=groupContainer5").SwfCheckBox("swfname:=chkProperty")
				Case Lcase("Borrower Present Address ")
					 Set objCheckBox  = objWin.SwfCheckBox("swfname:=chkBorAddr")   
				Case Lcase("Co-Borrower Present Address")
					 Set objCheckBox  = objWin.SwfObject("swfname:=groupContainer7").SwfCheckBox("swfname:=chkCobAddr")
				Case Else
					 FRM_Logger_ReportFailEvent "EditLoanDuplicationFieldsWithDesc","Select Valid check boxes", null
			End Select
			
			If Lcase(strEditOrValidate) = Lcase("Edit") Then
				GUI_SwfCheckbox_Set  objCheckBox,strCheckONOFF
				FRM_Logger_ReportInfoEvent "Edited Loan Duplication Template", arrTemplate(i) &" Checkbox set as "&strCheckONOFF, null
				
			ElseIf Lcase(strEditOrValidate) = Lcase("Validate") Then
				strChecked=GUI_Object_GetPropertyValue (objcheckBox,"checked")
				FRM_VerifyTrue strChecked,"verifying Loan Duplication Template", arrTemplate(i) &" Checkbox set as "&strChecked
			End if 	
        Next
		strAddress = FRM_DS_GetValue(objData, "Address")
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Address")) Then
			GUI_SwfComboBox_Select objWin.SwfComboBox("swfname:=cboProperty"),strAddress
		End If
		GUI_SwfButton_Click objWin.SwfButton("swfname:=btnSave")
    Else
		FRM_Logger_ReportFailEvent "Edited Loan Duplication Template",strValue & " Row doesn't exist in the List", null
    End If
	
	Set objData 		= Nothing
    Set objSettings 	= Nothing
    Set objList			= Nothing
    Set objWin      	= Nothing
    Set objScrollbar	= Nothing
	Set objCheckBox 	= Nothing
	
End function



'This function is used to Duplicate Loan Number for loan duplicate template
'@code
'    BIZ_LoanSetup_DuplicateLoanNumber(strTemplate,strRadioButton)
'@endcode
'@param strRowID       - The numeric or string unique ID that used to find the line in the Setting_Loansetup data spreadsheet
'@param strRadioButton - RadioButton to Select

Function BIZ_LoanSetup_DuplicateLoanNumber(strTemplate,strRadioButton)
	
    FRM_Logger_ReportInfoEvent "Duplicate Loan file Creation", "Duplicate Loan Creation using Existing Loan",Null
	
    Dim objDupDialog,objEncompassDialog,strDuplicateMsg
	
	Set objDupDialog       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DuplicateLoanDialog")
	Set objEncompassDialog = SwfWindow("swfname:=MainForm").Dialog("text:=Encompass")
	'Set objDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TemplateSelectionDialog").Dialog("text:=Encompass")
	strDuplicateMsg        = "The loan has been successfully duplicated. Would you like to open the loan now?" 
	
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnDuplicate")
   	
	If GUI_Object_IsExistX(objDupDialog,60)= True Then
		FRM_Logger_ReportInfoEvent "Validating Duplicate Loan Dialog Existance", "'Duplicate Loan' Dialog Window Exists successfully", null
		Select Case Lcase (strRadioButton)
				Case Lcase("Loan Duplicate")
					 GUI_SwfRadioButton_Click objDupDialog.SwfRadioButton("swfname:=radDuplicate")
					 GUI_SwfComboBox_Select objDupDialog.SwfComboBox("swfname:=cboFolder"), "My Pipeline"
					 GUI_SwfComboBox_Select objDupDialog.SwfComboBox("swfname:=cboTemplates"), strTemplate
				Case Lcase("Second Lien")
					 GUI_SwfRadioButton_Click objDupDialog.SwfRadioButton("swfname:=radDuplicateAsSecond")
					 GUI_SwfComboBox_Select objDupDialog.SwfComboBox("swfname:=cboFolder"), "My Pipeline"
					 GUI_Object_ValidateDisabled objDupDialog.SwfComboBox("swfname:=cboTemplates"),"Loan Duplicate Template"
				Case Lcase("Second Lien As Piggyback")
					 GUI_SwfRadioButton_Click objDupDialog.SwfRadioButton("swfname:=radPiggyback")
					 GUI_SwfComboBox_Select objDupDialog.SwfComboBox("swfname:=cboFolder"), "My Pipeline"
					 GUI_Object_ValidateDisabled objDupDialog.SwfComboBox("swfname:=cboTemplates"),"Loan Duplicate Template"
		End Select
		
		GUI_SwfButton_Click objDupDialog.SwfButton("swfname:=btnOK")
		Wait g_LongWaitLarge   'Explicit wait added Due to Sync issue
		If GUI_Object_IsExistX(objEncompassDialog,30)= "True" then 
			FRM_Logger_ReportInfoEvent "Validating Encompass dialog Existance", "Encompass Dialog Box  exist", null
			GUI_Object_ValidateText objEncompassDialog.Static("nativeclass:=Static","window id:=65535"),strDuplicateMsg,"Popup Dialog's Static Message"	
			GUI_WinButton_Click objEncompassDialog.WinButton("text:=&Yes")
		Else
			FRM_Logger_ReportFailEvent "Duplicate the Loan Pop up", "Duplicated Loan Pop up not found", null	
		End If
	Else
		FRM_Logger_ReportFailEvent "Duplicate Loan Pop up", "Duplicated Loan Pop up not found", null
		
	End If 
	
	'This Popup is not Exist in all Instances,For handling purpose we can use 
	If GUI_Object_IsExist(objEncompassDialog) = True Then
	   GUI_Dialog_Encompass_OK "OK"
	End If
	
	'This Popup is not Exist in all Instances,For handling purpose we can use 
	If GUI_Object_IsExist(objEncompassDialog) = True Then
	   GUI_Dialog_Encompass_Yes "Yes"
	End If
	
	'This Popup is not Exist in all Instances,For handling purpose we can use
	If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog")) Then
	 	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
	End If

	Set objDupDialog       = Nothing
	Set objEncompassDialog = Nothing
	
End Function



'This function is used to Edit Existing CustomPrintForm
'@code
'    BIZ_LoanSetUp_CustomPrintForms_Edit(strRowID,strFormName)
'@endcode
'@param strRowID    - The numeric or string unique ID that used to find the line in the Settings_Loansetup data spreadsheet
'@param strFormName - The name of Custom Print Form

Function BIZ_LoanSetUp_CustomPrintForms_Edit(strRowID,strFormName)

	FRM_Logger_ReportInfoEvent "Edit an Existing CustomPrintForm", "Edit an Existing CustomPrintForm using RowID " & strRowID, null

	Dim objData,objSettings,objLoanProgramList,objScrollbar,boolExist,strCategory,strFieldName
	
	Set objData 	       = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar       = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")

	boolExist = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strFormName, True, False, False, "Single")
	Wait g_LongWaitLarge   'Explicit wait added Due to Sync issue
	If boolExist Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
		strCategory = Trim(FRM_DS_GetValue(objData, "Category"))
		If UTIL_String_IsNotEmpty(strCategory) Then
       	   GUI_SwfCombobox_Select SwfWindow("swfname:=InsertFieldDialog").SwfCombobox("swfname:=catagoryCbo"), strCategory
	    End If 
	    strFieldName = Trim(FRM_DS_GetValue(objData, "FieldName"))
		If UTIL_String_IsNotEmpty(strFieldName) Then
       	   GUI_SwfCombobox_Select SwfWindow("swfname:=InsertFieldDialog").SwfCombobox("swfname:=listCbo"), strFieldName
	    End If 
		GUI_SwfButton_Click SwfWindow("swfname:=InsertFieldDialog").SwfButton("swfname:=insertBtn")
		GUI_SwfButton_Click SwfWindow("swfname:=InsertFieldDialog").SwfButton("swfname:=saveBtn")
		GUI_SwfButton_Click SwfWindow("swfname:=InsertFieldDialog").SwfButton("swfname:=closeBtn")
	Else
		FRM_Logger_ReportFailEvent "Edit an existing Loan Program", "LoanProgram " & strLoanPRogramName & " not found", null
	End If
    
	Set objData            = Nothing
    Set objSettings        = Nothing
	Set objLoanProgramList = Nothing
	Set objScrollbar       = Nothing
	
	BIZ_LoanSetUp_CustomPrintForms_Edit = strEditCustomPrintFormName
	
End Function



'This function is used to delete existing Alert
'@code
'    BIZ_Alerts_DeleteAlert(strAlertName)
'@endcode
'@param strAlertName - The name of alert
Function BIZ_Alerts_DeleteAlert(strAlertName)
	
	FRM_Logger_ReportInfoEvent "Delete existing Alert","Delete Alert: '"&strAlertName &"'",Null
	Dim boolExists, objMain
	
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	boolExists = GUI_List_ClickRow(objMain.SwfObject("swfname:=gvAlerts"),_
	Null,"Name",strAlertName,True,False,False,"Single")
	
	If boolExists Then
		'Delete if existing
		GUI_SwfObject_Click objMain.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_YesX 10,""
	End If
	
	Set objMain=Nothing
End Function



'This function is used for Create PrintFormGroup in Folder
'@code
'    BIZ_LoanSetup_CreatePrintFormGroupTemplateinFolder(strRowID,strdesc,StrFldrName) 
'@endcode
'@Param strRowID    - Loansetup data getting from Setting_Loansetup Excel
'@Param strdesc     - Loanset up form description
'@Param strFldrName - Folder Name to Craete icon  

Function BIZ_LoanSetup_CreatePrintFormGroupTemplateinFolder(strRowID,strdesc,strFldrName)

    Dim  objSettings,objScrollbar,objListView,objData,strPrintFormGroupTemplate,strFoldername
   
    FRM_Logger_ReportInfoEvent "Create PrintFormGroup in Folder", "Create PrintFormGroup in Folder using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
    
	Set objData      = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView  = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strFoldername = FRM_DS_GetValue(objData, "FolderName")
	BIZ_LoanSetup_SelectFolder strFoldername
	GUI_List_ClickRow objListView,objScrollbar, "Name", strFldrName, True, False, False, "Double" 
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add New Record in "& strdesc
	FRM_Logger_ReportInfoEvent "Clicking on Add Button", "Creating a '"&strdesc& "' record", null	
	
	strPrintFormGroupTemplate = Cstr(FRM_DS_GetValue(objData, "FormName"))			
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strPrintFormGroupTemplate	
    GUI_SwfObject_Click objListView
    
	GUI_Object_Click objListView, "SwfObject", strdesc
	GUI_List_TextExists objListView,"Name",strPrintFormGroupTemplate
	
	FRM_Logger_ReportPassEvent "Create PrintFormGroup Template in"&strdesc,"Create PrintFormGroup Template in "& strdesc&" added Successfully with Name "& strPrintFormGroupTemplate,null
	
	Set objSettings	 = Nothing
	Set objListView  = Nothing
	Set objScrollbar = Nothing
	Set objData      = Nothing
	
	BIZ_LoanSetup_CreatePrintFormGroupTemplateinFolder = strPrintFormGroupTemplate

End Function



'This function is used to create new Loan Custom Fields
'@code
'    BIZ_Settings_LoanSetup_CreateCustomField(strRowID)
'@endcode
'@param strRowID is row id in excel for reading data

Function BIZ_Settings_LoanSetup_CreateCustomField(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create Custom Field","Creating Custom Field", Null
	
	Dim objSettings,strCustomField
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	'Click on New Button
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnNew")
	FRM_Logger_ReportInfoEvent "Click on New icon", "New icon is clicked" , Null 
	
	'Create custom field
	strCustomField = BIZ_Settings_LoanSetup_SetCustomFieldDetails (strRowID)
	
	Set objSettings = Nothing
	
	BIZ_Settings_LoanSetup_CreateCustomField = strCustomField
	
End Function



'This function is adding Custom details in Custom details window
'@code
'    BIZ_Settings_LoanSetup_SetCustomFieldDetails(strRowID)
'@endcode
'@param strRowID - the RowID of the test data
 
Function BIZ_Settings_LoanSetup_SetCustomFieldDetails(strRowID)
 	
 	FRM_Logger_ReportInfoEvent "Set Custom Field data"," Set Custom Field details in Loan custom field window", Null

	Dim objData,objSettings,objCustomEdit,objScrollbar,objListView,strCustomField,strFormatComboSelect,strDesc,intMaxlength,intCalculation
	
	Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCustomEdit 		= objSettings.SwfWindow("swfname:=CustomFieldEditor")
	Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objListView			= objCustomEdit.SwfListView("swfname:=lvwOptions")
	Set objData 			= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID)
	strCustomField		    = FRM_DS_GetValue(objData,"FieldID")
	strFormatComboSelect  	= FRM_DS_GetValue(objData,"Format")
	strDesc 			  	= FRM_DS_GetValue(objData, "Description")
	intMaxlength			= FRM_DS_GetValue(objData,"MaxLength")
	intCalculation          = FRM_DS_GetValue(objData,"Calculation")
	      	
	If UTIL_String_IsNotEmpty(strCustomField) Then
		GUI_SwfEdit_Set objCustomEdit.SwfEdit("swfname:=txtFieldID"), strCustomField
		FRM_Logger_ReportInfoEvent "Loan Custom Field Editor", "Loan Custom Field Editor-Field ID: "&strCustomField, Null
	End If
	
	If UTIL_String_IsNotEmpty(strDesc) Then
		GUI_SwfEdit_Set objCustomEdit.SwfEdit("swfname:=txtDescription"), strDesc
		FRM_Logger_ReportInfoEvent "Loan Custom Field Editor", "Loan Custom Field Editor-Description: "&strDesc, Null
	End If
	
	If UTIL_String_IsNotEmpty(strFormatComboSelect) Then
		GUI_SwfComboBox_Select objCustomEdit.SwfComboBox("swfname:=cboFormat"), strFormatComboSelect
		FRM_Logger_ReportInfoEvent "Loan Custom Field Editor", "Loan Custom Field Editor-Format: "&strFormatComboSelect, Null
	End If
	
	If UTIL_String_IsNotEmpty(intMaxlength) Then
		GUI_SwfEdit_Set objCustomEdit.SwfEdit("swfname:=txtMaxLength"),intMaxlength
		FRM_Logger_ReportInfoEvent "Loan Custom Field Editor", "Loan Custom Field Editor-Max Length: "&intMaxlength, Null
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "InputType1")) Then
		GUI_SwfButton_Click objCustomEdit.SwfButton("swfname:=btnAddOption")
		GUI_WinEdit_Set objListView.WinEdit("nativeclass:=Edit", "index:=0"),FRM_DS_GetValue(objData, "InputType1")
		FRM_Logger_ReportInfoEvent "Loan Custom Field Editor", "Loan Custom Field Editor-"&FRM_DS_GetValue(objData, "InputType1"), Null
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "InputType2")) Then
		GUI_SwfButton_Click objCustomEdit.SwfButton("swfname:=btnAddOption")
		GUI_WinEdit_Set objListView.WinEdit("nativeclass:=Edit", "index:=0"),FRM_DS_GetValue(objData, "InputType2")
		FRM_Logger_ReportInfoEvent "Loan Custom Field Editor", "Loan Custom Field Editor-"&FRM_DS_GetValue(objData, "InputType2"), Null
	End If
	
	If UTIL_String_IsNotEmpty(intCalculation) Then
		GUI_SwfEdit_Type objCustomEdit.SwfEditor("swfname:=txtCalc"), intCalculation
		FRM_Logger_ReportInfoEvent "Loan Custom Field Editor", "Loan Custom Field Editor - Field ID: "&intCalculation, Null
	End If
	
	GUI_SwfButton_Click objCustomEdit.SwfButton("swfname:=btnOK")
				
	Set objData 		  = Nothing
	Set objSettings 	  = Nothing
	Set objCustomEdit 	  = Nothing
	Set objScrollbar	  = Nothing
	Set objListView	      = Nothing
	
	BIZ_Settings_LoanSetup_SetCustomFieldDetails = strCustomField
	
End Function



'This function is adding Custom details in Custom details window
'@code
'    BIZ_Settings_LoanSetup_ValidateCustomField(strRowID,strCustomField)
'@endcode
'@param strRowID - the RowID of the test data
'@param strCustomField - Custom Field name

Function  BIZ_Settings_LoanSetup_ValidateCustomField(strRowID,strCustomField)
	
	FRM_Logger_ReportInfoEvent "Validate Custom Field data","Validate Custom Field data - Started ", Null
	
	Dim objSettings,objCustomFields,objData,strFormatComboSelect,strDesc,intMaxLength,intRowNum
	Set objSettings 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCustomFields = objSettings.SwfObject("swfname:=lstVwExCustomFields")
	Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID)
	strFormatComboSelect= FRM_DS_GetValue(objData,"Format")
	strDesc 			= FRM_DS_GetValue(objData, "Description")
	intMaxLength   		= FRM_DS_GetValue(objData, "MaxLength")
	strSelectFld		= FRM_DS_GetValue(objData,"strSelectField")
	
	strFieldId= "CX."&strCustomField
	intRowNum 	 = GUI_List_GetRowIndex(objCustomFields,"Field ID",strFieldId)
	Wait g_LongWaitLarge   'Explicit wait added Due to Sync issue
	If intRowNum>=0 Then
		GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Field ID", strFieldId,"Field ID"
		If UTIL_String_IsNotEmpty(strFormatComboSelect) Then
								
			Select Case strSelectFld
				Case "Date"
					strFormatComboSelect1=split(strFormatComboSelect," ")
					GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Format", strFormatComboSelect1(0),"Format"
				Case "Decimal"
					strFormatComboSelect1=split(strFormatComboSelect,"(")
					GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Format", Trim(strFormatComboSelect1(0)),"Format"
				Case "YesOrNo"
					strFormatComboSelect1=Replace(strFormatComboSelect,"/","")
					GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Format", strFormatComboSelect1,"Format"
				Case "DropDown"
					GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Format", FRM_DS_GetValue(objData, "DropDownList"),"Format"
				Case "CheckBox"
					GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Format", FRM_DS_GetValue(objData, "strCheckValue"),"Format"
				Case Else 
					GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Format", strFormatComboSelect,"Format"
			End Select
	
		End If 
		If UTIL_String_IsNotEmpty(strDesc) Then
			GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Description", strDesc,"Description"
		End If
		
		Select Case strSelectFld
			Case "String"
				GUI_List_ValidateCellDataWithCustomMsg objCustomFields, intRowNum,"Max Length", intMaxLength,"Max Length"
		End Select
			
	Else
		FRM_Logger_ReportFailEvent "Validating the custom field ", "Custom fields is not verified", null
	End If
	
	Set objSettings 	= Nothing
	Set objCustomFields = Nothing
	Set objData 		= Nothing
			
End Function



'This function is perform tool operations as edit
'@code
'    BIZ_Settings_LoanSetup_EditCustomField(strRowID,strCustomField)
'@endcode
'@param strRowID - RowID of the test data
'@param strCustomField - Custom Field name

Function BIZ_Settings_LoanSetup_EditCustomField(strRowID,strCustomField)
	
	FRM_Logger_ReportInfoEvent "Edit Custom Field","Edit Custom Field - '"&strRowID&"'", Null
	
	Dim objSettings,objCustomFields,objScrollbar
	Set objSettings 	 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCustomFields  = objSettings.SwfObject("swfname:=lstVwExCustomFields")
	Set objScrollbar	= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strFieldId= "CX."&strCustomField
	boolExist = GUI_List_ClickRow(objCustomFields, objScrollbar, "Field ID", strFieldId, True, False, False, "Single")	
	Wait g_LongWaitLarge   'Explicit wait added Due to Sync issue
	If boolExist Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnEdit")
		
		'Edit Custom field
		strEditCustomField = BIZ_Settings_LoanSetup_SetCustomFieldDetails(strRowID)
	Else 
		FRM_Logger_ReportFailEvent "Edit Custom field ", "'"&strFieldId&"' Custom fields is not exists", null
	End If
	 		
 	Set objSettings 	 = Nothing
	Set objCustomFields  = Nothing
			
	BIZ_Settings_LoanSetup_EditCustomField = strEditCustomField
	
End Function



'This function is used to delete the existing user-defined Loan Custom Fields
'@code
'   BIZ_Settings_LoanSetup_DeleteCustomField(strCustomField)
'@endcode
'@param strCustomField- strCustomField is to delete

Function BIZ_Settings_LoanSetup_DeleteCustomField(strCustomField)

 	FRM_Logger_ReportInfoEvent "Delete Custom Field","Verification of Deleting a created Custom Field : "&strCustomField, Null

	Dim objSettings,objCustomFields,objScrollbar,objSettingsDialog,boolExist
  	
  	Set objSettings 	 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objCustomFields  = objSettings.SwfObject("swfname:=lstVwExCustomFields")
	Set objScrollbar	 = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	Set objSettingsDialog=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("text:=Encompass")
	
	strFieldId= "CX."&strCustomField
	boolExist = GUI_List_ClickRow(objCustomFields, objScrollbar, "Field ID", strFieldId, True, False, False, "Single")	
	Wait g_LongWaitLarge   'Explicit wait added Due to Sync issue
	If boolExist Then
		GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnDelete"), "SwfObject", "Delete icon is clicked"
		FRM_Logger_ReportInfoEvent "Delete Icon", "Click on Delete Icon", null
		GUI_Object_WaitTillExistX objSettingsDialog, 60 
		GUI_WinButton_Click objSettingsDialog.WinButton("text:=&Yes")
		FRM_Logger_ReportInfoEvent "Clicking on yes button " , "Clicked yes button", null
		GUI_Object_WaitTillExistX objSettings,60
		boolExist = GUI_List_ClickRow(objCustomFields, objScrollbar, "Field ID", strFieldId, True, False, False, "Single")
		FRM_VerifyFalse boolExist," Deleted custom field","'"&strFieldId &"' Selected custom field is deleted "
	Else
	   FRM_Logger_ReportFailEvent "Custom field ","'"&strFieldId&"' is not exist", Null	
	End If 
	
	Set objSettings 	= nothing
	Set objCustomFields = nothing
	Set objScrollbar 	= nothing

End Function



'This function is used to create new Alert
'@code
'	BIZ_LoanSetup_Alerts_CreateNewAlert(strRowID)
'@endcode
'@param strRowID - row id in excel data sheet
Function BIZ_LoanSetup_Alerts_CreateNewAlert(strRowID)
	
	Set objData = FRM_DS_GetTestData("Settings_LoanSetup", "CreateNewAlert", strRowID)
	
	BIZ_Nav_HierarchyTree "Loan Setup", "Alerts"
	
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMainView = objMain.SwfWindow("swfname:=AlertEditor")
	Set objFilterDialog= objMainView.SwfWindow("swfname:=AddEditFilterDialog")
	
	FRM_Logger_ReportInfoEvent "Create new alert","Create new alert with name: '"& FRM_DS_GetValue(objData, "AlertsName")&"'",Null
	
	GUI_SwfObject_Click objMain.SwfObject("swfname:=stdIconBtnAdd")
	GUI_Object_WaitTillVisibleX objMainView,25
	
	'New alert name
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AlertsName")) Then
		GUI_SwfEdit_Set objMainView.SwfEdit("swfname:=txtName"),FRM_DS_GetValue(objData, "AlertsName")
	End If
	
	'Message 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Message")) Then
		GUI_SwfEditor_Type objMainView.SwfEditor("swfname:=txtMessage"),FRM_DS_GetValue(objData, "Message")
	End If
	
	'Trigger radio box option
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerRadiobox")) Then
		strTriggerOption = FRM_DS_GetValue(objData, "TriggerRadiobox")
		GUI_SwfRadioButton_Click objMainView.SwfRadioButton("swfname:=radActivate.*","text:="&strTriggerOption)
	End If
	
	'Trigger Date Field ID
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TriggerDateFieldID")) Then
		GUI_SwfEdit_Set objMainView.SwfEdit("swfname:=txtAlertDateFieldID"),FRM_DS_GetValue(objData, "TriggerDateFieldID")
	End If
	
	'Field Edit box for adding new conditions
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Field_NewConditions")) Then
		
		'click on new button in conditions section
		GUI_SwfObject_Click objMainView.SwfObject("swfname:=btnAddFilter")
		
		GUI_Object_WaitTillVisibleX objFilterDialog,20
		GUI_SwfEdit_Set objFilterDialog.SwfEdit("swfname:=txtField"),_
		FRM_DS_GetValue(objData, "Field_NewConditions")
		
		'click on "Description" edit box to activate Operator and value fields
		GUI_SwfObject_Click objFilterDialog.SwfEdit("swfname:=txtDescription")
	End If
	
	'Operator Field in "Add/Edit Search Filter" Window
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Operator_NewConditions")) Then
		GUI_SwfComboBox_Select objFilterDialog.SwfComboBox("swfname:=cboOperator"),_
		FRM_DS_GetValue(objData, "Operator_NewConditions")
	End If
	
	'Value Field in "Add/Edit Search Filter" Window
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Value_NewConditions")) Then
		GUI_SwfEdit_Set objFilterDialog.SwfEdit("swfname:=txtStringValue"),FRM_DS_GetValue(objData, "Value_NewConditions")
		GUI_SwfButton_Click objFilterDialog.SwfButton("swfname:=btnOK")
	End If
	
	'"Show Alert?" Edit box
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ShowAlert?")) Then
		GUI_SwfEdit_Set objMainView.SwfEdit("swfname:=txtDaysBefore"),FRM_DS_GetValue(objData, "ShowAlert?")
	End If
	
	'Save
	GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnSave")
	
	'To avoid any sync issues due to large row count in Alerts list
	BIZ_Nav_HierarchyTree "Loan Setup", "Log"
	BIZ_Nav_HierarchyTree "Loan Setup", "Alerts"
	
	'return boolean value
	BIZ_LoanSetup_Alerts_CreateNewAlert=GUI_List_ClickRow(objMain.SwfObject("swfname:=gvAlerts"),_
	Null,"Name",FRM_DS_GetValue(objData,"AlertsName"),True,False,False,"Single")
	
	Set objData = Nothing
	Set objFilterDialog = Nothing
	Set objMainView = Nothing
	Set objMain = Nothing
End Function



'This function is used for Edit Print Form Group
'@code
'    BIZ_LoanSetUp_PrintFormGroupEdit(strFormName,strRowID)
'@endcode
'@param strRowID    - The numeric or string unique ID that used to find the line in the Settings_LoanSetup data spreadsheet
'@param strFormName - The name of a Print Form Group

Function BIZ_LoanSetUp_PrintFormGroupEdit(strFormName,strRowID)

	FRM_Logger_ReportInfoEvent "Edit Print FormGroup", "Edit Print FormGroup using "&strFormName, null
	
	Dim objData, objSettings,objPrintFormList,objScrollbar,objViewFiles,objDialogScrollbar,strText,strGeneralForm1,strGeneralForm2
	
	Set objData 		  = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objSettings       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPrintFormList  = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar      = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objViewFiles      = SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfObject("swfname:=gridViewFiles")
	Set objDialogScrollbar= SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfScrollBar("swfname:=vPanelScrollBar")

	GUI_List_ClickRow objPrintFormList, objScrollbar, "Name", strFormName, True, False, False, "Double"
	Wait g_LongWaitLarge   'Explicit wait added Due to Sync issue
	strText = CStr(FRM_DS_GetValue(objData, "Description"))
     If UTIL_String_IsNotEmpty(strText) Then
    	GUI_SwfEditor_Type SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfEditor("swfname:=txtDescription"),strText
   	End If
   	
   	strGeneralForm1 = CStr(FRM_DS_GetValue(objData, "GeneralForm1"))
    If UTIL_String_IsNotEmpty(strGeneralForm1) Then
    	GUI_List_ClickRow objViewFiles, objDialogScrollbar, "Name", strGeneralForm1, True, False, False, "Single"
    	GUI_SwfButton_Click SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfButton("swfname:=btnAdd")
   	End If
   	
   	strGeneralForm2 = CStr(FRM_DS_GetValue(objData, "GeneralForm2"))
    If UTIL_String_IsNotEmpty(strGeneralForm2) Then
    	GUI_List_ClickRow objViewFiles, objDialogScrollbar, "Name", strGeneralForm2, True, False, False, "Single"
    	GUI_SwfButton_Click SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfButton("swfname:=btnAdd")
   	End If
   	
	GUI_SwfButton_Click SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfButton("swfname:=btnOK")
	
	Set objData            = Nothing
	Set objSettings        = Nothing
	Set objPrintFormList   = Nothing
	Set objScrollbar       = Nothing
	Set objViewFiles       = Nothing
	Set objDialogScrollbar = Nothing
	
End Function



'This function is used for Create Loan Folder
'@code
'    BIZ_Settings_LoanSetup_CreateLoanFolder(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanSetup data spreadsheet     

Function BIZ_Settings_LoanSetup_CreateLoanFolder(strRowID)
	
	FRM_Logger_ReportInfoEvent "Create Loan Folder", "Create Loan Folder using "&strRowID, null
	
	Dim objData,objSettings,objMainView,objLoanFolderList,objScrollbar,objArch,objDup,strLoanFolder,strArc,strDup
	
	Set objData           = FRM_DS_GetTestData("Settings_Loansetup", "AddLoanFolder", strRowID)
	Set objSettings       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMainView       = objSettings.SwfWindow("swfname:=FolderSettingsDialog")
	Set objLoanFolderList = objSettings.SwfObject("swfname:=gvLoanFolders")
	Set objScrollbar      = objSettings.SwfScrollbar("swfname:=vPanelScrollBar")
	Set objArch           = objMainView.SwfCheckBox("swfname:=chkBoxArchiveFolder") 
	Set objDup            = objMainView.SwfCheckBox("swfname:=chkDupLoan") 
	
	strLoanFolder = FRM_DS_GetValue(objData, "FolderName")
	strArc        = FRM_DS_GetValue(objData, "ArchiveFolder")
	strDup        = FRM_DS_GetValue(objData, "DuplicateLoanCheck")
	
	GUI_SwfObject_Click objSettings.SwfWindow("swfname:=FolderSettingsForm").SwfObject("swfname:=stdIconBtnNew")
	GUI_SwfEdit_Set objMainView.SwfEdit("swfname:=txtBoxFolderName"),strLoanFolder
	GUI_SwfCheckbox_Set objArch,strArc
	GUI_SwfCheckbox_Set objDup,strDup
	GUI_SwfButton_Click (objMainView.SwfButton("swfname:=btnOK"))
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	boolTextExist = GUI_List_ClickRow (objLoanFolderList,objScrollbar, "Folder Name", strLoanFolder, True, False, False, "Single")
	Wait g_LongWaitLarge   'Explicit wait added Due to Sync issue
	FRM_VerifyTrue boolTextExist,"LoanFolderCreation", "LoanFolder Created with name '"&strLoanFolder&"'"
	
	Set objData           = Nothing
	Set objSettings       = Nothing
	Set objMainView       = Nothing
	Set objLoanFolderList = Nothing
	Set objScrollbar      = Nothing
	Set objArch           = Nothing
	Set objDup            = Nothing
	
	BIZ_Settings_LoanSetup_CreateLoanFolder = strLoanFolder
	
End Function



'This function is used to Search Loan Number in Respective Loan Folder
'@code
'    BIZ_LoanSetup_SearchLoanInLoanFolder(strPipeline,strLoanFolder)
'@endcode
'@param strPipeline Name Of The Pipeline You Wish To Select
'@param strLoanFolder Name Of The Loan Folder You Wish To Select

Function BIZ_LoanSetup_SearchLoanInLoanFolder(strPipeline,strLoanFolder)
    
    FRM_Logger_ReportInfoEvent "Search Loan Number", "Pipeline Selected: '"&strPipeline&"' and Loan Folder : '"&strLoanFolder&"' ", null
    
    Dim objEncompassDialog, objLoanList, intLoanNumber

    Set objEncompassDialog = SwfWindow("swfname:=MainForm").Dialog("text:=Encompass")
    Set objLoanList        = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
    
    wait g_TinyWaitLarge  '@ Due to sync issuse explicitly added wait
    BIZ_Loan_SaveLoanNumber()
    intLoanNumber = BIZ_Loan_GetLoanNumber()      
    
    BIZ_Pipeline_SelectPipelineViewAndLoanFolder strPipeline, strLoanFolder
    
    If GUI_Object_IsExistX(objEncompassDialog,40)= "True" then 
        FRM_Logger_ReportInfoEvent "Validating Encompass dialog Existance", "Encompass Dialog Box exists", null
        GUI_WinButton_Click objEncompassDialog.WinButton("text:=OK")
    End If 
    
    GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfEdit("swfname:=txtBox","index:=3"),intLoanNumber
    UTIL_Win_SendKey "{ENTER}"
    objLoanList.Click 300, 50
    
    Set objEncompassDialog   = Nothing
    Set objLoanList          = Nothing
    
End Function



'This function is used to Duplicate Loan Number for loan duplicate template In selected loan folder
'@code
'   BIZ_LoanSetup_DuplicateLoanInLoanFolder(strLoanFolder,strTemplate,strRadioButton)
'@endcode
'@param strRowID       - The numeric or string unique ID that used to find the line in the Setting_Loansetup data spreadsheet
'@param strRadioButton - RadioButton to Select
'@param strLoanFolder  - strLoanFolder Name Of The Loan Folder You Wish To Select

Function BIZ_LoanSetup_DuplicateLoanInLoanFolder(strLoanFolder,strTemplate,strRadioButton)
    
    FRM_Logger_ReportInfoEvent "Duplicate Loan file Creation", "Loan File Creation using  Existing Loan Duplication Template",null
    
    Dim objDupDialog,objEncompassDialog,strDuplicateMsg
    
    Set objDupDialog       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DuplicateLoanDialog")
    Set objEncompassDialog = SwfWindow("swfname:=MainForm").Dialog("text:=Encompass")
    'Set objDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TemplateSelectionDialog").Dialog("text:=Encompass")
    strDuplicateMsg        = "The loan has been successfully duplicated. Would you like to open the loan now?" 
    
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnDuplicate")
       
    If GUI_Object_IsExistX(objDupDialog,75)= True Then
        FRM_Logger_ReportInfoEvent "Validating Duplicate Loan Dialog Existance", "'Duplicate Loan' Dialog Window Exists successfully", null
        Select Case Lcase (strRadioButton)
                Case Lcase("Loan Duplicate")
                     GUI_SwfRadioButton_Click objDupDialog.SwfRadioButton("swfname:=radDuplicate")
                     GUI_SwfComboBox_Select objDupDialog.SwfComboBox("swfname:=cboFolder"), strLoanFolder
                     GUI_SwfComboBox_Select objDupDialog.SwfComboBox("swfname:=cboTemplates"), strTemplate
                Case Lcase("Second Lien")
                     GUI_SwfRadioButton_Click objDupDialog.SwfRadioButton("swfname:=radDuplicateAsSecond")
                     GUI_SwfComboBox_Select objDupDialog.SwfComboBox("swfname:=cboFolder"), strLoanFolder
                     GUI_Object_ValidateDisabled objDupDialog.SwfComboBox("swfname:=cboTemplates"),"Loan Duplicate Template"
                Case Lcase("Second Lien As Piggyback")
                     GUI_SwfRadioButton_Click objDupDialog.SwfRadioButton("swfname:=radPiggyback")
                     GUI_SwfComboBox_Select objDupDialog.SwfComboBox("swfname:=cboFolder"), strLoanFolder
                     GUI_Object_ValidateDisabled objDupDialog.SwfComboBox("swfname:=cboTemplates"),"Loan Duplicate Template"
        End Select
        
        GUI_SwfButton_Click objDupDialog.SwfButton("swfname:=btnOK")
        
        If GUI_Object_IsExistX(objEncompassDialog,50)= "True" then 
            FRM_Logger_ReportInfoEvent "Validating Encompass dialog Existance", "Encompass Dialog Box  exist", null
            GUI_Object_ValidateText objEncompassDialog.Static("nativeclass:=Static","window id:=65535"),strDuplicateMsg,"Popup Dialog's Static Message"    
            GUI_WinButton_Click objEncompassDialog.WinButton("text:=&No")
        Else
            FRM_Logger_ReportFailEvent "Duplicate the Loan Pop up", "Duplicated Loan Pop up not found", null    
        End If
    Else
        FRM_Logger_ReportFailEvent "Duplicate Loan Pop up", "Duplicated Loan Pop up not found", null
        
    End If 
    
    'This Popup is not Exist in all Instances,For handling purpose we can use 
    If GUI_Object_IsExist(objEncompassDialog) = True Then
       GUI_Dialog_Encompass_OK "OK"
    End If

    Set objDupDialog       = Nothing
    Set objEncompassDialog = Nothing
    
End Function



'This function is used for Edit Loan Folder
'@code
'    BIZ_Settings_LoanSetup_EditLoanFolder(strRowID,strLoanFolder)
'@endcode
'@param strRowID      - The numeric or string unique ID that used to find the line in the Settings_LoanSetup data spreadsheet  
'@param strLoanFolder - The name of a Loan Folder
   
Function BIZ_Settings_LoanSetup_EditLoanFolder(strRowID,strLoanFolder)
	
	FRM_Logger_ReportInfoEvent "Edit Loan Folder", "Edit Loan Folder using "&strRowID, null
	
	Dim objData,objSettings,objMainView,objLoanFolderList,objScrollbar,objArch,strArc,strEditLoanFolder,boolTextExist
	
	Set objData           = FRM_DS_GetTestData("Settings_Loansetup", "AddLoanFolder", strRowID)
	Set objSettings       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMainView       = objSettings.SwfWindow("swfname:=FolderSettingsDialog")
	Set objLoanFolderList = objSettings.SwfObject("swfname:=gvLoanFolders")
	Set objScrollbar      = objSettings.SwfScrollbar("swfname:=vPanelScrollBar") 
	Set objArch           = objMainView.SwfCheckBox("swfname:=chkBoxArchiveFolder")
	strArc                = FRM_DS_GetValue(objData, "ArchiveFolder")
	
	GUI_List_ClickRow objLoanFolderList,objScrollbar, "Folder Name", strLoanFolder, True, False, False, "Double"
	GUI_SwfCheckbox_Set objArch,strArc
	GUI_SwfButton_Click objMainView.SwfButton("swfname:=btnOK")
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
	
	strEditLoanFolder = "<"&strLoanFolder&">"
	boolTextExist = GUI_List_TextExists(objLoanFolderList,"Folder Name", strEditLoanFolder)
	Wait g_LongWaitLarge   'Explicit wait added Due to Sync issue
	FRM_VerifyTrue boolTextExist,"Loan Folder", "Folder Exists '"&strEditLoanFolder&"'"
	
	Set objData           = Nothing
	Set objSettings       = Nothing
	Set objMainView       = Nothing
	Set objLoanFolderList = Nothing
	Set objScrollbar      = Nothing
	Set objArch           = Nothing
	
	BIZ_Settings_LoanSetup_EditLoanFolder = strEditLoanFolder
	
End Function



'This function is used to Validate LoanFolder Checkbox in UserGroups under Loans 
'@code
'    BIZ_Settings_CompanySettings_ValidateLoanFolderCheckBox(strGroupName,strLoanFolder)
'@endcode
'@Param strGroupName   - Group Name
'@param strLoanFolder  - Name of the LoanFolder

Function BIZ_Settings_CompanySettings_ValidateLoanFolderCheckBox(strGroupName,strLoanFolder)
	
	FRM_Logger_ReportInfoEvent "Validate LoanFolder Checkbox", "Validate LoanFolder Checkbox in UserGroups under Loans", Null
	
	Dim objSettings,objListView
	
    Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objListView        = objSettings.SwfListView("swfname:=listViewLoanFolders")
    
    GUI_SwfList_Select objSettings.SwfListView("swfname:=lvGroup"), strGroupName
    GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"), "Loans"
	GUI_Object_WaitTillExistX objListView, 60
	Wait g_TinyWaitLarge 'Explicit wait added due to sync
	If GUI_SwfList_SetCheckbox(objListView,strLoanFolder,micChecked) Then
       FRM_Logger_ReportPassEvent "Verify '"&strLoanFolder&"' Checkbox is Checked or not","'"&strLoanFolder&"' Checkbox is Checked in Settings Treeview",Null
    Else
       GUI_SwfList_SetCheckbox objListView,strLoanFolder,micChecked
       If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then       
       GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
    End If
    End If
	
	Set objSettings = Nothing
	Set objListView = Nothing
	
End Function



'This function is used to LoanFolder with PopupMsg
'@code
'    BIZ_LoanSetup_ValidateLoanFolderWithPopupMsg(strLoanFolder)
'@endcode
'Param strLoanFolder - The Name of a LoanFolder

Function BIZ_LoanSetup_ValidateLoanFolderWithPopupMsg(strLoanFolder)
     
	FRM_Logger_ReportInfoEvent "Delete Non-empty Folder","Verify if the User is able to Delete Non-empty Folder using '"&strLoanFolder&"'", Null
	
	Dim objSettings,objLoanFolderList,objSettingsDialog,objScrollbar,strvalDialog
	
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanFolderList  = objSettings.SwfObject("swfname:=gvLoanFolders")
	Set objSettingsDialog  = objSettings.Dialog("text:=Non-Empty Folder")
	Set objScrollbar       = objSettings.SwfScrollbar("swfname:=vPanelScrollBar")
	strvalDialog           = "The selected folder '"&strLoanFolder&"' is not empty.You can only delete empty folders."
	
	GUI_List_ClickRow objLoanFolderList,objScrollbar, "Folder Name", strLoanFolder, True, False, False, "Single"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDelete")
	Wait g_TinyWaitLarge 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
    GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"""Popup Dialog's Static Message"""
	GUI_Dialog_Encompass_OK "OK"
	GUI_SwfObject_Click objLoanFolderList
	
	Set objSettings 		= Nothing
	Set objLoanFolderList 	= Nothing
	Set objSettingsDialog 	= Nothing
	Set objScrollbar        = Nothing
	
End Function



'This function is used to Search Loan Number in Pipeline
'@code
'    BIZ_LoanSetup_SearchWithLoanNumberInPipeline(strPipeline,strLoanFolder,strLoanNumber,strColTitle)
'@endcode
'@param strLoanNumber - LoanNumber

Function BIZ_LoanSetup_SearchWithLoanNumberInPipeline(strPipeline,strLoanFolder,strLoanNumber,strColTitle)
	
	FRM_Logger_ReportInfoEvent "Search Loan Number", "Search Loan Number '" & strLoanNumber& "' in Pipeline '"&strPipeline&"', Loan folder '"&strLoanFolder&"'", null
	
    Dim objEncompassDialog,objLoanList,intColIndex

	Set objEncompassDialog = SwfWindow("swfname:=MainForm").Dialog("text:=Encompass")
	Set objLoanList        = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	
	wait g_TinyWaitLarge  'Due to sync issuse explicitly added wait
	
	BIZ_Pipeline_SelectPipelineViewAndLoanFolder strPipeline,strLoanFolder
	
	If GUI_Object_IsExistX(objEncompassDialog,40) Then 
		FRM_Logger_ReportInfoEvent "Validating Encompass dialog Existance", "Encompass Dialog Box  exist", null
		GUI_WinButton_Click objEncompassDialog.WinButton("text:=OK")
	End If 
	
	BIZ_Loan_SelectLoanByColumnValue strColTitle,strLoanNumber
	
	Set objEncompassDialog   = Nothing
	Set objLoanList          = Nothing
	
End Function



'This function is used to create Compliance Calendar 
'@code
'    Function BIZ_LoanSetup_ComplianceCalendar_OurCompanyCalendar(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_LoanSetup_ComplianceCalendar_OurCompanyCalendar(strRowID)
	
	FRM_Logger_ReportInfoEvent "LoanSetup_ComplianceCalendar_OurCompanyCalendar", "Start creation of 'Our Company Calendar'" , null
	
	'====== Navigate to Compliance Calendar ======
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	Wait g_TinyWaitSmall	'@ Handling Sync Related Issues
	BIZ_Nav_HierarchyTree "Loan Setup", "Compliance Calendar"
	
	'====== Creating Objects ======
	Set objCompCalendarData = FRM_DS_GetTestData("Settings_LoanSetup", "ComplianceCalendar", strRowID)
	Set objEncompassSettings = SwfWindow("swfname:=SetUpContainer")
	
	'====== Set Radio Button for Reg-Z Business Day Calender ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objCompCalendarData, "RegZBusinessDayCalendar")) Then
		GUI_SwfRadioButton_Click objEncompassSettings.SwfRadioButton("swfname:=radRegz")
	End If 
	
	'====== Set Radio Button for U.S. Postal Calender ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objCompCalendarData, "USPostalCalendar")) Then
		GUI_SwfRadioButton_Click objEncompassSettings.SwfRadioButton("swfname:=radPostal")
	End If 
	
	'====== Set Radio Button for Our Company Calender ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objCompCalendarData, "OurCompanyCalendar")) Then
		GUI_SwfRadioButton_Click objEncompassSettings.SwfRadioButton("swfname:=radBusiness")
	End If 
	
	'====== Set Check Box for Exclude Saturdays======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objCompCalendarData, "ExcludeSaturdays")) Then
		GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkSaturdays"), "ON"
	Else
		GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkSaturdays"), "OFF"
	End If 
	
	'====== Set Check Box for Exclude Sundays======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objCompCalendarData, "ExcludeSundays")) Then
		GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkSundays"), "ON"
	Else
		GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkSundays"), "OFF"
	End If 
	
	'====== Saving Our Company Calender ======
	If GUI_Object_IsEnabled(objEncompassSettings.SwfObject("swfname:=stdIconBtnSave")) Then
	    GUI_Object_Click objEncompassSettings.SwfObject("swfname:=stdIconBtnSave"), "SwfObject", "Save Setting Consents"
	End If
	BIZ_Nav_Settings_Close()
	Set objEncompassSettings	=	Nothing

End Function



'This function is used to create Disclosure Tracking Settings
'@code
'    Function BIZ_LoanSetup_DisclosureTrackingSettings(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet

Function BIZ_LoanSetup_DisclosureTrackingSettings(strRowID)
	
	FRM_Logger_ReportInfoEvent "LoanSetup_DisclosureTrackingSettings", "Start creation of 'Disclosure Tracking Settings'" , null
	
	'====== Declaing the Variabels ======
	Dim objEncompassSettings
	
	'====== Creating the the objects ======
	Set objEncompassSettings = SwfWindow("swfname:=SetUpContainer")
	Set objCompCalendarData  = FRM_DS_GetTestData("Settings_LoanSetup", "ComplianceCalendar", strRowID)
	
	'====== Navigate to Disclosure Tracking Settings ======
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	BIZ_Nav_HierarchyTree "Loan Setup", "Disclosure Tracking Settings"
	
	'====== Set Check Box for Include Application Date in the DatCalculation ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objCompCalendarData, "IncludeApplicationDateInTheDateCalculation")) Then
		GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkboxInitDiscDueDate"), "ON"
	Else
		GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkboxInitDiscDueDate"), "OFF"
	End If 
		
	'====== Set Check Box for Include Application Date in the DatCalculation ======
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objCompCalendarData, "IncludeChangedCircumstanceDatesInTheDateCalculation")) Then
		GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkboxRediscloseDueDate"), "ON"
	Else
		GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkboxRediscloseDueDate"), "OFF"
	End If
	
	'====== Saving Our Company Calender ======
	If GUI_Object_IsEnabled(SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")) Then
	    GUI_Object_Click SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave"), "SwfObject", "Save Setting Consents"
	End If
	
	BIZ_Nav_Settings_Close()
	
End Function

'This function is used to set Values in settings>Loan setup>HMDA settings
'@code
'    Function BIZ_LoanSetup_HMDASettings(strRowID)
'@endcode
'@param strRowID - RowID in the datasheet


Function  BIZ_LoanSetup_HMDASettings(strRowID)

	FRM_Logger_ReportInfoEvent "LoanSetup_HMDASettings", "Start creation of HMDA  Settings" , null
	
	BIZ_Nav_OpenMenuItem "Encompass;Settings..."
	Wait g_TinyWaitSmall	'@ Handling Sync Related Issues
	BIZ_Nav_HierarchyTree "Loan Setup", "HMDA Settings"
	
	'====== Creating the the objects ======
	Set objEncompassSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHMDASettingData  = FRM_DS_GetTestData("Settings_LoanSetup", "HMDASettings", strRowID)
	
	
	'Set Respondent Information Data
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "RespondentId")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtRespondentId"), FRM_DS_GetValue(objEncompassSettings, "RespondentId")
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "TaxId")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtTaxId"), FRM_DS_GetValue(objEncompassSettings, "TaxId")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "Agency")) Then
		GUI_SwfComboBox_Select objEncompassSettings.SwfComboBox("swfname:=cmbAgency"), FRM_DS_GetValue(objEncompassSettings, "TaxId")
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "LEI")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtLEI"), FRM_DS_GetValue(objEncompassSettings, "LEI")
	End if
	'Set Respondent Contact INformation
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "CompanyName")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtCompanyName"), FRM_DS_GetValue(objEncompassSettings, "CompanyName")
	End if
	'Contact Person
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "Name")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtName"), FRM_DS_GetValue(objEncompassSettings, "txtName")
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "Address")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtAddress"), FRM_DS_GetValue(objEncompassSettings, "Address")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "City")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtCity"), FRM_DS_GetValue(objEncompassSettings, "City")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "State")) Then
		GUI_SwfComboBox_Select objEncompassSettings.SwfComboBox("swfname:=cmbState"), FRM_DS_GetValue(objEncompassSettings, "State")
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "Zip")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtZip"), FRM_DS_GetValue(objEncompassSettings, "Zip")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "Phone")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtPhone"), FRM_DS_GetValue(objEncompassSettings, "Phone")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "Fax")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtFax"), FRM_DS_GetValue(objEncompassSettings, "Fax")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "Email")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtEmail"), FRM_DS_GetValue(objEncompassSettings, "Email")
	End if
	
	'PArent Mailing Address
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ParentMailingName")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtParentMailingName"), FRM_DS_GetValue(objEncompassSettings, "ParentMailingName")
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ParentMailingAddress")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtParentMailingAddress"), FRM_DS_GetValue(objEncompassSettings, "ParentMailingAddress")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ParentMailingCity")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtParentMailingCity"), FRM_DS_GetValue(objEncompassSettings, "ParentMailingCity")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ParentMailingState")) Then
		GUI_SwfComboBox_Select objEncompassSettings.SwfComboBox("swfname:=cmbParentMailingState"), FRM_DS_GetValue(objEncompassSettings, "ParentMailingState")
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ParentMailingZip")) Then
		GUI_SwfEdit_set objEncompassSettings.SwfEdit("swfname:=txtParentMailingZip"), FRM_DS_GetValue(objEncompassSettings, "ParentMailingZip")
	End if
	
	'HMDA Application Date
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ApplicationDate")) Then
		GUI_SwfComboBox_Select objEncompassSettings.SwfComboBox("swfname:=cmbApplicationDate"), FRM_DS_GetValue(objEncompassSettings, "ApplicationDate")
	End if

	'Institution Type
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "PurchaseLoans")) Then
	val= Trim(FRM_DS_GetValue(objHMDASettingData, "PurchaseLoans"))
		if(val="Yes" or val="1") Then
			GUI_SwfRadioButton_Click objEncompassSettings.SwfComboBox("swfname:=rdBtnPurchaseLoansYes"), FRM_DS_GetValue(objEncompassSettings, "PurchaseLoans")
		ElseIf (val="No" or val="0") Then
		   GUI_SwfRadioButton_Click objEncompassSettings.SwfComboBox("swfname:=rdBtnPurchaseLoansNo"), FRM_DS_GetValue(objEncompassSettings, "PurchaseLoans")
		End if		
	End if
	
	'Channel OPtion
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "LoansNoChannel")) Then
		GUI_SwfComboBox_Select objEncompassSettings.SwfComboBox("swfname:=cmbLoansNoChannel"), FRM_DS_GetValue(objEncompassSettings, "LoansNoChannel")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "LoansCorrespondent")) Then
		GUI_SwfComboBox_Select objEncompassSettings.SwfComboBox("swfname:=cmbLoansCorrespondent"), FRM_DS_GetValue(objEncompassSettings, "LoansCorrespondent")
	End if
	
	'Purhcases Loans	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ReportDemoInfo")) Then
	val= Trim(FRM_DS_GetValue(objHMDASettingData, "ReportDemoInfo"))
		if(val="Yes" or val="1") Then
			GUI_SwfRadioButton_Click objEncompassSettings.SwfComboBox("swfname:=rdBtnReportInfoYes")
		ElseIf (val="No" or val="0") Then
		   GUI_SwfRadioButton_Click objEncompassSettings.SwfComboBox("swfname:=rdBtnReportInfoNo")
		End if		
	End if
	
	'Report Income
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ReportIncome")) Then
	val= Trim(FRM_DS_GetValue(objHMDASettingData, "ReportIncome"))
		if(val="Yes" or val="1") Then
			GUI_SwfRadioButton_Click objEncompassSettings.SwfComboBox("swfname:=rdBtnRprtIncmYes")
		ElseIf (val="No" or val="0") Then
		   GUI_SwfRadioButton_Click objEncompassSettings.SwfComboBox("swfname:=rdBtnRprtIncmNo")
		End if		
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ReportAgeBorrower")) Then
	      val=Trim(FRM_DS_GetValue(objHMDASettingData, "ReportAgeBorrower"))
		  GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkRprtAgeBorrower"),val
	End if
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "ReportAgeCoBorrower")) Then
	      val=Trim(FRM_DS_GetValue(HMDASettings, "ReportAgeCoBorrower"))
		  GUI_SwfCheckbox_Set objEncompassSettings.SwfCheckBox("swfname:=chkRprtAgeCoBorrower"),val
	End if
	

	'Rate spread
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objHMDASettingData, "RateSpread")) Then
	val=Trim( FRM_DS_GetValue(objHMDASettingData, "RateSpread"))
		if(val="Yes" or val="1") Then
			GUI_SwfRadioButton_Click objEncompassSettings.SwfRadioButton("swfname:=rdBtnRateSpreadYes")
		ElseIf (val="No" or val="0") Then
		   GUI_SwfRadioButton_Click objEncompassSettings.SwfRadioButton("swfname:=rdBtnRateSpreadNo")
		End if		
	End if
	if(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave").GetROProperty("enabled")=False) Then
		BIZ_Settings_ClickClose()
	Else
		BIZ_Settings_ClickSave()
		BIZ_Settings_ClickClose()
   End if
		
	Set objEncompassSettings = nothing
	Set objHMDASettingData   =nothing
	
End Function

'This function is used to save the Loan with the Custom form created
'@code
'    Function BIZ_SaveCustomFormLoan(strRowID1)
'@endcode
'@param strRowID1 - RowID in the datasheet
    
Function BIZ_SaveCustomFormLoan(strRowID1)
    	FRM_Logger_ReportInfoEvent "Save the Custom Form created in the Loan","Save Custom Form in Loan ", Null
    	Dim objData,objEmail,strLoanNo
	
		Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", strRowID1)
    	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=saveBtn")
		Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		If GUI_Object_IsExist (SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("Swfname:=btnClose")) then
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("Swfname:=btnClose")
		End If
		
		Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		objEmail= FRM_DS_GetValue(objData,"Email")
		
		If UTIL_String_IsNotEmpty(objEmail) Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog").SwfEdit("swfname:=emailTxt"),objEmail
		End If
		
		
		
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=EmailCheckDialog").SwfButton("swfname:=okBtn")
		Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		strLoanNo = SwfWindow("swfname:=MainForm").SwfLabel("swfname:=lblLoanNumber").GetROProperty("text")
			
		If UTIL_String_IsNotEmpty(strLoanNo) = True Then
			FRM_Logger_ReportPassEvent "Loan Creation", "Loan has Created successfully - " &strLoanNo, Null
		Else
			FRM_Logger_ReportFailEvent "Loan Creation", "Loan hasn't Created successfully", Null
		End IF
End Function

'This function is used to open the Custom form created
'@code
'    Function BIZ_OpenCustomForm(strFormName)
'@endcode
'@param strFormName - Custom Form Name
    
Function BIZ_OpenCustomForm(strFormName)
    	FRM_Logger_ReportInfoEvent "Open the Custom Form created in the Loan","Opening Custom Form in Loan : "&strFormName, Null
		GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"),"Forms"
		Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		BIZ_Forms_Open "Borrower Summary - Origination"
		Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		BIZ_Forms_Open strFormName
		
End Function
    
'This function is used to open the Custom form in Input Form Builder 
'@code
'    Function BIZ_LoanCustomFields_OpenCustomForm(strFormName)
'@endcode
'@param strFormName - Custom Form Name
    
Function BIZ_LoanCustomFields_OpenCustomForm(strFormName)
	FRM_Logger_ReportInfoEvent "Open the Custom Form created","Opening Custom Form: "&strFormName, Null
	
	Dim objSettings,objData,objOpenDialog,objCheckBoxDialog,_
	strDropDown,strCheckBox,strTextBox,strCheckedValue,strUnCheckedValue
	
	Set objSettings 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objOpenDialog   = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FormOpenDialog")
	Set objCheckBoxDialog= SwfWindow("swfname:=HostWin").SwfWindow("swfname:=CheckboxOptionSelector")
		
			
	GUI_SwfButton_Click SwfWindow("swfname:=HostWin").SwfButton("swfname:=btnOpen")
	GUI_Object_WaitTillExistX objOpenDialog.SwfTab("swfname:=tabsOpen"),30
	GUI_SwfTab_Click objOpenDialog.SwfTab("swfname:=tabsOpen"), "Custom Input Forms"
	
	If UTIL_String_IsNotEmpty(strFormName) Then
		GUI_List_Select  objOpenDialog.SWfListView("swfname:=lvwCustom"), strFormName
		GUI_SwfButton_Click objOpenDialog.SwfButton("swfname:=btnOpen")
	End If
	Wait g_LongWaitMedium	' Explicit wait used to handle sync issues
	
End Function

'This function is used to add Custom fields one below other in the Custom form in Input Form Builder 
'@code
'    Function BIZ_LoanCustomFields_SelectCustomFields(arrRowID,strFormName,arrCustomFields)
'@endcode
'@param strFormName - Custom Form Name
'@param arrRowID - The RowID of all custom fields to be added 
'@param arrCustomFields - The different custom fields to be added in the Form

Function BIZ_LoanCustomFields_SelectCustomFields(arrRowID,strFormName,arrCustomFields)
		
	FRM_Logger_ReportInfoEvent "Add Object ","Add objects to the Form", Null
	
	Dim objSettings,objData,objOpenDialog,objCheckBoxDialog,_
	strDropDown,strCheckBox,strTextBox,strCheckedValue,strUnCheckedValue
	
	Set objSettings 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objFieldSelector = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FieldSelector")
	Set objOpenDialog   = SwfWindow("swfname:=HostWin").SwfWindow("swfname:=FormOpenDialog")
	Set objCheckBoxDialog= SwfWindow("swfname:=HostWin").SwfWindow("swfname:=CheckboxOptionSelector")
	Set objPropertyGrid = SwfWindow("swfname:=HostWin").SwfPropertyGrid("regexpwndtitle:=PropertyGridView")
	
		
	For i = 0 To UBound(arrCustomFields)  Step 1
		FRM_Logger_ReportInfoEvent "Add Object ","Add object to the Form"&arrCustomFields(i), Null
		
		Set objData 		= FRM_DS_GetTestData("Settings_Loansetup", "CustomFields", arrRowID(i))
		strDropDown			= FRM_DS_GetValue(objData,"DropDown")
		strCheckBox			= FRM_DS_GetValue(objData,"CheckBox")
		strTextBox			= FRM_DS_GetValue(objData,"TextBox")
		strCheckedValue		= FRM_DS_GetValue(objData,"CheckedValue")
		strUnCheckedValue	= FRM_DS_GetValue(objData,"UnCheckedValue")
		strSelectFld		= FRM_DS_GetValue(objData,"strSelectField")
		strType				= FRM_DS_GetValue(objData,"Type")		
		
			strFieldId= "CX."&arrCustomFields(i)
			
		If UTIL_String_IsMatch(strType, "Standard") Then
				strFieldId=arrCustomFields(i)
		End If
			'msgbox "strFieldId: "&strFieldId
		'Add objects to custom form
		Select Case strSelectFld
			Case "YesOrNo", "DropDown"
				BIZ_InputFormBuilder_AddObject strDropDown
			Case "CheckBox"
				BIZ_InputFormBuilder_AddObject strCheckBox
			Case Else 
				BIZ_InputFormBuilder_AddObject strTextBox
		End Select
		
		Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
		
		If Not Util_String_IsMatch(strSelectFld,"UserDefined") Then
				
			'Click on Field Selector button
			SwfWindow("swfname:=HostWin").SwfPropertyGrid("swfname path:=;pgProperties;pgProperties;dockableWindow2;windowDockingArea1;HostWin","index:=1").SelectProperty "Field" 'GUI methods are not working here
			SwfWindow("swfname:=HostWin").SwfButton("swftypename:=System.Windows.Forms.PropertyGridInternal.DropDownButton","index:=0").click 'GUI methods are not working here
			Wait g_LongWaitMedium				' Explicit wait used to handle sync issues
			FRM_Logger_ReportInfoEvent "Field selector","Field selector window is displayed",""
			wait 35
			
			GUI_SwfTab_Click SwfWindow("swfname:=FieldSelector").SwfTab("swfname:=tabsFields"), "Custom Fields"
			GUI_Object_WaitTillExistX SwfWindow("swfname:=FieldSelector").SwfListView("swfname:=lvwCustom"), 30
		If UTIL_String_IsMatch(strType, "Standard") Then
				GUI_SwfTab_Click SwfWindow("swfname:=FieldSelector").SwfTab("swfname:=tabsFields"), "Standard Fields"
				'===================Set field ID in Edit Box====================
				GUI_SwfEdit_Set objFieldSelector.SwfEdit("swfname:=txtFind.*"),strFieldId
	
				'============clikc on find button=======================
				GUI_SwfButton_Click objFieldSelector.SwfButton("swfname:=btnFind.*")
	
				'=============Added wait as it was taking time to search field==================
				Wait 5
	
				'=============Select field ID from list======================
				GUI_List_Select objFieldSelector.SwfListView("swfname:=lvw.*"),strFieldId
	
				'=========click on select button=====================
				GUI_SwfButton_Click objFieldSelector.SwfButton("swfname:=btnSelect")
		End If
			
			If UTIL_String_IsNotEmpty(strFieldId) and UTIL_String_IsMatch(strType, "Custom") Then
				'msgbox "strFieldId in sec: "&strFieldId
				GUI_List_Select  SwfWindow("swfname:=FieldSelector").SwfListView("swfname:=lvwCustom"), strFieldId
				GUI_SwfButton_Click SwfWindow("swfname:=FieldSelector").SwfButton("swfname:=btnSelect")
				FRM_Logger_ReportInfoEvent "Field Id","Field Id is assigned to Custom Field",""
				
			End If	
			
			If i=0 Then
				GUI_SwfPropertyGrid_SelectProperty objPropertyGrid,"Position"
				intXCoordinateLabel = CInt(objPropertyGrid.GetValue("Position;X"))
				intYCoordinateLabel = CInt(objPropertyGrid.GetValue("Position;Y"))
				GUI_SwfPropertyGrid_SelectProperty objPropertyGrid,"Size"
				intWidthLabel = CInt(objPropertyGrid.GetValue("Size;Width"))
				intHeightTextBox = CInt(objPropertyGrid.GetValue("Size;Height"))
			End If
			
			If UTIL_String_IsMatch(strSelectFld, "CheckBox") Then
				GUI_Object_WaitTillExistX objCheckBoxDialog.SwfListView("swfname:=lvwChecked"),30
				GUI_List_Select  objCheckBoxDialog.SwfListView("swfname:=lvwChecked"), strCheckedValue
				FRM_Logger_ReportInfoEvent "Encompass input form builder","Select checked value as X",""
				GUI_List_Select  objCheckBoxDialog.SwfListView("swfname:=lvwUnchecked"), strUnCheckedValue
				FRM_Logger_ReportInfoEvent "Encompass input form builder","Select Unchecked value as Empty",""
				GUI_SwfButton_Click objCheckBoxDialog.SwfButton("swfname:=btnOK")
			
			End If
			
			If i >0  Then
				intYCoordinateLabel = intYCoordinateLabel + intHeightTextBox
				GUI_SwfPropertyGrid_SelectProperty objPropertyGrid,"Position"
				'======================Set Position for Label===========
		    	GUI_SwfPropertyGrid_SetValue objPropertyGrid,"Position",Cstr(intXCoordinateLabel) & "," & Cstr(intYCoordinateLabel)
			
				
			End If
		
		End If
		
		
	Next
	
	Wait g_LongWaitMedium				' Explicit wait used to handle sync issues	
	If UTIL_String_IsNotEmpty(strFormName) Then
		BIZ_InputFormBuilder_SaveCustomForm strFormName
	End If
	
	Set objSettings 		= Nothing
	Set objData 			= Nothing
	Set objOpenDialog   	= Nothing
	Set objCheckBoxDialog	= Nothing
		
End Function

'This function is used to Verify Edit PrintFormGroup
'@code
'   Settings_LoanSetUp_VerifyEditPrintFormGroup(strRowID,strFormName)
'@endcode
'@param strRowID    - The numeric or string unique ID that used to find the line in the Settings_LoanSetup data spreadsheet
'@param strFormName - The name of a Print Form Group

Function Settings_LoanSetUp_VerifyEditPrintFormGroup(strRowID,strFormName)
    
    FRM_Logger_ReportInfoEvent "Verify Edit PrintFormGroup", "Verify Edit PrintFormGroup using Row Id '"&strRowID&"' in the Settings_LoanSetup datasheet", null
    
    Dim objData,objSettings,objLoanProgramList,objScrollbar,objDialog,strText,strGeneralForm1,strGeneralForm2,strActualValue,boolForm1,boolForm2
    
    Set objData 		  = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
    Set objSettings       = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPrintFormList  = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar      = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDialog         = objSettings.SwfWindow("swfname:=PrintFormGroupDetailDialog")
	 
    strText         = CStr(FRM_DS_GetValue(objData, "Description"))
    strGeneralForm1 = CStr(FRM_DS_GetValue(objData, "GeneralForm1"))
    strGeneralForm2 = CStr(FRM_DS_GetValue(objData, "GeneralForm2"))
    
    GUI_List_ClickRow objPrintFormList, objScrollbar, "Name", strFormName, True, False, False, "Single"
    GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
    GUI_Object_IsExistX objDialog, 10
    strActualValue=GUI_Object_GetPropertyValue(SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfEditor("swfname:=txtDescription"),"text")
    FRM_VerifyEqual strText,strActualValue,"Comparing Description"&strActualValue,"Description should match"
    
    boolForm1  = GUI_List_TextExists(SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfObject("swfname:=gridViewSelectedFiles"), "Name", strGeneralForm1)
    FRM_VerifyTrue boolForm1, "Verify '"&strGeneralForm1&"'", "'"&strGeneralForm1&"' is Verified"
    
    boolForm2 = GUI_List_TextExists(SwfWindow("swfname:=PrintFormGroupDetailDialog").SwfObject("swfname:=gridViewSelectedFiles"), "Name", strGeneralForm2)
    FRM_VerifyTrue boolForm2, "Verify '"&strGeneralForm2&"'", "'"&strGeneralForm2&"' is Verified"
    
    GUI_Window_Close SwfWindow("swfname:=PrintFormGroupDetailDialog")
    
    Set objData            = Nothing
	Set objSettings        = Nothing
	Set objPrintFormList   = Nothing
	Set objScrollbar       = Nothing
	Set objDialog          = Nothing
	
End Function



'This function is used to Validate the display of newly created Forms in Print and Preview window
'@code
'    Settings_LoanSetUp_ValidatePrintAndPreviewWindow(strRowID,strText,strFormName,strUser)
'@endcode
'@Param strRowID    - The numeric or string unique ID that used to find the line in the Settings_LoanSetup data spreadsheet
'@Param strText     - Folder name
'@Param StrFormName - Form Name
'@Param strUser     - User

Function Settings_LoanSetUp_ValidatePrintAndPreviewWindow(strRowID,strText,strFormName,strUser)

	FRM_Logger_ReportInfoEvent "Form under Selected Forms", "Validate the display of Forms under Selected Forms using '"&strFormName&"'", null
	
	Dim objData,objPrint,objViewFiles,objSelectedViewFiles,objTabControl,strFoldername,strGeneralForm1,strGeneralForm2,boolValue1,boolValue2

	Set objData 		      = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objPrint		      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objViewFiles          = objPrint.SwfObject("swfname:=gridViewForms")
	Set objSelectedViewFiles  = objPrint.SwfObject("swfname:=gridViewSelectedFiles")
	Set objTabControl 	      = objPrint.SwfObject("swfname:=tabControlEx1")
	
	strFolderName   = Cstr(FRM_DS_GetValue(objData, "FolderName"))
	strGeneralForm1 = Cstr(FRM_DS_GetValue(objData, "GeneralForm1"))
	strGeneralForm2 = Cstr(FRM_DS_GetValue(objData, "GeneralForm2"))

	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"),"Forms"
	BIZ_Forms_Open "Borrower Summary - Origination"
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=printBtn", "index:=0")
	FRM_Logger_ReportInfoEvent "Validate the display of newly created Forms in Print window", "Clicked on Print Button", null
	GUI_SwfObject_SelectFormsTab objTabControl,strText
	GUI_SwfCombobox_Select objPrint.SwfCombobox("swfname:=cmbBoxFolder","index:=0"),strFolderName
	Wait g_LongWaitLarge		'@ Due To Sync Issues We Are Calling Wait Statement Explicitly
	FRM_Logger_ReportInfoEvent "Form under Selected Forms", "Select '"&strFormName&"'under Selected Forms", null
	GUI_List_SelectItem objViewfiles,strFormName, "Name"
	GUI_SwfButton_Click objPrint.swfButton("swfname:=btnAdd")
	 
	boolValue1 = GUI_List_TextExists (objSelectedViewFiles, "Name", strGeneralForm1)	
	FRM_VerifyTrue boolValue1, "'"&strGeneralForm1&"' Exists", "'"&strGeneralForm1&"' added under Selected Forms"
	
	boolValue2 = GUI_List_TextExists (objSelectedViewFiles, "Name", strGeneralForm2)	
	FRM_VerifyTrue boolValue2, "'"&strGeneralForm2&"' Exists", "'"&strGeneralForm2&"' added under Selected Forms"
		
	Select Case strUser
		Case "Admin"
			GUI_SwfButton_Click objprint.swfButton("swfname:=btnPreview")
			'This Popup is not Exist in all Instances,For handling purpose we can use 
			If GUI_Object_IsExist(objprint) = True Then
			   GUI_Dialog_Encompass_Yes "Yes"
			End If
			
			If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm")) = True Then
			   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfButton("swfname:=btn_print")
			End If
			
			wait g_LongWaitLarge*2 ' Due To Sync Issue We Are Explicitly Passing Wait Statement
			FRM_Logger_ReportInfoEvent "Preview window", "Preview window is opened", null
			GUI_Object_ValidateExists objprint.Swfwindow("swfname:=PdfPreviewDialog"),120,"PreviewWindow"
			If GUI_Object_IsExist(objprint.Swfwindow("swfname:=PdfPreviewDialog")) = True Then
				GUI_Window_Close objprint.Swfwindow("swfname:=PdfPreviewDialog")
			End If
			'Added by Francesca
			If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=DisclosureTrackingDialog")) = True Then
				GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=DisclosureTrackingDialog").SwfButton("swfname:=btnNo")
			End If
		Case "Non-Admin"
			GUI_SwfButton_Click objprint.swfButton("swfname:=btnPrint") 
			'This Popup is not Exist in all Instances,For handling purpose we can use 
			If GUI_Object_IsExist(objprint) = True Then
			   GUI_Dialog_Encompass_Yes "Yes"
			End If
			
			If GUI_Object_IsExist(Dialog("text:=Encompass")) = True Then
			   GUI_Dialog_Encompass_OK "OK"
			   GUI_SwfButton_Click objprint.swfButton("swfname:=btnPrint")
			End If
			
			If GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm")) = True Then
			   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PrintRuleCheckStatusForm").SwfButton("swfname:=btn_print")
			End If
			
			wait g_LongWaitLarge*2 ' Due To Sync Issue We Are Explicitly Passing Wait Statement
			FRM_Logger_ReportInfoEvent "Print window", "Print window is opened", null
			GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").Dialog("text:=Print"),120,"PrintWindow"
			GUI_Object_ValidateExists objprint.SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Print").WinButton("text:=Print"),200,"PrintButton"
			GUI_WinButton_Click objprint.SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Print").WinButton("text:=Cancel")
		Case Else
			FRM_Logger_ReportFailEvent "Validate Print and Preview Window","No data found for selection",Null
	End Select
	'Added by francesca
	If GUI_Object_IsExist(objprint) = True Then
		GUI_Window_Close objprint
	End If
	
	Set objData              = Nothing
	Set objViewFiles         = Nothing
	Set objPrint             = Nothing
	Set objSelectedViewFiles = Nothing
	Set objTabControl        = Nothing

End Function



'This function is used to Validate Print Form Group Checkbox in Persona under Settings Tab 
'@code
'    Settings_CompanySettings_ValidatePrintFormGroupCheckBox(strPersonaName,strCheckbox)
'@endcode
'@Param strPersonaName - Persona Name
'@Param strCheckbox    - Checkbox Name

Function Settings_CompanySettings_ValidatePrintFormGroupCheckBox(strPersonaName,strCheckbox)
	
	FRM_Logger_ReportInfoEvent "Validate Print Form Groups Checkbox", "Validate Print Form Groups Checkbox in Persona Settings", Null
	
	Dim objSettings,objGeneralTreeView
	
    Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objGeneralTreeView = objSettings.SwfTreeView("swfname:=treeViewTabs","index:=1")
    
    GUI_List_Select objSettings.SwfListView("swfname:=lvPersona"), strPersonaName
    wait g_LongWaitLarge+g_LongWaitLarge  'Due To Sync Issue We Are Explicitly Passing Wait Statement
    GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"), "Settings"
    wait g_LongWaitLarge    'Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_Object_WaitTillExistX objGeneralTreeView, 60
	GUI_TreeView_ClickCheckBox objGeneralTreeView, strCheckbox, True
	
    If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
	   GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
    End If
    
	Set objSettings 	   = Nothing
	Set objGeneralTreeView = Nothing
	
End Function

'This function is used for Validate the display of newly created Forms in Preview window
'@code
'    Settings_LoanSetUp_CustomPrintForms_PreviewWindow(strRowID,strFormName) 
'@endcode
'@Param strRowID    - The numeric or string unique ID that used to find the line in the Settings_Loansetup data spreadsheet
'@Param StrFormName - The Name of a CustomPrintForm

Function Settings_LoanSetUp_CustomPrintForms_PreviewWindow(strRowID,strFormName)

	FRM_Logger_ReportInfoEvent "Custom Print Form under Selected Forms", "Validate the display of Custom Print Form under Selected Forms using '"&strFormName&"'", null
	
	Dim objData,objprint,objSelectedfiles,objParentObject,objviewfiles,objTabControl,strconditionform,intRowCount,intSubitem

	Set objData 		 = FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objprint		 = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objParentObject  = SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objviewfiles     = objprint.SwfObject("swfname:=gridViewFiles")
	Set objSelectedfiles = objprint.SwfObject("swfname:=gridViewSelectedFiles")
	Set objTabControl 	 = objprint.SwfObject("swfname:=tabControlEx1")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PropertyCity")) Then    
        GUI_WebEdit_Set objParentObject.WebEdit("html id:=l_12"), FRM_DS_GetValue(objData, "PropertyCity")
    End If 
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfButton("swfname:=printBtn")
	Wait g_TinyWaitLarge 		 ' Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	GUI_SwfObject_SelectFormsTab objTabControl,"Custom Forms"
	GUI_List_SelectItem objviewfiles,strFormName, "Name"
	
	GUI_SwfButton_Click objprint.swfButton("swfname:=btnAdd")
	
	intRowCount = objSelectedfiles.Object.Items.Count     
	For i =0 to  intRowCount-1
		strconditionform = objSelectedfiles.Object.Items.Item(i).Subitems.Item(0).Text	
		intSubitem=0
		If  Lcase(cstr(strconditionform))= Lcase(StrFormName) Then 
			intSubitem=intSubitem+1
			Exit For
		End If
	Next

	If intSubitem = 1 Then
		FRM_Logger_ReportPassEvent "Validate the display of Custom Print Form under Selected Forms", "Custom Print Form '"&StrFormName&"' is added under Selected Forms", null
	Else
		FRM_Logger_ReportFailEvent "Validate the display of Custom Print Form under Selected Forms", "Custom Print Form '"&StrFormName&"' is not added under Selected Forms", null
	End If
	
	GUI_SwfButton_Click objprint.swfButton("swfname:=btnPreview")
	GUI_Dialog_Encompass_Yes "Yes" 
	Wait g_ShortWaitTime        ' Due To Sync Issue We Are Explicitly Passing Wait Statement
	FRM_Logger_ReportInfoEvent "Click on Preview","Custom Form should open up successfully", null
	 
	Set objData			 = Nothing
	Set objprint		 = Nothing
	Set objParentObject  = Nothing
	Set objviewfiles     = Nothing
	Set objSelectedfiles = Nothing
	Set objTabControl 	 = Nothing
	
End Function



'This function is used for Validate Preview Window
'@code
'    Settings_LoanSetUp_ValidatePreviewWindow(strRowID)
'@endcode
'@Param strRowID - The numeric or string unique ID that used to find the line in the Settings_Loansetup data spreadsheet

Function Settings_LoanSetUp_ValidatePreviewWindow(strRowID)

	FRM_Logger_ReportInfoEvent "Validate Preview Window", "Validate Preview Window using '"&strRowID&"'", null
	
	Dim objData,objprint,objDialog,strProperty,strPropertyCity,intCity

	Set objData   	= FRM_DS_GetTestData("Settings_Loansetup", "Forms", strRowID)
	Set objprint  	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")
	Set objDialog 	= objprint.Swfwindow("swfname:=DisclosureTrackingDialog")
	strPropertyCity = Cstr(FRM_DS_GetValue(objData, "PropertyCity"))
	
	'Below code is related to PDF and doesn't have framework functions.
	objprint.Swfwindow("swfname:=PdfPreviewDialog").DblClick 50,50
	strProperty   = objprint.Swfwindow("swfname:=PdfPreviewDialog").WinObject("text:=AVPageView").GetVisibleText
	intCity         = Instr(1,strProperty,strPropertyCity)
	If intCity > 0 Then
		FRM_Logger_ReportPassEvent "Validate Preview Window", "Preview window displays the value as '"&strPropertyCity&"'", null
	Else
	 	FRM_Logger_ReportFailEvent "Validate Preview Window", "Preview window is not displays the value as'"&strPropertyCity&"'", null
	End If
	GUI_Window_Close objprint.Swfwindow("swfname:=PdfPreviewDialog")
	If GUI_Object_IsExist(objDialog) = True Then
		GUI_SwfButton_Click objDialog.SwfButton("swfname:=btnNo")
	End If
	If GUI_Object_IsExist(objprint) = True Then
		GUI_Window_Close objprint
	End If

	Set objData	  = Nothing
	Set objprint  = Nothing
	Set objDialog = Nothing
	
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\LoanSetup.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\LoanTemplates.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_DataTemplates BIZ_Settings_DataTemplates
' List of functions here
' @code
'	Function BIZ_DataTemplates_Create(strDataTemplateName)
'	Function BIZ_DataTemplates_DeleteExistingAndCreateNew(strTemplateName)
'	Function BIZ_DataTemplates_OpenDataTemplate(strMilestoneName)
'	Function BIZ_DataTemplates_FormOpen(strFormName)
'	Function BIZ_DataTemplates_Select(strTemplateName)
'	Function BIZ_DataTemplatesDetailsForms_Open(strFormName)
'	Function BIZ_DataTemplatesDetails_SetBorrower(strRowID)
'	Function BIZ_DataTemplatesDetails_SetCoBorrower(strRowID)
'	Function BIZ_DataTemplatesDetails_SetProperty(strRowID)
'	Function BIZ_DataTemplatesDetails_SetTransactionDetails(strRowID)
'	Function BIZ_DataTemplatesDetails_LEPage3SetComparisons(strRowID)
'	Function BIZ_DataTemplatesDetails_CDPage5SetLoanCalculations(strRowID)
'	Function BIZ_DataTemplatesDetails_Save
'	Function BIZ_LoanTemplateDetails_SelectDataTemplate(strDataTemplate)
'	Function BIZ_LoanTemplateDetails_SelectLoanProgram(strLoanProgram)
'	Function BIZ_LoanTemplateSets_CreateNew(strLoanTemplateName)
'	Function BIZ_LoanTemplateSets_OpenLoanTemplate(strLoanTemplateName) 
'	Function BIZ_LoanTemplateSets_Select(strLoanTemplateName, strOrperateStyle)
'	Function BIZ_DataTemplates_2010Itemization_Set1000Section(strRowID)
'	Function BIZ_DataTemplatesDetails_RegZ_LESetConstruction(strRowID)
'	Function BIZ_DataTemplatesDetails_RegZ_CDSetConstruction(strRowID)
'   Function BIZ_DataTemplatesDetails_SelectFormVersion(strFormVersion)
'   Function BIZ_DataTemplatesDetails_SetDetailsTransaction(strRowID)
'   Function BIZ_DataTemplatesDetails_Set800Section(strRowID)
'   Function BIZ_DataTemplatesDetails_1003Page3_SetDeclarations(strRowID)
'   Function BIZ_DataTemplatesDetails_2015Itemization_Set900Section(strRowID)
'   Function BIZ_DataTemplatesDetails_USDAMangement_SelectInterestBasisDays(strRowID)
'   Function BIZ_DataTemplatesDetails_LE_SetDisclosureInformation(strRowID)
' 	Function BIZ_ClosingCosts_DeleteExisting(strClosingCosts)
'	Function BIZ_ClosingCosts_CreateNew(strClosingCosts, strItemization)
'	Function BIZ_ClosingCosts_OpenTemplate(strClosingCosts)
'	Function BIZ_ClosingCosts_Select(strClosingCostsTemplateName)
'   Function BIZ_ClosingCostDetails_Set800Section(strRowID)
'   Function BIZ_ClosingCostDetails_Save()
'   Function BIZ_LoanPrograms_CreateNew(strLoanProgramName)
'   Function BIZ_LoanPrograms_OpenTemplate(strLoanProgramName)
'   Function BIZ_LoanTemplateDetails_SelectClosingCosts(strClosingCostTemplate)
'   Function BIZ_ClosingCostDetails_SetFeeDetails(strLine,strRowID)
'   Function BIZ_DataTemplateDetails_SetFeeDetails(strLine,strRowID)
'   Function BIZ_DataTemplateDetails_FeeDetails_ClickCheckbox(strLine,arrStrCheckbox)    
'   Function BIZ_ClosingCostDetails_FeeDetails_ClickCheckbox(strLine,arrStrCheckbox)    
'	Function BIZ_LoanPrograms_Edit(strLoanProgramName, strRowID)
'	Function BIZ_LoanPrograms_ApplyTemplate(strLoanProgramName)
'	Function BIZ_InputFormSets_DeleteExistingAndCreateNew(strInputFormSet)
'	Function BIZ_InputFormSets_AddInputForms(strInputFormSet, strInputForms)
'	Function BIZ_LoanTemplates_SelectFolder()
'	Function BIZ_LoanTemplates_AddLoanProgramName(strRowID)
'	Function BIZ_LoanTemplates_RenameLoanProgramName(strRowID)
' 	Function BIZ_LoanTemplates_DuplicateLoanProgramName(strRowID)
'   Function BIZ_LoanTemplates_CopyofLoanProgramName(strRowID)
'	Function BIZ_LoanTemplates_AddNewTemplate(strRowID)
'	Function BIZ_LoanTemplates_RenameTemplate(strRowID)
'	Function BIZ_LoanTemplates_DuplicateTemplate(strRowID)
'	Function BIZ_LoanTemplates_CopyPasteTemplate(strRowID)
'	Function BIZ_LoanTemplates_ClickUpFolder()
'	Function BIZ_LoanTemplates_AddDefaultNewTemplate()
'	Function BIZ_LoanTemplates_CutTemplate(strRowID,strNewFolderName)
' 	Function BIZ_LoanTemplates_CreateNewFolderInFolder(strRowID,strFolderName)
' 	Function BIZ_LoanTemplates_ExistingFolderValidation(strRowID,strNewfoldername)
' 	Function BIZ_LoanTemplates_SelectItemInGridandClick(strNewFolderName,strClickEvent)
' 	Function BIZ_LoanTemplates_AddDescriptionToExistingTemplate(strRowID,strNewFolderName,strSubLoantemplate)
'   Function BIZ_LoanTemplates_SelectExistingTemplate(strRowID,strNewFolderName,strSubLoantemplate)
' 	Function BIZ_LoanTemplates_VerifyTemplateDescription(strRowID,strNewFolderName,strSubLoantemplate)
'	Function BIZ_LoanTemplates_RenameExistingFolder(strRowID,strFolderName)
' 	Function BIZ_LoanTemplates_FolderCopyPasteUnderFolder(strFolderName,strNewFolderName)
' 	Function BIZ_LoanTemplates_DeleteFolderOrTemplate( boolDeleteYesOrNo,strNewFolderName,strDesc)
' 	Function BIZ_LoanTemplates_CreateNewTemplate(strRowID,strFolderName)
'   Function BIZ_LoanTemplates_ValidateTemplatewithExistingName(strRowID,strTemplateName)
'	Function BIZ_LoanTemplates_SelectFolderAndPasteTemplate(strFolderName,strTemplateName)
'	Function BIZ_LoanTemplates_ValidateDeleteData (strDeleteYesOrNo,strNewFolderName,strDesc)
'	Function BIZ_LoanTemplates_EditTemplate(strRowID,strNewFolderName,BtnSaveOrCancel)
'	Function BIZ_LoanTemplates_ApplyandAppendTemplate(strSubMenu)
'	Function BIZ_LoanTemplates_Set1003Page1(strRowID)
'	Function BIZ_LoanTemplates_SetField(strRowID)
'	Function BIZ_LoanTemplates_SelectTemplate(strTemplateName,strSubLoantemplate)
'	Function BIZ_LoanTemplates_CreateDataTemplate(strRowID,strFolderName)
'	Function BIZ_LoanTemplates_AddDescriptionToExistingDataTemplate(strRowID,strDataTemplateName)
'	Function BIZ_LoanTemplates_CreateClosingCost(strRowID, strItemization)
'	Function BIZ_LoanTemplates_AddDescriptionToExistingClosingCostTemplate(strRowID,strClosingCostTemplate)
'	Function BIZ_LoanTemplates_CreateAffiliateTemplate(strRowID,strFolderName)
'	Function BIZ_LoanTemplates_AddDescriptionToExistingAffiliateTemplate(strRowID,strAffiliateTemplateName)
'	Function BIZ_LoanTemplates_CreateSettlementServiceTemplate(strRowID,strFolderName)
'	Function BIZ_LoanTemplates_AddDescriptionToExistingSettlementServiceTemplate(strRowID,strSettlementServiceTemplateName)
'	Function BIZ_LoanTemplates_CreateTaskSetTemplate(strRowID,strFolderName)
'	Function BIZ_LoanTemplates_EditExistingTaskSetTemplate(strRowID,strTaskSetTemplate)
'	Function BIZ_LoanTemplates_CreateDocumentSetTemplate(strRowID,strFolderName)
'	Function BIZ_LoanTemplates_EditExistingDocumentSetTemplate(strRowID,strDocumentSetTemplate)
'	Function BIZ_LoanTemplates_CreateInputFormSetTemplate(strRowID,strFolderName)
'	Function BIZ_LoanTemplates_AddDescriptionToExistingInputFormSetTemplate(strRowID,strInputFormSetTemplate)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Create a new Data Template if no existing one found
'@code
'    BIZ_DataTemplates_CreateDataTemplate("Test Template")
'@endcode
'@param strDataTemplateName - The name of new created Data Template

Function BIZ_DataTemplates_Create(strDataTemplateName)

	FRM_Logger_ReportInfoEvent "Create a new Data Template", "Create a new data template in Data Templates", null

	Dim boolExist, objDataTemplateList
	Set objDataTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfLabel("text:=Data Templates"),60
	
	boolExist = GUI_List_ClickRow(objDataTemplateList, scrollbarDataTemplate, "Name", strDataTemplateName, True, False, False, "Single")	
	If Not boolExist Then
		GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnAdd"), "SwfObject", "Add Data Template"
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("micclass:=SwfEdit"), strDataTemplateName
		GUI_Object_Click objDataTemplateList, "SwfObject", "Data Template List"
	End If
	Set objDataTemplateList = nothing
	
End Function



'This function is used to delete existing datatemplate with provided name and create a new Data Template
'@code
'    BIZ_DataTemplates_DeleteExistingAndCreateNew("Test Template")
'@endcode
'@param strDataTemplateName - The name of new created Data Template

Function BIZ_DataTemplates_DeleteExistingAndCreateNew(strDataTemplateName)

	FRM_Logger_ReportInfoEvent "Create a new Data Template", "Create a new data template in Data Templates", null

	Dim boolExist, objDataTemplateList
	Set objDataTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	
	GUI_Object_WaitTillVisible SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfLabel("text:=Data Templates")
	
	boolExist = GUI_List_ClickRow(objDataTemplateList, scrollbarDataTemplate, "Name", strDataTemplateName, True, False, False, "Single")	
	If boolExist Then
		GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDelete"), "SwfObject", "Delete Data Template"
		GUI_Dialog_Encompass_Yes ""
	End If
	GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnAdd"), "SwfObject", "Add Data Template"
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("micclass:=SwfEdit"), strDataTemplateName
	GUI_Object_Click objDataTemplateList, "SwfObject", "Data Template List"
    
	Set objDataTemplateList = nothing
	
End Function



'This function is used to Open a Data Template
'@code
'    BIZ_DataTemplates_OpenDataTemplate(nameDataTemplate)
'@endcode
'@param strDataTemplateName - The name of Data Template you want to open

Function BIZ_DataTemplates_OpenDataTemplate(strDataTemplateName)

	FRM_Logger_ReportInfoEvent "Open Data Template", "Open data template with name " & strDataTemplateName, null

	Dim objDataTemplateList, scrollbarDataTemplate, exist
	Set objDataTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Set scrollbarDataTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	exist = GUI_List_ClickRow(objDataTemplateList, scrollbarDataTemplate, "Name", strDataTemplateName, True, False, False, "Double")
	If Not exist Then
		BIZ_DataTemplates_Create strDataTemplateName
		GUI_List_ClickRow objDataTemplateList, scrollbarDataTemplate, "Name", strDataTemplateName, True, False, False, "Double"
	End If
	
	Set objDataTemplateList = Nothing
	Set scrollbarDataTemplate = Nothing

End Function



'This function is used to Open a Form in Data Template Details window
'@code
'    BIZ_DataTemplates_FormOpen(strFormName)
'@endcode
'@param nameDataTemplate - The name of Form you want to open in Data Template Details

Function BIZ_DataTemplates_FormOpen(strFormName)

	GUI_Object_WaitTillEnabled SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("micClass:=Page").WebEdit("html id:=l_36")
	GUI_SwfList_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").SwfList("swfname:=emFormMenuBox"), strFormName

End Function



'This function is used to Select a Data Template
'@code
'    BIZ_DataTemplates_Select(strDataTemplateName)
'@endcode
'@param strDataTemplateName - The name of Data Template you want to select

Function BIZ_DataTemplates_Select(strDataTemplateName)

	FRM_Logger_ReportInfoEvent "Select Data Template", "Select data template with name", null

	Dim objDataTemplateList, scrollbarDataTemplate, exist
	Set objDataTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory")
	Set scrollbarDataTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TemplateSelectionDialog").SwfScrollBar("swfname:=vPanelScrollBar")

	GUI_List_ClickRow objDataTemplateList, scrollbarDataTemplate, "Name", strDataTemplateName, True, False, False, "Double"

	Set objDataTemplateList = Nothing
	Set scrollbarDataTemplate = Nothing

End Function


 	
'This function is for select form in Data Templates Details window 
'@code
'    BIZ_DataTemplatesDetailsForms_Open(strFormName)
'@endcode
'@param strFormName string Title of the Form to open

Function BIZ_DataTemplatesDetailsForms_Open(strFormName)

    FRM_Logger_ReportInfoEvent "Open Data Templates Details Form", "Form to open is  '"&strFormName&"'", null
    
    Set objWndDataTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")

    GUI_List_Select objWndDataTemplate.SwfList("swfname:=emFormMenuBox"), strFormName	
	GUI_Object_WaitProperty objWndDataTemplate.SwfLabel("swfname:=titleLbl|labelTitle"), "text", strFormName
	
End Function



'This function is for set Borrower Information in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_SetBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_SetBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "Data Templates Details Window", "Set Borrower Information using Row Id '"&strRowID&"' in the Borrower datasheet", null

	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
    
	BIZ_DataTemplatesDetailsForms_Open "Borrower Summary - Origination"
	BIZ_Common_BorrowerSummaryOrigination_SetBorrower objDataTemplatePage, strRowID
	
	Set objDataTemplatePage = Nothing
	
End Function



'This function is for set CoBorrower Information in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_SetCoBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_SetCoBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "Data Templates Details Window", "Set Co-Borrower Information using Row Id '"&strRowID&"' in the Borrower datasheet", null
	
	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0") 
	
	BIZ_DataTemplatesDetailsForms_Open "Borrower Summary - Origination"
	BIZ_Common_BorrowerSummaryOrigination_SetCoBorrower objDataTemplatePage, strRowID
	
	Set objDataTemplatePage = Nothing
	
End Function	



'This function is for set Subject Property Information in Data Templates Details window 
'@code
'    BIZ_DataTemplatesDetails_SetProperty(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_SetProperty(strRowID)

    FRM_Logger_ReportInfoEvent "Data Templates Details Window", "Set Property Information using Row Id '"&strRowID&"' in the Property datasheet", null
	
	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
	
	BIZ_DataTemplatesDetailsForms_Open "Borrower Summary - Origination"
	BIZ_Common_BorrowerSummaryOrigination_SetProperty objDataTemplatePage, strRowID
	
	Set objDataTemplatePage = Nothing
			
End Function



'This function is for set Transaction Details Information in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_SetTransactionDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_SetTransactionDetails(strRowID)

    FRM_Logger_ReportInfoEvent "Data Templates Details Window", "Set Transaction Details Information using Row Id '"&strRowID&"' in the TransactionDetails datasheet", null

	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
	
	BIZ_DataTemplatesDetailsForms_Open "Borrower Summary - Origination"
	BIZ_Common_BorrowerSummaryOrigination_SetTransactionDetails objDataTemplatePage, strRowID
    
	Set objDataTemplatePage = Nothing
	
End Function



'This function is for set Comparisons section in Loan Estimate Page 3.
'@code
'    BIZ_DataTemplatesDetails_LEPage3SetComparisons(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
	
Function BIZ_DataTemplatesDetails_LEPage3SetComparisons(strRowID)
	
	FRM_Logger_ReportInfoEvent "Loan Estimate Page 3", "Click Lock Icon, set values for Comparisions Section", null
	
	BIZ_DataTemplatesDetailsForms_Open "Loan Estimate Page 3"
	
	Set objData = FRM_DS_GetTestData("Forms_LoanEstimatePage", "SetComparisons", strRowID)
	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "In5yearsTotalyouwillhavepaid")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock12")
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox17"), FRM_DS_GetValue(objData, "In5yearsTotalyouwillhavepaid") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "In5yearsPrincipalyouwillhavepaid")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock13")		
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "In5yearsPrincipalyouwillhavepaid") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock11")		
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TxtApr"), FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock14")		
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox20"), FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)") 
	End If
	
	Set objDataTemplatePage = nothing
	Set objData = nothing
End Function



'This function is for set Loan Calculations in Closing Disclosure Page 5.
'@code
'    BIZ_DataTemplatesDetails_CDPage5SetLoanCalculations(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_CDPage5SetLoanCalculations(strRowID)
	
	FRM_Logger_ReportInfoEvent "CD Page 5", "Click Lock Icon, set values for Loan Calculations Section", null
	
	BIZ_DataTemplatesDetailsForms_Open "Closing Disclosure Page 5"
	
	Set objData = FRM_DS_GetTestData("Forms_ClosingDisclosurePage", "SetLoanCalculations", strRowID)
	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalofPayments")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock3")
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "TotalofPayments") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FinanceCharge")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock5")
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "FinanceCharge") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AmountFinanced")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock4")
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "AmountFinanced") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock1")
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TxtApr"), FRM_DS_GetValue(objData, "AnnualPercentageRate(APR)") 	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)")) Then
		GUI_WebButton_Click objDataTemplatePage.WebButton("html id:=FieldLock2")
		GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "TotalInterestPercentage(TIP)") 	
	End If
	
	Set objData = nothing
	Set objDataTemplatePage = Nothing
End Function



'This function is for set Loan Calculations in Closing Disclosure Page 5.
'@code
'    BIZ_DataTemplatesDetails_Save
'@endcode

Function BIZ_DataTemplatesDetails_Save
	
	FRM_Logger_ReportInfoEvent "Data Templates Details Window", "Click on save button.", null
	
	Set objDataTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")
	
	GUI_SwfButton_Click objDataTemplate.SwfButton("swfname:=saveBtn")
End Function



'This function is used to select a data template for a Loan Template
'@code
'    BIZ_LoanTemplateDetails_SelectDataTemplate(strDataTemplate)
'@endcode
'@param strDataTemplate - The name of Data Template

Function BIZ_LoanTemplateDetails_SelectDataTemplate(strDataTemplate)
	FRM_Logger_ReportInfoEvent "Select Data Template", "Select Data Template in Template Selection Dialog", null	
	
	Set objWndLoanTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objWndLoanTemplateDetails = objWndLoanTemplate.SwfWindow("swfname:=LoanTemplateDialog")
	Set objWndTemplateSelection = objWndLoanTemplateDetails.SwfWindow("swfname:=TemplateSelectionDialog")
	Set objTemplateSelectionList = objWndTemplateSelection.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objWndTemplateSelection.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnDataTemplate","index:=0"), "SwfObject", "Click on Data Template"
	GUI_List_ClickRow objTemplateSelectionList,objScrollBar,0,"Companywide",True,False,False,"Double"
    If objWndTemplateSelection.SwfComboBox("swfname:=cmbBoxFolder").GetROProperty("selection") <> "Companywide" Then
       GUI_SwfComboBox_Select objWndTemplateSelection.SwfComboBox("swfname:=cmbBoxFolder"),"Companywide"
    End If
	GUI_List_ClickRow objTemplateSelectionList, objScrollBar, "Name", strDataTemplate, True, False, False, "Single"
	GUI_SwfButton_Click objWndTemplateSelection.SwfButton("swfname:=selectBtn","index:=0")
	GUI_SwfButton_Click objWndLoanTemplateDetails.SwfButton("swfname:=saveBtn","index:=0")
	
	Set objWndLoanTemplate= nothing
	Set objWndLoanTemplateDetails = nothing
	Set objWndTemplateSelection = nothing
	Set objTemplateSelectionList = nothing
	Set objScrollBar = nothing
End Function



'This function is to select loan program for loan template set
'@code
'    BIZ_LoanTemplateDetails_SelectLoanProgram(strLoanProgram)
'@endcode
'@param strLoanProgram name of Loan Program

Function BIZ_LoanTemplateDetails_SelectLoanProgram(strLoanProgram)
     FRM_Logger_ReportInfoEvent "Select Loan Program", "Select Loan Program in Template Selection Dialog", null    
     
     Set objWndLoanTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
     Set objWndLoanTemplateDetails = objWndLoanTemplate.SwfWindow("swfname:=LoanTemplateDialog")
     Set objWndTemplateSelection = objWndLoanTemplateDetails.SwfWindow("swfname:=TemplateSelectionDialog")
     Set objTemplateSelectionList = objWndTemplateSelection.SwfObject("swfname:=gvDirectory")
     Set objScrollBar = objWndTemplateSelection.SwfScrollBar("swfname:=vPanelScrollBar")
     
     GUI_Object_Click objWndLoanTemplateDetails.SwfObject("swfname:=stdBtnLoanProgram","index:=0"), "SwfObject", "Click on Data Template"
     GUI_List_ClickRow objTemplateSelectionList,objScrollBar,0,"Companywide",True,False,False,"Double"
      If objWndTemplateSelection.SwfComboBox("swfname:=cmbBoxFolder").GetROProperty("selection") <> "Companywide" Then
         GUI_SwfComboBox_Select objWndTemplateSelection.SwfComboBox("swfname:=cmbBoxFolder"),"Companywide"
     End If
     GUI_List_ClickRow objTemplateSelectionList, objScrollBar, "Name", strLoanProgram, True, False, False, "Single"
     GUI_SwfButton_Click objWndTemplateSelection.SwfButton("swfname:=selectBtn","index:=0")     
     GUI_SwfButton_Click objWndLoanTemplateDetails.SwfButton("swfname:=saveBtn","index:=0")
     
     Set objWndLoanTemplate= nothing
     Set objWndLoanTemplateDetails = nothing
     Set objWndTemplateSelection = nothing
     Set objTemplateSelectionList = nothing
     Set objScrollBar = nothing
End Function



'This function is used to create a new Loan Template
'@code
'    BIZ_LoanTemplateSets_CreateNew(strLoanTemplateName)
'@endcode
'@param strLoanTemplateName - The name of new created Loan Template

Function BIZ_LoanTemplateSets_CreateNew(strLoanTemplateName)
	
	FRM_Logger_ReportInfoEvent "Create a new Loan Template", "Create a new Loan template in Loan Template Sets", null	
	
	Set objWndLoanTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	bolExist = BIZ_LoanTemplateSets_Select(strLoanTemplateName, "Single")
	If bolExist Then
		GUI_Object_Click objWndLoanTemplate.SwfObject("swfname:=btnDelete","index:=0"), "SwfObject", "Delete Loan Template"
		GUI_DialogObject_Encompass_Yes SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("index:=0"), "Are you sure you want to.* delete .*"
	End If
	GUI_Object_Click objWndLoanTemplate.SwfObject("swfname:=btnAdd","index:=0"), "SwfObject", "Add Loan Template"
	GUI_SwfEdit_Set objWndLoanTemplate.SwfEdit("micclass:=SwfEdit","focused:=True"), strLoanTemplateName
	UTIL_Win_SendKey "{ENTER}"
	
	Set objWndLoanTemplate = nothing
End Function



'This function is used to Open a Loan Template
'@code
'    BIZ_LoanTemplateSets_OpenLoanTemplate(strLoanTemplateName)
'@endcode
'@param strDataTemplateName - The name of Loan Template

Function BIZ_LoanTemplateSets_OpenLoanTemplate(strLoanTemplateName)
	FRM_Logger_ReportInfoEvent "Open Loan Template", "Open Loan template with name "&strLoanTemplateName, null	
	
	BIZ_LoanTemplateSets_Select strLoanTemplateName, "Double"
End Function



'This function is used to Select a Loan Template
'@code
'    BIZ_LoanTemplateSets_Select(strLoanTemplateName, strOrperateStyle)
'@endcode
'@param strLoanTemplateName - The name of Data Template you want to select
'@param strOrperateStyle - "Single" or "Double" click on the record

Function BIZ_LoanTemplateSets_Select(strLoanTemplateName, strOrperateStyle)

	FRM_Logger_ReportInfoEvent "Select Loan Template", "Select Loan template with name "&strLoanTemplateName, null	
	
	Set objWndLoanTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanTemplateList = objWndLoanTemplate.SwfObject("swfname:=gvDirectory","index:=0")
	Set objScrollbar = objWndLoanTemplate.SwfScrollBar("swfname:=vPanelScrollBar")
	
	BIZ_LoanTemplateSets_Select = GUI_List_ClickRow(objLoanTemplateList, objScrollbar, "Name", strLoanTemplateName, True, False, False, strOrperateStyle)
	
	Set objWndLoanTemplate = nothing 
	Set objLoanTemplateList = nothing
	Set objScrollbar = nothing
End Function



'This function is for set 1000 line section data in 2010 Itemization page.
'@code
'    BIZ_DataTemplates_2010Itemization_Set1000Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplates_2010Itemization_Set1000Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set 1000 line data", "Set data using Row Id '"&strRowID&"' in the Forms_2010Itemization datasheet", null
	
    Dim obj2010ItemzationPage, objData
    Set obj2010ItemzationPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Forms_2010Itemization", "Set1000Section", strRowID)
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1007_Mths")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_1629"), FRM_DS_GetValue(objData, "1007_Mths")
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1007_Reserve")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_1630"), FRM_DS_GetValue(objData, "1007_Reserve")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1008_Mths")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_340"), FRM_DS_GetValue(objData, "1008_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1008_Reserve")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_253"), FRM_DS_GetValue(objData, "1008_Reserve")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1009_Mths")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_341"), FRM_DS_GetValue(objData, "1009_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1009_Reserve")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_254"), FRM_DS_GetValue(objData, "1009_Reserve")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1010_Mths")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=TextBox376"), FRM_DS_GetValue(objData, "1010_Mths")
	End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1010_USDAAnnualFee")) Then
		GUI_WebEdit_Set obj2010ItemzationPage.WebEdit("html id:=l_X1707"), FRM_DS_GetValue(objData, "1010_USDAAnnualFee")
	End If

	Set obj2010ItemzationPage = Nothing
	Set objData = Nothing	
	
End Function



'This function is for set data to Construction Mortgage section
'@code
'    BIZ_DataTemplatesDetails_RegZ_LESetConstruction(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_RegZ_LESetConstruction(strRowID)
	
	FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Construction Mortgage section using Row Id '"&strRowID&"' in the SetConstructionMortgage datasheet", null	
	
	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Forms_RegZ-LE", "SetConstruction", strRowID)	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Constr.FstIntChgAdj")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebList("html id:=DropdownBox16"), FRM_DS_GetValue(objData, "Constr.FstIntChgAdj")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SYS.X6_Est.InterestOn")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "SYS.X6_Est.InterestOn")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1962_NumberofDays")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebList("html id:=l_1962"), FRM_DS_GetValue(objData, "1962_NumberofDays")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1176_Period")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1677_InterestRate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1677"), FRM_DS_GetValue(objData, "1677_InterestRate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2820_RateType")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebList("html id:=DropdownBox17"), FRM_DS_GetValue(objData, "2820_RateType")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3899_InspectionFee")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox215"), FRM_DS_GetValue(objData, "3899_InspectionFee")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1964_InitialAcquisitionofLand")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebCheckBox("html id:=__cid_CheckBox82_Ctrl"), FRM_DS_GetValue(objData, "1964_InitialAcquisitionofLand")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Refinance")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebCheckBox("html id:=__cid_CheckBox83_Ctrl"), FRM_DS_GetValue(objData, "Refinance")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "763_Est.ClosingDate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_763"), FRM_DS_GetValue(objData, "763_Est.ClosingDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "682_FirstPaymentDate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox117"), FRM_DS_GetValue(objData, "682_FirstPaymentDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1961_FinalPaymentDate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1961"), FRM_DS_GetValue(objData, "1961_FinalPaymentDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1963_1stAmort.Date")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1963"), FRM_DS_GetValue(objData, "1963_1stAmort.Date")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4080_OccupancyCertDate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox22"), FRM_DS_GetValue(objData, "4080_OccupancyCertDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1265_RequiredReserves")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1265"), FRM_DS_GetValue(objData, "1265_RequiredReserves")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4086_RequiredInterestReserve ")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebCheckBox("html id:=__cid_CheckBox16_Ctrl"), FRM_DS_GetValue(objData, "4086_RequiredInterestReserve")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4087_CreditorProhibitsBorrower")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebCheckBox("html id:=__cid_CheckBox17_Ctrl"), FRM_DS_GetValue(objData, "4087_CreditorProhibitsBorrower")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4088_EstimatedConstructionInterest")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox30"), FRM_DS_GetValue(objData, "4088_EstimatedConstructionInterest")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1404_Description")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=MultilineTextBox2"), FRM_DS_GetValue(objData, "1404_Description")
    End If
    
	Set objDataTemplatePage = nothing
	Set objData             = nothing
    
End Function



'This function is for set data to Construction Mortgage section
'@code
'    BIZ_DataTemplatesDetails_RegZ_CDSetConstruction(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_RegZ_CDSetConstruction(strRowID)
	
	FRM_Logger_ReportInfoEvent "RegZ - CD", "Set Construction Mortgage section using Row Id '"&strRowID&"' in the SetConstructionMortgage datasheet", null	
	
	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Forms_RegZ_CD", "SetConstruction", strRowID)	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Constr.FstIntChgAdj")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebList("html id:=DropdownBox13"), FRM_DS_GetValue(objData, "Constr.FstIntChgAdj")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SYS.X6_Est.InterestOn")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebList("html id:=DropdownBox14"), FRM_DS_GetValue(objData, "SYS.X6_Est.InterestOn")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1962_NumberofDays")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebList("html id:=l_1962"), FRM_DS_GetValue(objData, "1962_NumberofDays")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1176_Period")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1176"), FRM_DS_GetValue(objData, "1176_Period")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1677_InterestRate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1677"), FRM_DS_GetValue(objData, "1677_InterestRate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2820_RateType")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebList("html id:=DropdownBox17"), FRM_DS_GetValue(objData, "2820_RateType")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3899_InspectionFee")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox215"), FRM_DS_GetValue(objData, "3899_InspectionFee")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1964_InitialAcquisitionofLand")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebCheckBox("html id:=__cid_CheckBox82_Ctrl"), FRM_DS_GetValue(objData, "1964_InitialAcquisitionofLand")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Refinance")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebCheckBox("html id:=__cid_CheckBox83_Ctrl"), FRM_DS_GetValue(objData, "Refinance")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "763_Est.ClosingDate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_763"), FRM_DS_GetValue(objData, "763_Est.ClosingDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "682_FirstPaymentDate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox117"), FRM_DS_GetValue(objData, "682_FirstPaymentDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1961_FinalPaymentDate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1961"), FRM_DS_GetValue(objData, "1961_FinalPaymentDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1963_1stAmort.Date")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1963"), FRM_DS_GetValue(objData, "1963_1stAmort.Date")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4080_OccupancyCertDate")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox32"), FRM_DS_GetValue(objData, "4080_OccupancyCertDate")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1265_RequiredReserves")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=l_1265"), FRM_DS_GetValue(objData, "1265_RequiredReserves")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4086_RequiredInterestReserve ")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebCheckBox("html id:=__cid_CheckBox17_Ctrl"), FRM_DS_GetValue(objData, "4086_RequiredInterestReserve")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4087_CreditorProhibitsBorrower")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebCheckBox("html id:=__cid_CheckBox18_Ctrl"), FRM_DS_GetValue(objData, "4087_CreditorProhibitsBorrower")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4088_EstimatedConstructionInterest")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=TextBox37"), FRM_DS_GetValue(objData, "4088_EstimatedConstructionInterest")
    End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1404_Description")) Then
        GUI_WebEdit_Set objDataTemplatePage.WebEdit("html id:=MultilineTextBox2"), FRM_DS_GetValue(objData, "1404_Description")
    End If
    
	Set objDataTemplatePage = nothing
	Set objData             = nothing
    
End Function



'This function is used to select RESPA-TILA Form Version
'@code
'    BIZ_DataTemplatesDetails_SelectFormVersion(strFormVersion)
'@endcode
'@param strFormVersion The RESPA-TILA Form Version: Old GFE and HUD-1/RESPA 2010 GFE and HUD-1/RESPA-TILA 2015 LE and CD

Function BIZ_DataTemplatesDetails_SelectFormVersion(strFormVersion)
	
	FRM_Logger_ReportInfoEvent "Select RESPA-TILA Form Version", "Select RESPA-TILA Form Version as '"&strFormVersion&"' in Data Template Details window", null	
	
	Set objDataTemplateDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")
    
    GUI_SwfComboBox_Select objDataTemplateDetails.SwfComboBox("swfname:=cboRESPAVersion"), strFormVersion
    
	Set objDataTemplateDetails = Nothing
	
End Function



'This function is for set Details of Transaction in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_SetDetailsTransaction(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_SetDetailsTransaction(strRowID)

    FRM_Logger_ReportInfoEvent "Data Templates Details Window", "Set Details Transaction using Row Id '"&strRowID&"' in the SetDetailsTransaction datasheet", null

	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
    
    BIZ_Common_1003Page3_SetDetailsTransaction objDataTemplatePage, strRowID
	
	Set objDataTemplatePage = Nothing
	
End Function



'This function is for set 800 Section in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_Set800Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_Set800Section(strRowID)

    FRM_Logger_ReportInfoEvent "Data Templates Details Window", "Set Details Transaction using Row Id '"&strRowID&"' in the SetDetailsTransaction datasheet", null

	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
    
    BIZ_Common_2015Itemization_Set800Section objDataTemplatePage, strRowID
	
	Set objDataTemplatePage = Nothing
	
End Function



'This function is for set Declarations on 1003 page 3 in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_1003Page3_SetDeclarations(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_1003Page3_SetDeclarations(strRowID)

    FRM_Logger_ReportInfoEvent "Set Declarations", "Set Declarations using Row Id '"&strRowID&"' in the 1003Page datasheet", null

	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
    
    BIZ_DataTemplatesDetailsForms_Open "1003 Page 3"
    BIZ_Common_1003Page3_SetDeclarations objDataTemplatePage, strRowID	
	
	Set objDataTemplatePage = Nothing
	
End Function



'This function is for set 900 section on 2015 Itemization page in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_2015Itemization_Set900Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_2015Itemization_Set900Section(strRowID)

    FRM_Logger_ReportInfoEvent "Set Declarations", "Set Declarations using Row Id '"&strRowID&"' in the 1003Page datasheet", null

	Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
    
    BIZ_DataTemplatesDetailsForms_Open "2015 Itemization"
    BIZ_Common_2015Itemization_Set900Section objDataTemplatePage, strRowID
	
	Set objDataTemplatePage = Nothing
	
End Function



'This function is for select interest basis days in USDA Management form in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_USDAMangement_SelectInterestBasisDays(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_USDAMangement_SelectInterestBasisDays(strRowID)

    FRM_Logger_ReportInfoEvent "USDA Management", "Select Interest Basis Days using Row Id '"&strRowID&"' in the LoanClosingReport datasheet", null
        
    Dim objDataTemplate, objDataTemplatePage, objPageTab
    Set objDataTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")
	Set objDataTemplatePage = objDataTemplate.Page("index:=0")
    Set objPageTab = objDataTemplate.SwfTab("swfname:=tabControlForm")
    
    GUI_List_Select objDataTemplate.SwfList("swfname:=emFormMenuBox"), "USDA Management"
    GUI_Object_WaitProperty objDataTemplate.SwfLabel("swfname:=labelTitle"), "text", "USDA Management"
    
    GUI_SwfTab_Click objPageTab, "Loan Closing Report"
	BIZ_Common_USDAMangement_SelectInterestBasisDays objDataTemplatePage, strRowID
	
	Set objDataTemplate = Nothing
    Set objDataTemplatePage = Nothing
    Set objPageTab = Nothing	
	
End Function



'This function is for set Disclosure information in Data Templates Details window
'@code
'    BIZ_DataTemplatesDetails_LE_SetDisclosureInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplatesDetails_LE_SetDisclosureInformation(strRowID)

    FRM_Logger_ReportInfoEvent "RegZ - LE", "Set Disclosure Information using Row Id '"&strRowID&"' in the Disclosure datasheet", null
    
    Set objDataTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
    
    BIZ_DataTemplatesDetailsForms_Open "RegZ - LE"
    BIZ_Common_RegZ_LE_SetDisclosureInformation objDataTemplatePage, strRowID 

	Set objDataTemplatePage = Nothing
	
End Function



' Added by Sameer Gupta as of 29th Jan 2016
'This function is used to delete existing Closing Costs row from the list
'@code
'    Function BIZ_ClosingCosts_DeleteExisting(strClosingCosts)
'@endcode
'@param strClosingCosts - Closing Costs name

Function BIZ_ClosingCosts_DeleteExisting(strClosingCosts)

	FRM_Logger_ReportInfoEvent "Delete Closing Costs template", "Delete Closing Costs template with name: " & strClosingCosts , null

	Dim objClosingCostsList, scrollbarClosingCosts, exist
	Set objClosingCostsList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Set scrollbarClosingCosts = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	exist = GUI_List_ClickRow (objClosingCostsList, scrollbarClosingCosts, "Name", strClosingCosts, True, False, False, "Single")

	If exist  Then

        GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDelete"), "SwfObject", "Delete Closing Costs"
		GUI_Dialog_Encompass_Yes ""

	End If
	
	Set objClosingCostsList   = Nothing
	Set scrollbarClosingCosts = Nothing

End Function



'Added by Sameer Gupta as of 29th Jan 2016
'This function is used to create new Closing Costs template
'@code
'    Function BIZ_ClosingCosts_CreateNew(strClosingCosts, strItemization)
'@endcode
'@param strClosingCosts - Closing Costs name
'@param strItemization - "2015 Itemization" or "2010 Itemization" - To select correct template

Function BIZ_ClosingCosts_CreateNew(strClosingCosts, strItemization)
	
	FRM_Logger_ReportInfoEvent "Create new Closing Costs template", "Create new Closing Costs template with name: " & strClosingCosts, null

	Dim objSettingsWindow, objClosingCostsList, scrollbarClosingCosts
	Set objSettingsWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objClosingCostsList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Set scrollbarClosingCosts = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_Click objSettingsWindow.SwfObject("swfname:=btnAdd"), "SwfObject", "Add Closing Costs Template"
	
	If strItemization = "2015 Itemization" Then
		GUI_SwfRadioButton_Click SwfWindow("swfname:=CreateNewTemplateDialog").SwfRadioButton("swfname:=rdo2015")
	Else
		GUI_SwfRadioButton_Click SwfWindow("swfname:=CreateNewTemplateDialog").SwfRadioButton("swfname:=rdo2010")
	End If
	
	GUI_SwfObject_Click SwfWindow("swfname:=CreateNewTemplateDialog").SwfButton("swfname:=btnOK")
    
    GUI_SwfEdit_Set objSettingsWindow.SwfEdit("micclass:=SwfEdit"), strClosingCosts
    GUI_Object_Click objClosingCostsList, "SwfObject", "Closing Cost Template List"
    
	Set objSettingsWindow     = Nothing
	Set objClosingCostsList   = Nothing
	Set scrollbarClosingCosts = Nothing
	
End Function



'Added by Sameer Gupta as of 29th Jan 2016
'This function is used to open an existing Closing Costs template
'@code
'    Function BIZ_ClosingCosts_OpenTemplate(strClosingCosts)
'@endcode
'@param strClosingCosts - Closing Costs name

Function BIZ_ClosingCosts_OpenTemplate(strClosingCosts)

	FRM_Logger_ReportInfoEvent "Open Closing Costs template", "Open Closing Costs template with name: " & strClosingCosts, null

	Dim objClosingCostsList, scrollbarClosingCosts, exist
	Set objClosingCostsList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Set scrollbarClosingCosts = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfScrollBar("swfname:=vPanelScrollBar")

	exist = GUI_List_ClickRow (objClosingCostsList, scrollbarClosingCosts, "Name", strClosingCosts, True, False, False, "Single")

	If exist  Then

        GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnOpen"), "SwfObject", "Open Closing Costs"

	End If
	
	Set objClosingCostsList   = Nothing
	Set scrollbarClosingCosts = Nothing

End Function



'This function is used to Select a Closing Cost Template
'@code
'    BIZ_ClosingCosts_Select(strClosingCostsTemplateName)
'@endcode
'@param strClosingCostsTemplateName - The name of Closing Costs Template you want to select

Function BIZ_ClosingCosts_Select(strClosingCostsTemplateName)

	FRM_Logger_ReportInfoEvent "Select Closing Costs Template", "Select Closing Colsts template with name: " & strClosingCostsTemplateName, null

	Dim objClosingCostTemplateList, scrollbarClosingCostTemplate, exist
	Set objClosingCostTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfObject("swfname:=gvDirectory")
	Set scrollbarClosingCostTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ClosingCostSelect").SwfScrollBar("swfname:=vPanelScrollBar")

	GUI_List_ClickRow objClosingCostTemplateList, scrollbarClosingCostTemplate, "Name", strClosingCostsTemplateName, True, False, False, "Double"

	Set objDataTemplateList   = Nothing
	Set scrollbarDataTemplate = Nothing

End Function



'This function is for set 800 Section in Closing Cost Templates Details window
'@code
'    BIZ_ClosingCostDetails_Set800Section(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingCostDetails_Set800Section(strRowID)

    FRM_Logger_ReportInfoEvent "Data Templates Details Window", "Set Details Transaction using Row Id '"&strRowID&"' in the SetDetailsTransaction datasheet", null

	Set objTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TemplateDialog").Page("index:=0")
    
    BIZ_Common_2015Itemization_Set800Section objTemplatePage, strRowID
	
	Set objTemplatePage = Nothing
	
End Function



'This function is for save the closing cost detail.
'@code
'    BIZ_ClosingCostDetails_Save
'@endcode

Function BIZ_ClosingCostDetails_Save()
	
	FRM_Logger_ReportInfoEvent "Closing cost Templates Details Window", "Click on save button.", null
	
	Set objDataTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TemplateDialog")
	
	GUI_SwfButton_Click objDataTemplate.SwfButton("swfname:=saveBtn")
    
End Function



'This function is used to delete existing Loan Program with provided name and create a new Loan Program
'@code
'    BIZ_DataTemplates_CreateNew("Test Loan Program")
'@endcode
'@param strLoanProgramName - The name of new created Loan Program

Function BIZ_LoanPrograms_CreateNew(strLoanProgramName)

	FRM_Logger_ReportInfoEvent "Create a new Loan Program", "Create a new Loan Program in Loan Programs", null

	Dim boolExist, objSettings,objLoanProgramList,objScrollbar
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")

	boolExist = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strLoanProgramName, True, False, False, "Single")	
	If boolExist Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDelete")
		GUI_WinButton_Click objSettings.Dialog("text:=Encompass").WinButton("text:=&Yes")

	End If
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), strLoanProgramName
	GUI_SwfObject_Click objLoanProgramList
    
    Set objSettings        = nothing
	Set objLoanProgramList = nothing
	Set objScrollbar       = nothing
	
End Function



'This function is used to Open a Loan Program
'@code
'    BIZ_DataTemplates_OpenLoanProgram("Test Loan Program")
'@endcode
'@param strLoanProgramName - The name of Loan Program you want to open

Function BIZ_LoanPrograms_OpenTemplate(strLoanProgramName)

	FRM_Logger_ReportInfoEvent "Open Loan Program", "Open Loan Program with name " &strLoanProgramName, null

	Dim objSettings, objLoanProgramList, objScrollbar, boolIsExist
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")

	boolIsExist = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strLoanProgramName, True, False, False, "Double")
	If Not boolIsExist Then
		BIZ_LoanPrograms_CreateNew strLoanProgramName
		GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strLoanProgramName, True, False, False, "Double"
	End If
	
	Set objSettings        = Nothing
	Set objLoanProgramList = Nothing
	Set objScrollbar       = Nothing

End Function



'This function is used to select a closing cost template for a Loan Template
'@code
'    BIZ_LoanTemplateDetails_SelectClosingCosts(strClosingCostTemplate)
'@endcode
'@param strClosingCostTemplate - The name of Closing Cost Template

Function BIZ_LoanTemplateDetails_SelectClosingCosts(strClosingCostTemplate)
	FRM_Logger_ReportInfoEvent "Select Closing Cost Template", "Select Closing Cost Template in Template Selection Dialog", null	
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanTemplateDetails = objSettings.SwfWindow("swfname:=LoanTemplateDialog")
	Set objTemplateSelection = objLoanTemplateDetails.SwfWindow("swfname:=TemplateSelectionDialog")
	Set objTemplateSelectionList = objTemplateSelection.SwfObject("swfname:=gvDirectory")
	Set objScrollBar = objTemplateSelection.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_Click objLoanTemplateDetails.SwfObject("swfname:=stdBtnClosingCosts"), "SwfObject", "Click on Closing Template edit button"
	GUI_List_ClickRow objTemplateSelectionList, objScrollBar, "Name",strClosingCostTemplate, True, False, False, "Double"
    GUI_SwfButton_Click objLoanTemplateDetails.SwfButton("swfname:=saveBtn","index:=0")
	
	Set objSettings              = nothing
	Set objLoanTemplateDetails   = nothing
	Set objTemplateSelection     = nothing
	Set objTemplateSelectionList = nothing
	Set objScrollBar             = nothing
    
End Function



'This function is for set Fee details for one line in 2015 Itemization of Closing Cost Details window
'@code
'    BIZ_ClosingCostDetails_SetFeeDetails(strLine,strRowID)
'@endcode
'@param strLine The line number for which you will set fee details
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ClosingCostDetails_SetFeeDetails(strLine,strRowID)

    FRM_Logger_ReportInfoEvent "Closing Cost Template Details Window", "Set Fee Details for line "&strLine&" using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null

	Set objTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TemplateDialog").Page("index:=0")
      
    BIZ_Common_2015Itemization_SetFeeDetails objTemplatePage,strLine,strRowID
	
	Set objTemplatePage = Nothing
	
End Function



'This function is for set Fee details for one line in 2015 Itemization of Data Template Details window
'@code
'    BIZ_DataTemplateDetails_SetFeeDetails(strLine,strRowID)
'@endcode
'@param strLine The line number for which you will set fee details
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DataTemplateDetails_SetFeeDetails(strLine,strRowID)

    FRM_Logger_ReportInfoEvent "Data Template Details Window", "Set Fee Details for line "&strLine&" using Row Id '"&strRowID&"' in the Forms_2015Itemization datasheet", null

	Set objTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")  
    
    BIZ_Common_2015Itemization_SetFeeDetails objTemplatePage,strLine,strRowID
	
	Set objTemplatePage = Nothing
	
End Function



'This function is for clicking the checkbox on the fee details window for one line in 2015 Itemization page of Date Template
'@code
    'BIZ_2015Itemization_FeeDetails_ClickCheckbox(StrLine,ArrStrCheckbox)
'@endcode
'@param strLine The line number for which the fee detail popup window will be open
'@param ArrStrCheckbox The array of checkbox that will be checked, such as "Borrower Can Shop","Borrower Did Shop","Impact APR","Seller Obligated",
'						"Property Taxes","Homeowner's Insurance","Other","Escrowed"

Function BIZ_DataTemplateDetails_FeeDetails_ClickCheckbox(strLine,arrStrCheckbox)

	FRM_Logger_ReportInfoEvent "Data Template Details Window", "Click checkbox on Fee Details window of line "&strLine, null

	Set objTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("index:=0")
      
    BIZ_Common_2015Itemization_FeeDetails_ClickCheckbox objTemplatePage,strLine,arrStrCheckbox
	
	Set objTemplatePage = Nothing
    
End Function



'This function is for clicking the checkbox on the fee details window for one line in 2015 Itemization page pf Closing Cost Template
'@code
    'BIZ_2015Itemization_FeeDetails_ClickCheckbox(StrLine,ArrStrCheckbox)
'@endcode
'@param strLine The line number for which the fee detail popup window will be open
'@param ArrStrCheckbox The array of checkbox that will be checked, such as "Borrower Can Shop",
'					"Borrower Did Shop","Impact APR","Seller Obligated","Property Taxes","Homeowner's Insurance","Other","Escrowed"

Function BIZ_ClosingCostDetails_FeeDetails_ClickCheckbox(strLine,arrStrCheckbox)

	FRM_Logger_ReportInfoEvent "Closing Cost Template Details Window", "Click checkbox on Fee Details window of line "&strLine, null

	Set objTemplatePage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TemplateDialog").Page("index:=0")
      
    BIZ_Common_2015Itemization_FeeDetails_ClickCheckbox objTemplatePage,strLine,arrStrCheckbox
	
	Set objTemplatePage = Nothing
    
End Function



'This function is used to edit existing Loan Program 
'@code
'    BIZ_LoanPrograms_Edit(strLoanProgramName, strRowID)
'@endcode
'@param strLoanProgramName - The name of the Loan Program to be edited
'@param strRowID - Row ID in the data sheet which contains the data for the Loan Program

Function BIZ_LoanPrograms_Edit(strLoanProgramName, strRowID)

	FRM_Logger_ReportInfoEvent "Edit an existing Loan Program", "Edit an existing Loan Program in Loan Programs using RowID " & strRowID, null

	Dim boolExist, objSettings,objLoanProgramList,objScrollbar
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")

	boolExist = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strLoanProgramName, True, False, False, "Single")	
	If boolExist Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
		Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanPurpose")) Then
       			GUI_WebList_Select objSettings.SwfWindow("swfname:=LoanProgramDialog").Page("index:=0", "title:=.*").WebList("html id:=DropdownBox3"), FRM_DS_GetValue(objData, "LoanPurpose")
	    	End If 
		GUI_SwfButton_Click objSettings.SwfWindow("swfname:=LoanProgramDialog").SwfButton("swfname:=btnOK")
	Else
		FRM_Logger_ReportFailEvent "Edit an existing Loan Program", "LoanProgram " & strLoanPRogramName & " not found", null

	End If
    
    Set objSettings        = nothing
	Set objLoanProgramList = nothing
	Set objScrollbar       = nothing
	
End Function



'This function is used to apply a loan template
'@code
'    BIZ_LoanPrograms_ApplyTemplate(strLoanProgramName)
'@endcode
'@param strLoanProgramName - The name of the Loan Program to be applied

Function BIZ_LoanPrograms_ApplyTemplate(strLoanProgramName)

	Set objLoanProgramList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect").SwfObject("swfname:=gvDirectory")
	Set objScrollbar = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect").SwfScrollBar("swfname:=vPanelScrollBar")

	FRM_Logger_ReportInfoEvent "Apply a loan program template", "Apply an existing Loan Program template " & strLoanProgramName, null
	BIZ_Nav_OpenMenuItem "Loan;Apply Loan Program Template..."

	boolExist = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strLoanProgramName, True, False, False, "Single")
	If boolExist Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect").SwfButton("swfname:=selectBtn")
	Else
		FRM_Logger_ReportFailEvent "Apply an existing Loan Program template", "Loan Program template " & strLoanPRogramName & " not found", null
	End If

End Function



'This function is used to delete existing Input form set with provided name and create a new input form set
'@code
'    BIZ_InputFormSets_DeleteExistingAndCreateNew(strInputFormSet)
'@endcode
'@param strInputFormSet - The name of the Input From Set to be created

Function BIZ_InputFormSets_DeleteExistingAndCreateNew(strInputFormSet)

	FRM_Logger_ReportInfoEvent "Create a new Input form set", "Create a new input form set", null

	Dim boolExist, objInputFormSetList
	Set objInputFormSetList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	
	boolExist = GUI_List_ClickRow(objInputFormSetList, null, "Name", strInputFormSet, True, False, False, "Single")	
	If boolExist Then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDelete")
		GUI_Dialog_Encompass_Yes ""
	End If
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnAdd")
	GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("micclass:=SwfEdit"), strInputFormSet
	GUI_SwfObject_Click objInputFormSetList
    
	Set objInputFormSetList = nothing
	
End Function



'This function is used to add input forms to an already existing input form set
'@code
'    BIZ_InputFormSets_AddInputForms(strInputFormSet, strInputForms)
'@endcode
'@param strInputFormSet - The name of the Input From Set for which input forms are to be added
'@param strInputForms - The list of input forms (seperated by ,) to be added

Function BIZ_InputFormSets_AddInputForms(strInputFormSet, strInputForms)

	FRM_Logger_ReportInfoEvent "Add input forms to an existing Input form set", "Add input forms " & strInputForms & " to an existing Input form set " & strInputFormSet, null

	Dim boolExist, objInputFormSetList
	Set objInputFormSetList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	Set objInputFormsList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FormListDialog").SwfObject("swfname:=gridPredefined")
	
	boolExist = GUI_List_ClickRow(objInputFormSetList, null, "Name", strInputFormSet, True, False, False, "Single")	
	If boolExist Then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnOpen")
		arrInputForms = split(strInputForms, ",")
		For i = 0 To Ubound(arrInputForms)
			GUI_List_ClickRow objInputFormsList, objInputFormsList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", arrInputForms(i), True, False, False, "Single"	
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FormListDialog").SwfButton("swfname:=addBtn")
			
		next
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=FormListDialog").SwfButton("swfname:=saveBtn")
	Else
		FRM_Logger_ReportFailEvent "Add input forms to an existing Input form set", "Input form set " & strInputFormSet & " does not exist", null
	End If
	Set objInputFormSetList = nothing
	Set objInputFormsList   = nothing
    
End Function



''''' Added BY Vasantha '''''''

'This function is used to select Folder tab
'@code
'    BIZ_LoanTemplates_SelectFolder
'@endcode
'@param strFolderName - Setting the FolderName

Function BIZ_LoanTemplates_SelectFolder(strFolderName)
     
    If Not UTIL_String_IsEmpty(strFolderName) Then
        SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfComboBox("swfname:=cboFolder").Select strFolderName     
    End If 

End Function



'This function is used to AddLoanProgramName
'@code
'    BIZ_LoanTemplates_AddLoanProgramName
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet

Function BIZ_LoanTemplates_AddLoanProgramName(strRowID)

    Dim  objData,objSettings,objLoanProgramList
	FRM_Logger_ReportInfoEvent "Create a new Loan Program", "Create a new Loan Program in Loan Programs", null
	FRM_Logger_ReportInfoEvent "BIZ_LoanTemplates_AddLoanProgramName", "Set BIZ_LoanTemplates_AddLoanProgramName using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	strLoanProgram = FRM_DS_GetValue(objData, "LoanProgramerName")&UTIL_Math_RandomNo
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strLoanProgram 
	GUI_SwfObject_Click objLoanProgramList
	GUI_List_TextExists objLoanProgramList,"Name",strLoanProgram
	FRM_DS_SetCellData "Settings_LoanTemplates", "SetLoanProgram", strRowID, "LoanProgramerName", strLoanProgram
	FRM_Logger_ReportPassEvent "ADD New Loan Program","New Loan Program "&strLoanProgram&"Was added Sucessfully",null
	
	Set objData            = Nothing
	Set objSettings        = Nothing
	Set objLoanProgramList = Nothing
	
End Function



'This function is used to RenameLoanProgramName
'@code
'    BIZ_LoanTemplates_RenameLoanProgramName(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet

Function BIZ_LoanTemplates_RenameLoanProgramName(strRowID)
    
	Dim  objData,objSettings,objLoanProgramList,objScrollbar
	FRM_Logger_ReportInfoEvent "Rename LoanProgramName", "Rename LoanProgramName using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null	
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
	boolExist = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", FRM_DS_GetValue(objData, "LoanProgramerName"), True, False, False, "Single")	
	strLoanProgram=FRM_DS_GetValue(objData, "RenameLoanProgName")&UTIL_Math_RandomNo
    
	If boolExist Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnRename")		
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strLoanProgram
		GUI_SwfObject_Click objLoanProgramList
		GUI_List_TextExists objLoanProgramList,"Name",strLoanProgram
		FRM_DS_SetCellData "Settings_LoanTemplates", "SetLoanProgram", strRowID, "RenameLoanProgName", strLoanProgram
		FRM_Logger_ReportPassEvent "Rename Loan Program","Loan Program "&strLoanProgram&" was renamed Sucessfully",null
	End If
	
	Set objData            = Nothing
	Set objSettings        = Nothing
	Set objLoanProgramList = Nothing
	Set objScrollbar       = Nothing
	
End Function



'This function is used to Create Duplicate Loan Program
'@code
'    BIZ_LoanTemplates_DuplicateLoanProgramName(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet

Function BIZ_LoanTemplates_DuplicateLoanProgramName(strRowID)
     
	Dim  objData,objSettings,objLoanProgramList,objScrollbar
	FRM_Logger_ReportInfoEvent "Duplicate Loan Program", "Duplicate a new Loan Program in Loan Programs", null
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
	FRM_Logger_ReportInfoEvent "BIZ_LoanTemplates_DuplicateLoanProgramName", "Set BIZ_LoanTemplates_DuplicateLoanProgramName using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null
	strLoanProgram=FRM_DS_GetValue(objData, "RenameLoanProgName")
	boolExist = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", FRM_DS_GetValue(objData, "RenameLoanProgName"), True, False, False, "Single")
	
	If boolExist Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDuplicate")		
		GUI_SwfObject_Click objLoanProgramList
		GUI_List_TextExists objLoanProgramList,"Name","Copy of "&strLoanProgram
		FRM_Logger_ReportPassEvent "Rename Loan Program","Loan Program "&strLoanProgram&" was Duplicate  Sucessfully",null
	End If
	
	Set objData            = Nothing
	Set objSettings        = Nothing
	Set objLoanProgramList = Nothing
	Set objScrollbar       = Nothing
	
End Function



'This function is used to Create Copy of Loan Program
'@code
'    BIZ_LoanTemplates_CopyofLoanProgramName(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet

Function BIZ_LoanTemplates_CopyofLoanProgramName(strRowID)
     
	FRM_Logger_ReportInfoEvent "Copy Of Loan Program", "Started creating Copy of a Loan Program", null
    
    Dim  objData,objSettings,objLoanProgramList,objScrollbar,strLoanProgram
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
	FRM_Logger_ReportInfoEvent "BIZ_LoanTemplates_CopyofLoanProgramName", "Set BIZ_LoanTemplates_CopyofLoanProgramName using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null
	strLoanProgram = FRM_DS_GetValue(objData, "RenameLoanProgName")
	boolExist = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", FRM_DS_GetValue(objData, "RenameLoanProgName"), True, False, False, "Single")
	
	If boolExist Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCopy")		
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")
		GUI_List_TextExists objLoanProgramList,"Name","Copy of "&strLoanProgram
		FRM_Logger_ReportPassEvent "Copy Of  Loan Program","Loan Program "&strLoanProgram&" was Copied Sucessfully",null
	End If
	
	Set objData            = Nothing
	Set objSettings        = Nothing
	Set objLoanProgramList = Nothing
	Set objScrollbar       = Nothing
	Set strLoanProgram     = Nothing

End Function



'This function is used to Add New Template
'@code
'    BIZ_LoanTemplates_AddNewTemplate()
'@endcode

Function BIZ_LoanTemplates_AddNewTemplate()
    
	FRM_Logger_ReportInfoEvent "Add a New Loan Template", "New Loan Template creation started", null
	
	Dim objSettings,objLoanProgramList,blnFolderName
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	GUI_Object_WaitTillExistX objSettings, 300
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	blnFolderName = Year(Now) & Day(Now) & Hour(Now) & Minute(Now) &  Second(Now)
	GUI_Object_WaitTillExistX objSettings, 300
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), blnFolderName 
	GUI_SwfObject_Click objLoanProgramList
	GUI_Object_WaitTillExistX objLoanProgramList, 300 
	GetNewRowIndex  = GUI_List_GetRowIndexByPartialText(objLoanProgramList, 0, blnFolderName)
	
	If(GetNewRowIndex > 0) Then 
		FRM_Logger_ReportPassEvent "Adding New Loan Template","New Loan Template created with name '"&blnFolderName&"'",null
	ElseIf(GetNewRowIndex = 0 ) then 
		FRM_Logger_ReportPassEvent "Adding New Loan Template","New Loan Template created with name '"&blnFolderName&"'",null
	Else 
		FRM_Logger_ReportFailEvent "Adding New Loan Template","New Loan Template "&blnFolderName&" not created",null
	End If
	
	BIZ_LoanTemplates_AddNewTemplate=blnFolderName
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
End Function



'This function is used to Rename Template
'@code
'    BIZ_LoanTemplates_RenameTemplate(strRowID,strTemplateName)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strTemplateName - Template Name to Rename

Function BIZ_LoanTemplates_RenameTemplate(strRowID,strTemplateName)
    
	FRM_Logger_ReportInfoEvent "Rename a New Loan Template", "Rename LoanTemplate using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null	
	
	Dim objSettings,objLoanProgramList,objScrollbar,objData,strRenTemplateName,intGetNewRowIndex
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	'Select the existing template and click on Rename Icon
	GUI_Object_WaitTillExistX objLoanProgramList, 300 	
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnRename")
	
	'Set the rename template 
	strRenTemplateName = CStr(FRM_DS_GetValue(objData, "TemplateRename")) 
	GUI_Object_WaitTillExistX objSettings,300
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strRenTemplateName	
	GUI_SwfObject_Click objLoanProgramList
	
	'Validate the template renamed
	GUI_Object_WaitTillExistX objLoanProgramList, 300 
	wait 5	' Due To Sync Issue We Are Explicitly Passing Wait Statement
	intGetNewRowIndex  = GUI_List_GetRowIndexByPartialText(objLoanProgramList, 0, strRenTemplateName)
    
	If(intGetNewRowIndex > 0) Then 
		FRM_Logger_ReportPassEvent "Rename New Loan Template","LoanTemplate '"&strTemplateName &"' renamed to '"&strRenTemplateName&"'",null
	Else
		FRM_Logger_ReportFailEvent "Rename New Loan Template","LoanTemplate '"&strTemplateName &"' not renamed to '"&strRenTemplateName&"'",null
		ExitTest
	End If
	
	Set objData 		    = Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objScrollbar 		= Nothing
	
	BIZ_LoanTemplates_RenameTemplate=strRenTemplateName
	
End Function



'This function is used to Duplicate Template
'@code
'    BIZ_LoanTemplates_DuplicateTemplate(strTemplateRenamevalue)
'@endcode
'@param strTemplateRenamevalue - Template name to Duplicate

Function BIZ_LoanTemplates_DuplicateTemplate(strTemplateRenamevalue)
     
	FRM_Logger_ReportInfoEvent "Duplicate Template","Validate Template gets created with same name with prefix 'Copy of' Under Settings > Loan Templates", Null
	
	Dim objSettings,objLoanProgramList,objScrollbar,strDuplicateTemp,intGetNewRowIndex
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillExistX objLoanProgramList, 300
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strTemplateRenamevalue, True, False, False, "Single"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDuplicate") 	
	GUI_SwfObject_Click objLoanProgramList
	
	strDuplicateTemp = "Copy of " & strTemplateRenamevalue
	GUI_Object_WaitTillExistX objLoanProgramList, 300 
	intGetNewRowIndex = GUI_List_GetRowIndexByPartialText(objLoanProgramList, 0,strDuplicateTemp )
	
	If(intGetNewRowIndex > 0) then 
		FRM_Logger_ReportPassEvent "Validate Duplicate Loan Template","Loan Template Duplicate '"&strTemplateRenamevalue&"' created with prefix '"&strDuplicateTemp&"'",null
	Else
		FRM_Logger_ReportFailEvent "Validate Duplicate Loan Template","Loan Template Duplicate '"&strTemplateRenamevalue&"' not created with prefix '"&strDuplicateTemp&"' ",null
		ExitTest
	End If
	
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objScrollbar 		= Nothing
	
	BIZ_LoanTemplates_DuplicateTemplate = strDuplicateTemp
	
End Function



'This function is used to CopyPaste Template
'@code
'    BIZ_LoanTemplates_CopyPasteTemplate(strTemplateRenamevalue)
'@endcode
'@param strTemplateRenamevalue - Template name to Duplicate

Function BIZ_LoanTemplates_CopyPasteTemplate(strTemplate)
     
	FRM_Logger_ReportInfoEvent "CopyPaste Loan Template","Validate the copy of template create with prefix 'Copy of' Under Settings > Loan Templates", Null
	
	Dim objSettings,objLoanProgramList,objScrollbar,strCopyTemp,intGetNewRowIndex
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar") 
	
	'select existing template and click on copy & paste icon's 
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strTemplate, True, False, False, "Single" 
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCopy") 
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")
	GUI_SwfObject_Click objLoanProgramList
	
	'validate new template created after Copy & Paste 
	strCopyTemp = "Copy of "&strTemplate
	intGetNewRowIndex  = GUI_List_GetRowIndexByPartialText(objLoanProgramList, 0, strCopyTemp)
	If(intGetNewRowIndex > 0) Then 
		FRM_Logger_ReportPassEvent "Validate CopyPaste Loan Template","LoanTemplate Copy '"&strTemplate&"' is created with prefix '"&strCopyTemp&"' is pasted",null
	Else
		FRM_Logger_ReportFailEvent "Validate CopyPaste Loan Template","LoanTemplate Copy '"&strTemplate&"' is not created with prefix '"&strCopyTemp&"' is not pasted",null
		ExitTest
	End If
	BIZ_LoanTemplates_CopyPasteTemplate=strCopyTemp
		
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objScrollbar 		= Nothing
	
End Function



'This function is used to AddDefaultNewTemplate
'@code
'    Function BIZ_LoanTemplates_AddDefaultNewTemplate()
'@endcode

Function BIZ_LoanTemplates_AddDefaultNewTemplate()

	FRM_Logger_ReportInfoEvent "Add New LoanTemplate","Validate New Template created with default name Under Settings > Loan Templates", Null
	
	Dim objSettings,objLoanProgramList,blnRowExists,strDefaultTempName
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	GUI_Object_WaitTillExistX objSettings, 200 
	GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add New LoanTemplate "
	strDefaultTempName=GUI_Object_GetPropertyValue (objLoanProgramList.SwfEdit("micclass:=SwfEdit","focused:=True"),"text")
	GUI_SwfObject_Click objLoanProgramList
	blnRowExists=GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strDefaultTempName, True, False, False, "Single")
	
	If blnRowExists=True Then
		FRM_Logger_ReportPassEvent "Verify Default LoanTemplate Name", "New Loan Template with default name '"&strDefaultTempName&"' created", null	
	Else
		FRM_Logger_ReportFailEvent "Verify Default LoanTemplate Name", "New Loan Template with default name '"&strDefaultTempName&"' is not created", null	
	End If
		
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
End Function



'This function is used to CutTemplate
'@code
'    BIZ_LoanTemplates_CutTemplate(strNewFolderName)
'@endcode
'@param strNewFolderName - The name of a strNewFolderName

Function BIZ_LoanTemplates_CutTemplate(strNewFolderName)
    
	FRM_Logger_ReportInfoEvent "Cut LoanTemplate", "Cut LoanTemplate using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null
	
	Dim objSettings,objLoanProgramList,objScrollbar
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar") 
	
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strNewFolderName, True, False, False, "Single"  
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCut") 
	GUI_SwfObject_Click objLoanProgramList
	FRM_Logger_ReportInfoEvent "Validate Cut LoanTemplate", "Cut option is seleted for "&strNewFolderName, null
	
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objScrollbar 		= Nothing
	
End Function



'This function is used to Create New Folder in Specified folder
'@code
'    BIZ_LoanTemplates_CreateNewFolderInFolder(strRowID,strFolderName)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName select public or Personal folder

Function BIZ_LoanTemplates_CreateNewFolderInFolder(strRowID,strFolderName)
    
	FRM_Logger_ReportInfoEvent "Folder Creation", "Create and Validate New Folder in Loan Templates", null	
	
    Dim objData, objSettings,objLoanProgramList
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
		
	'Select Public or Personal folder
	GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboFolder|cmbBoxFolder"),strFolderName
	GUI_Object_WaitTillExistX objLoanProgramList, 60
	
	'Create new folder
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnNewFolder")
	strFolderName = CStr(FRM_DS_GetValue(objData, "FolderName")) 
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strFolderName 
	GUI_SwfObject_Click objLoanProgramList
	
	'Validate newly created folder in the Grid
	GUI_Object_WaitTillExistX objLoanProgramList, 200
	Wait 5 'Added due to sync issue
	If(GUI_List_GetRowIndexByPartialText(objLoanProgramList, 0, strFolderName) > 0) Then 
		FRM_Logger_ReportPassEvent "Validate Folder Creation","New Folder '"&strFolderName& "' is created",null
	Else
		FRM_Logger_ReportFailEvent "Validate Folder Creation","New Folder '"&strFolderName&"' is not created",null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	
	BIZ_LoanTemplates_CreateNewFolderInFolder = strFolderName
	
End Function



'This function is used to Existing Folder Validation
'@code
'    BIZ_LoanTemplates_ExistingFolderValidation(strRowID,strNewfoldername)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strNewfoldername - The name of a strNewFolderName

Function BIZ_LoanTemplates_ExistingFolderValidation(strRowID,strNewfoldername)

	FRM_Logger_ReportInfoEvent "Enter Existing FolderName", "Folder Created using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null
	
    Dim  objSettings,objLoanProgramList,objData,objSettingsDialog
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objSettingsDialog = objSettings.Dialog("text:=Encompass")
	
	GUI_Object_WaitTillExistX objLoanProgramList, 200  
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnNewFolder")
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strNewfoldername
	GUI_SwfObject_Click objLoanProgramList
	FRM_Logger_ReportInfoEvent "Enter Existing Folder Name","Validate Encompass Dialog Box Under Settings > Loan Templates", Null
	
	GUI_Object_IsExistX objSettingsDialog,60
	strvalDialog=FRM_DS_GetValue(objData,"StaticMsg")
	FRM_Logger_ReportInfoEvent "Validating Encompass Dialog Box Existance", "Encompass Dialog Box Exists", null
	GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"Popup Dialog's Static Message"
		
	GUI_Dialog_Encompass_Click 10, "", "OK"
	strFolderName = CStr(FRM_DS_GetValue(objData, "FolderName"))
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strFolderName
	GUI_SwfObject_ClickXY objLoanProgramList,0,0
	FRM_Logger_ReportInfoEvent "Existing Folder Name Validation","While creation of Folder with Existing name, 'Encompass dialog' Displayed",null
	
	Set objData 			= Nothing	
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objSettingsDialog 	= Nothing
	
	BIZ_LoanTemplates_ExistingFolderValidation = strFolderName
	
End Function



'This function is used to SelectItem In Grid and Click
'@code
'   BIZ_LoanTemplates_SelectItemInGridandClick(strNewFolderName,strClickEvent)
'@endcode
'@param strNewFolderName - The name of a strNewFolderName
'@param strClickEvent - Click Event Single or Double

Function BIZ_LoanTemplates_SelectItemInGridandClick(strNewFolderName,strClickEvent)
	
	FRM_Logger_ReportInfoEvent "Select Item from Grid ", "Folder is select from gride and clicked", null
	
	Dim  objSettings
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_Object_WaitTillExistX objSettings.SwfObject("swfname:=gvDirectory"), 400 
	Select Case LCase(strClickEvent)
		Case Lcase("Double")
			strClickEvent =  "Double"
		Case Lcase("Single")
			strClickEvent =  "Single"
		Case Else 
			FRM_Logger_ReportFailEvent "BIZ_LoanTemplates_SelectItemInGridandClick","'"&strClickEvent&"' is not a valid Option", Null
	End Select
	GUI_List_ClickRow objSettings.SwfObject("swfname:=gvDirectory"), objSettings.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strNewFolderName, True, False, False, strClickEvent	
	
	Set objSettings 		= Nothing
			
End Function



'This function is used to Add Description to Existing Template
'@code
'    BIZ_LoanTemplates_AddDescriptionToExistingTemplate(strRowID,strNewFolderName,strSubLoantemplate)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strNewFolderName - The name of a strNewFolderName
'@param strSubLoantemplate - The name of sub items in Loan template 

Function BIZ_LoanTemplates_AddDescriptionToExistingTemplate(strRowID,strNewFolderName,strSubLoantemplate)
    
    FRM_Logger_ReportInfoEvent "Add Description to Existing Tempalte", "Click On Edit using Row Id '"&strRowID&"' in the Settings", null
    
	Dim strTemplateWindow 
	
	BIZ_LoanTemplates_SelectExistingTemplate strRowID,strNewFolderName,strSubLoantemplate
	
	If(strSubLoantemplate = "Loan Programs") Then
		Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	    Set objbtnSave  = objSettings.SwfWindow("swfname:=LoanProgramDialog").SwfButton("swfname:=btnOK")
	Else
		Select Case lcase (strSubLoantemplate)
			Case Lcase("SettlementServiceProvider")
				Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
				Set objbtnSave  = objSettings.SwfWindow("swfname:=SettlementServiceTemplateDialog").SwfButton("swfname:=btnSave")
				strDialogTemplate = "SettlementServiceTemplateDialog"
			Case Lcase("Affiliated Business Arrangement Templates")
				Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
				Set objbtnSave  = objSettings.SwfWindow("swfname:=AffiliateTemplateDialog").SwfButton("swfname:=btnSave")
				strDialogTemplate = "AffiliateTemplateDialog"
			Case Lcase("Data Templates")
				Set objSettings = SwfWindow("swfname:=MainForm")
				Set objDialog   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")
				Set objbtnSave  = objDialog.SwfButton("swfname:=saveBtn")				
				strDialogTemplate = "DataTemplateDialog"
			Case Lcase("Loan Template Sets")
				Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
				Set objbtnSave  = objSettings.SwfWindow("swfname:=LoanTemplateDialog").SwfButton("swfname:=saveBtn")
				strDialogTemplate = "LoanTemplateDialog"   
			Case Lcase("Closing Cost")
				Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")	
				Set objbtnSave  = objSettings.SwfWindow("swfname:=TemplateDialog").SwfButton("swfname:=saveBtn")
				strDialogTemplate = "TemplateDialog"
			Case Else 
				FRM_Logger_ReportFailEvent "BIZ_LoanTemplates_AddDescriptionToExistingTemplate","'"&strSubLoantemplate&"' is not a valid Tempalte", Null   
		End Select
	End If
	
	If (strSubLoantemplate <> "Loan Programs") Then 
		Set objbtnSave  = objSettings.SwfWindow("swfname:="&strDialogTemplate).SwfButton("swfname:=saveBtn")
	End If
	
	GUI_SwfButton_Click(objbtnSave) 
	   
    Set objSettings         = Nothing
    Set objbtnSave          = Nothing
    
End Function



'This function is used to Add Description to Existing Template
'@code
'    BIZ_LoanTemplates_SelectExistingTemplate(strRowID,strNewFolderName,strSubLoantemplate)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strNewFolderName - The name of a strNewFolderName
'@param strSubLoantemplate - The name of sub items in Loan template 

Function BIZ_LoanTemplates_SelectExistingTemplate(strRowID,strNewFolderName,strSubLoantemplate)

	Dim  objData,objSettings,objLoanProgramList,objScrollbar,objbtnSave
    
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
    
    Select Case lcase (strSubLoantemplate)
        Case Lcase("Loan Programs")
            Set objEditor   = objSettings.SwfWindow("swfname:=LoanProgramDialog").SwfEditor("swfname:=txtDescription")
        Case Lcase("SettlementServiceProvider")
            Set objEditor   = objSettings.SwfWindow("swfname:=SettlementServiceTemplateDialog").SwfEditor("swfname:=descTxt")
        Case Lcase("Affiliated Business Arrangement Templates")
            Set objEditor   = objSettings.SwfWindow("swfname:=AffiliateTemplateDialog").SwfEditor("swfname:=descTxt")
        Case Lcase("Data Templates")
            Set objEditor   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").SwfEditor("swfname:=descTxt") 
			Set objDialog   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")
        Case Lcase("Loan Template Sets")
            Set objEditor   = objSettings.SwfWindow("swfname:=LoanTemplateDialog").SwfEditor("swfname:=descTxt")    
		Case Lcase("Closing Cost")
            Set objEditor   = objSettings.SwfWindow("swfname:=TemplateDialog").SwfEditor("swfname:=descTxt") 
        Case Else 
			FRM_Logger_ReportFailEvent "BIZ_LoanTemplates_AddDescriptionToExistingTemplate","'"&strSubLoantemplate&"' is not a valid Tempalte", Null
            
    End Select
    
    Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
    
    boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strNewFolderName, True, False, False, "Single")
	
	If boolVal Then
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
		GUI_Object_WaitTillExistX objEditor, 300 
		
        strRESPATILAFormVersion = CStr(FRM_DS_GetValue(objData, "RESPATILAFormVersion"))
	    If Not UTIL_String_IsEmpty(strRESPATILAFormVersion) Then
	    	GUI_SwfComboBox_Select objDialog.SwfComboBox("swfname:=cboRESPAVersion"),strRESPATILAFormVersion
	   	End If
		
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		
	    strText = CStr(FRM_DS_GetValue(objData, "LoanTemplateDescription"))
	    If Not UTIL_String_IsEmpty(strText) Then
	    	GUI_SwfEditor_Type objEditor,strText
	   	End If
    Else 
		FRM_Logger_ReportFailEvent "Select the Existing Template ", "'"&strNewFolderName &"' template doesn't found in the Grid", null
	End If
	
	BIZ_LoanTemplates_SelectExistingTemplate = boolVal
	
	Set objSettings = Nothing
    Set objLoanProgramList = Nothing
    Set objScrollbar=Nothing
	Set objbtnSave  = Nothing
	Set objEditor   = Nothing
    
End Function 



'This function is used to Verify Template Description
'@code
'    BIZ_LoanTemplates_VerifyTemplateDescription(strRowID,strNewFolderName)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strNewFolderName - The name of a strNewFolderName
'@param strSubLoantemplate - The name of sub items in Loan template 

Function BIZ_LoanTemplates_VerifyTemplateDescription(strRowID,strNewFolderName,strSubLoantemplate)
    
    FRM_Logger_ReportInfoEvent "Verify Description", "Description is Verified using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null
    
    Dim  objData,objSettings,objLoanProgramList,objScrollbar,objInputValue,objWinClose,objUpFloder
    
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
    Select Case lcase (strSubLoantemplate)
        Case Lcase("Loan Programs")
            Set objInputValue   = objSettings.SwfWindow("swfname:=LoanProgramDialog").SwfEditor("swfname:=txtDescription")
            Set objWinClose     = objSettings.SwfWindow("swfname:=LoanProgramDialog")
            Set objUpFloder     = objSettings.SwfObject("swfname:=btnUpFolder")
        Case Lcase("Document Sets")
            Set objInputValue   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DocumentSetTemplateDialog").SwfEditor("swfname:=descTxt")
            Set objWinClose     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DocumentSetTemplateDialog")
            Set objUpFloder     = objSettings.SwfObject("swfname:=stdIconBtnUpFolder")            
        Case Lcase("Input Form Sets")
            Set objInputValue   = objSettings.SwfWindow("swfname:=FormListDialog").SwfEditor("swfname:=descTxt")
            Set objWinClose     = objSettings.SwfWindow("swfname:=FormListDialog")
            Set objUpFloder     = objSettings.SwfObject("swfname:=stdIconBtnUpFolder")    
        Case Lcase("SettlementServiceProvider")
            Set objInputValue   = objSettings.SwfWindow("swfname:=SettlementServiceTemplateDialog").SwfEditor("swfname:=descTxt")
            Set objWinClose     = objSettings.SwfWindow("swfname:=SettlementServiceTemplateDialog")
            Set objUpFloder     = objSettings.SwfObject("swfname:=stdIconBtnUpFolder")            
        Case Lcase("Affiliated Business Arrangement Templates")
            Set objInputValue   = objSettings.SwfWindow("swfname:=AffiliateTemplateDialog").SwfEditor("swfname:=descTxt")
            Set objWinClose     = objSettings.SwfWindow("swfname:=AffiliateTemplateDialog")
            Set objUpFloder     = objSettings.SwfObject("swfname:=stdIconBtnUpFolder")
        Case Lcase("Task Sets")
            Set objInputValue   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog").SwfEditor("swfname:=descTxt")
            Set objWinClose     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog")
            Set objUpFloder     = objSettings.SwfObject("swfname:=stdIconBtnUpFolder")            
        Case Lcase("Data Templates")
            Set objInputValue   = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").SwfEditor("swfname:=descTxt") 
            Set objWinClose     = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")            
            Set objUpFloder     = objSettings.SwfObject("swfname:=stdIconBtnUpFolder") 
        Case Lcase("Loan Template Sets")
            Set objInputValue   = objSettings.SwfWindow("swfname:=LoanTemplateDialog").SwfEditor("swfname:=descTxt")  
            Set objWinClose     = objSettings.SwfWindow("swfname:=LoanTemplateDialog")            
            Set objUpFloder     = objSettings.SwfObject("swfname:=stdIconBtnUpFolder") 
		Case Lcase("Closing Cost")
			Set objInputValue   = objSettings.SwfWindow("swfname:=TemplateDialog").SwfEditor("swfname:=descTxt") 
			Set objWinClose     = objSettings.SwfWindow("swfname:=TemplateDialog")            
            Set objUpFloder     = objSettings.SwfObject("swfname:=stdIconBtnUpFolder")
        Case Else 
			FRM_Logger_ReportFailEvent "BIZ_LoanTemplates_VerifyTemplateDescription","'"&strSubLoantemplate&"' is not a valid Template", Null
    End Select
    
    Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
    strText=CStr(FRM_DS_GetValue(objData, "LoanTemplateDescription"))
    
    GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strNewFolderName, True, False, False, "Single"
    GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
    GUI_Object_IsExistX objWinClose, 10
    strActualValue=GUI_Object_GetPropertyValue(objInputValue,"Text")
    FRM_VerifyEqual strText,strActualValue,"Comparing Description"&strActualValue,"Description should match"
    GUI_Window_Close objWinClose
    
   
    Set objData             = Nothing
    Set objSettings         = Nothing
    Set objLoanProgramList  = Nothing
    Set objScrollbar        = Nothing
    Set objInputValue       = Nothing
    Set objWinClose         = Nothing
    Set objUpFloder         = Nothing

End Function



'This function is used to RenameExistingFolder
'@code
'    BIZ_LoanTemplates_RenameExistingFolder(strRowID,strFolderName)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strNewFolderName

Function BIZ_LoanTemplates_RenameExistingFolder(strRowID,strFolderName)

	FRM_Logger_ReportInfoEvent "Validate rename of a Folder","Rename Folder in LoanTemplates using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null
	
    Dim  objData,objSettings,objLoanProgramList,objScrollbar
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	'Folder  Rename process
	GUI_Object_WaitTillExistX objLoanProgramList, 60
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strFolderName, True, False, False, "Single"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnRename")
	strFolderRename = CStr(FRM_DS_GetValue(objData, "FolderRename")) 
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strFolderRename	
	GUI_SwfObject_Click objLoanProgramList
	
	'Validate Rename folder in the Grid
	GUI_Object_WaitTillExistX objLoanProgramList, 200 
	wait 5	'Due To Sync Issue We Are Explicitly Calling Wait Statement
	If( GUI_List_GetRowIndexByPartialText(objLoanProgramList, 0, strFolderRename) > 0) Then 
		FRM_Logger_ReportPassEvent "Renaming of a Folder","LoanFolder '"&strFolderName &"'  is renamed to '"&strFolderRename&"'",null
	Else
		FRM_Logger_ReportFailEvent "Renaming of a Folder","LoanFolder '"&strFolderName &"'  is not renamed to '"&strFolderRename&"'",null
		ExitTest
	End If
	
	Set objData 			= Nothing	
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objScrollbar 		= Nothing
	
	BIZ_LoanTemplates_RenameExistingFolder =  strFolderRename
	
End Function



'This function is used to Copy & Paste the Folder in Specified folder
'@code
'    BIZ_LoanTemplates_FolderCopyPasteUnderFolder(strFolderName,strNewFolderName)
'@endcode
'@param strFolderName - This is used for Select Folder Public or Personal
'@param strNewFolderName - The name of a strNewFolderName

Function BIZ_LoanTemplates_FolderCopyPasteUnderFolder(strFolderName,strNewFolderName)
    
	FRM_Logger_ReportInfoEvent "Validate Folder Copy & Paste ","Validating Copy Paste functionality for Folder ", Null
	
	Dim  objSettings,objLoanProgramList,objScrollbar,objData	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar") 
	
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strNewFolderName, True, False, False, "Single"
	GUI_Object_WaitTillExistX objLoanProgramList, 200 
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnCopy")
	GUI_SwfObject_Click objLoanProgramList	
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cboFolder|cmbBoxFolder"), strfoldername
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")	
	GUI_SwfObject_ClickXY objLoanProgramList,0,0
	strFolder= GUI_Object_GetPropertyValue(objSettings.SwfLabel("swfname:=cboFolder|cmbBoxFolder"),"Text")
	
	GUI_Object_WaitTillExistX objLoanProgramList, 200
	Wait 5 'Added due to sync issue
	If(GUI_List_GetRowIndexByPartialText(objLoanProgramList, 0, strNewFolderName) > 0) Then 
		FRM_Logger_ReportPassEvent "Validate CopyPasteFolder","Loan Folder '"&strNewFolderName&"' copied to Folder Named: '"&strFolder&"'",null
	Else
		FRM_Logger_ReportFailEvent "validate CopyPasteFolder","Loan Folder '"&strNewFolderName&"' not copied to '"&strFolder&"'",null
	End If
	
	Set objData 			= Nothing	
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objScrollbar 		= Nothing
	
End Function



'This function is used to Delete Folder or Template
'@code
'    BIZ_LoanTemplates_DeleteFolderOrTemplate(boolDeleteYesOrNo,strNewFolderName,strDesc )
'@endcode
'@param boolDeleteYesOrNo - This is used for clicking Yes or No button
'@param strNewFolderName - The name of a strNewFolderName
'@param strDesc - This is used LoanFolder(or)LoanTemplate

Function BIZ_LoanTemplates_DeleteFolderOrTemplate( boolDeleteYesOrNo,strNewFolderName,strDesc)
	
	FRM_Logger_ReportInfoEvent "Delete '"&strDesc&"'","Validate Delete '"&strDesc&"' Under Settings", Null
	
	Dim objSettings,objLoanProgramList,objScrollbar,objYesBtn,objNoBtn
	Set objSettings =SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
    GUI_Object_WaitTillExistX objLoanProgramList, 500 
	GUI_SwfObject_Click objLoanProgramList    
	
	
	Select Case Ucase(boolDeleteYesOrNo)
		Case Ucase("Yes")
			GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strNewFolderName, True, False, False, "Single"
			GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDelete") 
			Wait g_ShortWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
			GUI_Dialog_Encompass_Yes("Are you sure you want to.* ")
			BIZ_LoanTemplates_ValidateDeleteData "Yes",strNewFolderName,strDesc
		Case Ucase("No")
			GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strNewFolderName, True, False, False, "Single"
			GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDelete") 
			Wait g_ShortWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
			GUI_Dialog_Encompass_No("Are you sure you want to.* ")
			BIZ_LoanTemplates_ValidateDeleteData "No",strNewFolderName,strDesc
		Case Ucase("NoYes")
			'NO Process
			GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strNewFolderName, True, False, False, "Single"
			GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDelete") 
			Wait g_ShortWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
			GUI_Dialog_Encompass_No("Are you sure you want to.* ")
			BIZ_LoanTemplates_ValidateDeleteData "No",strNewFolderName,strDesc
			'Yes Process
			GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strNewFolderName, True, False, False, "Single"
			GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnDelete") 
			Wait g_ShortWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
			GUI_Dialog_Encompass_Yes("Are you sure you want to.* ")
			BIZ_LoanTemplates_ValidateDeleteData "Yes",strNewFolderName,strDesc
		Case Else 
			FRM_Logger_ReportFailEvent "BIZ_LoanTemplates_DeleteFolderOrTemplate","'"&boolDeleteYesOrNo&"' is not a valid option", Null
	End Select
	
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
		
End Function



'This function is used to Create new Template
	
'@code
'    BIZ_LoanTemplates_CreateNewTemplate(strRowID,strFolderName)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strFolderName

Function BIZ_LoanTemplates_CreateNewTemplate(strRowID,strFolderName)
    
	
	
	Dim objData,objSettings,objLoanProgramList,strTemplateName,strItemization,intGetNewRowIndex 
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	
	'Select folder
	GUI_Object_WaitTillExistX objSettings, 60
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strfoldername
	
	strTemplateName = CStr(FRM_DS_GetValue(objData, "TemplateName")) 
	boolIsFound = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strTemplateName, True, False, False, "Single")
	'msgbox "boolIsFound"&boolIsFound
	If NOT boolIsFound Then
		FRM_Logger_ReportInfoEvent "Create a New Loan Template", "New LoanTemplate creation started", null
		'Create Template
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	
		strItemization=FRM_DS_GetValue(objData, "LoanItemization")
    
		If strItemization="Yes"  then
			GUI_SwfObject_Click SwfWindow("swfname:=CreateNewTemplateDialog").SwfButton("swfname:=btnOK")
		End If 
		GUI_Object_WaitTillExistX objSettings, 60
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strTemplateName 
		GUI_SwfObject_Click objLoanProgramList
	
		'Validate newly created Template in the Grid
		GUI_Object_WaitTillExistX objLoanProgramList, 180
		Wait 5 'Added due to sync issue
		intGetNewRowIndex  = GUI_List_GetRowIndex(objLoanProgramList, "Name", strTemplateName)
	
		If(intGetNewRowIndex >= 0) Then 
			FRM_Logger_ReportPassEvent "Adding New Loan Template","New Loan Template created with name '"&strTemplateName&"'",null
		Else 
			FRM_Logger_ReportFailEvent "Adding New Loan Template","New Loan Template '"&strTemplateName&"' not created",null
		End If
		wait 10
		BIZ_LoanTemplates_AddDescriptionToExistingTemplate "PTAC-1387_LoanTemplates_LoanPrograms",strTemplateName,"Loan Programs"
		wait 15
		BIZ_LoanPrograms_OpenTemplate strTemplateName
		wait 15
		BIZ_LoanTemplates_SetField "PTAC-1387_LoanTemplates_LoanPrograms"
	Else
		FRM_Logger_ReportInfoEvent "Loan Template", "New LoanTemplate already created", null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	BIZ_LoanTemplates_CreateNewTemplate =  strTemplateName
    
End Function



'This function is used to ClickUpFolder
'@code
'   BIZ_LoanTemplates_ClickUpFolder()
'@endcode

Function BIZ_LoanTemplates_ClickUpFolder()
     
	FRM_Logger_ReportInfoEvent "Click Up Folder", "UpFolder is clicked", null
	
	Dim  objSettings
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_Object_WaitTillExistX objSettings, 400 
	If GUI_Object_IsExist(objSettings.SwfObject("swfname:=stdIconBtnUpFolder"))=True Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnUpFolder")
	Else
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnUpFolder")
	End If
	
	Set objSettings = Nothing
	
End Function



'This function is used to Validate Template with Existing Name
'@code
'    BIZ_LoanTemplates_ValidateTemplatewithExistingName(strRowID,strTemplateName)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'Param strTemplateName - Existing Template Name

Function BIZ_LoanTemplates_ValidateTemplatewithExistingName(strRowID,strTemplateName)
     
	FRM_Logger_ReportInfoEvent "Enter Existing Template Name","Validate Popup dialog while creating existing LoanTemplate Name ", Null
	
	Dim objData,objSettings,objLoanProgramList,objSettingsDialog
	Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objSettingsDialog = objSettings.Dialog("text:=Encompass")
	
	GUI_Object_WaitTillExistX objSettings, 300  
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	strItemization=FRM_DS_GetValue(objData, "Loan Itemization")
	
	If strItemization="Yes"  then
		GUI_SwfObject_Click SwfWindow("swfname:=CreateNewTemplateDialog").SwfButton("swfname:=btnOK")
	End If 
	
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strTemplateName
	GUI_SwfObject_Click objLoanProgramList
	FRM_Logger_ReportInfoEvent "Enter ExistingName","Validate Encompass Dialog Box Under Settings > Loan Templates", Null
	
	'Validating Error popup Encompass Dialog box Existance
	GUI_Object_WaitTillExistX objSettingsDialog,100
    strvalDialog=FRM_DS_GetValue(objData,"StaticMsg")
    GUI_Object_ValidateText objSettingsDialog.Static("nativeclass:=Static","window id:=65535"),strvalDialog,"""Popup Dialog's Static Message"""
    FRM_Logger_ReportInfoEvent "Existing LoanTemplate Name Validation","While creating LoanTemplate with Existing name error popup 'Encompass dialog' Dispalyed",null
	GUI_Dialog_Encompass_Click 10, "", "OK"
	
	'Create new template
	StrNewTemplateName = CStr(FRM_DS_GetValue(objData, "TemplateName"))
	GUI_Object_WaitTillExistX objLoanProgramList, 100
	GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), StrNewTemplateName 
	GUI_SwfObject_Click objLoanProgramList
	
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objSettingsDialog 	= Nothing
	
	BIZ_LoanTemplates_ValidateTemplatewithExistingName = StrNewTemplateName
    
End Function



'This function is used to PasteTemplate
'@code
'    BIZ_LoanTemplates_SelectFolderAndPasteTemplate(strFolderName,strTemplateName)
'@endcode
'@param strFolderName - The name of a folder to paste the Template
'@param strTemplateName - The name of a template to be paste

Function BIZ_LoanTemplates_SelectFolderAndPasteTemplate(strFolderName,strTemplateName)
    
	FRM_Logger_ReportInfoEvent "Paste LoanTemplate","Validate the Paste LoanTemplate Under Settings > Loan Templates", Null
	
	Dim objSettings,objLoanProgramList,objScrollbar,boolVal
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar") 
	
	'Select the folder
	GUI_Object_WaitTillExistX objLoanProgramList, 400 
	GUI_List_ClickRow objLoanProgramList, objScrollbar, "Name", strFolderName, True, False, False, "Double"	
	
	'Click on Paste icone
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnPaste")
	GUI_SwfObject_Click objLoanProgramList
	
	'Validate the template pasted
	GUI_Object_WaitTillExistX objLoanProgramList, 200 
	
	boolVal  = GUI_List_TextExists(objLoanProgramList, 0, strTemplateName)
    
	If (boolVal) Then ' For Readability We Are Passing This
		FRM_Logger_ReportPassEvent "Valiadate Paste LoanTemplate","Loan Template '"&strTemplateName&"' is pasted",null
	Else
		FRM_Logger_ReportFailEvent "Valiadate Paste LoanTemplate","Loan Template '"&strTemplateName&"' is not pasted",null
	End If
	
	FRM_Logger_ReportInfoEvent "Click Up Folder", "UpFolder is clicked", null
	
	GUI_Object_WaitTillExistX objSettings, 400 
    
	If GUI_Object_IsExist(objSettings.SwfObject("swfname:=stdIconBtnUpFolder"))=True Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnUpFolder")
	Else
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnUpFolder")
	End If
	
	Set objData 			= Nothing	
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	Set objScrollbar 		= Nothing
	
End Function



'This function is used to Validate Delete data
'@code
'    BIZ_LoanTemplates_ValidateDeleteData(strDeleteYesOrNo,strNewFolderName,strDesc )
'@endcode
'@param strDeleteYesOrNo - This is used for clicking Yes or No button
'@param strNewFolderName - The name of a strNewFolderName
'@param strDesc - This is used LoanFolder(or)LoanTemplate

Function BIZ_LoanTemplates_ValidateDeleteData (strDeleteYesOrNo,strNewFolderName,strDesc)
	
	FRM_Logger_ReportInfoEvent "Validate Delete data","Validate Delete '"&strNewFolderName&"'", Null
	
	Dim objSettings,objLoanProgramList,objScrollbar
	Set objSettings =SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillExistX objLoanProgramList, 500
	wait g_LongWaitMedium	' Due To Sync Issue We Are Calling Explicit Wait Statement
	boolValue=GUI_List_TextExists (objLoanProgramList, 0, strNewFolderName)
	
	Select Case Ucase(strDeleteYesOrNo)
		Case Ucase("Yes")
			If boolValue=False Then
				FRM_Logger_ReportPassEvent "Delete '"&strDesc&"'","'"&strDesc&"' '"&strNewFolderName&"' is deleted",null
			Else
				FRM_Logger_ReportFailEvent "Delete '"&strDesc&"'","'"&strDesc&"' '"&strNewFolderName&"' is not deleted",null
			End If
		Case Ucase("No")
			If boolValue Then
				FRM_Logger_ReportPassEvent "Delete '"&strDesc&"'","'"&strDesc&"' '"&strNewFolderName&"' is not deleted",null
			Else
				FRM_Logger_ReportFailEvent "Delete '"&strDesc&"'","'"&strDesc&"' '"&strNewFolderName&"' is deleted",null
			End If	
		Case Else 
			FRM_Logger_ReportFailEvent "BIZ_LoanTemplates_ValidateDeleteData","'"&strDeleteYesOrNo&"' is not a valid option", Null
	End Select
	
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
	
End Function



'This function is used to Edit templates
'@code
'    BIZ_LoanTemplates_EditTemplate(strRowID,strTemplateName,strSubLoantemplate)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strTemplateName - The name of a strNewFolderName
'@param strSubLoantemplate - The name of sub items in Loan template 

Function BIZ_LoanTemplates_EditTemplate(strRowID,strTemplateName,strSubLoantemplate)

    FRM_Logger_ReportInfoEvent "Add Description to Existing Tempalte", "Click On Edit using Row Id '"&strRowID&"' in the Settings", null
    
    Dim  objData,objSettings,objLoanProgramList,objScrollbar,objSaveBtn,objRemoveBtn,strText,strRemovecol,objEditor,objFormsList,objAddBtn,ObjRemovelist
    
    Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")

    Select Case Lcase (strSubLoantemplate)
        
		Case Lcase("Document Sets")
            Set objSaveBtn  		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DocumentSetTemplateDialog").SwfButton("swfname:=saveBtn")
            Set objEditor   		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DocumentSetTemplateDialog").SwfEditor("swfname:=descTxt")
            Set objFormsList 		= SwfWindow("swfname:=MainForm").SwfObject("swfname:=DocumentSetTemplateDialog").SwfObject("swfname:=gridPredefined")
            Set objcmbBoxMilestones = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DocumentSetTemplateDialog").SwfComboBox("swfname:=cmbBoxMilestones|stageCombo")
            set objAddBtn			= SwfWindow("swfname:=MainForm").SwfObject("swfname:=DocumentSetTemplateDialog").SwfButton("swfname:=addBtn")
            set objRemoveBtn		= SwfWindow("swfname:=MainForm").SwfObject("swfname:=DocumentSetTemplateDialog").SwfButton("swfname:=removeBtn")
            Set ObjRemovelist		= SwfWindow("swfname:=MainForm").SwfObject("swfname:=DocumentSetTemplateDialog").SwfObject("swfname:=gridSelected") 
            strRemovecol="Document"
        
		Case Lcase("Input Form Sets")
            Set objSaveBtn  		= objSettings.SwfWindow("swfname:=FormListDialog").SwfButton("swfname:=saveBtn")
            Set objEditor   		= objSettings.SwfWindow("swfname:=FormListDialog").SwfEditor("swfname:=descTxt")
            Set objFormsList 		= objSettings.SwfWindow("swfname:=FormListDialog").SwfObject("swfname:=gridPredefined")
            Set objcmbBoxMilestones	= SwfWindow("swfname:=FormListDialog").SwfComboBox("swfname:=cmbBoxMilestones")
            set objAddBtn			= objSettings.SwfWindow("swfname:=FormListDialog").SwfButton("swfname:=addBtn")
            set objRemoveBtn		= objSettings.SwfWindow("swfname:=FormListDialog").SwfButton("swfname:=removeBtn")
            Set ObjRemovelist		= objSettings.SwfWindow("swfname:=FormListDialog").SwfObject("swfname:=gridSelected") 
            strRemovecol="Name"
        
		Case Lcase("Task Sets")
            Set objSaveBtn  		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog").SwfButton("swfname:=saveBtn")
            Set objEditor   		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog").SwfEditor("swfname:=descTxt") 
            Set objFormsList 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog").SwfObject("swfname:=gridPredefined") 
            Set ObjRemovelist		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog").SwfObject("swfname:=gridSelected") 
            Set objcmbBoxMilestones	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog").SwfComboBox("swfname:=cmbBoxMilestones")
            Set objAddBtn			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog").SwfButton("swfname:=addBtn")
            set objRemoveBtn		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog").SwfButton("swfname:=removeBtn")
            strRemovecol="Task"
        
		Case Lcase("SettlementServiceProvider")
			Set objDialog	= objSettings.SwfWindow("swfname:=SettlementServiceTemplateDialog")
            Set objSaveBtn  = ObjDialog.SwfButton("swfname:=btnSave")
            Set objEditor   = ObjDialog.SwfEditor("swfname:=descTxt")
            Set ObjAdd      = ObjDialog.SwfObject("swfname:=btnIconAdd")
        
		Case Lcase("Affiliated Business Arrangement Templates")
            Set objDialog	= objSettings.SwfWindow("swfname:=AffiliateTemplateDialog")
			Set objSaveBtn  = ObjDialog.SwfButton("swfname:=btnSave")
            Set objEditor  	= ObjDialog.SwfEditor("swfname:=descTxt")
            Set ObjAdd     	= ObjDialog.SwfObject("swfname:=btnIconAdd")
			
        
		Case Else
             FRM_Logger_ReportFailEvent "Select Option", "Loan template option doesn't exists in select case", null
    End Select
    
    Set objData = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
    strText=CStr(FRM_DS_GetValue(objData, "LoanTemplateDescription"))
    
    boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strTemplateName, True, False, False, "Single")
    
    If boolVal Then
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
        
        GUI_Object_WaitTillExistX objEditor,6
        
        If Not UTIL_String_IsEmpty(strText) Then
            GUI_SwfEditor_Type objEditor,strText
        End if
        
		Select Case Lcase (strSubLoantemplate)
			Case Lcase("Affiliated Business Arrangement Templates")
				 GUI_SwfObject_Click ObjAdd
				 GUI_Object_WaitTillExistX objSettings, 300 
				 
				strLenderName = CStr(FRM_DS_GetValue(objData, "LenderName"))
				If Not UTIL_String_IsEmpty(strLenderName) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=0").WebEdit("html id:=TextBox1","index:=0"),strLenderName
				End If
			
				strAffiliateName = CStr(FRM_DS_GetValue(objData, "AffiliateName"))
				If Not UTIL_String_IsEmpty(strAffiliateName) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=1").WebEdit("html id:=TextBox2","index:=1"),strAffiliateName
				End If
				
				strServiceDescription = CStr(FRM_DS_GetValue(objData, "ServiceDescription"))
				If Not UTIL_String_IsEmpty(strServiceDescription) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=9").WebEdit("html id:=l_ABX10","index:=9"),strServiceDescription
				End If
			
				strCharge = CStr(FRM_DS_GetValue(objData, "Charge"))
				If Not UTIL_String_IsEmpty(strCharge) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=3").WebEdit("html id:=l_AFFX8","index:=3"),strCharge
				End If
				
				GUI_WebCheckbox_Set ObjDialog.Page("index:=2").WebCheckBox("html id:=__cid_CheckBox3_Ctrl","index:=2"),"ON" 
				
			Case Lcase("SettlementServiceProvider")	
				 
				GUI_Object_WaitTillExistX objSettings, 300 
				
				strAdditionalInfo = CStr(FRM_DS_GetValue(objData, "AdditionalInfo"))
				If Not UTIL_String_IsEmpty(strAdditionalInfo) Then
				   GUI_SwfEditor_Type objDialog.SwfEditor("swfname:=additionalInfo"),strAdditionalInfo
				End If
				
				GUI_SwfObject_Click ObjAdd
				
				strServiceCategory = CStr(FRM_DS_GetValue(objData, "ServiceCategory"))
				If Not UTIL_String_IsEmpty(strServiceCategory) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=0").WebEdit("html id:=l_SP0001","index:=0"),strServiceCategory
				End If
				
				strCompanyName = CStr(FRM_DS_GetValue(objData, "CompanyName"))
				If Not UTIL_String_IsEmpty(strCompanyName) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=1").WebEdit("html id:=TextBox2","index:=1"),strCompanyName
				End If
				
				strPhone = CStr(FRM_DS_GetValue(objData, "Phone"))
				If Not UTIL_String_IsEmpty(strPhone) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=6").WebEdit("html id:=TextBox7","index:=6"),strPhone
				End If
				
				strFeeDescription = CStr(FRM_DS_GetValue(objData, "FeeDescription"))
				If Not UTIL_String_IsEmpty(strFeeDescription) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=11").WebEdit("html id:=TextBox10","index:=11"),strFeeDescription
				End If
				
				strAmount = CStr(FRM_DS_GetValue(objData, "Amount"))
				If Not UTIL_String_IsEmpty(strAmount) Then
				   GUI_WebEdit_Set ObjDialog.Page("index:=21").WebEdit("html id:=TextBox20","index:=21"),strAmount
				End If
				 
	
			Case Else
		
				GUI_Object_WaitTillExistX objSettings, 300 
				
				If Not UTIL_String_IsEmpty(CStr(FRM_DS_GetValue(objData, "Milestone"))) Then
					 GUI_SwfComboBox_Select objcmbBoxMilestones, CStr(FRM_DS_GetValue(objData, "Milestone"))
				End if
				
				If Not UTIL_String_IsEmpty(CStr(FRM_DS_GetValue(objData, "AddPredefinedData"))) Then
					arrAddPredefinedData = split(CStr(FRM_DS_GetValue(objData, "AddPredefinedData")),";")
					For intAdd = 0 to ubound(arrAddPredefinedData)
						GUI_List_ClickRow objFormsList, objFormsList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", cstr(arrAddPredefinedData(intAdd)), True, False, False, "Single"
						GUI_SwfButton_Click objAddBtn
					Next
				End if
				
				If Not UTIL_String_IsEmpty(CStr(FRM_DS_GetValue(objData, "RemovePredefinedData"))) Then
					arrRemovePredefinedData = split(CStr(FRM_DS_GetValue(objData, "RemovePredefinedData")),";")
					For intRemove = 0 to ubound(arrRemovePredefinedData)
						GUI_List_ClickRow ObjRemovelist, ObjRemovelist.SwfScrollBar("swfname:=vPanelScrollBar"), strRemovecol, cstr(arrRemovePredefinedData(intRemove)), True, False, False, "Single"
						GUI_SwfButton_Click objRemoveBtn
					Next
				End if
				
				If Not UTIL_String_IsEmpty(CStr(FRM_DS_GetValue(objData, "Service Provider"))) Then
					GUI_SwfObject_Click ObjAdd
					GUI_Object_WaitTillExistX objSettings, 300 
				End if
		End Select		
		GUI_SwfButton_Click(objSaveBtn)
    Else 
        FRM_Logger_ReportFailEvent "Select the Existing Template ", "'"&strNewFolderName &"' template doesn't found in the Grid", null
    End If
	
	Set objData				= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
	Set objSaveBtn			= Nothing
	Set objRemoveBtn 		= Nothing
	Set objEditor			= Nothing
	Set objFormsList 		= Nothing
	Set objAddBtn			= Nothing
	Set ObjRemovelist 		= Nothing
	
End Function



'This function is for Apply (or)Append '"&strSubMenu&"' Template To current loan 
'@code
'    BIZ_LoanTemplates_ApplyandAppendTemplate(strSubMenu)
'@endcode
'@param strSubMenu - This is used to Apply (or) Append Template

Function BIZ_LoanTemplates_ApplyandAppendTemplate(strSubMenu)
	
	FRM_Logger_ReportInfoEvent "Apply '"&strSubMenu&"' Template", "Apply '"&strSubMenu&"' Template to current loan", null
    
    Dim objMainMenu
	
    Set objMainMenu = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
    
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_SwfToolbar_ShowDropdown objMainMenu,"Loan"		
    GUI_SwfToolbar_Select objMainMenu, "Loan;"&strSubMenu
		
	Set objMainMenu = Nothing
	
End Function



'This function is used to Set 1003 Page1
'@code
'    BIZ_LoanTemplates_Set1003Page1(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
 
Function BIZ_LoanTemplates_Set1003Page1(strRowID)
    
    FRM_Logger_ReportInfoEvent "Set Data to 1003Page1", "Set 1003Page1 Data using Row Id '"&strRowID&"' in the Settings", null
    
    Dim objData,objbtnSave,objDialog,strFormsList2,strPurchasePrice
    
    Set objData    = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
    Set objDialog  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")
	Set objbtnSave = objDialog.SwfButton("swfname:=saveBtn")
    
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
    strFormsList2 = CStr(FRM_DS_GetValue(objData, "FormsList2"))
	If Not UTIL_String_IsEmpty(strFormsList2) Then
		   GUI_SwfList_Select objDialog.SwfList("swfname:=emFormMenuBox"),strFormsList2
	End If
	
	GUI_WebCheckBox_Set objDialog.Page("index:=2").WebCheckBox("html id:=__cid_CheckBox3_Ctrl","index:=2"),"ON"
	
	strPurchasePrice = CStr(FRM_DS_GetValue(objData, "PurchasePrice"))
	If UTIL_String_IsNotEmpty(strPurchasePrice) Then	
	   GUI_WebEdit_Set objDialog.Page("index:=2").WebEdit("html id:=l_136","index:=2"), strPurchasePrice 
	End If
				
	GUI_SwfButton_Click(objbtnSave)
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
				
	Set objData	   = Nothing
	Set objDialog  = Nothing
	Set objbtnSave = Nothing
	
End Function



'This function is used to Set Data Field
'@code
'    BIZ_LoanTemplates_SetField(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet

Function BIZ_LoanTemplates_SetField(strRowID)
    
    FRM_Logger_ReportInfoEvent "Set Data to Borrower", "Set Borrower Data using Row Id '"&strRowID&"' in the Settings", null
    
    Dim  objData,objSettings,objLoanProgramList,objScrollbar,objDialog,objbtnSave,strLoanDoc,strLoanPurpose,strProperty,strLoanType,strLienPosition,strAmortizationType,strNoteRate,strTermIn,strDueIn
	
    Set objData             = FRM_DS_GetTestData("Settings_LoanTemplates", "SetLoanProgram", strRowID)
    Set objSettings         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
    Set objDialog           = objSettings.SwfWindow("swfname:=LoanProgramDialog")
	Set objbtnSave          = objDialog.SwfButton("swfname:=btnOK")
    Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
    
	Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	strLoanDoc = CStr(FRM_DS_GetValue(objData, "LoanDoc"))
	If UTIL_String_IsNotEmpty(strLoanDoc) Then
	   GUI_SwfComboBox_Select objDialog.SwfComboBox("swfname:=cboDocTypeCode"),strLoanDoc
	End If
	
	GUI_SwfObject_Click objDialog.SwfObject("swfname:=btnSelectClosingCost")
	Set objClosingCostTemplateList = objDialog.SwfWindow("swfname:=TemplateSelectionDialog").SwfObject("swfname:=gvDirectory") 
	GUI_List_ClickRow objClosingCostTemplateList, objClosingCostTemplateList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", "Companywide", True, False, False, "Double"
	GUI_List_ClickRow objClosingCostTemplateList, objClosingCostTemplateList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", "AutoLoanProgramClosingCostTemplate", True, False, False, "Single"
    GUI_SwfButton_Click objDialog.SwfWindow("swfname:=TemplateSelectionDialog").SwfButton("swfname:=selectBtn","index:=0") 
	 
	strLoanPurpose = CStr(FRM_DS_GetValue(objData, "LoanPurpose"))
	If UTIL_String_IsNotEmpty(strLoanPurpose) Then
	   GUI_WebList_Select objDialog.Page("index:=14").WebList("html id:=DropdownBox3","index:=14"),strLoanPurpose
	End If

	strProperty = CStr(FRM_DS_GetValue(objData, "Property"))
	If UTIL_String_IsNotEmpty(strProperty) Then
	   GUI_WebList_Select objDialog.Page("index:=15").WebList("html id:=DropdownBox4","index:=15"),strProperty
	End If
	
	strLoanType = CStr(FRM_DS_GetValue(objData, "LoanType"))
	If UTIL_String_IsNotEmpty(strLoanType) Then
	   GUI_WebList_Select objDialog.Page("index:=8").WebList("html id:=DropdownBox12","index:=8"),strLoanType
	End If
	
	strLienPosition = CStr(FRM_DS_GetValue(objData, "LienPosition"))
	If UTIL_String_IsNotEmpty(strLienPosition) Then
	   GUI_WebList_Select objDialog.Page("index:=9").WebList("html id:=DropdownBox13","index:=9"),strLienPosition
	End If
	
	strAmortizationType = CStr(FRM_DS_GetValue(objData, "AmortizationType"))
	If UTIL_String_IsNotEmpty(strAmortizationType) Then
	   GUI_WebList_Select objDialog.Page("index:=10").WebList("html id:=DropdownBox14","index:=10"),strAmortizationType
	End If
	
	strNoteRate = CStr(FRM_DS_GetValue(objData, "NoteRate"))
	If UTIL_String_IsNotEmpty(strNoteRate) Then
	   GUI_WebEdit_Set objDialog.Page("index:=63").WebEdit("html id:=TextBox11","index:=63"),strNoteRate
	End If
	
	strTermIn = CStr(FRM_DS_GetValue(objData, "TermIn"))
	If UTIL_String_IsNotEmpty(strTermIn) Then
	   GUI_WebEdit_Set objDialog.Page("index:=57").WebEdit("html id:=TextBox16","index:=57"),strTermIn
	End If
	
	strDueIn = CStr(FRM_DS_GetValue(objData, "DueIn"))
	If UTIL_String_IsNotEmpty(strDueIn) Then
	   GUI_WebEdit_Set objDialog.Page("index:=56").WebEdit("html id:=TextBox15","index:=56"),strDueIn
	End If
	
	GUI_SwfButton_Click(objbtnSave)
	
	Set objData		        = Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objDialog           = Nothing
	Set objbtnSave          = Nothing
	Set objScrollbar 		= Nothing
	
End Function



'This function is used for Select Template 
'@code
'    BIZ_LoanTemplates_SelectTemplate(strTemplateName,strSubLoantemplate)
'@endcode
'@param strTemplateName    - Name of Loan Template
'@param strSubLoantemplate - The name of sub items in Loan template 

Function BIZ_LoanTemplates_SelectTemplate(strTemplateName,strSubLoantemplate)
	
	FRM_Logger_ReportInfoEvent "Select '"&strTemplateName&"' Template", "Select '"&strTemplateName&"' Template to current loan", null
    
    Dim objSettings,objLoanProgramList,objScrollBar,objDialog
	
	Set objDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TemplateSelectionDialog").Dialog("text:=Encompass")
	
	Select Case Lcase (strSubLoantemplate)
        
		Case LCase("Affiliated Business Arrangement Templates"),LCase("SettlementServiceProvider"),LCase("Data Templates")
            Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TemplateSelectionDialog")
            Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
			Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
			
		Case Lcase("Loan Programs")
            Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanProgramSelect")
            Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
			Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
						
		Case Else
             FRM_Logger_ReportFailEvent "Select Option", "Loan template option doesn't exists in select case", null
    End Select
         
	GUI_Object_WaitTillExistX objSettings.SwfButton("swfname:=selectBtn"),60
	GUI_List_ClickRow objLoanProgramList, objScrollBar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfButton_Click objSettings.SwfButton("swfname:=selectBtn")
	
	'This Popup is not Exist in all Instances,For handling purpose we can use 
	If GUI_Object_IsExist(objDialog) = True Then
	   GUI_Dialog_Encompass_Yes "Yes"
	End If
	
	FRM_Logger_ReportInfoEvent "Select '"&strTemplateName&"' Template", "'"&strTemplateName&"' Should be Selected", null
	
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
	Set objDialog           = Nothing
	
End Function



'This function is used to Create new Data Template	
'@code
'    BIZ_LoanTemplates_CreateDataTemplate(strRowID,strFolderName)
'@endcode
'@param strRowID      - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strFolderName

Function BIZ_LoanTemplates_CreateDataTemplate(strRowID,strFolderName)
    
	
	
	Dim objData,objSettings,objLoanProgramList,strDataTemplateName,intGetNewRowIndex 
	
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "DataTemplate", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	'Select folder
	GUI_Object_WaitTillExistX objSettings, 60
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strfoldername
	'Get the initial Row Count
	intInitialRowCount = objLoanProgramList.Object.Items.Count
	
	strDataTemplateName = CStr(FRM_DS_GetValue(objData, "DataTemplateName")) 
	boolIsFound = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strDataTemplateName, True, False, False, "Single")
	'msgbox "boolIsFound"&boolIsFound
	If NOT boolIsFound Then
		FRM_Logger_ReportInfoEvent "Create New Data Template", "New Data Template Creation Started", null
	'Create Template
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	
	
		GUI_Object_WaitTillExistX objSettings, 60
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strDataTemplateName 
		GUI_SwfObject_Click objLoanProgramList
	
		'Validate newly created Template in the Grid
		GUI_Object_WaitTillExistX objLoanProgramList, 180
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	
		intGetNewRowIndex  = GUI_List_GetRowIndex(objLoanProgramList, "Name", strDataTemplateName)
		'Get the final Row Count
		intFinalRowCount = objLoanProgramList.Object.Items.Count
	
		'Sometimes GUI_List_GetRowIndex does not return the index of the new row created due to sync issues
		'hence adding an additional check that intFinalRowCount = intInitialRowCount + 1	
		'If(intGetNewRowIndex >= 0) Then 
		If(intGetNewRowIndex >= 0) Or (intFinalRowCount=intInitialRowCount+1) Then
			FRM_Logger_ReportPassEvent "Create Data Template","New Data Template Created with name '"&strDataTemplateName&"'",null
		Else 
			FRM_Logger_ReportFailEvent "Create Data Template","New Data Template is not created",null
		End If
		BIZ_LoanTemplates_AddDescriptionToExistingDataTemplate "PTAC-1368_LoanTemplates_DataTemplate",strDataTemplateName
		BIZ_LoanPrograms_OpenTemplate strDataTemplateName
		LoanTemplates_DataTemplateDetails_SetDataInForms "PTAC-1498_LoanTemplates_DataTemplate"
	Else
		FRM_Logger_ReportInfoEvent "Data Template", "New DataTemplate already created", null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	BIZ_LoanTemplates_CreateDataTemplate =  strDataTemplateName
    
End Function



'This function is used to Add DataTemplate Description to Existing Template
'@code
'    BIZ_LoanTemplates_AddDescriptionToExistingDataTemplate(strRowID,strDataTemplateName)
'@endcode
'@param strRowID            - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strDataTemplateName - The name of a DataTemplate

Function BIZ_LoanTemplates_AddDescriptionToExistingDataTemplate(strRowID,strDataTemplateName)
    
    FRM_Logger_ReportInfoEvent "Add Description to Existing Template", "Click On Edit using Row Id '"&strRowID&"' in the Settings", null
    
	Dim objData,objSettings,objLoanProgramList,objScrollbar,objDialog,objEditor,objbtnSave,boolVal,strRESPATILAFormVersion,strDataTemplateDescription
	
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "DataTemplate", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar       = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDialog          = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")
	Set objEditor          = objDialog.SwfEditor("swfname:=descTxt") 
	Set objbtnSave         = objDialog.SwfButton("swfname:=saveBtn")				
    
    boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strDataTemplateName, True, False, False, "Single")
	
	If boolVal Then
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
		GUI_Object_WaitTillExistX objEditor, 300 
		
        strRESPATILAFormVersion = CStr(FRM_DS_GetValue(objData, "RESPATILAFormVersion"))
	    If Not UTIL_String_IsEmpty(strRESPATILAFormVersion) Then
	    	GUI_SwfComboBox_Select objDialog.SwfComboBox("swfname:=cboRESPAVersion"),strRESPATILAFormVersion
	   	End If
		
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		
	    strDataTemplateDescription = CStr(Trim(FRM_DS_GetValue(objData, "DataTemplateDescription")))
	    If Not UTIL_String_IsEmpty(strDataTemplateDescription) Then
	    	GUI_SwfEditor_Type objEditor,strDataTemplateDescription
	   	End If
    Else 
		FRM_Logger_ReportFailEvent "Add Description To Existing Template", "'"&strDataTemplateName &"' Template doesn't found in the Grid", null
	End If
	
	GUI_SwfButton_Click(objbtnSave) 
	
	Set objData	            = Nothing
    Set objSettings         = Nothing
	Set objLoanProgramList  = Nothing
	Set objDialog           = Nothing
    Set objScrollbar        = Nothing
	Set objEditor           = Nothing
	Set objbtnSave          = Nothing

End Function



'This function is used to create new Closing Costs template
'@code
'    BIZ_LoanTemplates_CreateClosingCost(strRowID, strItemization)
'@endcode
'@param strRowID       - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strItemization - "2015 Itemization" or "2010 Itemization" - To select correct template

Function BIZ_LoanTemplates_CreateClosingCost(strRowID, strItemization,strRowID2)
	
	FRM_Logger_ReportInfoEvent "Create new Closing Costs template", "Create new Closing Costs template with name: " & strClosingCostTemplate, null

	Dim objData,objSettings,objClosingCostsList
	
	Set objData               = FRM_DS_GetTestData("Settings_LoanTemplates", "ClosingCost", strRowID)
	Set objSettings           = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objClosingCostsList   = objSettings.SwfObject("swfname:=gvDirectory")
	Set objScrollbar          = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	
	strClosingCostTemplate = CStr(FRM_DS_GetValue(objData, "ClosingCostTemplateName"))
	boolTextExist = GUI_List_ClickRow (objClosingCostsList,objScrollbar, "Name", strClosingCostTemplate, True, False, False, "Single")
	IF NOT boolTextExist Then
		GUI_Object_Click objSettings.SwfObject("swfname:=btnAdd"), "SwfObject", "Add Closing Costs Template"
	
		If strItemization = "2015 Itemization" Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=CreateNewTemplateDialog").SwfRadioButton("swfname:=rdo2015")
		Else
			GUI_SwfRadioButton_Click SwfWindow("swfname:=CreateNewTemplateDialog").SwfRadioButton("swfname:=rdo2010")
		End If
	
		GUI_SwfObject_Click SwfWindow("swfname:=CreateNewTemplateDialog").SwfButton("swfname:=btnOK")
		
	
		If UTIL_String_IsNotEmpty(strClosingCostTemplate) Then
			'GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit"), trim(strClosingCostTemplate)
			objSettings.SwfEdit("micclass:=SwfEdit").Type trim(strClosingCostTemplate)
			UTIL_Win_SendKey "{ENTER}"
		End If
		GUI_Object_Click objClosingCostsList, "SwfObject", "Closing Cost Template List"
	
		boolTextExist = GUI_List_ClickRow (objClosingCostsList,objScrollbar, "Name", strClosingCostTemplate, True, False, False, "Single")
		FRM_VerifyEqual boolTextExist, True, "Closing Cost template Creation", "Created Template with name '"&strClosingCostTemplate&"'"
		wait 10
		'LoanTemplates_SetClosingCostTemplateFieldValues_2015Itemization "PTAC-1372_LoanTemplates_2015Itemization",strClosingCostTemplate
		LoanTemplates_SetClosingCostTemplateFieldValues_2015Itemization strRowID2,strClosingCostTemplate
	Else
		FRM_Logger_ReportInfoEvent "Closing Cost Template", "New ClosingCost Template already created", null
    End If
	Set objData               = Nothing
	Set objSettingsWindow     = Nothing
	Set objClosingCostsList   = Nothing
	
	BIZ_LoanTemplates_CreateClosingCost = strClosingCostTemplate
End Function



'This function is used to Add Description to ClosingCost Template
'@code
'    BIZ_LoanTemplates_AddDescriptionToExistingClosingCostTemplate(strRowID,strClosingCostTemplate)
'@endcode
'@param strRowID               - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strClosingCostTemplate - The name of a strClosingCostTemplate

Function BIZ_LoanTemplates_AddDescriptionToExistingClosingCostTemplate(strRowID,strClosingCostTemplate)
    
    FRM_Logger_ReportInfoEvent "Add Description to ClosingCost Template", "Click On Edit using Row Id '"&strRowID&"' in the Settings", null
    
	Dim objData,objSettings,objLoanProgramList,objScrollbar,objbtnSave
    
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "ClosingCost", strRowID)
    Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar       = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objbtnSave         = objSettings.SwfWindow("swfname:=TemplateDialog").SwfButton("swfname:=saveBtn")
	Set objEditor          = objSettings.SwfWindow("swfname:=TemplateDialog").SwfEditor("swfname:=descTxt") 
	
	boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strClosingCostTemplate, True, False, False, "Double")
	
	If boolVal Then

		GUI_Object_WaitTillExistX objEditor, 300 
		strClosingCostDescription = CStr(FRM_DS_GetValue(objData, "ClosingCostDescription"))
	    If UTIL_String_IsNotEmpty(strClosingCostDescription) Then
	    	GUI_SwfEditor_Type objEditor,strClosingCostDescription
	   	End If
    Else 
		FRM_Logger_ReportFailEvent "Add Description to ClosingCost Template", "'"&strClosingCostTemplate &"' template doesn't found in the Grid", null
	End If
	
	GUI_SwfButton_Click(objbtnSave) 
	   
    Set objData            = Nothing
    Set objSettings        = Nothing
    Set objLoanProgramList = Nothing
    Set objScrollbar       = Nothing
	Set objbtnSave         = Nothing
	Set objEditor          = Nothing

End Function



'This function is used to Create New Affiliate Template
'@code
'    BIZ_LoanTemplates_CreateAffiliateTemplate(strRowID,strFolderName)
'@endcode
'@param strRowID      - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strFolderName

Function BIZ_LoanTemplates_CreateAffiliateTemplate(strRowID,strFolderName)
    
	Dim objData,objSettings,objLoanProgramList,strAffiliateTemplateName,intGetNewRowIndex 
	
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "AffiliateTemplate", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	'Select folder
	GUI_Object_WaitTillExistX objSettings, 60
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strfoldername
	
	strAffiliateTemplateName = CStr(FRM_DS_GetValue(objData, "AffiliateTemplateName")) 
	boolIsFound = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strAffiliateTemplateName, True, False, False, "Single")
	'msgbox "boolIsFound"&boolIsFound
	
	If NOT boolIsFound Then
		FRM_Logger_ReportInfoEvent "Create Affiliate Template", "New Affiliate Template Creation started", null
	'Create Template
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	
	
		GUI_Object_WaitTillExistX objSettings, 60
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strAffiliateTemplateName 
		GUI_SwfObject_Click objLoanProgramList
	
		'Validate newly created Template in the Grid
		GUI_Object_WaitTillExistX objLoanProgramList, 180
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		intGetNewRowIndex  = GUI_List_GetRowIndex(objLoanProgramList, "Name", strAffiliateTemplateName)
	
		If(intGetNewRowIndex >= 0) Then 
			FRM_Logger_ReportPassEvent "Create Affiliate Template","New Affiliate Template Created with name '"&strAffiliateTemplateName&"'",null
		Else 
			FRM_Logger_ReportFailEvent "Create Affiliate Template","New Affiliate Template is not created",null
		End If
		BIZ_LoanTemplates_AddDescriptionToExistingAffiliateTemplate "PTAC-1376_LoanTemplates_AffiliateTemplate_Edit",strAffiliateTemplateName
		Wait g_LongWaitLarge
		LoanTemplates_SetAffiliateTemplateDetails "PTAC-1376_LoanTemplates_AffiliateTemplate_Edit",strAffiliateTemplateName
	Else
		FRM_Logger_ReportInfoEvent "Affiliate Template", "New AffiliateTemplate already created", null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	BIZ_LoanTemplates_CreateAffiliateTemplate =  strAffiliateTemplateName
    
End Function



'This function is used to Add Description To Existing Affiliate Template
'@code
'    BIZ_LoanTemplates_AddDescriptionToExistingAffiliateTemplate(strRowID,strAffiliateTemplateName)
'@endcode
'@param strRowID                 - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strAffiliateTemplateName - The name of a Affiliate Template

Function BIZ_LoanTemplates_AddDescriptionToExistingAffiliateTemplate(strRowID,strAffiliateTemplateName)

    FRM_Logger_ReportInfoEvent "Add Description To Existing Affiliate Template", "Add Affiliate Template Description using Row Id '"&strRowID&"' in the Settings", null
    
    Dim objData,objSettings,objLoanProgramList,objScrollbar,objDialog,objSaveBtn,objEditor,objAdd,strAffiliateTemplateDescription
    
	Set objData             = FRM_DS_GetTestData("Settings_LoanTemplates", "AffiliateTemplate", strRowID)
    Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDialog	        = objSettings.SwfWindow("swfname:=AffiliateTemplateDialog")
	Set objSaveBtn          = ObjDialog.SwfButton("swfname:=btnSave")
	Set objEditor  	        = ObjDialog.SwfEditor("swfname:=descTxt")
	Set objAdd     	        = ObjDialog.SwfObject("swfname:=btnIconAdd")
			
    strAffiliateTemplateDescription = CStr(FRM_DS_GetValue(objData, "AffiliateTemplateDescription"))
    
    boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strAffiliateTemplateName, True, False, False, "Single")
    
    If boolVal Then
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
        
        GUI_Object_WaitTillExistX objEditor,60
        
        If UTIL_String_IsNotEmpty(strAffiliateTemplateDescription) Then
            GUI_SwfEditor_Type objEditor,strAffiliateTemplateDescription
        End If
        
		GUI_SwfObject_Click objAdd
		GUI_Object_WaitTillExistX objSettings, 300 		
		GUI_SwfButton_Click(objSaveBtn)
    Else 
        FRM_Logger_ReportFailEvent "Add Description To Existing Affiliate Template", "'"&strAffiliateTemplateName &"' template doesn't found in the Grid", null
    End If
	
	Set objData				= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
	Set objDialog           = Nothing
	Set objSaveBtn			= Nothing
	Set objEditor			= Nothing
	Set objAdd			    = Nothing	
	
End Function



'This function is used to Create New Settlement Service Template
'@code
'    BIZ_LoanTemplates_CreateSettlementServiceTemplate(strRowID,strFolderName)
'@endcode
'@param strRowID      - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strFolderName

Function BIZ_LoanTemplates_CreateSettlementServiceTemplate(strRowID,strFolderName)
    
	FRM_Logger_ReportInfoEvent "Create Settlement Service Template", "New Settlement Service Template Creation started", null
	 
	Dim objData,objSettings,objLoanProgramList,strSettlementServiceTemplate,intGetNewRowIndex 
	
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "SettlementServiceTemplate", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	'Select folder
	GUI_Object_WaitTillExistX objSettings, 60
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strfoldername
	
	strSettlementServiceTemplate = CStr(FRM_DS_GetValue(objData, "SettlementServiceTemplateName")) 
	boolIsFound = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strSettlementServiceTemplate, True, False, False, "Single")
	'msgbox "boolIsFound"&boolIsFound
	If NOT boolIsFound Then
		FRM_Logger_ReportInfoEvent "Create Settlement Service Template", "New Settlement Service Template Creation started", null
		'Create Template
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	
	
		GUI_Object_WaitTillExistX objSettings, 60
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strSettlementServiceTemplate 
		GUI_SwfObject_Click objLoanProgramList
	
		'Validate newly created Template in the Grid
		GUI_Object_WaitTillExistX objLoanProgramList, 180
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		intGetNewRowIndex  = GUI_List_GetRowIndex(objLoanProgramList, "Name", strSettlementServiceTemplate)
	
		If(intGetNewRowIndex >= 0) Then 
			FRM_Logger_ReportPassEvent "Create Settlement Service Template","New Settlement Service Template Created with name '"&strSettlementServiceTemplate&"'",null
		Else 
			FRM_Logger_ReportFailEvent "Create Settlement Service Template","New Settlement Service Template is not created",null
		End If
		LoanTemplates_SetSettlementServiceTemplateDetails "PTAC-1531_LoanTemplates_SettlementService_Edit",strSettlementServiceTemplate
	Else
		FRM_Logger_ReportInfoEvent "Settlement Service Template", "New Settlement Service Template already created", null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	BIZ_LoanTemplates_CreateSettlementServiceTemplate =  strSettlementServiceTemplate
    
End Function



'This function is used to Add Description To Existing Settlement Service Template
'@code
'    BIZ_LoanTemplates_AddDescriptionToExistingSettlementServiceTemplate(strRowID,strSettlementServiceTemplate)
'@endcode
'@param strRowID                         - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strSettlementServiceTemplate     - The name of a Settlement Service Template

Function BIZ_LoanTemplates_AddDescriptionToExistingSettlementServiceTemplate(strRowID,strSettlementServiceTemplate)

    FRM_Logger_ReportInfoEvent "Add Description To Existing Settlement Service Template", "Add Settlement Service Template Description using Row Id '"&strRowID&"' in the Settings", null
    
    Dim objData,objSettings,objLoanProgramList,objScrollbar,objDialog,objSaveBtn,objEditor,objAdd,strSettlementServiceTemplateDescription
    
	Set objData             = FRM_DS_GetTestData("Settings_LoanTemplates", "SettlementServiceTemplate", strRowID)
    Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDialog	        = objSettings.SwfWindow("swfname:=SettlementServiceTemplateDialog")
	Set objSaveBtn          = ObjDialog.SwfButton("swfname:=btnSave")
	Set objEditor  	        = ObjDialog.SwfEditor("swfname:=descTxt")
	Set objAdd     	        = ObjDialog.SwfObject("swfname:=btnIconAdd")
			
    boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strSettlementServiceTemplate, True, False, False, "Single")
    
    If boolVal Then
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
        GUI_Object_WaitTillExistX objEditor,60
		strSettlementServiceTemplateDescription = CStr(FRM_DS_GetValue(objData, "SettlementServiceTemplateDescription"))
        If UTIL_String_IsNotEmpty(strSettlementServiceTemplateDescription) Then
            GUI_SwfEditor_Type objEditor,strSettlementServiceTemplateDescription
        End If
		
		strAdditionalInfo = CStr(FRM_DS_GetValue(objData, "AdditionalInfo"))
		If UTIL_String_IsNotEmpty(strAdditionalInfo) Then
		   GUI_SwfEditor_Type objDialog.SwfEditor("swfname:=additionalInfo"),strAdditionalInfo
		End If
        
		GUI_SwfObject_Click objAdd
		GUI_Object_WaitTillExistX objSettings, 30 		
		GUI_SwfButton_Click(objSaveBtn)
    Else 
        FRM_Logger_ReportFailEvent "Add Description To Existing Settlement Service Template", "'"&strSettlementServiceTemplate &"' template doesn't found in the Grid", null
    End If
	
	Set objData				= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
	Set objDialog           = Nothing
	Set objSaveBtn			= Nothing
	Set objEditor			= Nothing
	Set objAdd			    = Nothing	
	
End Function



'This function is used to Create New Task Set Template
'@code
'    BIZ_LoanTemplates_CreateTaskSetTemplate(strRowID,strFolderName)
'@endcode
'@param strRowID      - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strFolderName

Function BIZ_LoanTemplates_CreateTaskSetTemplate(strRowID,strFolderName)
    
	
	 
	Dim objData,objSettings,objLoanProgramList,strTaskSetTemplate,intGetNewRowIndex 
	
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "TaskSetTemplate", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	'Select folder
	GUI_Object_WaitTillExistX objSettings, 60
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strfoldername
	
	strTaskSetTemplate = CStr(FRM_DS_GetValue(objData, "TaskSetTemplateName")) 
	boolIsFound = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strTaskSetTemplate, True, False, False, "Single")
	'msgbox "boolIsFound"&boolIsFound
	If NOT boolIsFound Then
		'Create Template
		FRM_Logger_ReportInfoEvent "Create Task Set Template", "New Task Set Template Creation started", null
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	
	
		GUI_Object_WaitTillExistX objSettings, 60
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strTaskSetTemplate 
		GUI_SwfObject_Click objLoanProgramList
	
		'Validate newly created Template in the Grid
		GUI_Object_WaitTillExistX objLoanProgramList, 180
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		intGetNewRowIndex  = GUI_List_GetRowIndex(objLoanProgramList, "Name", strTaskSetTemplate)
	
		If(intGetNewRowIndex >= 0) Then 
			FRM_Logger_ReportPassEvent "Create Task Set Template","New Task Set Template Created with name '"&strTaskSetTemplate&"'",null
		Else 
			FRM_Logger_ReportFailEvent "Create Task Set Template","New Task Set Template is not created",null
		End If
		strPredefinedData1 = BIZ_LoanTemplates_EditExistingTaskSetTemplate ("PTAC-1538_LoanTemplates_TaskSet_Edit",strTaskSetTemplate)
	Else
		FRM_Logger_ReportInfoEvent "TaskSet Template", "New TaskSet Template already created", null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	BIZ_LoanTemplates_CreateTaskSetTemplate =  strTaskSetTemplate
    
End Function



'This function is used to Add Description To Existing Task Set Template
'@code
'    BIZ_LoanTemplates_EditExistingTaskSetTemplate(strRowID,strTaskSetTemplate)
'@endcode
'@param strRowID           - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strTaskSetTemplate - The name of a Task Set Template

Function BIZ_LoanTemplates_EditExistingTaskSetTemplate(strRowID,strTaskSetTemplate)

    FRM_Logger_ReportInfoEvent "Add Description To Existing Task Set Template", "Add Task Set Template Description using Row Id '"&strRowID&"' in the Settings", null
    
    Dim objData,objSettings,objLoanProgramList,objScrollbar,objDialog,objSaveBtn,objEditor,objAddBtn,strTaskSetTemplateDescription,boolVal,intRowCount,intColumnIndex,strCellData
    
	Set objData             = FRM_DS_GetTestData("Settings_LoanTemplates", "TaskSetTemplate", strRowID)
    Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDialog	        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TaskSetTemplateDialog")
	Set objSaveBtn          = objDialog.SwfButton("swfname:=saveBtn")
	Set objEditor  	        = objDialog.SwfEditor("swfname:=descTxt")
	Set objFormsList 		= objDialog.SwfObject("swfname:=gridPredefined")  
	Set objcmbBoxMilestones	= objDialog.SwfComboBox("swfname:=cmbBoxMilestones")
	Set objAddBtn			= objDialog.SwfButton("swfname:=addBtn")
	
    boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strTaskSetTemplate, True, False, False, "Single")
    
    If boolVal Then
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
        GUI_Object_WaitTillExistX objEditor,60
		strTaskSetTemplateDescription = CStr(FRM_DS_GetValue(objData, "TaskSetTemplateDescription"))
        If UTIL_String_IsNotEmpty(strTaskSetTemplateDescription) Then
            GUI_SwfEditor_Type objEditor,strTaskSetTemplateDescription
        End If
	
		GUI_Object_WaitTillExistX objSettings, 300 
		
		strMilestone = CStr(FRM_DS_GetValue(objData, "Milestone"))
		If UTIL_String_IsNotEmpty(strMilestone) Then
			GUI_Object_WaitTillExistX objcmbBoxMilestones, 300
			FRM_Logger_ReportInfoEvent "Select Milestone", "Select '"&strMilestone&"'", null
			GUI_SwfComboBox_Select objcmbBoxMilestones, strMilestone
		End If
		
		intRowCount    = GUI_List_GetNumberofRows(objFormsList)
		intColumnIndex = GUI_List_GetColumnIndex(objFormsList,"Name")
		strCellData    = GUI_List_GetCellData(objFormsList,intRowCount-1,intColumnIndex)
		GUI_List_ClickOnCell objFormsList, objDialog.SwfScrollBar("swfname:=vPanelScrollBar"),intRowCount-1, intColumnIndex, True, False, False, "Single"
		GUI_SwfButton_Click objAddBtn
		GUI_SwfButton_Click(objSaveBtn)
    Else 
        FRM_Logger_ReportFailEvent "Add Description To Existing Task Set Template", "'"&strTaskSetTemplate &"' template doesn't found in the Grid", null
    End If
	
	Set objData				= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
	Set objDialog           = Nothing
	Set objSaveBtn			= Nothing
	Set objEditor			= Nothing
	Set objFormsList        = Nothing
	Set objcmbBoxMilestones = Nothing
	Set objAddBtn			= Nothing

	BIZ_LoanTemplates_EditExistingTaskSetTemplate = strCellData
	
End Function



'This function is used to Create New Document Set Template
'@code
'    BIZ_LoanTemplates_CreateDocumentSetTemplate(strRowID,strFolderName)
'@endcode
'@param strRowID      - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strFolderName

Function BIZ_LoanTemplates_CreateDocumentSetTemplate(strRowID,strFolderName)
    
	
	 
	Dim objData,objSettings,objLoanProgramList,strDocumentSetTemplate,intGetNewRowIndex 
	
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "DocumentSetTemplate", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	'Select folder
	GUI_Object_WaitTillExistX objSettings, 60
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strfoldername
	
	strDocumentSetTemplate = CStr(FRM_DS_GetValue(objData, "DocumentSetTemplateName")) 
	boolIsFound = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strDocumentSetTemplate, True, False, False, "Single")
	'msgbox "boolIsFound"&boolIsFound
	If NOT boolIsFound Then
		FRM_Logger_ReportInfoEvent "Create Document Set Template", "New Document Set Template Creation started", null
		'Create Template
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	
	
		GUI_Object_WaitTillExistX objSettings, 60
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strDocumentSetTemplate 
		GUI_SwfObject_Click objLoanProgramList
	
		'Validate newly created Template in the Grid
		GUI_Object_WaitTillExistX objLoanProgramList, 180
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		intGetNewRowIndex  = GUI_List_GetRowIndex(objLoanProgramList, "Name", strDocumentSetTemplate)
	
		If(intGetNewRowIndex >= 0) Then 
			FRM_Logger_ReportPassEvent "Create Document Set Template","New Document Set Template Created with name '"&strDocumentSetTemplate&"'",null
		Else 
			FRM_Logger_ReportFailEvent "Create Document Set Template","New Document Set Template is not created",null
		End If
		wait 10
		BIZ_LoanTemplates_EditExistingDocumentSetTemplate "PTAC-1499_LoanTemplates_DocumentSet_Edit",strDocumentSetTemplate
		wait 10
		BIZ_LoanTemplates_EditExistingDocumentSetTemplate "PTAC-1382_LoanTemplates_DocumentSet_Edit",strDocumentSetTemplate
		LoanTemplates_VerifyDocumentSetTemplateDescription "PTAC-1499_LoanTemplates_DocumentSet_Edit",strDocumentSetTemplate
		LoanTemplates_VerifyDocumentsInTrackedDocumentList strDocumentSetTemplate, "PTAC-1499_LoanTemplates_DocumentSet_Edit", "PTAC-1382_LoanTemplates_DocumentSet_Edit"
	Else
		FRM_Logger_ReportInfoEvent "DocumentSet Template", "New DocumentSet Template already created", null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	BIZ_LoanTemplates_CreateDocumentSetTemplate =  strDocumentSetTemplate
    
End Function



'This function is used to Add Description To Existing Document Set Template
'@code
'    BIZ_LoanTemplates_EditExistingDocumentSetTemplate(strRowID,strDocumentSetTemplate)
'@endcode
'@param strRowID               - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strDocumentSetTemplate - The name of a Document Set Template

Function BIZ_LoanTemplates_EditExistingDocumentSetTemplate(strRowID,strDocumentSetTemplate)

    FRM_Logger_ReportInfoEvent "Add Description To Existing Document Set Template", "Add Document Set Template Description using Row Id '"&strRowID&"' in the Settings", null
    
    Dim objData,objSettings,objLoanProgramList,objScrollbar,objDialog,objSaveBtn,objEditor,objFormsList,objcmbBoxMilestones,objAddBtn,strDocumentSetTemplateDescription,boolVal,strMilestone,arrAddPredefinedData
    
	Set objData             = FRM_DS_GetTestData("Settings_LoanTemplates", "DocumentSetTemplate", strRowID)
    Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDialog	        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DocumentSetTemplateDialog")
	Set objSaveBtn          = objDialog.SwfButton("swfname:=saveBtn")
	Set objEditor  	        = objDialog.SwfEditor("swfname:=descTxt")
	Set objFormsList 		= objDialog.SwfObject("swfname:=gridPredefined") 
	Set objcmbBoxMilestones = objDialog.SwfComboBox("swfname:=cmbBoxMilestones|stageCombo")
	Set objAddBtn			= objDialog.SwfButton("swfname:=addBtn")
			
    boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strDocumentSetTemplate, True, False, False, "Single")
    
    If boolVal Then
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
        GUI_Object_WaitTillExistX objEditor,60
		strDocumentSetTemplateDescription = CStr(FRM_DS_GetValue(objData, "DocumentSetTemplateDescription"))
        If UTIL_String_IsNotEmpty(strDocumentSetTemplateDescription) Then
            GUI_SwfEditor_Type objEditor,strDocumentSetTemplateDescription
        End If
	
		GUI_Object_WaitTillExistX objSettings, 300 
				
		strMilestone = CStr(FRM_DS_GetValue(objData, "Milestone"))
		If UTIL_String_IsNotEmpty(strMilestone) Then
			GUI_Object_WaitTillExistX objcmbBoxMilestones, 300
			FRM_Logger_ReportInfoEvent "Select Milestone", "Select '"&strMilestone&"'", null
			GUI_SwfComboBox_Select objcmbBoxMilestones, strMilestone
		End If
		
		If UTIL_String_IsNotEmpty(CStr(FRM_DS_GetValue(objData, "AddPredefinedData"))) Then
			arrAddPredefinedData = split(CStr(FRM_DS_GetValue(objData, "AddPredefinedData")),";")
			For intAdd = 0 to ubound(arrAddPredefinedData)
				GUI_List_ClickRow objFormsList, objFormsList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", cstr(arrAddPredefinedData(intAdd)), True, False, False, "Single"
				GUI_SwfButton_Click objAddBtn
			Next
		End If
			
		GUI_SwfButton_Click(objSaveBtn)
    Else 
        FRM_Logger_ReportFailEvent "Add Description To Existing Document Set Template", "'"&strDocumentSetTemplate &"' template doesn't found in the Grid", null
    End If
	
	Set objData				= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
	Set objDialog           = Nothing
	Set objSaveBtn			= Nothing
	Set objEditor			= Nothing
	Set objFormsList        = Nothing
	Set objcmbBoxMilestones = Nothing
	Set objAddBtn			= Nothing	
	
End Function



'This function is used to Create New InputForm Set Template
'@code
'    BIZ_LoanTemplates_CreateInputFormSetTemplate(strRowID,strFolderName)
'@endcode
'@param strRowID      - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strFolderName

Function BIZ_LoanTemplates_CreateInputFormSetTemplate(strRowID,strFolderName)
    
	 
	Dim objData,objSettings,objLoanProgramList,strInputFormSetTemplate,intGetNewRowIndex 
	
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "InputFormSetTemplate", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	'Select folder
	GUI_Object_WaitTillExistX objSettings, 60
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strfoldername
	
	strInputFormSetTemplate = CStr(FRM_DS_GetValue(objData, "InputFormSetTemplateName")) 
	boolIsFound = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strInputFormSetTemplate, True, False, False, "Single")
	'msgbox "boolIsFound"&boolIsFound
	If NOT boolIsFound Then
		FRM_Logger_ReportInfoEvent "Create InputForm Set Template", "New InputForm Set Template Creation started", null
	'Create Template
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	
	
		GUI_Object_WaitTillExistX objSettings, 60
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strInputFormSetTemplate 
		GUI_SwfObject_Click objLoanProgramList
	
	'Validate newly created Template in the Grid
		GUI_Object_WaitTillExistX objLoanProgramList, 180
		Wait g_LongWaitMedium				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		intGetNewRowIndex  = GUI_List_GetRowIndex(objLoanProgramList, "Name", strInputFormSetTemplate)
	
		If(intGetNewRowIndex >= 0) Then 
			FRM_Logger_ReportPassEvent "Create InputForm Set Template","New InputForm Set Template Created with name '"&strInputFormSetTemplate&"'",null
		Else 
			FRM_Logger_ReportFailEvent "Create InputForm Set Template","New InputForm Set Template is not created",null
		End If
		BIZ_LoanTemplates_AddDescriptionToExistingInputFormSetTemplate "PTAC-1388_LoanTemplates_InputFormSet_Edit",strInputFormSetTemplate
	Else
		FRM_Logger_ReportInfoEvent "InputFormSet Template", "New InputFormSet Template already created", null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	BIZ_LoanTemplates_CreateInputFormSetTemplate =  strInputFormSetTemplate
    
End Function



'This function is used to Add Description To Existing InputForm Set Template
'@code
'    BIZ_LoanTemplates_AddDescriptionToExistingInputFormSetTemplate(strRowID,strInputFormSetTemplate)
'@endcode
'@param strRowID                - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strInputFormSetTemplate - The name of a InputForm Set Template

Function BIZ_LoanTemplates_AddDescriptionToExistingInputFormSetTemplate(strRowID,strInputFormSetTemplate)

    FRM_Logger_ReportInfoEvent "Add Description To Existing InputForm Set Template", "Add InputForm Set Template Description using Row Id '"&strRowID&"' in the Settings", null
    
    Dim objData,objSettings,objLoanProgramList,objScrollbar,objDialog,objSaveBtn,objEditor,objFormsList,objAddBtn,strInputFormSetTemplateDescription,boolVal,arrAddPredefinedData
    
	Set objData             = FRM_DS_GetTestData("Settings_LoanTemplates", "InputFormSetTemplate", strRowID)
    Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objLoanProgramList  = objSettings.SwfObject("swfname:=gvDirectory")
    Set objScrollbar		= objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDialog	        = objSettings.SwfWindow("swfname:=FormListDialog")
	Set objSaveBtn          = objDialog.SwfButton("swfname:=saveBtn")
	Set objEditor  	        = objDialog.SwfEditor("swfname:=descTxt")
	Set objFormsList 		= objDialog.SwfObject("swfname:=gridPredefined") 
	Set objAddBtn			= objDialog.SwfButton("swfname:=addBtn")
			
    boolVal = GUI_List_ClickRow (objLoanProgramList, objScrollbar, "Name", strInputFormSetTemplate, True, False, False, "Single")
    
    If boolVal Then
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnOpen")
        GUI_Object_WaitTillExistX objEditor,60
		strInputFormSetTemplateDescription = CStr(FRM_DS_GetValue(objData, "InputFormSetTemplateDescription"))
        If UTIL_String_IsNotEmpty(strInputFormSetTemplateDescription) Then
            GUI_SwfEditor_Type objEditor,strInputFormSetTemplateDescription
        End If
	
		GUI_Object_WaitTillExistX objSettings, 300 
				
		If UTIL_String_IsNotEmpty(CStr(FRM_DS_GetValue(objData, "AddPredefinedData"))) Then
			arrAddPredefinedData = split(CStr(FRM_DS_GetValue(objData, "AddPredefinedData")),";")
			For intAdd = 0 to ubound(arrAddPredefinedData)
				GUI_List_ClickRow objFormsList, objFormsList.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", cstr(arrAddPredefinedData(intAdd)), True, False, False, "Single"
				FRM_Logger_ReportInfoEvent "Add Forms", "Add Forms '"&arrAddPredefinedData(intAdd)&"'", null
				GUI_SwfButton_Click objAddBtn
			Next
		End If
			
		GUI_SwfButton_Click(objSaveBtn)
    Else 
        FRM_Logger_ReportFailEvent "Add Description To Existing InputForm Set Template", "'"&strInputFormSetTemplate &"' template doesn't found in the Grid", null
    End If
	
	Set objData				= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList	= Nothing
	Set objScrollbar 		= Nothing
	Set objDialog           = Nothing
	Set objSaveBtn			= Nothing
	Set objEditor			= Nothing
	Set objFormsList        = Nothing
	Set objAddBtn			= Nothing	
	
End Function



'This function is used to Create New LoanTemplate Set Template
'@code
'    BIZ_LoanTemplates_CreateLoanTemplateSetTemplate(strRowID,strFolderName)
'@endcode
'@param strRowID      - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet
'@param strFolderName - The name of a strFolderName

Function BIZ_LoanTemplates_CreateLoanTemplateSetTemplate(strRowID,strFolderName)
    
	FRM_Logger_ReportInfoEvent "Create LoanTemplate Set Template", "New LoanTemplate Set Creation started", null
	 
	Dim objData,objSettings,objLoanProgramList,strLoanTemplateSet,intGetNewRowIndex 
	
	Set objData            = FRM_DS_GetTestData("Settings_LoanTemplates", "LoanTemplateSet", strRowID)
	Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLoanProgramList = objSettings.SwfObject("swfname:=gvDirectory")
	
	'Select folder
	GUI_Object_WaitTillExistX objSettings, 60
	GUI_SwfComboBox_Select objsettings.SwfComboBox("swfname:=cmbBoxFolder|cboFolder"), strfoldername
	
	strLoanTemplateSet = CStr(FRM_DS_GetValue(objData, "LoanTemplateSetName")) 
	boolIsFound = GUI_List_ClickRow(objLoanProgramList, objScrollbar, "Name", strLoanTemplateSet, True, False, False, "Single")
	'msgbox "boolIsFound"&boolIsFound
	If NOT boolIsFound Then
	'Create Template
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=btnAdd")
	
	
		GUI_Object_WaitTillExistX objSettings, 60
		GUI_SwfEdit_Set objSettings.SwfEdit("micclass:=SwfEdit","focused:=True"), strLoanTemplateSet 
		GUI_SwfObject_Click objLoanProgramList
	
	'Validate newly created Template in the Grid
		GUI_Object_WaitTillExistX objLoanProgramList, 180
		Wait g_LongWaitMedium				' Due To Sync Issue We Are Explicitly Passing Wait Statement
		intGetNewRowIndex  = GUI_List_GetRowIndex(objLoanProgramList, "Name", strLoanTemplateSet)
	
		If(intGetNewRowIndex >= 0) Then 
			FRM_Logger_ReportPassEvent "Create LoanTemplate Set Template","New LoanTemplate Set Created with name '"&strLoanTemplateSet&"'",null
		Else 
			FRM_Logger_ReportFailEvent "Create LoanTemplate Set Template","New LoanTemplate Setis not created",null
		End If
	Else
		FRM_Logger_ReportInfoEvent "LoanTemplate Set Template", "New LoanTemplate SET already created", null
	End If
	
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objLoanProgramList 	= Nothing
	
	BIZ_LoanTemplates_CreateLoanTemplateSetTemplate =  strLoanTemplateSet
    
End Function

'This function is used to Verify Borrower Summary Origination
'@code
'    LoanTemplates_DataTemplate_VerifyBorrowerSummaryOrigination(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Forms_BorrowerSummaryOrigination data spreadsheet

Function LoanTemplates_DataTemplate_VerifyBorrowerSummaryOrigination(strRowID)
	
	FRM_Logger_ReportStepEvent "Verify Data Template applied to Borrower Summary Origination", "Data is Verified using Row Id '"&strRowID&"' in the Forms_BorrowerSummaryOrigination datasheet", null
	
    Dim objData,objBasePage,strBorrowerType
    
    Set objData     = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)
    Set objBasePage	= SwfWindow("swfname:=MainForm").Page("micclass:=page")
    strBorrowerType = CStr(FRM_DS_GetValue(objData, "BorrowerType"))
	
	Wait g_LongWaitLarge       ' Due To Sync Issue We Are Explicitly Passing Wait Statement	
	BIZ_BorrowerSummaryOrigination_VerifyBorrower(strRowID)
	FRM_VerifyEqual Ucase(GUI_Object_GetPropertyValue(objBasePage.WebList("htmlid:=DropdownBox5","index:=2"),"value")),Ucase(strBorrowerType),"Comparing values","Values should match"
	
	Set objData		= Nothing
	Set objBasePage = Nothing
		
End Function

'This function is used to Verify 1003 Page1
'@code
'    LoanTemplates_DataTemplate_Verify1003Page1(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_LoanTemplates data spreadsheet

Function LoanTemplates_DataTemplate_Verify1003Page1(strRowID,strText)
	
	FRM_Logger_ReportStepEvent "Verify Data Template applied in 1003 Page1", "Data is Verified using Row Id '"&strRowID&"' in the Settings_LoanTemplates datasheet", null
	
    Dim objData,ObjChecked,objBasePage,strPurchasePrice,strprice,strActpurPrice,strActPurChaseprice
    
    Set objData         = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
    Set objChecked      = SwfWindow("swfname:=MainForm").Page("index:=2")
    Set objBasePage		= SwfWindow("swfname:=MainForm").Page("micclass:=page")
    
    strPurchasePrice	= CStr(FRM_DS_GetValue(objData, "PurchasePrice"))
	strprice 			= GUI_Object_GetPropertyValue(objBasePage.WebEdit("html id:=l_136"),"value")
	strActpurPrice 		= Split(strprice,".")
	strActPurChaseprice = Replace(strActpurPrice(0),",","")

	Wait g_LongWaitLarge       ' Due To Sync Issue We Are Explicitly Passing Wait Statement
	FRM_VerifyEqual strActPurChaseprice,(strPurchasePrice),"Comparing values","Values should match"
	
	If strText = "Set As Default" Then
		GUI_Object_ValidateChecked objChecked.WebCheckBox("html id:=__cid_CheckBox3_Ctrl","index:=2"),1,"Conventional"
	Else
		FRM_Logger_ReportStepEvent "As Loan Program Template and Data Template refers to same field: Loantype ", "Verify Loan Type is Other rather than Conventional", null
	
	 	GUI_Object_ValidateChecked objChecked.WebCheckBox("html id:=__cid_CheckBox7_Ctrl","index:=2"),1,"Other"
	End If
	
	Set objData	    = Nothing
	Set objChecked  = Nothing
	Set objBasePage	= Nothing
	
End Function

'This function is used to Set Data in Borrower Summary and 1003 Page 1
'@code
'    LoanTemplates_DataTemplateDetails_SetDataInForms(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Forms_BorrowerSummaryOrigination data spreadsheet

Function LoanTemplates_DataTemplateDetails_SetDataInForms(strRowID)
	
	FRM_Logger_ReportInfoEvent "Set Data in Forms", "Set Data using Row Id '"&strRowID&"' in the datasheet", null
	
    Dim objData,objDialog,objFormList,objBtnSave
   
    Set objData      = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
    Set objDialog    = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog").Page("micclass:=Page")
    Set objFormList  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DataTemplateDialog")
    Set objBtnSave   = objFormList.SwfButton("swfname:=saveBtn")
    
    Wait g_LongWaitLarge       ' Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_SwfList_Select objFormList.SwfList("swfname:=emFormMenuBox"),"Borrower Summary - Origination"
	BIZ_Common_BorrowerSummaryOrigination_SetBorrower objDialog, strRowID
    
    Wait g_LongWaitLarge       ' Due To Sync Issue We Are Explicitly Passing Wait Statement
    GUI_SwfList_Select objFormList.SwfList("swfname:=emFormMenuBox"),"1003 Page 1"
	strConventional = CStr(FRM_DS_GetValue(objData, "Conventional"))
	
	If UTIL_String_IsNotEmpty(strConventional) Then
		GUI_WebCheckBox_Set objDialog.WebCheckBox("htmlid:=__cid_CheckBox3_Ctrl","index:=2"),strConventional
	End If
	
	BIZ_Common_BorrowerSummaryOrigination_SetTransactionDetails objDialog,strRowID
	
	Wait g_LongWaitLarge       ' Due To Sync Issue We Are Explicitly Passing Wait Statement
    
	
	GUI_SwfButton_Click(objBtnSave)
    
	Set objData      = Nothing    
	Set objDialog	 = Nothing
	Set objFormList  = Nothing
	Set objbtnSave   = Nothing
	
End Function


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\LoanTemplates.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\Milestone.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_Milestone BIZ_Settings_Milestone
'
' List of functions here
' @code
'	Function BIZ_MilestoneTemplate_Delete (strTemplateName)
'	Function BIZ_Milestone_CreateCustom(strMilestoneName)
'	Function BIZ_MilestoneTemplate_SetDefaultForNewLoan(strTemplateName)
'	Function BIZ_MilestoneTemplate_Add(strTemplateName)
'	Function BIZ_MilestoneTemplate_RemoveMilestone(strMilestoneName)
'	Function BIZ_MilestoneTemplate_AddMilestone(strMilestoneToAdd)
'	Function BIZ_MilestoneTemplate_SetMilestonePosition(strMilestoneName, intPosition)
'   Function BIZ_MilestoneTemplate_DeleteAll()
'   Function BIZ_Milestone_ChangeRole(strMilestoneName,strMilestoneRole)
'	Function BIZ_CompanyUserSetup_MilestoneTemplateDuplication(strTemplateName)
'	Function BIZ_CompanyUserSetup_CreateMileStone(strRowID)
'   Function BIZ_Milestone_Rename(strActualName,strExpectedName)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Delete MilistonesTemplate
'@code
'    BIZ_MilestoneTemplate_Delete (strTemplateName)
'@endcode
'@param strTemplateName - template name that you want to Delete

Function BIZ_MilestoneTemplate_Delete (strTemplateName)

    FRM_Logger_ReportInfoEvent "Delete Milestone", "Start delete milestone '"&strTemplateName&"'", null
	
	BIZ_Nav_Settings_MilestoneTab "Milestone Templates"
	Dim objMilestoneTemplateList, isTemplatesExist, objScrollBar, objSettingWindow
    Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMilestoneTemplateList = objSettingWindow.SwfObject("swfname:=gvTemplates")
	Set objScrollBar = objSettingWindow.SwfScrollBar("swfname:=vPanelScrollBar")
	isTemplatesExist = GUI_List_ClickRow(objMilestoneTemplateList, objScrollBar, 1, strTemplateName, True, False, False, "Single")
	If isTemplatesExist Then
        GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnDeleteTemplate")
		GUI_WinButton_Click objSettingWindow.Dialog("micclass:=Dialog").WinButton("micclass:=WinButton","text:=&Yes") 
	End if
	
	FRM_Logger_ReportPassEvent "Delete Milestone Templates", "Delete milestone template '"&strTemplateName&"'", null
    
    Set objSettingWindow = nothing
    Set objMilestoneTemplateList = nothing
    Set objScrollBar = nothing
    Set isTemplatesExist = nothing
End Function



'This function allow user to create custom milestone
'@code
'    BIZ_Milestone_CreateCustom(strMilestoneName)
'    BIZ_Milestone_CreateCustom "QualificationC"
'@endcode
'@param strMilestoneName - name of the milestone

Function BIZ_Milestone_CreateCustom(strMilestoneName)

	FRM_Logger_ReportInfoEvent "Create Milestone", "Add milestone '"&strMilestoneName&"'", null
	
    '======== Go to  Company/User Setup -> Milestones========
    BIZ_Nav_Settings_MilestoneTab("Milestones")

    Dim boolMilestoneFlag, objMilestoneList, objScrollBar, isArchived, objSettingWindow, ArchiveMilestoneList
    Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objMilestoneList = objSettingWindow.SwfObject("swfname:=gvMilestones")
	Set objScrollBar = objSettingWindow.SwfScrollBar("swfname:=vPanelScrollBar")

    boolMilestoneFlag = GUI_List_ClickRow(objMilestoneList, objScrollBar, 0, strMilestoneName, True, False, False, "Single")
    If Not boolMilestoneFlag  Then
		GUI_SwfRadioButton_Click objSettingWindow.SwfRadioButton("swfname:=rdbArchived")
		Set ArchiveMilestoneList = objSettingWindow.SwfObject("swfname:=gvMilestones")
		isArchived = GUI_List_TextExists(ArchiveMilestoneList, 0, strMilestoneName+" ")
		If isArchived Then
			Set objScrollBar = objSettingWindow.SwfScrollBar("swfname:=vPanelScrollBar")
			GUI_List_ClickRow ArchiveMilestoneList, objScrollBar, 0, strMilestoneName+" ", True, False, False, "Single"
	        GUI_SwfButton_Click objSettingWindow.SwfButton("swfname:=btnArchive")	
			boolMilestoneFlag = True	        
		End If
	End If
	
	If Not boolMilestoneFlag Then
		GUI_SwfRadioButton_Click objSettingWindow.SwfRadioButton("swfname:=rdbCurrent")
        GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnNewMilestone")
        GUI_SwfEdit_Set objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfEdit("swfname:=txtName"), strMilestoneName
        If (objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfEdit("swfname:=txtDisplayBefore").GetROProperty("text")="") Then
        GUI_SwfEdit_Set objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfEdit("swfname:=txtDisplayBefore"), strMilestoneName
        End If
        GUI_SwfObject_Click objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfObject("swfname:=btnPickColor")
		Wait g_TinyWaitMedium 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
        GUI_WinButton_Click objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").Dialog("micClass:=Dialog").WinButton("regexpwndtitle:=OK")
        GUI_SwfComboBox_Select objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfComboBox("swfname:=cboRoles"), "Loan Officer"
		wait g_TinyWaitLarge 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
        GUI_SwfCheckbox_Set objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfCheckBox("swfname:=chkRoleRequired"), "ON"
        GUI_SwfEdit_Set objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfEdit("swfname:=txtDays"), "10"
        GUI_SwfObject_Click objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfObject("swfname:=btnSelect")
		wait g_TinyWaitLarge 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
        GUI_SwfList_Select objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfWindow("swfname:=InputFormSelector").SwfList("swfname:=lstBoxInputForms"), "2010 GFE"
        GUI_SwfButton_Click objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfWindow("swfname:=InputFormSelector").SwfButton("swfname:=btnOK")
        GUI_SwfButton_Click objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfButton("swfname:=btnSave")
		wait g_TinyWaitLarge 				' Due To Sync Issue We Are Explicitly Passing Wait Statement
	
		FRM_Logger_ReportPassEvent "Create Milestone", "New milestone added:"&strMilestoneName, null
	Else
		FRM_Logger_ReportPassEvent "Create Milestone", "Milestone already exists:"&strMilestoneName, null	
    End If


	Set objMilestoneList = nothing
	Set objScrollBar = nothing
	Set ArchiveMilestoneList = nothing
	Set objSettingWindow = nothing
End Function



'This function is used to set default milestone template for creating new loan
'@code
'    BIZ_MilestoneTemplate_SetDefaultForNewLoan(strTemplateName)
'    BIZ_MilestoneTemplate_SetDefaultForNewLoan "CMTempA"
'@endcode
'@param strTemplateName - The template name you want to set

Function BIZ_MilestoneTemplate_SetDefaultForNewLoan(strTemplateName)

    FRM_Logger_ReportInfoEvent "Default Milestone", "Set default milestone template '"&strTemplateName&"'", null

	BIZ_Milestone_CreateCustom "Qualification"
	BIZ_Milestone_CreateCustom "Processing"
	
    BIZ_Nav_Settings_MilestoneTab("Milestones")
	
	BIZ_MilestoneTemplate_Add strTemplateName
	
   ' ========Template activation ==================
'	Set objAvailablemilestoneTemplateList = SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfObject("gvTemplates")
	Set objAvailablemilestoneTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvTemplates")
	
	'@TODO - add log info if not added successfully
	boolMilestoneAdded = GUI_List_TextExists(objAvailablemilestoneTemplateList, 1, strTemplateName)	
	strStatus = objAvailablemilestoneTemplateList.Object.Items.Item(0).Subitems.Item(5).Text
	If strStatus <> "Active" Then
'		GUI_SwfButton_Click SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfButton("ActivateMilestone")
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfButton("swfname:=btnStatus")
	End If	

'	GUI_SwfButton_Click SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfButton("View Global Template Settings")
'	GUI_SwfCheckbox_Set SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfWindow("Global Template Settings").SwfCheckBox("Automatic Mode (The system"), "ON"
'	GUI_SwfCheckbox_Set SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfWindow("Global Template Settings").SwfCheckBox("Manual Mode (Allow authorized"), "ON"
'	GUI_SwfButton_Click SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfWindow("Global Template Settings").SwfButton("OK")
'
'	GUI_SwfTab_Click SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfTab("tabTemplates"), "Milestones"
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfButton("swfname:=btnGlobalSettings")
	GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=GlobalSettings").SwfCheckBox("swfname:=chkConditions"), "ON"
	GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=GlobalSettings").SwfCheckBox("swfname:=chkManual"), "ON"
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=GlobalSettings").SwfButton("swfname:=btnSave")
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTab("swfname:=tabTemplates"), "Milestones"
	
	'=================Remove AutoBizRuleMS milestone==================
	'@TODO - not sure what this step is for
	BIZ_MilestoneTemplate_RemoveMilestone "AutoBizRuleMS"

	'=============Add Milestone To Template==============
	'======== Check if  Qualification  Milestone exists in list of Available MileStones before adding to template=======
	BIZ_MilestoneTemplate_AddMilestone("Qualification")
	BIZ_MilestoneTemplate_AddMilestone("Processing")

	BIZ_MilestoneTemplate_SetMilestonePosition "Qualification", 1
	BIZ_MilestoneTemplate_SetMilestonePosition "Processing", 2

	If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnSaveTemplate")) Then
'		GUI_SwfObject_Click SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfObject("btnSaveTemplate")
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnSaveTemplate")
	End If
	
End Function



'This function is used to Add MilistonesTemplate
'@code
'    BIZ_MilestoneTemplate_Add(strTemplateName)
'    BIZ_MilestoneTemplate_Add "CMTempA"
'@endcode
'@param strTemplateName - template name that you want to add

Function BIZ_MilestoneTemplate_Add(strTemplateName)

    FRM_Logger_ReportInfoEvent "Add MilestoneTemplate", "Add milestone template '"&strTemplateName&"'", null

	BIZ_Nav_Settings_MilestoneTab "Milestone Templates"

	Dim boolMilestoneTemplateFlag, objMilestoneTemplateList, objScrollBar, objSettingWindow
    Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMilestoneTemplateList = objSettingWindow.SwfObject("swfname:=gvTemplates")
	Set objScrollBar = objSettingWindow.SwfScrollBar("swfname:=vPanelScrollBar")
	milestoneTemplateFlag = GUI_List_ClickRow(objMilestoneTemplateList, objScrollBar, 1, strTemplateName, True, False, False, "Single")
	If Not boolMilestoneTemplateFlag Then
		GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnAddTemplate")
		Wait g_TinyWaitMedium 'Due to sync issue we are adding explicitly
		GUI_SwfEdit_Set objSettingWindow.SwfEdit("swfname:=txtName"), strTemplateName
		GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnSaveTemplate")
		Wait g_TinyWaitMedium 'Due to sync issue we are adding explicitly
		
		FRM_Logger_ReportPassEvent "Add MilestoneTemplate", "New milestone template added:"&strTemplateName, null
	Else
		FRM_Logger_ReportPassEvent "Add MilestoneTemplate", "Milestone template already exists:"&strTemplateName, null
	End If

	Set objSettingWindow = nothing
	Set objMilestoneTemplateList = nothing
	Set objScrollBar = nothing
End Function



'This function is used to Remove Milestone from Template according to strMilestoneName
'@code
'    BIZ_MilestoneTemplate_RemoveMilestone(strMilestoneName)
'    BIZ_MilestoneTemplate_RemoveMilestone "CMTempA"
'@endcode
'@param strMilestoneName - strMilestoneName that  you want to remove

Function BIZ_MilestoneTemplate_RemoveMilestone(strMilestoneName)

    FRM_Logger_ReportInfoEvent "Remove Milestone", "Remove milestone  '"&strMilestoneName&"'", null

	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTab("swfname:=tabTemplates"), "Milestones"
	
	Dim boolTemplateFlag, objMilestoneTemplateList
'	Set objMilestoneTemplateList = SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfObject("gvSequentialMilestones")
	Set objMilestoneTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvSequentialMilestones")
	Set objScrollBar = objMilestoneTemplateList.SwfScrollBar("swfname:=vPanelobjScrollBar")
	boolTemplateFlag = GUI_List_ClickRow(objMilestoneTemplateList, objScrollBar, 0, strMilestoneName, True, False, False, "Single")
	If boolTemplateFlag  Then
'		GUI_SwfObject_Click SwfWindow("EncompassMenu").SwfWindow("EncompassSettings").SwfObject("stdRemoveMilestone")
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdRemoveMilestone")
	End If
End Function



'This function is used to Add Milestone to milestone template
'@code
'    BIZ_MilestoneTemplate_AddMilestone(strMilestoneToAdd)
'@endcode
'@param strMilestoneToAdd - milestone to add

Function BIZ_MilestoneTemplate_AddMilestone(strMilestoneToAdd)

    FRM_Logger_ReportInfoEvent "Add Milestone", "Add milestone  '"&strMilestoneToAdd&"'", null
	Dim objSettingWindow, objAvailableMilestones, objMilestoneScrollBar
    Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=stdAddMilestoneToTemplate")
	Set objAvailableMilestones = objSettingWindow.SwfWindow("swfname:=AddMilestoneToTemplate").SwfObject("swfname:=gvAvailableMilestones")
	Set objMilestoneScrollBar = objSettingWindow.SwfWindow("swfname:=AddMilestoneToTemplate").SwfScrollBar("swfname:=vPanelScrollBar")
	
	intRowCount = objAvailableMilestones.Object.Items.Count
	For j = 0 To intRowCount-1
		strActualMilestone = objAvailableMilestones.Object.Items.Item(j).Subitems.Item(0).Text
		If strActualMilestone = strMilestoneToAdd Then
            GUI_List_ClickCheckbox objAvailableMilestones, objMilestoneScrollBar, strMilestoneToAdd, 0, True, False, "Single", True
			GUI_SwfButton_Click objSettingWindow.SwfWindow("swfname:=AddMilestoneToTemplate").SwfButton("swfname:=btnSubmit")
			Exit For
		End If
	Next
	If GUI_Object_IsExist(objSettingWindow.SwfWindow("swfname:=AddMilestoneToTemplate"))Then
		GUI_SwfButton_Click objSettingWindow.SwfWindow("swfname:=AddMilestoneToTemplate").SwfButton("swfname:=btnCancel")
	End If
	
	FRM_Logger_ReportPassEvent "Milestone Template", "Add milestone '"&strMilestoneToAdd&"' to milestone template", null

	Set objSettingWindow = nothing
	Set objAvailableMilestones = nothing
	Set objMilestoneScrollBar = nothing
End Function	



'This function will set milestone position in milestone templetes
'@code
'    BIZ_MilestoneTemplate_SetMilestonePosition(strMilestoneName, intPosition)
'@endcode
'@param strMilestoneName - The milestone name
'@param intPosition  - position you want set the milestone in milestone templete

Function BIZ_MilestoneTemplate_SetMilestonePosition(strMilestoneName, intPosition)

    FRM_Logger_ReportInfoEvent "Set Milestone position", "Expected Position  '"&strMilestoneName&"' is " &intPosition, null 

	BIZ_MilestoneTemplate_AddMilestone strMilestoneName

	Dim objSettingWindow, AvailableMilestones
    Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set AvailableMilestones = objSettingWindow.SwfObject("swfname:=gvSequentialMilestones")
	strRowCount = AvailableMilestones.Object.Items.Count
	For i = 0 To strRowCount  - 1
		strActualWord = AvailableMilestones.Object.Items.Item(i).Subitems.Item(0).Text
		If strActualWord =strMilestoneName Then
			intRowNumber = i

			If AvailableMilestones.Object.Items.Item(intPosition).Subitems.Item(0).Text<> strMilestoneName Then
				x1=AvailableMilestones.Object.GetItemBounds( intRowNumber ).x
				y1=AvailableMilestones.Object.GetItemBounds( intRowNumber ).y
				AvailableMilestones.Drag x1,y1
				x2=AvailableMilestones.Object.GetItemBounds( intPosition ).x
				y2=AvailableMilestones.Object.GetItemBounds( intPosition ).y
				AvailableMilestones.Drop x2,y2						
			Else
			End If
			Exit For
		End If
	Next
	If GUI_Object_IsEnabled(objSettingWindow.SwfObject("swfname:=btnSaveTemplate")) Then
		GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnSaveTemplate")
	End If
	
	FRM_Logger_ReportPassEvent "Milestone Template", "Set milestone '"&strMilestoneName&"' to position "&intPosition, null

	Set objSettingWindow = nothing
	Set AvailableMilestones = nothing
End Function



'This function will delete all the other milestone templetes except the Default Template
'@code
'    BIZ_MilestoneTemplate_DeleteAll()
'@endcode
'@param Null
Function BIZ_MilestoneTemplate_DeleteAll()
    
	FRM_Logger_ReportInfoEvent "Delete All the other Milestone Templetes", "Start delete All the other Milestone Templetes'", null
	
	BIZ_Nav_Settings_MilestoneTab "Milestone Templates"
    
	Dim objMilestoneTemplateList, objSettingWindow, objScrollBar, iCount, i, iPosition, iText
    Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMilestoneTemplateList = objSettingWindow.SwfObject("swfname:=gvTemplates")
    Set objScrollBar = objSettingWindow.SwfScrollBar("swfname:=vPanelScrollBar")
	iCount = objMilestoneTemplateList.Object.Items.Count - 1
    iPosition = 0
	For i=0 to iCount
		iText = objMilestoneTemplateList.Object.Items.Item(iPosition).Subitems.Item(1).Text
		If iText = "Default Template" Then
            iPosition=iPosition+1
        Else
			GUI_List_ClickRow objMilestoneTemplateList, objScrollBar, 1, strTemplateName, True, False, False, "Single"
			GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnDeleteTemplate")
			GUI_WinButton_Click objSettingWindow.Dialog("micclass:=Dialog").WinButton("micclass:=WinButton","text:=&Yes")            
		End If
	Next
	
	FRM_Logger_ReportPassEvent "Delete All the other Milestone Templetes", "Delete All the other Milestone Templetes'", null
    
    Set objSettingWindow = nothing
    Set objMilestoneTemplateList = nothing
    Set objScrollBar = nothing    
End Function



'This function will change role for milestone
'@code
'    BIZ_Milestone_ChangeRole(strMilestoneName,strMilestoneRole)
'    BIZ_Milestone_ChangeRole "Qualification","Loan Opener" 
'@endcode
'@param strMilestoneName - milestone name
'@param strMilestoneRole - new role to set

Function BIZ_Milestone_ChangeRole(strMilestoneName,strMilestoneRole)
	FRM_Logger_ReportInfoEvent "Change role for milestone " & strMilestoneName, "New Role is " & strMilestoneRole, null
	BIZ_Nav_Settings_MilestoneTab("Milestones")
	
	Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objMilestoneList = objSettingWindow.SwfObject("swfname:=gvMilestones")
	Set objScrollBar = objSettingWindow.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_SwfRadioButton_Click objSettingWindow.SwfRadioButton("swfname:=rdbCurrent")
	GUI_List_ClickRow objMilestoneList, objScrollBar, 0, strMilestoneName, True, False, False, "Double"
	GUI_SwfComboBox_Select objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfComboBox("swfname:=cboRoles"), strMilestoneRole
	GUI_SwfButton_Click objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfButton("swfname:=btnSave")

	Set objSettingWindow = Nothing
    Set objMilestoneList = Nothing
	Set objScrollBar = Nothing

End Function



'This function is used to Duplicate Milestone Template
'@code
'    BIZ_CompanyUserSetup_MilestoneTemplateDuplication(strTemplateName)
'@endcode
'@param strTemplateName - Template name to Duplicate

Function BIZ_CompanyUserSetup_MilestoneTemplateDuplication(strTemplateName)
     
	FRM_Logger_ReportInfoEvent "Duplicate Template","Validate Template gets created with same name with prefix 'Copy of' Under Settings > Company/User Setup", Null
	
	Dim objSettingWindow,objMilestoneTemplateList,objScrollBar,strDuplicateTemp
	
    Set objSettingWindow         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMilestoneTemplateList = objSettingWindow.SwfObject("swfname:=gvTemplates")
	Set objScrollBar             = objSettingWindow.SwfScrollBar("swfname:=vPanelScrollBar")
	
	GUI_Object_WaitTillExistX objMilestoneTemplateList, 300
	GUI_List_ClickRow objMilestoneTemplateList, objScrollbar, "Name", strTemplateName, True, False, False, "Single"
	GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnDuplicateTemplate") 	
	GUI_SwfObject_Click objMilestoneTemplateList
	strDuplicateTemp = "Copy of " & strTemplateName
	GUI_Object_WaitTillExistX objMilestoneTemplateList, 300 
	
	boolText = GUI_List_TextExists(objMilestoneTemplateList, "Name", strDuplicateTemp)
	FRM_VerifyTrue boolText,"Validate Duplicate Milestone Template","Milestone Template Duplicate '"&strTemplateName&"' created with prefix '"&strDuplicateTemp&"'"
	
	GUI_Object_WaitTillExistX objMilestoneTemplateList, 200
	
	'Verifying original Milestone template after performing duplicate operation 
	boolText = GUI_List_TextExists(objMilestoneTemplateList, "Name", strTemplateName)
	FRM_VerifyTrue boolText,"Validate Original Milestone Template Existence After Duplicate","Original Milestone Template '"&strTemplateName&"' is Exist after duplication"
	
	'Deleting Duplicate Template created
	GUI_List_ClickRow objMilestoneTemplateList, objScrollbar, "Name", strDuplicateTemp, True, False, False, "Single"
	GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnDeleteTemplate")
	GUI_Dialog_Encompass_Yes "Yes"
	
	Set objSettingWindow 		 = Nothing
	Set objMilestoneTemplateList = Nothing
	Set objScrollbar 		     = Nothing	
End Function


'This Function is used to Create Milestone
'@code
'    BIZ_CompanyUserSetup_CreateMileStone(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the Settings_CompanyUserSetUp data spreadsheet
Function BIZ_CompanyUserSetup_CreateMileStone(strRowID)	
	FRM_Logger_ReportInfoEvent "Create MileStone", "Create MileStone using '"&strRowID&"'", Null
	
	Dim objData,objSettingWindow,objMilestoneList,strMilestone,strRole
	
	Set objData          = FRM_DS_GetTestData("Setttings_CompanyUserSetup", "MileStone", strRowID)
	Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objMilestoneList = objSettingWindow.SwfObject("swfname:=gvMilestones")
	
	GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=btnNewMilestone")
	
	strMilestone = CStr(FRM_DS_GetValue(objData, "MileStoneName"))
	If UTIL_String_IsNotEmpty(strMilestone) Then 	
       GUI_SwfEdit_Set objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfEdit("swfname:=txtName"), strMilestone
    End If
    
    strRole = CStr(FRM_DS_GetValue(objData, "Role"))
    If UTIL_String_IsNotEmpty(strMilestone) Then 	
       GUI_SwfComboBox_Select objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfComboBox("swfname:=cboRoles"), strRole
    End If
    
    GUI_SwfButton_Click objSettingWindow.SwfWindow("swfname:=MilestonePropertiesForm").SwfButton("swfname:=btnSave")
	
	BIZ_Nav_HierarchyTree "Company/User Setup","Roles"
	BIZ_Nav_HierarchyTree "Company/User Setup","Milestones"
	GUI_Object_WaitTillExistX objMilestoneList, 200
	boolText = GUI_List_TextExists(objMilestoneList, "Milestone", strMilestone)
	FRM_VerifyTrue boolText,"Milestone Creation","Milestone created with name '"&strMilestone&"'"
	
	Set objData          = Nothing
	Set objSettingWindow = Nothing
	Set objMilestoneList = Nothing
	
	BIZ_CompanyUserSetup_CreateMileStone = strMilestone
	
End Function

'This function is used to rename Milestone
'@code
'    BIZ_Milestone_Rename(strActualName,strExpectedName)
'@endcode
'@param strActualName   - old milestone name
'@param strExpectedName - new milestone name
Function BIZ_Milestone_Rename(strActualName,strExpectedName)
    FRM_Logger_ReportInfoEvent "Rename Milestone", "Start renaming milestone '"&strActualName&"'"&" to '"&strExpectedName&"'", null
    '======== Go to  Company/User Setup -> Milestones========
    BIZ_Nav_Settings_MilestoneTab("Milestones")		
	Dim objMilestoneList, boolExist, objScrollBar, objSettings
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMilestoneList = objSettings.SwfObject("swfname:=gvMilestones")
	Set objScrollBar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objDialog = objSettings.SwfWindow("swfname:=MilestonePropertiesForm").Dialog("regexpwndtitle:=Encompass")
	boolExist = GUI_List_ClickRow(objMilestoneList, objScrollBar, 0, strActualName, True, False, False, "Double")
	If boolExist Then
        GUI_SwfEdit_Set objSettings.SwfWindow("swfname:=MilestonePropertiesForm").SwfEdit("swfname:=txtName"),strExpectedName
		GUI_SwfButton_Click objSettings.SwfWindow("swfname:=MilestonePropertiesForm").SwfButton("swfname:=btnSave")
		If objDialog.Exist(4) Then
			GUI_WinButton_Click	objDialog.WinButton("text:=&Yes")		
		End If
		GUI_SwfButton_Click objSettings.SwfWindow("swfname:=MilestonePropertiesForm").SwfButton("swfname:=btnSave")	
	End If
	Set objDialog = Nothing
    Set objSettings = nothing
    Set objMilestoneList = nothing
    Set objScrollBar = nothing
End Function
'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\Milestone.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\Organization.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Organization BIZ_Organization
' List of functions here
' @code
'    Function BIZ_Organization_DeleteOrganization(strOrganizationName)
'    Function BIZ_Organization_CreateOrganization(strOrganizationName)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to delete existing organization
'@code
'    Function BIZ_Organization_DeleteOrganization(strOrganizationName)
'@endcode
'@param strOrganizationName

Function BIZ_Organization_DeleteOrganization(strOrganizationName)

	Set objSetting = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

	'==============Select Existing Organization============
	objSetting.SwfTreeView("swfname:=hierarchyTree").Expand("Administration")

	strOrganizationNames = objSetting.SwfTreeView("swfname:=hierarchyTree").GetContent

	strOrganizationNamesArray = Split(strOrganizationNames,";")

	For i = 0 to UBOUND(strOrganizationNamesArray)

	    	If Instr(1,strOrganizationNamesArray(i),strOrganizationName) > 0 Then
    
    			'==============Select Existing Organization============
			 GUI_SwfTreeView_Select objSetting.SwfTreeView("swfname:=hierarchyTree"),"Administration;"&strOrganizationName
	
			 '===============Click on delete=========================
			  GUI_SwfObject_Click objSetting.SwfObject("swfname:=stdIconBtnDeleteOrg")
	
			 '==============Click on Yes button======================
			  GUI_DialogObject_Encompass_Yes objSetting.Dialog("text:=Delete Confirmation"),"Are you sure you want to delete the organization"
        
    		End If
    
	Next	

	Set objSetting = Nothing

End Function



'This function is used to create new organization
'@code
'    Function BIZ_Organization_CreateOrganization(strOrganizationName)
'@endcode
'@param strOrganizationName

Function BIZ_Organization_CreateOrganization(strOrganizationName)

	Set objSetting = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

	Set objOrgWindow = objSetting.SwfWindow("swfname:=AddEditOrgDialog")
	Set objData 		= FRM_DS_GetTestData("Setttings_CompanyUserSetup", "OrganizationUsers_CreateUser", "Organization")
	'==============Select Existing Organization============
	GUI_SwfTreeView_Select objSetting.SwfTreeView("swfname:=hierarchyTree"),"Administration"

	'===============Click on New=========================
	GUI_SwfObject_Click objSetting.SwfObject("swfname:=stdIconBtnNewOrg")

	'==============Enter New Org Name======================
	GUI_SwfEdit_Set objOrgWindow.SwfEdit("swfname:=orgNameTxt"),strOrganizationName
	
	'==============Enter New Org Description======================
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then        
        GUI_SwfEdit_Set objOrgWindow.SwfEdit("swfname:=orgDescTxt"), FRM_DS_GetValue(objData, "Description")        		
	End If
	'===================Click on ok button======================
	'GUI_SwfButton_Click objOrgWindow.SwfButton("swfname:=okBtn")
	GUI_SwfObj_PerClick objOrgWindow.SwfButton("swfname:=okBtn")
	
	If objOrgWindow.Dialog("text:=Encompass").Exist(10) Then
		GUI_WinButton_Click objOrgWindow.Dialog("text:=Encompass").winbutton("text:=&Yes")
	End If

	Set objSetting = Nothing

	Set objOrgWindow = Nothing

End Function



'This function is used to create new organization
'@code
'    Function BIZ_Organization_CreateOrganizationWithDescription(strRowID,strOrganizationName)
'@endcode
'@param strRowID - strRowID is used to get the data from Excel
'@param strOrganizationName - Organization Name to create

Function BIZ_Organization_CreateOrganizationWithDescription(strRowID, strOrganizationName)

	Set objSetting = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

	Set objOrgWindow = objSetting.SwfWindow("swfname:=AddEditOrgDialog")
	Set objData = FRM_DS_GetTestData("Setttings_CompanyUserSetup", "OrganizationUsers_CreateUser", strRowID)
	'==============Select Existing Organization============
	GUI_SwfTreeView_Select objSetting.SwfTreeView("swfname:=hierarchyTree"),"Administration"

	'===============Click on New=========================
	GUI_SwfObject_Click objSetting.SwfObject("swfname:=stdIconBtnNewOrg")

	'==============Enter New Org Name======================
	GUI_SwfEdit_Set objOrgWindow.SwfEdit("swfname:=orgNameTxt"),strOrganizationName
	
	'==============Enter New Org Description======================
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Description")) Then        
        GUI_SwfEdit_Set objOrgWindow.SwfEdit("swfname:=orgDescTxt"), FRM_DS_GetValue(objData, "Description")        		
	End If
	'===================Click on ok button======================
	'Changing due to resolution issue
	'GUI_SwfButton_Click objOrgWindow.SwfButton("swfname:=okBtn")
	objOrgWindow.SwfButton("swfname:=okBtn").Object.PerformClick
	
	If objOrgWindow.Dialog("text:=Encompass").Exist(10) Then
		GUI_WinButton_Click objOrgWindow.Dialog("text:=Encompass").winbutton("text:=&Yes")
	End If

	Set objSetting = Nothing

	Set objOrgWindow = Nothing

End Function

'@}




''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\Organization.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\OrganizationUsers.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_OrganizationUsers BIZ_Settings_OrganizationUsers
'
' List of functions here
' @code
'   Function BIZ_OrganizationUsers_CreateUser(strRowID)
'   Function BIZ_OrganizationUsers_DeleteExistingUser(strUserName)
'	Function BIZ_OrganizationUsers_EditUser(strUserId,strRowID)
'	Function BIZ_OrganizationUsers_GetUserName(strUserId)
'	Function BIZ_OrganizationUsers_AccountAndLoginDisAbleSetOFF(strRowID)
'   Function BIZ_OrganizationUsers_EditUserPasswordAccount(strUserId)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to create users for persona
'@code
'    BIZ_OrganizationUsers_CreateUser(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_OrganizationUsers_CreateUser(strRowID)

    FRM_Logger_ReportInfoEvent "Add organization users", "To add user used data row ID '"&strRowID&"' in the Users datasheet", null
    
    BIZ_Nav_Settings_OrganizationUsers()
    
    Dim objSettings, objUsersAvaliable, objUserDetails, objPersonaSelection, objUserPersona,_
    objLoanOfficerLicenses, objScrollBar, objData, strUserId, boolUserFlag, userPersona,strFolder
    Dim strCurrSelection
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objUsersAvaliable = objSettings.SwfObject("swfname:=gvUsers")
    Set objScrollBar = objUsersAvaliable.SwfScrollBar("swfname:=vPanelScrollBar")
    Set objData = FRM_DS_GetTestData("Setttings_CompanyUserSetup", "OrganizationUsers_CreateUser", strRowID)
    
    strCurrSelection=objSettings.SwfTreeView("swfname:=hierarchyTree").GetSelection
    'objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"    
    objSettings.SwfTreeView("swfname:=hierarchyTree").Select strCurrSelection 
	
	strFolder =  objData.Item("Folder")
	If UTIL_String_IsNotEmpty(strFolder) Then
		'objSettings.SwfTreeView("swfname:=hierarchyTree").Expand("Administration")
        objSettings.SwfTreeView("swfname:=hierarchyTree").Expand(strCurrSelection)
        Wait g_LongWaitMedium
        If not  GUI_SwfTreeView_SearchItem(objSettings.SwfTreeView("swfname:=hierarchyTree"),strFolder) Then
            GUI_SwfObject_Click objSettings.SwfWindow("swfname:=OrgHierarchyForm").SwfObject("swfname:=stdIconBtnNewOrg")
        	GUI_Object_WaitTillExistX objSettings.SwfWindow("swfname:=AddEditOrgDialog"),30
        	GUI_SwfEdit_Set objSettings.SwfWindow("swfname:=AddEditOrgDialog").SwfEdit("swfname:=orgNameTxt"),strFolder
        	GUI_SwfButton_Click objSettings.SwfWindow("swfname:=AddEditOrgDialog").SwfButton("swfname:=okBtn")
        	Wait g_LongWaitMedium
        End If
		'GUI_SwfTreeView_Select objSettings.SwfTreeView("swfname:=hierarchyTree"),"Administration;"&strFolder
		GUI_SwfTreeView_Select objSettings.SwfTreeView("swfname:=hierarchyTree"),strCurrSelection&";"&strFolder
		Wait g_LongWaitMedium
	Else
		'objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"
		objSettings.SwfTreeView("swfname:=hierarchyTree").Select strCurrSelection
	End If
	
    strUserId = objData.Item("UserID")
    boolUserFlag = GUI_List_ClickRow(objUsersAvaliable, objScrollBar, 0, strUserId, True, False, False, "Single")   
    If not boolUserFlag Then  
        GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnNewUser")
        Set objUserDetails = objSettings.SwfWindow("swfname:=AddEditUserCEDialog")
        GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=useridTxt"), strUserId
        GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=passwTxt"), objData.Item("Password")
        GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=verifyPwdTxt"), objData.Item("Password")
        GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=fnameTxt"), objData.Item("FirstName")
        GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=lnameTxt"), objData.Item("LastName")
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ForceUser")) Then
			GUI_SwfCheckbox_Set objUserDetails.SwfCheckbox("swfname:=newPasswordCheckBox"), FRM_DS_GetValue(objData, "ForceUser")
		End If
        GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=emailTextBox"), objData.Item("Email")
        GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=loBtn")
		Set objLoanOfficerLicenses = objUserDetails.SwfWindow("swfname:=LoanOfficerLicenseDialog")
		GUI_SwfButton_Click objLoanOfficerLicenses.SwfButton("swfname:=allBtn")
		GUI_SwfButton_Click objLoanOfficerLicenses.SwfButton("swfname:=okBtn")
		
		Set objPersonaSelection = objUserDetails.SwfWindow("swfname:=PersonaSelectionForm")
		Set objUserPersona = objPersonaSelection.SwfObject("swfname:=gvPersonas")
		Set objScrollBar = objPersonaSelection.SwfScrollBar("swfname:=vPanelScrollBar")
			
			
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Persona")) Then	
			GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=btnAssignPersona")
			userPersona = objData.Item("Persona")
			GUI_List_ClickCheckbox objUserPersona, objScrollBar, userPersona, 0, False, False, "Single", True
			GUI_SwfButton_Click objPersonaSelection.SwfButton("swfname:=btnOK")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Persona1")) Then	
			GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=btnAssignPersona")
			userPersona = objData.Item("Persona1")
			GUI_List_ClickCheckbox objUserPersona, objScrollBar, userPersona, 0, False, False, "Single", True
			GUI_SwfButton_Click objPersonaSelection.SwfButton("swfname:=btnOK")
		End If
        'Change Done by Jaymala
        'On my machine due to screen resolution issue Save button was not visible. So I have commented below line.
        
        'GUI_SwfButton_Click objUserDetails.SwfButton("swfname:=okBtn")
        
        'So I have sent Alt+S keys.
        objSettings.SwfWindow("swfname:=AddEditUserCEDialog").Activate
        Set WshShell = CreateObject("WScript.Shell")
        WshShell.SendKeys "%s"
		FRM_RT_SetPropValue g_FRM_Prop_NewUserCreateDataRowID, strRowID
		FRM_RT_SetPropValue g_FRM_Prop_NewUserCreated, strUserId
		FRM_RT_SetPropValue g_FRM_Prop_NewUserPassword, objData.Item("Password")

		GUI_Dialog_Encompass_OKX 2,"The User ID that you entered is already in use" 
		
		If objSettings.SwfWindow("swfname:=AddEditUserCEDialog").Exist(1) Then
			objSettings.SwfWindow("swfname:=AddEditUserCEDialog").Close
		End If
 
        FRM_Logger_ReportPassEvent "Add organization users", "New user '"&strUserId&"' added in Organization '"&strCurrSelection&"'", null
    Else
        FRM_Logger_ReportPassEvent "Add organization users", "User '"&strUserId&"' already exists in Organization '"&strCurrSelection&"'", null
        Wait g_LongWaitMedium
    End If

	'============= Close Settings Window =============
	'GUI_Window_Close objSettings 
    
    Set objSettings = Nothing
    Set objUsersAvaliable = Nothing
    Set objUserDetails = Nothing
    Set objPersonaSelection = Nothing
    Set objUserPersona = Nothing
    Set objScrollBar = Nothing
    Set objLoanOfficerLicenses = Nothing
    Set objData = Nothing
	
	 BIZ_OrganizationUsers_CreateUser =	strUserId
    
End Function



'This Function is used to delete existing users 
'@code
'    BIZ_OrganizationUsers_DeleteExistingUser(strUserName)
'@endcode
'@param strUserName - Name of the user to be deleted.

 Function BIZ_OrganizationUsers_DeleteExistingUser(strUserId)

    Dim objSettings, objUsersAvaliable,objScrollBar,objDeleteUser,strCurrSelection
       
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objUsersAvaliable = objSettings.SwfObject("swfname:=gvUsers")
    Set objScrollBar = objSettings.SwfScrollBar("swfname:=vPanelScrollBar")
    Set objDeleteUser = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DeleteUserDialog")
    
	strCurrSelection=objSettings.SwfTreeView("swfname:=hierarchyTree").GetSelection
    'objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"
	objSettings.SwfTreeView("swfname:=hierarchyTree").Select strCurrSelection
		
    boolUserFlag = GUI_List_ClickRow(objUsersAvaliable, objScrollBar, 0, strUserId, True, False, False, "Single") 
    
    If boolUserFlag Then
        GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnDeleteUser"),"SwfObject","Swfobject to delete existing user"
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("index:=0").SwfButton("text:=&Yes")
        'GUI_DialogObject_Encompass_Yes SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("index:=0"), ""
        GUI_SwfRadioButton_Click objDeleteUser.SwfRadioButton("swfname:=rBtnDelete")
        GUI_SwfButton_Click objDeleteUser.SwfButton("swfname:=btnOK")
    End If    
End Function



'This Function is used to Edit Organization User
'@code
'    BIZ_OrganizationUsers_EditUser(strUserId,strRowID)
'@endcode
'@Param strUserId - The name of a UserId 
'@param strRowID  - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_OrganizationUsers_EditUser(strUserId,strRowID)

    FRM_Logger_ReportInfoEvent "Edit Organization User", "Edit Organization User Using row ID '"&strRowID&"' in the Users datasheet", null
    
    BIZ_Nav_Settings_OrganizationUsers()
    
    Dim objData,objSettings,objUsersAvaliable,objUserDetails,objScrollBar,strFirstName,strLastName,strFirstAndLastName
    
	Set objData                = FRM_DS_GetTestData("Setttings_CompanyUserSetup", "OrganizationUsers_CreateUser", strRowID)
    Set objSettings            = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objUsersAvaliable      = objSettings.SwfObject("swfname:=gvUsers")
    Set objScrollBar           = objUsersAvaliable.SwfScrollBar("swfname:=vPanelScrollBar")
    Set objUserDetails         = objSettings.SwfWindow("swfname:=AddEditUserCEDialog")
    
    objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"
	GUI_List_ClickRow objUsersAvaliable, objScrollBar,"User ID", strUserId, True, False, False, "Double"
	
    strFirstName = Trim(FRM_DS_GetValue(objData, "FirstName")) 
	If UTIL_String_IsNotEmpty(strFirstName) Then
		GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=fnameTxt"), strFirstName
	End If
	
	strLastName = Trim(FRM_DS_GetValue(objData, "LastName")) 
	If UTIL_String_IsNotEmpty(strLastName) Then
		GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=lnameTxt"), strLastName
	End If
    
	strFirstAndLastName = strFirstName&" "&strLastName
	'GUI_SwfButton_Click objUserDetails.SwfButton("swfname:=okBtn")
	
	'Change Done by Jaymala
        'On my machine due to screen resolution issue Save button was not visible. So I have commented below line.
        
        'GUI_SwfButton_Click objUserDetails.SwfButton("swfname:=okBtn")
        
        'So I have sent Alt+S keys.
        objSettings.SwfWindow("swfname:=AddEditUserCEDialog").Activate
        Set WshShell = CreateObject("WScript.Shell")
        WshShell.SendKeys "%s"
	
    Set objSettings          = Nothing
    Set objUsersAvaliable    = Nothing
    Set objUserDetails       = Nothing
    Set objScrollBar         = Nothing
    Set objData              = Nothing
	
	BIZ_OrganizationUsers_EditUser = strFirstAndLastName
	 
End Function



'This Function is used to Get Organization UserName
'@code
'    BIZ_OrganizationUsers_GetUserName(strUserId)
'@endcode
'@Param strUserId - The name of a UserId 

Function BIZ_OrganizationUsers_GetUserName(strUserId)

    FRM_Logger_ReportInfoEvent "Get Organization User Name", "Get Organization User Name for '"&strUserId&"' ", null
    
    BIZ_Nav_Settings_OrganizationUsers()
    
    Dim objSettings,objUsersAvaliable,objUserDetails,objScrollBar,strFirstName,strLastName
    
	Set objSettings            = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objUsersAvaliable      = objSettings.SwfObject("swfname:=gvUsers")
   
    objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"
    intRowId = GUI_List_GetRowIndex (objUsersAvaliable,"User ID", strUserId)
    
	strLName = GUI_List_GetCellData (objUsersAvaliable,intRowId,GUI_List_GetColumnIndex(objUsersAvaliable,"Last Name"))
	strFName = GUI_List_GetCellData (objUsersAvaliable,intRowId,GUI_List_GetColumnIndex(objUsersAvaliable,"First Name"))
	
	BIZ_Settings_ClickClose()
    	
    Set objSettings          = Nothing
    Set objUsersAvaliable    = Nothing
    Set objUserDetails       = Nothing
    Set objScrollBar         = Nothing
    	
	BIZ_OrganizationUsers_GetUserName = strFName &" "& strLName
End Function



'This Function is used to Set Account Disable and LoginDisable set off
'@code
'    BIZ_OrganizationUsers_AccountAndLoginDisAbleSetOFF(strRowID)
'@endcode
'@Param strRowID - Points Row in Excel 

Function BIZ_OrganizationUsers_AccountAndLoginDisAbleSetOFF(strRowID)
 
 	FRM_Logger_ReportInfoEvent "Organization User", "Set Organization User Account and Login Enabled", null
	Dim objData,objMain,objMainView,strUserName, objUserDetails
    
    Set objData 		= FRM_DS_GetTestData("Setttings_CompanyUserSetup", "OrganizationUsers_CreateUser", strRowID)
	Set objMain			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=OrgHierarchyForm")
	Set objMainView		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=OrgHierarchyForm").SwfObject("swfname:=gvUsers")
	Set objUserDetails  =SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=AddEditUserCEDialog")

	strUserName			= Trim(FRM_DS_GetValue(objData, "UserID"))
  	
	GUI_List_ClickRow objMainView, objMainView.SwfScrollBar("swfname:=vPanelScrollBar"), "User ID",strUserName, True, False, False, "Single"
	GUI_SwfObject_Click objMain.SwfObject("swfname:=stdIconBtnEditUser")
	
	If (GUI_Object_GetPropertyValue(objUserDetails.SwfCheckBox("swfname:=lockedCheckBox"),"Checked")) Then		
		GUI_SwfCheckbox_Set objUserDetails.SwfCheckBox("swfname:=lockedCheckBox"), "OFF"
	Else	
		FRM_Logger_ReportInfoEvent "System Audit Trail","Account Information  Set OFF", null
	End If
	GUI_Object_ValidateChecked objUserDetails.SwfCheckBox("swfname:=lockedCheckBox"), "False","Account Information Disable Login  Set OFF"

	If (GUI_Object_GetPropertyValue(objUserDetails.SwfCheckBox("swfname:=disableCheckBox"),"Checked")) Then		
		GUI_SwfCheckbox_Set objUserDetails.SwfCheckBox("swfname:=disableCheckBox"), "OFF"
	Else	
		FRM_Logger_ReportInfoEvent "System Audit Trail","DisableAccount  Set OFF", null
	End If
	GUI_Object_ValidateChecked objUserDetails.SwfCheckBox("swfname:=disableCheckBox"), "False"," Account Information DisableAccount  Set OFF"
	'GUI_SwfButton_Click objUserDetails.SwfButton("swfname:=okBtn")
	    objUserDetails.Activate
        Set WshShell = CreateObject("WScript.Shell")
        WshShell.SendKeys "%s"
	
	Set objData 		= Nothing
	Set objMain			= Nothing
	Set objMainView		= Nothing
	Set objUserDetails  = Nothing
	
End Function	

'This Function is used to Edit Organization User
'@code
'    BIZ_OrganizationUsers_EditUser(strUserId,strRowID)
'@endcode
'@Param strUserId - The name of a UserId 
'@param strRowID  - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_OrganizationUsers_EditUserPasswordAccount(strUserId)

    'FRM_Logger_ReportInfoEvent "Edit Organization User", "Edit Organization User Using row ID '"&strRowID&"' in the Users datasheet", null
    
    BIZ_Nav_Settings_OrganizationUsers()
    
    Dim objData,objSettings,objUsersAvaliable,objUserDetails,objScrollBar,strFirstName,strLastName,strFirstAndLastName
    
	'Set objData                = FRM_DS_GetTestData("Setttings_CompanyUserSetup", "OrganizationUsers_CreateUser", strRowID)
    Set objSettings            = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objUsersAvaliable      = objSettings.SwfObject("swfname:=gvUsers")
    Set objScrollBar           = objUsersAvaliable.SwfScrollBar("swfname:=vPanelScrollBar")
    Set objUserDetails         = objSettings.SwfWindow("swfname:=AddEditUserCEDialog")
    
    objSettings.SwfTreeView("swfname:=hierarchyTree").Select "Administration"
	GUI_List_ClickRow objUsersAvaliable, objScrollBar,"User ID", strUserId, True, False, False, "Double"
	
   	
	If objUserDetails.SwfEdit("swfname:=passwTxt").Exist(2) Then
		
   
		GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=passwTxt"), "Password$1"

		GUI_SwfEdit_Set objUserDetails.SwfEdit("swfname:=verifyPwdTxt"), "Password$1"
		
	If (GUI_Object_GetPropertyValue(objUserDetails.SwfCheckBox("swfname:=lockedCheckBox"),"Checked")) Then		
		GUI_SwfCheckbox_Set objUserDetails.SwfCheckBox("swfname:=lockedCheckBox"), "OFF"
	Else	
		FRM_Logger_ReportInfoEvent "System Audit Trail","Account Information  Set OFF", null
	End If
	
	If (GUI_Object_GetPropertyValue(objUserDetails.SwfCheckBox("swfname:=disableCheckBox"),"Checked")) Then		
		GUI_SwfCheckbox_Set objUserDetails.SwfCheckBox("swfname:=disableCheckBox"), "OFF"
	Else	
		FRM_Logger_ReportInfoEvent "System Audit Trail","DisableAccount  Set OFF", null
	End If


	
	'Change Done by Jaymala
        'On my machine due to screen resolution issue Save button was not visible. So I have commented below line.
        
        'GUI_SwfButton_Click objUserDetails.SwfButton("swfname:=okBtn")
        
        'So I have sent Alt+S keys.
        objSettings.SwfWindow("swfname:=AddEditUserCEDialog").Activate
        Set WshShell = CreateObject("WScript.Shell")
        WshShell.SendKeys "%s"
        
        FRM_Logger_ReportInfoEvent "Password Rest Successful for:  ",strUserId, Null
        
	End If
    Set objSettings          = Nothing
    Set objUsersAvaliable    = Nothing
    Set objUserDetails       = Nothing
    Set objScrollBar         = Nothing
   ' Set objData              = Nothing
	
	BIZ_OrganizationUsers_EditUserPasswordAccount = "Reset"
	 
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\OrganizationUsers.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\Persona.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_Persona BIZ_Settings_Persona
'
' List of functions here
' @code
'	Function BIZ_Persona_Loan_FinishMilestones (strPersonaName, arrMilestones)
'	Function BIZ_Persona_Loan_AssignLoanTeamMembers(strPersonaName, arrRoles)
'	Function BIZ_Personas_FormsTools_AccessRight(strPersonaName, arrFormsTools)
'	Function BIZ_Personas_eFolder_General_AccessRight(strPersonaName, arrGenerals)
'	Function BIZ_Personas_eFolder_Conditions_AccessRight(strPersonaName, arrConditions)
'	Function BIZ_Persona_Loan_AcceptFiles(strPersonaName, arrMilestones)
'	Function BIZ_Personas_Loan_Other_AccessRight(strPersonaName, arrGenerals)
'   Function BIZ_Settings_Personas_SelectPersona(strPersonaName)
'   Function BIZ_Settings_Personas_Loan_CheckItemizationFeeItems(arrFeeManagementItems)
'   Function BIZ_Settings_Personas_Loan_UncheckItemizationFeeItems(arrFeeManagementItems)
'   Function BIZ_Settings_Personas_CreatePersona(strPersonaName,boolIsAccessToAll)
'   Function BIZ_Settings_Personas_DeletePersona(strPersonaName)
'   Function BIZ_Settings_Personas_SelectPersonaType(strPersonaName,intPersonaTypePosition)
'   Function BIZ_Settings_Personas_GetPersonaType(strPersonaName)
'	Function BIZ_Personas_Settings_CompanySettings_AccessRight(strPersonaName, arrSelection())
'   Function BIZ_Settings_Personas_CreateExternalPersona(strPersonaName,boolIsAccessToAll)
'   Function BIZ_Settings_Personas_CreatePersona_WithTypes(strRowID,boolTPOFlagPresent)
'	Function BIZ_Settings_Personas_RenamePersona(strRowID)
'	Function BIZ_Settings_CompanyUserSetup_CreatePersona(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to set FinishMilestones for persona
'@code
'    BIZ_Persona_Loan_FinishMilestones (strPersonaName, arrMilestones)
'@endcode
'@param strPersonaName - persona name
'@param arrMilestones - milestone array list

Function BIZ_Persona_Loan_FinishMilestones (strPersonaName, arrMilestones)

    FRM_Logger_ReportInfoEvent "Set FinishMilestones", "Set FinishMilestones for persona '"&strPersonaName&"'", null

	Dim objSettingWindow, objAvailableMilestones, objScrollBar
	Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")	
	GUI_SwfList_Select objSettingWindow.SwfListView("swfname:=lvPersona"), strPersonaName
	GUI_SwfTab_Click objSettingWindow.SwfTab("swfname:=tabControl1"), "Loan"
	GUI_Object_WaitTillExist objSettingWindow.SwfObject("swfname:=gcPersona", "text:=.*Define access for the "&strPersonaName&" persona.")	
	GUI_SwfLabel_Click objSettingWindow.SwfLabel("swfname:=lblFinsihMilestoneSelect")

	Set objAvailableMilestones = objSettingWindow.SwfWindow("swfname:=MilestoneSelectionDialog").SwfObject("swfname:=gvMilestone")
	Set objScrollBar = objSettingWindow.SwfWindow("swfname:=MilestoneSelectionDialog").SwfScrollBar("swfname:=vPanelScrollBar")
	For  i = LBound(arrMilestones) To UBound(arrMilestones)
		GUI_List_ClickCheckbox objAvailableMilestones, objScrollBar, arrMilestones(i), 1, True, False, "Single", True
	Next
	GUI_SwfButton_Click objSettingWindow.SwfWindow("swfname:=MilestoneSelectionDialog").SwfButton("swfname:=btnOK")

	If GUI_Object_IsEnabled(objSettingWindow.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=stdIconBtnSave")
	End If

	Set objSettingWindow = nothing
	Set objAvailableMilestones = nothing
	Set objScrollBar = nothing
End Function



'This function is used to set Assign Loan Team Member for persona
'@code
'    BIZ_Persona_Loan_AssignLoanTeamMembers(strPersonaName, arrRoles)
'@endcode
'@param strPersonaName - persona name
'@param arrRoles- role array list

Function BIZ_Persona_Loan_AssignLoanTeamMembers(strPersonaName, arrRoles)

    FRM_Logger_ReportInfoEvent "Set AssignLoanTeamMember", "Set AssignLoanTeamMember for persona '"&strPersonaName&"'", null

	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfListView("swfname:=lvPersona").Select strPersonaName
	GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gcPersona","regexpwndtitle:=.*Define access for.*")
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfTab("swfname:=tabControl1"), "Loan"

	GUI_SwfLabel_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfLabel("text:=Assign Loan Team Members")
	GUI_Object_WaitTillExist SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=MilestoneSelectionDialog").SwfObject("swfname:=gvMilestone")
	Dim objAvailableRoles, objSelectRoleScrollBar
	Set objSelectRolesWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=MilestoneSelectionDialog")
	Set objAvailableRoles = objSelectRolesWin.SwfObject("swfname:=gvMilestone")
	Set objSelectRoleScrollBar = objSelectRolesWin.SwfScrollBar("swfname:=vPanelScrollBar")
	For i = LBound(arrRoles) To UBound(arrRoles)
		GUI_List_ClickCheckbox objAvailableRoles, objSelectRoleScrollBar, arrRoles(i),"1",True,False,"Single",True
	Next
	GUI_SwfButton_Click objSelectRolesWin.SwfButton("swfname:=btnOK")

	If GUI_Object_IsEnabled(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")
	End If
End Function



'This function is used to set the access right to tools->Disclosure Tracking for persona
'@code
'    BIZ_Personas_FormsTools_AccessRight(strPersonaName, arrFormsTools)
'@endcode
'@param strPersonaName - persona name
'@param arrFormsTools - Forms or Tools array list

Function BIZ_Personas_FormsTools_AccessRight(strPersonaName, arrFormsTools)

    FRM_Logger_ReportInfoEvent "Set AccessRight", "Set tools->Disclosure Tracking access right for persona '"&strPersonaName&"'", null
	
    Dim objSettings, objFormsToolsTreeView
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objFormsToolsTreeView = objSettings.SwfTreeView("swfname:=treeViewTabs","swfname path:=.*Tools.*","index:=0")
    
	objSettings.SwfListView("swfname:=lvPersona").Select strPersonaName
    GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"), "Forms/Tools"
	
	GUI_Object_WaitTillExistX objFormsToolsTreeView, 60
	
	For i = LBound(arrFormsTools) To UBound(arrFormsTools)
        GUI_TreeView_ClickCheckBox objFormsToolsTreeView, arrFormsTools(i), True
	Next

	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If
End Function



'This function is used to set general eFolder access right for persona
'@code
'    BIZ_Personas_eFolder_General_AccessRight(strPersonaName, arrGenerals)
'@endcode
'@param strPersonaName - persona name
'@param arrGenerals - Generals array list

Function BIZ_Personas_eFolder_General_AccessRight(strPersonaName, arrGenerals)

    FRM_Logger_ReportInfoEvent "Set General Access Right", "Set General eFolder access right for persona '"&strPersonaName&"'", null
	
    Dim objSettings, objGeneralTreeView
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objGeneralTreeView = objSettings.SwfTreeView("swfname:=treeViewTabs","index:=3")
    
	objSettings.SwfListView("swfname:=lvPersona").Select strPersonaName
    GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"), "eFolder"
	
	GUI_Object_WaitTillExistX objGeneralTreeView, 60
	
	For i = LBound(arrGenerals) To UBound(arrGenerals)
		GUI_TreeView_ClickCheckBox objGeneralTreeView, arrGenerals(i), True
	Next
	
	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If
End Function


'This function is used to set conditions eFolder access right for persona
'@code
'    BIZ_Personas_eFolder_Conditions_AccessRight(strPersonaName, arrConditions)
'@endcode
'@param strPersonaName - persona name
'@param arrConditions - Conditions array list

Function BIZ_Personas_eFolder_Conditions_AccessRight(strPersonaName, arrConditions)

    FRM_Logger_ReportInfoEvent "Set Conditions Access Right", "Set Conditions eFolder access right for persona '"&strPersonaName&"'", null

	Dim objSettingWindow, objConditionTreeView, i
	Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objConditionTreeView =objSettingWindow.SwfTreeView("swfname:=treeViewTabs","index:=5")

	GUI_SwfList_Select objSettingWindow.SwfListView("swfname:=lvPersona"), strPersonaName
    GUI_SwfTab_Click objSettingWindow.SwfTab("swfname:=tabControl1"), "eFolder"
	GUI_Object_WaitTillExist objConditionTreeView

	For i = LBound(arrConditions) To UBound(arrConditions)
		GUI_TreeView_ClickCheckBox objConditionTreeView, arrConditions(i), True
	Next
	
	If GUI_Object_IsEnabled(objSettingWindow.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=stdIconBtnSave")
	End If

	Set objSettingWindow = Nothing
	Set objConditionTreeView = Nothing

End Function


'This function is used to set Assignloanteammember for persona
'@code
'    BIZ_Persona_Loan_AcceptFiles(strPersonaName, arrMilestones)
'@endcode
'@param strPersonaName - persona name
'@param arrMilestones - milestone array list

Function BIZ_Persona_Loan_AcceptFiles(strPersonaName, arrMilestones)

	FRM_Logger_ReportInfoEvent "Set AcceptFiles", "Set Accept Files for persona '"&strPersonaName&"'", null

	Dim objSettingWindow, objSelectMilestones, objAvailableMilestones, objScrollBar, icnt, strActualWord
	Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

	GUI_SwfList_Select objSettingWindow.SwfListView("swfname:=lvPersona"), strPersonaName
	GUI_SwfTab_Click objSettingWindow.SwfTab("swfname:=tabControl1"), "Loan"
	GUI_SwfLabel_Click objSettingWindow.SwfLabel("swfname:=lblAcceptFilesSelect")

	Set objSelectMilestones = objSettingWindow.SwfWindow("swfname:=MilestoneSelectionDialog")
	Set objAvailableMilestones = objSelectMilestones.SwfObject("swfname:=gvMilestone")
	Set objScrollBar = objSelectMilestones.SwfScrollBar("swfname:=vPanelScrollBar")

	For icnt = LBound(arrMilestones) To UBound(arrMilestones)
		GUI_List_ClickCheckbox objAvailableMilestones, objScrollBar, arrMilestones(i), 1, True, False, "Single", True
	Next
	GUI_SwfButton_Click objSelectMilestones.SwfButton("swfname:=btnOK")

	If GUI_Object_IsEnabled(objSettingWindow.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettingWindow.SwfObject("swfname:=stdIconBtnSave")
	End If

	Set objSettingWindow = Nothing
	Set objSelectMilestones = Nothing
	Set objAvailableMilestones = Nothing
	Set objScrollBar = Nothing

End Function



'This function is used to set the access right to Loan -> Other for persona
'@code
'    BIZ_Personas_Loan_Other_AccessRight(strPersonaName, arrGenerals)
'@endcode
'@param strPersonaName - persona name
'@param arrOthers - Other array list

Function BIZ_Personas_Loan_Other_AccessRight(strPersonaName, arrOthers)

    FRM_Logger_ReportInfoEvent "Set Other Access Right", "Set Loan -> Other access right for persona '"&strPersonaName&"'", null
	
    Dim objSettings, objOtherTreeView
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objOtherTreeView = objSettings.SwfTreeView("swfname:=treeViewTabs","swfname path:=.*ClosingPage.*","index:=0")
    
	'objSettings.SwfListView("PersonaList").Select strPersonaName
	objSettings.SwfListView("swfname:=lvPersona").Select strPersonaName
    GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"), "Loan"
	
	For i = LBound(arrOthers) To UBound(arrOthers)
		GUI_TreeView_ClickCheckBox objOtherTreeView, arrOthers(i), True
	Next
	
	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If

End Function



'This function is used to select a persona which name is strPersonaName
'@code
'    BIZ_Settings_Personas_SelectPersona(strPersonaName)
'@endcode
'@param strPersonaName - persona name

Function BIZ_Settings_Personas_SelectPersona(strPersonaName)
    FRM_Logger_ReportInfoEvent "Select a Persona", "Select the Persona: '"&strPersonaName, null
	
	BIZ_Nav_Settings_Personas
    
	Dim objSettings,objPersonasList
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objPersonasList = objSettings.SwfListView("swfname:=lvPersona")
           
    GUI_List_Select objPersonasList,strPersonaName
   
    Set objSettings = Nothing
    Set ObjPersonasList = Nothing
    
End Function



'This function is used to Check the items on Loan->Itemization Fee Management for the persona
'@code
'    BIZ_Settings_Personas_Loan_CheckItemizationFeeItems(arrFeeManagementItems)
'@endcode
'@param arrFeeManagementItems - The array of Fee Management Items

Function BIZ_Settings_Personas_Loan_CheckItemizationFeeItems(arrFeeManagementItems)
    FRM_Logger_ReportInfoEvent "Check Fee Management Items", "Check Fee Management Items on Persona->Loan tab",null

	Dim objSettings, objFeeMangementTreeView
    
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
    Set objFeeManagementTreeView = objSettings.SwfTreeView("swfname:=treeViewTabs","swfname path:=.*pnlFeeItms.*")
    
  	For i = LBound(arrFeeManagementItems) To UBound(arrFeeManagementItems)
        GUI_TreeView_ClickCheckBox objFeeManagementTreeView, arrFeeManagementItems(i), True
	Next 

	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If
	
	Set objSettings = Nothing
	Set objFeeManagementTreeView = Nothing
End Function



'This function is used to Check the items on Loan->Itemization Fee Management for the persona
'@code
'    BIZ_Settings_Personas_Loan_UncheckItemizationFeeItems(arrFeeManagementItems)
'@endcode
'@param arrFeeManagementItems - The array of Fee Management Items

Function BIZ_Settings_Personas_Loan_UncheckItemizationFeeItems(arrFeeManagementItems)
    FRM_Logger_ReportInfoEvent "Uncheck Fee Management Items", "Uncheck Fee Management Items on Persona->Loan tab", null

	Dim objSettings, objFeeMangementTreeView
    
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
    Set objFeeManagementTreeView = objSettings.SwfTreeView("swfname:=treeViewTabs","swfname path:=.*pnlFeeItms.*")
    
 	For i = LBound(arrFeeManagementItems) To UBound(arrFeeManagementItems)
        GUI_TreeView_ClickCheckBox objFeeManagementTreeView, arrFeeManagementItems(i), False
	Next
    

	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If
	
	Set objSettings = Nothing
	Set objFeeManagementTreeView = Nothing
End Function



'This function is used to Create a persona
'@code
'    BIZ_Settings_Personas_CreatePersona(strPersonaName,boolIsAccessToAll)
'@endcode
'@param strPersonaName - persona name
'@param boolIsAccessToAll - Whether "Access To All" is checked

Function BIZ_Settings_Personas_CreatePersona(strPersonaName,boolIsAccessToAll)
	    FRM_Logger_ReportInfoEvent "Create a Persona", "Create a Persona: '"&strPersonaName&"'"&" and it's 'Access to All' is "&boolIsAccessToAll, null
	    
		Dim objSettings,objPersonasList,objScrollBar,isExisted
	    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	    Set objPersonasList = objSettings.SwfListView("swfname:=lvPersona")	    
	    
        isExisted = False
        For i = 0 to objPersonasList.GetItemsCount -1
            If objPersonasList.GetItem(i)=strPersonaName Then
            	isExisted = True
            	Exit FOr
            End If       	
        Next
	    	    
	    'if the Persona doesn't exist,add the persona
	    If not isExisted Then
	    	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnAdd")
		    GUI_SwfEdit_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfEdit("swfname:=textBoxPersonaName"),strPersonaName
            If boolIsAccessToAll Then
        	    GUI_SwfRadioButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfRadioButton("swfname:=rbtnAccessToAll")
            End If
            If GUI_Object_IsExistX(objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),2) Then
                GUI_SwfCheckbox_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),True
            End If
            GUI_SwfButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfButton("swfname:=btnOK")
	    End If
		

        Set objSettings = Nothing
        Set objPersonasList = Nothing
		
		BIZ_Settings_Personas_CreatePersona = strPersonaName
	End Function

    
    
'This function is used to Create a persona
'@code
'    BIZ_Settings_Personas_CreateExternalPersona(strPersonaName,boolIsAccessToAll)
'@endcode
'@param strPersonaName - persona name
'@param boolIsAccessToAll - Whether "Access To All" is checked

Function BIZ_Settings_Personas_CreateExternalPersona(strPersonaName,boolIsAccessToAll)
	    FRM_Logger_ReportInfoEvent "Create a Persona", "Create a Persona: '"&strPersonaName&"'"&" and it's 'Access to All' is "&boolIsAccessToAll, null
	    
		Dim objSettings,objPersonasList,objScrollBar,isExisted
	    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	    Set objPersonasList = objSettings.SwfListView("swfname:=lvPersona")	    
	    
        isExisted = False
        For i = 0 to objPersonasList.GetItemsCount -1
            If objPersonasList.GetItem(i)=strPersonaName Then
            	isExisted = True
            	Exit FOr
            End If       	
        Next
	    	    
	    'if the Persona doesn't exist,add the persona
	    If not isExisted Then
	    	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnAdd")
		    GUI_SwfEdit_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfEdit("swfname:=textBoxPersonaName"),strPersonaName
            If boolIsAccessToAll Then
        	    GUI_SwfRadioButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfRadioButton("swfname:=rbtnAccessToAll")
            End If
            If GUI_Object_IsExistX(objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),2) Then
                GUI_SwfCheckbox_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),True
            End If
            GUI_SwfButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfButton("swfname:=btnOK")
	    End If
		

        Set objSettings = Nothing
        Set objPersonasList = Nothing
	End Function

    
    
'This function is used to Select a persona Type
'@code
'    BIZ_Settings_Personas_SelectPersonaType(strPersonaName,intPersonaTypePosition)
'@endcode
'@param strPersonaName - persona name
'@param intPersonaTypePosition - Persona Type position number passed 

Function BIZ_Settings_Personas_SelectPersonaType(strPersonaName,intPersonaTypePosition)
        
    FRM_Logger_ReportStepEvent "Changing the Persona Type","Persona Type should be changed depending upon the Position passed as parameter",Null    
    Dim objWshShell,strPersonaType
    Set objWshShell = CreateObject("WScript.Shell")
    objWshShell.Sendkeys ("+{F10}")
    For i  = 1 To intPersonaTypePosition
        objWshShell.Sendkeys "{DOWN}"
    Next
    objWshShell.Sendkeys "{ENTER}"
    strPersonaType = BIZ_Settings_Personas_GetPersonaType(strPersonaName)
    Set objWshShell = Nothing
    BIZ_Settings_Personas_SelectPersonaType = strPersonaType           
        
End Function    



'This function is used to Get a persona Type
'@code
'    BIZ_Settings_Personas_GetPersonaType(strPersonaName)
'@endcode
'@param strPersonaName - persona name

Function BIZ_Settings_Personas_GetPersonaType(strPersonaName)
    FRM_Logger_ReportStepEvent "Getting the Persona Type","Get the Type of Persona For Persona passed as parameter",Null    
    Dim intPersonaNamePosition,objList,strPersonaType
    Set objList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetupContainer").SwfListView("swfname:=lvPersona") 
        
    For i=0 To objList.GetItemsCount -1
        If objList.GetItem(i) = strPersonaName  Then
            intPersonaNamePosition = i
            Exit For
        End If
            
    Next
    On Error Resume Next
    strPersonaType=objList.GetSubItem(intPersonaNamePosition,1)
    If Err.Number <> 0 Then 
        If Err.Number = -2147024809 Then
            strPersonaType = ""
        Else
            strPersonaType = Err.Number & "," & Err.Description 
        End If
        Err.Clear
    End If     
    On Error Goto 0
    BIZ_Settings_Personas_GetPersonaType = strPersonaType
        
End Function



'This function is used to Create a persona of Type Internal, External or Both
'@code
'    BIZ_Settings_Personas_CreatePersona_WithTypes(strRowID,boolTPOFlagPresent)
'@endcode
'@param strRowID - RowID of the datasheet containing Persona details
'@param boolTPOFlagPresent - TPO flag passed as True if Set On 

Function BIZ_Settings_Personas_CreatePersona_WithTypes(strRowID,boolTPOFlagPresent)
	FRM_Logger_ReportInfoEvent "Create a Persona", " Creating a Persona Type As "&strRowID, null
	    
    Dim objSettings,objPersonasList,objScrollBar,isExisted
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPersonasList = objSettings.SwfListView("swfname:=lvPersona")	    
	    
	Set objData = FRM_DS_GetTestData("Setttings_CompanyUserSetup", "Persona_CreatePersona", strRowID)
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PersonaName")) Then
	    strPersonaName = FRM_DS_GetValue(objData, "PersonaName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AccessToAllFeatures")) Then
	    strAccessToAll = FRM_DS_GetValue(objData, "AccessToAllFeatures")
	    If strAccessToAll = "Yes" Then
            boolIsAccessToAll = True 
	    Else
	        boolIsAccessToAll = False  
	    End If
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PersonaType")) Then
	    strPersonaType = FRM_DS_GetValue(objData, "PersonaType")
	End If
	    
    isExisted = False
    For i = 0 to objPersonasList.GetItemsCount -1
        If objPersonasList.GetItem(i)=strPersonaName Then
            isExisted = True
            Exit FOr
        End If       	
    Next
	    	    
	'if the Persona doesn't exist,add the persona
	If NOT isExisted Then
	    GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnAdd")
	    If objSettings.SwfWindow("swfname:=PersonaNameDlg").Exist(1)  Then
	    	FRM_Logger_ReportPassEvent "Persona Creation Window ", "Persona Window Pop-Up Dialog Box appears", null
	    Else
		    FRM_Logger_ReportFailEvent "Persona Creation Window ", "Persona Window Pop-Up Dialog Box Doesnt appear", null
	    End If	
	    	
		GUI_SwfEdit_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfEdit("swfname:=textBoxPersonaName"),strPersonaName
        If boolIsAccessToAll Then
        	GUI_SwfRadioButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfRadioButton("swfname:=rbtnAccessToAll")
        End If
        FRM_Logger_ReportStepEvent "Validating The Label in Persona Dialog Box","Label should contain Start with",Null      
        GUI_Object_ValidateText objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfLabel("swfname:=label2"),"Start with:","Label Should Match"
            
            
        If boolTPOFlagPresent Then
            FRM_Logger_ReportStepEvent "Validating the Persona Type Section"," Persona Type Section should appear below Start With Section",Null 
            GUI_Object_ValidateText objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfLabel("swfname:=label4","Location:={X=9,Y=6}"),"Persona Type:","Persona Type Section should appear below Start with section"
                
            FRM_Logger_ReportStepEvent "Validating the Persona Type Checkboxes"," Internal Checkbox and Internal Text should appear",Null 
            GUI_Object_ValidateExists objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),2,"Internal Checkbox Should Exist"
            GUI_Object_ValidateText objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),"Internal","Internal Text Should Be Displayed"
            
            FRM_Logger_ReportStepEvent "Validating the Persona Type Checkboxes"," External Checkbox and External Text should appear",Null 
            GUI_Object_ValidateExists objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),2,"External Checkbox Should Exist"
            GUI_Object_ValidateText objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),"External","External Text Should Be Displayed"
                
            FRM_Logger_ReportStepEvent "Validating the Default Value of Persona Type Checkboxes","External Checkbox and Internal Checkbox should be unchecked by default",Null    
            GUI_Object_ValidateChecked objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),False,"External Checkbox should be unchecked by default"
            GUI_Object_ValidateChecked objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),False,"Internal Checkbox should be unchecked by default"             
                
            If strPersonaType = "Internal" Then
                GUI_SwfCheckbox_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),True
            ElseIf strPersonaType = "External" Then    
                GUI_SwfCheckbox_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),True
            ElseIf strPersonaType = "Both" Then    
                GUI_SwfCheckbox_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),True
                GUI_SwfCheckbox_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),True
            End If
            GUI_SwfButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfButton("swfname:=btnOK")
            If objSettings.SwfWindow("swfname:=PersonaNameDlg").Dialog("text:=Encompass").Exist(1) Then
                FRM_Logger_ReportStepEvent "Validate When No Persona Type is Selected and User Should Click on OK","Error Pop Up Message Should Be Displayed",Null 
                BIZ_BR_LoanActionCompletion_ValidateContent objSettings.SwfWindow("swfname:=PersonaNameDlg").Dialog("text:=Encompass").Static("micClass:=Static","height:=15"),"Please select a persona type."
                GUI_WinButton_Click SwfWindow("swfname:=PersonaNameDlg").Dialog("text:=Encompass").WinButton("text:=OK")
                GUI_SwfButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfButton("swfname:=button1")
            End If
        Else
            FRM_Logger_ReportStepEvent "Validating the Persona Type Section if TPOAdminAccess Flag is Set to False"," Persona Type Section Should Not appear below Start With Section",Null 
            GUI_Object_ValidateNotExists objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),2,"External Checkbox Should Not Be Present"
            GUI_Object_ValidateNotExists objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),2,"Internal Checkbox Should Not Be Present"                    
            GUI_SwfButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfButton("swfname:=button1")
        End If
                 
	End If
	Set objSettings = Nothing
    Set objPersonasList = Nothing    
        
End Function



'This function is used to Get a list of Personas depending upon the Type passed as Parameter
'@code
'    BIZ_Settings_Personas_GetPersona(strPersonaTypes)
'@endcode
'@param strPersonaTypes - The Type of Persona passed as Parameter as "External", "Internal", "Both"

Function BIZ_Settings_Personas_GetPersona(strPersonaTypes)
	    FRM_Logger_ReportInfoEvent "Selecting Persona", "Selecting Persona of Type: "&strPersonaTypes, null
	    Dim arrPersonaNames()
		Dim objSettings,objPersonasList
	    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	    Set objPersonasList = objSettings.SwfListView("swfname:=lvPersona")	    
	    
        isExisted = False
        intPersonaPosition = 0
        For i = 0 to objPersonasList.GetItemsCount -1
            strPersonaName = objPersonasList.GetItem(i)
            strPersonaType = BIZ_Settings_Personas_GetPersonaType(strPersonaName)   
            If strPersonaTypes = "Both" Then
                If strPersonaType = "External" OR strPersonaType = "Both Internal and External" Then 
                    If intPersonaPosition = 0 Then
                        ReDim arrPersonaNames(0)
                    Else
                       ReDim Preserve arrPersonaNames(intPersonaPosition)  
                    End If
                    arrPersonaNames(intPersonaPosition) = strPersonaName
                    intPersonaPosition = intPersonaPosition + 1
                End If  
            End If
                        
        Next
        BIZ_Settings_Personas_GetPersona = arrPersonaNames
End Function 



'This function is used to set Company Settings access rights under Settings tab for personas
'@code
'    BIZ_Personas_Settings_CompanySettings_AccessRight(strPersonaName, arrSelection)
'@endcode
'@param strPersonaName - persona name
'@param arrSelection - options to check array list

Function BIZ_Personas_Settings_CompanySettings_AccessRight(strPersonaName, arrSelection())
	
	FRM_Logger_ReportInfoEvent "Set Company Settings Access Right", "Set Company Settings access right for persona '"&strPersonaName&"'", null
	Dim objSettings, objGeneralTreeView
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objGeneralTreeView = objSettings.SwfTreeView("swfname path:=treeViewTabs;gcTreeView;SettingsCompanyPage;pnlExCompanySettings;panelCompanyPage;.*")
	
	GUI_List_Select objSettings.SwfListView("swfname:=lvPersona"), strPersonaName
    GUI_SwfTab_Click objSettings.SwfTab("swfname:=tabControl1"), "Settings"
	GUI_Object_WaitTillExistX objGeneralTreeView, 60
	
	For i = LBound(arrSelection) To UBound(arrSelection)
		GUI_TreeView_ClickCheckBox objGeneralTreeView, arrSelection(i), True
	Next
	
	'save if there are any changes in the selection
	If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	Else
		FRM_Logger_ReportInfoEvent "Company Settings Access Right", "Given Access Right checkboxes are already set", Null
	End If
	
	Set objSettings = Nothing
	Set objGeneralTreeView = Nothing
	
End Function



 'This function is used to delete a persona
'@code
'    BIZ_Settings_Personas_DeletePersona(strPersonaName)
'@endcode
'@param strPersonaName - persona name

Function BIZ_Settings_Personas_DeletePersona(strPersonaName)

	    FRM_Logger_ReportInfoEvent "Delete a Persona", "Delete a Persona: '"&strPersonaName, null
	    
		Dim objSettings,objPersonasList,isExisted
	    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	    Set objPersonasList = objSettings.SwfListView("swfname:=lvPersona")	    
	    
        isExisted = False
        For i = 0 to objPersonasList.GetItemsCount -1
            If objPersonasList.GetItem(i)=strPersonaName Then
            	isExisted = True
            	Exit FOr
            End If       	
        Next
        
        If isExisted Then
        	GUI_List_Select objPersonasList,strPersonaName
        	GUI_Object_Click objSettings.SwfObject("swfname:=stdIconBtnDelete"),"SwfObject","Swfobject to delete existing persona"
        	If objSettings.SwfWindow("swfname:=DeletePersonaDlg").Exist Then
        		GUI_SwfButton_Click objSettings.SwfWindow("swfname:=DeletePersonaDlg").SwfButton("swfname:=btnOK")	
        	End If
        	GUI_DialogObject_Encompass_Yes SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("index:=0"), "Are you sure you want to delete the persona"
        End If

 End Function
 
 
 
' This function is for Rename the persona.
' @code
'   BIZ_Settings_Personas_RenamePersona(strRowID) 
' @endcode
' @param strRowID - RowID of the datasheet containing Persona details
' @param strPersonaName - Persona name

Function BIZ_Settings_Personas_RenamePersona(strRowID,strPersonaName)

	FRM_Logger_ReportInfoEvent "Rename Persona","Rename Persona by right click", Null
				
	Dim objSettings,objData
	
	Set objSettings	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData 	= FRM_DS_GetTestData("Setttings_CompanyUserSetup", "Persona", strRowID)
	Set objPersonaProgramList = objSettings.SwfListView("swfname:=lvPersona")
	
	strRenPersona = CStr(FRM_DS_GetValue(objData, "PersonaRename")) 
	GUI_Object_WaitTillExistX objPersonaProgramList, 300
	
	'Due to right click operation is not working for this scenario so that we used below code
	objPersonaProgramList.Select strPersonaName, micRightBtn
	objPersonaProgramList.WinMenu("menuobjtype:=3").Select "Rename"
	
	If UTIL_String_IsNotEmpty(strRenPersona) Then
		GUI_WinEdit_Set objSettings.winedit("Index:=0"),strRenPersona
	End If
	objPersonaProgramList.click
	
				
	Set objData            		= Nothing
	Set objSettings        		= Nothing
	
	BIZ_Settings_Personas_RenamePersona = strRenPersona
		
End Function



' This function is for duplicating the persona.
'@code
'   BIZ_Settings_Personas_DuplicatePersona(NewPersona) 
'@endcode
'@param NewPersona - persona used to duplicate

Function BIZ_Settings_Personas_DuplicatePersona(NewPersona)

	FRM_Logger_ReportInfoEvent "Create Persona","Verification of duplicating the persona", Null
			
	Dim objSettings, objPersonaProgramList,boolExist,strDuplicatePersona
	
	Set objSettings 		  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPersonaProgramList = objSettings.SwfListView("swfname:=lvPersona")
		
	GUI_Object_WaitTillExistX objPersonaProgramList, 300
	GUI_SwfList_Select objPersonaProgramList,NewPersona
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDuplicate") 
	Wait g_TinyWaitSmall 'Explicit Wait Added Due to Sync	
	GUI_SwfObject_Click objPersonaProgramList
	
	strDuplicatePersona = "Copy of " & NewPersona
	
	Set objSettings        		= Nothing
	Set objPersonaProgramList   = Nothing
	
	BIZ_Settings_Personas_DuplicatePersona = strDuplicatePersona
			
End Function



' This function is for creating the persona.
'@code
'   BIZ_Settings_CompanyUserSetup_CreatePersona(strRowID) 
'@endcode
'@param strRowID - rowID for data

Function BIZ_Settings_CompanyUserSetup_CreatePersona(strRowID)

	FRM_Logger_ReportInfoEvent "BIZ_Settings_CompanyUserSetup_CreatePersona", " Create a Persona using rowid "&strRowID, null

    Dim objSettings, objPersonasList, objData, strPersonaName, strStartWith, strInternalType, strExternalType
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objPersonasList = objSettings.SwfListView("swfname:=lvPersona")	    
	Set objData = FRM_DS_GetTestData("Setttings_CompanyUserSetup", "Persona", strRowID)
	
	strPersonaName 	= FRM_DS_GetValue(objData, "PersonaName")
	strStartWith 	= FRM_DS_GetValue(objData, "Startwith")
	strInternalType = FRM_DS_GetValue(objData, "InternalType")
	strExternalType = FRM_DS_GetValue(objData, "ExternalType")
	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnAdd")
	
	If UTIL_String_IsNotEmpty(strPersonaName) Then
		GUI_SwfEdit_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfEdit("swfname:=textBoxPersonaName"), strPersonaName
	End If

	If UTIL_String_IsNotEmpty(strStartWith) Then
		If strStartWith = "Access to No Features" Then
			GUI_SwfRadioButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfRadioButton("swfname:=rbtnAccessToNone")
		ElseIf strStartWith = "Access to All Features" Then
			GUI_SwfRadioButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfRadioButton("swfname:=rbtnAccessToAll")
		End If
	End If
	
	If UTIL_String_IsNotEmpty(strInternalType) And GUI_Object_IsExistX(objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"),2) Then
		GUI_SwfCheckbox_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkInternal"), strInternalType
	End If

	If UTIL_String_IsNotEmpty(strExternalType) And GUI_Object_IsExistX(objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"),2) Then
		GUI_SwfCheckbox_Set objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfCheckBox("swfname:=chkExternal"), strExternalType
	End If
	
	GUI_SwfButton_Click objSettings.SwfWindow("swfname:=PersonaNameDlg").SwfButton("swfname:=btnOK")
		
	Set objSettings 	= Nothing
	Set objPersonasList = Nothing
	Set objData 		= Nothing

	BIZ_Settings_CompanyUserSetup_CreatePersona = strPersonaName
	
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\Persona.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\Settings.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings BIZ_Settings
'
' List of functions here
' @code
'	Function BIZ_Settings_ExpandTreeView(strTreeViewNode)
'	Function BIZ_Settings_SelectInTreeView(strItemName)
'   Function BIZ_Settings_ClickSave()
'   Function BIZ_Settings_ClickAdd()
'   Function BIZ_Settings_ClickCopy()
'   Function BIZ_Settings_ClickEdit()
'   Function BIZ_Settings_Dialog_ClickYes()
'   Function BIZ_Settings_ClickDelete()
'   Function BIZ_Settings_ClickMoveUp()
'   Function BIZ_Settings_ClickMoveDown()
'   Function BIZ_Settings_ClickReset()
'   Function BIZ_Settings_ClickClose()
'   Function BIZ_Settings_Dialog_YES_Click()
'   Function BIZ_Settings_Dialog_NO_Click()
'   Function BIZ_Settings_DeleteExisting_Rule(strFieldDataEntry)
'   Function BIZ_Settings_SelectExistingRule(strFieldDataEntry,strAction)
'   Function BIZ_Settings_Documents_ClickNew()
'   Function BIZ_Settings_Documents_Create(strDocumentType)
'   Function BIZ_Settings_ClickDuplicate()
'	Function BIZ_Settings_Dialog_ClickNo()
'	Function BIZ_Settings_LoanDup_ClickDelete()
'	Function BIZ_Settings_LoanDup_ClickDelete()
'	Function BIZ_Settings_LoanDup_ClickAdd()
'	Function BIZ_Settings_LoanDup_ClickDuplicate()
'	Function BIZ_Settings_LoanDup_ClickSave()
'	Function BIZ_Settings_LoanDup_ClickCancel() 
'	Function BIZ_Settings_LoanDup_ClickRename() 
'	Function BIZ_Settings_ClickRename()
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to Open Encompass Settings screen. On the screen, use the hierarchy tree in the left panel to open an option
'@code
'    BIZ_Settings_ExpandTreeView(strTreeViewNode)
'    BIZ_Settings_ExpandTreeView "Secondary Setup"
'@endcode
'@param strTreeViewNode - Settings tree view item

Function BIZ_Settings_ExpandTreeView(strTreeViewNode)
 
    FRM_Logger_ReportInfoEvent "Set Expand Tree View", "Node to expand '"&strTreeViewNode&"'", null
    
	Dim objMain, objList, objTreeView
	Set objMain = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objList = SwfWindow("swfname:=MainForm").SwfToolbar("swfname:=mainMenu")
	Set objTreeView = objMain.SwfTreeView("swfname:=treeView")
	
	If Not objMain.Exist(0) Then		
		GUI_SwfToolbar_ShowDropdown objList,"Encompass"		
		GUI_SwfToolbar_Select objList, "Encompass;Settings..."	
	End If 
	GUI_Object_WaitTillExistX objTreeView, 60
	objMain.Maximize
	objTreeView.Expand strTreeViewNode 
End Function	



'This function is used for the hierarchy tree in the left panel click on an option
'@code
'    BIZ_Settings_SelectInTreeView(strItemName) 
'    BIZ_Settings_SelectInTreeView "Secondary Setup;Product and Pricing"
'@endcode
'@param strItemName - Settings sub item in the tree vew

Function BIZ_Settings_SelectInTreeView(strItemName) 

    FRM_Logger_ReportInfoEvent "Select in the Tree View", "Item to select '"&strItemName&"'", null

	Dim objMainWin
	Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Wait g_LongWaitLarge
	GUI_SwfTreeView_Select objMainWin.SwfTreeView("swfname:=treeView"), strItemName
	Wait g_LongWaitLarge
	strTitle = Split(strItemName, ";")(1)
	GUI_Object_WaitTillExistX objMainWin.SwfLabel("swfname:=lblHeader", "text:="&strTitle), 30
End Function

Function BIZ_Settings_ClickSave()   
   GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnSave")   
End Function



'This function is used for click the "New" icon on the Settings Window
'@code
'    BIZ_Settings_ClickAdd() 
'@endcode

Function BIZ_Settings_ClickAdd()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")
End Function



'This function is used for click the "Copy" icon on the Settings Window
'@code
'    BIZ_Settings_ClickCopy() 
'@endcode

Function BIZ_Settings_ClickCopy()
    GUI_SwfObject_Click SwfWindow("swfname:=Mainform").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdBtnCopy")
End Function



'This function is used for click the "Edit" icon on the Settings Window
'@code
'    BIZ_Settings_ClickEdit() 
'@endcode

Function BIZ_Settings_ClickEdit()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnEdit")
End Function 



'This function is used for click the "Yes" icon of popup dialog on the Settings Window
'@code
'    BIZ_Settings_Dialog_ClickYes() 
'@endcode

Function BIZ_Settings_Dialog_ClickYes()
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("index:=0").WinButton("text:=&Yes")
End Function



'This function is used for click the "Delete" icon on the Settings Window
'@code
'    BIZ_Settings_ClickDelete() 
'@endcode

Function BIZ_Settings_ClickDelete()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnDelete")
End Function



'This function is used for click the "Move Up" icon on the Settings Window
'@code
'    BIZ_Settings_ClickMoveUp() 
'@endcode

Function BIZ_Settings_ClickMoveUp()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnUp")
End Function



'This function is used for click the "Move Down" icon on the Settings Window
'@code
'    BIZ_Settings_ClickMoveDown() 
'@endcode

Function BIZ_Settings_ClickMoveDown()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnDown")
End Function



'This function is used for click the "Reset" icon on the Settings Window
'@code
'    BIZ_Settings_ClickReset() 
'@endcode

Function BIZ_Settings_ClickReset()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnReset")
End Function



'Function to click on Yes in Dialog Box
'@code
'    BIZ_Settings_Dialog_YES_Click()
'@endcode

Function BIZ_Settings_Dialog_YES_Click()
	Dim objMainWin , objEncompassDialog
	
	Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
	Set objEncompassDialog = objMainWin.Dialog("text:=Encompass")
		
	GUI_WinButton_Click objEncompassDialog.WinButton("text:=&Yes")
		 
	Set objMainWin = Nothing
	Set objEncompassDialog = Nothing
		
End Function



'Function to click on No in Dialog Box
'@code
'    BIZ_Settings_Dialog_NO_Click()
'@endcode

Function BIZ_Settings_Dialog_NO_Click()
	Dim objMainWin ,objEncompassDialog
	
	Set objMainWin = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer") 
	Set objEncompassDialog = objMainWin.Dialog("text:=Encompass")
	
	GUI_WinButton_Click objEncompassDialog.WinButton("text:=&No")
		 
	Set objMainWin = Nothing
	Set objEncompassDialog = Nothing
		
End Function



'Function to check if Rule is present and delete if present  in  Pane
'@code
'    BIZ_Settings_DeleteExisting_Rule(strFieldDataEntry)
'@endcode
'@see GUI_List_ClickRow
'@param strFieldDataEntry- Rule to check if it exists and delete the rule if present

Function BIZ_Settings_DeleteExisting_Rule(strFieldDataEntry)

	FRM_Logger_ReportInfoEvent "Delete Rule", "Delete Rule with name"&strFieldDataEntry, null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry, boolExist
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarFieldDataEntry = objFieldDataEntryList.SwfScrollBar("swfname:=vPanelScrollBar")

	boolExist = GUI_List_ClickRow (objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strFieldDataEntry, True, False, False, "Single")

	If boolExist  Then

      	BIZ_Settings_ClickDelete
		BIZ_Settings_Dialog_ClickYes   
	End If
	
	Set objFieldDataEntryList = Nothing
	Set scrollbarFieldDataEntry = Nothing
	BIZ_Settings_DeleteExisting_Rule = boolExist
End Function



'Function to select the Business Rule present and perform a Single Click or Double Click
'@code
'    BIZ_Settings_SelectExistingRule(strFieldDataEntry,strAction)
'@endcode
'@param strAction - action to be checked ie "Single" or "Double"
'@param strFieldDataEntry - Rule name to be checked 
'@see GUI_List_ClickRow

Function BIZ_Settings_SelectExistingRule(strFieldDataEntry,strAction)

	FRM_Logger_ReportInfoEvent "Open Existing Rule", "Open Existing Rule with name"&strFieldDataEntry, null

	Dim objFieldDataEntryList, scrollbarFieldDataEntry, exist
	Set objFieldDataEntryList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=listViewRule")
	Set scrollbarFieldDataEntry = objFieldDataEntryList.SwfScrollBar("swfname:=vPanelScrollBar")

	boolExist = GUI_List_ClickRow (objFieldDataEntryList, scrollbarFieldDataEntry, "Name", strFieldDataEntry, True, False, False, strAction)
	
	Set objFieldDataEntryList = Nothing
	Set scrollbarFieldDataEntry = Nothing
    BIZ_Settings_SelectExistingRule = boolExist

End Function



'This function is used for click the "New" icon on the Settings Window
'@code
'    BIZ_Settings_Documents_ClickNew() 
'@endcode

Function BIZ_Settings_Documents_ClickNew()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnNewTemplate")
End Function



'This function is used create a documentName
'@code
'    BIZ_Settings_Documents_Create(strDocumentType) 
'@endcode

Function BIZ_Settings_Documents_Create(strDocumentType)
	Dim strCurrentTime,strDocumentName
	strCurrentTime = Now()
	strDocumentName = strDocumentType+CStr(strCurrentTime)
	 
	BIZ_Settings_Documents_Create = strDocumentName
End Function



'This function is used for click the "Duplicate" icon on the Settings Window
'@code
'    BIZ_Settings_ClickDuplicate() 
'@endcode

Function BIZ_Settings_ClickDuplicate()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnDuplicate")
End Function



'This function is used for Close Settings Window
'@code
'    BIZ_Settings_ClickClose() 
'@endcode

Function BIZ_Settings_ClickClose()
	'wait g_ShortWaitMedium
	'GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfButton("swfname:=btnClose")
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Close
End Function



'This function is used for click the "No" icon of popup dialog on the Settings Window
'@code
'    BIZ_Settings_Dialog_ClickNo() 
'@endcode
Function BIZ_Settings_Dialog_ClickNo()
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("index:=0").WinButton("text:=&No")
End Function



'This function is used for click the "Delete" icon on the Settings Window
'@code
'    BIZ_Settings_LoanDup_ClickDelete() 
'@endcode

Function BIZ_Settings_LoanDup_ClickDelete()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDelete")
End Function



'This function is used for click the "New" icon on the Settings->Loan Duplicate Window
'@code
'    BIZ_Settings_LoanDup_ClickAdd() 
'@endcode

Function BIZ_Settings_LoanDup_ClickAdd()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnNew")
End Function



'This function is used for click the "Duplicate" icon on the Settings->Loan Duplicate Window
'@code
'    BIZ_Settings_LoanDup_ClickDuplicate() 
'@endcode

Function BIZ_Settings_LoanDup_ClickDuplicate()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDuplicate")
End Function



'This function is used for click the "Duplicate" icon on the Settings->Loan Duplicate Window
'@code
'    BIZ_Settings_LoanDup_ClickSave() 
'@endcode

Function BIZ_Settings_LoanDup_ClickSave()   
   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanDuplicationTemplateForm").SwfButton("swfname:=btnSave")   
End Function



'This function is used for click the "Cancel" icon on the Settings->Loan Duplicate Window
'@code
'    BIZ_Settings_LoanDup_ClickCancel() 
'@endcode

Function BIZ_Settings_LoanDup_ClickCancel()   
   GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LoanDuplicationTemplateForm").SwfButton("swfname:=btnCancel")   
End Function



'This function is used for click the "Rename" icon on the Settings->Loan Duplicate Window
'@code
'    BIZ_Settings_LoanDup_ClickRename() 
'@endcode

Function BIZ_Settings_LoanDup_ClickRename()
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gcListView").SwfButton("swfname:=btnRename")
End Function



'This function is used for click the "Rename" icon on the Settings->Loan Duplicate Window
'@code
'    BIZ_Settings_ClickRename() 
'@endcode

Function BIZ_Settings_ClickRename()
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfButton("swfname:=btnRename")
End Function

'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\Settings.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\SystemAuditTrail.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Settings_SystemAuditTrail BIZ_Settings_SystemAuditTrail
'
' List of functions here
'@code
'	Function BIZ_SystemAuditTrail_Search()
'   Function BIZ_SystemAuditTrail_GetSearchResultNumber(strCategory, strAction, strBoLastName)
'   Function BIZ_SystemAuditTrail_VerifyModifiedInColumnBasedOnLoanNumber()
'	Function BIZ_SystemAuditTrail_VerifyBySearch(strPersonaName, strAction, StrSearchColumn)
'@endcode
'
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to search system audit trail
'@code
'    BIZ_SystemAuditTrail_Search()
'@endcode
'@param strCategory - The search category
'@param strAction - The search trail action
'@param strCoLastName - The search trail last name

Function BIZ_SystemAuditTrail_Search(strCategory, strAction, strBoLastName)

	FRM_Logger_ReportInfoEvent "System Administrator;System Audit Trail", "Search system audit trail", null
    
    Dim objSettingWindow
    Set objSettingWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    If Not UTIL_String_IsEmpty(strCategory) Then
		GUI_SwfComboBox_Select objSettingWindow.SwfComboBox("swfname:=cmbCategory"), strCategory
	End If
	If Not UTIL_String_IsEmpty(strAction) Then
		GUI_SwfComboBox_Select objSettingWindow.SwfComboBox("swfname:=cmbAction"), strAction
	End If
	If Not UTIL_String_IsEmpty(strBoLastName) Then
		GUI_SwfEdit_Set objSettingWindow.SwfEdit("swfname:=txtObject"), strBoLastName
	End If
	GUI_SwfButton_Click objSettingWindow.SwfButton("swfname:=btnSearch")
	
	Set objSettingWindow = nothing	
End Function



'This function is used to verify the cell data in Modified In column
'@code
'    BIZ_SystemAuditTrail_VerifyModifiedInColumnBasedOnLoanNumber()
'@endcode
'@param strLoanNumber - The loan number to search
'@param strMidifiedInText - The verify cell data text

Function BIZ_SystemAuditTrail_VerifyModifiedInColumnBasedOnLoanNumber(strLoanNumber, strMidifiedInText)

	FRM_Logger_ReportInfoEvent "System Administrator;System Audit Trail", "Search system audit trail", null
    
    Dim objSearchResult, intRowNum
    Set objSearchResult = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvRecords")
    Wait 10
    intRowNum = GUI_List_GetRowIndex(objSearchResult, "Loan Number", strLoanNumber)
    GUI_List_ValidateCellData objSearchResult, intRowNum, "Modified In", strMidifiedInText 
	
	Set objSearchResult = nothing	
End Function



'This function is used to get search system audit trail number
'@code
'    BIZ_SystemAuditTrail_GetSearchResultNumber(strCategory, strAction, strBoLastName)
'@endcode
'@param strCategory - The search category
'@param strAction - The search trail action
'@param strCoLastName - The search trail last name

Function BIZ_SystemAuditTrail_GetSearchResultNumber(strCategory, strAction, strBoLastName)

	FRM_Logger_ReportInfoEvent "System Administrator;System Audit Trail", "Get search result number based on criteria", null
	
	BIZ_SystemAuditTrail_Search strCategory, strAction, strBoLastName
	Wait 10
	Dim strResultNum
	strResultNum = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gcAuditTrails"), "Text")
	intBracketPosition1 = Instr(1,strResultNum,"(")

	intBracketPosition2 = Instr(1,strResultNum,")")

	strResultNum = Mid(strResultNum,intBracketPosition1+1,intBracketPosition2-intBracketPosition1-1)

	BIZ_SystemAuditTrail_GetSearchResultNumber = Int(strResultNum)
	
End Function



'This function is used to verify Action by search in System Audit Trail
'@code
'    BIZ_SystemAuditTrail_VerifyBySearch(strPersona,strAction,StrSearchColumn)
'@endcode
'@param strPersona  - The name of a Persona
'@param strAction   - Action to be Performed
'@param StrSearchColumn   - Column name

Function BIZ_SystemAuditTrail_VerifyBySearch(strPersonaName, strAction, StrSearchColumn)

	FRM_Logger_ReportInfoEvent "System Administrator;System Audit Trail", "Verify '"&strAction&"' Action in System Audit Trail", null
    
    Dim objSearchResult,boolExist
    Set objSearchResult = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvRecords")
    
    Wait g_LongWaitLarge	' Due To Sync Issue We Are Calling Explicit Wait Statement
	boolExist = GUI_List_ClickRow (objSearchResult, Null, StrSearchColumn,strPersonaName, True, False, False, "Single")
    FRM_VerifyTrue boolExist,"Verify '"&strAction&"' Action in System Audit Trail","'"&strPersonaName&"' should be displayed in the Record"

	Set objSearchResult = Nothing	
	
End Function

'@}

''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\SystemAuditTrail.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\TablesAndFees.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_TablesFees BIZ_TablesFees
'
' List of functions here
' @code
'   Function BIZ_TablesFees_AddEditTitleFees(strRowID)
'   Function BIZ_TablesFees_CreateNewTitleFees()
'	Function BIZ_TablesFees_SetTitleFeesAsDefault(strTitleFeesTableName)
'   Function BIZ_TablesFees_DeleteTitleFees(strTitleFeesTableName)
'	Function BIZ_TablesFees_AddEditEscrowFees(strRowID)
'	Function BIZ_TablesFees_SetEscrowFeesAsDefault(strEscrowFeesTableName)
'   Function BIZ_TablesFees_DeleteEscrowFees(strEscrowFeesTableName)
'   Function BIZ_TablesFees_SelectFees(strFeesName)
'   Function BIZ_TablesFees_CreateNewEscrowFees(strFeesName)
'	Function BIZ_TablesAndFees_AddMIScenarioData(strRowID)
'	Function BIZ_TablesAndFees_AddMIScenarioData_AddEditFilterData(intField, strOperator, strRowID)
'	Function BIZ_TablesAndFees_EditMITableData(strScenario, strRowID)
'	Function BIZ_TablesAndFees_DuplicateMITableData(strScenario, strRowID)
'	Function BIZ_TablesAndFees_DeleteMITableRecord(strScenario)
'   Function BIZ_TablesFees_CreateTitleFees(strRowID)
'   Function BIZ_TablesFees_CreateEscrowFees(strRowID)
'   Function BIZ_BorrowerSummaryOrigination_SetProperty_EstateWillBeHeldIn(strRowID)
'	Function BIZ_Settings_TablesandFees_TaxRecord_Creation(strRowID,strTaxType)
'   Function BIZ_Settings_TablesAndFees_TaxRecord_Delete(strFeeDescription,strTaxType)
'   Function BIZ_Settings_TablesandFees_ItemizationFeeRecord_Creation(strRowID) 
'	Function BIZ_Settings_TablesandFees_ItemizationFeeRecord_Delete(strFeeDataName)
'   Function BIZ_Settings_TablesandFees_CreateFeesRecord(strRowID)
'	Private Function BIZ_Settings_Escrow_Fees_FeesSection(strRowID)
'	Private Function BIZ_Settings_TablesandFees_EscrowFeesSection_Datavalidation()
'	Private Function BIZ_Settings_Escrow_Fees_CalculationSection(strRowID)
'   Function BIZ_TableAndFees_LoanCreation(strRowID)
'	Function BIZ_Settings_TablesandFees_EscrowFees_Edit(strRowID, strPurchaseTableName)
'	Function BIZ_Settings_TablesandFees_EscrowFees_Duplicate(strRowID, strPurchaseTableName)
'	Function BIZ_Settings_TablesandFees_EscrowFees_Delete(strRowID, strRefinanceTableName)
'   Function BIZ_TableAndFees_LoanCreation_BorrowerSummaryOrigination(strRowID)
'   Function BIZ_CloseLoanForm_SaveLoanNO()
'	Function BIZ_Settings_TablesandFees_TaxAmountValidation(strCityTaxRecord,strRowID,strRowID2,strTaxType)
'	Function BIZ_Settings_TablesandFees_SelectTaxRecord(strTaxRecord,strTaxType)
'   Function BIZ_Settings_CreateUserDefinedFeeRecord(strRowID)
'   Function BIZ_Settings_TablesandFees_ValidateTaxRecord (strRowID,strTaxType,strFeeDescription,strActionType)
'   Function BIZ_Settings_TablesAndFees_TaxRecord_Edit(strRowID,strFeeDescription,strTaxType)
'   Function BIZ_TablesAndFees_SelectMITableConvTab(strRowID,strMITab)
'	Function BIZ_TableandFees_SelectMIDetailPage_GetMIPDetails(strRowID,strScenarioName)
'	Function BIZ_TableandFees_MIFF_AmountAutoPopulate_Verify_ConventionalLoanRecord(strRowID)
'	Function BIZ_TableandFees_MIFF_AmountAutoPopulate_ConventionalLoanAmountValidation(strRowID,strRowID2)
'   Function BIZ_TablesAndFees_SelectMIConventionalTab(strConventionalTab)
'	Function BIZ_Settings_TablesandFees_DuplicateEscrowRecord(strTableNameActual,strRowID)
'	Function BIZ_Settings_TablesandFees_DeleteEscrowRecord(strTableNameActual)
'	Function BIZ_Settings_TablesandFees_RenameEscrowRecord(strTableNameActual,strRowID)
'	Function BIZ_Settings_TablesandFees_EditEscrowRecord(strTableNameActual,strRowID)
'   Function BIZ_Settings_TablesandFees_VerifyEscrowFeesDetailsVerify(strTableName,strRowID)
'   Function BIZ_Settings_TablesandFees_CreateFHACountyLoanLimits(strRowID)
'	Function TablesAndFees_Verify_MIScenarioData(strScenario,strRowID)
'	Function BIZ_TablesAndFees_SetMIPFundingGuaranteeValue(strRowID)
'	Function BIZ_Settings_TablesAndFees_ValidateLOCompPlanDetails(strLOCompPlanName)
'	Function BIZ_Settings_TablesAndFees_SetLOCompPlanDetails(strRowID)
'	Function BIZ_Settings_TablesAndFees_CreateLOCompPlanDetails(strRowID)
'	Function BIZ_Settings_TablesAndFees_DeleteLOCompPlan (strLOCompPlanName)
' 	Function BIZ_Settings_TableAndFees_LoanCreation_1003Page1(strRowID)
' 	Function BIZ_Settings_TablesandFees_VerifyFHACountyLoanLimits(strRowID)
' 	Function BIZ_Settings_TablesandFees_VerifyEnforceCountyLoanDialogMsg(strRowID,strRowID2,strColName)
' 	Function BIZ_Settings_TablesandFeees_DeleteHelocTable(strHeloctableName,strPopUpText)
' 	Function BIZ_Settings_TablesAndFeees_DeleteHelocTableRecord(strHeloctableName,strRowID,strPopUpText)
' 	Function BIZ_Settings_TablesAndFeees_VerifyHelocTableNameCreatedOrDelete(strHeloctableName,boolStatus)
' 	Function BIZ_Settings_TablesAndFeees_HelocTableCreation(strRowID)
' 	Function BIZ_Settings_TablesandFeees_HelocTableRename(strHeloctableName,strRowID)
'   Function BIZ_Settings_TablesAndFeees_EditHelocTable (strHeloctableName,strRowID)
'   Function BIZ_Settings_TablesandFeees_SetHelocTable(strRowID)
'	Function BIZ_Settings_TablesAndFees_LOCompensation_SetDefaultPlanSetting(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to add new or Edit title fees
'@code
'    BIZ_TablesFees_AddEditTitleFees(strRowID)
'@endcode
'@param strRowID - row id for data

Function BIZ_TablesFees_AddEditTitleFees(strRowID)

	Set objData = FRM_DS_GetTestData("Settings_TablesFees", "TitleFees", strRowID)
	Set objTitleFeeDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TableGroupDialog")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TableName")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfEdit("swfname:=tableNameTxt"), FRM_DS_GetValue(objData, "TableName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanPurpose")) Then
		GUI_SwfComboBox_Select objTitleFeeDetails.SwfComboBox("swfname:=cboPurpose"), FRM_DS_GetValue(objData, "LoanPurpose")	
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Type")) Then
		GUI_SwfComboBox_Select objTitleFeeDetails.SwfComboBox("swfname:=cboFeeType"), CSTR(FRM_DS_GetValue(objData, "Type"))
	End If
	
	'===========Add Fees amount==========
	GUI_SwfObject_Click objTitleFeeDetails.SwfObject("swfname:=btnIconAdd")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Base")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=baseTxt"), FRM_DS_GetValue(objData, "Base")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RangeUpto")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=upToTxt"), FRM_DS_GetValue(objData, "RangeUpto")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Factor")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=factorTxt"), FRM_DS_GetValue(objData, "Factor")
	End If
	
	GUI_SwfButton_Click objTitleFeeDetails.SwfWindow("swfname:=TableDialog").SwfButton("swfname:=okBtn")
	
	GUI_SwfButton_Click objTitleFeeDetails.SwfButton("swfname:=okBtn")
	
	Set objTitleFeeDetails =  Nothing
	
End Function



'This function is used to create new title fees
'@code
'    BIZ_TablesFees_CreateNewTitleFees()
'@endcode

Function BIZ_TablesFees_CreateNewTitleFees()

	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")

End Function



'This function is used to set title fees as default
'@code
'    BIZ_TablesFees_SetTitleFeesAsDefault(strTitleFeesTableName)
'@endcode
'@param strTitleFeesTableName - Table fees to make as default

Function BIZ_TablesFees_SetTitleFeesAsDefault(strTitleFeesTableName)

	Set objTitleFeeTable = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	GUI_List_ClickRow objTitleFeeTable.SwfObject("swfname:=listView"), NULL, "Table Name", strTitleFeesTableName, True, False, False, "Single"
	
	GUI_SwfButton_Click objTitleFeeTable.SwfButton("swfname:=setDefaultBtn")
		
	Set objTitleFeeTable = Nothing

End Function



'This function is used to delete title fees
'@code
'    BIZ_TablesFees_DeleteTitleFees(strTitleFeesTableName)
'@endcode
'@param strTitleFeesTableName - Table fees to delete

Function BIZ_TablesFees_DeleteTitleFees(strTitleFeesTableName)

Set objTitleFeeTable = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

boolFound = GUI_List_ClickRow(objTitleFeeTable.SwfObject("swfname:=listView"), NULL, "Table Name", strTitleFeesTableName, True, False, False, "Single")

If boolFound Then
	GUI_SwfObject_Click objTitleFeeTable.SwfObject("swfname:=stdIconBtnDelete")

	If objTitleFeeTable.Dialog("text:=Encompass").Exist(10) Then
		GUI_WinButton_Click objTitleFeeTable.Dialog("text:=Encompass").WinButton("text:=&Yes")
	End If
	
End If
	
Set objTitleFeeTable = Nothing

End Function



'This function is used to add new or Edit Escrow fees
'@code
'    BIZ_TablesFees_AddEditEscrowFees(strRowID)
'@endcode
'@param strRowID - row id for data

Function BIZ_TablesFees_AddEditEscrowFees(strRowID)

Set objData = FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
Set objEscrowFeeDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TableGroupDialog")

If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TableName")) Then
	GUI_SwfEdit_Set objEscrowFeeDetails.SwfEdit("swfname:=tableNameTxt"), FRM_DS_GetValue(objData, "TableName")
End If
If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanPurpose")) Then
	GUI_SwfComboBox_Select objEscrowFeeDetails.SwfComboBox("swfname:=cboPurpose"), FRM_DS_GetValue(objData, "LoanPurpose")	
End If

'===========Add Fees amount==========
GUI_SwfObject_Click objEscrowFeeDetails.SwfObject("swfname:=btnIconAdd")

If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Base")) Then
	GUI_SwfEdit_Set objEscrowFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=baseTxt"), FRM_DS_GetValue(objData, "Base")
End If
If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RangeUpto")) Then
	GUI_SwfEdit_Set objEscrowFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=upToTxt"), FRM_DS_GetValue(objData, "RangeUpto")
End If
If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Factor")) Then
	GUI_SwfEdit_Set objEscrowFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=factorTxt"), FRM_DS_GetValue(objData, "Factor")
End If

GUI_SwfButton_Click objEscrowFeeDetails.SwfWindow("swfname:=TableDialog").SwfButton("swfname:=okBtn")

GUI_SwfButton_Click objEscrowFeeDetails.SwfButton("swfname:=okBtn")

Set objEscrowFeeDetails =  Nothing
	
End Function



'This function is used to create new title fees
'@code
'    BIZ_TablesFees_CreateNewEscrowFees()
'@endcode

Function BIZ_TablesFees_CreateNewEscrowFees()

	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=stdIconBtnNew")

End Function



'This function is used to set title fees as default
'@code
'    BIZ_TablesFees_SetEscrowFeesAsDefault(strTitleFeesTableName)
'@endcode
'@param strEscrowFeesTableName - Table fees to make as default

Function BIZ_TablesFees_SetEscrowFeesAsDefault(strEscrowFeesTableName)

Set objEscrowFeeTable = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

GUI_List_ClickRow objEscrowFeeTable.SwfObject("swfname:=listView"), NULL, "Table Name", strTitleFeesTableName, True, False, False, "Single"

GUI_SwfButton_Click objEscrowFeeTable.SwfButton("swfname:=setDefaultBtn")
	
Set objEscrowFeeTable = Nothing

End Function



'This function is used to delete title fees
'@code
'    BIZ_TablesFees_DeleteEscrowFees(strEscrowFeesTableName)
'@endcode
'@param strEscrowFeesTableName - Table fees to delete

Function BIZ_TablesFees_DeleteEscrowFees(strEscrowFeesTableName)

Set objEscrowFeeDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

boolFound = GUI_List_ClickRow(objEscrowFeeDetails.SwfObject("swfname:=listView"), NULL, "Table Name", strTitleFeesTableName, True, False, False, "Single")

If boolFound Then
	GUI_SwfObject_Click objEscrowFeeDetails.SwfObject("swfname:=stdIconBtnDelete")

	If objTitleFeeTable.Dialog("text:=Encompass").Exist(10) Then
		GUI_WinButton_Click objEscrowFeeDetails.Dialog("text:=Encompass").WinButton("text:=&Yes")
	End If
	
End If
	
Set objEscrowFeeDetails = Nothing

End Function



'This function is used to select fees
'@code
'    BIZ_TablesFees_SelectFees(strFeesName)
'@endcode
'@param strFeesName - fees to select

Function BIZ_TablesFees_SelectFees(strFeesName)

Set objEscrowFeeDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")

GUI_List_ClickRow objEscrowFeeDetails.SwfObject("swfname:=listView"), NULL, "Table Name", strFeesName, True, False, False, "Single"

End Function



'This function is used to Add MI Table Scenario Data
'@code
'    BIZ_TablesAndFees_AddMIScenarioData(strRowID)
'@endcode
'@param strRowID - row id for data
'@param strMITab Tab name of MITable

Function BIZ_TablesAndFees_AddMIScenarioData(strRowID,strMITab)

	FRM_Logger_ReportInfoEvent "BIZ_TablesAndFees_AddMIScenarioData","BIZ_TablesAndFees_AddMIScenarioData using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings, objMIScenario, objScenarioBuilder
	Set objData 			= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMIScenario 		= objSettings.SwfWindow("swfname:=MIRecordSetupForm")
	Set objScenarioBuilder 	= objMIScenario.SwfWindow("swfname:=QueryBuilderForm")
	
	If GUI_Object_IsExist(objMIScenario) = True Then
		GUI_SwfObject_Click objMIScenario.SwfButton("swfname:=btnCreate")
	Else
		FRM_Logger_ReportFailEvent "Check if MI Scenario Window exist", "MI Scenario window is not populated", Null
	End If
		
	If GUI_Object_IsExist(objScenarioBuilder) = True Then
		GUI_SwfObject_Click objScenarioBuilder.SwfObject("swfname:=btnAddFilter")
	Else
		FRM_Logger_ReportFailEvent "Check if Scenario Builder Window exist", "Scenario builder window is not populated", Null
	End If
	

	IF UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Field")) and  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Operator")) Then 
	
	BIZ_TablesAndFees_AddMIScenarioData_AddEditFilterData FRM_DS_GetValue(objData, "Field"), FRM_DS_GetValue(objData, "Operator"), strRowID
	End IF
	GUI_List_SelectItem objScenarioBuilder.SwfObject("swfname:=gvFilters"), FRM_DS_GetValue(objData, "Operator"), "Operator"
	GUI_SwfButton_Click objScenarioBuilder.SwfButton("swfname:=btnInsertFilter")
	
	GUI_Object_WaitTillExistX objScenarioBuilder.SwfButton("swfname:=btnOK"),30
	BIZ_TablesAndFees_AddMIScenarioData_AddEditFilterData FRM_DS_GetValue(objData, "Field1"), FRM_DS_GetValue(objData, "Operator1"), strRowID
	GUI_SwfButton_Click objScenarioBuilder.SwfButton("swfname:=btnOK") 
	
	GUI_Object_WaitTillExistX objSettings,30	
	If InStr(1,strMITab,"Other")>0 Then     
    	FRM_Logger_ReportInfoEvent "MI Table 1st Premium  Other Tab","Tab Other MI Table 1st Premium Not Required", null        
    Else
       If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Premium")) Then
			GUI_SwfEdit_Set objMIScenario.SwfEdit("swfname:=txtPremium1"), FRM_DS_GetValue(objData, "Premium")
	   End If
    End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SubPremiumVA")) Then
		GUI_SwfEdit_Set objMIScenario.SwfEdit("swfname:=txtSub"), FRM_DS_GetValue(objData, "SubPremiumVA")	 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstMonthly")) Then
		GUI_SwfEdit_Set objMIScenario.SwfEdit("swfname:=txtMonthly1"), FRM_DS_GetValue(objData, "FirstMonthly")	 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SecondMonthly")) Then
		GUI_SwfEdit_Set objMIScenario.SwfEdit("swfname:=txtMonthly2"), FRM_DS_GetValue(objData, "SecondMonthly")	 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "FirstMonth")) Then
		GUI_SwfEdit_Set objMIScenario.SwfEdit("swfname:=txtMonth1"), FRM_DS_GetValue(objData, "FirstMonth")	 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SecondMonth")) Then
		GUI_SwfEdit_Set objMIScenario.SwfEdit("swfname:=txtMonth2"), FRM_DS_GetValue(objData, "SecondMonth")	 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Cutoff")) Then
		GUI_SwfEdit_Set objMIScenario.SwfEdit("swfname:=txtCutoff"), FRM_DS_GetValue(objData, "Cutoff")	 
	End If
	
		
	Set objData 			= Nothing
	Set objSettings 		= Nothing
	Set objMIScenario 		= Nothing
	Set objScenarioBuilder 	= Nothing
	
End Function


'This function is used to Add MI Table Data in add edit filter Window
'@code
'    BIZ_TablesAndFees_AddMIScenarioData_AddEditFilterData(intField, strOperator, strRowID)
'@endcode
'@param intField - to enter field data in AddEditFilter Window
'@param strOperator - to select operator in AddEditFilter Window
'@param strRowID - row id for data

Function BIZ_TablesAndFees_AddMIScenarioData_AddEditFilterData(intField, strOperator, strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_TablesAndFees_AddMIScenarioData_AddEditFilterData","BIZ_TablesAndFees_AddMIScenarioData_AddEditFilterData using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings, objMIScenario, objAddEditWIndow, objSelectField 
	Set objData = FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMIScenario = objSettings.SwfWindow("swfname:=MIRecordSetupForm")
	Set objAddEditWIndow = objMIScenario.SwfWindow("swfname:=QueryBuilderForm").SwfWindow("swfname:=AddEditFilterDialog")
	Set objSelectField = objAddEditWIndow.SwfWindow("swfname:=ReportFieldSelector")
	
	If GUI_Object_IsExist(objAddEditWIndow) = True Then
		GUI_SwfObject_Click objAddEditWIndow.SwfObject("swfname:=btnFieldList")
	Else
		FRM_Logger_ReportFailEvent "Check if AddEdit Window exist", "AddEdit window is not populated", Null
		
	End If
		
	GUI_SwfEdit_Set objSelectField.SwfEdit("swfname:=txtFind"), intField
	GUI_SwfButton_Click objSelectField.SwfButton("swfname:=btnFind")
	GUI_SwfButton_Click objSelectField.SwfButton("swfname:=btnOK")
		
	GUI_SwfComboBox_Select objAddEditWIndow.SwfComboBOx("swfname:=cboOperator"), strOperator
		
	If GUI_Object_IsExist(objAddEditWIndow.Dialog("regexpwndtitle:=Encompass")) = True  Then
		GUI_WinButton_Click objAddEditWIndow.Dialog("regexpwndtitle:=Encompass").WinButton("regexpwndtitle:=OK")
	End If
	
    
    If strOperator = "Is any of" Then

        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanType")) Then
			GUI_List_Select objAddEditWIndow.SwfList("swfname:=lstOptions"), FRM_DS_GetValue(objData, "LoanType") 
		End If  
	ElseIf (strOperator = "Between") Or (strOperator = "Not between") Then	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MinValue") ) Then
			GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMinNumber"), FRM_DS_GetValue(objData, "MinValue") 
		End If
	
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MaxValue")) Then
			GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMaxNumber"), FRM_DS_GetValue(objData, "MaxValue")
		End If
	Else
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Value")) Then
			GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMinNumber"), FRM_DS_GetValue(objData, "Value")
		End If
	End If
		
	GUI_SwfButton_Click objAddEditWIndow.SwfButton("swfname:=btnOK")
	
	Set objData = Nothing
	Set objSettings = Nothing
	Set objMIScenario = Nothing 
	Set objAddEditWIndow = Nothing 
	Set objSelectField = Nothing
	
End Function



'This function is used to Edit MI Table Scenario Data
'@code
'    BIZ_TablesAndFees_EditMITableData(strScenario, strRowID)
'@endcode
'@param strRowID - row id for data
'@param strScenario - Scenario to edit in MI Table

Function BIZ_TablesAndFees_EditMITableData(strScenario, strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_TablesAndFees_EditMITableData","BIZ_TablesAndFees_EditMITableData using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings, objMIScenario, objScenarioBuilder, objAddEditWIndow, objSelectField, strOperator, strEdittedScenario,intRowNum,intExpectedValue
	Set objData 			= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMIScenario 		= objSettings.SwfWindow("swfname:=MIRecordSetupForm")
	Set objScenarioBuilder 	= objMIScenario.SwfWindow("swfname:=QueryBuilderForm")
	Set objAddEditWIndow 	= objScenarioBuilder.SwfWindow("swfname:=AddEditFilterDialog")
	Set objSelectField 		= objAddEditWIndow.SwfWindow("swfname:=ReportFieldSelector")
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Operator")) Then
		strOperator = FRM_DS_GetValue(objData, "Operator")		    
	End if
	
	Wait g_TinyWaitMedium 'Explicit Wait Added Due to Sync
	GUI_List_SelectItem objSettings.SwfObject("swfname:=listViewMI"), strScenario, "Scenario"
	
	BIZ_Settings_ClickEdit()
	
	If GUI_Object_IsExist(objMIScenario)  Then
		GUI_SwfObject_Click objMIScenario.SwfButton("swfname:=btnCreate")
	Else
		FRM_Logger_ReportFailEvent "Check if MI Scenario Window exist", "MI Scenario window is not populated", Null
	End If
	
	If GUI_Object_IsExist(objScenarioBuilder) Then
		GUI_List_SelectItem objScenarioBuilder.SwfObject("swfname:=gvFilters"), strOperator, "Operator"
		GUI_SwfObject_Click objScenarioBuilder.SwfObject("swfname:=btnEditFilter")
	Else
		FRM_Logger_ReportFailEvent "Check if Scenario Builder Window exist", "Scenario builder window is not populated", Null
	End If
	
	If GUI_Object_IsExist(objAddEditWIndow) Then
		If  (strOperator = "Between") Or (strOperator = "Not between") Then
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MinValue")) Then
			GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMinNumber"), FRM_DS_GetValue(objData, "MinValue")
			End If
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EditMaxValue")) Then
			GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMaxNumber"), FRM_DS_GetValue(objData, "EditMaxValue")
			End If
			
			
			GUI_SwfButton_Click objAddEditWIndow.SwfButton("swfname:=btnOK")
	
			intRowNum = GUI_List_GetRowIndex(objScenarioBuilder.SwfObject("swfname:=gvFilters"), "Operator", strOperator)
			intExpectedValue =  FRM_DS_GetValue(objData, "MinValue")&" and "&FRM_DS_GetValue(objData, "EditMaxValue")
	
			GUI_List_ValidateCellData objScenarioBuilder.SwfObject("swfname:=gvFilters"), intRowNum, "Value", intExpectedValue
			GUI_SwfButton_Click objScenarioBuilder.SwfButton("swfname:=btnOK")
		Else
			
			If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EditValue")) Then
			GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMinNumber"), FRM_DS_GetValue(objData, "EditValue")
			End If
			
			GUI_SwfButton_Click objAddEditWIndow.SwfButton("swfname:=btnOK")
		
			intRowNum = GUI_List_GetRowIndex(objScenarioBuilder.SwfObject("swfname:=gvFilters"), "Operator", strOperator)
		
			GUI_List_ValidateCellData objScenarioBuilder.SwfObject("swfname:=gvFilters"), intRowNum, "Value", FRM_DS_GetValue(objData, "EditValue")
			GUI_SwfButton_Click objScenarioBuilder.SwfButton("swfname:=btnOK")
		End If
	Else
		FRM_Logger_ReportFailEvent "Check if AddEdit Window exist", "AddEdit window is not populated", Null
	End If
	
	strEditScenario = GUI_Object_GetPropertyValue (objMIScenario.SwfEditor("swfname:=txtScenario"), "Text")
	GUI_SwfButton_Click objMIScenario.SwfButton("swfname:=okBtn")  
	
	Set objData            = Nothing
	Set objSettings        = Nothing
	Set objMIScenario      = Nothing
	Set objScenarioBuilder = Nothing
	Set objAddEditWIndow   = Nothing
	Set objSelectField     = Nothing
	
	BIZ_TablesAndFees_EditMITableData = strEditScenario
End Function



'This function is used to Duplicate MI Table Scenario Data
'@code
'    BIZ_TablesAndFees_DuplicateMITableData(strScenario, strRowID)
'@endcode
'@param strRowID - row id for data
'@param strScenario - scenario to duplicate in MI Table

Function BIZ_TablesAndFees_DuplicateMITableData(strScenario, strRowID)

	FRM_Logger_ReportInfoEvent "BIZ_TablesAndFees_DuplicateMITableData","BIZ_TablesAndFees_DuplicateMITableData using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings, objMIScenario, objScenarioBuilder, objAddEditWIndow, strOperator, intRowNum, strDuplicateScenario
	Set objData 			= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	Set objSettings 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMIScenario 		= objSettings.SwfWindow("swfname:=MIRecordSetupForm")
	Set objScenarioBuilder 	= objMIScenario.SwfWindow("swfname:=QueryBuilderForm")
	Set objAddEditWIndow 	= objScenarioBuilder.SwfWindow("swfname:=AddEditFilterDialog")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Operator")) Then
		strOperator = FRM_DS_GetValue(objData, "Operator")		    
	End if
	
    Wait g_TinyWaitMedium 'Explicit wait added due to Sync
	GUI_List_SelectItem objSettings.SwfObject("swfname:=listViewMI"), strScenario, "Scenario"
	BIZ_Settings_ClickDuplicate()
	
	If GUI_Object_IsExist(objMIScenario)  Then
        GUI_SwfObject_Click objMIScenario.SwfButton("swfname:=btnCreate")
	Else
		FRM_Logger_ReportFailEvent "Check if MI Scenario Window exist", "MI Scenario window is not populated", Null
	End If
	
	If GUI_Object_IsExist(objScenarioBuilder) Then
		GUI_List_SelectItem objScenarioBuilder.SwfObject("swfname:=gvFilters"), strOperator, "Operator"
		GUI_SwfObject_Click objScenarioBuilder.SwfObject("swfname:=btnEditFilter")
	Else
		FRM_Logger_ReportFailEvent "Check if Scenario Builder Window exist", "Scenario builder window is not populated", Null
	End If
	
	If GUI_Object_IsExist(objAddEditWIndow) Then
		If  (strOperator = "Between") Or (strOperator = "Not between") Then
			
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DuplicateMaxValue")) Then
				GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMaxNumber"), FRM_DS_GetValue(objData, "DuplicateMaxValue")
				End if
				
				If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "MinValue")) Then
				GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMinNumber"), FRM_DS_GetValue(objData, "MinValue")
				End if
		Else
			    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DuplicateValue")) Then
			    GUI_SwfEdit_Set objAddEditWIndow.SwfEdit("swfname:=txtMinNumber"), FRM_DS_GetValue(objData, "DuplicateValue")
				End if
		End If
	Else
		FRM_Logger_ReportFailEvent "Check if AddEdit Window exist", "AddEdit window is not populated", Null
	End If
	
	GUI_SwfButton_Click objAddEditWIndow.SwfButton("swfname:=btnOK")
	GUI_SwfButton_Click objScenarioBuilder.SwfButton("swfname:=btnOK")
	strDuplicateScenario = GUI_Object_GetPropertyValue (objMIScenario.SwfEditor("swfname:=txtScenario"), "Text")
	GUI_SwfButton_Click objMIScenario.SwfButton("swfname:=okBtn")  

	Wait g_ShortWaitSmall 'Explicit wait added due sync
	
	intRowIndex=GUI_List_GetRowIndex(objSettings.SwfObject("swfname:=listViewMI"),"Scenario",strDuplicateScenario)
	If intRowIndex>=0 Then
    FRM_Logger_ReportPassEvent "MI Duplicate Scenario", "MI Duplicate Scenario Created is "&strDuplicateScenario, Null
    Else
    FRM_Logger_ReportFailEvent "MI Duplicate Scenario ", "MI Duplicate Scenario is not Created", Null    
	End If
 		
 	Set objData            = Nothing
 	Set objSettings        = Nothing
 	Set objMIScenario      = Nothing
 	Set objScenarioBuilder = Nothing 	
 	Set objAddEditWIndow   = Nothing
 	
 	BIZ_TablesAndFees_DuplicateMITableData = strDuplicateScenario 
 End Function
 
 
 
'This function is used to Delete MI Table Scenario Data
'@code
'    BIZ_TablesAndFees_DeleteMITableData(strScenario)
'@endcode
'@param strScenario - Scenario to be deleted from MI Table

Function BIZ_TablesAndFees_DeleteMITableRecord(strScenario)
	
	FRM_Logger_ReportInfoEvent "BIZ_TablesAndFees_DeleteMITableRecord","BIZ_TablesAndFees_DeleteMITableRecord using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objSettings,intRowNum
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMainView= objSettings.SwfObject("swfname:=listViewMI")
	Wait g_TinyWaitMedium 'Explicit Wait Added Due Sync Issue
	GUI_List_SelectItem objMainView, strScenario, "Scenario"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDelete")
	
	If GUI_Object_IsExist (objSettings.Dialog("regexpwndtitle:=Encompass")) Then
		GUI_WinButton_Click objSettings.Dialog("regexpwndtitle:=Encompass").WinButton("regexpwndtitle:=&Yes")
	Else
		FRM_Logger_ReportFailEvent "Check if confirmation Dialog Populated after clicking delete button", "confirmation Dialog Populated successfully after clicking delete button", Null
	End If
	
	Wait g_TinyWaitLarge ' Explicit wait added Due to Sync
	boolScenario = GUI_List_ClickRow(objMainView, Null, "Scenario", strScenario, True, False, False, "Single") 
 	FRM_VerifyFalse boolScenario, "MI Table Record Delete", "MI Table Record is  Deleted  "&strScenario
 			
	Set objSettings = Nothing
    Set objMainView = Nothing
End Function



'This function is used for Loan Creation
'@code
'    BIZ_TableAndFees_LoanCreation(strRowID)
'@endcode
'@param strRowID is RowID in excel to read data for loan creation 

Function BIZ_TableAndFees_LoanCreation(strRowID)

	FRM_Logger_ReportInfoEvent "Loan Creation:" ,"Loan Creation for'"&strRowID&"'", Null
	BIZ_Loan_AddNewBlankLoanUnderSelectedLoanFolder "Super Administrator - Default View","My Pipeline"  							
	BIZ_BorrowerSummaryOrigination_SetHeadInfo strRowID
	BIZ_BorrowerSummaryOrigination_SetBorrower strRowID
	BIZ_BorrowerSummaryOrigination_SetSSNVerification_Borrower strRowID
	BIZ_BorrowerSummaryOrigination_SetCreditInformation strRowID
	BIZ_BorrowerSummaryOrigination_SetProperty strRowID
	BIZ_BorrowerSummaryOrigination_SetTransactionDetails strRowID
	BIZ_1003Page1_SetEmployment strRowID
	BIZ_1003Page1_SetTitleDetails strRowID
	BIZ_BorrowerSummaryOrigination_SetProperty_EstateWillBeHeldIn(strRowID)
	BIZ_1003Page2_SetMonthlyIncomeExpensesData strRowID
	BIZ_Forms_Open "2015 itemization"
	BIZ_2015Itemization_Set800Section strRowID
	
End Function



'This function is used for Loan Creation still BorrowerSummaryOrigination
'@code
'    BIZ_TableAndFees_LoanCreation_BorrowerSummaryOrigination(strRowID)
'@endcode
'@param strRowID is RowID in excel to read data for loan creation 

Function BIZ_TableAndFees_LoanCreation_BorrowerSummaryOrigination(strRowID)

	FRM_Logger_ReportInfoEvent "Loan Creation:" ,"Loan Creation for'"&strRowID&"'", Null
	BIZ_Loan_AddNewBlankLoanUnderSelectedLoanFolder "Super Administrator - Default View","My Pipeline"  							
	BIZ_BorrowerSummaryOrigination_SetHeadInfo strRowID
	BIZ_BorrowerSummaryOrigination_SetBorrower strRowID
	BIZ_BorrowerSummaryOrigination_SetSSNVerification_Borrower strRowID
	BIZ_BorrowerSummaryOrigination_SetCreditInformation strRowID
	BIZ_BorrowerSummaryOrigination_SetProperty strRowID
	BIZ_BorrowerSummaryOrigination_SetTransactionDetails strRowID
	BIZ_1003Page1_SetEmployment strRowID
	BIZ_1003Page1_SetTitleDetails strRowID
	BIZ_BorrowerSummaryOrigination_SetProperty_EstateWillBeHeldIn(strRowID)
	
End Function



'This function is used for Title Fee Table
'@code
'    BIZ_TablesFees_CreateTitleFees(strRowID)
'@endcode
'@param strRowID is RowID in excel to read data for Title fee table creation

Function BIZ_TablesFees_CreateTitleFees(strRowID)
     
	FRM_Logger_ReportInfoEvent "Table and Fees", "Create Title Fees, Read Data @ RowID ' "&strRowID, Null  
	Dim objData,objTitleFeeDetails,stTitleFee
	Set objData = FRM_DS_GetTestData("Settings_TablesFees", "TitleFees", strRowID)
	Set objTitleFeeDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TableGroupDialog")

	BIZ_Settings_ClickAdd()
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TableName")) Then
		stTitleFee=FRM_DS_GetValue(objData, "TableName")
		GUI_SwfEdit_Set objTitleFeeDetails.SwfEdit("swfname:=tableNameTxt"), stTitleFee
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanPurpose")) Then
		GUI_SwfComboBox_Select objTitleFeeDetails.SwfComboBox("swfname:=cboPurpose"), FRM_DS_GetValue(objData, "LoanPurpose")	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Type")) Then
		GUI_SwfComboBox_Select objTitleFeeDetails.SwfComboBox("swfname:=cboFeeType"), CSTR(FRM_DS_GetValue(objData, "Type"))
	End If

    GUI_SwfObject_Click objTitleFeeDetails.SwfObject("swfname:=btnIconAdd")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Base")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=baseTxt"), FRM_DS_GetValue(objData, "Base")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RangeUpto")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=upToTxt"), FRM_DS_GetValue(objData, "RangeUpto")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Factor")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=factorTxt"), FRM_DS_GetValue(objData, "Factor")
	End If

	GUI_SwfButton_Click 	objTitleFeeDetails.SwfWindow("swfname:=TableDialog").SwfButton("swfname:=okBtn") 

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CalcBasedOn")) Then
		GUI_SwfComboBox_Select objTitleFeeDetails.SwfComboBox("swfname:=calcOnCombo"),FRM_DS_GetValue(objData, "CalcBasedOn") 
	End If
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ToNearest")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfEdit("swfname:=nearestTxt"),FRM_DS_GetValue(objData, "ToNearest") 
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "WithOffset")) Then
		GUI_SwfEdit_Set objTitleFeeDetails.SwfEdit("swfname:=offsetTxt"),FRM_DS_GetValue(objData, "WithOffset") 
	End If
	
	GUI_SwfButton_Click     objTitleFeeDetails.SwfButton("swfname:=okBtn")
	
    FRM_Logger_ReportInfoEvent "Table and Fees", " Title  Create ' "& stTitleFee&" '" ,Null  
    BIZ_TablesFees_CreateTitleFees = stTitleFee
	
	Set objTitleFeeDetails =  Nothing
	Set objData =  Nothing
	
End Function



'This function is used for Escrow Fee Table
'@code
'    BIZ_TablesFees_CreateEscrowFees(strRowID)
'@endcode
'@param strRowID is RowID in excel to read data for Escrow fee table creation

Function BIZ_TablesFees_CreateEscrowFees(strRowID)

	FRM_Logger_ReportInfoEvent "Table and Fees", "Create Escrow table, Read Data @ RowID ' "&strRowID, Null 
	Dim objData,objEscrowFeeDetails,strEscrowName
	Set objData = FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
	Set objEscrowFeeDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=TableGroupDialog")

    strEscrowName="EscrowTab"&UTIL_Math_RandomNo()
	
	BIZ_Settings_ClickAdd()
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "TableName")) Then
		GUI_SwfEdit_Set objEscrowFeeDetails.SwfEdit("swfname:=tableNameTxt"), strEscrowName
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanPurpose")) Then
		GUI_SwfComboBox_Select objEscrowFeeDetails.SwfComboBox("swfname:=cboPurpose"), FRM_DS_GetValue(objData, "LoanPurpose")	
	End If
	
    GUI_SwfObject_Click objEscrowFeeDetails.SwfObject("swfname:=btnIconAdd")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Base")) Then
		GUI_SwfEdit_Set objEscrowFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=baseTxt"), FRM_DS_GetValue(objData, "Base")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RangeUpto")) Then
		GUI_SwfEdit_Set objEscrowFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=upToTxt"), FRM_DS_GetValue(objData, "RangeUpto")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Factor")) Then
		GUI_SwfEdit_Set objEscrowFeeDetails.SwfWindow("swfname:=TableDialog").SwfEdit("swfname:=factorTxt"), FRM_DS_GetValue(objData, "Factor")
	End If

	GUI_SwfButton_Click 	objEscrowFeeDetails.SwfWindow("swfname:=TableDialog").SwfButton("swfname:=okBtn")
	GUI_SwfComboBox_Select 	objEscrowFeeDetails.SwfComboBox("swfname:=calcOnCombo"),FRM_DS_GetValue(objData, "CalcBasedOn")                      
	GUI_SwfEdit_Set      	objEscrowFeeDetails.SwfEdit("swfname:=nearestTxt"),FRM_DS_GetValue(objData, "ToNearest")
	GUI_SwfEdit_Set 		objEscrowFeeDetails.SwfEdit("swfname:=offsetTxt"),FRM_DS_GetValue(objData, "WithOffset")
	GUI_SwfButton_Click objEscrowFeeDetails.SwfButton("swfname:=okBtn")
	FRM_DS_SetCellData "Settings_TablesFees", "EscrowFees", strRowID, "TableName", strEscrowName
	FRM_Logger_ReportInfoEvent "Table and Fees", " Escrow  Create ' "& strEscrowName&" '" ,Null  
	
	Set objEscrowFeeDetails =  Nothing
	Set objData=Nothing
End Function



'This function is used for Tables and Fee object set as default
'@code
'    BIZ_TablesFees_SetDefaultCloseSettings(SheetName,strRowID)
'@endcode
'@param strRowID,SheetName is RowID and ColmName in excel to read data 

Function BIZ_TablesFees_SetDefaultCloseSettings(SheetName,strRowID)
	
	FRM_Logger_ReportInfoEvent "Table and Fees", "Set Table and Fees object as default @ RowID ' "&strRowID&"' SheetName' "&SheetName&"' And Close Settings Window", Null 
    
	Dim objData 	
	Set objData = FRM_DS_GetTestData("Settings_TablesFees", SheetName, strRowID)
	
	BIZ_TablesFees_SetEscrowFeesAsDefault FRM_DS_GetValue(objData, "TableName")
	BIZ_Settings_ClickClose()
    
	Set objData=Nothing 
	
 End Function       


 
'This function is used for Tables and Fee heloctable creation
'@code
'    BIZ_Settings_TablesandFeees_HelocTableCreation(strRowID)
'@endcode
'@param strRowID,SheetName is RowID and ColmName in excel to read data 
	
Function BIZ_Settings_TablesandFeees_HelocTableCreation(strRowID)

FRM_Logger_ReportInfoEvent "Verify HelocTable creation", "Verify and Validate Heloc table creation and its contents", Null

	Dim strHelocTableName, intMMPvalue, intRowIndex, objEncompassSettings, objHelocTable2, objHelocTable, objMinMonPayment
	Set objEncompassSettings=SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=HelocTableContainer")
	Set objHelocTable2=SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=gContainer")
	Set objHelocTable=objEncompassSettings.SwfWindow("swfname:=HelocDetailControl")
	Set objMinMonPayment=objHelocTable.SwfWindow("swfname:=MMPFormDialog").SwfObject("swfname:=groupBox1")
	Set objData=FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)

	strHelocTableName="Heloc_"& UTIL_Math_RandomNo() 
	GUI_SwfObject_Click objHelocTable2.SwfObject("swfname:=stdIconTableNew")
	If GUI_Object_IsExist(objHelocTable) = True Then
		FRM_Logger_ReportPassEvent "Verify HELOC table pop up window", "HELOC table is displayed/popped out", Null
	Else
		FRM_Logger_ReportFailEvent "Verify HELOC table pop up window", "HELOC table not displayed/popped out", Null
	End If
	GUI_SwfEdit_Set objEncompassSettings.SwfEdit("swfname:=textBoxName"), strHelocTableName
	GUI_SwfButton_Click objHelocTable.SwfButton("swfname:=addBtn")

	If GUI_Object_IsExist(objHelocTable) = True Then
		FRM_Logger_ReportPassEvent "Verify minimum monthly payment grid", "Minimun monthly payment grid  is displayed", Null
	Else
		FRM_Logger_ReportFailEvent "Verify minimum monthly payment grid", "Minimun monthly payment grid  is not displayed", Null
	End If

	If GUI_Object_IsExist(objEncompassSettings.SwfObject("swfname:=gridViewYearList")) = True Then
		GUI_SwfEdit_Set SwfWindow("swfname:=MMPFormDialog").SwfEdit("swfname:=textBoxYear"), FRM_DS_GetValue(objData, "Year")
		GUI_SwfComboBox_Select SwfWindow("swfname:=MMPFormDialog").SwfComboBox("swfname:=comboBoxPeriod"), FRM_DS_GetValue(objData, "Period")
		GUI_SwfEdit_Set SwfWindow("swfname:=MMPFormDialog").SwfEdit("swfname:=textBoxIndex"),FRM_DS_GetValue(objData, "Index")
		GUI_SwfEdit_Set SwfWindow("swfname:=MMPFormDialog").SwfEdit("swfname:=textBoxMargin"),FRM_DS_GetValue(objData, "Margin")
		intMMPvalue=GUI_Object_GetPropertyValue(SwfWindow("swfname:=MMPFormDialog").SwfEdit("swfname:=textBoxMMP"),"text")
		FRM_VerifyNotNull intMMPvalue,"Min. Monthly Payment validation","Minimum Monthly Payment value is "&intMMPvalue&""
		GUI_SwfButton_Click SwfWindow("swfname:=MMPFormDialog").SwfButton("swfname:=okbtn")
		intRowIndex=GUI_List_GetRowCount(objHelocTable.SwfObject("swfname:=gridViewYearList"), 1,FRM_DS_GetValue(objData, "Year"))
		BIZ_Settings_TablesandFeees_HelocTablegridValidation intRowIndex,0, FRM_DS_GetValue(objData,"Year")
		BIZ_Settings_TablesandFeees_HelocTablegridValidation intRowIndex,1,FRM_DS_GetValue(objData,"Period" )
		BIZ_Settings_TablesandFeees_HelocTablegridValidation intRowIndex,2,FormatNumber(FRM_DS_GetValue(objData, "Index"),3)
		BIZ_Settings_TablesandFeees_HelocTablegridValidation intRowIndex,3,FormatNumber(FRM_DS_GetValue(objData, "Margin"),3)
		GUI_SwfButton_Click objEncompassSettings.SwfButton("swfname:=okbtn")
	
		If GUI_Object_IsExist(objHelocTable2)= True Then
			FRM_Logger_ReportPassEvent "Verify MMP details added to HELOC Table", "All values are added to HELOC Table", Null
		Else
			FRM_Logger_ReportInfoEvent "Verify MMP details added to HELOC Table", "Heloc grid table not displyed ", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Verify MMP details added to HELOC Table", "All values are added to HELOC Table", Null
	End If
	FRM_DS_SetCellData "Settings_TablesFees", "HelocTable", strRowID, "TableName",strHelocTableName
	
	Set objEncompassSettings = Nothing
	Set objHelocTable        = Nothing
	Set objMinMonPayment     = Nothing
	Set objHelocTable2       = Nothing
	Set objData              = Nothing

End Function

Function BIZ_Settings_TablesandFeees_HelocTablegridValidation(intRowIndex,intColumnIndexorText,strvalue)
                                
Dim   objEncompassSettings
Set objEncompassSettings=SwfWindow("swfname:=SetUpContainer").SwfWindow("swfname:=HelocTableContainer")
Set objHelocTable=objEncompassSettings.SwfWindow("swfname:=HelocDetailControl")

GUI_List_ValidateCellData objHelocTable.SwfObject("swfname:=gridViewYearList"), intRowIndex,intColumnIndexorText, strvalue

Set objHelocTable                           = Nothing
Set objEncompassSettings = Nothing
                
End Function



'This Function is set value in Estate Will Be Held In Field
'@code
'    	BIZ_BorrowerSummaryOrigination_SetProperty_EstateWillBeHeldIn(strRowID)
'@endcode
'@Praram strRowID is excel RowID to get data from excel 

Function BIZ_BorrowerSummaryOrigination_SetProperty_EstateWillBeHeldIn(strRowID)
    
	FRM_Logger_ReportInfoEvent "Set Loan Data Property", "Estate Will Be Held In, Read Data @RowID '"&strRowID, Null
	
	Dim obj1003Page,objData,objEstateWillBeHeldIn
	
	Set obj1003Page =  SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Forms_1003page", "SetTitleDetails", strRowID)
	Set objEstateWillBeHeldIn = obj1003Page.WebList("html id:=DropdownBox1")	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EstateWillBeHeldIn")) Then
	GUI_WebList_Select objEstateWillBeHeldIn, FRM_DS_GetValue(objData, "EstateWillBeHeldIn")
	End if
	
	Set obj1003Page 			= Nothing
	Set objData					= Nothing
	Set objEstateWillBeHeldIn	= Nothing
	
End Function



'This function is used to Create Tax Record
'@code
'    BIZ_Settings_TablesandFees_TaxRecord_Creation(strRowID,strTaxType)
'@endcode
'@param strRowID row id test data
'@param strTaxType tax type of record city/state

Function BIZ_Settings_TablesandFees_TaxRecord_Creation(strRowID,strTaxType)    
    FRM_Logger_ReportInfoEvent "Creation of "&strTaxType&" record","Creation of "&strTaxType&" record ", Null    
    Dim objData,objSettings,objListView,objCityorStateList,strFeeDescription,intRowIndex	
    Set objData=FRM_DS_GetTestData("Settings_TablesFees", "TaxRecord", strRowID)
    Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objListView=objSettings.SwfObject("swfname:=listView")
    Set objCityorStateList= objSettings.SwfWindow("swfname:=FeeDialog")  
	Set objScrollBar=objSettings.SwfScrollBar("swfname:=vPanelScrollBar")	
    strFeeDescription = FRM_DS_GetValue(objData, "Fee Description")
	boolExists = GUI_List_ClickRow(objListView, objScrollBar, "Fee Name", strFeeDescription, True, False, False, "Single")	
	'check if Tax Record already exists
    If boolExists Then				
		BIZ_Settings_ClickDelete()
		BIZ_Settings_Dialog_YES_Click()
		GUI_Object_WaitTillExistX objListView, 10
		wait g_ShortWaitMedium 	'Explicit wait used to handle application synchronization 
		intRowIndex=GUI_List_GetRowIndex(objListView,"Fee Name",strFeeDescription)		
		If intRowIndex<0 Then
			FRM_Logger_ReportInfoEvent "Deletion of "&strTaxType&" record","Deleted the tax record '"&strFeeDescription&"'", Null
		Else
			FRM_Logger_ReportInfoEvent "Deletion of "&strTaxType&" record","Failed to delete tax record '"&strFeeDescription&"'",  Null
		End If		
	End If	
		
    BIZ_Settings_ClickAdd()
	If UTIL_String_IsNotEmpty (strFeeDescription) then
		GUI_SwfEdit_Set objCityorStateList.SwfEdit("swfname:=feeNameTxt"),strFeeDescription
	End If
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Calculatebasedon")) Then
		GUI_SwfComboBox_Select objCityorStateList.SwfComboBox("swfname:=calcOnCombo"), FRM_DS_GetValue(objData, "Calculatebasedon")
	End If
	
    If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Rate")) Then
		GUI_SwfEdit_Set objCityorStateList.SwfEdit("swfname:=rateTxt"), FRM_DS_GetValue(objData, "Rate")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Additional Amount")) Then
		GUI_SwfEdit_Set objCityorStateList.SwfEdit("swfname:=additionalTxt"), FRM_DS_GetValue(objData, "Additional Amount")
	End If
    GUI_SwfButton_Click objCityorStateList.SwfButton("swfname:=addBtn")
         
    Set objData               = Nothing
    Set objSettings           = Nothing
    Set objListView           = Nothing
    Set objCityorStateList    = Nothing
	Set objScrollBar          =	Nothing		
    BIZ_Settings_TablesandFees_TaxRecord_Creation = strFeeDescription
    
End Function



'This function is used to Edit Tax Record
'@code
'    BIZ_Settings_TablesAndFees_TaxRecord_Edit(strRowID,strFeeDescription,strTaxType)
'@endcode
'@param strRowID row id of test data
'@Praram strFeeDescription is Tax Record created
'@param strTaxType tax type of record city/state

Function BIZ_Settings_TablesAndFees_TaxRecord_Edit(strRowID,strFeeDescription,strTaxType)
               
   FRM_Logger_ReportInfoEvent "Verify Edit of "&strTaxType&" record","Verification of Edit of "&strTaxType&" record ", Null
   
   Dim objData,objSettings,objListView,objCityorStateList,intRowIndex  
   
   Set objData            = FRM_DS_GetTestData("Settings_TablesFees", "TaxRecord", strRowID)
   Set objSettings        = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
   Set objListView        = objSettings.SwfObject("swfname:=listView")
   Set objCityorStateList = objSettings.SwfWindow("swfname:=FeeDialog")
   
   Wait g_ShortWaitSmall 'Explicit wait added Due to Sync issue
   intRowIndex=GUI_List_GetRowIndex(objSettings.SwfObject("swfname:=listView"),"Fee Name",strFeeDescription )
   If intRowIndex>=0 Then
      GUI_List_ActOnRow objSettings.SwfObject("swfname:=listView"), intRowIndex, True, False, False,"Single"
      BIZ_Settings_ClickEdit()
	  If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "EditCalculatebasedon")) Then
		GUI_SwfComboBox_Select objCityorStateList.SwfComboBox("swfname:=calcOnCombo"), FRM_DS_GetValue(objData, "EditCalculatebasedon")
	  End If 
	  If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Rate")) Then
		GUI_SwfEdit_Set        objCityorStateList.SwfEdit("swfname:=rateTxt"),(FRM_DS_GetValue(objData, "Rate")*2)
	  End If
	  If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Additional Amount")) Then
		GUI_SwfEdit_Set        objCityorStateList.SwfEdit("swfname:=additionalTxt"),FormatNumber(FRM_DS_GetValue(objData, "Additional Amount")*2,2)  
	  End If
      GUI_SwfButton_Click    objCityorStateList.SwfButton("swfname:=addBtn")
   Else
      FRM_Logger_ReportFailEvent "Verify Edit of "&strTaxType&" record","'"&strFeeDescription&"' record is not availble" , Null
   End If
   
   Set objData             = Nothing
   Set objSettings         = Nothing
   Set objListView         = Nothing     
   Set objCityorStateList  = Nothing
               
End Function



'This function is used to validate CityTax,StateTax,UserDefine fee Records
'@code
'  Function  BIZ_Settings_TablesandFees_ValidateTaxRecord (strRowID,strTaxType,strFeeDescription,strActionType)
'@endcode
'@param strRowID row id of test data
'@param strTaxType is Type of Record
'@param strFeeDescription Record name
'@param strActionType Create or Edit action type

Function BIZ_Settings_TablesandFees_ValidateTaxRecord (strRowID,strTaxType,strFeeDescription,strActionType)
    
   Set objSettings	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
   Set objListView	= objSettings.SwfObject("swfname:=listView")
   Set objData      = FRM_DS_GetTestData("Settings_TablesFees", "TaxRecord", strRowID)
   
      If GUI_Object_IsExistX(objListView,20)=True Then
        Wait g_ShortWaitSmall 'Explicit wait added Due to Sync issue 
		
		intColIndex  = GUI_List_GetColumnIndex(objListView, "Fee Name")
        intRowIndex=GUI_List_GetRowIndex(objListView, intColIndex, strFeeDescription)
		Select Case strActionType
			Case "Create"
				strCalculationType 		= FRM_DS_GetValue(objData, "Calculatebasedon")
				strTaxRateval 			= FRM_DS_GetValue(objData, "Rate")
				strTaxAdditionaltextval = FormatNumber(FRM_DS_GetValue(objData, "Additional Amount"),2) 
			Case "Edit"
				strCalculationType 		= FRM_DS_GetValue(objData, "EditCalculatebasedon")
				strTaxRateval 			= (FRM_DS_GetValue(objData, "Rate")*2)
      			strTaxAdditionaltextval = FormatNumber(FRM_DS_GetValue(objData, "Additional Amount")*2,2) 
			Case Else
				FRM_Logger_ReportFailEvent "Validate Tax Record","'"&strActionType&"' is not a valid Option (Create/Edit Option)", Null
		End Select
        
        GUI_List_ValidateCellData objListView, intRowIndex, "Fee Name", strFeeDescription
        GUI_List_ValidateCellData objListView, intRowIndex, "Rate", FormatNumber(strTaxRateval,5)
        GUI_List_ValidateCellData objListView, intRowIndex, "Additional Amount", strTaxAdditionaltextval
        GUI_List_ValidateCellData objListView, intRowIndex, "Calc. Based On", strCalculationType
                             
      Else
        FRM_Logger_ReportFailEvent "Verify creation of "&strTaxType&" record","System created "&strTaxType&" record not created/Updated with all possible data", Null
      End If
      
   Set objListView           = Nothing
   Set objSettings           = Nothing 
End Function

'This function is used to Delete Tax Record
'@code
'    BIZ_Settings_TablesAndFees_TaxRecord_Delete(strFeeDescription,strTaxType)
'@endcode
'@Praram strFeeDescription is Tax Record created
'@param strTaxType tax record type city/state

Function BIZ_Settings_TablesAndFees_TaxRecord_Delete(strFeeDescription,strTaxType)
	
	FRM_Logger_ReportInfoEvent "Verify Delete of "&strTaxType&" record","Verification of delete of "&strTaxType&" record ", Null
	
	Dim objSettings,objListView,intRowIndex
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=listView")
	
	intRowIndex=GUI_List_GetRowIndex(objListView,"Fee Name",strFeeDescription)
	
	If intRowIndex>=0 Then
		
		GUI_List_ActOnRow objListView, intRowIndex, True, False, False,"Single"
		FRM_Logger_ReportInfoEvent "Selected the created record to delete","Selected record '"&strFeeDescription&"' to delete", Null
		BIZ_Settings_ClickDelete()
		BIZ_Settings_Dialog_YES_Click()
		GUI_Object_WaitTillExistX objListView, 10
		
		wait g_ShortWaitMedium 	'Explicit wait used to handle application synchronization 
		intRowIndex=GUI_List_GetRowIndex(objListView,"Fee Name",strFeeDescription)
		
		If intRowIndex<0 Then
			FRM_Logger_ReportPassEvent "Verify Deletion of "&strTaxType&" record","System deleted the selected record '"&strFeeDescription&"'", Null
		Else
			FRM_Logger_ReportFailEvent "Verify Deletion of "&strTaxType&" record","System failed to  delete selected record",  Null
		End If
		
	End If
	
	Set objSettings	= Nothing
	Set objListView	= Nothing
	
End Function



'This function is used to Create Itemization Fee Management Record
'@code
'     BIZ_Settings_TablesandFees_ItemizationFeeRecord_Creation(strRowID)
'@endcode
'@param strRowID row Id of testdata

Function BIZ_Settings_TablesandFees_ItemizationFeeRecord_Creation(strRowID)
	
	FRM_Logger_ReportInfoEvent "Itemization Fee Management Record", "Itemization Fee Management New Record Creation", Null
	Dim objSettings, objFeeDialog, intRowIndex, objData, strFeeDataName
	
	Set objSettings		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objFeeDialog	=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddFeeForm")
	Set objData			=	FRM_DS_GetTestData("Settings_TablesFees", "ItemizationFee", strRowID)
	
	'Click on new icon
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=iconBtnNew")
	
	'Set Fee data name and Save
	strFeeDataName=FRM_DS_GetValue(objData, "FeeDataName")
	GUI_Object_WaitTillExistX objFeeDialog.SwfEdit("swfname:=txtFeeName"), 30
	
	If UTIL_String_IsNotEmpty (strFeeDataName)  Then
		GUI_SwfEdit_Set objFeeDialog.SwfEdit("swfname:=txtFeeName"), strFeeDataName
	End If
	
	GUI_SwfButton_Click objFeeDialog.SwfButton("swfname:=btnOK") 
	
	If (UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Apply_Itemization")) and (FRM_DS_GetValue(objData, "Apply_Itemization"))="ON")  Then
		
		If (GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkCompanyOptIn"),"Checked")) Then
			FRM_Logger_ReportInfoEvent "Apply To Itemization ", "Apply To Itemization  Set ON", Null 		
		Else
	      GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkCompanyOptIn"),FRM_DS_GetValue(objData, "Apply_Itemization")	
		End If 
	    GUI_Object_ValidateChecked objSettings.SwfCheckBox("swfname:=chkCompanyOptIn"), "True","Apply To Itemization Set ON"
	    
	ElseIf (UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Apply_Itemization")) and  (FRM_DS_GetValue(objData, "Apply_Itemization"))="OFF")  Then
	
	    If (GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkCompanyOptIn"),"Checked")) Then
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkCompanyOptIn"),FRM_DS_GetValue(objData, "Apply_Itemization")            		
		Else
	      FRM_Logger_ReportInfoEvent "Apply To Itemization ", "Apply To Itemization  Set OFF", Null 
		End If 
	    GUI_Object_ValidateChecked objSettings.SwfCheckBox("swfname:=chkCompanyOptIn"), "False","Apply To Itemization Set OFF"
	
	
	End IF
	
	BIZ_Settings_ClickSave()
		
	Set objSettings	 	= 	Nothing
	Set objFeeDialog 	= 	Nothing
	Set objData		 	= 	Nothing
	
	BIZ_Settings_TablesandFees_ItemizationFeeRecord_Creation=strFeeDataName

End Function
	
	
	
'This function is used to delete Itemization Fee Management Record
'@code
'     BIZ_Settings_TablesandFees_ItemizationFeeRecord_Delete(strFeeDataName)
'@endcode
'@param strFeeDataName - Set Fee Data name
	
Function BIZ_Settings_TablesandFees_ItemizationFeeRecord_Delete(strFeeDataName)
	
	FRM_Logger_ReportInfoEvent "Itemization Fee Management Record","Itemization Fee Management Record Deletion", Null
	Dim objSettings, objEncompassDialog,boolValue
	
	Set objSettings				=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEncompassDialog		=	objSettings.Dialog("text:=Encompass")
	Set objSettingsItemView		=	objSettings.SwfObject("swfname:=gridFees")
	 
	Wait g_TinyWaitMedium 'Explicit Wait added Due to Sync
	boolValue = GUI_List_ClickRow(objSettingsItemView, objSettingsItemView.SwfScrollBar("swfname:=vPanelScrollBar"), "Encompass Fee Name", strFeeDataName, True, False, False, "Single") 
    If boolValue Then
	    GUI_SwfObject_Click objSettings.SwfObject("swfname:=iconBtnDelete")
		GUI_Object_WaitTillExistX objEncompassDialog, 5
		BIZ_Settings_Dialog_YES_Click()
    Else
    	FRM_Logger_ReportFailEvent "Itemization Fee Management  Record Deletion","Itemization Fee Management  Record' "&strFeeDataName&" ' Not available for Deletion", Null
    End If
		
	Set objSettings			= Nothing
	Set objEncompassDialog	= Nothing
	Set objSettingsItemView	= Nothing
	
		
End Function



'This function is used to verify Fee Management Record Created or deleted
'@code
'     BIZ_Settings_TablesandFees_Validate_ItemizationCreateOrDelete(strFeeDataName,boolvalue)
'@endcode
'@param strFeeDataName - Set Fee Data name
'@param boolvalue - True or False
	
Function BIZ_Settings_TablesandFees_Validate_ItemizationCreateOrDelete(strFeeDataName,boolvalue)
	
	FRM_Logger_ReportInfoEvent "Itemization Fee management Record","Verification of Itemization Fee Management Record Creation or Deletion" , Null
	Dim objSettings,boolCondition
	
	Set objSettings				=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objSettingsItemView		=	objSettings.SwfObject("swfname:=gridFees")
	 
	Wait g_ShortWaitSmall 'Explicit Wait added Due Sync
	boolCondition = GUI_List_ClickRow(objSettingsItemView, objSettingsItemView.SwfScrollBar("swfname:=vPanelScrollBar"), "Encompass Fee Name", strFeeDataName, True, False, False, "Single") 
    If boolValue Then	  
 		FRM_VerifyTrue boolCondition, "Itemization Fee Management  Record", "Itemization Fee Management  Record Created'  "&strFeeDataName	  
    Else
    	FRM_VerifyFalse boolCondition, "Itemization Fee Management  Record", "Itemization Fee Management  Record Deleted '  "&strFeeDataName	  
    End If
			
	Set objSettings			= Nothing
	Set objEncompassDialog	= Nothing
	
End Function



'This function is used to Validate creation of EscrowFees record 
'@code
'    	BIZ_Settings_TablesandFees_CreateFeesRecord(strRowID)
'@endcode
'@Param strRowID - Row id of testdata in excelfile

Function BIZ_Settings_TablesandFees_CreateFeesRecord(strRowID)

	FRM_Logger_ReportInfoEvent "Create  New  fee Record","Creation of new  fee Record Started", Null 
	
	Dim objSetupContainer,objEscrowFeedetailsWindow,objData,strTableName,intRowIndex
	
	Set objSetupContainer 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow 	= objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objData						= FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
  
    GUI_Object_WaitTillExistX objSetupContainer, 30 
	BIZ_Settings_ClickAdd()
	
	' Fees Record Creation Started
	strTableName = FRM_DS_GetValue(objData, "TableName")
	If UTIL_String_IsNotEmpty (strTableName)  Then
		GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt"), strTableName
	End If
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "LoanPurpose"))  Then
		GUI_SwfComboBox_Select objEscrowFeedetailsWindow.SwfComboBox("swfname:=cboPurpose"), FRM_DS_GetValue(objData, "LoanPurpose")
	End If
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Type"))  Then
		GUI_SwfComboBox_Select objEscrowFeedetailsWindow.SwfComboBox("swfname:=cboFeeType"), FRM_DS_GetValue(objData, "Type")
	End If

	GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfObject("swfname:=groupContainer1").SwfObject("swfname:=btnIconAdd")
	Wait g_TinyWaitSmall 'Explicit Wait Added Due to Sync
	
	'Set testdata in required fields
	BIZ_Settings_Escrow_Fees_FeesSection strRowID

    'Calculation Section
    If UTIL_String_IsNotEmpty ((FRM_DS_GetValue(objData, "CalcBasedOn")))  Then
		GUI_SwfComboBox_Select objEscrowFeedetailsWindow.SwfComboBox("swfname:=calcOnCombo"),(FRM_DS_GetValue(objData, "CalcBasedOn"))	 
	End If
	        
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "ToNearest"))  Then
		GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=nearestTxt"), FRM_DS_GetValue(objData, "ToNearest")
	End If
	    
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "WithOffset"))  Then
	    GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=offsetTxt"), FRM_DS_GetValue(objData, "WithOffset")
	End If 
	GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfObject("swfname:=okBtn")	
    
    Set objSetupContainer		  = Nothing
    Set objEscrowFeedetailsWindow = Nothing
	Set objData					  = Nothing
	
	BIZ_Settings_TablesandFees_CreateFeesRecord = strTableName

End Function



'This function is used to set values in fee section of EscrowFees  record
'@code
'    	BIZ_Settings_TablesandFees_VerifyEscrowFeesDetails(strTableName,strRowID)
'@endcode
'@param strTableName - Name of Escrow Fees Record
'@param strRowID - Row id of Escrow fee record in excel file

Function BIZ_Settings_TablesandFees_VerifyEscrowFeesDetails(strTableName,strRowID)

	FRM_Logger_ReportInfoEvent "Verify  Fee Record Details","Verify '"&strTableName&"'  Fee Record Details", Null 
	
	Dim objSetupContainer,objEscrowFeedetailsWindow,objData
	
	Set objSetupContainer 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow 	= objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objData						= FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)

    GUI_Object_WaitTillExistX objSetupContainer, 30
	Wait g_TinyWaitSmall 'Explicit Wait Added Due Sync
	intRowIndex=GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Table Name", strTableName)
	
	'Record  Section verify
	GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, "Table Name",  strTableName
	GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, "Calc. Based On", FRM_DS_GetValue(objData, "CalcBasedOn")
	
	If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "Type")) Then
		GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, "Type", FRM_DS_GetValue(objData, "Type")
	End If
	
	GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, "Rounding", FRM_DS_GetValue(objData, "Rounding")
	GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, "Purpose", FRM_DS_GetValue(objData, "LoanPurpose")
	GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, "To Nearest", FormatNumber(FRM_DS_GetValue(objData, "ToNearest"),2)
	GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, "With Offset", Formatnumber(FRM_DS_GetValue(objData, "WithOffset"),2)
    FRM_Logger_ReportPassEvent "Verify creation of  fee record","fee record populated in   grid" , Null		
	
	BIZ_Settings_ClickEdit ()
	Wait g_TinyWaitSmall 'Explicit Wait Added Due Sync
	FRM_Logger_ReportInfoEvent "Verify  Fee Details Record","Fee Details Record" , Null	
	
	'Fee Details Section verify		
	GUI_List_TextExists objEscrowFeedetailsWindow.SwfObject("swfname:=gridViewTable"),"Up to",FormatNumber(FRM_DS_GetValue(objData, "RangeUpto"),2) 	  	        	    
	GUI_List_TextExists objEscrowFeedetailsWindow.SwfObject("swfname:=gridViewTable"),"Base",FormatNumber(FRM_DS_GetValue(objData, "Base"),2)
	GUI_List_TextExists objEscrowFeedetailsWindow.SwfObject("swfname:=gridViewTable"),"Factor",FormatNumber(FRM_DS_GetValue(objData, "Factor"),2)
	GUI_SwfButton_Click objEscrowFeedetailsWindow.SwfEdit("swfname:=okBtn")
	FRM_Logger_ReportInfoEvent "Verified Fee Record Details ","'"&strTableName&"' Fee Details Record" , Null	

	Set objSetupContainer 			= Nothing
	Set objEscrowFeedetailsWindow   = Nothing
	Set objData                     = Nothing
	
End Function



'This function is used to set values in fee section of EscrowFees  record
'@code
'    	BIZ_Settings_Escrow_Fees_FeesSection(strRowID)
'@endcode
'@Param strRowID - Row id of Escrow fee record in excel file

Private Function BIZ_Settings_Escrow_Fees_FeesSection(strRowID)
    
    FRM_Logger_ReportInfoEvent "Fee Record Details","Enter  Fee Record Details", Null
	
	Dim objSetupContainer,objEscrowFeedetailsWindow,objFeeDetails,objData,strBase,strRangeUpto,strFactor
	
	Set objSetupContainer 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow 	= objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objFeeDetails				= objEscrowFeedetailsWindow.SwfWindow("swfname:=TableDialog")
	Set objData						= FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
	
	strRangeUpto = FRM_DS_GetValue(objData, "RangeUpto")
	strBase		 = FRM_DS_GetValue(objData, "Base")
	strFactor    = FRM_DS_GetValue(objData, "Factor")
	
	'Set testdata in required fields
	If UTIL_String_IsNotEmpty (strRangeUpto) Then
		GUI_SwfEdit_Set objFeeDetails.SwfEdit("swfname:=upToTxt"), strRangeUpto
	End If
	
	If UTIL_String_IsNotEmpty (strBase) Then
		GUI_SwfEdit_Set objFeeDetails.SwfEdit("swfname:=baseTxt"), strBase
	End If 
	
	If UTIL_String_IsNotEmpty (strFactor) Then
		GUI_SwfEdit_Set objFeeDetails.SwfEdit("swfname:=factorTxt"),strFactor
	End If 
		
	GUI_SwfObject_Click objFeeDetails.SwfObject("swfname:=okBtn")
	
	FRM_Logger_ReportInfoEvent "Set values in 'Range Up to', 'Base', 'Factor fields","Values are set  as 'Range Up to: "&strRangeUpto&"','Base: "&strBase&"','Factor: "&strFactor&"'" , Null 
	
	Set objSetupContainer 		  = Nothing
	Set objEscrowFeedetailsWindow = Nothing
	Set objData                   = Nothing
    Set objFeeDetails             = Nothing
  
End Function



'This function is used to set input data in calculation section  of EscrowFees record 
'@code
'    	BIZ_Settings_Escrow_Fees_CalculationSection(strRowID)
'@endcode
'@Param strRowID row id of escrow fee record in excel file

Private Function BIZ_Settings_Escrow_Fees_CalculationSection(strRowID)

	FRM_Logger_ReportInfoEvent "Set values in calculation section", "Set  values in 'To Nearest', 'With Offset' fields", Null 

	Dim objSetupContainer, objEscrowFeedetailsWindow, objData
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow = objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objData=FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)

	If  GUI_Object_IsEnabled(objEscrowFeedetailsWindow)=True Then
		If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "ToNearest"))= True Then
			GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=nearestTxt"), FRM_DS_GetValue(objData, "ToNearest")
		End If 
		If UTIL_String_IsNotEmpty (FRM_DS_GetValue(objData, "WithOffset"))= True Then
			GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=offsetTxt"), FRM_DS_GetValue(objData, "WithOffset")
		End If 
		FRM_Logger_ReportPassEvent "Set values in 'To Nearest' and 'WithOffset' fields","Values are set  as 'To Nearest':"&FRM_DS_GetValue(objData, "To Nearest")&" and 'WithOffset':"&FRM_DS_GetValue(objData, "With Offset")&"'" , Null 
	Else
		FRM_Logger_ReportFailEvent "Set values in 'To Nearest' and 'WithOffset' fields","Failed to set data", Null 
	End If

    Set objSetupContainer		  = Nothing
    Set objEscrowFeedetailsWindow = Nothing
    Set objData                   = Nothing

End Function



'This function is used to edit EscrowFees record 
'@code
'    	BIZ_Settings_TablesandFees_EscrowFees_Edit(strRowID, strPurchaseTableName)
'@endcode
'@Param strRowID row id of escrow fee record

Function BIZ_Settings_TablesandFees_EscrowFees_Edit(strRowID,strPurchaseTableName)

	FRM_Logger_ReportInfoEvent "Verify edit functionality of EscrowFees record", "Verification of edit functionality on EscrowFees record", Null 
	Dim objSetupContainer, objEscrowFeedetailsWindow, objData, objFeeDetails, intRowIndex, intRangeUpto 
	Set objSetupContainer=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow=objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objData=FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
	Set objFeeDetails=objEscrowFeedetailsWindow.SwfWindow("swfname:=TableDialog")
	
	GUI_Object_WaitTillExistX objSetupContainer.SwfObject("swfname:=listView"), 60
	GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strPurchaseTableName, 1
	
	If GUI_Object_IsEnabled(objSetupContainer.SwfObject("swfname:=stdIconBtnEdit"))= True Then
        BIZ_Settings_ClickEdit ()
	Else
		intRowIndex=GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), 1 , strPurchaseTableName)
		GUI_List_ActOnRow objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, True, False, False, "Double"
	End If
	
	GUI_Object_WaitTillExistX objEscrowFeedetailsWindow, 30
    GUI_List_SelectItem objEscrowFeedetailsWindow.SwfObject("swfname:=gridViewTable"), FormatNumber(FRM_DS_GetValue(objData, "RangeUpto"),2), 0
   
   	If GUI_Object_IsEnabled(objSetupContainer.SwfObject("swfname:=btnIconEdit"))= True Then
  		GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfObject("swfname:=btnIconEdit")
  	Else
  		intRowIndex=GUI_List_GetRowIndex(objEscrowFeedetailsWindow.SwfObject("swfname:=gridViewTable"), 0, FormatNumber(FRM_DS_GetValue(objData, "RangeUpto"),2))
		GUI_List_ActOnRow objEscrowFeedetailsWindow.SwfObject("swfname:=gridViewTable"), intRowIndex, True, False, False, "Double"
  	End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "RangeUpto_1"))= True Then
        GUI_SwfEdit_Set objFeeDetails.SwfEdit("swfname:=upToTxt"), FRM_DS_GetValue(objData, "RangeUpto_1")
    End If
        
    GUI_SwfObject_Click objFeeDetails.SwfObject("swfname:=okBtn")
	GUI_SwfButton_Click objEscrowFeedetailsWindow.SwfEdit("swfname:=okBtn")	
	intRowIndex=GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), 1, strPurchaseTableName)
	
	If intRowIndex>=0 Then
		GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, 1, strPurchaseTableName
		FRM_Logger_ReportPassEvent " Verify system updated recent changes in Fees section"," Updated RangeUpto:'"&FRM_DS_GetValue(objData, "RangeUpto_1")&"' in Fees section", Null 	
		FRM_Logger_ReportPassEvent " Verify changes saved in record"," Changes saved in the record '"&strPurchaseTableName&"'", Null 
	Else
		FRM_Logger_ReportFailEvent " Verify system updated recent changes in Fees section"," Failed to update changes", Null 	
		FRM_Logger_ReportFailEvent " Verify changes saved in record"," Changes not saved in the record ", Null 
	End If
    	
    Set objSetupContainer 		  = Nothing
	Set objEscrowFeedetailsWindow = Nothing
	Set objData 				  = Nothing
    Set objFeeDetails 			  = Nothing
     
End Function



'This function is used to validate duplicate opearation of EscrowFees record 
'@code
'    	BIZ_Settings_TablesandFees_EscrowFees_Duplicate(strRowID, strPurchaseTableName)
'@endcode
'@Param strEscrowTableNameDuplicate duplicate table name escrow fee record
'@Param strRowID row id of escrow fee record

Function BIZ_Settings_TablesandFees_EscrowFees_Duplicate(strRowID, strPurchaseTableName)

	FRM_Logger_ReportInfoEvent "Verify duplicate functionality of EscrowFees record","Verification of duplicate functioality of EscrowFees record ", Null

	Dim objSetupContainer, objEscrowFeedetailsWindow, intTblNameRowindex, strEscrowfeeTblname, objSettingsDialog, strTableName, strvalDialog, objData
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow = objSetupContainer.SwfWindow("swfname:=TableGroupDialog")	
	Set objData=FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
	Set objSettingsDialog =  objEscrowFeedetailsWindow.Dialog("text:=Encompass")

	strTableName=Replace(strPurchaseTableName, "EscrowPurchase","EscrowDuplicate")

	If GUI_Object_IsEnabled(objSetupContainer)=True Then	
		GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strPurchaseTableName, "Table Name"
   		BIZ_Settings_ClickDuplicate ()
   		GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt","index:=0"), strTableName
   		GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfObject("swfname:=okBtn")
   		intRowIndex=GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"),"Table Name", strTableName)
   		GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"),intRowIndex,"Table Name", strTableName
   		
		If GUI_List_TextExists(objSetupContainer.SwfObject("swfname:=listView"), "Table Name",strTableName)=True Then
            FRM_Logger_ReportPassEvent "Verification and Validation of duplicate Escrow fees record under Table name in Escrow grid", "Duplicated Escrow Fee details record '"&strEscrowTableNameDuplicate&"' populated in grid", Null 
   		Else
			FRM_Logger_ReportFailEvent "Verification and Validation of duplicate Escrow fees record under Table name in Escrow grid", "Duplicated Escrow Fee details record not populated in grid", Null 
		End If 
	End If 
	  
    Set objSetupContainer 		  = Nothing
	Set objEscrowFeedetailsWindow = Nothing
	Set objData 				  = Nothing
    Set objSettingsDialog 		  = Nothing

End Function



'This function is used to validate delete operation on EscrowFees record 
'@code
'    	BIZ_Settings_TablesandFees_EscrowFees_Delete(strRowID, strRefinanceTableName)
'@endcode
'@Param strRowID row id of escrow fee record

Function BIZ_Settings_TablesandFees_EscrowFees_Delete(strRowID, strRefinanceTableName)

	FRM_Logger_ReportInfoEvent "Verify delete functionality of EscrowFees record","Verification of delete functionality EscrowFees record ", Null

	Dim objSetupContainer, objEscrowFeedetailsWindow, objData, intRowIndex
	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow = objSetupContainer.SwfWindow("swfname:=TableGroupDialog")	
	Set objData=FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
	
	GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strRefinanceTableName,"Table Name"
	GUI_Object_IsEnabled objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")
	BIZ_Settings_ClickDelete ()
	BIZ_Settings_Dialog_YES_Click()
	GUI_Object_WaitTillVisibleX objSetupContainer.SwfObject("swfname:=listView"), 60
	GUI_Object_WaitTillExistX objSetupContainer.SwfObject("swfname:=listView"), 60
	intRowIndex=GUI_List_GetRowCount(objSetupContainer.SwfObject("swfname:=listView"), 1, strRefinanceTableName)		
	
	If intRowIndex<0 Then	
		FRM_Logger_ReportPassEvent "Select EscrowFees record to delete","Selected EscrowFees record:"&strRefinanceTableName&" is deleted", Null 
		intRowIndex=GUI_List_GetRowCount(objSetupContainer.SwfObject("swfname:=listView"), 1, strRefinanceTableName)		
	ElseIf GUI_List_TextExists(objSetupContainer.SwfObject("swfname:=listView"), 1, strRefinanceTableName)= False Then
		FRM_Logger_ReportPassEvent "Select EscrowFees record to delete","Selected EscrowFees record:"&strRefinanceTableName&" is deleted", Null 
	Else
		FRM_Logger_ReportFailEvent "Select EscrowFees record to delete","Selected EscrowFees record:"&strRefinanceTableName&" is not deleted", Null 
	End If

	Set objSetupContainer		  = Nothing	
	Set objEscrowFeedetailsWindow = Nothing
    Set objData                   = Nothing
    
End Function


	
'This function is used to close loan form
'@code
'    	BIZ_CloseLoanForm_SaveLoanNO()
'@endcode

Function BIZ_CloseLoanForm_SaveLoanNO()

    FRM_Logger_ReportInfoEvent "Close Loan Form","Close Loan Form With Out Save", Null   
	
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=closeBtn")
    GUI_Dialog_Encompass_NoX 5, ""
    
End Function



'This function is for select State,City and User Defined Record Tax Record
'@code
'    BIZ_Settings_TablesandFees_SelectTaxRecord(strTaxRecord,strTaxType)
'@endcode
'@Praram strTaxRecord is type of tax record to select for calculation
'@Praram strTaxType is type of Tax

Function BIZ_Settings_TablesandFees_SelectTaxRecord(strTaxRecord,strTaxType)
   
   FRM_Logger_ReportInfoEvent "Tax Record Selection","Tax Record Selected is ' "&strTaxRecord&" '", Null
	
	Dim objFeeListDialog,objCityOrStateBtn,objSettings
	Set objFeeListDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FeeListDialog")
	Set objSettings = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	Select Case lcase(strTaxType)
		Case lcase("CityTax")
			Set objCityOrStateBtn = objSettings.WebButton("html id:=StandardButton1")
		Case lcase("StateTax")
			Set objCityOrStateBtn = objSettings.WebButton("html id:=StandardButton2")
		Case lcase("UserDefinedFee")
			Set objCityOrStateBtn = objSettings.WebButton("html id:=StandardButton11")
		Case Else
			FRM_Logger_ReportFailEvent "BIZ_Settings_TablesandFees_SelectTaxRecord","'"&strTaxType&"' is not a valid option", Null
	End Select
	
	GUI_WebButton_Click objCityOrStateBtn 
		
	IF GUI_Object_IsExistX(objFeeListDialog.SwfObject("swfname:=gridFeeList") ,15) = True Then 
		GUI_List_ClickRow objFeeListDialog.SwfObject("swfname:=gridFeeList"),objFeeListDialog.SwfObject("swfname:=gridFeeList").SwfScrollBar("swfname:=vPanelScrollBar"), 0, strTaxRecord, True, FALSE, FALSE, "Single"
		GUI_SwfButton_Click objFeeListDialog.SwfButton("swfname:=okBtn") 
		'wait till main windows appears
		GUI_Object_WaitTillVisibleX SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0"), 120
	Else
		FRM_Logger_ReportFailEvent "Tax Record Select", strTaxRecord&" Tax Record is not Available", Null      
	End If   
	
	Set objCityOrStateBtn = Nothing
    Set objSettings		  = Nothing
    Set objFeeListDialog  = Nothing

 End Function

 
 
'This function is for State ,City and User Defined Record Amount Validation
'@code
'    BIZ_Settings_TablesandFees_TaxAmountValidation(strTaxRecord,strRowID,strRowID2,strTaxType)
'@endcode
'@Praram strTaxRecord is type of tax record to select for calculation 
'@Praram strRowID is loan creation record in excel
'@Praram strRowID2 is State Tax record in excel	
'@Praram strTaxType type of Tax, City , State and User Defined Record

Function BIZ_Settings_TablesandFees_TaxAmountValidation(strTaxRecord,strRowID,strRowID2,strTaxType)
    
    FRM_Logger_ReportInfoEvent strTaxType &" Amount Calculated on Purchase Amount ", strTaxType &" Amount Field Auto Populated", Null
	
	Dim objData,objData2,intPurchasePrice,intRate,intAdditionalAmount,intCalAmount,strAppTax,strApplicationValue
    Dim objParent,objTaxRec,objTaxRecValue
	
	Set objParent = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Set objData2 = FRM_DS_GetTestData("Settings_TablesFees", "TaxRecord", strRowID2)
	
	Select Case lcase(strTaxType)
		
		Case lcase("CityTax")
			Set objTaxRec 		= objParent.WebEdit("html id:=l_1637")
			Set objTaxRecValue 	= objParent.WebEdit("html id:=TextBox36")
			strFiled 			= "1204"
			
		Case lcase("StateTax")
			Set objTaxRec		= objParent.WebEdit("html id:=l_1638")
			Set objTaxRecValue 	= objParent.WebEdit("html id:=TextBox38")
			strFiled 			= "1205"
			
		Case lcase("UserDefinedFee")
			Set objTaxRec		= objParent.WebEdit("html id:=l_373")
			Set objTaxRecValue 	= objParent.WebEdit("html id:=TextBox18")
			strFiled 			= "1206"
			
		Case Else
			
		FRM_Logger_ReportFailEvent "BIZ_Settings_TablesandFees_TaxAmountValidation","'"&strTaxType&"' is not a valid option", Null
	
	End Select
		
	Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails",strRowID )
	
	intPurchasePrice 	= FRM_DS_GetValue(objData, "PurchasePrice") 
	intRate 			= FRM_DS_GetValue(objData2, "Rate")
	intAdditionalAmount = FRM_DS_GetValue(objData2, "Additional Amount")
	
	FRM_Logger_ReportInfoEvent strTaxType &" Amount Calculated on Purchase Amount ", " Loan Purchase Amount "&intPurchasePrice, Null
	FRM_Logger_ReportInfoEvent strTaxType &" Amount Field "& strFiled &"  Calculation Formula ", " (Purchase Amount * intRate)/100 + intAdditionalAmount ", Null
	
	intCalAmount		= FormatNumber( ((intPurchasePrice * intRate)/100 )+intAdditionalAmount)
    strAppTax 			= GUI_Object_GetPropertyValue(objTaxRec,"value")
	strApplicationValue = GUI_Object_GetPropertyValue(objTaxRecValue,"value")   	
    	
	FRM_VerifyEqual strTaxRecord,strAppTax,strTaxType & " Record  Validation ",strTaxType & " Record Selected ' "&strCityTaxRecord&" 'Record in Application '"&strAppTax
	FRM_VerifyEqual intCalAmount,strApplicationValue,strTaxType & " Amount Validation ",strTaxType & " Amount Validation Calculated ' "& intCalAmount&" ' Value Application '"&strApplicationValue
	
	Set objData  		= Nothing 
	Set objData2 		= Nothing
    Set objParent 		= Nothing
    Set objTaxRec 		= Nothing
    Set objTaxRecValue  = Nothing
	
End Function



'This function is Creating new User Defined Fee record
'@code
'    BIZ_Settings_CreateUserDefinedFeeRecord(strRowID)
'@endcode
'@param strRowID Points to Row in Excel For Reading Data 

Function BIZ_Settings_CreateUserDefinedFeeRecord(strRowID)
    
    FRM_Logger_ReportInfoEvent "User Defined Fee Record Create", "User Defined Fee Record Creation Using Row Data @' " &strRowID, Null
    
    Dim objData, objSettings, objListView, objUserDefinedList, strFeeDescription, intRowIndex
    Dim strCalcBasedOn,strRate,strAdditionalAmt
    
    Set objData             = FRM_DS_GetTestData("Settings_TablesFees", "UserDefinedFee", strRowID)
    Set objSettings         = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objListView         = objSettings.SwfObject("swfname:=listView")
    Set objUserDefinedList  = objSettings.SwfWindow("swfname:=FeeDialog")
     
    BIZ_Settings_ClickAdd()
    strFeeDescription = FRM_DS_GetValue(objData, "Fee Description")
    GUI_SwfEdit_Set objUserDefinedList.SwfEdit("swfname:=feeNameTxt"),strFeeDescription
    GUI_SwfComboBox_Select objUserDefinedList.SwfComboBox("swfname:=calcOnCombo"), FRM_DS_GetValue(objData, "CalculateBasedon")
    GUI_SwfEdit_Set objUserDefinedList.SwfEdit("swfname:=rateTxt"), FRM_DS_GetValue(objData, "Rate")
    GUI_SwfEdit_Set objUserDefinedList.SwfEdit("swfname:=additionalTxt"), FRM_DS_GetValue(objData, "Additional Amount")    
    GUI_SwfButton_Click objUserDefinedList.SwfButton("swfname:=addBtn")
    
    Wait 5 'Due to Sync problem we added explicit wait    
    intRowIndex = GUI_List_GetRowIndex(objListView, "Fee Name", strFeeDescription)
    GUI_List_ValidateCellData objListView, intRowIndex, "Fee Name", strFeeDescription  
    
    strCalcBasedOn = GUI_List_GetCellData(objListView, intRowIndex, 1)    
    FRM_VerifyEqual strCalcBasedOn, FRM_DS_GetValue(objData, "CalculateBasedon"),"Calculate based On","Calculate based On"
    
    strRate = cdbl(formatnumber(GUI_List_GetCellData(objListView, intRowIndex, 2)))
    FRM_VerifyEqual strRate, FRM_DS_GetValue(objData, "Rate"),"Rate","Rate"
    
    strAdditionalAmt = GUI_List_GetCellData(objListView,intRowIndex, 3)
    FRM_VerifyEqual strAdditionalAmt, formatnumber(FRM_DS_GetValue(objData, "Additional Amount"),2), "Additional Amount", "Additional Amount"
    
    Set objData                = Nothing
    Set objSettings            = Nothing
    Set objListView            = Nothing
    Set objUserDefinedList     = Nothing
    
    BIZ_Settings_CreateUserDefinedFeeRecord = strFeeDescription
End Function



'This function is used Select MITable Tab
'@code
'    	BIZ_TablesAndFees_SelectMITableConvTab(strRowID,strMITab)
'@endcode
'@Param strMITab is Tab in MITable
'@Param strRowID rowid of testdata in excelfile

 Function BIZ_TablesAndFees_SelectMITableConvTab(strRowID,strMITab)
	
	FRM_Logger_ReportInfoEvent "BIZ_TablesAndFees_SelectMITableTab","BIZ_TablesAndFees_SelectMITableTab using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings,  objTabForm, objMITab,strTabName	
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")	
	Set objTabForm 	= objSettings.SwfWindow("swfname:=AddTabNameForm")
	Set objMITab   	= objSettings.SwfTab("swfname:=tabControlMI")
	Set objData 	= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	strTabName 		= FRM_DS_GetValue(objData, "TabName")
	
	Select CASE ucase(strMITab)
		CASE "CONVENTIONAL"	
		    GUI_SwfTab_Click objMITab,"Conventional"
		    GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnNewTab")
			If  GUI_Object_IsExist(objTabForm) Then
				If UTIL_String_IsNotEmpty(strTabName) Then GUI_SwfEdit_Set objTabForm.SwfEdit("swfname:=textBoxName"), strTabName
				GUI_SwfButton_Click objTabForm.SwfButton("swfname:=okBtn")
		    Else
		        FRM_Logger_ReportInfoEvent "BIZ_TablesAndFees_SelectMITableConvTab","BIZ_TablesAndFees_SelectMITableConvTab using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null		
			End IF	
		CASE "FHA"
	      	GUI_SwfTab_Click objMITab,"FHA"
		Case "VA"
	      	GUI_SwfTab_Click objMITab,"VA"
	    Case "OTHER"
         	GUI_SwfTab_Click objMITab,"Other"
	    Case Else
			FRM_Logger_ReportFailEvent "MI table Select Tab",strMITab& "tab not available to select ", Null
	End Select
		
	Set objData     = Nothing
	Set objSettings = Nothing
	Set objTabForm  = Nothing
    Set objMITab    = Nothing
	
	BIZ_TablesAndFees_SelectMITableConvTab = strTabName
End Function



'This function is used Create MITable Secnario 
'@code
'    	BIZ_TablesAndFees_CreateMITableSecnario(strRowID,strMITab)
'@endcode
'@Param strMITab is Tab in MITable
'@Param strRowID rowid of testdata in excelfile

Function BIZ_TablesAndFees_CreateMITableSecnario(strRowID,strMITab)

	FRM_Logger_ReportInfoEvent "BIZ_TablesAndFees_CreateMITableSecnario","BIZ_TablesAndFees_CreateMITableSecnario using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings, objMIScenario, objTabForm, strScenario,  intRowNum, objTab
	Set objData 		= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	Set objSettings 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMIScenario 	= objSettings.SwfWindow("swfname:=MIRecordSetupForm")
	Set objTabForm 		= objSettings.SwfWindow("swfname:=AddTabNameForm")
	Set objTab   		= objSettings.SwfTab("swfname:=tabControlMI")

	BIZ_Settings_ClickAdd()
	
	If GUI_Object_IsExist(objMIScenario) Then
		BIZ_TablesAndFees_AddMIScenarioData strRowID,strMITab
	End If
	
	strScenario = GUI_Object_GetPropertyValue (objMIScenario.SwfEditor("swfname:=txtScenario"), "Text")
	GUI_SwfButton_Click objMIScenario.SwfButton("swfname:=okBtn")  	
	GUI_Object_WaitTillExistX objSettings.SwfObject("swfname:=listViewMI"),30
		
 	 	
 	Set objSettings   = Nothing
 	Set objMIScenario = Nothing
    Set objTabForm    = Nothing
    Set objData       = Nothing    
    
    BIZ_TablesAndFees_CreateMITableSecnario = strScenario
End Function 



'This function is used to Caliculate MIFF Amount validation
'@code
'    BIZ_TableandFees_SelectMIDetailPage_GetMIPDetails(strRowID,strScenarioName)
'@endcode
'@param strRowID - Pointed to Row in excel to read data from SetTransactionDetails
'@param strScenarioName - MI Scenario Name

Function BIZ_TableandFees_SelectMIDetailPage_GetMIPDetails(strRowID,strScenarioName)

	FRM_Logger_ReportInfoEvent "MI Record Selection","MI Record Selection Based On MI Scenario '"&strScenarioName&"'in MI table ", null
	
	Dim objData,objMIFFButton,objMainWindow, objMIList, strBasedOn ,strScenario,boolValue
		 
	Set objMIFFButton = SwfWindow("swfname:=MainForm").Page("micClass:=Page").WebButton("html id:=StandardButton2")  
	Set objMainWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
	Set objMIList 	  = objMainWindow.SwfWindow("swfname:=MIRecordsSelectForm").SwfObject("swfname:=listViewMI")
	Set objData 	  = FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	strBasedOn	      = FRM_DS_GetValue(objData, "BasedOn") 	
	
	BIZ_Forms_Open "1003 Page 1"
	GUI_WebButton_Click(objMIFFButton)
	
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "strMIWindow")) Then	
		GUI_Object_ValidateExists objMainWindow, 4, FRM_DS_GetValue(objData, "strMIWindow")		
	End If 

	GUI_Object_WaitTillExistX objMainWindow.SwfComboBox("swfname:=typeCombo"),30
	
	If UTIL_String_IsNotEmpty(strBasedOn) Then
		GUI_SwfComboBox_Select objMainWindow.SwfComboBox("swfname:=typeCombo"), strBasedOn	
	End If
	
	GUI_SwfButton_Click objMainWindow.SwfButton("swfname:=btnGetMI")
	
	If GUI_Object_IsExistX(objMainWindow.SwfWindow("swfname:=MIRecordsSelectForm") ,25) Then
	    Wait g_ShortWaitMedium  'Explicit wiat added due to sync
	 	boolValue=GUI_List_ClickRow (objMIList, null, "Scenario", strScenarioName, True, FALSE, FALSE, "Single")    
	    FRM_VerifyTrue  boolValue, "MI Table Record", "MI Table Record Created:"&strScenarioName    
	    GUI_SwfButton_Click objMainWindow.SwfWindow("swfname:=MIRecordsSelectForm").SwfButton("swfname:=tbnSelect")
    Else
        FRM_Logger_ReportInfoEvent "GET MI Records", "Only Single Record Available in Application ", Null
    End If
	    
	Set objData              = Nothing
	Set objMIFFButton        = Nothing
	Set objMIList            = Nothing

End Function



'This function is used to Caliculate MIFF Amount 
'@code
'    BIZ_TableandFees_MIFF_AmountAutoPopulate_Verify_ConventionalLoanRecord(strRowID)
'@endcode
'@param strRowID - Pointed to Row in excel toread data

Function BIZ_TableandFees_MIFF_AmountAutoPopulate_Verify_ConventionalLoanRecord(strRowID)
	
	FRM_Logger_ReportInfoEvent "MI FF Guarantee Fee Calculation At MI Record", "MI FF Guarantee Fee Calculation For MI Record", null

	Dim objData,objMainWindow,strMIFFPremiumPercent,strMIFFFirstMonthRate,strMIFFSecondMonthRate,strMIFFFirstMonths,strMIFFSecondMonths,strMIFFCancelAt
	Dim strAppMIPPercent,strAppFirstMonthRate,strAppFirstMonths,strAppSecondMonthRate,strAppSecondMonths,strAppCancelAt

	Set objData 			= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	Set objMainWindow 		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog")
    strMIFFPremiumPercent	= FormatNumber(FRM_DS_GetValue(objData, "Premium"),6 )
	strMIFFFirstMonthRate	= FormatNumber(FRM_DS_GetValue(objData, "FirstMonthly"),3 )
	strMIFFSecondMonthRate	= FormatNumber(FRM_DS_GetValue(objData, "SecondMonthly"),3 )
	strMIFFCancelAt			= FormatNumber(FRM_DS_GetValue(objData, "Cutoff"),3 )
	strMIFFFirstMonths		= FormatNumber(FRM_DS_GetValue(objData, "FirstMonth"),0 )
	strMIFFSecondMonths		= FormatNumber(FRM_DS_GetValue(objData, "SecondMonth"),0 ) 
	strAppMIPPercent		= GUI_Object_GetPropertyValue(objMainWindow.SwfEdit("swfname:=rateFundingTxt"),"text")
	strAppFirstMonthRate	= GUI_Object_GetPropertyValue(objMainWindow.SwfEdit("swfname:=rateMI1Txt"),"text")
	strAppFirstMonths		= GUI_Object_GetPropertyValue(objMainWindow.SwfEdit("swfname:=monthMI1Txt"),"text")
	strAppSecondMonthRate	= GUI_Object_GetPropertyValue(objMainWindow.SwfEdit("swfname:=rateMI2Txt"),"text")
	strAppSecondMonths 		= GUI_Object_GetPropertyValue(objMainWindow.SwfEdit("swfname:=monthMI2Txt"),"text")
	strAppCancelAt     		= GUI_Object_GetPropertyValue(objMainWindow.SwfEdit("swfname:=rateMICancelTxt"),"text")
      
	 If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Premium")) Then
		FRM_VerifyEqual strMIFFPremiumPercent,strAppMIPPercent,"MI Premium Percent Validation","MI Premium Percent Entered' "&strMIFFPremiumPercent&" ' Value Application '"&strAppMIPPercent	
	 End If 
	 
	 FRM_VerifyEqual strMIFFFirstMonthRate,strAppFirstMonthRate,"MI First Month Rate Validation","MI First MonthRate Entered' "&strMIFFFirstMonthRate&" ' Value Application '"&strAppFirstMonthRate
	 FRM_VerifyEqual strMIFFFirstMonths,strAppFirstMonths,"MI First Months Validation","MI First Months Entered' "&strMIFFFirstMonths&" ' Value Application '"&strAppFirstMonths
	 FRM_VerifyEqual strMIFFSecondMonthRate,strAppSecondMonthRate,"MI Second Month Rate Validation","MI Second MonthRate Entered' "&strMIFFSecondMonthRate&" ' Value Application '"&strAppSecondMonthRate
	 FRM_VerifyEqual strMIFFSecondMonths,strAppSecondMonths,"MI Second Months Validation","MI Second Months Entered' "&strMIFFSecondMonths&" ' Value Application '"&strAppSecondMonths
	 FRM_VerifyEqual strMIFFCancelAt,strAppCancelAt,"MI Cancel At","MI Cancel At Entered' "&strMIFFCancelAt&" ' Value Application '"&strAppCancelAt

	GUI_SwfButton_Click(objMainWindow.SwfButton("swfname:=okBtn"))

	set objData      	= Nothing
	set objMainWindow  	= Nothing
	
End Function 



'This function is used to Select MI Conventional Dynemic Tab
'@code
'    BIZ_TablesAndFees_SelectMIConventionalTab(strConventionalTab){
'@endcode
'@param strConventionalTab - Dynamic Tab Name

Function BIZ_TablesAndFees_SelectMIConventionalTab(strConventionalTab)

	FRM_Logger_ReportInfoEvent "MI Conventional Table Tab ","MI Conventional Table' "& strConventionalTab &" 'Tab Select", Null
	
	Dim objControlMITab,objControlMIConvTab,objSettings
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objControlMITab=objSettings.SwfTab("swfname:=tabControlMI")
	Set objControlMIConvTab=objSettings.SwfTab("swfname:=tabControlConv")
	
	GUI_SwfTab_Click objControlMITab,"Conventional"
	GUI_SwfTab_Click objControlMIConvTab,strConventionalTab
	
	Set objControlMITab     = Nothing
	Set objControlMIConvTab = Nothing
	Set objSettings         = Nothing

End Function	



'This function is used to Caliculate MIFF Amount validation
'@code
'    BIZ_TableandFees_MIFF_AmountAutoPopulate_ConventionalLoanAmountValidation(strRowID,strRowID2)
'@endcode
'@param strRowID2 - Pointed to Row in excel to read data from MITable
'@param strRowID - Pointed to Row in excel to read data from SetTransactionDetails

Function BIZ_TableandFees_MIFF_AmountAutoPopulate_ConventionalLoanAmountValidation(strRowID,strRowID2)

	FRM_Logger_ReportInfoEvent "MI FF Guarantee Fee Calculation At Application", "MI FF Guarantee Fee Calculation For MI Record", null

	Dim objData,objData2,objParentObject
	Dim strMIFFPremiumPercent,strLoanType,strLoanPurchasePrice,strLoanDownPaymentPercent,strAppPurchasePrice,strAppLoanAmount,strAppMIPFFAmount
	Dim strPaidAmount,strLoanAmount,strMIPFFAmount
	
	Set objData 	= FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
	Set objData2 	= FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID2)
		   
	strMIFFPremiumPercent=FRM_DS_GetValue(objData2, "Premium")	
	strLoanType=FRM_DS_GetValue(objData, "LoanType")
	strLoanPurchasePrice=FRM_DS_GetValue(objData, "PurchasePrice")
	strLoanDownPaymentPercent=FRM_DS_GetValue(objData, "DownPaymentPercent")

	strLoanPurchasePrice=FormatNumber(strLoanPurchasePrice,0)
	strLoanDownPaymentPercent=FormatNumber(strLoanDownPaymentPercent,0)  
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Wait g_TinyWaitMedium
	strAppPurchasePrice=GUI_Object_GetPropertyValue(objParentObject.WebEdit("html id:=l_136"),"value")
	strAppLoanAmount=GUI_Object_GetPropertyValue(objParentObject.WebEdit("html id:=l_1109"),"value")
	strAppMIPFFAmount=GUI_Object_GetPropertyValue(objParentObject.WebEdit("html id:=l_1045"),"value")

	strLoanType=FRM_DS_GetValue(objData, "LoanType")
	strLoanPurchasePrice=FRM_DS_GetValue(objData, "PurchasePrice")
	strLoanDownPaymentPercent=FRM_DS_GetValue(objData, "DownPaymentPercent")
	FRM_Logger_ReportInfoEvent "MIFF Amount Auto Population Loan Type", "Loan Type is: "&strLoanType, Null
	strLoanPurchasePrice=FormatNumber(strLoanPurchasePrice)
	FRM_VerifyEqual strLoanPurchasePrice,strAppPurchasePrice," ","Loan Purchase Price' "&strLoanPurchasePrice&" 'Value In Application '"&strAppPurchasePrice
	FRM_Logger_ReportInfoEvent "Loan Down Payment", "Loan Down Payment is '"&strLoanDownPaymentPercent&"' % Of Purchase Price", Null
	
	strPaidAmount = (strLoanPurchasePrice*strLoanDownPaymentPercent)/100
	strLoanAmount= strLoanPurchasePrice - strPaidAmount
	strLoanAmount=formatnumber (strLoanAmount)
	FRM_Logger_ReportInfoEvent "Loan Amount", "Loan Amount is 'strLoanDownPaymentPercent' * 'Purchase Price' "&strLoanAmount, Null
	FRM_VerifyEqual strLoanAmount,strAppLoanAmount," ","Loan Amount ' "&strLoanAmount&" ' Value Application '"&strAppLoanAmount
	strMIPFFAmount=(strAppLoanAmount * strMIFFPremiumPercent)/100
	FRM_Logger_ReportInfoEvent "MIP FF Amount Formula", "MIP FF Amount is '(strAppLoanAmount * strAppMIPPercent)/100 =  "&strMIPFFAmount, Null
	strMIPFFAmount=FormatNumber(strMIPFFAmount)
	FRM_VerifyEqual strMIPFFAmount,strAppMIPFFAmount," ","MIP FF Amount ' "&strMIPFFAmount&" ' Value Application '"&strAppMIPFFAmount

	Set objData         = Nothing
	Set objData2        = Nothing
	Set objParentObject = Nothing

End Function



'This function is used to Delete MI Conventional Dynemic Tab
'@code
'    BIZ_TablesAndFees_DeleteMIConventionalTab(strConventionalTab)
'@endcode
'@param strConventionalTab - Dynamic Tab Name

Function BIZ_TablesAndFees_DeleteMIConventionalTab(strConventionalTab)

	FRM_Logger_ReportInfoEvent "MI Conventional Table Tab ","MI Conventional Table' "& strConventionalTab &" 'Tab Select", Null
	
	Dim objDeleteTab,objSettings
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objDeleteTab =objSettings.SwfObject("swfname:=stdIconBtnDeleteTab")
	
	GUI_SwfObject_Click objDeleteTab
	
	Set objDeleteTab = Nothing
	Set objSettings  = Nothing

End Function



'This function is used to Validate creation of Duplicate Escrow Record 
'@code
'    	BIZ_Settings_TablesandFees_DuplicateEscrowRecord(strTableNameActual,strRowID)
'@endcode
'@param strTableNameActual - Escrow Record Name 
'@param strRowID - Points Row Data in Excel 

Function BIZ_Settings_TablesandFees_DuplicateEscrowRecord(strTableNameActual,strRowID)

	FRM_Logger_ReportInfoEvent "Verify Duplicate of a Fees Record","Verify  'Duplicate' functionality on Fees Record ", Null
	
	Dim intTblNameRowindex,objSetupContainer,objEscrowFeedetailsWindow,objData
    
	Set objData 					= FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID) 
	Set objSetupContainer 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow 	= objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	strTableNameDuplicate 			= FRM_DS_GetValue(objData, "Duplicate_TableName")
	
    GUI_Object_WaitTillExistX objSetupContainer.SwfObject("swfname:=listView"),60
	GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strTableNameActual,"Table Name"
	BIZ_Settings_ClickDuplicate()
	
	GUI_Object_WaitTillExistX objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt","index:=0"),40
	GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt","index:=0"),strTableNameDuplicate
	GUI_SwfButton_Click objEscrowFeedetailsWindow.SwfEdit("swfname:=okBtn")

    'Duplication Validation
    Wait g_TinyWaitSmall 'Explicit Wait used to handle sync isuues 	
    intTblNameRowindex = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Table Name",Trim(strTableNameDuplicate)) 
    GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intTblNameRowindex, "Table Name", strTableNameDuplicate
    
	Set objEscrowFeedetailswindow = Nothing
	Set objSetupContainer		  = Nothing
	Set objData					  = Nothing
	
	BIZ_Settings_TablesandFees_DuplicateEscrowRecord = strTableNameDuplicate
	
End Function



'This function is used to Validate Deletion of  Escrow Fees Record 
'@code
'    	BIZ_Settings_TablesandFees_DeleteEscrowRecord(strTableNameActual)
'@endcode 
'@Param strTableNameActual - Escrow Fees Record Name 

Function BIZ_Settings_TablesandFees_DeleteEscrowRecord(strTableNameActual)

	FRM_Logger_ReportInfoEvent "Verify 'Delete' functionality of a  Fees Record","Verify  'Delete'  functionality on  Fees Record ", Null
	
	Dim objSetupContainer,objEscrowFeedetailswindow,objEscrowFeedetailDelete,intTblNameRowindex
	
	Set objSetupContainer 		  = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
 	Set objEscrowFeedetailswindow = objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objEscrowFeedetailDelete  = objEscrowFeedetailswindow.SwfObject("swfname:=btnIconDelete")
 	
	GUI_Object_WaitTillExistX objSetupContainer.SwfObject("swfname:=listView"),60
	GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strTableNameActual,"Table Name"
	BIZ_Settings_ClickEdit ()
	Wait g_TinyWaitSmall 'Explicit Wait Added Due Sync
	GUI_List_SelectItem objEscrowFeedetailswindow.SwfObject("swfname:=gridViewTable"),CStr(FormatNumber(FRM_DS_GetValue(objData, "Base"),2)),"Base"
	GUI_SwfObject_Click  objEscrowFeedetailDelete
	
	Wait g_TinyWaitSmall 'Explicit Wait Added Due Sync
	intTblNameRowindex = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Base",Trim(CStr(FormatNumber(FRM_DS_GetValue(objData, "Base"),2))))		
	If intTblNameRowindex < 0 Then
		FRM_Logger_ReportPassEvent " Fees Record Delete"," Fees Details Deleted", Null
	Else	
		FRM_Logger_ReportFailEvent " Fees Record Delete"," Fees Details Not Deleted", Null
	End If	
	
	GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfObject("swfname:=okBtn")

	If GUI_Object_IsEnabled(objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")) Then
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Yes("")		
		Wait g_TinyWaitSmall 'Explicit Wait Added Due Sync isuues
		intTblNameRowindex = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Table Name",Trim(strTableNameActual))
		If intTblNameRowindex < 0 Then
			FRM_Logger_ReportPassEvent " Record Delete","System deletes the selected Fees record '"+strTableNameActual+"' and it should not be available in  grid", Null
		Else	
			FRM_Logger_ReportFailEvent " Record Delete","System Failed to deletes the selected Fees record and it should  be available in  grid", Null
		End If		
	Else
	 	FRM_Logger_ReportFailEvent "Delete Disabled","Fees Record Delete Failed", Null
	End If	 	

	Set objSetupContainer 		  = Nothing 
    Set objEscrowFeedetailswindow = Nothing
	Set objEscrowFeedetailDelete  = Nothing
	
End Function



'This function is used to Validate Rename of Escrow Record 
'@code
'    	BIZ_Settings_TablesandFees_RenameEscrowRecord(strTableNameActual,strRowID)
'@endcode
'@Param strTableNameActual - Escrow Record Name 
'@Param strRowID - RowID from Excel 

Function BIZ_Settings_TablesandFees_RenameEscrowRecord(strTableNameActual,strRowID)

	FRM_Logger_ReportInfoEvent "Verify 'Rename' of a Fees Record","Verify 'Rename' functionality on Fees Record ", Null	
	
	Dim objData,objSetupContainer,objEscrowFeedetailswindow,objEscrowFeedetailEdit,intTblNameRowindex,strRenameTableName
	
	Set objData 					= FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
	Set objSetupContainer 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailswindow 	= objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objEscrowFeedetailEdit 		= objSetupContainer.SwfObject("swfname:=stdIconBtnEdit")
	strRenameTableName				= FRM_DS_GetValue(objData, "ReName_TableName")
	
    GUI_Object_WaitTillExistX objSetupContainer.SwfObject("swfname:=listView"),60
	intTblNameRowindex =  GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Table Name", strTableNameActual)
	GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strTableNameActual,"Table Name"
	GUI_SwfObject_Click objEscrowFeedetailEdit
	GUI_Object_WaitTillExistX objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt","index:=0"),60
	GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt","index:=0"),Trim(strRenameTableName)
	GUI_SwfButton_Click objEscrowFeedetailsWindow.SwfEdit("swfname:=okBtn")
	
	'Validate Rename
	Wait g_TinyWaitSmall 'Explicit Wait used to handle sync issues 
	intTblNameRowindex = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Table Name", Trim(strRenameTableName))
	GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intTblNameRowindex, "Table Name", Trim(strRenameTableName)
	
	Set objSetupContainer			= Nothing
	Set objEscrowFeedetailsWindow	= Nothing
	Set objData						= Nothing
    Set objEscrowFeedetailEdit      = Nothing	
	
	BIZ_Settings_TablesandFees_RenameEscrowRecord = Trim(strRenameTableName)
End Function 


				
'This function is used to Edit  Escrow Record 
'@code
'    	BIZ_Settings_TablesandFees_EditEscrowRecord(strTableNameActual,strRowID)
'@endcode
'@param strRowID - points to Row in Excel  
'@param strTableNameActual - Escrow Record Name 

Function BIZ_Settings_TablesandFees_EditEscrowRecord(strTableNameActual,strRowID)

	FRM_Logger_ReportInfoEvent "Verify 'Edit' of a Fees Record","Verify  'Edit' functionality on  Fees Record ", Null

	Dim objSetupContainer,objEscrowFeedetailswindow,objEscrowTableDialog,objEscrowTableDialogUPTO,objEscrowTableDialogOK,objEscrowFeedetailEdit,objData
	Dim strRangeUPTO,strTableNameEdit,intTblNameRowindex
	
	Set objSetupContainer 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailswindow 	= objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objEscrowTableDialog 		= objEscrowFeedetailswindow.SwfWindow("swfname:=TableDialog")
	Set objEscrowTableDialogUPTO 	= objEscrowTableDialog.SwfEdit("swfname:=upToTxt")
	Set objEscrowTableDialogOK		= objEscrowTableDialog.SwfButton("swfname:=okBtn")
	Set objEscrowFeedetailEdit 		= objEscrowFeedetailswindow.SwfObject("swfname:=btnIconEdit")
	Set objData 					= FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)

    GUI_Object_WaitTillExistX objSetupContainer.SwfObject("swfname:=listView"),60
	GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strTableNameActual,"Table Name"
	BIZ_Settings_ClickEdit ()
	
	Wait g_TinyWaitSmall 'Explicit Wait used to handle Sync issues
	GUI_List_SelectItem objEscrowFeedetailswindow.SwfObject("swfname:=gridViewTable"),CStr(FormatNumber(FRM_DS_GetValue(objData, "Base"),2)),"Base"
	strRangeUPTO = CStr(formatNumber(FRM_DS_GetValue(objData, "RangeUpto_1"),2))
	GUI_SwfObject_Click  objEscrowFeedetailEdit 	
	GUI_SwfEdit_Set objEscrowTableDialogUPTO, strRangeUPTO	
	GUI_SwfButton_Click objEscrowTableDialogOK
	
	'Edited Value Validation
	Wait g_TinyWaitSmall 'Explicit Wait used to handle Sync issues
	intTblNameRowindex = GUI_List_GetRowIndex (objEscrowFeedetailswindow.SwfObject("swfname:=gridViewTable"), "Up to", strRangeUPTO)
	GUI_List_ValidateCellData objEscrowFeedetailswindow.SwfObject("swfname:=gridViewTable"), intTblNameRowindex, "Up to", strRangeUPTO
	GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfObject("swfname:=okBtn")
	
	Wait g_TinyWaitSmall 'Explicit Wait used to handle Sync issues
	GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strTableNameActual,"Table Name"
	BIZ_Settings_ClickEdit ()
	strTableNameEdit = FRM_DS_GetValue(objData, "Edit_TableName")
	GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt","index:=0"),strTableNameEdit
	GUI_SwfButton_Click objEscrowFeedetailsWindow.SwfEdit("swfname:=okBtn")
	
	'Edit Record Validation
    Wait g_TinyWaitSmall 'Explicit Wait used to handle Sync issues 	
    intTblNameRowindex = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Table Name",Trim(strTableNameEdit)) 
    GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intTblNameRowindex, "Table Name", strTableNameEdit
   
	Set objSetupContainer          = Nothing
	Set objEscrowFeedetailswindow  = Nothing
	Set objEscrowTableDialog       = Nothing
	Set objEscrowTableDialogUPTO   = Nothing
	Set objEscrowTableDialogOK	   = Nothing
	Set objEscrowFeedetailEdit 	   = Nothing
	Set objData                    = Nothing
	
	BIZ_Settings_TablesandFees_EditEscrowRecord = strTableNameEdit
End Function



'This function is used for Creation of FHA County Loan Limits
'@code
'   BIZ_Settings_TablesandFees_CreateFHACountyLoanLimits(strRowID)
'@endcode
'@param strRowID is RowID in excel to read data from Excel

Function BIZ_Settings_TablesandFees_CreateFHACountyLoanLimits(strRowID)
	FRM_Logger_ReportInfoEvent "FHA County Loan Limits","Create FHA County Loan Limits", null	
	
	Dim objSettings,objEnforceLoanLimit,objCountyEdit,objCountySearch,objCountyLimitDialog,objData,objIconBtnSave
	Dim strCountyName,strLimitfor1Unit,strLimitfor2Unit,strLimitfor3Unit,strLimitfor4Unit

	Set objSettings 			= 	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEnforceLoanLimit 	= 	objSettings.SwfCheckBox("swfname:=chbEnforceSetting")
	Set objCountyLimitDialog 	= 	objSettings.SwfWindow("swfname:=CountyLimitEditDialog")
	Set objIconBtnSave          =   objSettings.SwfObject("swfname:=stdIconBtnSave")
	Set objData 				= 	FRM_DS_GetTestData("Settings_TablesFees", "FHACountyLimits", strRowID)
	strCountyName				=	FRM_DS_GetValue(objData, "CountyName")
	strLimitfor1Unit			=	FRM_DS_GetValue(objData, "Limitfor1Unit")
	strLimitfor2Unit			=	FRM_DS_GetValue(objData, "Limitfor2Unit")
	strLimitfor3Unit			=	FRM_DS_GetValue(objData, "Limitfor3Unit")
	strLimitfor4Unit			=	FRM_DS_GetValue(objData, "Limitfor4Unit")
	strLoanLimitCheck			=	FRM_DS_GetValue(objData, "LoanLimitCheck")

	Select case strLoanLimitCheck
		case "ON"
			If (GUI_Object_GetPropertyValue(objEnforceLoanLimit,"Checked")) Then
				FRM_Logger_ReportInfoEvent "Enforce Loan Limits","Enforce Loan Limits Already Set ON", null
			Else	
				GUI_SwfCheckbox_Set objEnforceLoanLimit, "ON"
				GUI_SwfObject_Click objIconBtnSave		
			End If 
			GUI_Object_ValidateChecked objEnforceLoanLimit, "True","Enforce Loan Limits Checked"
		case "OFF"
			If (GUI_Object_GetPropertyValue(objEnforceLoanLimit,"Checked")) Then			
				GUI_SwfCheckbox_Set objEnforceLoanLimit, "OFF"
				GUI_SwfObject_Click objIconBtnSave				
			Else	
				FRM_Logger_ReportInfoEvent "Enforce Loan Limits","Enforce Loan Limits  Set OFF", null			
			End If 
			GUI_Object_ValidateChecked objEnforceLoanLimit, "False","Enforce Loan Limits Checked OFF"
		
		case Else
			 FRM_Logger_ReportInfoEvent "Enforce Loan Limits Check Box","Enter Valid Option ON OFF", null
	End Select
	
	
	If UTIL_String_IsNotEmpty(strCountyName) Then
		GUI_SwfEdit_Set  objSettings.SwfEdit("swfname:=txtFindCounty"),strCountyName		
	End If
	GUI_SwfButton_Click objSettings.SwfButton("swfname:=btnSearch")
	
	Wait g_TinyWaitMedium 'Explicit Wait Added Due Sync Issue
	GUI_List_SelectItem objSettings.SwfObject("swfname:=lsvCountyLimit"), strCountyName, "County Name"
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnEdit")

	If UTIL_String_IsNotEmpty(strLimitfor1Unit) Then
		GUI_SwfEdit_Set objCountyLimitDialog.SwfEdit("swfname:=txtLimit1"), strLimitfor1Unit		
	End If

	If UTIL_String_IsNotEmpty(strLimitfor2Unit) Then
		GUI_SwfEdit_Set objCountyLimitDialog.SwfEdit("swfname:=txtLimit2"), strLimitfor2Unit		
	End If

	If UTIL_String_IsNotEmpty(strLimitfor3Unit) Then
		GUI_SwfEdit_Set objCountyLimitDialog.SwfEdit("swfname:=txtLimit3"), strLimitfor3Unit		
	End If

	If UTIL_String_IsNotEmpty(strLimitfor4Unit) Then
		GUI_SwfEdit_Set objCountyLimitDialog.SwfEdit("swfname:=txtLimit4"), strLimitfor4Unit		
	End If
	GUI_SwfButton_Click objCountyLimitDialog.SwfButton("swfname:=btnSave")


	Set objSettings					=	Nothing
	Set objEnforceLoanLimit			=	Nothing
	Set objCountyLimitDialog		=	Nothing
	Set objData						=	Nothing
	Set objIconBtnSave				=	Nothing
End Function



'This function is used to Verify MI Scenario Data
'@code
'    BIZ_TablesAndFees_Verify_MIScenarioData(strScenario,strRowID)
'@endcode
'@param strRowID - row id for data
'@param strScenario - MI Scenario Name

Function BIZ_TablesAndFees_Verify_MIScenarioData(strScenario,strRowID)
	
	FRM_Logger_ReportInfoEvent "MI Scenario Data","Verify MI Scenario Data", null	
	Dim objData,objSettings,objMainView
	
	Set objData 	= 	FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	Set objSettings = 	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objMainView =	objSettings.SwfObject("swfname:=listViewMI")
	intRowNum 		=	GUI_List_GetRowIndex (objSettings.SwfObject("swfname:=listViewMI"), "Scenario", strScenario)
	
	FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "Scenario")) ,strScenario,"Value ", "MIScenarioName"
	If Not ((UTIL_String_IsNotEmpty("strMITabType") and  FRM_DS_GetValue(objData, "strMITabType")="Other")) Then
		FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "1st Premium %")) ,FormatNumber(FRM_DS_GetValue(objData, "Premium"),3),"Value ", "Premium"		
	End If
	
	FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "1st Monthly MI %")),FormatNumber(FRM_DS_GetValue(objData, "FirstMonthly"),3),"Value ", "First Monthly"
	FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "1st MI Months")),Trim(FRM_DS_GetValue(objData, "FirstMonth")),"Value ", "First Month"
	FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "2nd Monthly MI %")),FormatNumber(FRM_DS_GetValue(objData, "SecondMonthly"),3),"Value ", "Second Monthly"
	FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "2nd MI Months")),Trim(FRM_DS_GetValue(objData, "SecondMonth")),"Value ", "Second Month"
	FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRowNum, GUI_List_GetColumnIndex(objMainView, "Cutoff %")),FormatNumber(FRM_DS_GetValue(objData, "Cutoff"),3),"Value ", "Cutoff"
	
	Set objData		=	Nothing 
	Set objSettings	=	Nothing 
	Set objMainView	=	Nothing 

End Function 



'This function is used to Verify MI Values of Amortization Schedule
'@code
'    BIZ_Settings_TablesandFees_AmortizationSchedule_VerifyMIValues(strRowID)
'@endcode

Function BIZ_Settings_TablesandFees_AmortizationSchedule_VerifyMIValues(strRowID)
    
    FRM_Logger_ReportInfoEvent "MI Values of Amortization Schedule","Verify MI Values of Amortization Schedule ", null
	Dim objAmortSchDialog,objAmortSchDialogClose,objListView
			
	Set objAmortSchDialog      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog")	
	Set objAmortSchDialogClose = objAmortSchDialog.SwfButton("swfname:=okBtn")
	Set objListView            = objAmortSchDialog.SwfObject("swfname:=amortListview")
	Set objData 			   = FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	intMonth 				   = FRM_DS_GetValue(objData, "FirstMonth")
	intMonth1 				   = intMonth + FRM_DS_GetValue(objData, "SecondMonth")
	intMonth1Int			   = FRM_DS_GetValue(objData, "Month1Int")
	intMonth2Int			   = FRM_DS_GetValue(objData, "Month2Int")
	
	intColNo = GUI_List_GetColumnIndex(objListView,"MI")
	intRowCont = GUI_List_GetNumberofRows(objListView)
	For i = 1 To intRowCont
		If i <= intMonth Then
			If UTIL_String_IsNotEmpty(GUI_List_GetCellData(objListView, i, intColNo)) Then
				GUI_List_ValidateCellData objListView,i,intColNo,intMonth1Int 
			End If
		ElseIf i > intMonth and i <= (intMonth1+2) Then
			If UTIL_String_IsNotEmpty(GUI_List_GetCellData(objListView, i, intColNo)) Then
				GUI_List_ValidateCellData objListView,i,intColNo,intMonth2Int
			End If
		ElseIf i > (intMonth1 + 3) Then
			Exit for
		End If
	Next
	
	GUI_SwfButton_Click objAmortSchDialogClose
	
	Set objAmortSchDialog      = Nothing
	Set objAmortSchDialogClose = Nothing
	Set objListView            = Nothing

End Function



'This function is used to Set MIP Funding Guarantee Value
'@code
'    BIZ_TablesAndFees_SetMIPFundingGuaranteeValue(strRowID)
'@endcode
'@ Param strRowID- Points to Row Data in Excel

Function BIZ_TablesAndFees_SetMIPFundingGuaranteeValue(strRowID)
   
   Dim objData,intLoanAmtTxt,intMIFFValue
   
   Set objData = FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
   
   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Premium")) Then    
        GUI_WebEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfEdit("swfname:=rateFundingTxt"), FRM_DS_GetValue(objData, "Premium")
   End If
   
   util_win_sendkey "{TAB}"
   Wait  g_TinyWaitMedium  'Explicit Wait added Due to sync
   
   intLoanAmtTxt=CLng(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfEdit("swfname:=baseLoanAmtTxt"),"text"))
   intMIFFValue=Clng(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfEdit("swfname:=fundingFeeTxt"),"text"))
   intLoanAmtTxt=(intLoanAmtTxt/100) * Clng(FRM_DS_GetValue(objData, "Premium"))
   FRM_VerifyEqual formatNumber(intLoanAmtTxt,3),formatnumber(intMIFFValue,3),"MI/FF Fee","MI/FF Fee"
 
   Set objData = Nothing
   
End Function



'This function is to Create new LO Comp Plan
'@code
'    BIZ_Settings_TablesAndFees_CreateLOCompPlanDetails(strRowID)
'@endcode
'@param strRowID - RowId for Data

Function BIZ_Settings_TablesAndFees_CreateLOCompPlanDetails(strRowID)
	FRM_Logger_ReportInfoEvent "BIZ_Settings_TablesAndFees_CreateLOCompPlanDetails","Create LO Comp Plan using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Set objEncompassMain 		= 	SwfWindow("swfname:=MainForm")
	Set objEncompassSettings 	= 	objEncompassMain.SwfWindow("swfname:=SetUpContainer")

	GUI_SwfObject_Click objEncompassSettings.SwfObject("swfname:=stdIconBtnNew")
	strLOCompPlanName = BIZ_Settings_TablesAndFees_SetLOCompPlanDetails(strRowID)
		
	Set objEncompassMain 		= 	Nothing 
	Set objEncompassSettings 	= 	Nothing
	
	BIZ_Settings_TablesAndFees_CreateLOCompPlanDetails = strLOCompPlanName
End Function



'This function is to fill the compensation plan details 
'@code
'    BIZ_Settings_TablesAndFees_SetLOCompPlanDetails(strRowID)
'@endcode
'@param strRowID - RowId for Data

Function BIZ_Settings_TablesAndFees_SetLOCompPlanDetails(strRowID)
	
	FRM_Logger_ReportInfoEvent "BIZ_Settings_TablesAndFees_SetLOCompPlanDetails","Setting LO Comp Plan Details using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings, objListView, objCompensationDetail, strName	
	
	Set objSettings 			= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView 			= objSettings.SwfObject("swfname:=listView")
	Set objCompensationDetail 	= objSettings.SwfWindow("swfname:=LOCompGroupDialog")
	Set objData     			= FRM_DS_GetTestData("Settings_TablesFees", "CompensationPlan", strRowID)
	strName 					= FRM_DS_GetValue(objData, "UserName")
	strDescription 				= FRM_DS_GetValue(objData, "Description")
	strLoanOfficerOrBroker 		= FRM_DS_GetValue(objData, "LoanOfficerOrBroker")
	strActiveOnOrOff			= FRM_DS_GetValue(objData, "Active")		
	
	If Not UTIL_String_IsEmpty(strName) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtName"), strName
	End If
	
	If Not UTIL_String_IsEmpty(strDescription) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtDescription"), strDescription
	End If
	
	If Not UTIL_String_IsEmpty(strLoanOfficerOrBroker) Then
		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbType"), strLoanOfficerOrBroker
	End If
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Amount")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtAmount"), FRM_DS_GetValue(objData, "Amount")
	End IF
		
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "AmountOf")) Then
		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbAmount"), FRM_DS_GetValue(objData, "AmountOf")
	End IF
		
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Amount2")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtAmount2"), FRM_DS_GetValue(objData, "Amount2")
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Minimum")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtMinAmt"), FRM_DS_GetValue(objData, "Minimum")
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Maximum")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtMaxAmt"), FRM_DS_GetValue(objData, "Maximum")
	End IF
	
	If Not UTIL_String_IsEmpty(strActiveOnOrOff) Then
		GUI_SwfCheckbox_Set objCompensationDetail.SwfCheckBox("swfname:=chkStatus"), strActiveOnOrOff
		GUI_DialogObject_Encompass_OKX objCompensationDetail.Dialog("text:=Encompass"), 60, "For audit purposes, compensation plans cannot be modified once they are activated and assigned to an originator. Be sure to make any needed changes here before assigning the plan to an originator."
		
	End If
	
	GUI_SwfButton_Click objCompensationDetail.SwfButton("swfname:=btnSave")
		
	Set objData		          = Nothing
	Set objSettings	          = Nothing
	Set objListView	          = Nothing
	Set objCompensationDetail = Nothing
	
	BIZ_Settings_TablesAndFees_SetLOCompPlanDetails = strName
End Function



'This function is to Verify the LO Compensation Plan created
'@code
'    BIZ_Settings_TablesAndFees_ValidateLOCompPlanDetails(strLOCompPlanName)
'@endcode
'@param strLOCompPlanName - Plan Name should be passed

Function BIZ_Settings_TablesAndFees_ValidateLOCompPlanDetails(strLOCompPlanName)
	FRM_Logger_ReportInfoEvent "Validate LO Compensation Plan Created or not", "LO Compensation Plan Validation using '"&strLOCompPlanName&"' name", null
	
	Dim objEncompassMain, objEncompassSettings
	
	Set objEncompassMain 		= 	SwfWindow("swfname:=MainForm")
	Set objEncompassSettings 	= 	objEncompassMain.SwfWindow("swfname:=SetUpContainer")
		
	If GUI_List_TextExists(objEncompassSettings.SwfObject("swfname:=listView"), "Name", strLOCompPlanName) Then
		FRM_Logger_ReportPassEvent "Validate LO Compensation Plan Created or not", "LO Compensation Plan Created created with '"&strLOCompPlanName&"' name", null
	Else
		FRM_Logger_ReportFailEvent "Validate LO Compensation Plan Created or not", "LO Compensation Plan not created", null
	End If

	Set objEncompassMain 		= 	Nothing
	Set objEncompassSettings 	= 	Nothing
		
End Function



'This function is to Delete the LO Compensation Plan
'@code
'    BIZ_Settings_TablesAndFees_DeleteLOCompPlan(strLOCompPlanName)
'@endcode
'@param strLOCompPlanName - Plan Name should be passed

Function BIZ_Settings_TablesAndFees_DeleteLOCompPlan (strLOCompPlanName)
	
	FRM_Logger_ReportInfoEvent "BIZ_Settings_TablesAndFees_DeleteLOCompPlan","Delete LO Comp Plan using LOCompPlanName: '"&strLOCompPlanName&"'",null
	
	Dim objEncompassSettings, objLOCompensationPlans
	Set objEncompassSettings 	= 	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objLOCompensationPlans	=	objEncompassSettings.swfobject("swfname:=listView")
     Wait  g_ShortWaitLarge  'Explicit wait added due to synce
	If GUI_List_TextExists(objLOCompensationPlans, "Name", strLOCompPlanName) Then
		FRM_Logger_ReportPassEvent "LO Compensation Plan Selection", "LO Compensation Plan Selected To Delete Is: '"&strLOCompPlanName&"' name", null
		intRow = GUI_List_GetRowIndex (objLOCompensationPlans, "Name", strLOCompPlanName)
		
		GUI_List_ClickRow objLOCompensationPlans, objLOCompensationPlans.SwfScrollBar("swfname:=vPanelScrollBar"), "Name", strLOCompPlanName, True, False, False, "Single"
		
		Wait  g_TinyWaitSmall  'Explicit wait added due to synce    
		GUI_SwfObject_Click objEncompassSettings.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Yes "The selected LO Comp Plans will be deleted permanently. Do you want to continue?"
	Else
		FRM_Logger_ReportFailEvent "LO Compensation Plan Selection", "LO Compensation Plan is not selected To Delete", null
	End If
	
	Set objEncompassSettings 	= 	Nothing
	Set objLOCompensationPlans	=	Nothing
	
End Function



'This function is used for Loan Creation till 1003Page1
'@code
'    BIZ_Settings_TableAndFees_LoanCreation_1003Page1(strRowID)
'@endcode
'@param strRowID - is RowID in excel to read data for loan creation 

Function BIZ_Settings_TableAndFees_LoanCreation_1003Page1(strRowID)

	FRM_Logger_ReportInfoEvent "Loan Creation:" ,"Loan Creation for'"&strRowID&"'", Null
	BIZ_Loan_AddNewBlankLoanUnderSelectedLoanFolder "Super Administrator - Default View","My Pipeline"  							
	BIZ_BorrowerSummaryOrigination_SetHeadInfo strRowID
	BIZ_BorrowerSummaryOrigination_SetBorrower strRowID
	BIZ_BorrowerSummaryOrigination_SetSSNVerification_Borrower strRowID
	BIZ_BorrowerSummaryOrigination_SetCreditInformation strRowID
	BIZ_BorrowerSummaryOrigination_SetProperty strRowID
	BIZ_BorrowerSummaryOrigination_SetTransactionDetails strRowID
	BIZ_1003Page1_SetTitleDetails strRowID
	BIZ_1003Page1_SetData(strRowID)
	
End Function




'This function is used for Verify FHA County Loan Limits
'@code
'    BIZ_Settings_TablesandFees_VerifyFHACountyLoanLimits(strRowID)
'@endcode
'@param strRowID is RowID in excel to read data from Excel

Function BIZ_Settings_TablesandFees_VerifyFHACountyLoanLimits(strRowID)

	FRM_Logger_ReportInfoEvent "FHA County Loan Limits for Units","Verify FHA County Loan Limits for Units", null
	
	Dim objSettings,objData,strCountyName,strLimitfor1Unit,strLimitfor2Unit,strLimitfor3Unit,strLimitfor4Unit,intRowNum,intColNum

	Set objSettings 	= 	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objData 		= 	FRM_DS_GetTestData("Settings_TablesFees", "FHACountyLimits", strRowID)
	
	Wait g_TinyWaitMedium   'Explicit Wait Added Due Sync Issue
	strCountyName		=	FRM_DS_GetValue(objData, "CountyName")
	strLimitfor1Unit	=	FRM_DS_GetValue(objData, "Limitfor1Unit")
	strLimitfor2Unit	=	FRM_DS_GetValue(objData, "Limitfor2Unit")
	strLimitfor3Unit	=	FRM_DS_GetValue(objData, "Limitfor3Unit")
	strLimitfor4Unit	=	FRM_DS_GetValue(objData, "Limitfor4Unit")

    intColNum 			=	GUI_List_GetColumnIndex(objSettings.SwfObject("swfname:=lsvCountyLimit"),"County Name")
	intRowNum 			= 	GUI_List_GetRowIndex(objSettings.SwfObject("swfname:=lsvCountyLimit"), intColNum, strCountyName)

	If UTIL_String_IsNotEmpty(strLimitfor1Unit) Then
		GUI_List_ValidateCellData objSettings.SwfObject("swfname:=lsvCountyLimit"), intRowNum,  "Limit for 1 Unit",FormatNumber(strLimitfor1Unit,0)		
	End If

	If UTIL_String_IsNotEmpty(strLimitfor2Unit) Then
		GUI_List_ValidateCellData objSettings.SwfObject("swfname:=lsvCountyLimit"), intRowNum, "Limit for 2 Units",FormatNumber(strLimitfor2Unit,0)		
	End If

	If UTIL_String_IsNotEmpty(strLimitfor3Unit) Then
		GUI_List_ValidateCellData objSettings.SwfObject("swfname:=lsvCountyLimit"), intRowNum, "Limit for 3 Units",FormatNumber(strLimitfor3Unit,0) 		
	End If

	If UTIL_String_IsNotEmpty(strLimitfor4Unit) Then
		GUI_List_ValidateCellData objSettings.SwfObject("swfname:=lsvCountyLimit"), intRowNum, "Limit for 4 Units", FormatNumber(strLimitfor4Unit,0) 		
	End If

	Set objSettings			=	Nothing
	Set objData				=	Nothing

End Function



'This function is used for Verify Enforce County Loan Limits for Units
'@code
'    BIZ_Settings_TablesandFees_VerifyCountyLimit(strRowID,strRowID2,strColName)
'@endcode
'@Param strRowID - is RowID in excel to read data from Borrower Summary origination excel
'@Param strRowID2 - is RowID in excel to read data from Tables and Fees Excel
'@Param strColName - is Name of colunm in excel 

Function BIZ_Settings_TablesandFees_VerifyCountyLimit(strRowID,strRowID2,strColName)

	FRM_Logger_ReportInfoEvent "Enforce County Loan Limit","Enforce County Loan  "&strColName, null
	
	Dim	objParentObject,objLoanAmount,objData,objData2,strLoanAmount,strCountyName,strLimitfor1Unit,strPurchasePrice,strDownPaymentPercent,strAppLoanAmount
	Dim  strPopupMsg,objStaticDialogMsg
	Set objParentObject		=	SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objStaticDialogMsg	=	SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Static("text:=Loan amt.*")
	Set objLoanAmount		=	objParentObject.WebEdit("html id:=l_1109")
	Set objData 			= 	FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
	Set objData2 			= 	FRM_DS_GetTestData("Settings_TablesFees", "FHACountyLimits", strRowID2)
	
	strCountyName			=	FRM_DS_GetValue(objData2, "CountyName")
	strLimitfor1Unit		=	FRM_DS_GetValue(objData2, strColName)
	strPopupMsg				=	FRM_DS_GetValue(objData2, "PopupMsg")
	strPurchasePrice		=	FRM_DS_GetValue(objData, "PurchasePrice")
	strDownPaymentPercent	=	FRM_DS_GetValue(objData, "DownPaymentPercent")
	strLoanAmount			=	FRM_DS_GetValue(objData, "1109_LoanAmount")
	
	IF ucase(strLoanAmount)= "NULL" then
		strLoanAmount = ""
	Else
		strLoanAmount = strPurchasePrice-(strPurchasePrice*strDownPaymentPercent)/100
		strLoanAmount = FormatNumber(strLoanAmount,2)
	End if 
	
	FRM_Logger_ReportInfoEvent "County Loan Purchase Price ","Purchase Price "&strPurchasePrice, null
	FRM_Logger_ReportInfoEvent "County Loan Amount ","Loan Amount "&strLoanAmount, null
	FRM_Logger_ReportInfoEvent "County Name ","County Name "&strCountyName, null
	FRM_Logger_ReportInfoEvent "County "&strColName,"County Loan Limit "&strLimitfor1Unit, null
	'Verify Pop Up Message
	GUI_Dialog_VerifyStaticText objStaticDialogMsg, strPopupMsg, "Verify County Limit POP UP "
	GUI_Dialog_Encompass_Click 3, "exceeds county limit", "OK"
	
	Wait g_LongWaitLarge + g_ShortWaitLarge 'Explicit wait added due to sync, Here Wait increased
	strAppLoanAmount = GUI_Object_GetPropertyValue (objLoanAmount,"value")
	FRM_VerifyEqual strAppLoanAmount,strLoanAmount,"Loan Amount on Hold","Loan Amount Display "
	
	Set objParentObject			= 	Nothing
	Set objLoanAmount   		= 	Nothing
	Set objData					= 	Nothing
	Set objData2				= 	Nothing
	Set objStaticDialogMsg      = 	Nothing
End Function



'This function is used to Set Compensation Plan
'@code
'    BIZ_TablesAndFees_SetCompensationPlan(strRowID)
'@endcode
'@Param strRowID Points to row in excel

Function BIZ_TablesAndFees_SetCompensationPlan(strRowID)
	FRM_Logger_ReportInfoEvent "TablesAndFees Set data Compensation Plan","TablesAndFees Set Data Compensation Plan using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings, objListView, objCompensationDetail	
	Set objData = FRM_DS_GetTestData("Settings_TablesFees", "CompensationPlan", strRowID)
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=listView")
	Set objCompensationDetail = objSettings.SwfWindow("swfname:=LOCompGroupDialog")
	
	strName=FRM_DS_GetValue(objData, "Name")
	If Not UTIL_String_IsEmpty(strName) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtName"), strName
	End IF
		
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Description")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtDescription"), FRM_DS_GetValue(objData, "Description")
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "LoanOfficerOrBroker")) Then
		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbType"), FRM_DS_GetValue(objData, "LoanOfficerOrBroker")
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Minimum_TermDays")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=textMinTerm"), FRM_DS_GetValue(objData, "Minimum_TermDays")
	End IF
		
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Rounding")) Then
		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbRounding"), FRM_DS_GetValue(objData, "Rounding")
	End IF
		
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Amount")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtAmount"), FRM_DS_GetValue(objData, "Amount")
	End IF
		
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "AmountOf")) Then
		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbAmount"), FRM_DS_GetValue(objData, "AmountOf")
	End IF
		
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Amount2")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtAmount2"), FRM_DS_GetValue(objData, "Amount2")
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Minimum")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtMinAmt"), FRM_DS_GetValue(objData, "Minimum")
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Maximum")) Then
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtMaxAmt"), FRM_DS_GetValue(objData, "Maximum")
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Status_Active")) Then
		GUI_SwfCheckbox_Set objCompensationDetail.SwfCheckBox("swfname:=chkStatus"), FRM_DS_GetValue(objData, "Status_Active")
		If objCompensationDetail.Dialog("text:=Encompass").Exist(20) Then
			GUI_Dialog_Encompass_OK "For audit purposes, compensation plans cannot be modified once they are activated and assigned to an originator. Be sure to make any needed changes here before assigning the plan to an originator."
		End If
	End If
		
	GUI_SwfButton_Click objCompensationDetail.SwfButton("swfname:=btnSave")
	
	Set objData		          = Nothing
	Set objSettings	          = Nothing
	Set objListView	          = Nothing
	Set objCompensationDetail = Nothing
  
    BIZ_TablesAndFees_SetCompensationPlan = strName
End Function



'This function is used to Create Compensation Plan
'@code
'    BIZ_TablesAndFees_CreateCompensationPlan(strRowID)
'@endcode
'@Param strRowID Points to row in excel

Function BIZ_TablesAndFees_CreateCompensationPlan(strRowID)
	
	FRM_Logger_ReportInfoEvent "TablesAndFees_Create Compensation Plan","TablesAndFees Create Compensation Plan using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	BIZ_Settings_ClickAdd()
	strName = BIZ_TablesAndFees_SetCompensationPlan(strRowID)
    BIZ_TablesAndFees_CreateCompensationPlan=strName
    
End Function



'This function is used to Edit Compensation Plan
'@code
'    BIZ_TablesAndFees_EditCompensationPlan(strName,strRowID)
'@endcode
'@Param strName Name of CompensationPlan
'@Param strRowID Points to row in excel

Function BIZ_TablesAndFees_EditCompensationPlan(strName,strRowID)
	
	FRM_Logger_ReportInfoEvent "TablesAndFees Edit Compensation Plan","TablesAndFees Edit Compensation Plan ", null
	
	Dim objSettings,objListView
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=listView")
	
	GUI_List_ClickRow objListView, Null, "Name", strName, True, false, false, "Single"
	BIZ_Settings_ClickEdit()
	strEditedName = BIZ_TablesAndFees_SetCompensationPlan(strRowID)
	
	Set objSettings	          = Nothing
	Set objListView	          = Nothing
	
	BIZ_TablesAndFees_EditCompensationPlan = strEditedName
    
End Function



'This function is used to Duplicate Compensation Plan
'@code
'    BIZ_TablesAndFees_DuplicateCompensationPlan(strName,strRowID)
'@endcode
'@Param strName Name of CompensationPlan
'@Param strRowID Points to row in excel

Function BIZ_TablesAndFees_DuplicateCompensationPlan(strName,strRowID)
	
	FRM_Logger_ReportInfoEvent "TablesAndFees_Duplicate Compensation Plan","TablesAndFees Create Duplicate Compensation Plan ", null
	
	Dim objSettings,objListView
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=listView")
	
	GUI_List_ClickRow objListView, Null, "Name", strName, True, false, false, "Single"
	BIZ_Settings_ClickDuplicate()
	strDuplicateName = BIZ_TablesAndFees_SetCompensationPlan(strRowID)
	
	Set objSettings	          = Nothing
	Set objListView	          = Nothing
	
    BIZ_TablesAndFees_DuplicateCompensationPlan=strDuplicateName
    
End Function



'This function is used to Delete Compensation Plan
'@code
'    BIZ_TablesAndFees_DeleteCompensationPlan(strName)
'@endcode
'@Param strName Name of CompensationPlan

Function BIZ_TablesAndFees_DeleteCompensationPlan(strName)
	
	FRM_Logger_ReportInfoEvent "TablesAndFees Delete Compensation Plan","TablesAndFees Delete Compensation Plan and Verify Deleted" &strName, null
	Dim  objSettings,objListView
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=listView")
	
	FRM_VerifyTrue GUI_List_ClickRow (objListView, Null, "Name", strName, True, false, false, "Single"), " Compensation Plan ", "Compensation Plan Available to Delete is "&strName
	BIZ_Settings_ClickDelete()
	BIZ_Settings_Dialog_YES_Click()
	FRM_VerifyFalse GUI_List_ClickRow (objListView, Null, "Name", strName, True, false, false, "Single"), " Compensation Plan ", "Compensation Plan  Deleted is "&strName
	
	Set objSettings	          = Nothing
	Set objListView	          = Nothing
	  
End Function



'This function is used to Verify Compensation Plan Details
'@code
'    BIZ_TablesAndFees_ValidateCompensationPlanDetails(strName,strRowID)
'@endcode
'@Param strName Name of CompensationPlan
'@Param strRowID Points Row in Excel
 'Note :Broker and Loan Officers are shown as Tick mark so we are not validating

Function BIZ_TablesAndFees_ValidateCompensationPlanDetails(strName,strRowID)
    
	FRM_Logger_ReportInfoEvent "TablesAndFees_Compensation Plan Details","Verify Compensation Plan Details Of "&strName , null
	Dim objSettings,objListView,objData,intRowNum
	
    Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView = objSettings.SwfObject("swfname:=listView")
	Set objData 	= FRM_DS_GetTestData("Settings_TablesFees", "CompensationPlan", strRowID)
	 
	intRowNum		= 	GUI_List_GetRowIndex (objListView, "Name",strName)

	If  UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Status_Active")) Then
	   strPlanStatus="No"
	Else
	    strPlanStatus="Yes"
	End IF
	 
	FRM_VerifyEqual GUI_List_GetCellData(objListView, intRowNum, GUI_List_GetColumnIndex(objListView, "Name")), strName, " Value", "Compensation Plan Name"
	FRM_VerifyEqual GUI_List_GetCellData(objListView, intRowNum, GUI_List_GetColumnIndex(objListView, "Description")), FRM_DS_GetValue(objData, "Description"), " Value", "Compensation Plan Description"
	FRM_VerifyEqual GUI_List_GetCellData(objListView, intRowNum, GUI_List_GetColumnIndex(objListView, "Active")), strPlanStatus, " Value", "Compensation Plan Status"
	
	Set objSettings = Nothing
	Set objListView = Nothing
	Set objData 	= Nothing
	
End Function 



'This function is used for Delete  HelocTable and its record
'@code
'    	BIZ_Settings_TablesandFeees_DeleteHelocTable(strHeloctableName,strPopUpText)
'@endcode
'@Param strHeloctableName  Heloctable Name
'@Param strPopUpText POP UP Text

Function BIZ_Settings_TablesandFeees_DeleteHelocTable(strHeloctableName,strPopUpText)
	
	FRM_Logger_ReportInfoEvent "Verify rename of newly created  HELOC Table", "Verification and Validation of rename", Null
	
	Dim objSettings 
	Set objSettings			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
		
    GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewHeloc"), null, "Table Name", strHeloctableName, True, False, False, "Single"
   	BIZ_Settings_ClickDelete()

    GUI_Dialog_Encompass_YesX 2, strPopUpText

	Set objSettings			=	Nothing
	
End Function



'This function is used for Delete  HelocTable and its record
'@code
'    	BIZ_Settings_TablesAndFeees_DeleteHelocTableRecord(strHeloctableName,strRowID,strPopUpText)
'@endcode
'@Param strRowID  row id testdata in excel file
'@Param strHeloctableName  Heloctable Name
'@Param strPopUpText POP UP Text

Function BIZ_Settings_TablesAndFeees_DeleteHelocTableRecord(strHeloctableName,strRowID,strPopUpText)
	
	FRM_Logger_ReportInfoEvent "TablesAndFeees  HELOC Table", "Verify TablesAndFeees  HELOC Table Record Delete", Null
	
	Dim objSettings, objHelocEdit, objData,objYearListView
	Set objSettings			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHelocEdit		=	objSettings.SwfWindow("swfname:=HelocTableContainer")
	Set objYearListView 	=	objHelocEdit.swfObject("swfname:=gridViewYearList")
	Set objData				=	FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)
		
	GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewHeloc"), null, "Table Name", strHeloctableName, True, False, False, "Single"
   	BIZ_Settings_ClickEdit()	
   	
   	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Year")) Then
  		GUI_List_ClickRow objYearListView, null, "Year", cstr(FRM_DS_GetValue(objData, "Year")), True, False, False, "Single" 	
	End If
   	
   	GUI_SwfButton_Click  objHelocEdit.SwfButton("swfname:=deleteBtn")
   	'GUI_Dialog_Encompass_YesX 2, strPopUpText
	GUI_DialogObject_Encompass_YesX objHelocEdit.Dialog("index:=0"), 20, strPopUpText
   	Wait g_TinyWaitLarge 'Explicit Wait Added due to sync
    boolValue=GUI_List_ClickRow (objYearListView, null, "Year", cstr(FRM_DS_GetValue(objData, "Year")), True, False, False, "Single") 
    FRM_VerifyFalse  boolValue, "Heloc Table Record", "Heloc Table Record Deleted for Year '"&FRM_DS_GetValue(objData, "Year")	
  
    GUI_SwfButton_Click objHelocEdit.SwfButton("swfname:=okbtn")
   	
    
	Set objSettings			=	Nothing
	Set objHelocEdit		=	Nothing
	Set objYearListView 	=	Nothing
	Set objData				=	Nothing
		

End Function



'This function is used for Verify HelocTable after delete and create 
'@code
'    	BIZ_Settings_TablesAndFeees_VerifyHelocTableNameCreatedOrDelete(strHeloctableName,boolStatus)
'@endcode
'@Param strRowID  row id testdata in excel file
'@Param boolStatus  True or False

Function BIZ_Settings_TablesAndFeees_VerifyHelocTableNameCreatedOrDelete(strHeloctableName,boolStatus)

    FRM_Logger_ReportInfoEvent "TablesAndFeees  HELOC Table", "Verify TablesAndFeees  HELOC Table Created or Deleted ", Null
	Dim objSettings
	Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	
	Wait g_TinyWaitLarge  'Explicit wait added Due to Sync
	boolValue=GUI_List_ClickRow (objSettings.SwfObject("swfname:=listViewHeloc"), null, "Table Name", strHeloctableName, True, False, False, "Single")
    
    If boolStatus Then
		FRM_VerifyTrue  boolValue, "Heloc Table Available in Grid", "Available Heloc Table Name '"&strHeloctableName  
    Else
		FRM_VerifyFalse  boolValue, "Heloc Table Not Available in Grid", "Not Available Heloc Table Name ' "&strHeloctableName  
    End If
      
    Set objSettings=Nothing

End Function 
	

    
'This function is used for  HelocTable creation in Table and Fees
'@code
'    	Settings_TablesandFeees_HelocTableCreation(strRowID)
'@endcode
'@Param strRowID  row id testdata in excel file

Function BIZ_Settings_TablesAndFeees_HelocTableCreation(strRowID)

	FRM_Logger_ReportInfoEvent "TablesAndFeees Heloc Table", "TablesAndFeees Heloc Table Creation", Null
	
	Dim strHelocTableName, objSettings, objHelocEdit,objData 
	Set objSettings		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHelocEdit	=	objSettings.SwfWindow("swfname:=HelocTableContainer")
	Set objData			=	FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)

	
	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconTableNew")
	
	strHelocTableName=FRM_DS_GetValue(objData, "TableName")
	
	If UTIL_String_IsNotEmpty(strHelocTableName) Then	
    	GUI_SwfEdit_Set  objHelocEdit.SwfEdit("swfname:=textBoxName"), strHelocTableName 
	End If
	
	GUI_SwfButton_Click  objHelocEdit.SwfButton("swfname:=addBtn")
	
	BIZ_Settings_TablesandFeees_SetHelocTable strRowID
	
	GUI_SwfButton_Click objHelocEdit.SwfButton("swfname:=okbtn")

    Set objSettings			 = Nothing
	Set objHelocEdit         = Nothing
	Set objData				 = Nothing

	BIZ_Settings_TablesAndFeees_HelocTableCreation  = strHelocTableName
End Function



'This function is Set Data to HelocTable 
'@code
'    	BIZ_Settings_TablesandFeees_SetHelocTable(strRowID))
'@endcode
'@Param strRowID  row id testdata in excel file

Function BIZ_Settings_TablesandFeees_SetHelocTable(strRowID)

	Dim strHelocTableName, intMMPvalue,  objSettings, objHelocEdit, objHelocMMP,objData 
	Set objSettings		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHelocEdit	=	objSettings.SwfWindow("swfname:=HelocTableContainer")
	Set objHelocMMP		=	objHelocEdit.SwfWindow("swfname:=MMPFormDialog")
	Set objData			=	FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)
	
	GUI_Object_WaitTillExistX objHelocMMP.SwfEdit("swfname:=textBoxYear"),60
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Year")) Then
		GUI_SwfEdit_Set objHelocMMP.SwfEdit("swfname:=textBoxYear"), FRM_DS_GetValue(objData, "Year")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Period")) Then
		GUI_SwfComboBox_Select objHelocMMP.SwfComboBox("swfname:=comboBoxPeriod"), FRM_DS_GetValue(objData, "Period")
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Index")) Then
		GUI_SwfEdit_Set objHelocMMP.SwfEdit("swfname:=textBoxIndex"),FRM_DS_GetValue(objData, "Index")	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Margin")) Then
		GUI_SwfEdit_Set objHelocMMP.SwfEdit("swfname:=textBoxMargin"),FRM_DS_GetValue(objData, "Margin")	
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "APR")) Then
		GUI_SwfEdit_Set objHelocMMP.SwfEdit("swfname:=textBoxAPR"),FRM_DS_GetValue(objData, "APR")	
	End If
	
    intMMPvalue=GUI_Object_GetPropertyValue(objHelocMMP.SwfEdit("swfname:=textBoxMMP"),"text")
	FRM_VerifyNotNull intMMPvalue,"Min. Monthly Payment validation","Minimum Monthly Payment value is "&intMMPvalue&""
	
	GUI_SwfButton_Click objHelocMMP.SwfButton("swfname:=okbtn")	
	
	Set objSettings			 = Nothing
	Set objHelocEdit         = Nothing
	Set objHelocMMP			 = Nothing
	Set objData				 = Nothing
End Function



'This function is used for Edit Existing HelocTable
'@code
'    	BIZ_Settings_TablesAndFeees_EditHelocTable(strHeloctableName,strRowID)
'@endcode
'@Param strRowID  row id testdata in excel file
'@Param strHeloctableName  Heloctable Name

Function BIZ_Settings_TablesAndFeees_EditHelocTable(strHeloctableName,strRowID)
	
	FRM_Logger_ReportInfoEvent "TablesAndFeees Heloc Table", "TablesAndFeees Edit Heloc Table ", Null
	
	Dim objSettings, objHelocEdit, objData, objHelocMMP
	Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHelocEdit=objSettings.SwfWindow("swfname:=HelocTableContainer")
	Set objHelocMMP=objHelocEdit.SwfWindow("swfname:=MMPFormDialog")
	Set objData=FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)
	
	GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewHeloc"), null, "TableName", strHeloctableName, True, False, False, "Single"
   	BIZ_Settings_ClickEdit()	  
  
    GUI_SwfButton_Click  objHelocEdit.SwfButton("swfname:=editBtn")

	BIZ_Settings_TablesandFeees_SetHelocTable strRowID
	
    GUI_SwfButton_Click objHelocEdit.SwfButton("swfname:=okbtn")
   					
	Set objSettings 		= Nothing
	Set objHelocEdit		= Nothing
	Set objData				= Nothing
    Set objHelocMMP			= Nothing
    
End Function



'This function is used for Rename Existing HelocTable Name
'@code
'    	BIZ_Settings_TablesandFeees_HelocTableRename(strHeloctableName,strRowID))
'@endcode
'@Param strRowID  row id testdata in excel file
'@Param strHeloctableName  Heloctable Name 

Function BIZ_Settings_TablesandFeees_HelocTableRename(strHeloctableName,strRowID)
	
	FRM_Logger_ReportInfoEvent "TablesAndFeees Heloc Table", "TablesAndFeees ReName Heloc Table ", Null
	
	Dim objSettings, objHelocEdit, objData,strReNameHelocTN
	Set objSettings		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHelocEdit	=	objSettings.SwfWindow("swfname:=HelocTableContainer")
	Set objData			=	FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)
	
	GUI_Object_WaitTillExistX objSettings.SwfObject("swfname:=listViewHeloc"), 30
	GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewHeloc"), null, "Table Name", strHeloctableName, True, False, False, "Single"
   	BIZ_Settings_ClickEdit()	  
    
    strReNameHelocTN=FRM_DS_GetValue(objData, "ReNamedTableName")
	
	If UTIL_String_IsNotEmpty(strReNameHelocTN) Then
    	GUI_SwfEdit_Set  objHelocEdit.SwfEdit("swfname:=textBoxName"), strReNameHelocTN
	End If
 
    GUI_SwfButton_Click objHelocEdit.SwfButton("swfname:=okbtn")					
	BIZ_Settings_TablesAndFeees_HelocTableRename=strReNameHelocTN			
	
	Set objHelocMMP			 = Nothing
	Set objSettings 		 = Nothing
	Set objHelocEdit		 = Nothing
	Set objData				 = Nothing

End Function



'This function is used for Verify HelocTable Values
'@code
'    	BIZ_Settings_TablesandFeees_Verify_HelocTableValues(strHeloctableName,strRowID)
'@endcode
'@Param strRowID  row id testdata in excel file
'@Param strHeloctableName  Heloctable Name 

Function BIZ_Settings_TablesandFeees_Verify_HelocTableValues(strHeloctableName,strRowID)
    
    FRM_Logger_ReportInfoEvent "TablesAndFeees Heloc Table", "Verify   Heloc Table Values '"& strHeloctableName, Null
    Dim objSettings,objHelocEdit,objData,objMainView,intRow,objHelocMMP
	
	Set objSettings		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHelocEdit	=	objSettings.SwfWindow("swfname:=HelocTableContainer")
	Set objHelocMMP		=	objHelocEdit.SwfWindow("swfname:=MMPFormDialog")
	Set objData			=	FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)
	Set objMainView 	=	objHelocEdit.swfObject("swfname:=gridViewYearList")
	
	GUI_Object_WaitTillExistX objSettings.SwfObject("swfname:=listViewHeloc"), 30
	GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewHeloc"), null, "Table Name", strHeloctableName, True, False, False, "Single"
   	BIZ_Settings_ClickEdit()
  
    intRow=GUI_List_GetRowIndex(objMainView, "Year", cstr(FRM_DS_GetValue(objData, "Year")))

    FRM_VerifyEqual GUI_Object_GetPropertyValue(objHelocEdit.SwfEdit("swfname:=textBoxName"),"text"), strHeloctableName, "Heloc Table Name", "Heloc Table Name"
    FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRow, GUI_List_GetColumnIndex(objMainView, "Year")), cstr(FRM_DS_GetValue(objData, "Year")), "Year", "Year"	
    FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRow, GUI_List_GetColumnIndex(objMainView, "Period Type")),FRM_DS_GetValue(objData, "Period"), "Period Type", "Period Type"
    FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRow, GUI_List_GetColumnIndex(objMainView, "Index %")), FormatNumber (FRM_DS_GetValue(objData, "Index"),3), "Index %", "Index %" 
    FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRow, GUI_List_GetColumnIndex(objMainView, "Margin %")), FormatNumber (FRM_DS_GetValue(objData, "Margin"),3), "Margin %", "Margin %"
    FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRow, GUI_List_GetColumnIndex(objMainView, "APR %")), FormatNumber (FRM_DS_GetValue(objData, "Index")+FRM_DS_GetValue(objData, "Margin"),3), "APR %", "APR %"
    GUI_SwfButton_Click objHelocEdit.SwfButton("swfname:=cancelBtn")
    
	Set objSettings		=	Nothing
	Set objHelocEdit	=	Nothing
	Set objData			=	Nothing
	Set objMainView 	=	Nothing
	
End Function
  

  
'This function is used to Set Default Plan Setting values
'@code
'    BIZ_Settings_TablesAndFees_LOCompensation_SetDefaultPlanSetting(strRowID)
'@endcode
'@param strRowID - row id for data

Function BIZ_Settings_TablesAndFees_LOCompensation_SetDefaultPlanSetting(strRowID)

	Dim objSettings,objData
	FRM_Logger_ReportInfoEvent "Settings Table and Fees LO Compensation","Set LOCompensation Plan Default Plan Settings ", Null
	
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Set objData 	= FRM_DS_GetTestData("Settings_TablesFees", "CompensationPlan", strRowID)
    
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "LoanOfficerOrBroker")) Then
    	GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cmbType"), FRM_DS_GetValue(objData, "LoanOfficerOrBroker")
    End IF
    
    If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "strTrigger")) Then
    	GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=txtTriggerField"), FRM_DS_GetValue(objData, "strTrigger")
    End IF
    
    If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Minimum_TermDays")) Then
     	GUI_SwfEdit_Set objSettings.SwfEdit("swfname:=textMinTerm"), FRM_DS_GetValue(objData, "Minimum_TermDays")
    End IF
    
    If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "chkDefaultHELOC")) Then
    	GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkDefaultHELOC"), FRM_DS_GetValue(objData, "chkDefaultHELOC")
    End IF
    
    If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "chkDefaultInvestment")) Then
    	GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkDefaultInvestment"), FRM_DS_GetValue(objData, "chkDefaultInvestment")
    End IF
    
    If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Rounding")) Then
    	GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cmbRounding"), FRM_DS_GetValue(objData, "Rounding")
    End IF
    
    If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "LenderOrBorrower")) Then
    	GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboPaidBy"), FRM_DS_GetValue(objData, "LenderOrBorrower")
    End IF
    
    GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
    
    Set objSettings = Nothing
    Set objData 	= Nothing
    
End  Function 


'This function is used to Verify MI Values of Amortization Schedule
'@code
'    BIZ_Settings_TablesandFees_AmortizationSchedule_VerifyFHAMIValues(strRowID)
'@endcode

Function BIZ_TablesandFees_AmortizationSchedule_VerifyFHAMIValues(strRowID)
    
    FRM_Logger_ReportInfoEvent "MI Values of Amortization Schedule","Verify MI Values of Amortization Schedule for Loan Type FHA ", null
	Dim objAmortSchDialog,objAmortSchDialogClose,objListView
			
	Set objAmortSchDialog      = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog")	
	Set objAmortSchDialogClose = objAmortSchDialog.SwfButton("swfname:=okBtn")
	Set objListView            = objAmortSchDialog.SwfObject("swfname:=amortListview")
	Set objData 			   = FRM_DS_GetTestData("Settings_TablesFees", "MITable", strRowID)
	intMonth 				   = FRM_DS_GetValue(objData, "FHAFirstMonth")
	intMonth1 				   = FRM_DS_GetValue(objData, "FirstMonth")
	intFHAFirstMonthValue	   = FRM_DS_GetValue(objData, "FHAMonthValue")
	intFHA120MonthValue		   = FRM_DS_GetValue(objData, "Month1Int")
	intFHA121MonthValue		   = FRM_DS_GetValue(objData, "Month2Int")
	
	intColNo = GUI_List_GetColumnIndex(objListView,"MI")

	GUI_List_ValidateCellData objListView,intMonth,intColNo,intFHAFirstMonthValue	
	GUI_List_ValidateCellData objListView,intMonth1+8,intColNo,intFHA120MonthValue
	GUI_List_ValidateCellData objListView,intMonth1+10,intColNo,intFHA121MonthValue

	GUI_SwfButton_Click objAmortSchDialogClose
	
	Set objAmortSchDialog      = Nothing
	Set objAmortSchDialogClose = Nothing
	Set objListView            = Nothing

End Function


'This function is used to Verify MIP Funding Guarantee Value
'@code
'    TablesAndFees_Verify_MIPFundingGuaranteeValue()
'@endcode

Function BIZ_TablesAndFees_Verify_MIPFundingGuaranteeValue()   
   Dim intLoanAmtTxt,intMIFFValue,intrateFundingTxt
   Wait  g_TinyWaitMedium  'Explicit Wait added Due to sync
   
   intrateFundingTxt=CLng(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfEdit("swfname:=rateFundingTxt"),"text"))
   intLoanAmtTxt=CLng(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfEdit("swfname:=baseLoanAmtTxt"),"text"))
   intMIFFValue=Clng(GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MIPDialog").SwfEdit("swfname:=fundingFeeTxt"),"text"))
   intLoanAmtTxt=(intLoanAmtTxt/100) * intrateFundingTxt
   FRM_VerifyEqual formatNumber(intLoanAmtTxt,3),formatnumber(intMIFFValue,3),"MI/FF Fee","MI/FF Fee" 
   Set objData = Nothing   
End Function



'This function is used to Verify Default Plan Setting Values
'@code
'    Settings_TablesAndFees_LOCompensation_Verify_DefaultPlanSettingValues(strRowID)
'@endcode
'@param strRowID - row id for data

Function BIZ_Settings_TablesAndFees_LOCompensation_VerifyDefaultPlanSetting(strRowID)
	
	Dim objSettings,objData
	FRM_Logger_ReportInfoEvent "Settings Table and Fees LO Compensation","Set LOCompensation Plan Default Plan Settings ", Null        
		
	Set objSettings = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")   
	Set objData 	= FRM_DS_GetTestData("Settings_TablesFees", "CompensationPlan", strRowID)  
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "LoanOfficerOrBroker")) Then
	       FRM_VerifyEqual 	GUI_Object_GetPropertyValue(objSettings.SwfComboBox("swfname:=cmbType"),"selection") , FRM_DS_GetValue(objData, "LoanOfficerOrBroker"),"LoanOfficer/Broker Value","Defualt Plan Settings LoanOfficer/Broker Value"
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "strTrigger")) Then	    
	       FRM_VerifyEqual  GUI_Object_GetPropertyValue(objSettings.SwfEdit("swfname:=txtTriggerField"),"text"), Cstr(FRM_DS_GetValue(objData, "strTrigger")) ,"Trigger Basis","Defualt Plan Settings Trigger Basis"
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Minimum_TermDays")) Then
	       FRM_VerifyEqual GUI_Object_GetPropertyValue(objSettings.SwfEdit("swfname:=textMinTerm"),"text"),  CStr(FRM_DS_GetValue(objData, "Minimum_TermDays")) ,"Minimum Term Days","Defualt Plan Settings Minimum Term Days"   
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "Rounding")) Then
	       FRM_VerifyEqual GUI_Object_GetPropertyValue(objSettings.SwfComboBox("swfname:=cmbRounding"),"selection"), FRM_DS_GetValue(objData, "Rounding"),"Rounding","Defualt Plan Settings Rounding" 
	End IF
	
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "LenderOrBorrower")) Then
    	FRM_VerifyEqual GUI_Object_GetPropertyValue(objSettings.SwfComboBox("swfname:=cboPaidBy"),"selection"), FRM_DS_GetValue(objData, "LenderOrBorrower"),"Lender Paid/Borrower Paid", "Defualt Plan Settings Lender Paid/Borrower Paid" 
    End IF
                    
    Set objSettings = Nothing 
	Set objData 	= Nothing      
            
End Function


'This function is used to Export Compensation Plan To Excel
'@code
'    Settings_TablesAndFees_Export_CompensationPlanToExcel(strFileName)
'@endcode
'@param strFileName - Excel File Name

Function BIZ_Settings_TablesAndFees_Export_CompensationPlanToExcel(strFileName)
    
    Dim objSettings,objExportCompPlans,objLOCompExportOptionForm ,objLOCompExportRadio,objLOCompExport,objSaveFile, strExcelFilePath
    FRM_Logger_ReportInfoEvent "Settings Table and Fees LO Compensation Plans Export"," Export LO Compensation Plans to Excel ", Null  
	
	Set objSettings 				= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objExportCompPlans 			=	objSettings.SwfObject("swfname:=stdIconBtnExport")
	Set objLOCompExportOptionForm 	= objSettings.SwfWindow("swfname:=LOCompExportOptionForm") 
	Set objLOCompExportRadio 		= objLOCompExportOptionForm.SwfRadioButton("swfname:=rdoSortByPlan") 
	Set objLOCompExport 			= objLOCompExportOptionForm.SwfButton("swfname:=btnExport") 
	Set objSaveFile				    = SwfWindow("swfname:=MainForm").Dialog("text:=Save File")
	
	GUI_SwfObject_Click objExportCompPlans
	
	If (GUI_Object_GetPropertyValue(objLOCompExportRadio,"Checked")) Then
		FRM_Logger_ReportInfoEvent "Export List of Plans","Export List of Plans Already Set", Null			
	Else	
		GUI_SwfRadioButton_Click objLOCompExportRadio 	
	End If 
	
    GUI_Object_ValidateChecked objLOCompExportRadio, "True","Export List of Plans"
	GUI_SwfButton_Click  objLOCompExport
	GUI_Object_WaitTillExistX objSaveFile.WinButton("text:=&Save"), 60
	strExcelFilePath = Pathfinder.Locate("Test Report\")
	strExcelFilePath = strExcelFilePath&strFileName
	Set objSaveFile	 = SwfWindow("swfname:=MainForm").Dialog("text:=Save File")
	
	GUI_Object_WaitTillExistX objSaveFile.WinEdit("attached text:=File name:","index:=0"),50
	Wait g_ShortWaitLarge+g_ShortWaitLarge+g_ShortWaitMedium
	UTIL_Win_SendKey   strExcelFilePath
	GUI_WinButton_Click objSaveFile.WinButton("text:=&Save")
	If Dialog("text:=Confirm Save As").Exist(5) Then
	GUI_WinButton_Click Dialog("text:=Confirm Save As").WinButton("text:=&Yes")
	End If
	
	Set objSettings 				= Nothing
	Set objExportCompPlans 			= Nothing
	Set objLOCompExportOptionForm 	= Nothing 
	Set objLOCompExportRadio 		= Nothing
    Set objLOCompExport 			= Nothing
    Set objSaveFile				    = Nothing
	Set objLOCompExport 			= Nothing
	Set objSaveFile				    = Nothing

 End Function 
   	


'This function is used to Verify Exported Compensation Plan Details In Excel
'@code
'    Settings_TablesAndFees_Verify_ExportedCompensationPlanDetailsInExcel(strRowID,strFileName,strPlanName)
'@endcode
'@param strFileName - Excel File Name
'@param strPlanName - Name of Plan
'@param strRowID - Points to in Excel

Function BIZ_Settings_TablesAndFees_Verify_ExportedCompensationPlanDetailsInExcel(strRowID,strFileName,strPlanName)
	
	FRM_Logger_ReportInfoEvent "Settings Table and Fees LO Compensation Plans Export","Verify Lo Compensation Plan Values With Exported Plan values", Null  
	
    Dim strExcelFilePath,objData,intRow
	strExcelFilePath = Pathfinder.Locate("Test Report\")
	strExcelFilePath = strExcelFilePath&strFileName 
	Wait  g_LongWaitLarge+g_LongWaitLarge
	intRow 		 = UTIL_Excel_GetRowIndexByColumnValue(strExcelFilePath, "Data", "Plan Name", strPlanName)
	Set objData  = FRM_DS_GetTestData("Settings_TablesFees", "CompensationPlan", strRowID)
	
	FRM_VerifyEqual strPlanName,UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "A"),"Plan Name","Plan Name "
	FRM_VerifyEqual FRM_DS_GetValue(objData, "Description"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "B"),"Description","Description "
	FRM_VerifyEqual FRM_DS_GetValue(objData, "LoanOfficerOrBroker"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "D"),"LO/Broker","LO/Broker "
	FRM_VerifyEqual FRM_DS_GetValue(objData, "Minimum_TermDays"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "E"),"Min # Days","Min # Days "
	
	If FRM_DS_GetValue(objData, "Status_Active") Then  
	   FRM_VerifyEqual "Activate",UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "C"),"Status","Status "
	   FRM_VerifyEqual FormatDateTime(FRM_DS_GetValue(objData, "ActivationDate"),2),FormatDateTime(UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "F"),2),"Activation Date","Activation Date "	
	End If
    
	FRM_VerifyEqual FRM_DS_GetValue(objData, "Rounding"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "G"),"Rounding Type","Rounding Type "
	FRM_VerifyEqual FRM_DS_GetValue(objData, "Amount"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "H"),"Loan Amount %","Loan Amount % "
	FRM_VerifyEqual FRM_DS_GetValue(objData, "AmountOf"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "I"),"% of","% of "
	FRM_VerifyEqual FRM_DS_GetValue(objData, "Amount2"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "J"),"Additional $ Amount","Additional $ Amount "
	FRM_VerifyEqual FRM_DS_GetValue(objData, "Minimum"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "K"),"Minimum $","Minimum $ "
	FRM_VerifyEqual FRM_DS_GetValue(objData, "Maximum"),UTIL_Excel_GetCellData(strExcelFilePath, "Data", intRow, "L"),"'Maximum $","'Maximum $ "
	
	Set objData = Nothing

End Function


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@ defgroup Re-Enforcement Tables & Fees
'@ List of Functions 
'@code
' Function TablesAndFees_FillCompensationDetails(strRowID, strLoanOfficerOrBroker, strName, strDescription)
' Function TablesAndFees_ValidateLOCompensationPage(strPageTitle)
' Function TablesAndFees_ValidateLOCompPlanCreatedAndSetActiveStatus(strLOCompPlanName,strOnorOffForActiveCheckBox)
' Function TablesAndFees_ValidateCreatedUsersAndAssigningCompensationPlan(strUserName,strLOCompPlanName)
' Function TablesAndFees_AssigningLoanOfficerAndValidatingDataInLOCompFromTools(strUserName,strLOCompPlanName,strRowID)
'@endcode
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is to fill the compensation details 
'@code
'    TablesAndFees_FillCompensationDetails(strRowID, strLoanOfficerOrBroker, strName, strDescription)
'@endcode
'@param strRowID - RowId for Data
'@param strLoanOfficerOrBroker - TO Select Loan Officer or Broker
'@param strName - Compensation name
'@param strDescription - Compensation description

Function BIZ_TablesAndFees_FillCompensationDetails(strRowID, strLoanOfficerOrBroker, strName, strDescription)
	
	FRM_Logger_ReportInfoEvent "TablesAndFees_FillCompensationDetails","TablesAndFees_FillCompensationDetails using RowId '"&strRowID&"' in Settings_TablesFees datasheet", null
	
	Dim objData, objSettings, objListView, objCompensationDetail, arrLoanOfficerOrBroker, intRowCount	
	Set objData 				=	FRM_DS_GetTestData("Settings_TablesFees", "CompensationPlan", strRowID)
	Set objSettings 			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objListView 			= 	objSettings.SwfObject("swfname:=listView")
	Set objCompensationDetail 	=   objSettings.SwfWindow("swfname:=LOCompGroupDialog")
	
	arrLoanOfficerOrBroker = Split(FRM_DS_GetValue(objData, "LoanOfficerOrBroker"),",")
	
	GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtName"), strName
	GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtDescription"), strDescription
	
	GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbType"), strLoanOfficerOrBroker
	
'	If strLoanOfficerOrBroker = "Loan Officer" Then
'		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbType"), arrLoanOfficerOrBroker(0)
'	ElseIf strLoanOfficerOrBroker = "Broker" Then
'		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbType"), arrLoanOfficerOrBroker(1)
'	Else
'		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbType"), arrLoanOfficerOrBroker(2)
'	End If
	
	'@ % amount field
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Amount")) Then	
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtAmount"), FRM_DS_GetValue(objData, "Amount")
		FRM_Logger_ReportInfoEvent "Percentage Amount","Percentage Amount Data Entered - "&FRM_DS_GetValue(objData, "Amount"), Null
	End If
	
	'@ Percentage amount of value
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AmountOf")) Then	
		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbAmount"), FRM_DS_GetValue(objData, "AmountOf")
		FRM_Logger_ReportInfoEvent "Percentage Amount","Percentage Amount Of Data Entered - "&FRM_DS_GetValue(objData, "AmountOf"), Null
	End If
	
	'@ amount field
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Amount2")) Then	
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtAmount2"), FRM_DS_GetValue(objData, "Amount2")
		FRM_Logger_ReportInfoEvent "Amount","Amount Entered - "&FRM_DS_GetValue(objData, "Amount2"), Null
	End If
	
	'@ Min field
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Minimum")) Then	
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtMinAmt"), FRM_DS_GetValue(objData, "Minimum")
		FRM_Logger_ReportInfoEvent "Minimum Amount","Minimum Amount Data Entered - "&FRM_DS_GetValue(objData, "Minimum"), Null
	End If
	
	'@ % Max field
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Maximum")) Then	
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=txtMaxAmt"), FRM_DS_GetValue(objData, "Maximum")
		FRM_Logger_ReportInfoEvent "Maximum Amount","Maximum Amount Data Entered - "&FRM_DS_GetValue(objData, "Maximum"), Null
	End If
	
	'@ Min Term Days
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Minimum_TermDays")) Then	
		GUI_SwfEdit_Set objCompensationDetail.SwfEdit("swfname:=textMinTerm"), FRM_DS_GetValue(objData, "Minimum_TermDays")
		FRM_Logger_ReportInfoEvent "Minimum_TermDays","Minimum_TermDays Data Entered - "&FRM_DS_GetValue(objData, "Minimum_TermDays"), Null
	End If
	
	'@ Percentage amount of combo-box value
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AmountOf")) Then	
		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbAmount"), FRM_DS_GetValue(objData, "AmountOf")
		FRM_Logger_ReportInfoEvent "Percentage Amount Combo Box","Percentage Amount combo box Data Entered - "&FRM_DS_GetValue(objData, "AmountOf"), Null
	End If
	
	'@ Rounding Value
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Rounding")) Then	
		GUI_SwfComboBox_Select objCompensationDetail.SwfComboBox("swfname:=cmbRounding"), FRM_DS_GetValue(objData, "Rounding")
		FRM_Logger_ReportInfoEvent "Percentage Amount Combo Box","Percentage Amount combo box Data Entered - "&FRM_DS_GetValue(objData, "Rounding"), Null
	End If
	
	GUI_SwfButton_Click objCompensationDetail.SwfButton("swfname:=btnSave")
	
	intRowCount = GUI_List_GetRowIndex(objListView, "Name", strName)
	Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	GUI_List_ValidateCellData objListView, intRowCount, "Name", strName
	
	Set objData		          = Nothing
	Set objSettings	          = Nothing
	Set objListView	          = Nothing
	Set objCompensationDetail = Nothing

End Function



'This function is to Verify the LO Compensation Page is open or not 
'@code
'    TablesAndFees_ValidateLOCompensationPage(strPageTitle)
'@endcode
'@param strPageTitle - Page Title For Validation

Function BIZ_TablesAndFees_ValidateLOCompensationPage(strPageTitle)
	
	Dim objEncompassMain, objEncompassSettings
	
	Set objEncompassMain 		= 	SwfWindow("swfname:=MainForm")
	Set objEncompassSettings 	= 	objEncompassMain.SwfWindow("swfname:=SetUpContainer")
	
	If(Instr(1,strPageTitle,"LO Compensation"))=1 Then
		GUI_Object_ValidateText objEncompassSettings.SwfObject("swfname:=gContainer"), strPageTitle, "Page Description Validation"
	Else
		FRM_Logger_ReportFailEvent "LO Compensation Page","Page Opened From Setting Is: "&strPageTitle,null
	End If
	
	Set objEncompassMain 		= 	Nothing
	Set objEncompassSettings 	= 	Nothing
	
End Function



'This function is to Verify the LO Compensation Plan created and set active status
'@code
'    TablesAndFees_ValidateLOCompPlanCreatedAndSetActiveStatus(strLOCompPlanName,strOnorOffForActiveCheckBox)
'@endcode
'@param strLOCompPlanName - Plan Name should be passed
'@param strOnorOffForActiveCheckBox - "ON" or "OFF" to be passed

Function BIZ_TablesAndFees_ValidateLOCompPlanCreatedAndSetActiveStatus(strLOCompPlanName,strOnorOffForActiveCheckBox)
	
	Dim objEncompassMain, objEncompassSettings, objLOCompPlanDetails
	
	Set objEncompassMain 		= 	SwfWindow("swfname:=MainForm")
	Set objEncompassSettings 	= 	objEncompassMain.SwfWindow("swfname:=SetUpContainer")
	Set objLOCompPlanDetails 	= 	objEncompassSettings.SwfWindow("swfname:=LOCompGroupDialog")
	
	If GUI_List_TextExists(objEncompassSettings.SwfObject("swfname:=listView"), "Name", strLOCompPlanName) Then
		FRM_Logger_ReportPassEvent "Validate LO Compensation Plan Created or not", "LO Compensation Plan Created created with '"&strLOCompPlanName&"' name", null
		GUI_List_ClickRow objEncompassSettings.SwfObject("swfname:=listView"), objEncompassSettings.SwfObject("swfname:=listView").SwfScrollBar("swfname:=vPanelScrollBar"),"Name", strLOCompPlanName, true,false,false,"Double" 
		objLOCompPlanDetails.SwfCheckBox("swfname:=chkStatus").Set strOnorOffForActiveCheckBox
'		If objLOCompPlanDetails.Dialog("text:=Encompass").Exist(20) Then
'			GUI_Dialog_Encompass_OK "For audit purposes, compensation plans cannot be modified once they are activated and assigned to an originator. Be sure to make any needed changes here before assigning the plan to an originator."
'		End If
		If objLOCompPlanDetails.Dialog("text:=Encompass").Static("text:=.*For audit purposes.*").Exist(5)  Then
			strText=objLOCompPlanDetails.Dialog("text:=Encompass").Static("text:=.*For audit purposes.*").GetROProperty("text")	
			If objLOCompPlanDetails.Dialog("text:=Encompass").WinButton("text:=OK").Exist(2) Then
				objLOCompPlanDetails.Dialog("text:=Encompass").Activate
				objLOCompPlanDetails.Dialog("text:=Encompass").WinButton("text:=OK").Click
				FRM_Logger_ReportInfoEvent "Encompass Dialog box click", "Clicked OK button on Dialog box having text '"&strText&"'", null
			End If
		End If		
		
		GUI_SwfButton_Click objLOCompPlanDetails.SwfButton("swfname:=btnSave")
	Else
		FRM_Logger_ReportFailEvent "Validate LO Compensation Plan Created or not", "LO Compensation Plan not created", null
	End If

	Set objEncompassMain 		= 	Nothing
	Set objEncompassSettings 	= 	Nothing
	Set objLOCompPlanDetails 	= 	Nothing
	
End Function



'This function is to validate a created user and assigning LO Compensations plan
'@code
'    TablesAndFees_ValidateCreatedUsersAndAssigningCompensationPlan(strUserName,strLOCompPlanName)
'@endcode
'@param strUserName - User name to be validated 
'@param strLOCompPlanName - compensations plan name to be assigned to the specified user

Function BIZ_TablesAndFees_ValidateCreatedUsersAndAssigningCompensationPlan(strUserName,strLOCompPlanName)
	
	Dim objEncompassMain, objEncompassSettings, objLOCompPlanDetails, objEnabledUsers, objScrollBar, objUserDetails, objLOCompensationPlans
	
	Set objEncompassMain 		= 	SwfWindow("swfname:=MainForm")
	Set objEncompassSettings 	= 	objEncompassMain.SwfWindow("swfname:=SetUpContainer")
	Set objLOCompPlanDetails 	= 	objEncompassSettings.SwfWindow("swfname:=LOCompGroupDialog")
	Set objEnabledUsers			=	objEncompassSettings.SwfObject("swfname:=gvUsers")
	Set objScrollBar 			= 	objEncompassSettings.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objUserDetails			=	objEncompassSettings.SwfWindow ("swfname:=AddEditUserCEDialog")
	Set objLOCompensationPlans	=	objUserDetails.SwfWindow("swfname:=AssignLOCompDialog").swfobject("swfname:=gridViewPlans")
	
	Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	'@ Validating User ID Existance In LIst
	If GUI_List_TextExists(objEnabledUsers, "User ID", strUserName) Then
		FRM_Logger_ReportPassEvent "Validate new user is created or not", "New user is created with '"&strUserName&"' name", null
		GUI_List_ClickRow objEnabledUsers, objScrollBar, "User ID", strUserName, true, false, false, "Double"
	Else
		FRM_Logger_ReportFailEvent "Validate new user is created or not", "New user is  not created", null
	End If
	
	'@ Selecting Add Icon
	GUI_SwfObject_Click objUserDetails.SwfObject("swfname:=stdIconBtnNew")
	
	Wait g_ShortWaitMedium 'Due To Sync Issue We Are Explicitly Passing Wait Statement
	
	'@ Assigning LO Compensations Plan To User
	If GUI_List_TextExists(objLOCompensationPlans, "Name", strLOCompPlanName) Then
		FRM_Logger_ReportPassEvent "LO Compensation Plan Selection", "LO Compensation Plan Selected Is: '"&strUserName&"' name", null
		GUI_List_ClickRow objLOCompensationPlans, objLOCompensationPlans.SwfScrollBar("swfname:=vPanelScrollBar"), 0, strLOCompPlanName, true, false, false, "Single"
		GUI_SwfButton_Click objUserDetails.SwfWindow("swfname:=AssignLOCompDialog").SwfButton("swfname:=btnSelect")
		'Changed by Abhishek for CTA-113
		'GUI_SwfButton_Click objUserDetails.SwfButton("swfname:=okBtn")		
		objUserDetails.Activate
        Set WshShell = CreateObject("WScript.Shell")
        WshShell.SendKeys "%s"
        Set WshShell = Nothing
	Else
		FRM_Logger_ReportFailEvent "LO Compensation Plan Selection", "LO Compensation Plan is not selected", null
	End If
	
	Set objEncompassMain 		= 	Nothing
	Set objEncompassSettings 	= 	Nothing
	Set objLOCompPlanDetails 	= 	Nothing
	Set objEnabledUsers			=	Nothing
	Set objScrollBar 			= 	Nothing
	Set objUserDetails			=	Nothing
	Set objLOCompensationPlans	=	Nothing

End Function



'This function is to validate a created user and assigning LO Compensations plan
'@code
'    TablesAndFees_AssigningLoanOfficerAndValidatingDataInLOCompFromTools(strUserName,strLOCompPlanName,strRowID)
'@endcode
'@param strUserName - User name to be validated 
'@param strLOCompPlanName - compensations plan name to be assigned to the specified user
'@param strRowID - RowID For DataSheet

Function BIZ_TablesAndFees_AssigningLoanOfficerAndValidatingDataInLOCompFromTools(strUserName,strLOCompPlanName,strRowID)

	Dim objEncompassMain, objLoanTeamMember, objLOCompensation, objData, objCompData, strLoanOfficerName, strPercentageAmountBasedOn, strRounding
	
	Set objEncompassMain 		= 	SwfWindow("swfname:=MainForm")
	Set objLoanTeamMember 		= 	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ProcessorSelectionDialog")
	Set objLOCompensation		=	SwfWindow("swfname:=MainForm").Page("name:=")
	Set objData 				= 	FRM_DS_GetTestData("Tools_LOCompensation", "LOCompensation", strRowID)
	Set objCompData				=	FRM_DS_GetTestData("Settings_TablesFees", "CompensationPlan", strRowID)
	
	'@ Select Loan Officer
	GUI_SwfObject_Click objEncompassMain.SwfObject("swfname:=pictureBoxCurrentLA")

	If GUI_List_TextExists(objLoanTeamMember.SwfObject("swfname:=gvUsers"), "User ID", strUserName) Then
		FRM_Logger_ReportPassEvent "Validate new user is created or not", "New user is created with '"&strUserName&"' name", null
		GUI_List_ClickRow objLoanTeamMember.SwfObject("swfname:=gvUsers"), objLoanTeamMember.SwfScrollBar("swfname:=vPanelScrollBar"), "User ID", strUserName, true, false, false, "Double" 
	Else
		FRM_Logger_ReportFailEvent "Validate new user is created or not", "New user is  not created", null
	End If
	
	BIZ_Loan_Save()
	
	'@ Click On Tools Tab	
	BIZ_Tools_Open "LO Compensation"
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompPlan_Channel")) Then
	GUI_WebList_Select objLOCompensation.WebTable("name:=Reset Comp").WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "CompPlan_Channel")
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CompPlan_Borrower/Lender")) Then
	GUI_WebList_Select objLOCompensation.WebTable("name:=Reset Comp").WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "CompPlan_Borrower/Lender")
	End If
	
	'@ Validation
'	GUI_Object_ValidateValue objLOCompensation.WebTable("html tag:=TABLE","index:=3").WebEdit("html id:=TextBox10"), strLOCompPlanName, "Plan Name In Tools ; LO Compensation"
	
	'@ Get loan Officer Name
	strLoanOfficerName	=	GUI_Object_GetPropertyValue(objLOCompensation.WebTable("html tag:=TABLE","index:=3").WebEdit("html id:=TextBox8"),"value")
	If UTIL_String_IsNotEmpty(strLoanOfficerName) Then
	    FRM_Logger_ReportInfoEvent "Loan Officer", "Name Displayed Is: '"&strLoanOfficerName&"' ", Null
	End If
	
	'@ % Amount Is Based On
	strPercentageAmountBasedOn	=	GUI_Object_GetPropertyValue(objLOCompensation.WebTable("html tag:=TABLE","index:=3").WebEdit("html id:=TextBox11"),"value")
	If UTIL_String_IsNotEmpty(strPercentageAmountBasedOn) Then
		GUI_Object_ValidateValue objLOCompensation.WebTable("html tag:=TABLE","index:=3").WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objCompData,"AmountOf"), "% Amount Is Based On"
	End If
	
	'@ Rounding
	strRounding	=	GUI_Object_GetPropertyValue(objLOCompensation.WebTable("html tag:=TABLE","index:=3").WebEdit("html id:=TextBox16"),"value")
	If UTIL_String_IsNotEmpty(strRounding) Then
		'@ As The Name Is Changing In The Application We Are Validating Partial Text
		If Instr(strRounding,Mid(FRM_DS_GetValue(objCompData,"Rounding"),1,10))>0 Then
			FRM_Logger_ReportPassEvent "Validation Of Rounding", "Value In Encompass Is : '"&strRounding&"' And Value We Are Passing Is :'"&FRM_DS_GetValue(objCompData,"Rounding")&"' ", Null
		Else
			FRM_Logger_ReportFailEvent "Validation Of Rounding", "Value In Encompass Is : '"&strRounding&"' And Value We Are Passing Is :'"&FRM_DS_GetValue(objCompData,"Rounding")&"' ", Null
		End If
	End If

	Set objEncompassMain 		= 	Nothing
	Set objLoanTeamMember 		= 	Nothing
	Set objLOCompensation		=	Nothing
	Set objData 				= 	Nothing
	Set objCompData				=	Nothing
	
End Function



'This function is used for Verify HelocDraw and Repayment
'@code
    'Function TablesAndFeees_Verify_HelocDrawRepayment(strRecord,recordType,strRowID)
'@endcode
'@param strRowID is RowID in excel to read 
'@Param recordType is Draw or Repayment
'@Param strRecord Name of Heloc Record

Function BIZ_TablesAndFeees_Verify_HelocDrawRepayment(strRecord,recordType,strRowID)
	
	FRM_Logger_ReportInfoEvent "Heloc Record Verify", "Heloc Record Verify For "&recordType, Null
    
	Dim objMainPage,objHelocTable,objHelocTableSelect,objHelocTableOK,objHelocTableForm,objHelocTableFormList,objHelocTableFormSelect,objData
	
	Set objMainPage 			= 	SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	Set objHelocTable			= 	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=HelocTableContainer")
	Set objHelocTableSelect		= 	objHelocTable.SwfButton("swfname:=selectBtn")
	Set objHelocTableOK			= 	objHelocTable.SwfButton("swfname:=okBtn")
	Set objHelocTableForm		= 	objHelocTable.SwfWindow("swfname:=SelectHelocTableForm")
	Set objHelocTableFormList	= 	objHelocTableForm.SwfListView("swfname:=listViewHeloc")
	Set objHelocTableFormSelect	= 	objHelocTableForm.SwfButton("swfname:=okBtn")
	Set objData					=	FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)
	
	'1003 Page 3
	BIZ_Forms_Open "RegZ - LE"
	GUI_WebButton_Click 	objMainPage.WebButton("html id:=StandardButton5")
	GUI_WebButton_Click 	objHelocTableSelect
	GUI_SwfList_Select 		objHelocTableFormList, strRecord 
	GUI_WebButton_Click 	objHelocTableFormSelect
		
   GUI_DialogObject_Encompass_YesX objHelocTable.Dialog("text:=Encompass"), 20, "" 	
   GUI_WebButton_Click objHelocTableOK
	
	If recordType="Draw" Then		
	   FRM_VerifyEqual cstr(GUI_Object_GetPropertyValue(objMainPage.WebEdit("html id:=l_1889"),"value")), cstr(FRM_DS_GetValue(objData, "DrawValue1")), "Heloc Draw", "Heloc Draw Period"
	   FRM_VerifyEqual cstr(GUI_Object_GetPropertyValue(objMainPage.WebEdit("html id:=l_1890"),"value")), cstr(FRM_DS_GetValue(objData, "DrawValue2")), "Heloc Repayment", "Heloc Repayment Period"
	Else	
	   FRM_Logger_ReportInfoEvent "Heloc Record Verify", "Heloc Record Verify For Repayment", Null
	   FRM_VerifyEqual cstr(GUI_Object_GetPropertyValue(objMainPage.WebEdit("html id:=l_1889"),"value")), cstr(FRM_DS_GetValue(objData, "RepaymentValue1")), "Heloc Draw", "Heloc Draw Period"
	   FRM_VerifyEqual cstr(GUI_Object_GetPropertyValue(objMainPage.WebEdit("html id:=l_1890"),"value")), cstr(FRM_DS_GetValue(objData, "RepaymentValue2")), "Heloc Repayment", "Heloc Repayment Period"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AnnualFee")) Then
	   GUI_SwfEdit_Set objMainPage.WebEdit("html id:=l_1891"),FRM_DS_GetValue(objData, "AnnualFee")
	   UTIL_Win_Sendkey "{TAB}"	
	End If
	
	FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainPage.WebEdit("html id:=l_1891"),"value"), FormatNumber(FRM_DS_GetValue(objData, "AnnualFee"),2), "Heloc Annual Fee", "Entered Heloc Annual Fee"
	
	Set objMainPage 			= 	Nothing
	Set objHelocTable			= 	Nothing
	Set objHelocTableSelect		= 	Nothing
	Set objHelocTableOK			= 	Nothing
	Set objHelocTableForm		= 	Nothing
	Set objHelocTableFormList	= 	Nothing
	Set objHelocTableFormSelect	= 	Nothing
	Set objData					=	Nothing

End Function



'This function is used for Duplicate  HelocTable
'@code
'    	Settings_TablesandFeees_DuplicateHelocTable(strHeloctableName,strRowID)
'@endcode
'@Param strRowID  row id testdata in excel file
'@Param strHeloctableName  Heloctable Name

Function BIZ_Settings_TablesAndFeees_DuplicateHelocTable(strHeloctableName,strRowID)
	
	FRM_Logger_ReportInfoEvent "TablesAndFeees Heloc Table", "TablesAndFeees Duplicate Heloc Table '"& strHeloctableName, Null
	
	Dim objSettings, objHelocEdit, objData, strDuplicateHelocTN
	Set objSettings			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHelocEdit		=	objSettings.SwfWindow("swfname:=HelocTableContainer")
	Set objHelocMMP			=	objHelocEdit.SwfWindow("swfname:=MMPFormDialog")
	Set objYearListView 	= 	objHelocEdit.swfObject("swfname:=gridViewYearList")
	Set objData				=   FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)
		
	GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewHeloc"), null, "TableName", strHeloctableName, True, False, False, "Single"
   	BIZ_Settings_ClickEdit()	
   	
   	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Year")) Then
		GUI_List_ClickRow objYearListView, null, "Year", cstr(FRM_DS_GetValue(objData, "Year")), True, False, False, "Single"  	
	End If
   	
   	GUI_SwfButton_Click  objHelocEdit.SwfButton("swfname:=duplicateBtn")
   	
	BIZ_Settings_TablesandFeees_SetHelocTable strRowID

	Wait g_TinyWaitMedium  'Expilcit Wait added due to sync
	boolValue=GUI_List_ClickRow (objYearListView, null, "Year", cstr(FRM_DS_GetValue(objData, "Year")), True, False, False, "Single")  
	
	FRM_VerifyTrue  boolValue, "Heloc Table Record", "Heloc Table Record Duplicated for Year '"&FRM_DS_GetValue(objData, "Year")	  
	
    GUI_SwfButton_Click objHelocEdit.SwfButton("swfname:=okbtn")
    GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewHeloc"), null, "Table Name", strHeloctableName, True, False, False, "Single"
   	GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnDuplicate")
   	strDuplicateHelocTN=FRM_DS_GetValue(objData, "TableName")
   	
   	If UTIL_String_IsNotEmpty(strDuplicateHelocTN) Then
		GUI_SwfEdit_Set  objHelocEdit.SwfEdit("swfname:=textBoxName"),  strDuplicateHelocTN
	End If
	    
    GUI_SwfButton_Click objHelocEdit.SwfButton("swfname:=okbtn")
   
	Set objSettings 		 = Nothing
	Set objHelocEdit		 = Nothing
	Set objData				 = Nothing
    Set objHelocMMP			 = Nothing
	Set objYearListView      = Nothing
	
	BIZ_Settings_TablesAndFeees_DuplicateHelocTable=strDuplicateHelocTN
End Function


Function BIZ_Settings_TablesandFeees_Verify_EditedHelocTableValues(strHeloctableName,strRowID)    
    FRM_Logger_ReportInfoEvent "TablesAndFeees Heloc Table", "Verify Edited  Heloc Table Values '"& strHeloctableName, Null
    Dim objSettings,objHelocEdit,objData,objMainView,intRow
    
	Set objSettings		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objHelocEdit	=	objSettings.SwfWindow("swfname:=HelocTableContainer")
	Set objData			=	FRM_DS_GetTestData("Settings_TablesFees", "HelocTable", strRowID)
	Set objMainView 	=	objHelocEdit.swfObject("swfname:=gridViewYearList")	
	GUI_List_ClickRow objSettings.SwfObject("swfname:=listViewHeloc"), null, "Table Name", strHeloctableName, True, False, False, "Single"
   	BIZ_Settings_ClickEdit()  
    intRow=GUI_List_GetRowIndex(objMainView, "Year", cstr(FRM_DS_GetValue(objData, "Year")))
    FRM_VerifyEqual GUI_Object_GetPropertyValue(objHelocEdit.SwfEdit("swfname:=textBoxName"),"text"), strHeloctableName, "Heloc Table Name", "Heloc Table Name"
    FRM_VerifyEqual GUI_List_GetCellData(objMainView, intRow, GUI_List_GetColumnIndex(objMainView, "Margin %")), FormatNumber (FRM_DS_GetValue(objData, "Margin"),3), "Margin %", "Margin %"
    GUI_SwfButton_Click objHelocEdit.SwfButton("swfname:=cancelBtn")
    
	Set objSettings		=	Nothing
	Set objHelocEdit	=	Nothing
	Set objData			=	Nothing
	Set objMainView 	=	Nothing
End Function

Function BIZ_Settings_TableAndFees_1003Page1_Units_SetData(strRowID)	
	Set obj1003Page = SwfWindow("swfname:=MainForm").Page("index:=0")
	obj1003Page.WebEdit("html id:=l_13").Set ""
    obj1003Page.WebEdit("html id:=l_16","index:=0").Set ""
    
    BIZ_Forms_Open "Borrower Summary - Origination"
	BIZ_BorrowerSummaryOrigination_SetTransactionDetails strRowID
	BIZ_1003Page1_SetTitleDetails strRowID
	BIZ_1003Page1_SetData(strRowID)	
End Function




'This function is used to validate Purchase Title Fee on 1103Owner Title insurance
' @code
' Function Itemization2015_1103PurchaseTitleFee_OwnerTitleInsuranceValidation (strRowID)
' @endcode
'@ param strTitleFeeRec - Title Fee Record
'@ param strRowID -  Loan Creation Data
'@ param strRowID2 - Pointing to Title Fee rowid in Excel
		 
Function BIZ_Itemization2015_1103PurchaseTitleFee_OwnerTitleInsuranceValidation (strTitleFeeRec,strRowID,strRowID2)

	FRM_Logger_ReportInfoEvent "Purchase Title Fee", "1103 Owner Title Insurance Validation", null 
	
	Dim objData,objLoanData,objParentObject,objEscrowEdit,strEscrowValue,strSalesPrice,CalcBasedOn,strBase,strRangeUpTo,strFactor,strParam,strCalEscrowValue
	
	Set objData = FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID2)
	Set objLoanData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
	
	BIZ_Forms_Open "2015 itemization"
	strEscrowName=strTitleFeeRec
	strDialogText="The default table '"+strEscrowName+"' will be used for calculation."
	
	Set objParentObject =  SwfWindow("swfname:=MainForm").Page("index:=0")
	GUI_WebButton_Click(objParentObject.WebButton("html id:=StandardButton24"))
	GUI_Dialog_VerifyStaticText SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Static("Class Name:=Static","window id:=65535"), strDialogText, "Dialog Text Validation"
	GUI_Dialog_Encompass_OK(strDialogText)
	Wait g_TinyWaitMedium 'Explicit Wait Added Due to Sync
	
	set objEscrowEdit=objParentObject.WebEdit("html id:=TextBox61")
	strEscrowValue = GUI_Object_GetPropertyValue (objEscrowEdit,"value")
	
	strSalesPrice	  = FRM_DS_GetValue(objLoanData, "PurchasePrice")
	CalcBasedOn		  = FRM_DS_GetValue(objData, "CalcBasedOn")
	strBase			  = FRM_DS_GetValue(objData, "Base")
	strRangeUpTo	  = FRM_DS_GetValue(objData, "RangeUpto")
	strFactor		  = FRM_DS_GetValue(objData, "Factor")
	strParam 		  = strRangeUpTo*strFactor
	strCalEscrowValue = strBase +(strParam/100)
	strCalEscrowValue = formatnumber(strCalEscrowValue)
	
	FRM_Logger_ReportInfoEvent "Loan Sales Price", "Loan Sales Price:"&strSalesPrice, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculated on", "Calc Based On:"&CalcBasedOn, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Range Up To", "Range Up To:"&strRangeUpTo, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculated on", "Base Value:"&strBase, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Factor Value", "Factor "&strFactor, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Formula", "Base Value + (Range Up To * Factor)/100", null
	
	FRM_VerifyEqual strEscrowValue,strCalEscrowValue,"Title Fee Purchase Owner Title Insurance Validation","Owner Title Insurance Validation' "&strEscrowValue&" 'Calucated Value '"&strCalEscrowValue
     
    Set objData			= Nothing
    Set objLoanData		= Nothing
    Set objParentObject	= Nothing
    Set objEscrowEdit	= Nothing
	
End Function



'This function is used to Verify Existing title fee Record Name
' @code
' Function Settings_TablesandFees_FeesRecord_ExistingRecordNameValidation(strRowID)
' @endcode
'@ param strRowID , Points Row in Excel

Function BIZ_Settings_TablesandFees_FeesRecord_ExistingRecordNameValidation(strRowID)

	FRM_Logger_ReportInfoEvent "Existing Fees Record Name","Existing Fees Record Name Validation", Null
	
	Dim objSetupContainer,objEscrowFeedetailsWindow,objData,strTableName,strDialogText,intTblNameRowindex

	Set objSetupContainer = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objEscrowFeedetailsWindow = objSetupContainer.SwfWindow("swfname:=TableGroupDialog")
	Set objData=FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID)
	
	'Title Fees Record Create
	strTableName=FRM_DS_GetValue(objData, "TableName")
	BIZ_Settings_ClickAdd()
	GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt"), strTableName
	GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfButton("swfname:=okBtn")
	
	'Verify Title Fees Record Created
	Wait g_TinyWaitSmall 'Explicit Wait Added Due Sync
	intRowIndex=GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Table Name", strTableName)
	GUI_List_ValidateCellData objSetupContainer.SwfObject("swfname:=listView"), intRowIndex, "Table Name",  strTableName
	
	'Existing Record Name Create and verify warning dialogue message
	BIZ_Settings_ClickAdd()
	GUI_SwfEdit_Set objEscrowFeedetailsWindow.SwfEdit("swfname:=tableNameTxt"), strTableName
	GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfButton("swfname:=okBtn")
	strDialogText=FRM_DS_GetValue(objData, "EncompassStaticText")
	objEscrowFeedetailsWindow.Dialog("text:=Encompass").WinButton("text:=OK").Click	
	GUI_Dialog_Encompass_OKX 2, strDialogText
	GUI_SwfObject_Click objEscrowFeedetailsWindow.SwfButton("swfname:=cancelBtn")

	'Title Fees Record Delete and Verify delete
	Wait g_TinyWaitSmall 'Explicit Wait Added Due Sync isuues
	GUI_List_SelectItem objSetupContainer.SwfObject("swfname:=listView"),strTableName,"Table Name"
	   
	If GUI_Object_IsEnabled(objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")) Then		
		GUI_SwfObject_Click objSetupContainer.SwfObject("swfname:=stdIconBtnDelete")
		GUI_Dialog_Encompass_Yes("")		
		Wait g_TinyWaitSmall 'Explicit Wait Added Due Sync isuues
		intTblNameRowindex = GUI_List_GetRowIndex(objSetupContainer.SwfObject("swfname:=listView"), "Table Name",Trim(strTableName))				
		If intTblNameRowindex < 0 Then
			FRM_Logger_ReportPassEvent "Fee Record Delete","System deletes the selected record '"+strTableName+"' and it should not be available in  grid", Null
		Else	
			FRM_Logger_ReportFailEvent "Fee Record Delete","System Failed to deletes the selected record and it should  be available in  grid", Null
		End If			    
	Else
	 	FRM_Logger_ReportFailEvent "Delete Disabled","Fees Record Delete Failed", Null
	End If	 	
	
	Set objSetupContainer			= Nothing
	Set objEscrowFeedetailsWindow	= Nothing
	Set objData						= Nothing

End Function




'This function is used to validate default Escrow table name and fee calculation
' @code
' Function Itemization2015_1103RefinanceTitleFee_OwnerTitleInsuranceValidation (strRowID)
' @endcode
'@ Param strRowID is RowID of excel to read data from excel.

Function BIZ_Itemization2015_1103RefinanceTitleFee_OwnerTitleInsuranceValidation (strTitleFeeRec,strRowID,strRowID2)

	FRM_Logger_ReportInfoEvent "Refinance Title Fee", "1103 Owner Title Insurance Validation", Null
	
	Dim objParentObject,objLoanData,objEscrowEdit,objData,strEscrowName,strDialogText,strSalesPrice
    Dim	strCalcBasedOn,strBase,strRangeUpTo,strFactor,strParam,strCalEscrowValue,strEscrowValue
    
	Set objLoanData     = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
	Set objData         = FRM_DS_GetTestData("Settings_TablesFees", "TitleFees", strRowID2)
	Set objLoanData     = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	BIZ_Forms_Open "2015 itemization"
	strEscrowName=strTitleFeeRec
	strDialogText="The default table '"+strEscrowName+"' will be used for calculation."	
	GUI_WebButton_Click(objParentObject.WebButton("html id:=StandardButton24"))
	GUI_Dialog_VerifyStaticText SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Static("Class Name:=Static","window id:=65535"), strDialogText, "Dialog Text Validation"
	GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("text:=.*OK", "index:=0")
	strSalesPrice=FRM_DS_GetValue(objLoanData, "PurchasePrice")
	strCalcBasedOn=FRM_DS_GetValue(objData, "CalcBasedOn")
	strBase=FRM_DS_GetValue(objData, "Base")
	strRangeUpTo=FRM_DS_GetValue(objData, "RangeUpto")
	strFactor=FRM_DS_GetValue(objData, "Factor")
	strParam =strRangeUpTo*strFactor
	strCalEscrowValue= strBase +(strParam/100)
	strCalEscrowValue=formatnumber (strCalEscrowValue)
    Wait g_LongWaitMedium  'Due to Sync issue we are explicitly passing wait statement
	set objEscrowEdit=objParentObject.WebEdit("html id:=TextBox61")
	strEscrowValue = GUI_Object_GetPropertyValue (objEscrowEdit,"value")
	
	FRM_Logger_ReportInfoEvent "Loan Sales Price", "Loan Sales Price:"&strSalesPrice, Null
	FRM_Logger_ReportInfoEvent "Title Fee Calculated on", "Calculation Based On: "&strCalcBasedOn, Null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Range Up To", "Range Up To:"&strRangeUpTo, Null
	FRM_Logger_ReportInfoEvent "Title Fee Calculated on", "Base :"&strBase, Null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Factor Value", "Factor "&strFactor, Null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Formula", "Base Value + (Range Up To * Factor)/100", Null
	
	FRM_VerifyEqual strEscrowValue,strCalEscrowValue,"Title Fee Refinance Owner Title Insurance Validation","Owner Title Insurance Validation' "&strEscrowValue&" 'Calucated Value '"&strCalEscrowValue
	
    Set objParentObject  = Nothing
    Set objLoanData      = Nothing
    Set objEscrowEdit    = Nothing
    Set objData          = Nothing
    
End Function




'This function is used to validate default Escrow table name and fee calculation
' @code
' Function Itemization2015_1102EscrowFeeDefaultTableAndFeeValidation (strRowID)
' @endcode
'@ Param strRowID - RowID of excel to read data from excel. 

Function BIZ_Itemization2015_1102EscrowFeeDefaultTableAndFeeValidation (strRowID,strRowID2,strEscrowName)

	FRM_Logger_ReportInfoEvent "Escrow Table Fee", "1102 EscrowFee Default Table And Fee Validation", null 	
	
	Dim objData,objLoanData,objParentObject,objEscrowEdit,strEscrowValue,strSalesPrice,strCalcBasedOn
	Dim strBase,strRangeUpTo,strFactor,strParam,strCalEscrowValue
	
	Set objData 		= FRM_DS_GetTestData("Settings_TablesFees", "EscrowFees", strRowID2)
	Set objLoanData 	= FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetTransactionDetails", strRowID)
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objParentObject = SwfWindow("swfname:=MainForm").Page("index:=0")
	set objEscrowEdit   = objParentObject.WebEdit("html id:=TextBox424")
	Set objDialogBox    = SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Static("Class Name:=Static","window id:=65535")
	strDialogText 		= "The default table '"+strEscrowName+"' will be used for calculation."
	
	BIZ_Forms_Open "2015 itemization"
	
	GUI_WebButton_Click(objParentObject.WebButton("html id:=StandardButton12"))
	GUI_Object_WaitTillExistX objDialogBox,60
	GUI_Dialog_VerifyStaticText objDialogBox, strDialogText, "Dialog Text Validation"
	GUI_Dialog_Encompass_OK(strDialogText)
	Wait g_ShortWaitMedium	'Used explicit wait to handle sync issue
	
	strSalesPrice	= FRM_DS_GetValue(objLoanData, "PurchasePrice")
	strCalcBasedOn	= FRM_DS_GetValue(objData, "CalcBasedOn")
	strBase			= FRM_DS_GetValue(objData, "Base")
	strRangeUpTo	= FRM_DS_GetValue(objData, "RangeUpto")
	strFactor		= FRM_DS_GetValue(objData, "Factor")
	
	strParam 		  = strRangeUpTo*strFactor
	strCalEscrowValue = strBase +(strParam/100)
	strCalEscrowValue = formatnumber(strCalEscrowValue) 
	
	FRM_Logger_ReportInfoEvent "Loan Sales Price", "Loan Sales Price:"&strSalesPrice, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculated on", "Calc Based On:"&strCalcBasedOn, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Range Up To", "Range Up To:"&strRangeUpTo, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculated on", "Base Value :"&strBase, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Factor Value", "Factor Value "&strFactor, null
	FRM_Logger_ReportInfoEvent "Title Fee Calculation Formula", "Base Value + (Range Up To * Factor)/100", null
	
	strEscrowValue = GUI_Object_GetPropertyValue (objEscrowEdit,"value")
	FRM_VerifyEqual strEscrowValue,strCalEscrowValue,"Escrow Default Fee Validation","Escrow Fee  Default Value' "&strEscrowValue&" 'Calucated Value '"&strCalEscrowValue

	Set objData			= Nothing
	Set objLoanData		= Nothing
	Set objParentObject = Nothing
	Set objEscrowEdit	= Nothing
	Set objDialogBox    = Nothing
End Function




'This function is used to Verify Import Compliance Fee Default
'@code
'    Function Settings_TablesAndFees_Verify_ImportComplianceFee(strDialogText)
'@endcode
'@param strDialogText - Pop up Alert Message

Function BIZ_Settings_TablesAndFees_Verify_ImportComplianceFee(strRowID,strDialogText)
	
	FRM_Logger_ReportInfoEvent "Tables And Fees Itemization Compliance Fee", "Verify Default Import Compliance Fee", Null
	Dim objSettings,objAddFeeForm,objAddFeeFormEdit,objAddFeeFormOK,objNewItem,objMainView,objMainViewScroll,objImport,objToolBar, objData
	
	Set objSettings			=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	Set objAddFeeForm		=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AddFeeForm")
	Set objAddFeeFormEdit 	= 	objAddFeeForm.SwfEdit("swfname:=txtFeeName")
	Set objAddFeeFormOK   	= 	objAddFeeForm.SwfButton("swfname:=btnOK")
	Set objNewItem			=   objSettings.SwfObject("swfname:=iconBtnNew")
	Set objMainView			=   objSettings.SwfObject("swfname:=gridFees")
	Set objMainViewScroll   =   objMainView.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objImport			=	objSettings.SwfButton("swfname:=btnImport")
	Set objToolBar          =   objSettings.SwfToolBar("swfname:=mnuSend")
	Set objData             =   FRM_DS_GetTestData("Settings_TablesFees", "ItemizationFee", strRowID)
	
	GUI_SwfObject_Click  objNewItem
	Dim boolValue, strItemization
	strItemization= FRM_DS_GetValue(objData, "FeeDataName")
	
	If UTIL_String_IsNotEmpty(strItemization) Then	
	   GUI_WebEdit_Set objAddFeeFormEdit ,strItemization
	End If
	
	GUI_SwfButton_Click objAddFeeFormOK
	Wait g_TinyWaitLarge ' Explicit wait added due to sync
	boolValue=GUI_List_ClickRow (objMainView, objMainViewScroll, "Encompass Fee Name", strItemization, True, False, False, "Single")
	FRM_VerifyTrue boolValue,"Fee Record Availability","Fee Record Available is :"&strItemization 
	GUI_SwfButton_Click objImport
	GUI_SwfToolbar_Select objToolBar, "Import Compliance Default Fees..."	
	GUI_Dialog_Encompass_YesX 3, strDialogText
	Wait g_TinyWaitLarge ' Explicit wait added due to sync
	boolValue =  GUI_List_ClickRow (objMainView, objMainViewScroll, "Encompass Fee Name", strItemization, True, False, False, "Single")
	FRM_VerifyFalse boolValue,"Fee Record Delete","Fee Record Deleted is :"&strItemization
	BIZ_Settings_ClickSave
	Set objSettings			=	Nothing
	Set objAddFeeForm		=	Nothing
	Set objAddFeeFormEdit 	= 	Nothing
	Set objAddFeeFormOK   	= 	Nothing
	Set objNewItem			=   Nothing
	Set objMainView			=   Nothing
	Set objMainViewScroll   =   Nothing
	Set objImport			=	Nothing
	Set objToolBar          =   Nothing
	Set objData             =   Nothing

End Function



'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Settings\TablesAndFees.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\SyncSettings\SyncSettings.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_SyncSettings BIZ_SyncSettings
'
' List of functions here
'@code
'   Function BIZ_SyncSettings_ClickArrow()
'   Function Biz_SyncSettings_SelectSettingsToolBarItem(strItem)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for clicking the sync arrow button
'@code
'    BIZ_SyncSettings_ClickArrow()
'@endcode

Function BIZ_SyncSettings_ClickArrow()
	
	FRM_Logger_ReportInfoEvent "BIZ_SyncSettings_ClickArrow", "Click Sync Arrow button", Null
	
	Set objNotification = SwfWindow("swfname:=SettingsToolMain").SwfWindow("swfname:=NewRecordNotificationDlg")
	GUI_SwfButton_Click SwfWindow("swfname:=SettingsToolMain").SwfButton("swfname:=btnLeftToRight")
	Wait g_LongWaitLarge
	If GUI_Object_IsExistX(SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK"), 150) Then
		SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK").highlight
	 	GUI_SwfButton_Click SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK")
		Wait g_LongWaitLarge
	End If

	If GUI_Object_IsExistX(SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK"), 100) Then
		SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK").highlight
	 	GUI_SwfButton_Click SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK")
		Wait g_LongWaitLarge
	End If
	
	If GUI_Object_IsExistX(SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK"), 100) Then
		SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK").highlight
	 	GUI_SwfButton_Click SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK")
		Wait g_LongWaitLarge
	End If
	
	If GUI_Object_IsExistX(objNotification.SwfButton("swfname:=btnYes"), 150) Then
	 	objNotification.SwfButton("swfname:=btnYes").highlight
		GUI_SwfButton_Click objNotification.SwfButton("swfname:=btnYes")
		If GUI_Object_IsExistX(objNotification.SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK"), 300) Then
			objNotification.SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK").highlight
	 		GUI_SwfButton_Click objNotification.SwfWindow("swfname:=FileSystemSelectionDialog").SwfButton("swfname:=btnOK")
		End If
		Wait g_LongWaitLarge
	End If
	
	
End Function



'This function is for selecting Item in Settings ToolBar
'@code
'    Biz_SyncSettings_SelectSettingsToolBarItem(strItem)
'@endcode

Function Biz_SyncSettings_SelectSettingsToolBarItem(strItem)
	
	FRM_Logger_ReportInfoEvent "Biz_SyncSettings_SelectSettingsToolBarItem", "select Item '"&strItem&"'in Settings ToolBar", Null
	
	Dim objMianMenu
	Set objMianMenu = SwfWindow("swfname:=SettingsToolMain").SwfToolbar("swfname:=menuStrip1")
    	
    GUI_SwfToolbar_ShowDropdown objMianMenu,"Settings"		
    GUI_SwfToolbar_Select objMianMenu, "Settings;"&strItem
    Wait g_ShortWaitMedium
    
    Set objMianMenu = Nothing
    
End Function


'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\SyncSettings\SyncSettings.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\AmortizationSchedule.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup : BIZ_Tools_AmortizationSchedule 
'
' List of functions here
'@code
'	Function BIZ_AmortizationSchedule_VerifyCalculations(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to verify multiple calculation values in Amortization Schedule table
'@code
'	Function BIZ_AmortizationSchedule_VerifyCalculations(strRowID)
'@endcode
'@param strRowID - row ID in test data sheet 

Function BIZ_AmortizationSchedule_VerifyCalculations(strRowID)
	
	Dim strRowNumber,strColumnName,strExpectedValue,strCustomMessage
	
	Set objAmortDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog").SwfObject("swfname:=amortListview")
	Set objData        = FRM_DS_GetTestData("Tools_AmortizationSchedule","VerifyAmortizationScheduleCalc",strRowID)
	
	GUI_Object_WaitTillExistX objAmortDialog,25
	
	strRowNumber     = Split(FRM_DS_GetValue(objData,"RowNumber"),";")
	strColumnName    = Split(FRM_DS_GetValue(objData,"ColumnName"),";")
	strExpectedValue = Split(FRM_DS_GetValue(objData,"ExpectedValue"),";")
	strCustomMessage = Split(FRM_DS_GetValue(objData,"CustomMessage"),";")
    
	For i = 0 To Ubound(strRowNumber) Step 1
		GUI_List_ValidateCellDataWithCustomMsg objAmortDialog,strRowNumber(i),strColumnName(i),strExpectedValue(i),_
		strCustomMessage(i)
	Next
	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog").SwfButton("swfname:=okBtn")
	
	Set objAmortDialog = Nothing
	Set objData        = Nothing
	
End Function

Function BIZ_Amortization_Schedule(strRowID1,strRowID2,strExpectedMtgIns,strFlagMIP)
	'========set test data in MIP/Funding/GuaranteeFee dialog=========
	BIZ_Forms_Open "Borrower Summary - Origination"
	BIZ_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation strRowID1
	If lcase(strFlagMIP)="yes" Then
		BIZ_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation strRowID1
	End If
	
	'================Expected Mtg Ins is blank/empty ======
	Set objMtgIns=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=1").WebEdit("html id:=l_232")
	strActualMtgIns=GUI_Object_GetPropertyValue(objMtgIns,"value")
	'strExpectedMtgIns = ""
	FRM_VerifyEqual strActualMtgIns,strExpectedMtgIns,"Verify Mortgage Insurance in Total Monthly Payment","Mortgage Insurance should be match in Total Monthly Payment"
	'=================close Total Monthly Payment window===========
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")
	
	BIZ_Tools_Open "Amortization Schedule"
	'==========verify default option complete Schedule=====
	Set objAmortDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog")
	GUI_Object_ValidateProperty objAmortDialog.SwfRadioButton("text:=Complete Schedule"),"checked",True,"Complete Schedule checked as default"
	
	'===========Validate cell data in Amortization Schedule Tool ===========
	BIZ_AmortizationSchedule_VerifyCalculations strRowID2
	
	Set objAmortDialog = Nothing	
End Function



Function BIZ_Amortization_Schedule_USDA(strRowID1,strRowID2,strExpectedMtgIns)
	'========set test data in MIP/Funding/GuaranteeFee dialog=========	
	BIZ_Forms_Open "Borrower Summary - Origination"
	Set objMipDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfWindow("swfname:=MIPUSDADialog")
	BIZ_Common_BorrowerSummaryOrigination_SetMIPGuaranteeFeeCalculation objMipDialog,strRowID1
	
	'==============verify data entry in  MIP/Funding/GuaranteeFee dialog================
	BIZ_Common_BorrowerSummaryOrigination_VerifyMIPGuaranteeFeeCalculation objMipDialog,strRowID1
	
	Set objMtgIns=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=1").WebEdit("html id:=l_234")
	strActualMtgIns=GUI_Object_GetPropertyValue(objMtgIns,"value")
	FRM_VerifyEqual strActualMtgIns,strExpectedMtgIns,"Verify Mortgage Insurance in Total Monthly Payment","Mortgage Insurance in Total Monthly Payment"
	
	'=================close Total Monthly Payment window=====================
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose")

	
	BIZ_Tools_Open "Amortization Schedule"
	'==========verify default option complete Schedule=====
	Set objAmortDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog")
	GUI_Object_ValidateProperty objAmortDialog.SwfRadioButton("text:=Complete Schedule"),"checked",True,"Complete Schedule checked as default"
	
	'===========Validate cell data in Amortization Schedule Tool ===========
	BIZ_AmortizationSchedule_VerifyCalculations strRowID2
	
	Set objAmortDialog = Nothing	
End Function


'@**************************************************************************************************
'@ Name: BIZ_ProjectedPayment_ARMLoanType_InterestOnly_Validation
'@ Parameter: strRowID
  '***************************************************************************************************
Function BIZ_ProjectedPayment_ARMLoanType_InterestOnly_Validation(strRowID)
	Dim objLoan,objData,intYearNum,dblPIMin,dblPIMax,dblMI,dblEstEscrow,strTotalPay,dblTotalPayMin,dblTotalPayMax
	Dim intYearNum2,dblPIMin2,dblPIMax2,dblMI2,dblEstEscrow2,dblTotalPayMin2,dblTotalPayMax2
	Dim intYearNum3,dblPIMin3,dblPIMax3,dblMI3,dblEstEscrow3,dblTotalPayMin3,dblTotalPayMax3
	Dim intYearNum4From,intYearNum4To,dblPIMin4,dblPIMax4,dblMI4,dblEstEscrow4,dblTotalPayMin4,dblTotalPayMax4
	
	Set objLoan			=	SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0")
	Set objData     	= 	FRM_DS_GetTestData("Forms_LoanEstimatePage", "ProjectedPayments", strRowID)	
	
	'@ Handling Sync Issues
	GUI_Object_WaitTillExistX objLoan.WebEdit("html id:=TextBox33"), 360
	
	'@ Year 1 Column Data
	intYearNum			=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox33"), "Value" ) )
	dblPIMin			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox11"), "Value" ) )
	dblPIMax			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox11"), "Value" ) )
	dblMI				=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox59"), "Value" ) )
	dblEstEscrow		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox58"), "Value" ) )
	strTotalPay			=	CStr( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox39"), "Value" ) )
	dblTotalPayMin		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox12"), "Value" ) )
	dblTotalPayMax		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox12"), "Value" ) )
	
	'@ Validation Part Of Year 1 Column
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Year '"&intYearNum&"' Values Validation", Null
	
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox33"), Trim(FRM_DS_GetValue(objData,"LE1.X41_Year")), "Column-1"
	FRM_VerifyEqual dblPIMin, CDbl(FRM_DS_GetValue(objData, "LE1.X42_MinPI")),"Principal & Interest","Minimum Value Verification"
	FRM_VerifyEqual dblPIMax, CDbl(FRM_DS_GetValue(objData, "LE1.X43_MaxPI")),"Principal & Interest","Maximum Value Verification"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"), FRM_DS_GetValue(objData, "LE1.X44_InterestOnly"), "Interest Only Checkbox Validation"
	FRM_VerifyEqual dblMI, CDbl(FRM_DS_GetValue(objData, "LE1.X45_Mort.Insurance")),"Mortgage Insurance"," Value Verification"
	FRM_VerifyEqual dblEstEscrow, CDbl(FRM_DS_GetValue(objData, "LE1.X46_Est.Escrow")),"Estimated Escrow","Estimated Escrow Value Verification"
	FRM_VerifyEqual strTotalPay, FRM_DS_GetValue(objData, "3291_PaymentFrequency"),"Total Estimated Escrow","Total Est. EscrowValue Verification"
	FRM_VerifyEqual dblTotalPayMin, CDbl(FRM_DS_GetValue(objData, "LE1.X47_MinEst.BiWeeklyorMonPay.")),"Total Estimated '"&strTotalPay&"' Payment ","Minimum Value Verification"
	FRM_VerifyEqual dblTotalPayMax, CDbl(FRM_DS_GetValue(objData, "LE1.X48_MaxEst.BiWeeklyorMonPay.")),"Total Estimated '"&strTotalPay&"' Payment ","Maximum Value Verification"
	
	
	'@ Year 2 Column Data
	intYearNum2			=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox34"), "Value" ) )
	dblPIMin2			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox21"), "Value" ) )
	dblPIMax2			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox21"), "Value" ) )
	dblMI2				=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox52"), "Value" ) )
	dblEstEscrow2		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox51"), "Value" ) )
	dblTotalPayMin2		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox22"), "Value" ) )
	dblTotalPayMax2		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox22"), "Value" ) )
	
	'@ Validation Part Of Year 2 Column
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Year '"&intYearNum2&"' Values Validation", Null
	
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox34"), Trim(FRM_DS_GetValue(objData,"LE1.X49_Year")), "Column-2"
	FRM_VerifyEqual dblPIMin2, CDbl(FRM_DS_GetValue(objData, "LE1.X51_MinPI")),"Principal & Interest","Minimum Value Verification"
	FRM_VerifyEqual dblPIMax2, CDbl(FRM_DS_GetValue(objData, "LE1.X52_MaxPI")),"Principal & Interest","Maximum Value Verification"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"), FRM_DS_GetValue(objData, "LE1.X53_InterestOnly"), "Interest Only Checkbox Validation"
	FRM_VerifyEqual dblMI2, CDbl(FRM_DS_GetValue(objData, "LE1.X54_Mort.Insurance")),"Mortgage Insurance"," Value Verification"
	FRM_VerifyEqual dblEstEscrow2, CDbl(FRM_DS_GetValue(objData, "LE1.X55_Est.Escrow")),"Estimated Escrow","Estimated Escrow Value Verification"
	FRM_VerifyEqual dblTotalPayMin2, CDbl(FRM_DS_GetValue(objData, "LE1.X56_MinEst.BiWeekMon")),"Total Estimated '"&strTotalPay&"' Payment ","Minimum Value Verification"
	FRM_VerifyEqual dblTotalPayMax2, CDbl(FRM_DS_GetValue(objData, "LE1.X57_MaxEst.BiWeekMon")),"Total Estimated '"&strTotalPay&"' Payment ","Maximum Value Verification"
	
	
	'@ Year 3 Column Data
	intYearNum3			=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox35"), "Value" ) )
	dblPIMin3			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox31"), "Value" ) )
	dblPIMax3			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox31"), "Value" ) )
	dblMI3				=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox66"), "Value" ) )
	dblEstEscrow3		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox65"), "Value" ) )
	dblTotalPayMin3		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox32"), "Value" ) )
	dblTotalPayMax3		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox32"), "Value" ) )
	
	'@ Validation Part Of Year 3 Column
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Year '"&intYearNum3&"' Values Validation", Null
	
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox35"), Trim(FRM_DS_GetValue(objData,"LE1.X58_Years")), "Column-3"
	FRM_VerifyEqual dblPIMin3, CDbl(FRM_DS_GetValue(objData, "LE1.X60_MinPI")),"Principal & Interest","Minimum Value Verification"
	FRM_VerifyEqual dblPIMax3, CDbl(FRM_DS_GetValue(objData, "LE1.X61_MaxPI")),"Principal & Interest","Maximum Value Verification"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox11_Ctrl"), FRM_DS_GetValue(objData, "LE1.X62_InterestOnly"), "Interest Only Checkbox Validation"
	FRM_VerifyEqual dblMI3, CDbl(FRM_DS_GetValue(objData, "LE1.X63_Mort.Insurance")),"Mortgage Insurance"," Value Verification"
	FRM_VerifyEqual dblEstEscrow3, CDbl(FRM_DS_GetValue(objData, "LE1.X64_Est.Escrow")),"Estimated Escrow","Estimated Escrow Value Verification"
	FRM_VerifyEqual dblTotalPayMin3, CDbl(FRM_DS_GetValue(objData, "LE1.X65_MinEstBiweekMonPay")),"Total Estimated '"&strTotalPay&"' Payment ","Minimum Value Verification"
	FRM_VerifyEqual dblTotalPayMax3, CDbl(FRM_DS_GetValue(objData, "LE1.X66_EstBiweekMonPay")),"Total Estimated '"&strTotalPay&"' Payment ","Maximum Value Verification"
	
	
	'@ Year 4 Column Data
	intYearNum4From		=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox84"), "Value" ) )
	intYearNum4To		=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox76"), "Value" ) )
	dblPIMin4			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox41"), "Value" ) )
	dblPIMax4			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox41"), "Value" ) )
	dblMI4				=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox36"), "Value" ) )
	dblEstEscrow4		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox37"), "Value" ) )
	dblTotalPayMin4		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox42"), "Value" ) )
	dblTotalPayMax4		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox42"), "Value" ) )
	
	'@ Validation Part Of Year 4 Column
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Year '"&intYearNum4From&"' To Year '"&intYearNum4To&"' Values Validation", Null
	
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox84"), Trim(FRM_DS_GetValue(objData,"LE1.X67_Years")), "Column-4"
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox76"), Trim(FRM_DS_GetValue(objData,"LE1.X68_Years")), "Column-4"
	FRM_VerifyEqual dblPIMin4, CDbl(FRM_DS_GetValue(objData, "LE1.X69_MinEst.BiWeekMon")),"Principal & Interest","Minimum Value Verification"
	FRM_VerifyEqual dblPIMax4, CDbl(FRM_DS_GetValue(objData, "LE1.X70_MaxEst.BiWeekMon")),"Principal & Interest","Maximum Value Verification"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox12_Ctrl"), FRM_DS_GetValue(objData, "LE1.X71__InterestOnly"), "Interest Only Checkbox Validation"
	FRM_VerifyEqual dblMI4, CDbl(FRM_DS_GetValue(objData, "LE1.X72_Mort.Insurance")),"Mortgage Insurance"," Value Verification"
	FRM_VerifyEqual dblEstEscrow4, CDbl(FRM_DS_GetValue(objData, "LE1.X73_Est.Escrow")),"Estimated Escrow","Estimated Escrow Value Verification"
	FRM_VerifyEqual dblTotalPayMin4, CDbl(FRM_DS_GetValue(objData, "LE1.X74_MinEstBiweekMonPay")),"Total Estimated '"&strTotalPay&"' Payment ","Minimum Value Verification"
	FRM_VerifyEqual dblTotalPayMax4, CDbl(FRM_DS_GetValue(objData, "LE1.X75_MaxEstBiweekMonPay")),"Total Estimated '"&strTotalPay&"' Payment ","Maximum Value Verification"
	
	Set objLoan			=	Nothing
	Set objData     	= 	Nothing	
End Function



''@**************************************************************************************************
'@ Name: BIZ_ProjectedPayment_ARMLoanType_BalloonAndMITermination_InterestOnly_Validation
'@ Parameter: strRowID
  '***************************************************************************************************

Function BIZ_ProjectedPayment_ARMLoanType_BalloonAndMITermination_InterestOnly_Validation(strRowID)

	Dim objLoan,objData,intYearNum,dblPIMin,dblPIMax,dblMI,dblEstEscrow,strTotalPay,dblTotalPayMin,dblTotalPayMax
	Dim intYearNum2,dblPIMin2,dblPIMax2,dblMI2,dblEstEscrow2,dblTotalPayMin2,dblTotalPayMax2
	Dim intYearNum3From,intYearNum3To,dblPIMin3,dblPIMax3,dblMI3,dblEstEscrow3,dblTotalPayMin3,dblTotalPayMax3
	Dim strYear4,dblPIMin4,dblPIMax4,dblMI4,dblEstEscrow4,dblTotalPayMin4,dblTotalPayMax4
	
	Set objLoan			=	SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0")
	Set objData     	= 	FRM_DS_GetTestData("Forms_LoanEstimatePage", "ProjectedPayments", strRowID)	
	
	'@ Handling Sync Issues
	GUI_Object_WaitTillExistX objLoan.WebEdit("html id:=TextBox33"), 240
	
	'@ Year 1 Column Data
	intYearNum			=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox33"), "Value" ) )
	dblPIMin			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox11"), "Value" ) )
	dblPIMax			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox11"), "Value" ) )
	dblMI				=	Round(CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox59"), "Value" ) ))
	dblEstEscrow		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox58"), "Value" ) )
	strTotalPay			=	CStr( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox39"), "Value" ) )
	dblTotalPayMin		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox12"), "Value" ) )
	dblTotalPayMax		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox12"), "Value" ) )
	
	'@ Validation Part Of Year 1 Column
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Year '"&intYearNum&"' Values Validation", Null
	
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox33"), Trim(FRM_DS_GetValue(objData,"LE1.X41_Year")), "Column-1"
	FRM_VerifyEqual dblPIMin, CDbl(FRM_DS_GetValue(objData, "LE1.X42_MinPI")),"Principal & Interest","Minimum Value Verification"
	FRM_VerifyEqual dblPIMax, CDbl(FRM_DS_GetValue(objData, "LE1.X43_MaxPI")),"Principal & Interest","Maximum Value Verification"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"), FRM_DS_GetValue(objData, "LE1.X44_InterestOnly"), "Interest Only Checkbox Validation"
	dblExpectedMI=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X45_Mort.Insurance")))
	FRM_VerifyEqual dblMI,dblExpectedMI,"Mortgage Insurance"," Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance
	dblExpectedEstEscrow=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X46_Est.Escrow")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedEstEscrow=dblExpectedEstEscrow+dblExpectedMI
	FRM_VerifyEqual dblEstEscrow,dblExpectedEstEscrow ,"Estimated Escrow","Estimated Escrow Value Verification"
	FRM_VerifyEqual strTotalPay, FRM_DS_GetValue(objData, "3291_PaymentFrequency"),"Total Estimated Escrow","Total Est. EscrowValue Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance	
	dblExpectedTotalPayMin=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X47_MinEst.BiWeeklyorMonPay.")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedTotalPayMin=dblExpectedTotalPayMin+dblExpectedMI
	FRM_VerifyEqual dblTotalPayMin,dblExpectedTotalPayMin ,"Total min. Estimated '"&strTotalPay&"' Payment ","Minimum Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance
	dblExpectedTotalPayMax=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X48_MaxEst.BiWeeklyorMonPay.")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedTotalPayMax=dblExpectedTotalPayMax+dblExpectedMI	
	FRM_VerifyEqual dblTotalPayMax,dblExpectedTotalPayMax ,"Total max. Estimated '"&strTotalPay&"' Payment ","Maximum Value Verification"
	
	
	'@ Year 2 Column Data
	intYearNum2			=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox34"), "Value" ) )
	dblPIMin2			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox21"), "Value" ) )
	dblPIMax2			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox21"), "Value" ) )
	dblMI2				=	Round(CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox52"), "Value" ) ))
	dblEstEscrow2		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox51"), "Value" ) )
	dblTotalPayMin2		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox22"), "Value" ) )
	dblTotalPayMax2		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox22"), "Value" ) )
	
	'@ Validation Part Of Year 2 Column
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Year '"&intYearNum2&"' Values Validation", Null
	
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox34"), Trim(FRM_DS_GetValue(objData,"LE1.X49_Year")), "Column-2"
	FRM_VerifyEqual dblPIMin2, CDbl(FRM_DS_GetValue(objData, "LE1.X51_MinPI")),"Principal & Interest","Minimum Value Verification"
	FRM_VerifyEqual dblPIMax2, CDbl(FRM_DS_GetValue(objData, "LE1.X52_MaxPI")),"Principal & Interest","Maximum Value Verification"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"), FRM_DS_GetValue(objData, "LE1.X53_InterestOnly"), "Interest Only Checkbox Validation"
	dblExpectedMI2=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X54_Mort.Insurance")))
	FRM_VerifyEqual dblMI2,dblExpectedMI2 ,"Mortgage Insurance"," Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance
	dblExpectedEstEscrow2=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X55_Est.Escrow")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedEstEscrow2=dblExpectedEstEscrow2+dblExpectedMI2		
	FRM_VerifyEqual dblEstEscrow2,dblExpectedEstEscrow2 ,"Estimated Escrow","Estimated Escrow Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance	
	dblExpectedTotalPayMin2=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X56_MinEst.BiWeekMon")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedTotalPayMin2=dblExpectedTotalPayMin2+dblExpectedMI2	
	FRM_VerifyEqual dblTotalPayMin2,dblExpectedTotalPayMin2,"Total min. Estimated '"&strTotalPay&"' Payment ","Minimum Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance
	dblExpectedTotalPayMax2=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X57_MaxEst.BiWeekMon")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedTotalPayMax2=dblExpectedTotalPayMax2+dblExpectedMI2	
	FRM_VerifyEqual dblTotalPayMax2,dblExpectedTotalPayMax2 ,"Total max. Estimated '"&strTotalPay&"' Payment ","Maximum Value Verification"
	
	
	'@ Year 3 Column Data
	intYearNum3From		=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox83"), "Value" ) )
	intYearNum3To		=	CInt( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox82"), "Value" ) )
	dblPIMin3			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox31"), "Value" ) )
	dblPIMax3			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox31"), "Value" ) )
	dblMI3				=	Round(CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox66"), "Value" ) ))
	dblEstEscrow3		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox65"), "Value" ) )
	dblTotalPayMin3		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox32"), "Value" ) )
	dblTotalPayMax3		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox32"), "Value" ) )
	
	'@ Validation Part Of Year 3 Column
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Year '"&intYearNum3From&"' To Year '"&intYearNum3To&"' Values Validation", Null
	
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox83"), Trim(FRM_DS_GetValue(objData,"LE1.X58_Years")), "Column-3 Start"
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox82"), Trim(FRM_DS_GetValue(objData,"LE1.X59_Years")), "Column-3 End"
	FRM_VerifyEqual dblPIMin3, CDbl(FRM_DS_GetValue(objData, "LE1.X60_MinPI")),"Principal & Interest","Minimum Value Verification"
	FRM_VerifyEqual dblPIMax3, CDbl(FRM_DS_GetValue(objData, "LE1.X61_MaxPI")),"Principal & Interest","Maximum Value Verification"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox11_Ctrl"), FRM_DS_GetValue(objData, "LE1.X62_InterestOnly"), "Interest Only Checkbox Validation"
	dblExpectedMI3=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X63_Mort.Insurance")))
	FRM_VerifyEqual dblMI3,dblExpectedMI3 ,"Mortgage Insurance"," Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance
	dblExpectedEstEscrow3=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X64_Est.Escrow")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedEstEscrow3=dblExpectedEstEscrow3+dblExpectedMI3	
	FRM_VerifyEqual dblEstEscrow3,dblExpectedEstEscrow3 ,"Estimated Escrow","Estimated Escrow Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance	
	dblExpectedTotalPayMin3=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X65_MinEstBiweekMonPay")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedTotalPayMin3=dblExpectedTotalPayMin3+dblExpectedMI3	
	FRM_VerifyEqual dblTotalPayMin3,dblExpectedTotalPayMin3 ,"Total min. Estimated '"&strTotalPay&"' Payment ","Minimum Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance
	dblExpectedTotalPayMax3=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X66_EstBiweekMonPay")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedTotalPayMax3=dblExpectedTotalPayMax3+dblExpectedMI3
	FRM_VerifyEqual dblTotalPayMax3,dblExpectedTotalPayMax3 ,"Total max. Estimated '"&strTotalPay&"' Payment ","Maximum Value Verification"
	
	
	'@ Year 4 Column Data
	strYear4		 	=	CStr( GUI_Object_GetPropertyValue (objLoan.WebElement("html id:=Label4611"), "innerhtml") )
	dblPIMin4			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox41"), "Value" ) )
	dblPIMax4			=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox41"), "Value" ) )
	strMI4				=	CStr( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox36"), "Value" ) )
	dblMI4				=	CDbl( UTIL_String_ReplaceByPattern ("-",strMI4,Trim(0)))
	strEstEscrow4		=	CStr( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox37"), "Value" ) )
	dblEstEscrow4		=	CDbl( UTIL_String_ReplaceByPattern ("-",strEstEscrow4,Trim(0)))
	dblTotalPayMin4		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox42"), "Value" ) )
	dblTotalPayMax4		=	CDbl( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox42"), "Value" ) )
	
	'@ Validation Part Of Year 4 Column
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1"," '"&strYear4&"' Values Validation", Null
	
	GUI_Object_ValidateProperty objLoan.WebElement("html id:=Label4611"),"innertext", Trim(FRM_DS_GetValue(objData, "LE1.X67_Years")), "Last Column"
	FRM_VerifyEqual dblPIMin4, CDbl(FRM_DS_GetValue(objData, "LE1.X69_MinEst.BiWeekMon")),"Principal & Interest","Minimum Value Verification"
	FRM_VerifyEqual dblPIMax4, CDbl(FRM_DS_GetValue(objData, "LE1.X70_MaxEst.BiWeekMon")),"Principal & Interest","Maximum Value Verification"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox12_Ctrl"), FRM_DS_GetValue(objData, "LE1.X71__InterestOnly"), "Interest Only Checkbox Validation"
	dblExpectedMI4=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X72_Mort.Insurance")))
	FRM_VerifyEqual dblMI4,dblExpectedMI4 ,"Mortgage Insurance"," Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance
	dblExpectedEstEscrow4=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X73_Est.Escrow")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedEstEscrow4=dblExpectedEstEscrow4+dblExpectedMI4		
	FRM_VerifyEqual dblEstEscrow4,dblExpectedEstEscrow4 ,"Estimated Escrow","Estimated Escrow Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance	
	dblExpectedTotalPayMin4=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X74_MinEstBiweekMonPay")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedTotalPayMin4=dblExpectedTotalPayMin4+dblExpectedMI4	
	FRM_VerifyEqual dblTotalPayMin4,dblExpectedTotalPayMin4,"Total min. Estimated '"&strTotalPay&"' Payment ","Minimum Value Verification"
	'---KBYO2 change CBIZ-14112; Now Escrow Calculations is updated to Include Mortgage Insurance
	dblExpectedTotalPayMax4=Round(CDbl(FRM_DS_GetValue(objData, "LE1.X75_MaxEstBiweekMonPay")))
	'----KBYO2 change; this got reverted back as per CBIZ-17156
	'dblExpectedTotalPayMax4=dblExpectedTotalPayMax4+dblExpectedMI4
	FRM_VerifyEqual dblTotalPayMax4,dblExpectedTotalPayMax4 ,"Total Estimated '"&strTotalPay&"' Payment ","Maximum Value Verification"
	
	Set objLoan			=	Nothing
	Set objData     	= 	Nothing
End Function





'@************************************************************************************************** 
'@ Name: BIZ_Validation_ProjectedPaymentTable_FromLEPage1
'***************************************************************************************************
Function BIZ_Validation_ProjectedPaymentTable_FromLEPage1()

	Dim objLoan, intPeriod, intPrincipalAndInterest, boolOnlyInterest, intMortgageInsurance, intTotalMonthlyPayment
	Set objLoan	=	SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0")	
	'@ Handling Sync Issues
	GUI_Object_WaitTillExistX objLoan.WebEdit("html id:=TextBox62"), 240
	
	'@ Getting Values From Project Payments Column-1 From LE Page1
	intPeriod1						=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox62"), "Value" ))
	intPrincipalAndInterest1		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox11"), "Value" ))
	intMortgageInsurance1			=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox59"), "Value" ))
	intEstimatedEscrow1			=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox58"), "Value" ))
	intTotalMonthlyPayment1		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMinBox12"), "Value" ))
	
	'@ Calculating P&I,MI & Escrow Amount In LE Page1 , Column 1
	intAdd1 = CDbl (intPrincipalAndInterest1) + CDbl (intMortgageInsurance1) + CDbl (intEstimatedEscrow1)
	
	'@ Validation Part
	FRM_VerifyEqual CDbl (intTotalMonthlyPayment1), Round (intAdd1), "Calculation Of P&I,MI & Escrow Amount In LE Page1 Column1 And Comparing With Total Est. Monthly Payment", "Both Values Should Match"
	
	'@ Validation Of Interest Only Check box in LE Page1, Column 1
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"),1, "Interest Only Checkbox Should Be Checked"
	
	'================Validating Column -2 values ===================	
	'@ Getting Values From Project Payments Column-2 From LE Page1
	intPeriod2						=	GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox80"), "Value" )
	intPrincipalAndInterest2		=	GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox21"), "Value" )
	intMortgageInsurance2			=	GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox52"), "Value" )
	intMortgageInsurance2			=	UTIL_String_ReplaceByPattern ("-",intMortgageInsurance2,Trim(0))
	intEstimatedEscrow2			=	GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox51"), "Value" )
	intTotalMonthlyPayment2		=	GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox22"), "Value" )
	
	'@ Calculating P&I,MI & Escrow Amount In LE Page1 , Column 2
	intAdd2 = CDbl (intPrincipalAndInterest2) + CDbl ( intMortgageInsurance2) + CDbl (intEstimatedEscrow2)
	
	'@ Validation Part
	FRM_VerifyEqual Round (intTotalMonthlyPayment2), Round (intAdd2), "Calculation Of P&I,MI & Escrow Amount In LE Page1 Column2 And Comparing With Total Est. Monthly Payment", "Both Values Should Match"
	
	'@ Validation Of Interest Only Check box in LE Page1, Column 2
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"),0, "Interest Only Checkbox Should Not Be Checked"
	
	'================Validating Column - 3 values ===================
	'@ Getting Values From Project Payments Column-1 From LE Page1
	intPeriod3						=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox82"), "Value" ))
	intPrincipalAndInterest3		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox31"), "Value" ))
	intMortgageInsurance3			=	GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox66"), "Value" )
	intMortgageInsurance3			=	UTIL_String_ReplaceByPattern ("-",intMortgageInsurance3,Trim(0))
	intEstimatedEscrow3			=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox65"), "Value" ))
	intTotalMonthlyPayment3		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox32"), "Value" ))
	
	'@ Calculating P&I,MI & Escrow Amount In LE Page1 , Column 1
	intAdd3 = CDbl (intPrincipalAndInterest3) + CDbl (intMortgageInsurance3) + CDbl (intEstimatedEscrow3)
	
	'@ Validation Part
	FRM_VerifyEqual CDbl (intTotalMonthlyPayment3), Round (intAdd3), "Calculation Of P&I,MI & Escrow Amount In LE Page1 Column1 And Comparing With Total Est. Monthly Payment", "Both Values Should Match"
	
	'@ Validation Of Interest Only Check box in LE Page1, Column 1
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox11_Ctrl"),0, "Interest Only Checkbox Should Not Be Checked"
	
	'================Validating Final Pament  Amortization Schedule Pop-up ===================
	Set objAmortizationPopup	=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog")
	
	'@ Getting Values From Project Payments Column-3 From LE Page1
	intFinalyPaymentLEPage1		=	CDbl ( GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox42"), "Value" ) )	
	GUI_WebButton_Click objLoan.WebButton("html id:=Button10","name:=View Payment Schedule")
	
	'Checking For Amortization Schedule Pop-up Existance
	If GUI_Object_IsExist ( objAmortizationPopup ) Then
	
		intTotalNumberOfRowsInPopup = GUI_List_GetNumberofRows (objAmortizationPopup.SwfObject("swfname:=amortListview"))
		intAmortizationPayment = CDbl ( (GUI_List_GetCellData (objAmortizationPopup.SwfObject("swfname:=amortListview"),intTotalNumberOfRowsInPopup-1,3)) )
		
		If Len ( intAmortizationPayment ) > 0 Then
			FRM_Logger_ReportInfoEvent "Payment Value Retrieved From Amortization Schedule Pop-up","Value Retrieved From Payment Field : '"&intAmortizationPayment&"' ", Null
		Else
			FRM_Logger_ReportFailEvent "Payment Value Retrieved From Amortization Schedule Pop-up","No Value Retrieved From Payment Field ", Null
		End If
		
		GUI_Window_Close objAmortizationPopup
		
	Else
		FRM_Logger_ReportDebugEvent "Amortization Pop-up","Amortization Schedule Dialog Doesn't Exists", Null
	End If
	
	'@ Validation Part
	FRM_VerifyEqual CDbl(intFinalyPaymentLEPage1), CDbl (intAmortizationPayment) , "Final Payment In LE Page1 & From Amortization Schedule Pop-Up", "Both Should Match"
	
	'================Validations =====================	
	BIZ_ValidateProjectedPaymentTable_FixedLoanType_Balloon_InterestOnly intPeriod1, intPrincipalAndInterest1, intMortgageInsurance1, intTotalMonthlyPayment1
	BIZ_ValidateProjectedPaymentTable_FixedLoanType_Balloon_InterestOnly intPeriod2, intPrincipalAndInterest2, intMortgageInsurance2, intTotalMonthlyPayment2
	BIZ_ValidateProjectedPaymentTable_FixedLoanType_Balloon_InterestOnly intPeriod3, intPrincipalAndInterest3, intMortgageInsurance3, intTotalMonthlyPayment3
'
End Function


'@************************************************************************************************** 
'@ Name: ProjectedPayment_FixedLoan_BalloonandMI_Termination
'@ Parameter: strRowID
'***************************************************************************************************
Function ProjectedPayment_FixedLoan_BalloonandMI_Termination(strRowID)
	
	Dim objLoan, objAmortizationPopup, objProjectedPayments, objData 

	ArrCheckBox					= 	Array("Escrowed")
	Set objLoan					=	SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0")
	Set objAmortizationPopup	=	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AmortSchDialog")
	Set objProjectedPayments	=	SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0").WebTable("html id:=","html tag:=TABLE","index:=3")
	Set objData					= 	FRM_DS_GetTestData("Forms_LoanEstimatePage", "ProjectedPayments", strRowID)
	
	BIZ_Forms_Open "2015 Itemization"
	BIZ_2015Itemization_Set1000Section strRowID
	
	'===== click on escrowed checkbox =====
	BIZ_2015Itemization_FeeDetails_ClickCheckbox "1004",ArrCheckBox
	BIZ_Forms_Open "1003 Page 1"
	BIZ_1003Page1_ClickEditIconFor1045()
	BIZ_MIPDialog_SetDetails strRowID
	GUI_SwfButton_Click objLoan.SwfWindow("swfname:=MIPDialog").SwfButton("swfname:=okBtn")
	
	'===== Loan Estimate Page 1 Values Retrieval =====
	BIZ_Forms_Open "Loan Estimate Page 1"
	
	'@ Handling Sync Issues
	GUI_Object_WaitTillExistX objProjectedPayments.WebEdit("html id:=TextBox62"), 240
	
	'@ Getting Period Start & End Values For Column 1
	strPeriod				=	CStr ((objProjectedPayments.WebElement("html id:=Label25","index:=0").GetROProperty("innertext")))
	strPeriodStartForCol1	=	CStr (UTIL_String_ReplaceByPattern ("-", strPeriod, "" ))
	intPeriodEndForCol1 	= 	CInt (GUI_Object_GetPropertyValue (objProjectedPayments.WebEdit("html id:=TextBox62"), "Value"))
	
	'@ Getting Values From Project Payments Column-1 From LE Page1
	dblPeriod1					=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox62"), "Value" ))
	dblPrincipalAndInterest1	=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox11"), "Value" ))
	dblMortgageInsurance1		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox59"), "Value" ))
	dblEstimatedEscrow1			=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox58"), "Value" ))
	dblTotalMonthlyPayment1		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox12"), "Value" ))
	
	FRM_Logger_ReportInfoEvent "'Projected Payments' header validation Under column 1", "'Projected Payments' header validation Under column 1 From '"&strPeriodStartForCol1&"' To '"&intPeriodEndForCol1&"'", null
	
	'@ Calculating P&I,MI & Escrow Amount In LE Page1 , Column 1
	GUI_Object_ValidateProperty objLoan.WebElement("html id:=Label25","index:=0"),"innertext", Trim(FRM_DS_GetValue(objData, "Start")), "Start Period"
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox62"), Trim(FRM_DS_GetValue(objData,"LE1.X41_Year")), "End Period"
	dblAdd1 = CDbl(dblPrincipalAndInterest1) + CDbl(dblMortgageInsurance1) + CDbl(dblEstimatedEscrow1)
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	FRM_VerifyEqual Round(dblTotalMonthlyPayment1), Round(dblAdd1), "Calculation Of P&I,MI & Escrow Amount In LE Page1 Column1 And Comparing With Total Est. Monthly Payment", "Both Values Should Match"
	
	'@ Validation Of Interest Only Check box in LE Page1, Column 1
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"),0, "Interest Only Checkbox Should Not Be Checked"
	BIZ_ValidateProjectedPaymentTable_FixedLoanType_Balloon dblPeriod1, dblPrincipalAndInterest1, dblMortgageInsurance1, dblTotalMonthlyPayment1
	FRM_Logger_ReportInfoEvent "Estimated Escrow","Column 1 Is:'"&dblEstimatedEscrow1&"' ",Null
	
	'@ Getting Period Start & End Values For Column 2
	intPeriodStartForCol2 	= 	CInt (GUI_Object_GetPropertyValue (objProjectedPayments.WebEdit("html id:=TextBox81"), "Value"))
	intPeriodEndForCol2 	= 	CInt (GUI_Object_GetPropertyValue (objProjectedPayments.WebEdit("html id:=TextBox80"), "Value"))
	
	FRM_Logger_ReportInfoEvent "'Projected Payments' header validation Under column 2", "'Projected Payments' header validation Under column 2 From Years '"&intPeriodStartForCol2&"' To '"&intPeriodEndForCol2&"' ", null
	
	'@ Getting Values From Project Payments Column-2 From LE Page1
	intPeriod2						=	CInt (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox80"), "Value" ))
	dblPrincipalAndInterest2		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox21"), "Value" ))
	strMortgageInsurance2			=	CStr (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox52"), "Value" ))
	intMortgageInsurance2			=	Cint (UTIL_String_ReplaceByPattern ("-",strMortgageInsurance2,Trim(0)))
	dblEstimatedEscrow2				=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox51"), "Value" ))
	dblTotalMonthlyPayment2			=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox22"), "Value" ))
	
	'@ Calculating P&I,MI & Escrow Amount In LE Page1 , Column 2
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox81"), Trim(FRM_DS_GetValue(objData,"LE1.X49_Year")), "Start Period"
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox80"), Trim(FRM_DS_GetValue(objData,"LE1.X50_Year")), "End Period"
	dblAdd2 = CDbl(dblPrincipalAndInterest2) + CDbl(intMortgageInsurance2) + CDbl(dblEstimatedEscrow2)
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	FRM_VerifyEqual Round(dblTotalMonthlyPayment2), Round(dblAdd2), "Calculation Of P&I,MI & Escrow Amount In LE Page1 Column2 And Comparing With Total Est. Monthly Payment", "Both Values Should Match"
	
	'@ Validation Of Interest Only Check box in LE Page1, Column 2
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"),0, "Interest Only Checkbox Should Not Be Checked"
	BIZ_ValidateProjectedPaymentTable_FixedLoanType_Balloon intPeriod2, dblPrincipalAndInterest2, intMortgageInsurance2, dblTotalMonthlyPayment2
	FRM_Logger_ReportInfoEvent "Estimated Escrow","Column 2 Is:'"&dblEstimatedEscrow2&"' ",Null
	
	'@ Getting Period Start & End Values For Column 3
	strFinalCol	=	CStr ((objProjectedPayments.WebElement("html id:=Label4611","index:=0").GetROProperty("innertext")))
	
	FRM_Logger_ReportInfoEvent "'Projected Payments' header validation Under column 3", "'Projected Payments' header validation Under column '"&strFinalCol&"' ", null
	
	'@ Getting Values From Project Payments Column-3 From LE Page1
	GUI_Object_ValidateProperty objProjectedPayments.WebElement("html id:=Label4611","index:=0"),"innertext", Trim(FRM_DS_GetValue(objData, "End")), "Final Period"
	dblFinalyPaymentLEPage1		=	CDbl(GUI_Object_GetPropertyValue(objLoan.WebEdit("html id:=pjtMaxBox31"),"Value"))
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox66"), FRM_DS_GetValue(objData,"LE1.X63_Mort.Insurance"), "Mortgage Insurance"
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox65"), FRM_DS_GetValue(objData,"LE1.X64_Est.Escrow"), "Estimated Escrow"
	'@ Validation Of Interest Only Check box in LE Page1, Column 1
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox11_Ctrl"),0, "Interest Only Checkbox Should Not Be Checked"
	GUI_WebButton_Click objLoan.WebButton("html id:=Button10","name:=View Payment Schedule")
	
	'@ Checking For Amortization Schedule Pop-up Existance
	If GUI_Object_IsExist ( objAmortizationPopup ) Then
		intTotalNumberOfRowsInPopup = CInt (GUI_List_GetNumberofRows(objAmortizationPopup.SwfObject("swfname:=amortListview")))
		dblAmortizationPayment = CDbl((GUI_List_GetCellData(objAmortizationPopup.SwfObject("swfname:=amortListview"),intTotalNumberOfRowsInPopup-1,3)))
		If Len (dblAmortizationPayment) > 0 Then
			FRM_Logger_ReportInfoEvent "Payment Value Retrieved From Amortization Schedule Pop-up","Value Retrieved From Payment Field : '"&dblAmortizationPayment&"' ", Null
		Else
			FRM_Logger_ReportFailEvent "Payment Value Retrieved From Amortization Schedule Pop-up","No Value Retrieved From Payment Field ", Null
		End If
		GUI_Window_Close objAmortizationPopup
	Else
		FRM_Logger_ReportDebugEvent "Amortization Pop-up","Amortization Schedule Dialog Doesn't Exists", Null
	End If
	
	'@ Validation Part
	FRM_VerifyEqual CDbl(dblFinalyPaymentLEPage1), CDbl(dblAmortizationPayment) , "Final Payment In LE Page1 & From Amortization Schedule Pop-Up", "Both Should Match"
	
	Set objLoan					=	Nothing
	Set objAmortizationPopup	=	Nothing
	Set objProjectedPayments	=	Nothing
	Set objData					= 	Nothing
End Function


'This function is for validation of values from LE page1 with amortization pop-up
'@code
'    ValidateProjectedPaymentTable_FixedLoanType (intEndOfTimePeriodFromLEPage1, dblPrincipalAndInterest, dblMortgageInsurance, dblTotalMonthlyPayment)
'@endcode
'@param intEndOfTimePeriodFromLEPage1 - end period of time
'@param dblPrincipalAndInterest - sum of principal and interest from LE Page1
'@param dblMortgageInsurance - MI from LE Page1
'@param dblTotalMonthlyPayment - Total Monthly Payment from LE Page1

Function BIZ_ValidateProjectedPaymentTable_FixedLoanType_Balloon(intEndOfTimePeriodFromLEPage1, dblPrincipalAndInterest, dblMortgageInsurance, dblTotalMonthlyPayment)
	
	Dim dblTotalOfPrincipalAndInterest, dblMI
	
	dblTotalOfPrincipalAndInterest	=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "SumOfPrincipal&Interest" )
	dblMI							=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "MI" )
	
	dblTotalOfPrincipalAndInterest 				   = CDBL(Trim(dblTotalOfPrincipalAndInterest))
	dblMI					      				   = CDBL(Trim(dblMI))
	
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	
	'@ Validation Part
	FRM_VerifyEqual Round(dblPrincipalAndInterest), Round(dblTotalOfPrincipalAndInterest), "Total Of Principal And Interest Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	FRM_VerifyEqual Round(dblMortgageInsurance), Round(dblMI), "Mortgage Insurance(MI) Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	
End Function



'This function is for validation of values from LE page1 with amortization pop-up
'@code
'    ValidateProjectedPaymentTable_FixedLoanType (intEndOfTimePeriodFromLEPage1, intPrincipalAndInterest, intMortgageInsurance, intTotalMonthlyPayment)
'@endcode
'@param: intEndOfTimePeriodFromLEPage1 - end period of time
'@param: intPrincipalAndInterest - sum of principal and interest from LE Page1
'@param: intMortgageInsurance - MI from LE Page1
'@param: intTotalMonthlyPayment - Total Monthly Payment from LE Page1

Function BIZ_ValidateProjectedPaymentTable_FixedLoanType_Balloon_InterestOnly(intEndOfTimePeriodFromLEPage1, intPrincipalAndInterest, intMortgageInsurance, intTotalMonthlyPayment)
	
	Dim intTotalOfPrincipalAndInterest, intMI, intPrincipal, intInterest
	
	intTotalOfPrincipalAndInterest	=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "SumOfPrincipal&Interest" )
	intMI							=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "MI" )
	intPrincipal					=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "Principal" )
	intInterest						=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "Interest" )
	
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	
	'@ Validation Part
	FRM_VerifyEqual Round(intPrincipalAndInterest), Round(intTotalOfPrincipalAndInterest), "Total Of Principal And Interest Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	FRM_VerifyEqual Round(intMortgageInsurance), Round(intMI), "Mortgage Insurance(MI) Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	
End Function






'@************************************************************************************************** 
'@ Name: ProjectedPaymentTable_FixedLoanTypeInterestOnly
'@ TestData: Parameter
 
'***************************************************************************************************
Function ProjectedPaymentTable_FixedLoanTypeInterestOnly(strRowID)
	Dim objLoan, ArrCheckBox, objData

	Set objData	= 	FRM_DS_GetTestData("Forms_LoanEstimatePage", "ProjectedPayments", strRowID)
	Set objLoan	= SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0")
	
	FRM_Logger_ReportInfoEvent "'Projected Payments' header validation Under column 1", "'Projected Payments' header validation Under column 1 started", null
	
	'@ Handling Sync Issues
	GUI_Object_WaitTillExistX objLoan.WebEdit("html id:=TextBox62"), 240
	
	'@ Getting Values From Project Payments Column-1 From LE Page1
	dblPeriod1					=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox62"), "Value" ))
	dblPrincipalAndInterest1	=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox11"), "Value" ))
	dblMortgageInsurance1		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox59"), "Value" ))
	dblEstimatedEscrow1			=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox58"), "Value" ))
	dblTotalMonthlyPayment1		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox12"), "Value" ))
	
	'@ Validation Of Interest Only Check box in LE Page1, Column 1
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Year-1 To '"&dblPeriod1&"' Values Validation", Null
	GUI_Object_ValidateProperty objLoan.WebElement("html id:=Label25","index:=0"),"innertext", Trim(FRM_DS_GetValue(objData, "Start")), "Start Period"
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox62"), Trim(FRM_DS_GetValue(objData,"LE1.X41_Year")), "End Period"
	
	'@ Calculating P&I,MI & Escrow Amount In LE Page1 , Column 1
	dblAdd1 = CDbl(dblPrincipalAndInterest1) + CDbl(dblMortgageInsurance1) + CDbl(dblEstimatedEscrow1)
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	FRM_VerifyEqual CDbl(dblTotalMonthlyPayment1), Round (dblAdd1), "Calculation Of P&I,MI & Escrow Amount In LE Page1 Column1 And Comparing With Total Est. Monthly Payment", "Both Values Should Match"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"),1, "Interest Only Checkbox Should Be Checked"
	BIZ_ValidateProjectedPaymentTable_FixedLoanTypeInterestOnly dblPeriod1, dblPrincipalAndInterest1, dblMortgageInsurance1, dblTotalMonthlyPayment1
	
	FRM_Logger_ReportInfoEvent "'Projected Payments' header validation Under column 2", "'Projected Payments' header validation Under column 2 started", null
	
	'@ Getting Values From Project Payments Column-2 From LE Page1
	intYearFrom						=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox81"), "Value" ))
	intYearTo						=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox80"), "Value" ))
	dblPeriod2						=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox80"), "Value" ))
	dblPrincipalAndInterest2		=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox21"), "Value" ))
	dblMortgageInsurance2			=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox52"), "Value" ))
	dblEstimatedEscrow2				=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox51"), "Value" ))
	dblTotalMonthlyPayment2			=	CDbl (GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox22"), "Value" ))
	
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	
	'@ Validation Of Interest Only Check box in LE Page1, Column 2
	FRM_Logger_ReportInfoEvent "Projected Payment Table In LE Page-1","Years - '"&intYearFrom&"' To '"&intYearTo&"' Values Validation", Null
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox81"), Trim(FRM_DS_GetValue(objData,"LE1.X49_Year")), "Start Period"
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox80"), Trim(FRM_DS_GetValue(objData,"LE1.X50_Year")), "End Period"
	'@ Calculating P&I,MI & Escrow Amount In LE Page1 , Column 2
	dblAdd2 = CDbl(dblPrincipalAndInterest2) + CDbl(dblMortgageInsurance2) + CDbl(dblEstimatedEscrow2)
	FRM_VerifyEqual CDbl(dblTotalMonthlyPayment2), Round(dblAdd2), "Calculation Of P&I, MI & Escrow Amount In LE Page1 Column2 And Comparing With Total Est. Monthly Payment", "Both Values Should Match"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox9_Ctrl"),0, "Interest Only Checkbox Should Not Be Checked"
	BIZ_ValidateProjectedPaymentTable_FixedLoanTypeInterestOnly dblPeriod2, dblPrincipalAndInterest2, dblMortgageInsurance2, dblTotalMonthlyPayment2
	
	Set objLoan	=	Nothing
	Set objData	=	Nothing
End Function




'@**************************************************************************************************
'@ Name:BIZ_ProjectedPaymentTable_FixedLoanType
'@ Parameter: strRowID
'***************************************************************************************************

Function BIZ_ProjectedPaymentTable_FixedLoanType(strRowID)

	Dim objLoan, intPeriod, dblPrincipalAndInterest, boolOnlyInterest, intMortgageInsurance, dblTotalMonthlyPayment, objData
	Set objLoan	=	SwfWindow("swfname:=MainForm").Page("micClass:=Page","index:=0")
	Set objData	= 	FRM_DS_GetTestData("Forms_LoanEstimatePage", "ProjectedPayments", strRowID)
	
	'@ Handling Sync Issues
	GUI_Object_WaitTillExistX objLoan.WebEdit("html id:=TextBox62"), 240
	
	'@ Getting Values From Project Payments Panel-1 From LE Page1
	intPeriod					=	CInt(GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox62"), "Value" ))
	dblPrincipalAndInterest		=	CDbl(GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox11"), "Value" ))
	intMortgageInsurance		=	CInt(GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=TextBox59"), "Value" ))
	dblTotalMonthlyPayment		=	CDbl(GUI_Object_GetPropertyValue ( objLoan.WebEdit("html id:=pjtMaxBox12"), "Value" ))
	
	'@ Validation Of Interest Only Check box in LE Page1, Column 1
	GUI_Object_ValidateProperty objLoan.WebElement("html id:=Label25","index:=0"),"innertext", Trim(FRM_DS_GetValue(objData, "Start")), "Start Period"
	GUI_Object_ValidateValue objLoan.WebEdit("html id:=TextBox62"), Trim(FRM_DS_GetValue(objData,"LE1.X41_Year")), "End Period"
	GUI_Object_ValidateChecked objLoan.WebCheckBox("html id:=__cid_CheckBox10_Ctrl"), 0, "Interest Only Checkbox Should Not Be Checked"
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	BIZ_ValidateProjectedPaymentTable_FixedLoanType intPeriod, dblPrincipalAndInterest, intMortgageInsurance, dblTotalMonthlyPayment
	    
	Set objLoan	=	Nothing
	Set objData	=	Nothing
End Function


Function BIZ_ValidateProjectedPaymentTable_FixedLoanType(intEndOfTimePeriodFromLEPage1, dblPrincipalAndInterest, intMortgageInsurance, dblTotalMonthlyPayment)
	
	Dim dblTotalOfPrincipalAndInterest, intMI, dblPayment
	
	dblTotalOfPrincipalAndInterest	=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "SumOfPrincipal&Interest" )
	intMI							=	CInt (BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "MI" ))
	dblPayment						=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( intEndOfTimePeriodFromLEPage1, "Payment" )
	
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	
	'@ Validation Part
	FRM_VerifyEqual Cdbl(dblPrincipalAndInterest), Cdbl(dblTotalOfPrincipalAndInterest), "Total Of Principal And Interest Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	FRM_VerifyEqual Cdbl(intMortgageInsurance), Cdbl(intMI), "Mortgage Insurance(MI) Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	FRM_VerifyEqual Cdbl(dblTotalMonthlyPayment), Cdbl(dblPayment), "Total Estimated Monthly Payment Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	
End Function

Function BIZ_ValidateProjectedPaymentTable_FixedLoanTypeInterestOnly(dblEndOfTimePeriodFromLEPage1, dblPrincipalAndInterest, dblMortgageInsurance, dblTotalMonthlyPayment)
	
	Dim dblTotalOfPrincipalAndInterest, intMI
	
	dblTotalOfPrincipalAndInterest	=	BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( dblEndOfTimePeriodFromLEPage1, "SumOfPrincipal&Interest" )
	intMI							=	CInt (BIZ_LoanEstimatePage1_GetDataFromAmortizationScheduleBasedOnTimePeriod ( dblEndOfTimePeriodFromLEPage1, "MI" ))
	
	Wait g_TinyWaitSmall + g_TinyWaitSmall	'@ Handling Sync Related Issues
	
	'@ Validation Part
	FRM_VerifyEqual Cdbl(dblPrincipalAndInterest), Cdbl(dblTotalOfPrincipalAndInterest), "Validate Total Of Principal And Interest Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	FRM_VerifyEqual Cdbl(dblMortgageInsurance), Cdbl(intMI), "Validate Mortgage Insurance(MI) Present In LE Page 1 & Amortization Schedule Dialog", "Both The Values Should Match" 
	
End Function
'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\AmortizationSchedule.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\ComplianceReview.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup: BIZ_Tools_ComplainceReview BIZ_Tools_ComplainceReview
'
' List of functions here
'@code
'	Function BIZ_ComplianceReview_OrderNReview(strOrderOrPreview)
'	Function BIZ_ComplianceReview_ValidateComplianceReviewStatus()
'@endcode
'
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is performing Order N Review in the Compliance REview Screen
'@code
'    BIZ_ComplianceReview_OrderNReview(strOrderOrPreview)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ComplianceReview_OrderNReview(strOrderOrPreview)

	FRM_Logger_ReportInfoEvent "Compliance Review", strOrderOrPreview & " Compliance Service", Null	
	'Open Compliance review in Tools 
	BIZ_Tools_ShowInOrder()
	
	'Go to Tools->Compliance Review 
	BIZ_Tools_Open "Compliance Review"
    
	If (strOrderOrPreview = "Order") Then 
	 	'Order compliance review 
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfButton("swfname:=btnOrder")
		Wait g_LongWaitLarge
		If(GUI_Object_IsExist(SwfWindow("swfname:=ReportAuditDialog").SwfObject("swfname:=gvAuditItems"))) Then
 			Set objAuditItems = SwfWindow("swfname:=ReportAuditDialog").SwfObject("swfname:=gvAuditItems")
			intNumberOfAuditItems = GUI_List_GetNumberofRows(objAuditItems)
			strAuditList = ""
			For intAuditItem = 0 To intNumberOfAuditItems-1 Step 1
				If(intAuditItem = 0) Then 
					strAuditList = GUI_List_GetCellData(objAuditItems, intAuditItem, 1)
				Else
					strAuditList = strAuditList + "   " + GUI_List_GetCellData(objAuditItems, intAuditItem, 1)
				End If
			Next
			FRM_Logger_ReportFailEvent "Compliance Review - Audit List Items", strAuditList, Null
			GUI_SwfButton_Click SwfWindow("swfname:=ReportAuditDialog").SwfButton("swfname:=btnClose")
			BIZ_ComplianceReview_OrderNReview  = 0
		ElseIf (GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SubmitDialog").SwfWindow("swfname:=ExceptionDialog"), 80))Then 
			FRM_Logger_ReportFailEvent "Compliance Review - Exception", "Exception Dialog is displayed", Null
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SubmitDialog").SwfWindow("swfname:=ExceptionDialog").SwfButton("Swfname:=btnClose")
			BIZ_ComplianceReview_OrderNReview = 0
		ElseIf (GUI_Object_IsExistX(Dialog("text:=Application Error"), 10))Then
			FRM_Logger_ReportFailEvent "Compliance Review", "Application Error is displayed", Null
			Dialog("text:=Application Error").WinButton("text:=&Ignore").Click
		Else
			wait g_TinyWaitMedium
			BIZ_ComplianceReview_OrderNReview = BIZ_ComplianceReview_ValidateComplianceReviewStatus()
		End If
	End If
End Function



'This function is performing Order N Review in the Compliance REview Screen
'@code
'    BIZ_ComplianceReview_ValidateComplianceReviewStatus()
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ComplianceReview_ValidateComplianceReviewStatus()
    
    Dim ReportStatus
	intCount = 0
	While (Not GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfLabel("swfname:=lblReportStatus")) and i <= 4) 
		wait g_TinyWaitMedium
		i = i + 1
	Wend 
	
	ReportStatus = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfLabel("swfname:=lblReportStatus").GetROProperty("text")
	If (InStr(ReportStatus, "Did Not Pass") > 0) Then
		FRM_Logger_ReportFailEvent "Compliance Review", "Compliance Review - Did not Pass", Null
		BIZ_ComplianceReview_ValidateComplianceReviewStatus = 0
	ElseIf (InStr(ReportStatus, "Warning") > 0) Then 
		    FRM_Logger_ReportPassEvent "Compliance Review", "Compliance Review displayed a warning message", Null
		    BIZ_ComplianceReview_ValidateComplianceReviewStatus = 0
	Else
		FRM_Logger_ReportPassEvent "Compliance Review", "Compliance Review is Pass", Null
		BIZ_ComplianceReview_ValidateComplianceReviewStatus = 1
	End If
    
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\ComplianceReview.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\DisclosureTrackingTool.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup: BIZ_Tools_DisclosureTracking BIZ_Tools_DisclosureTracking
'
' List of functions here
' @code
'
'   Function BIZ_DisclosureTrackingTool_AddDisclosure()
'	Function BIZ_DisclosureTrackingTool_ClickRecord()
'   Function BIZ_DisclosureTrackingTool_SetDisclosureInformation()
'   Function BIZ_DisclosureTrackingTool_SetBorrower()
'   Function BIZ_DisclosureTrackingTool_SetCoBorrower()
'   Function BIZ_DisclosureTrackingTool_VerifyPresumedReceivedDate()
'   Function BIZ_DisclosureTrackingTool_CloseDetailWindow()
'   Function BIZ_DisclosureTrackingTool_SetIntentToProceed(strValue)
'   Function BIZ_DisclosureTrackingTool_SetBorrowerReceviedDates()
'   Function BIZ_DisclosureTrackingTool_ExcludedFromTimeline()
'	Function BIZ_DisclosureTrackingTool_PresumedReceivedDate()
'   Function BIZ_DisclosureTrackingTool_AddDisclosureForLECDDateIssuedChecking(strLeCd)
'   Function BIZ_DisclosureTrackingTool_ChooseLECDDateIssued(isCurentDate)
'   Function BIZ_DisclosureTrackingTool_SnapShot_SelectTab(strLEorCD,strTabName)
'   Function BIZ_DisclosureTrackingTool_OpenSnapShot(strLEorCD)
'   Function BIZ_DisclosureTrackingTool_CloseSnapShot(strLEorCD)
'   Function BIZ_DisclosureTrackingTool_SetManuallyFulfill(strRowID)
'   Function BIZ_DisclosureTrackingTool_SaveManuallyFulfillValues()
'   Function BIZ_DisclosureTrackingTool_ManuallyFulfill_ClickSubmit()
'	Function BIZ_DisclosureTrackingTool_VerifyComplianceTimeline(strRowID)
'	Function BIZ_DisclosureTrackingTool_VerifyLETracking(strRowID)
'	Function BIZ_DisclosureTrackingTool_VerifyCDTracking(strRowID)
'   Function BIZ_DisclosureTrackingTool_VerifyDisclosureHistory(strRowID)
'   Function BIZ_DisclosureTrackingTool_VerifyDisclosureDetails(strRowID)
'   Function BIZ_DisclosureTrackingTool_SubmitIntentToProceed()
'	Function BIZ_DisclosureTrackingTool_SetComplianceTimeline(strRowID)
'	Function BIZ_DisclosureTrackingTool_SetOtherTracking(strRowID)
'	Function BIZ_GetRowOfDisclosureType(strDisclosureTypeVal, strSentStatus, strColName)
'	Function BIZ_DisclosureTrackingTool_SetCoBorrowerReceviedDates(datePresumedReceive, dateActualReceive, strDisclosureType)
'	Function BIZ_DisclosureTrackingTool_ChangeSentDateOfDisclosure(dateSentOfDisclosure)
'	Function BIZ_DisclosureTrackingSettings_GetRowOfDisclosureBasedOnLatestTimeStamp(DateCurrentPST)
'	Function BIZ_DisclosureTrackingTool_SetCoBorrowerReceviedDatesBasedOnRow(datePresumedReceive, dateActualReceive, intRow)
'	Function BIZ_DisclosureTrackingTool_SetBorrowerReceviedDatesBasedOnRow(datePresumedReceive, dateActualReceive, intRow)
'	Function BIZ_DisclosureTrackingTool_NewDisclosureRecordLECDDateIssuedChecking(strLeCd)
'	Function BIZ_DisclosureTrackingTool_UpdateClosingDisclosureDetails()
'
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Disclosure information
'@code
'    BIZ_DisclosureTrackingTool_AddDisclosure(strRowID)
'@endcode
'@param boolDisClosure Decide whether to include Disclosure
'@param strLeCd Decide which type to add
'@param boolSettlement Decide whether to include Settlement Service Provider List
'@param boolSafeHarbor Decide whether to include Safe Harbor

Function BIZ_DisclosureTrackingTool_AddDisclosure(boolDisclosure, strLeCd, boolSettlement, boolSafeHarbor)
	
    FRM_Logger_ReportInfoEvent "Disclosure Tracking Tool", "Add Disclosure Tracking", Null
    
    Dim objmainWindow, objDisclosureWindow, objLEDateIssuedWindow, objPrintRuleCheckStatusForm, objFieldQuickEditForm
    set objmainWindow               = SwfWindow("swfname:=MainForm")
    Set objDisclosureWindow         = objmainWindow.SwfWindow("swfname:=AdHocDisclosure2015")
    set objLEDateIssuedWindow       = objDisclosureWindow.SwfWindow("swfname:=UpdateLECDDateIssued")
    Set objPrintRuleCheckStatusForm = objmainWindow.SwfWindow("swfname:=PrintRuleCheckStatusForm")
	Set objFieldQuickEditForm       = objPrintRuleCheckStatusForm.SwfWindow("swfname:=FieldQuickEditForm")
	
	GUI_Object_WaitTillEnabledX objmainWindow.SwfObject("swfname:=groupContainer1").SwfObject("swfname:=flowLayoutPanel1").SwfObject("swfname:=btnAdd"),35
    GUI_SwfObject_Click objmainWindow.SwfObject("swfname:=btnAdd")
	GUI_Dialog_Encompass_YesX 3, "You must save the loan"
	
	GUI_Object_WaitTillVisibleX objDisclosureWindow,35
	If Not GUI_Object_IsExistX(objDisclosureWindow, 1) Then
		GUI_SwfObject_Click objmainWindow.SwfObject("swfname:=btnAdd")
	End If
    'Disclosure
    If boolDisclosure Then
       GUI_SwfCheckbox_Set objDisclosureWindow.SwfCheckBox("swfname:=chkDisclosure"), "ON"
        If UCase(strLeCd) = "LE" Then
           GUI_SwfRadioButton_Click objDisclosureWindow.SwfRadioButton("swfname:=rdbLE")
        ElseIf ucase(strLeCd) = "CD" Then
            GUI_SwfRadioButton_Click objDisclosureWindow.SwfRadioButton("swfname:=rdbCD")
        End If
    Else 
        GUI_SwfCheckbox_Set objDisclosureWindow.SwfCheckBox("swfname:=chkDisclosure"), "OFF"
    End If

    'Settlement Provider List
	GUI_SwfCheckbox_Set objDisclosureWindow.SwfCheckBox("swfname:=chkSettlementServicesProvider"), boolSettlement

    'Safe Harbor
    GUI_SwfCheckbox_Set objDisclosureWindow.SwfCheckBox("swfname:=chkSafeHarbor"), boolSafeHarbor
	
    GUI_SwfButton_Click	objDisclosureWindow.SwfButton("swfname:=btnYes")
    
    If objLEDateIssuedWindow.Exist(30) Then
       GUI_SwfButton_Click objLEDateIssuedWindow.SwfButton("swfname:=btnOK")
	ElseIf SwfWindow("swfname:=UpdateLECDDateIssued").Exist(10) Then
	   GUI_SwfButton_Click SwfWindow("swfname:=UpdateLECDDateIssued").SwfButton("swfname:=btnOK")
    End If
    
	If objPrintRuleCheckStatusForm.Exist(3) Then
       GUI_SwfButton_Click objPrintRuleCheckStatusForm.SwfButton("swfname:=btnCompleteFields")
       wait 2
	   strDate = UTIL_Date_FormatDateByPattern(now,"mm/dd/yyyy")        
	   GUI_SwfEdit_Set objFieldQuickEditForm.SwfEdit("swfname:=b_748"), strDate	
	   UTIL_Win_SendKey "{TAB}"
       wait 2
	   GUI_SwfButton_Click objFieldQuickEditForm.SwfButton("swfname:=btnOK")
	   GUI_SwfButton_Click objPrintRuleCheckStatusForm.SwfButton("swfname:=btn_print")
	End If
	'Changed since Dialog box is not getting recognized(refer CTA-197)
    GUI_Dialog_Encompass_OKX 10, ""
	
'	In some VDIs , getting this popup twice
'	GUI_Dialog_Encompass_OKX 6, ""

'	If Dialog("text:=Encompass").Exist(5) Then
'		strText=Dialog("text:=Encompass").Static("text:=.*Sundays and legal holidays.*").GetROProperty("text")	
'		If Dialog("text:=Encompass").WinButton("text:=OK", "index:=0").Exist(2) Then
'			Dialog("text:=Encompass").Activate
'			Dialog("text:=Encompass").WinButton("text:=OK", "index:=0").Click
'			FRM_Logger_ReportInfoEvent "Encompass Dialog box click", "Clicked OK button on & Dialog box having text '"&strText&"'", null
'		End If
'	End If	
    
    set objmainWindow               = Nothing
    set objDisclosureWindow         = Nothing
    set objLEDateIssuedWindow       = Nothing
	Set objPrintRuleCheckStatusForm = nothing
	Set objFieldQuickEditForm       = nothing
End Function



'This function is for operate specific disclosure record
'@code
'    BIZ_DisclosureTrackingTool_ClickRecord(intColNumOrText, strKeyWords, strAction)
'@endcode
'@param intColNumOrText The Column number
'@param strKeyWords The Search Text
'@param strAction Operate Style "Double" Or "Single"
'
Function BIZ_DisclosureTrackingTool_ClickRecord(intColNumOrText, strKeyWords, strAction)

	FRM_Logger_ReportInfoEvent strAction&"Click the Disclosure Row", "Find row by '"&intColNumOrText&"' column with value '"&strKeyWords&"'", Null
    
    Dim objDisclosureHistory, intColNum, objDisclosureHistoryScrollBar
	Set objDisclosureHistory = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory")
	
    If IsNumeric(intColNumOrText)Then
	   intColNum = CInt(intColNumOrText)
	Else
	   intColNum = GUI_List_GetColumnIndex(objDisclosureHistory, intColNumOrText)
    End If
	
	Set objDisclosureHistoryScrollBar = objDisclosureHistory.SwfScrollBar("swfname:=vPanelScrollBar")
	GUI_List_ClickRow objDisclosureHistory, SwfWindow("swfname:=MainForm").SwfScrollBar("swfname:=vPanelScrollBar"), intColNum, strKeyWords, True, False, False, strAction
    GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"
    
	Set objDisclosureHistory          = Nothing
	Set objDisclosureHistoryScrollBar = Nothing
End Function



'This function is for set basic disclosure information  
'@code
'    BIZ_DisclosureTrackingTool_SetDisclosureInformation(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
 
Function BIZ_DisclosureTrackingTool_SetDisclosureInformation(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking Detail", "Set Disclosure Tracking using Row Id '"&strRowID&"' on Disclosure Tracking detail page", Null
    
    Dim objDisclosureDetial, objData
	Set objDisclosureDetial = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*")
	Set objData = FRM_DS_GetTestData("Tools_DisclosureTracking", "DisclosureDetailInformation", strRowID)
    
    'Set Disclosure Type
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DisclosureType")) Then        
	   GUI_SwfComboBox_Select objDisclosureDetial.SwfComboBox("swfname:=cmbDisclosureType"), FRM_DS_GetValue(objData, "DisclosureType")
	End If
    
    'Set Sent Date
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SendDate")) Then
        If Not objDisclosureDetial.SwfCalendar("swfname:=dtDisclosedDate", "index:=0").GetROProperty("enabled") Then
               GUI_SwfObject_Click objDisclosureDetial.SwfObject("swfname:=pbIcon","swfname path:=pbIcon;lbtnSentDate.*")
        End If
        GUI_SwfCalendar_SetDate objDisclosureDetial.SwfCalendar("swfname:=dtDisclosedDate"), FRM_DS_GetValue(objData, "SendDate")
        '@TODO - Get a dialog about "U.S. Postal Service does not deliver disclosures on Sundays and legal holidays. The date of next avaiable business date will be used", 
        GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"
	End If
    
    'Set Disclosure By
	If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "By")) Then
        If Not objDisclosureDetial.SwfEdit("swfname:=txtDisclosedBy").GetROProperty("enabled") Then
            GUI_SwfButton_Click objDisclosureDetial.SwfObject("swfname:= pbIcon", "index:=4")   'Click lock icon to ensure By can be inputed
        End If
		GUI_SwfEdit_Set objDisclosureDetial.SwfEdit("swfname:=txtDisclosedBy"), FRM_DS_GetValue(objData, "By")  'Input sent date
	End If
	'Set Sent Method
    If  UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SendMethod")) Then
        SendMethod = FRM_DS_GetValue(objData, "SendMethod")
        GUI_SwfComboBox_Select objDisclosureDetial.SwfComboBox("swfname:=cmbDisclosedMethod"), SendMethod
        If objDisclosureDetial.SwfEdit("swfname:=txtMethodOther").GetROProperty("enabled") and FRM_DS_TestDataColumnExists(objData, "txtMethodOther") and UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "txtMethodOther")) Then
            GUI_SwfEdit_Set objDisclosureDetial.SwfEdit("swfname:=txtMethodOther"), FRM_DS_GetValue(objData, "txtMethodOther")
        End If
    End If
	
	Set objDisclosureDetial = Nothing
	Set objData             = Nothing
    
End Function



'This function is for set Borrower  
'@code
'    BIZ_DisclosureTrackingTool_SetBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
 
Function BIZ_DisclosureTrackingTool_SetBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking Detail", "Set Disclosure Tracking using Row Id '"&strRowID&"' on Disclosure Tracking detail page", Null
    
    Dim objDisclosureDetial, objData
	Set objDisclosureDetial = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*")	
	Set objData = FRM_DS_GetTestData("Tools_DisclosureTracking", "DisclosureDetailBorrower", strRowID)
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresumedReceivedDate")) Then
       GUI_SwfObject_Click objDisclosureDetial.SwfObject("swfname:=pbIcon","swfname path:=pbIcon;lBtnBorrowerPresumed.*")
	   GUI_WebEdit_Set objDisclosureDetial.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpBorrowerReceivedDate.*"), FRM_DS_GetValue(objData, "PresumedReceivedDate") 	'PresumedReceivedDate
       GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActualReceivedDate")) Then
		GUI_WebEdit_Set objDisclosureDetial.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpBorrowerActualReceivedDate.*"), FRM_DS_GetValue(objData, "ActualReceivedDate") 	'ActualReceivedDate
	End If
	
	Set objDisclosureDetial = Nothing
	Set objData             = Nothing
End Function



'This function is for set CoBorrower  
'@code
'    BIZ_DisclosureTrackingTool_SetCoBorrower(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_SetCoBorrower(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking Detail", "Set Disclosure Tracking using Row Id '"&strRowID&"' on Disclosure Tracking detail page", Null
    
    Dim objDisclosureDetial, objData
	
    Set objDisclosureDetial = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*")	
	Set objData             = FRM_DS_GetTestData("Tools_DisclosureTracking", "DisclosureDetailCoBorrower", strRowID)
	
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresumedReceivedDate")) Then
       GUI_SwfObject_Click objDisclosureDetial.SwfObject("swfname:=pbIcon","swfname path:=pbIcon;lBtnCoBorrowerPresumed.*")
	   GUI_WebEdit_Set objDisclosureDetial.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCoBorrowerReceivedDate.*"), FRM_DS_GetValue(objData, "PresumedReceivedDate") 	'PresumedReceivedDate
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActualReceivedDate")) Then
	   GUI_WebEdit_Set objDisclosureDetial.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCoBorrowerActualReceivedDate.*"), FRM_DS_GetValue(objData, "ActualReceivedDate") 	'ActualReceivedDate
	End If
	
	Set objDisclosureDetial = Nothing
	Set objData             = Nothing
End Function



'This function is for close disclosure detail window  
'@code
'    BIZ_DisclosureTrackingTool_CloseDetailWindow()
'@endcode
'@param 

Function BIZ_DisclosureTrackingTool_CloseDetailWindow()

    
  	Set obj=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*").SwfButton("swfname:=btnOK")
	FRM_Logger_ReportInfoEvent "Disclosure Tracking Detail", "Close Disclosure Detail window", Null
	GUI_Object_WaitTillEnabled(obj)
	objType= obj.GetTOProperty("micClass")
	objDesc= GUI_Object_Desc(obj)
	If(GUI_Object_WaitTillEnabled(obj)) Then	
		obj.Object.PerformClick
		FRM_Logger_ReportDebugEvent "Click on object " & objType, objDesc, null
	Else
		FRM_Logger_ReportDebugEvent "GUI_SwfButton_Click disabled", objDesc, null
	End If
	End Function



'This function is for verify Presumed Received Date
'@code
'    BIZ_DisclosureTrackingTool_VerifyPresumedReceivedDate(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_VerifyPresumedReceivedDate(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking", "Validate Presumed Received Date using Row Id '"&strRowID&"' in the DisclosureDetailInformation datasheet", Null
    
    Dim objDisclosureDetial, objData
    
	Set objDisclosureDetial = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*")	
	Set objData             = FRM_DS_GetTestData("Tools_DisclosureTracking", "DisclosureDetailInformation", strRowID)
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SendDate")) Then
	   GUI_Object_ValidateText objDisclosureDetial.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpBorrowerReceivedDate.*"), CDate(FRM_DS_GetValue(objData, "SendDate")) + 3, "BorrowerPresumedReceivedDate"
	   GUI_Object_ValidateText objDisclosureDetial.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCoBorrowerReceivedDate.*"), CDate(FRM_DS_GetValue(objData, "SendDate")) + 3, "CoBorrowerPresumedReceivedDate"
	End If
	
    Set objDisclosureDetial = Nothing
	Set objData             = Nothing
End Function



'This function is for set Intent to Proceed information  
'@code
'    BIZ_DisclosureTrackingTool_SetIntentToProceed("ON")
'@endcode
'@param strOnOff 
 
Function BIZ_DisclosureTrackingTool_SetIntentToProceed(strOnOff)

    FRM_Logger_ReportInfoEvent "Set Intent to Proceed information", "Set Intent to Proceed to " & strOnOff, Null
    
    Dim objDisclosureDetial, boolExists
    
	Set objDisclosureDetial = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*")
	boolExists = GUI_Object_IsExistX(objDisclosureDetial.SwfCheckBox("swfname:=chkIntent"),1)
	
    If boolExists Then
	   GUI_SwfCheckbox_Set objDisclosureDetial.SwfCheckBox("swfname:=chkIntent"), strOnOff
	End If
    	
	Set objDisclosureDetial = Nothing
	
End Function



'This function is for set Intent to Proceed to ON  
'@code
'    BIZ_DisclosureTrackingTool_SubmitIntentToProceed()
'@endcode

Function BIZ_DisclosureTrackingTool_SubmitIntentToProceed()

    FRM_Logger_ReportInfoEvent "Set Intent to Proceed information", "Set Intent to Proceed to " & "ON", Null
    
    Dim objDisclosureDetial, boolExists
	Set objDisclosureDetial = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*")
	boolExists = GUI_Object_IsExistX(objDisclosureDetial.SwfCheckBox("swfname:=chkIntent"),1)
    
	If boolExists Then
	   GUI_SwfCheckbox_Set objDisclosureDetial.SwfCheckBox("swfname:=chkIntent"), "ON"
	End If
    objDisclosureDetial.SwfButton("swfname:=btnOK","index:=0").Click	
	Set objDisclosureDetial = Nothing
	
End Function



'This function is for Set Presumed Received Time &  Actual Received Time of one disclosure tracking record in disclosure details window
'@code
'    BIZ_DisclosureTrackingTool_SetBorrowerReceviedDates(datePresumedReceive, dateActualReceive, strDisclosureType)
'@endcode
'@param datePresumedReceive the value of Presumed Received Date
'@param dateActualReceive the value of Actual Received Date
'@param strDisclosureType this value decided to open initial or revised record

Function BIZ_DisclosureTrackingTool_SetBorrowerReceviedDates(datePresumedReceive, dateActualReceive, strDisclosureType)

    FRM_Logger_ReportInfoEvent "Set Disclosure Tracking Record date", "Set date in Disclosure Tracking Record", Null

	'====== Go to Tools->Disclosure Tracking ======
	BIZ_Tools_Open "Disclosure Tracking"

	'====== Open LE Disclosure Record ======
	BIZ_DisclosureTrackingTool_ClickRecord "Disclosure Type", strDisclosureType, "Double"

	'====== Enter Presumed Received Date as today's date, enter Actual Received Date as today's date ======
    Dim objWndDisclosureDetails
	Set objWndDisclosureDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")
	
	If Len(datePresumedReceive)>1 Then
		'Click lock icon to ensure Presumed Received Date can be inputed
		If Not objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=3").GetROProperty("enabled") Then
			GUI_SwfButton_Click objWndDisclosureDetails.SwfObject("swfname:= pbIcon", "index:=7")
		End If
		If Not objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=3").GetROProperty("enabled") Then
			GUI_SwfButton_Click objWndDisclosureDetails.SwfObject("swfname:= pbIcon", "index:=9")
			GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=3"), datePresumedReceive
		Else
			GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=3"), datePresumedReceive
		End If		
	End If
	
	GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=2"), dateActualReceive
    
	'====== Click OK button ======
	GUI_SwfButton_Click objWndDisclosureDetails.SwfButton("swfname:=btnOK")
	GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"
        
	Set objWndDisclosureDetails = Nothing

End Function



'This function is for set disclosure tracking record to exclude from timeline 
'@code
'    BIZ_DisclosureTrackingTool_ExcludedFromTimeline()
'@endcode

Function BIZ_DisclosureTrackingTool_ExcludedFromTimeline(intColNumOrText, strKeyWords)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking Record", "Set Initial record to exclude form timeline", Null

	'====== Go to Tools->Disclosure Tracking ======
	BIZ_Tools_Open "Disclosure Tracking"

	'====== Excluded from timeline of initial LE Disclosure ======
	BIZ_DisclosureTrackingTool_ClickRecord intColNumOrText, strKeyWords, "Single"
	If SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnMarkInvalid").GetROProperty("text") = "Exclude from Timeline" Then
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnMarkInvalid")
	End If

End Function



'This function is for set Disclosure information for checking LE/CD Date Issued 
'@code
'    BIZ_DisclosureTrackingTool_AddDisclosureForLECDDateIssuedChecking("le")
'@endcode
'@param strLeCd Decide which type to add

Function BIZ_DisclosureTrackingTool_AddDisclosureForLECDDateIssuedChecking(strLeCd)
	
    FRM_Logger_ReportInfoEvent "Disclosure Tracking Tool", "Add Disclosure Tracking For LE/CD Date Issued Checking", Null
    
    Dim objmainWindow, objDisclosureWindow, objLECDDateIssuedWindow
    set objmainWindow           = SwfWindow("swfname:=MainForm")
    set objDisclosureWindow     = objmainWindow.SwfWindow("swfname:=AdHocDisclosure2015")
    set objLECDDateIssuedWindow = objDisclosureWindow.SwfWindow("swfname:=UpdateLECDDateIssued")
	GUI_SwfObject_Click objmainWindow.SwfObject("swfname:=btnAdd")

    'Disclosure
    GUI_SwfCheckbox_Set objDisclosureWindow.SwfCheckBox("swfname:=chkDisclosure"), "ON"
    If UCase(strLeCd) = "LE" Then
        GUI_SwfRadioButton_Click objDisclosureWindow.SwfRadioButton("swfname:=rdbLE")
    ElseIf ucase(strLeCd) = "CD" Then
        GUI_SwfRadioButton_Click objDisclosureWindow.SwfRadioButton("swfname:=rdbCD")
    End If
    GUI_SwfButton_Click	objDisclosureWindow.SwfButton("swfname:=btnYes")
  
    set objmainWindow         = Nothing
    set objDisclosureWindow   = Nothing
    set objLEDateIssuedWindow = Nothing
    
End Function



'This function is for Choosing LE Date Issued 
'@code
'    BIZ_DisclosureTrackingTool_ChooseLECDDateIssued(isCurentDate)
'@endcode
'@param isCurentDate the field to use current date or LE.X1/CD1.X1

Function BIZ_DisclosureTrackingTool_ChooseLECDDateIssued(isCurentDate)
    
    Set objLECDWindow = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfWindow("swfname:=UpdateLECDDateIssued")
    
    If isCurentDate Then
       GUI_SwfRadioButton_Click objLECDWindow.SwfRadioButton("swfname:=rdbCurrent")
    Else
        GUI_SwfRadioButton_Click objLECDWindow.SwfRadioButton("swfname:=rdbDate")
    End if
    GUI_SwfButton_Click objLECDWindow.SwfButton("swfname:=btnOK")
    GUI_Dialog_Encompass_OKX 10, "Sundays and legal holidays"

    Set objLECDWindow = Nothing
End Function



'This function is to get value of PresumedReceivedDate
'@code
'    BIZ_DisclosureTrackingTool_PresumedReceivedDate()
'@endcode

Function BIZ_DisclosureTrackingTool_PresumedReceivedDate()

    BIZ_Tools_Open "Disclosure Tracking"

	'======Click on eDisclosure  Send Record=====================
	BIZ_DisclosureTrackingTool_ClickRecord "Method", "eFolder eDisclosures", "Double" 

	Dim objDisclosureDetails
	Set objDisclosureDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")

	'=============Get Presumed Received Date===================
	dtmPresumedReceivedDate = GUI_Object_GetPropertyValue(objDisclosureDetails.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpBorrowerReceivedDate.*"),"text")

	GUI_SwfButton_Click objDisclosureDetails.SwfButton("swfname:=btnOK")

    BIZ_DisclosureTrackingTool_PresumedReceivedDate = dtmPresumedReceivedDate
    
    Set objDisclosureDetails = Nothing

End Function



'This function is to select Tab on the LESnapshot or CDSnapshot 
'@code
'    BIZ_DisclosureTrackingTool_SnapShot_SelectTab(strLEorCD,strTabName)
'@endcode
'@param strLEorCD the string "LE" or "CD"
'@param strTabName the tab name which you want to select such as "LE Page 1", "LE Page 2","LE Page 3", "Others Info" and so on

Function BIZ_DisclosureTrackingTool_SnapShot_SelectTab(strLEorCD,strTabName)
	GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfWindow("swfname:=Disclosed"&strLEorCD&"Dialog").SwfTab("swfname:=tabControl1"),strTabName
End Function



'This function is to open the LESnapshot or CDSnapshot 
'@code
'    BIZ_DisclosureTrackingTool_OpenSnapShot(strLEorCD)
'@endcode
'@param strLEorCD the string "LE" or "CD"
Function BIZ_DisclosureTrackingTool_OpenSnapShot(strLEorCD)

	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btn"&strLEorCD&"Snapshot")

End Function



'This function is to close the LESnapshot or CDSnapshot 
'@code
'    BIZ_DisclosureTrackingTool_CloseSnapShot(strLEorCD)
'@endcode
'@param strLEorCD the string "LE" or "CD"

Function BIZ_DisclosureTrackingTool_CloseSnapShot(strLEorCD)
	
	GUI_Window_Close SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfWindow("swfname:=Disclosed"&strLEorCD&"Dialog")
	
End Function


'This function is to used to set the fields in Manually Fulfill window
'@code
'    BIZ_DisclosureTrackingTool_SetManuallyFulfill(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_SetManuallyFulfill(strRowID)

	FRM_Logger_ReportInfoEvent "Set Manualy Fulfill", "Set data using Row Id '"&strRowID&"' in the Tools_DisclosureTracking datasheet", Null
    
    Dim objDisclosureDetail, objManuallyFulfill, objData, strTodayDate
    Set objDisclosureDetail = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*")
    
    '======== Click the 'eDisclosure Tracking' tab ========
    GUI_SwfTab_Click objDisclosureDetail.SwfTab("swfname:=tcDisclosure"), "eDisclosure Tracking"
    
    '======== Click the 'Print documents and Manually Fulfill' button ========
	GUI_SwfButton_Click objDisclosureDetail.SwfButton("swfname:=btneDiscManualFulfill", "index:=0")
    
    '======== Set the test data to the fields in 'Manaully Fulfill' window ========
    Set objManuallyFulfill = objDisclosureDetail.SwfWindow("swfname:=ManualFulfillmentDialog")
	Set objData            = FRM_DS_GetTestData("Tools_DisclosureTracking", "SetManuallyFulfill", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActualReceivedDate")) Then
		strTodayDate = CStr(UTIL_Date_FormatDateByPattern(FRM_DS_GetValue(objData, "ActualReceivedDate"), "mm/dd/yyyy"))
        GUI_SwfEdit_Set objManuallyFulfill.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpActualFulfillmentDate.*"), strTodayDate
	End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Comments")) Then
        GUI_SwfEditor_Type objManuallyFulfill.SwfEditor("swfname:=txtComments"), FRM_DS_GetValue(objData, "Comments")
	End If
    
    Set objDisclosureDetail = Nothing
    Set objManuallyFulfill  = Nothing
    Set objData             = Nothing
	
End Function



'This function is to used to save the fields values into a dictionary for Manually Fulfill window
'@code
'    BIZ_DisclosureTrackingTool_SaveManuallyFulfillValues()
'@endcode
'@return objDict - A dictionary for saving the values

Function BIZ_DisclosureTrackingTool_SaveManuallyFulfillValues()

	FRM_Logger_ReportInfoEvent "Save Manually Fulfill values", "Save the fields values into a dictionary for Manually Fulfill window", Null
    
    Dim objDisclosureDetails, objManuallyFulfill
	Set objDisclosureDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*")
	Set objManuallyFulfill   = objDisclosureDetails.SwfWindow("swfname:=ManualFulfillmentDialog")
	
	Dim strPresumedReceivedDate, strActualReceivedDate, strFulfillmentMethod, strComments, objDict
	Set objDict = CreateObject("Scripting.Dictionary")
    
	strPresumedReceivedDate = GUI_Object_GetPropertyValue(objManuallyFulfill.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpPresumedFulfillmentDate.*"), "text")
    objDict.Add "PresumedReceivedDate", strPresumedReceivedDate
    
	strActualReceivedDate = GUI_Object_GetPropertyValue(objManuallyFulfill.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpActualFulfillmentDate.*"), "text")
	objDict.Add "ActualReceivedDate", strActualReceivedDate
	
	strFulfillmentMethod = GUI_Object_GetPropertyValue(objManuallyFulfill.SwfComboBox("swfname:=cboFulfillmentMethod"), "selection")
	objDict.Add "FulfillmentMethod", strFulfillmentMethod
	
	strComments = GUI_Object_GetPropertyValue(objManuallyFulfill.SwfEditor("swfname:=txtComments"), "text")
	objDict.Add "Comments", strComments
	
	Set BIZ_DisclosureTrackingTool_SaveManuallyFulfillValues = objDict
	
    '======== Click the 'Submit' button ========
	BIZ_DisclosureTrackingTool_ManuallyFulfill_ClickSubmit()
	
	Set objDisclosureDetails = Nothing
	Set objManuallyFulfill   = Nothing
	Set objDict              = Nothing
	
End Function



'This function is to used to Submit Manually Fulfill.
'@code
'    BIZ_DisclosureTrackingTool_ManuallyFulfill_ClickSubmit()
'@endcode

Function BIZ_DisclosureTrackingTool_ManuallyFulfill_ClickSubmit()
    	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetails.*").SwfWindow("swfname:=ManualFulfillmentDialog").SwfButton("swfname:=btnSubmit")
	
End Function



'This function is for verify Compliance Timeline
'@code
'    BIZ_DisclosureTrackingTool_VerifyComplianceTimeline(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_VerifyComplianceTimeline(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking", "Validate Compliance timeline using Row Id '"&strRowID&"' in the VerifyComplianceTimeline datasheet", Null
    
    Dim  objData
	
	Set objData = FRM_DS_GetTestData("Tools_DisclosureTracking", "VerifyComplianceTimeline", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3142_ApplicationDate")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpLEApp;gcCompliance;.*"), UTIL_Date_FormatDateByPattern(FRM_DS_GetValue(objData, "3142_ApplicationDate"),"mm/dd/yyyy"), "Application Date"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3143_LEDue")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpLEDue;.*"), FRM_DS_GetValue(objData, "3143_LEDue"), "LE Due"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3983_eConsent")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpeSign;.*"), FRM_DS_GetValue(objData, "3983_eConsent"), "eConsent"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3197_IntenttoProceed")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpIntentToProceed;.*"), FRM_DS_GetValue(objData, "3197_IntenttoProceed"), "Intent to Proceed"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3145_EarliestFeeCollection")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpFeeCollectDate;.*"), FRM_DS_GetValue(objData, "3145_EarliestFeeCollection"), "Earliest Fee Collection"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3147_EarliestClosing")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate.*"), FRM_DS_GetValue(objData, "3147_EarliestClosing"), "Earliest Closing"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "763_EstimatedClosing")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpActClosingDate.*"), FRM_DS_GetValue(objData, "763_EstimatedClosing")
	End If
	
	Set objData = Nothing
End Function



'This function is for verify LE Tracking
'@code
'    BIZ_DisclosureTrackingTool_VerifyLETracking(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_VerifyLETracking(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking", "Validate LE tracking using Row Id '"&strRowID&"' in the VerifyLETracking datasheet", Null
    
    Dim  objData
	
	Set objData = FRM_DS_GetTestData("Tools_DisclosureTracking", "VerifyLETracking", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3152_LESent")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpLESent;gcLE;.*"), FRM_DS_GetValue(objData, "3152_LESent"), "LE Sent"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3153_LEReceived")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpLEReceived;gcLE;.*"), FRM_DS_GetValue(objData, "3153_LEReceived"), "LE Received"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3154_RevisedLESent")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpLERevisedSent;.*"), FRM_DS_GetValue(objData, "3154_RevisedLESent"), "Revised LE Sent"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3155_RevisedLEReceived")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpLERevisedReceived;.*"), FRM_DS_GetValue(objData, "3155_RevisedLEReceived"), "Revised LE Received"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4014_SSPLSent")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpSSPLSent;.*"), FRM_DS_GetValue(objData, "4014_SSPLSent"), "SSPL Sent"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4015_SafeHarborSent")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpSHSent;.*"), FRM_DS_GetValue(objData, "4015_SafeHarborSent"), "Safe harbor sent"
	End If

	Set objData = Nothing
End Function



'This function is for verify CD Tracking
'@code
'    BIZ_DisclosureTrackingTool_VerifyCDTracking(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_VerifyCDTracking(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking", "Validate CD tracking using Row Id '"&strRowID&"' in the VerifyLETracking datasheet", Null
    
    Dim  objData
	
	Set objData = FRM_DS_GetTestData("Tools_DisclosureTracking", "VerifyCDTracking", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3977_CDSent")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"), FRM_DS_GetValue(objData, "3977_CDSent"), "CD Sent"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3978_CDReceived")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"), FRM_DS_GetValue(objData, "3978_CDReceived"), "CD Received"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3979_RevisedCDSent")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"), FRM_DS_GetValue(objData, "3979_RevisedCDSent"), "Revised CD Sent"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3980_RevisedCDReceived")) Then
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"), FRM_DS_GetValue(objData, "3980_RevisedCDReceived"), "Revised CD Received"
	End If

	Set objData = Nothing
End Function



'This function is for verify Disclosure History
'@code
'    BIZ_DisclosureTrackingTool_VerifyDisclosureHistory(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_VerifyDisclosureHistory(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking", "Validate Disclosure history using Row Id '"&strRowID&"' in the VerifyDisclosureHistory datasheet", Null
    
    Dim  objData, objHistory
	
	Set objData    = FRM_DS_GetTestData("Tools_DisclosureTracking", "VerifyDisclosureHistory", strRowID)
	Set objHistory = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SentDate")) Then
		FRM_VerifyEqual Mid(objHistory.Object.Items.Item(0).SubItems.Item(0).Text,1,10), FRM_DS_GetValue(objData, "SentDate"), "Sent Date", "Sent Date"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Method")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(1).Text, FRM_DS_GetValue(objData, "Method"), "Method", "Method"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "By")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(2).Text, FRM_DS_GetValue(objData, "By"), "By" , "By"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "#ofDisclosed")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(3).Text, CSTR(FRM_DS_GetValue(objData, "#ofDisclosed")), "# of disclosed", "# of disclosed"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LESent")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(4).Text, FRM_DS_GetValue(objData, "LESent"), "LE Sent", "LE Sent"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CDSent")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(5).Text, FRM_DS_GetValue(objData, "CDSent"), "CD Sent", "CD Sent"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SafeHarborSent")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(6).Text, FRM_DS_GetValue(objData, "SafeHarborSent"), "Safe Harbor Sent", "Safe Harbor Sent"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ProviderListSent")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(7).Text, FRM_DS_GetValue(objData, "ProviderListSent"), "provider list sent", "provider list sent"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerPair")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(8).Text, FRM_DS_GetValue(objData, "BorrowerPair"), "Borrower Pair", "Borrower Pair"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "IncludedInTimeline")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(9).Text, FRM_DS_GetValue(objData, "IncludedInTimeline"), "Included in Timeline", "Included in Timeline"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DisclosureType")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(10).Text, FRM_DS_GetValue(objData, "DisclosureType"), "Disclosure Type", "Disclosure Type"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Intent")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(11).Text, FRM_DS_GetValue(objData, "Intent"), "Intent" , "Intent"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BrokerDisclosed")) Then
		FRM_VerifyEqual objHistory.Object.Items.Item(0).SubItems.Item(12).Text, FRM_DS_GetValue(objData, "BrokerDisclosed"), "Broker Disclosed", "Broker Disclosed"
	End If

	Set objData    = Nothing
    Set objHistory = Nothing
End Function




'This function is for verify Disclosure Details
'@code
'    BIZ_DisclosureTrackingTool_VerifyDisclosureDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_VerifyDisclosureDetails(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking", "Validate Disclosure details using Row Id '"&strRowID&"' in the DisclosureDetailInformation datasheet", Null

	Set objData = FRM_DS_GetTestData("Tools_DisclosureTracking", "DisclosureDetailInformation", strRowID)
	set objDisclosureDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ReceivedMethod")) Then
		GUI_Object_ValidateText objDisclosureDetails.SwfEdit("swfname:=txtBorrowerReceivedMethod"), FRM_DS_GetValue(objData, "ReceivedMethod"), "Received Method Borrower"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresumedReceivedDate")) Then
		GUI_Object_ValidateText objDisclosureDetails.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpBorrowerReceivedDate;.*"), FRM_DS_GetValue(objData, "PresumedReceivedDate"), "Presumed Received Date Borrower"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActualReceivedDate")) Then
		GUI_Object_ValidateText objDisclosureDetails.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpBorrowerActualReceivedDate;.*"), FRM_DS_GetValue(objData, "ActualReceivedDate"), "Actual Received Date"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ReceivedMethodCoBorrower")) Then
		GUI_Object_ValidateText objDisclosureDetails.SwfEdit("swfname:=txtCoBorrowerReceivedMethod"), FRM_DS_GetValue(objData, "ReceivedMethodCoBorrower"), "Received Method CoBorrower"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PresumedReceivedDateCoBorrower")) Then
		GUI_Object_ValidateText objDisclosureDetails.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpCoBorrowerReceivedDate;.*"), FRM_DS_GetValue(objData, "PresumedReceivedDateCoBorrower"), "Presumed Received Date CoBorrower"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "ActualReceivedDateCoBorrower")) Then
		GUI_Object_ValidateText objDisclosureDetails.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpCoBorrowerActualReceivedDate;.*"), FRM_DS_GetValue(objData, "ActualReceivedDateCoBorrower"), "Actual Received Date CoBorrower"
	End If

    Set objData = Nothing
End Function




'This function is for Set Compliance Timeline
'@code
'    BIZ_DisclosureTrackingTool_SetComplianceTimeline(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_SetComplianceTimeline(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking", "Set Compliance timeline using Row Id '"&strRowID&"' in the VerifyComplianceTimeline datasheet", Null
    
    Dim objData
	Set objData = FRM_DS_GetTestData("Tools_DisclosureTracking", "SetComplianceTimeline", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3142_ApplicationDate")) Then
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfEdit("swfname:=pbIcon")
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpLEApp;gcCompliance;.*"), FRM_DS_GetValue(objData, "3142_ApplicationDate")
		UTIL_Win_Sendkey "{TAB}"
	End If
	Set objData = Nothing
End Function




'This function is for Set other Tracking
'@code
'    BIZ_DisclosureTrackingTool_SetOtherTracking(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingTool_SetOtherTracking(strRowID)

    FRM_Logger_ReportInfoEvent "Disclosure Tracking", "Set other tracking using Row Id '"&strRowID&"' in the SetOtherTracking datasheet", Null
    
    Dim objData	
	Set objData = FRM_DS_GetTestData("Tools_DisclosureTracking", "SetOtherTracking", strRowID)

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3545_Charm")) Then
		GUI_SwfEdit_Type SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCHARMDate;.*"), FRM_DS_GetValue(objData, "3545_Charm")
		UTIL_Win_Sendkey "{TAB}"
	End If
	Set objData = Nothing
End Function


'This function is for verify LE tracking dates dispaly
'@code
'    BIZ_DisclosureTrackingTool_VerifyIfLETrackingDatesAreDisplayed()
'@endcode

Function BIZ_DisclosureTrackingTool_VerifyLETrackingDatesDisplay()

	FRM_Logger_ReportInfoEvent "Verify LE Tracking Details", "Validate the fields Application Date, LE Due Date, e Sign Date, Closing Date, LE Sent Date and LE Received Date", Null
    
    Dim objDisclosureTrackingScreen, objDisclosureDetails, ApplicationDate, LEDueDate, eConsentDate, EstimatedClosingDate, LESentDate, LEReceivedDate
    
	Set objDisclosureTrackingScreen = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objDisclosureDetails 		= SwfWindow("swfname:=DisclosureDetailsDialog2015")
	
	'====== Go to Tools->Disclosure Tracking ======
	BIZ_Tools_Open "Disclosure Tracking"

	Wait g_TinyWaitSmall

	ApplicationDate 	 = GUI_Object_GetPropertyValue(objDisclosureTrackingScreen.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpLEApp;gcCompliance;panel1;groupContainer1;DisclosureTracking2015WS;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm","swftypename:=System.Windows.Forms.TextBox"), "text")
	LEDueDate 			 = GUI_Object_GetPropertyValue(objDisclosureTrackingScreen.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpLEDue;gcCompliance;panel1;groupContainer1;DisclosureTracking2015WS;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm"), "text")
	eConsentDate		 = GUI_Object_GetPropertyValue(objDisclosureTrackingScreen.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpeSign;gcCompliance;panel1;groupContainer1;DisclosureTracking2015WS;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm","swftypename:=System.Windows.Forms.TextBox"), "text")
	EstimatedClosingDate = GUI_Object_GetPropertyValue(objDisclosureTrackingScreen.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpActClosingDate;gcCompliance;panel1;groupContainer1;DisclosureTracking2015WS;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm"), "text")
	LESentDate 			 = GUI_Object_GetPropertyValue(objDisclosureTrackingScreen.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpLESent;gcLE;panel1;groupContainer1;DisclosureTracking2015WS;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm"), "text")
	LEReceivedDate 		 = GUI_Object_GetPropertyValue(objDisclosureTrackingScreen.SwfEdit("swfname:=txtDate", "swfname path:=txtDate;dpLEReceived;gcLE;panel1;groupContainer1;DisclosureTracking2015WS;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm"), "text")

	If(Len(ApplicationDate) > 0 and Len(LEDueDate) > 0 and Len(eConsentDate) > 0 and Len(LESentDate) > 0 and Len(LEReceivedDate) > 0) Then
		FRM_Logger_ReportPassEvent "Verify if all the compliance timeline dates and LE Tracking dates are populated except the safeharbor sent date", "Application Date, LE Due Date, e Sign Date, Closing Date, LE Sent Date and LE Received Dates are populated", Null
	Else
		FRM_Logger_ReportFailEvent "Verify if all the compliance timeline dates and LE Tracking dates are populated except the safeharbor sent date", "Application Date, LE Due Date, e Sign Date, Closing Date, LE Sent Date and LE Received Date are not populated", Null
	End If
	
	Set objDisclosureTrackingScreen = Nothing
	Set objDisclosureDetails 		= Nothing
End Function


'This function is for verify editablefileds
'@code
'    BIZ_DisclosureTrackingTool_VerifyEditableFieldsInDisclosureDetails()
'@endcode
Function BIZ_DisclosureTrackingTool_VerifyEditableFieldsInDisclosureDetails()

	FRM_Logger_ReportInfoEvent "Verify LE Tracking Details", "Validate the editable fields Disclosure Details Screen", Null
    
    Dim objDisclosureTrackingScreen, objDisclosureDetails
    
	Set objDisclosureTrackingScreen = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen")
	Set objDisclosureDetails 		= SwfWindow("swfname:=DisclosureDetailsDialog2015")

	'====== Go to Tools->Disclosure Tracking ======
	BIZ_Tools_Open "Disclosure Tracking"
	
	intNumberOfRows  = GUI_List_GetNumberofRows(objDisclosureTrackingScreen.SwfObject("swfname:=gvHistory"))
	
    If (intNumberOfRows > 0) Then 
		GUI_List_ClickOnCellData objDisclosureTrackingScreen.SwfObject("swfname:=gvHistory"), 0, 0, False, False, False, "Double"
		If (GUI_Object_IsExistX(objDisclosureDetails, 100)) Then
			GUI_Object_ValidateEnabled objDisclosureDetails.SwfComboBox("swfname:=cmbDisclosureType"), "Disclosre Type Field"
			GUI_Object_ValidateEnabled objDisclosureDetails.SwfCheckBox("swfname:=chkIntent"), "Intent to Proceed"
			GUI_Object_ValidateEnabled objDisclosureDetails.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCoBorrowerActualReceivedDate;panel2;tableLayoutPanel1;pnlBasicInfo;tabPageDetail;tcDisclosure;DisclosureDetailsDialog2015"), "Actual Received Date"
			GUI_Object_ValidateEnabled objDisclosureDetails.SwfCheckBox("swfname:=chkLEDisclosedByBroker"),"Loan Estimate Disclosed by Broker"
			If(GUI_Object_GetPropertyValue(objDisclosureDetails.SwfCheckBox("swfname:=chkIntent"), "enabled")) Then 
				GUI_SwfCheckbox_Set objDisclosureDetails.SwfCheckBox("swfname:=chkIntent"), "ON"
			End If
			objDisclosureDetails.SwfButton("swfname:=btnOK").Click
		Else
			FRM_Logger_ReportFailEvent "Document Details Screen", "Error in opening the document Details Screen", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Document Details Screen", "Disclosure History Details are not displayed", Null
	End If
    
	Set objDisclosureTrackingScreen = Nothing
	Set objDisclosureDetails 		= Nothing
End Function



'This function is to get the row number based on combination of disclosure type and LE sent?
'@code
'    BIZ_GetRowOfDisclosureType(strDisclosureTypeVal, strSentStatus, strColName)
'@endcode
'@param strDisclosureTypeVal values of disclosure type
'@param strLESentStatus values of LE Sent type
'@param strColName values "LE" or "CD"

Function BIZ_GetRowOfDisclosureType(strDisclosureTypeVal, strSentStatus, strColName)

	Dim intRowsInDiscHistory, strDisclosureType
	
	intRowsInDiscHistory = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"))
	
		For i = 0 To intRowsInDiscHistory - 1
            strDisclosureType =	GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"Disclosure Type")
		    select Case UCase(strColName)
            Case "LE"
            strSentStatusVal = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"LE Sent?")
            Case "CD"
            strSentStatusVal = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"CD Sent?")
            End Select
		
            If (strDisclosureType = strDisclosureTypeVal) And (strSentStatus = strSentStatusVal) Then
			BIZ_GetRowOfDisclosureType	=	i
		Exit For
            End If
        Next
		
End Function



'This function is for Set Presumed Received Time &  Actual Received Time of one disclosure tracking record in disclosure details window for coborrower
'@code
'    BIZ_DisclosureTrackingTool_SetCoBorrowerReceviedDates(datePresumedReceive, dateActualReceive, strDisclosureType)
'@endcode
'@param datePresumedReceive the value of Presumed Received Date
'@param dateActualReceive the value of Actual Received Date
'@param strDisclosureType this value decided to open initial or revised record

Function BIZ_DisclosureTrackingTool_SetCoBorrowerReceviedDates(datePresumedReceive, dateActualReceive, strDisclosureType)

    FRM_Logger_ReportInfoEvent "Set Disclosure Tracking Record date for Co-Borrower", "Set date in Disclosure Tracking Record", Null

	'====== Go to Tools->Disclosure Tracking ======
	BIZ_Tools_Open "Disclosure Tracking"

	'====== Open LE Disclosure Record ======
	BIZ_DisclosureTrackingTool_ClickRecord "Disclosure Type", strDisclosureType, "Double"

	'====== Enter Presumed Received Date as today's date, enter Actual Received Date as today's date ======
    Dim objWndDisclosureDetails
	Set objWndDisclosureDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")

	If Len(datePresumedReceive)>1 Then
		'Click lock icon to ensure Presumed Received Date can be inputed
	   If Not objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=1").GetROProperty("enabled") Then
			   GUI_SwfButton_Click objWndDisclosureDetails.SwfObject("swfname:= pbIcon", "index:=8")
	   End If
		GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=1"), datePresumedReceive
	End If
	GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=0"), dateActualReceive
	
	'====== Click OK button ======
	GUI_SwfButton_Click objWndDisclosureDetails.SwfButton("swfname:=btnOK")
	GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"
	    
	Set objWndDisclosureDetails = Nothing
	
End Function



'This function is used to change the disclosure sent date
'@code
'    Function BIZ_DisclosureTrackingTool_ChangeSentDateOfDisclosure(dateSentOfDisclosure)
'@endcode
'@param dateSentOfDisclosure date to be changed should be passed

Function BIZ_DisclosureTrackingTool_ChangeSentDateOfDisclosure(dateSentOfDisclosure)
	
	Dim objWndDisclosureDetails
	Set objWndDisclosureDetails	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")

	If Not objWndDisclosureDetails.SwfCalendar("swfname:=dtDisclosedDate").GetROProperty("enabled") Then
		GUI_SwfButton_Click objWndDisclosureDetails.SwfObject("swfname:=pbIcon","swfname path:=pbIcon;lbtnSentDate;.*")
		GUI_Object_WaitTillExistX objWndDisclosureDetails.SwfCalendar("swfname:=dtDisclosedDate"), 60
		objWndDisclosureDetails.SwfCalendar("swfname:=dtDisclosedDate").SetDate dateSentOfDisclosure
	Else
		GUI_Object_WaitTillExistX objWndDisclosureDetails.SwfCalendar("swfname:=dtDisclosedDate"), 60
		objWndDisclosureDetails.SwfCalendar("swfname:=dtDisclosedDate").SetDate dateSentOfDisclosure
	End If
	
	GUI_Object_WaitTillExistX objWndDisclosureDetails.SwfButton("swfname:=btnOK"), 40
	GUI_SwfButton_Click objWndDisclosureDetails.SwfButton("swfname:=btnOK")
	GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"

	Set objWndDisclosureDetails	=	Nothing
	
End Function



'This function is used to get the row number based on latest time stamp
'@code
'    BIZ_DisclosureTrackingSettings_GetRowOfDisclosureBasedOnLatestTimeStamp(DateCurrentPST)
'@endcode
'param DateCurrentPST

Function BIZ_DisclosureTrackingSettings_GetRowOfDisclosureBasedOnLatestTimeStamp(DateCurrentPST)
	
	Dim intRowsInDiscHistory, strDisclosureType
	intRowsInDiscHistory =	GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"))
	
	For i = 0 To intRowsInDiscHistory - 1
		strDisclosureType	=	GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"Sent Date")
		If Instr(1, strDisclosureType, DateCurrentPST) > 0 Then
			BIZ_DisclosureTrackingSettings_GetRowOfDisclosureBasedOnLatestTimeStamp	=	i
	Exit For
		End If
	Next
		
End Function



'This function is for Set Presumed Received Time &  Actual Received Time of one disclosure tracking record in disclosure details window
'@code
'    BIZ_DisclosureTrackingTool_SetBorrowerReceviedDatesBasedOnRow(datePresumedReceive, dateActualReceive, intRow)
'@endcode
'@param datePresumedReceive the value of Presumed Received Date
'@param dateActualReceive the value of Actual Received Date
'@param intRow pass the row number

Function BIZ_DisclosureTrackingTool_SetBorrowerReceviedDatesBasedOnRow(datePresumedReceive, dateActualReceive, intRow)

    FRM_Logger_ReportInfoEvent "Set Disclosure Tracking Record date", "Set date in Disclosure Tracking Record", Null
	
	GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intRow, True, False, False, "Double"
	
	'====== Enter Presumed Received Date as today's date, enter Actual Received Date as today's date ======
    Dim objWndDisclosureDetails
	Set objWndDisclosureDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")
	
	If Len(datePresumedReceive)>1 Then
		'Click lock icon to ensure Presumed Received Date can be inputed
		If Not objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=3").GetROProperty("enabled") Then
			GUI_SwfButton_Click objWndDisclosureDetails.SwfObject("swfname:= pbIcon", "index:=7")
		End If
		If Not objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=3").GetROProperty("enabled") Then
			GUI_SwfButton_Click objWndDisclosureDetails.SwfObject("swfname:= pbIcon", "index:=9")
			GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=3"), datePresumedReceive
		Else
			GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=3"), datePresumedReceive
		End If		
	End If
	
	GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=2"), dateActualReceive
    
	'====== Click OK button ======
	GUI_SwfButton_Click objWndDisclosureDetails.SwfButton("swfname:=btnOK")
	GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
        
	Set objWndDisclosureDetails = Nothing

End Function



'This function is for Set Presumed Received Time &  Actual Received Time of one disclosure tracking record in disclosure details window for coborrower
'@code
'    BIZ_DisclosureTrackingTool_SetCoBorrowerReceviedDatesBasedOnRow(datePresumedReceive, dateActualReceive, intRow)
'@endcode
'@param datePresumedReceive the value of Presumed Received Date
'@param dateActualReceive the value of Actual Received Date
'@param intRow pass the row number

Function BIZ_DisclosureTrackingTool_SetCoBorrowerReceviedDatesBasedOnRow(datePresumedReceive, dateActualReceive, intRow)

    FRM_Logger_ReportInfoEvent "Set Disclosure Tracking Record date for Co-Borrower", "Set date in Disclosure Tracking Record", Null
	
	GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intRow, True, False, False, "Double"

	'====== Enter Presumed Received Date as today's date, enter Actual Received Date as today's date ======
    Dim objWndDisclosureDetails
	Set objWndDisclosureDetails = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")

	If Len(datePresumedReceive)>1 Then
		'Click lock icon to ensure Presumed Received Date can be inputed
		If Not objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=1").GetROProperty("enabled") Then
			GUI_SwfButton_Click objWndDisclosureDetails.SwfObject("swfname:= pbIcon", "index:=8")
		End If
		GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=1"), datePresumedReceive
	End If
	GUI_SwfEdit_Set objWndDisclosureDetails.SwfEdit("swfname:=txtDate", "index:=0"), dateActualReceive
	
	'====== Click OK button ======
	GUI_SwfButton_Click objWndDisclosureDetails.SwfButton("swfname:=btnOK")
	GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
	    
	Set objWndDisclosureDetails = Nothing
	
End Function




'This function is used to send LE and CD disclosure from New Disclosure Record
'@code
'     BIZ_DisclosureTrackingTool_NewDisclosureRecordLECDDateIssuedChecking(strLeCd)
'@endcode
'@param strLeCd - "LE" or "CD" Disclosure to be send

Function BIZ_DisclosureTrackingTool_NewDisclosureRecordLECDDateIssuedChecking(strLeCd)
 	
 	FRM_Logger_ReportInfoEvent "LE and CD Disclosure","Perform "&strLeCd&" Disclosure",Null
 	
	Set objMainWindow 		= SwfWindow("swfname:=MainForm")
	Set objDisclosureWindow = objmainWindow.SwfWindow("swfname:=AdHocDisclosure2015")
	Set objLEDateIssue		= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfWindow("swfname:=UpdateLECDDateIssued")
		
	Wait g_LongWaitLarge 
	If GUI_Object_IsExistX(objmainWindow.SwfObject("swfname:=btnAdd"),30) Then
		GUI_SwfObject_Click objmainWindow.SwfObject("swfname:=btnAdd")
	Else
		FRM_Logger_ReportFailEvent "Verify and Click on Add Button","Add Button not found",Null
	End If 
	
	GUI_Object_WaitTillExistX objDisclosureWindow,40
	
	'Disclosure
	GUI_SwfCheckbox_Set objDisclosureWindow.SwfCheckBox("swfname:=chkDisclosure"), "ON"
	
	If UCase(strLeCd) = "LE" Then
	    GUI_SwfRadioButton_Click objDisclosureWindow.SwfRadioButton("swfname:=rdbLE")
	ElseIf Ucase(strLeCd) = "CD" Then
	    GUI_SwfRadioButton_Click objDisclosureWindow.SwfRadioButton("swfname:=rdbCD")
	End If

	GUI_SwfButton_Click	objDisclosureWindow.SwfButton("swfname:=btnYes")
	
	If GUI_Object_IsExist(objLEDateIssue) Then															'LE Date window occurs only for the first Print preview as a result else is not declared
		GUI_SwfButton_Click objLEDateIssue.SwfButton("swfname:=btnOK")
	End If 
	
	Set objMainWindow 		= Nothing
	Set objDisclosureWindow = Nothing

End Function


'This function is update the Closing Disclosure Details
'@code
'    BIZ_DisclosureTrackingTool_UpdateClosingDisclosureDetails()
'@endcode
Function BIZ_DisclosureTrackingTool_UpdateClosingDisclosureDetails()
	BIZ_Tools_Open "Disclosure Tracking"
	Wait g_TinyWaitSmall
	Set objDisclosureHistory = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gvHistory")
	intNumberDisclosureTrackings =  GUI_List_GetNumberofRows(objDisclosureHistory)
	For intRow = 0 To intNumberDisclosureTrackings-1 Step 1
		GUI_List_ClickOnCell objDisclosureHistory, Null,intRow, 1, True, False, False, "Single"	
		If(SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnMarkInvalid").Exist(5)) Then
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnMarkInvalid")
		End If
		If(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("text:=OK").Exist(10)) Then 
			SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("text:=OK").Click
			Wait g_TinyWaitMedium
			GUI_List_ClickOnCell objDisclosureHistory, Null,intRow, 1, True, False, False, "Double"	
			Wait g_TinyWaitMedium
			Set objDisclosureDetailsDialog =  SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=DisclosureDetailsDialog2015")
			If(Not objDisclosureDetailsDialog.Exist(1)) Then 
				Set objDisclosureDetailsDialog =  SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015")
			End If
			If(objDisclosureDetailsDialog.SwfCheckBox("swfname:=chkIntent").Exist(1)) Then 
				If(GUI_Object_GetPropertyValue(objDisclosureDetailsDialog.SwfCheckBox("swfname:=chkIntent"), "enabled")) Then 
					GUI_SwfCheckbox_Set objDisclosureDetailsDialog.SwfCheckBox("swfname:=chkIntent"), "OFF"
				End If
			End If
			objDisclosureDetailsDialog.SwfButton("swfname:=btnOK").Click
			Set objDisclosureDetailsDialog = Nothing
			Wait g_TinyWaitMedium
			If(SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnMarkInvalid").Exist(5)) Then
				GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfButton("swfname:=btnMarkInvalid")
			End If
			If(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("text:=OK").Exist(10)) Then 
				SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("text:=OK").Click
			End If
		End If
	Next
	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnAdd")
	GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfCheckBox("swfname:=chkDisclosure"), "On"
	GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfRadioButton("swfname:=rdbCD")
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfButton("swfname:=btnYes")
	wait g_TinyWaitLarge  +  g_TinyWaitLarge  'wait is used to handle sync
	
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfWindow("swfname:=UpdateLECDDateIssued").Exist(10) Then
		If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfWindow("swfname:=UpdateLECDDateIssued").SwfRadioButton("swfname:=rdbDate").GetRoProperty("enabled") Then
			GUI_SwfRadioButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfWindow("swfname:=UpdateLECDDateIssued").SwfRadioButton("swfname:=rdbDate")
		End If	
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AdHocDisclosure2015").SwfWindow("swfname:=UpdateLECDDateIssued").SwfButton("swfname:=btnOK")
	End If		
	
	wait g_TinyWaitLarge   +  g_TinyWaitLarge + g_TinyWaitSmall 'wait is used to handle sync
	Set objDisclosureHistory = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfObject("swfname:=gvHistory")
	GUI_List_ClickOnCell objDisclosureHistory, Null,0, 1, True, False, False, "Double"	
	GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=cmbDisclosedMethod"), "In Person"
	'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	'Francesca commenting to resolve the screen resolution issue for ok click
    'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick

End Function 

'This function is for Preview Disclosure Tracking Settings
'@code
'    BIZ_Setting_Loansetup_PreviewDisclosureTrackingSettings)
'@endcode
'@param strPromptFlag string that used to select checkbox 'Prompt users before a record is created'

Function BIZ_Setting_Loansetup_PreviewDisclosureTrackingSettings(strPromptFlag)

	Dim objSettings	
	
	'================ Select check box 'Create a record when disclosures are previewed' =============
	FRM_Logger_ReportInfoEvent "Select 'Create a record when disclosures are previewed'", "Check 'Create a record when disclosures are previewed' check box", Null
	
	Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	boolPreReviewRec=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkAutoPrintPreview"), "Checked")

	If Not(boolPreReviewRec) Then
		GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkAutoPrintPreview"), "ON"
	End If

	'================ Select\Unselect check box 'Prompt users before a record is created' =============
	boolPromptUser=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "Checked")
	
	If lcase(strPromptFlag)="yes" Then	
		FRM_Logger_ReportInfoEvent "Select 'Prompt users before a record is created'", "Check 'Prompt users before a record is created' check box", Null
		If Not(boolPromptUser) Then
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "ON"
		End If
	ElseIf lcase(strPromptFlag)="no" Then
		FRM_Logger_ReportInfoEvent "Unselect 'Prompt users before a record is created'", "Uncheck 'Prompt users before a record is created' check box", Null	
		If boolPromptUser Then
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "OFF"
		End If
	End If
	
	'========================= Save Settings ==================================	
	If GUI_Object_GetPropertyValue(objSettings.SwfObject("swfname:=stdIconBtnSave"), "enabled") Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If	
	
	'========================= Close Settings Window ==================================	
	GUI_Window_Close objSettings  

	Set objSettings = Nothing 

End Function




'This function is for Preview Disclosure Tracking Settings
'@code
'    BIZ_Setting_Loansetup_PreviewDisclosureTrackingSettings)
'@endcode
'@param strPromptFlag string that used to select checkbox 'Prompt users before a record is created'

Function BIZ_Setting_Loansetup_PreviewDisclosureTrackingSettings(strPromptFlag)

	Dim objSettings	
	
	'================ Select check box 'Create a record when disclosures are previewed' =============
	FRM_Logger_ReportInfoEvent "Select 'Create a record when disclosures are previewed'", "Check 'Create a record when disclosures are previewed' check box", Null
	
	Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	boolPreReviewRec=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkAutoPrintPreview"), "Checked")

	If Not(boolPreReviewRec) Then
		GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkAutoPrintPreview"), "ON"
	End If

	'================ Select\Unselect check box 'Prompt users before a record is created' =============
	boolPromptUser=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "Checked")
	
	If lcase(strPromptFlag)="yes" Then	
		FRM_Logger_ReportInfoEvent "Select 'Prompt users before a record is created'", "Check 'Prompt users before a record is created' check box", Null
		If Not(boolPromptUser) Then
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "ON"
		End If
	ElseIf lcase(strPromptFlag)="no" Then
		FRM_Logger_ReportInfoEvent "Unselect 'Prompt users before a record is created'", "Uncheck 'Prompt users before a record is created' check box", Null	
		If boolPromptUser Then
			GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "OFF"
		End If
	End If
	
	'========================= Save Settings ==================================	
	If GUI_Object_GetPropertyValue(objSettings.SwfObject("swfname:=stdIconBtnSave"), "enabled") Then
		GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If	
	
	'========================= Close Settings Window ==================================	
	GUI_Window_Close objSettings  

	Set objSettings = Nothing 

End Function




'This function is to add CD DT record via Print Preview 
'@code
'    BIZ_DisclosureTracking_SendIntialCD_PrintPreview()
'@endcode

Function BIZ_DisclosureTracking_SendIntialCD_PrintPreview()

	Dim objMainWindow, objPrintRuleCheckStatusForm, objFieldQuickEditForm	
	FRM_Logger_ReportInfoEvent "Send Initial CD Disclosure - Print Preview", "Sent Initial Closing Disclosure - Print Preview", Null
	
	Set objMainWindow               = SwfWindow("swfname:=MainForm")
	Set objPrintRuleCheckStatusForm = objMainWindow.SwfWindow("swfname:=PrintRuleCheckStatusForm")
	Set objFieldQuickEditForm       = objPrintRuleCheckStatusForm.SwfWindow("swfname:=FieldQuickEditForm")
	
	'========Navigate to CD Page 1 and Click on Print Button =======================
	BIZ_Forms_Open "Closing Disclosure Page 1"
	GUI_SwfObject_Click objMainWindow.SwfObject("swfname:=printBtn")
	
	'========Click on Print Preview Button ===============
	If objMainWindow.SwfWindow("swfname:=FormSelectorDialog").Exist(7) Then
		        Set objPrint = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")        
				'==============select the form and click on print button
				 GUI_List_ClickRow objPrint.SwfObject("swfname:=gridViewSelectedFiles"),Null,"Name","Closing Disclosure",True,False,False,"Single"   

		GUI_SwfButton_Click objMainWindow.SwfWindow("swfname:=FormSelectorDialog").SwfButton("swfname:=btnPreview")
	End If	
	
	'========Choose the CD date issued ===============
	If  SwfWindow("swfname:=UpdateLECDDateIssued").Exist(7) Then
		GUI_SwfButton_Click SwfWindow("swfname:=UpdateLECDDateIssued").SwfButton("swfname:=btnOK")
	End If
	
	'========Complete the fields and Click on Preview Button ===============
	If objPrintRuleCheckStatusForm.Exist(7) Then			
		GUI_SwfButton_Click objPrintRuleCheckStatusForm.SwfButton("swfname:=btnCompleteFields")
       		wait 2
	   strDate = UTIL_Date_FormatDateByPattern(now,"mm/dd/yyyy")        
	   GUI_SwfEdit_Set objFieldQuickEditForm.SwfEdit("swfname:=b_748"), strDate	
	   UTIL_Win_SendKey "{TAB}"
       		wait 2
	   GUI_SwfButton_Click objFieldQuickEditForm.SwfButton("swfname:=btnOK")
	   GUI_SwfButton_Click objPrintRuleCheckStatusForm.SwfButton("swfname:=btn_print")
	End If
	
	'====== Close Preview window by clicking on Close button ================
	Set objPreviewDialog=objMainWindow.SwfWindow("swfname:=FormSelectorDialog").SwfWindow("swfname:=PdfPreviewDialog")
	If GUI_Object_IsExistX(objPreviewDialog, 90) Then
		GUI_SwfButton_Click objPreviewDialog.SwfButton("swfname:=btnClose")
	End If
	
	'===============Click on Yes button to add DT record===============
	If SwfWindow("swfname:=DisclosureTrackingDialog").Exist(5) Then
		GUI_SwfButton_Click SwfWindow("swfname:=DisclosureTrackingDialog").SwfButton("swfname:=btnYes")
	End If
	
	'========Click on Close Button to close print window ===============
	GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"
	GUI_SwfButton_Click objMainWindow.SwfWindow("swfname:=FormSelectorDialog").SwfButton("swfname:=btnClose")	

End Function


'This function is to validate SingleBorrPair Non Resc LoansIntial/Revised CD Received Date and ECD
'@code
'    BIZ_GetRowOfDiscBIZ_DisclosureTracking_NonResc_SingleBorrPair_ValidateIntialRevisedCDlosureType(strRowID,dtSentDate,strDisclosureType)
'@endcode
'@param strRowID - Row ID
'@param dtSentDate values of Cd Sent date
'@param strDisclosureType values Initial OR Revised

Function BIZ_DisclosureTracking_NonResc_SingleBorrPair_ValidateIntialRevisedCD(strRowID,dtSentDate,strDisclosureType,strNBOFlag)	
	
	Set objMainForm	=	SwfWindow("swfname:=MainForm")		
	
	'======================Validation Of ECD, Before selecting Initial/Revised CD Recieved======
	If lcase(strDisclosureType)="initial" Then
	   '=========== Double Click on Intial CD ================= 		
		intInitialCDRow	=	BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","CD")
		GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialCDRow, True, False, False, "Double"
		GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
	    
	    '==================Set Send Date================
		BIZ_DisclosureTrackingTool_SetDisclosureDetail dtSentDate,"","",strNBOFlag
	
	   dtCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")
	   strECDFieldDesc="Earliest Closing Date,Before selecting Initial CD Recieved is CD Sent + 6 Days"	 
	   FRM_VerifyEqual CDate(dtCDSent),CDate(dtSentDate),"Initial CD Sent Date ","Initial CD Sent Date matches Borrower's Input"
	Else	   
	   intInitialCDRow	=	BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","CD")
	   GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialCDRow, True, False, False, "Double"
	   
	   '===================Verifying eDisclosure Consent in eDisclosure Tab ==============================
		GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure"), "eDisclosure Tracking"
		Set objeDisc=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfObject("swfname:=grdDisclosureTracking")
		If CINT(GUI_List_GetRowIndex(objeDisc, "", "Consent when eDisclosure was sent"))=2 Then
		   If Cint(GUI_List_GetRowIndex(objeDisc, "Borrower", "Accepted"))=2 THen
   				FRM_Logger_ReportPassEvent "Consent when eDisclosure was sent for Borrower", "Borrower has been accepted Consent when eDisclosure was sent", null
		   Else
				FRM_Logger_ReportFailEvent "Consent when eDisclosure was sent for Co-Borrower", "Co-Borrower has not been accepted Consent when eDisclosure was sent", null
		   End If   
   
		   If Cint(GUI_List_GetRowIndex(objeDisc, "Co-Borrower", "Accepted"))=2 Then
   			  FRM_Logger_ReportPassEvent "Consent when eDisclosure was sent for Co-Borrower", "Co-Borrower has been accepted Consent when eDisclosure was sent", null
		   Else
   			  FRM_Logger_ReportFailEvent "Consent when eDisclosure was sent for Co-Borrower", "Co-Borrower has not been accepted Consent when eDisclosure was sent", null
		   End If
		   
		   '==============Verifying NBO======================	  
			If lcase(strNBOFlag)="yes" Then
				Set objeDisc=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfObject("swfname:=grdNBODisclosureTracking")			
				Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=dtDisclosureRecipientDropDown")
				Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", "E2E_DT_NBO1")
				strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + " " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")
				GUI_SwfComboBox_Select objRecipientDropDown,strName
				Set objFileContactData=Nothing
				
				If Cint(GUI_List_GetRowIndex(objeDisc, "Non-Borrowing Owner", "Accepted"))=2 Then
   			  		FRM_Logger_ReportPassEvent "Consent when eDisclosure was sent for Non-Borrowing Owner", "Non-Borrowing Owner has been accepted Consent when eDisclosure was sent", null
		   		Else
   			  		FRM_Logger_ReportFailEvent "Consent when eDisclosure was sent for Non-Borrowing Owner", "Non-Borrowing Owner has not been accepted Consent when eDisclosure was sent", null
		   		End If

		 		'=============== Set Actual Received Date for NBO========
			  	dtCoBorrActualRecDate=DateValue(UTIL_Date_GetCurrentTimeinPST())
				dtNBOActualRecDate=DateAdd("d",-1,cdate(dtCoBorrActualRecDate))
				GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure"), "Details"			 
								
				FRM_Logger_ReportInfoEvent "Set Actaul Received Date for NBO is earliest than Borrower and Co Borrower Actual Received Dates", "Set Actual Received Date for NBO is "&dtNBOActualRecDate, null	
				Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
				GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpNBOActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtNBOActualRecDate) 	
			End If		
		End If
		

	   '=========Select the Reason for Revised CD========	   
	   GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure"), "Reasons"
	   GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfCheckBox("swfname:=chkReason1"), "ON"
	   'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	   'Francesca commenting to resolve the screen resolution issue for ok click
		'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
	   
	   strECDFieldDesc="Earliest Closing Date,Before selecting Revised CD Recieved is CD Sent + 6 Days"	
	   dtCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")
	   FRM_VerifyEqual CDate(dtCDSent),CDate(dtSentDate),"Revised CD Sent Date ","Revised CD Sent Date matches Borrower's Input"
	   If BIZ_DisclosureTracking_HoliDay (dtCDSent,"Reg_ZBusinessCalender") Then
	      dtCDSent=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),1,"Reg_ZBusinessCalender")
	   End If	      
	End If
	dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")
	dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
	FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date",strECDFieldDesc		 
	 
	'==================Set Actual Received Dates for Borrower and Co-Borrower================  
	If lcase(strDisclosureType)="initial" Then
		'=========Calculation Presume Received Date=====================
		dtBorrPresumeRecDate=BIZ_DisclosureTracking_DateCalculation(cdate(dtSentDate),3,"Reg_ZBusinessCalender")
		dtCoBorrPresumeRecDate=BIZ_DisclosureTracking_DateCalculation(cdate(dtSentDate),3,"Reg_ZBusinessCalender")
		'=========Calculation Actual Received Date=====================
		dtBorrActualRecDate=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),4,"Reg_ZBusinessCalender")
		dtCoBorrActualRecDate=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),2,"Reg_ZBusinessCalender")
		
		intInitialCDRow	=	BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","CD")
		GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialCDRow, True, False, False, "Double"
		GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
		BIZ_DisclosureTrackingTool_SetDisclosureDetail "",dtBorrActualRecDate,dtCoBorrActualRecDate,strNBOFlag
	Else
		'=========Calculation Presume Received Date=====================		
		If BIZ_DisclosureTracking_HoliDay (DateValue(UTIL_Date_GetCurrentTimeinPST()),"Reg_ZBusinessCalender") Then
		     dtBorrPresumeRecDate=BIZ_DisclosureTracking_DateCalculation(DateValue(UTIL_Date_GetCurrentTimeinPST()),4,"Reg_ZBusinessCalender")
		     dtCoBorrPresumeRecDate=BIZ_DisclosureTracking_DateCalculation(DateValue(UTIL_Date_GetCurrentTimeinPST()),4,"Reg_ZBusinessCalender")
		Else
		  dtBorrPresumeRecDate=BIZ_DisclosureTracking_DateCalculation(DateValue(UTIL_Date_GetCurrentTimeinPST()),3,"Reg_ZBusinessCalender")
		  dtCoBorrPresumeRecDate=BIZ_DisclosureTracking_DateCalculation(DateValue(UTIL_Date_GetCurrentTimeinPST()),3,"Reg_ZBusinessCalender")	
		End If
		
		'=========Calculation Actual Received Date=====================
		dtBorrActualRecDate=DateValue(UTIL_Date_GetCurrentTimeinPST())
		dtCoBorrActualRecDate=DateValue(UTIL_Date_GetCurrentTimeinPST())
	End If
		
	'==================Validation Of ECD, After selecting Initial/Revised CD Recieved======	
	If lcase(strDisclosureType)="initial" Then		
	   dtCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")
	   strECDFieldDesc="Earliest Closing Date,After selecting Initial CD Recieved: is CD Received + 3 Days"
	   strCDReceived="Initial CD Received Date"	   
	   strCDRecFieldDesc="Initial CD Received Date is Earliest of Earliest from Borrower and Co Borrower Actual and Presume Received Dates" 
	 Else
	   '===============Login into Loan Center==================		
		BIZ_DisclosureTracking_LoanCenter_Login strRowID
		
		Set objData     = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)    
		strBorrName = FRM_DS_GetValue(objData, "BorrowerName")
		strBorrAuthCode = FRM_DS_GetValue(objData, "BorrowerCode")
		strCoBorrName = FRM_DS_GetValue(objData, "CoBorrowerName")
		strCoAuthCode = FRM_DS_GetValue(objData, "CoBorrowerCode")
			
		'==============Select Loan and eSign on Docs for Borrower and Co Borrower
		If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrName, BIZ_Loan_GetLoanNumber) Then
			BIZ_DisclosureTracking_LoanCenter_eSignDocument strBorrName, strBorrAuthCode
			BIZ_DisclosureTracking_LoanCenter_eSignDocument strCoBorrName, strCoAuthCode
		End If
		
		'======== Logout and close Browser ========
		BIZ_DisclosureTrackingWeb_Logout
		
		'======== Go to Disclosure Tracking Tools===========
		BIZ_Tools_Open "Disclosure Tracking"
		
	   strECDFieldDesc="Earliest Closing Date,After selecting Revised CD Recieved: is Revised CD Received + 3 Days" 
	   strCDReceived="Revised CD Received Date"
	   strCDRecFieldDesc="Revised CD Received Date is Earliest of Earliest from Borrower and Co Borrower Actual and Presume Revised Received Dates " 
	   dtCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
	   If BIZ_DisclosureTracking_HoliDay (dtCDReceived,"Reg_ZBusinessCalender") Then
	      dtCDReceived=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDReceived),1,"Reg_ZBusinessCalender")
	   End If	
	End If
	dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDReceived),3,"Reg_ZBusinessCalender")
	dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
	FRM_VerifyEqual CDate(dtExpECD),CDate(dtECDDate),"Earliest Closing Date",strECDFieldDesc
	
	'=================== Get eaarliest date from Borrower actual and presume dates =======
	Dim arrBorrDates(1)
	arrBorrDates(0)=cdate(dtBorrPresumeRecDate)
	arrBorrDates(1)=cdate(dtBorrActualRecDate)
	dtEarliestBorrDate=BIZ_GetEarliestDate(arrBorrDates)
	
	'=================== Get eaarliest date from Co-Borrower actual and presume dates =======
    Dim arrCoBorrDates(1)
	arrCoBorrDates(0)=cdate(dtCoBorrPresumeRecDate)
	arrCoBorrDates(1)=cdate(dtCoBorrActualRecDate)
	dtEarliestCoBorrDate=BIZ_GetEarliestDate(arrCoBorrDates)
	
	'================= Get Earliest of Earliest Date from Borrower and Co-Borrower dates =======
    Dim arrEarliestDate(1)
	arrEarliestDate(0)=dtEarliestBorrDate
	arrEarliestDate(1)=dtEarliestCoBorrDate
	dtEarliestDate=BIZ_GetEarliestDate(arrEarliestDate)
	
	'==================Validation Of CD Received - Earliest of Earliest After selecting Initial CD========== 
	If lcase(strDisclosureType)="initial" Then
	   dtActualRecCDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;.*"),"text")
	   strMsg="NBO's CD Received date is not considered in CD Received Calculation"
	Else
	   dtActualRecCDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;.*"),"text")
	   strMsg="NBO's Revised CD Received date is not considered in Revised CD Received Calculation"
	End If	     
	FRM_VerifyEqual CDate(dtActualRecCDDate),CDate(dtEarliestDate),strCDReceived,strCDRecFieldDesc
	
	'==============Verifying NBO Received Date ======================	  
	If lcase(strNBOFlag)="yes" Then
		dtNBOActualRecDate=DateAdd("d",-1,cdate(dtCoBorrActualRecDate))
		FRM_VerifyNotEqual CDate(dtActualRecCDDate),CDate(dtNBOActualRecDate),strCDReceived,strMsg
	End If
End Function


'This function is to set SetDisclosure Detail
'@code
'    BIZ_DisclosureTrackingTool_SetDisclosureDetail(dtSentDate, dtBorrActualRecDate, dtCoBorrActualRecDate)
'@endcode
'@param dtSentDate values of CD Sent Date
'@param dtBorrActualRecDate values of Borr Actual Date
'@param dtCoBorrActualRecDate values of CoBorr Actual Date

Function BIZ_DisclosureTrackingTool_SetDisclosureDetail(dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate)
	
	FRM_Logger_ReportInfoEvent "Set CD (OR) LE Disclosure Details", "Set Sent Date, Actual Received Dates of Borrower and Co Borrower", null
	Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
	
	'==============Unlock Sent Date field and Set Date ======================
	If UTIL_String_IsNotEmpty(dtSentDate) Then	
		If Not objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").GetROProperty("enabled") Then
			Set objSentDate = objDisclosureWnd.SwfObject("swfname:=lbtnSentDate").SwfObject("swfname:=pbIcon")		
			GUI_SwfObject_Click objSentDate
			objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").SetDate CDate(dtSentDate)
		Else
			objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").SetDate CDate(dtSentDate)
		End If
	End If	
	
	'==============Set Actual Borrower Received Date ======================	
	If UTIL_String_IsNotEmpty(dtBorrActualRecDate) Then	
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtBorrActualRecDate)
	End If	

	'==============Unlock Sent Date field and Set Date ======================	
	If UTIL_String_IsNotEmpty(dtCoBorrActualRecDate) Then	
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtCoBorrActualRecDate) 	
	End If
	
	'==============Click on OK button =================
	'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	'Francesca commenting to resolve the screen resolution issue for ok click
    'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
	GUI_Dialog_Encompass_OKX 2, "Sundays and legal holidays"
	
End Function


'This function is to send eDisclosure CD or LE
'@code
'    BIZ_DisclosureTracking_SendeDisclosure(strPlanClodeRowID, strDocTypeRowID)
'@endcode
'@param strPlanClodeRowID 
'@param strDocTypeRowID 
Function BIZ_DisclosureTracking_SendeDisclosure(strPlanClodeRowID,strDocTypeRowID)
	
	FRM_Logger_ReportInfoEvent "Start: eDisclosure from eFolder Documents Tab", "Send eDisclosure for LE or CD", Null
	
	Dim objSelectPlanCode, objPlanCodeList, objScrollbar,objAddDocScroll,objData,objPreview
	Dim objSelectDocs, objClosingDocsList,objAddDocs,objDocList 

	'======== Click on efolder ========
	BIZ_Nav_eFoler_Open()
    	
	'====== Click eDisclosure button ======	
	 GUI_SwfButton_Click SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnDisclosures")	

	'====== Select Plan Code ======	
	Set objSelectPlanCode = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog")
	Set objPlanCodeList = objSelectPlanCode.SwfObject("swfname:=gvPlanCodes")
	Set objScrollbar = objSelectPlanCode.SwfScrollbar("swfname:=vPanelScrollBar")
	Set objPackageTypeList = objSelectPlanCode.SwfObject("swfname:=gvOptions") 
	
    If GUI_Object_IsExistX(objSelectPlanCode,50) Then
    	Set objDataPlan = FRM_DS_GetTestData("eFolder_Tab", "SelectPackageTypeAndPlanCode", strPlanClodeRowID)    
	    '====== Select Package Type =======
	    If GUI_Object_IsExistX(objPackageTypeList, 20) Then
	        GUI_List_ClickCheckbox objPackageTypeList, Null, objDataPlan.Item("PackageType"), 1, False, False, "Single", True
	    End If
    
	   '==========Click on Clear filter button and '======Select the plan code==========
	   GUI_SwfButton_Click objSelectPlanCode.SwfButton("swfname:=btnClearFilter")	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objDataPlan, "PlanCodeDescrition"))Then            
	   		GUI_List_ClickRow objPlanCodeList, Null, 1, Trim(FRM_DS_GetValue(objDataPlan, "PlanCodeDescrition")), True, True, False, "Single"	
			GUI_SwfButton_Click objSelectPlanCode.SwfButton("swfname:=processBtn")		   		
       Else
       		'======Select Generic from Investor ComboBox===================
	      	If GUI_Object_IsExistX(objSelectPlanCode.SwfComboBox("swfname path:=;gvPlanCodes;lstPlanCodes;grpPlanCode;planCodePnl;OrderDisclosureDialog"), 5) Then		   		
			  	GUI_SwfComboBox_Select objSelectPlanCode.SwfComboBox("swfname path:=;gvPlanCodes;lstPlanCodes;grpPlanCode;planCodePnl;OrderDisclosureDialog"), "Generic"			  	
			  	'====== Add an Plan Code ======
			  	GUI_List_ClickRow objPlanCodeList, objScrollbar, 1, "All Fixed Rate Conventional 1st Lien Loans", True, True, False, "Single"
			  	GUI_SwfButton_Click objSelectPlanCode.SwfButton("swfname:=processBtn")		
	  	 	End If	
		End IF	  
	End If
			
	'=============Check for Plan code Conflict dialog================
	If GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog").SwfWindow("swfname:=PlanCodeConflictDialog"), 10)	Then
	    GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog").SwfWindow("swfname:=PlanCodeConflictDialog").SwfButton("swfname:=btnSkipImport")
	    If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog").SwfWindow("swfname:=PlanCodeConflictDialog").Dialog("text:=Encompass").Exist(5) Then
	        GUI_WinButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDisclosureDialog").SwfWindow("swfname:=PlanCodeConflictDialog").Dialog("text:=Encompass").Winbutton("text:=&Yes")
	    End If
	End If
	
	'====== wait 'Closing Docs Audit' window display ======
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=AuditDialog"),30
	
	'====== Click 'Order Docs' button ======
	GUI_SwfButton_Click SwfWindow("swfname:=AuditDialog").SwfButton("swfname:=orderBtn")

	'=========== Click on close button on Form Failure Reason window========
	If GUI_Object_IsExistX(SwfWindow("swfname:=LetterPreviewMessage").SwfWindow("swfname:=PdfFormErrorDialog"),25) Then
		GUI_SwfButton_Click SwfWindow("swfname:=LetterPreviewMessage").SwfWindow("swfname:=PdfFormErrorDialog").SwfButton("swfname:=btnClose") 
	End If
	
	'====== wait 'Select Documents' window display ====== eFolderDialog
	GUI_Object_WaitTillVisibleX SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog"),80
	
	'====== Uncheck all selected docs  ======	
	Set objSelectDocs = SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog")
	Set objClosingDocsList = objSelectDocs.SwfObject("swfname:=gvDocuments")	
	GUI_SwfObject_ClickXY objClosingDocsList, 39, 10
	
	'====== Click on Additional Docs ======
	GUI_SwfButton_Click objSelectDocs.SwfButton("swfname:=btnAddDocs")
	
	'====== selecting documents" ======
	Set objAddDocs = objSelectDocs.SwfWindow("swfname:=PdfDocumentSelectionDialog")
	Set objDocList = objAddDocs.SwfObject("swfname:=gvForms")
	Set objAddDocScroll = objAddDocs.SwfScrollbar("swfname:=vPanelScrollBar")
	
	Set objDataDocs = FRM_DS_GetTestData("eFolder_Tab", "SelecteDisclosureDocs", strDocTypeRowID)	
	GUI_List_ClickRow objDocList, objAddDocScroll, 0, Trim(FRM_DS_GetValue(objDataDocs, "Docs")), True, False, False, "Single"        
	GUI_SwfButton_Click objAddDocs.SwfButton("swfname:=btnAdd")
	
	'====== Click on OK button ======	
	If GUI_Object_IsExistX(objSelectDocs.Dialog("text:=Encompass Docs"), 50) Then
		GUI_WinButton_Click objSelectDocs.Dialog("text:=Encompass Docs").WinButton("text:=OK")
	End If
	
	'====== Click on Send button ======	
	If GUI_Object_IsExistX(objSelectDocs.SwfButton("swfname:=btnSend"), 8) Then
		GUI_SwfButton_Click objSelectDocs.SwfButton("swfname:=btnSend")	
	End If
	
	'======Handles optonal popup=====
	'There are documetns included in this request that have Loan Originator signing points, but a Loan Originator is not 
	'currently assigned to the loan.  Do you want to continue?
	GUI_Dialog_Encompass_YesX 45, ""
	
	Set objDataPlan = Nothing
	Set objDataDocs = Nothing
	Set objSend = Nothing
	Set objAddDocScroll = Nothing
	Set objDocList = Nothing
	Set objAddDocs = Nothing
	Set objClosingDocsList = Nothing
	Set objSelectDocs = Nothing
	Set objScrollbar = Nothing
	Set objPlanCodeList = Nothing
	Set objSelectPlanCode = Nothing	
End Function

	
'This function is to set authentication code for borrowerr and co borrowe
'@code
'    BIZ_DisclosureTracking_SetAuthenticationCode(strAuthCodeRowID)
'@endcode	

Function BIZ_DisclosureTracking_SetAuthenticationCode(strAuthCodeRowID)	
	
    Dim objSend, objData    
    'Set objSend = SwfWindow("swfname:=SendDisclosuresDialog")
    Set objSend =SwfWindow("swfname:=eFolderDialog").SwfWindow("swfname:=FormSelectionDialog").SwfWindow("swfname:=SendDisclosuresDialog")
    Set objData = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strAuthCodeRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Borrower"))Then
       GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtBorrower"), FRM_DS_GetValue(objData, "Borrower")
    End If
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrower"))Then
       GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtCoborrower"), FRM_DS_GetValue(objData, "CoBorrower")
    End If
    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "SigningOption"))Then
	   GUI_SwfComboBox_Select objSend.SwfComboBox("swfname:=cboSigningOption"), FRM_DS_GetValue(objData, "SigningOption")
	End If
	'================Select Authentication Type and set the passwords -------------------------
	If Not UTIL_String_IsEmpty(FRM_DS_GetValue(objData, "SigningOption"))Then	
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AuthenticationMethod"))Then
		  GUI_SwfComboBox_Select objSend.SwfComboBox("swfname:=cboAuthentication"), FRM_DS_GetValue(objData, "AuthenticationMethod")
	   End If
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "BorrowerCode"))Then
		  GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtAuthenticationCode","index:=0"), FRM_DS_GetValue(objData, "BorrowerCode")
	   End If
	   
	   If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrowerCode")) and _
		  GUI_Object_IsExistX(objSend.SwfEdit("swfname:=txtAuthenticationCode","index:=1"), 10) Then
		  
		  If GUI_Object_GetPropertyValue(objSend.SwfEdit("swfname:=txtAuthenticationCode","index:=1"), "enabled") Then
			 GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtAuthenticationCode","index:=1"), FRM_DS_GetValue(objData, "CoBorrowerCode")
		  End If	
	   End If
	   
	    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOCode")) and _
		  GUI_Object_IsExistX(objSend.SwfEdit("swfname:=txtAuthenticationCode","index:=2"), 10) Then
		  
		  If GUI_Object_GetPropertyValue(objSend.SwfEdit("swfname:=txtAuthenticationCode","index:=1"), "enabled") Then
			 GUI_SwfEdit_Set objSend.SwfEdit("swfname:=txtAuthenticationCode","index:=2"), FRM_DS_GetValue(objData, "NBOCode")
		  End If	
	   End If		
	End If
		
	'============================Click on Send button and OK button==============
	GUI_SwfButton_Click objSend.SwfButton("swfname:=btnSend")
	
	Set objStatic = SwfWindow("swfname:=SendDisclosuresDialog").Dialog("index:=0").Static("index:=1")
	GUI_Object_WaitTillVisibleX objStatic,30	
    GUI_Object_ValidateText objStatic, "The disclosure package has been sent to the borrower.", null
    
	GUI_WinButton_Click SwfWindow("swfname:=SendDisclosuresDialog").Dialog("index:=0").WinButton("text:=OK")
	Wait 2
	'============ Close eFolder window ============
	GUI_Window_Close SwfWindow("swfname:=eFolderDialog")
	
	'============ ExitLoan ============
	'BIZ_Loan_Exit False
End Function 
	

'This function is to eSign on Loan Documents in Loan Center
'@code
'    BIZ_DisclosureTracking_LoanCenter_eSignDocument(strName, strAuthCode)
'@endcode

Function BIZ_DisclosureTracking_LoanCenter_eSignDocument(strName, strAuthCode)

	'==================View the Agreement and Accept it ===================
	BIZ_DisclosureTracking_LoanCenter_eSignAgreement strName

	FRM_Logger_ReportInfoEvent "eSign on eDisclosure Documents", "Started eSigning on eDisclosure Documents", Null
 	
 	'================== Enter Authentication Code and Continue =========================
	Set objWebPage  = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
	If objWebPage.WebEdit("html id:=passwordTextBox").Exist(60) Then
		GUI_WebEdit_Set objWebPage.WebEdit("html id:=passwordTextBox"), strAuthCode
	End If	
	GUI_Link_Click objWebPage.Link("html id:=NextButton_linkButton")
	
	'======== Click on Next button================
	GUI_Object_WaitTillVisibleX	Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("html id:=action-bar-btn-continue"),5
	GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("html id:=action-bar-btn-continue")
	Wait 3
	GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Start", "type:=button", "html tag:=BUTTON", "index:=0")
	Wait 3
	
	'=========Click on Sign Here =================
	Set objSign=Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=SignRequired - Sign Here","type:=button", "html tag:=BUTTON", "index:=0")
	If GUI_Object_IsExistX(objSign,10) Then	
		GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=SignRequired - Sign Here")
		FRM_Logger_ReportPassEvent "eSign on eDisclosure Ducuments", strName&" has eSigned on eDisclosure documents", null
	Else
		FRM_Logger_ReportFailEvent "eSign on eDisclosure Ducuments", strName&" has not eSigned on eDisclosure documents", null
	End If
	
	'=========Click on Adopt and Sign =================
	IF GUI_Object_IsExistX(Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Adopt and Sign", "type:=button", "html tag:=BUTTON", "index:=0"), 10) Then
		GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Adopt and Sign", "type:=button", "html tag:=BUTTON", "index:=0")
		FRM_Logger_ReportPassEvent "eSign on eDisclosure Ducuments", strName&" has eSigned on eDisclosure documents", null
	'Else
		'FRM_Logger_ReportFailEvent "eSign on eDisclosure Ducuments", strName&" has not eSigned on eDisclosure documents", null
	End IF
	Wait 3

	'=================Click on Finsh button======
	GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("html id:=action-bar-btn-finish")	
	GUI_Object_WaitTillExist objWebPage
	 
	Set objWebPage = Nothing
End Function


'This function is to Accept the agrrement of eSign
'@code
'    BIZ_DisclosureTracking_LoanCenter_eSignAgreement(strName)
'@endcode

Function BIZ_DisclosureTracking_LoanCenter_eSignAgreement(strName)
	FRM_Logger_ReportInfoEvent "View and Accept the agreement for eSign", "Accept the agreement for eSign", null

	'==================Click on eSign Button ==================== 
    Dim objWebPage, objData
    Set objWebPage  = Browser("name:=.*", "index:=0").Page("title:=.*", "index:=0")    
	GUI_Link_Click objWebPage.Link("name:=eSign", "index:=0")
	
	'==================Verify Agreement Page and Click on Agree button ====================		
	If GUI_Object_IsExistX(objWebPage.Link("name:=I Agree", "index:=0"),10) Then		
		If objWebPage.Link("name:=I Agree", "index:=0").Exist(3) Then
			FRM_Logger_ReportPassEvent "Validate Consent Agreement Page and Accept", strName& " has viewed and accepted the eSign Agreement", null
			GUI_Link_Click objWebPage.Link("name:=I Agree", "index:=0")
		End If		
	End If	
	Set objWebPage = nothing
	
End Function


'This function is to Login Loan Center
'@code
'    BIZ_DisclosureTracking_LoanCenter_Login(strRowID)
'@endcode

Function BIZ_DisclosureTracking_LoanCenter_Login(strRowID)
	GUI_Browser_CloseAll()
    Set objData = FRM_DS_GetGlobalTestData("Website", strRowID)
	GUI_Browser_OpenUrl objData.Item("URL"),"IE"
    GUI_Object_WaitTillExist Browser("creationtime:=0").Page("index:=0")
    
    Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")	
    GUI_Page_SetCurrent(objWebPage)
    
    If GUI_Object_IsExistX(objWebPage.Link("name:=>CHECK LOAN STATUS", "index:=0"), 5) Then
        GUI_Link_Click objWebPage.Link("name:=>CHECK LOAN STATUS", "index:=0")
    End If
	
	GUI_WebEdit_Set objWebPage.WebEdit("html id:=.*Email"), FRM_DS_GetValue(objData, "EmailAccount")
	GUI_WebEdit_Set objWebPage.WebEdit("html id:=.*Password"), FRM_DS_GetValue(objData, "Password")
	GUI_Link_Click objWebPage.Link("html id:=.*linkButton")
	
	Set objWebPage = Nothing
	Set objData    = Nothing	
End Function


'This function is to send eConsent
'@code
'    BIZ_DisclosureTracking_SendeConsent()
'@endcode
'@param strDisclosureTypeVal values of disclosure type
'@param strLESentStatus values of LE Sent type
'@param strColName values "LE" or "CD"

Function BIZ_DisclosureTracking_SendeConsent(strNBOFlag)
'======== Click on efolder ========
BIZ_Nav_eFoler_Open()
        
'======== Send eConsent ========
BIZ_Documents_SendeConsent True, True
    
'============ Close eFolder window ============
If GUI_Object_IsExistX (SwfWindow("swfname:=eFolderDialog"),5) Then
    GUI_Window_Close SwfWindow("swfname:=eFolderDialog")
End If
    
'============ Exit loan ============
'BIZ_Loan_Exit False
    
'============ Go to Loan Center and accept for Borrower and Co- Borrower ============
BIZ_DisclosureTrackingWeb_Login "E2E_DisclosureTracking"
BIZ_DisclosureTrackingWeb_BorrowerAcceptEConsent BIZ_Loan_GetLoanNumber,"E2E_DisclosureTracking", 1
BIZ_DisclosureTrackingWeb_BorrowerAcceptEConsent BIZ_Loan_GetLoanNumber,"E2E_DisclosureTracking", 2
If lcase(strNBOFlag)="yes" Then
	BIZ_DisclosureTrackingWeb_BorrowerAcceptEConsent BIZ_Loan_GetLoanNumber,"E2E_DisclosureTracking", 3
End If
BIZ_DisclosureTrackingWeb_Logout

'======== Go to Disclosure Tracking Tool and Validate eConsent Status===========
BIZ_Tools_Open "Disclosure Tracking"
GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSelecteSign") 
BIZ_DisclosureTracking_eConsentStatus strNBOFlag
End Function


'This function is to Validate eConsent Status
'@code
'    BIZ_DisclosureTracking_eConsentStatus(strDisclosureTypeVal, strSentStatus, strColName)
'@endcode

Function BIZ_DisclosureTracking_eConsentStatus(strNBOFlag)
    strExpStatus="Accepted"
    strExpStatusDate=DateValue(UTIL_Date_GetCurrentTimeinPST())
    strExpSource="WebCenter"

    Set objeConsent=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=eSignConsent")

    '========================Validating eConsent Status for Borrower ==========================
    FRM_Logger_ReportInfoEvent "eConsent Status for Borrower", "Validating eConsent Status for Borrower", Null    
    
    strStatus= GUI_Object_GetPropertyValue(objeConsent.SwfComboBox("swfname:=cmbBrStatus1"),"text")    
    FRM_VerifyEqual strStatus,strExpStatus,"Borrower's eConsent Status","eConsent Status"
    
    dtStatus= GUI_Object_GetPropertyValue(objeConsent.SwfEdit("swfname:=txtBrDate1"),"text")    
    FRM_VerifyEqual cdate(dtStatus),strExpStatusDate,"Borrower's eConsent Date","eConsent Status Date"
    
    strSource= GUI_Object_GetPropertyValue(objeConsent.SwfEdit("swfname:=txtBrSource1"),"text")    
    FRM_VerifyEqual strSource,strExpSource,"Borrower's eConsent Source","eConsent Source"
    
    '========================Validating eConsent Status for Co Borrower ==========================  
    FRM_Logger_ReportInfoEvent "eConsent Status for Co-Borrower", "Validating eConsent Status for Co-Borrower", Null
    strStatus= GUI_Object_GetPropertyValue(objeConsent.SwfComboBox("swfname:=cmbCrStatus1"),"text")    
    FRM_VerifyEqual strStatus,strExpStatus,"Co-Borrower's eConsent Status","eConsent Status"
    
    dtStatus= GUI_Object_GetPropertyValue(objeConsent.SwfEdit("swfname:=txtCrDate1"),"text")    
    FRM_VerifyEqual cdate(dtStatus),strExpStatusDate,"Co-Borrower's eConsent Date","eConsent Status Date"
    
    strSource= GUI_Object_GetPropertyValue(objeConsent.SwfEdit("swfname:=txtCrSource1"),"text")    
    FRM_VerifyEqual strSource,strExpSource,"Co-Borrower's eConsent Source","eConsent Source"

	'========================Validating eConsent Status for NBO ==========================  
    If lcase(strNBOFlag)="yes" Then
    	FRM_Logger_ReportInfoEvent "eConsent Status for Non-Borrowing Owner", "Validating eConsent Status for Non-Borrowing Owner", Null
	    strStatus= GUI_Object_GetPropertyValue(objeConsent.SwfComboBox("swfname:=cmbnboStatus01"),"text")    
	    FRM_VerifyEqual strStatus,strExpStatus,"Non-Borrowring Owner's eConsent Status","eConsent Status"
	    
	    dtStatus= GUI_Object_GetPropertyValue(objeConsent.SwfEdit("swfname:=txtnboDate01"),"text")    
	    FRM_VerifyEqual cdate(dtStatus),strExpStatusDate,"Non-Borrowing Owner's eConsent Date","eConsent Status Date"
	    
	    strSource= GUI_Object_GetPropertyValue(objeConsent.SwfEdit("swfname:=txtnboSource01"),"text")    
	    FRM_VerifyEqual strSource,strExpSource,"Non-Borrowing Owner's eConsent Source","eConsent Source"
    End If 
    
    GUI_SwfButton_Click objeConsent.SwfButton("swfname:=btnOK")    
    Set objeConsent=Nothing
End Function


'This function is to get the row number based on combination of disclosure type and LE sent?
'@code
'    BIZ_DisclosureTracking_LEDueDate()
'@endcode
Function BIZ_DisclosureTracking_LEDueDate()
  
    '=============== verifying Application Date ===========
    FRM_Logger_ReportInfoEvent "Verify Appliation Date in Disclosure Tracking Tool", "Application Date is Today's Date", null
    
    Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
    Set objAppDate = objLoanPage.SwfObject("swfname:=dpLEApp").SwfEdit("swfname:=txtDate")
    
    dtExpAppDate = Date    
    dtAppDate= GUI_Object_GetPropertyValue(objAppDate,"text")    
    FRM_VerifyEqual CDate(dtAppDate),CDate(dtExpAppDate),"Application Date","Application Date is Today's Date"    

    
    '==============Verifying LE Due Date ===============
    FRM_Logger_ReportInfoEvent "Verify LE Due Date in Disclosure Tracking Tool", "LE Due Date is Application Date + 3 Days as per Company Calender", null
    dtLEDueDate= GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpLEDue").SwfEdit("swfname:=txtDate"),"text")
    
    '=============Due Date Calculation ==================
    dtLEDueDateCalc=BIZ_DisclosureTracking_DateCalculation(dtAppDate,3,"CompanyCalender")
    
    '============Validating Due Date ===================
    FRM_VerifyEqual CDate(dtLEDueDateCalc),CDate(dtLEDueDate),"LE Due Date","LE Due Date is Application Date + 3 Days as per Company Calender"

    
    Set objLoanPage = Nothing
    Set objLEDueDate =  Nothing        
End Function

    
  'This function is to get the row number based on combination of disclosure type and LE sent?
'@code
'    BIZ_DisclosureTracking_ValidateLESent(strDisclosureType)
'@endcode    
    
Function BIZ_DisclosureTracking_ValidateLESent(strDisclosureType)
    FRM_Logger_ReportInfoEvent "Getting the Sent Date", "Getting the Sent Date for LE Record type: "&strDisclosureType, null
    Set objMainForm    =    SwfWindow("swfname:=MainForm")
    intInitialLERow    =    BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","LE")
    strSentDate = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), intInitialLERow,"Sent Date")
    BIZ_DisclosureTracking_ValidateLESent = CDate(strSentDate)
    Set objMainForm = Nothing
End Function
    
  
 'This function is to Send Revised LE via Print from LE Page
'@code
'    BIZ_DisclosureTracking_SendRevisedLE_Print()
'@endcode

Function BIZ_DisclosureTracking_SendRevisedLE_Print()
    FRM_Logger_ReportInfoEvent "Send Revised LE for Single Borrower Pair Non Rescendable Loans", "Send Revised LE - Through Print Option", Null
    
    '=============== Go to LE Page 1 form and Click on Print button=============
    BIZ_Forms_Open "Loan Estimate Page 1"    
    GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=printBtn")    
    Set objPrint = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")        
    '==============select the form and click on print button
    GUI_List_ClickRow objPrint.SwfObject("swfname:=gridViewSelectedFiles"),Null,"Name","Loan Estimate",True,False,False,"Single"        
    GUI_SwfButton_Click objPrint.SwfButton("swfname:=btnPrint")
    

    If objPrint.SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Encompass").Exist(90) Then
        objPrint.SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Encompass").Activate    
        GUI_WinButton_Click objPrint.SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Encompass").WinButton("text:=OK")
        GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=printBtn")    
        Set objPrint = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog")        
        '==============select the form and click on print button=========
        GUI_List_ClickRow objPrint.SwfObject("swfname:=gridViewSelectedFiles"),Null,"Name","Loan Estimate",True,False,False,"Single"        
        GUI_SwfButton_Click objPrint.SwfButton("swfname:=btnPrint")
    End If
    
    '===================Click on Print button===================
    If SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Print").Exist(90) Then
        SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Print").Activate
        GUI_WinButton_Click SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Print").WinButton("text:=Print")
        '==============Application Error ============
        If Dialog("text:=Activation Error").Exist(20) Then
            Dialog("text:=Activation Error").Activate
            GUI_WinButton_Click Dialog("text:=Activation Error").WinButton("text:=OK")
        End If
        '==============Adobe Reader Error============        
        If SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Acrobat Reader").Exist(5) Then
            SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Acrobat Reader").Activate
            GUI_WinButton_Click SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Acrobat Reader").WinButton("text:=OK")
        End If
        '==============Adobe Reader Error============                
        If SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Acrobat Reader").Exist(5) Then
            SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Acrobat Reader").Activate
            GUI_WinButton_Click SwfWindow("swfname:=PdfPrintDialog").Dialog("text:=Acrobat Reader").WinButton("text:=OK")
        End If
        
        GUI_Object_WaitTillExistX objPrint.SwfWindow("swfname:=DisclosureTrackingDialog"),60    
        GUI_SwfButton_Click objPrint.SwfWindow("swfname:=DisclosureTrackingDialog").SwfButton("swfname:=btnYes")
    End If
    
    GUI_Dialog_Encompass_OKX 10, "Sundays and legal holidays" 
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=FormSelectorDialog").SwfButton("swfname:=btnClose")       
    Set objPrint = Nothing        
 End Function
 
    
    'This function is to Verify LE Sent Date
'@code
'    BIZ_DisclosureTracking_VerifyLESentDate(dateMin)
'@endcode

 Function BIZ_DisclosureTracking_VerifyLESentDate(dateMin)
        
    FRM_Logger_ReportInfoEvent "Verify LE Sent Date in DT", "Verify LE Sent Date is earliest of all LE Sent Dates", null

    Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
    Set objLESentDate = objLoanPage.SwfObject("swfname:=dpLESent").SwfEdit("swfname:=txtDate")
    dtLEsentDate = GUI_Object_GetPropertyValue(objLESentDate,"text")
    FRM_VerifyEqual CDate(dtLEsentDate),CDate(dateMin),"LE Sent date","LE Sent Date is earlist of all LE Sent Dates"
    Set objLoanPage = Nothing
    Set objLESentDate =  Nothing
        
End Function
    
    
  'This function is to Validate SingleBorrPair Intial LE Received Date and ECD
'@code
'    BIZ_DisclosureTracking_ValidateIntialRevisedLE(dtSentDate, strDisclosureType,strNBOFlag)
'@endcode

Function BIZ_DisclosureTracking_ValidateIntialRevisedLE(dtSentDate,strDisclosureType,strNBOFlag)
        
        FRM_Logger_ReportInfoEvent "Validate LE Dates", "Validate LE Received, Earliest Closing Dates and LE Revised Dates ", null
        
        '=========== Double Click on Intial LE ================= 
        Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
        Set objLESentDate = objLoanPage.SwfObject("swfname:=dpLESent").SwfEdit("swfname:=txtDate")
        Set objLERevisedSent = objLoanPage.SwfObject("swfname:=dpLERevisedSent").SwfEdit("swfname:=txtDate")
        Set objLERevisedReceived = objLoanPage.SwfObject("swfname:=dpLERevisedReceived").SwfEdit("swfname:=txtDate")
        Set objLEReceived = objLoanPage.SwfObject("swfname:=dpLEReceived").SwfEdit("swfname:=txtDate")
        
        Set objMainForm    =    SwfWindow("swfname:=MainForm")
        intInitialLERow    =    BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","LE")
        GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialLERow, True, False, False, "Double"
        GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
    
        '=========Calculation Presume Received Date=====================
        dtBorrPresumeRecDate=BIZ_DisclosureTracking_DateCalculation(cdate(dtSentDate),3,"Reg_ZBusinessCalender")
        dtCoBorrPresumeRecDate=BIZ_DisclosureTracking_DateCalculation(cdate(dtSentDate),3,"Reg_ZBusinessCalender")
        
        '==================Set Send Date================
        BIZ_DisclosureTrackingTool_SetDisclosureDetail dtSentDate,"","",strNBOFlag
        
        '======================Validation Of ECD, Before selecting Initial/Revised LE Recieved======
        If lcase(strDisclosureType)="initial" Then
           dtLESent=GUI_Object_GetPropertyValue (objLESentDate,"text")
           strECDFieldDesc="Earliest Closing Date,Before selecting Initial LE Recieved : is LE Sent + 7 Days"
        Else
           intInitialLERow    =    BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","LE")
           GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialLERow, True, False, False, "Double"
           '=========Select the Reason for Revised LE========
           
           GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure"), "Reasons"
           GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfCheckBox("swfname:=chkReason1"), "ON"
           'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
		   'Francesca commenting to resolve the screen resolution issue for ok click
		
			SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
           GUI_Dialog_Encompass_OKX 7, "Sundays and legal holidays"
           dtLESent=GUI_Object_GetPropertyValue (objLERevisedSent,"text")
           strECDFieldDesc="Earliest Closing Date,Before selecting Revised LE Recieved : is Revised LE Sent + 7 Days"       
        End If
        dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtLESent),7,"Reg_ZBusinessCalender")
        dtECDDate= GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpClosingDate").SwfEdit("swfname:=txtDate"),"text")
        FRM_VerifyEqual CDate(dtExpECD),CDate(dtECDDate),"Earliest Closing Date",strECDFieldDesc
                      
        
        '==================Set Actual Received Dates for Borrower and Co-Borrower================
        dtBorrActualRecDate=BIZ_DisclosureTracking_DateCalculation(cdate(dtLESent),4,"Reg_ZBusinessCalender")
        dtCoBorrActualRecDate=BIZ_DisclosureTracking_DateCalculation(cdate(dtLESent),2,"Reg_ZBusinessCalender")
        
        intInitialLERow    =    BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","LE")
        GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialLERow, True, False, False, "Double"
        BIZ_DisclosureTrackingTool_SetDisclosureDetail "",dtBorrActualRecDate,dtCoBorrActualRecDate,strNBOFlag
        
        '==================Validation Of ECD, After selecting Initial/Revised LE Recieved======    
        If lcase(strDisclosureType)="initial" Then
           dtLESent=GUI_Object_GetPropertyValue (objLESentDate,"text")
           strECDFieldDesc="Earliest Closing Date,After selecting Initial LE Recieved : is LE Sent + 7 Days" 
           strLERecFieldDesc="LE Received,Earliest of Earliest of Inttial LE Received Date" 
           dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtLESent),7,"Reg_ZBusinessCalender")
        Else
           dtLEReceived=GUI_Object_GetPropertyValue (objLERevisedReceived,"text")
           strECDFieldDesc="Earliest Closing Date,After selecting Revised LE Recieved : is Revised LE Received + 4 Days" 
           strLERecFieldDesc="Revised LE Received,Earliest of Earliest of Revised LE Received Date" 
           dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtLEReceived),4,"Reg_ZBusinessCalender")
        End If        
        dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
        FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date",strECDFieldDesc
            
        '=================== Get eaarliest date from Co-Borrower actual and presume dates =======  
        Dim arrBorrDates(1)
        arrBorrDates(0)=cdate(dtBorrPresumeRecDate)
        arrBorrDates(1)=cdate(dtBorrActualRecDate)
        dtEarliestBorrDate=BIZ_GetEarliestDate(arrBorrDates)
        
        '=================== Get eaarliest date from Co-Borrower actual and presume dates =======
        Dim arrCoBorrDates(1)
        arrCoBorrDates(0)=cdate(dtCoBorrPresumeRecDate)
        arrCoBorrDates(1)=cdate(dtCoBorrActualRecDate)
        dtEarliestCoBorrDate=BIZ_GetEarliestDate(arrCoBorrDates)
        
        '================= Get Earliest of Earliest Date from Borrower and Co-Borrower dates =======
        Dim arrEarliestDate(1)
        arrEarliestDate(0)=dtEarliestBorrDate
        arrEarliestDate(1)=dtEarliestCoBorrDate
        dtEarliestDate=BIZ_GetEarliestDate(arrEarliestDate)
        
        '==================Validation Of LE Rreceived - Earliest of Earliest After selecting Initial LE========== 
        If lcase(strDisclosureType)="initial" Then        
            'GUI_Object_ValidateText objLEReceived,dtEarliestDate,strLERecFieldDesc    
            dtLERecDate= GUI_Object_GetPropertyValue(objLEReceived,"text")
            FRM_VerifyEqual CDate(dtLERecDate),CDate(dtEarliestDate),"LE Received Date",strLERecFieldDesc 
            '==============Verifying NBO Received Date ======================	  
			If lcase(strNBOFlag)="yes" Then
				dtNBOActualRecDate=DateAdd("d",-1,cdate(dtCoBorrActualRecDate))
				FRM_VerifyNotEqual CDate(dtLERecDate),CDate(dtNBOActualRecDate),"LE Received Date","NBO's LE Received date is not considered in LE Received Calculation"
			End If
        Else
            'GUI_Object_ValidateText objLERevisedReceived,dtEarliestDate,strLERecFieldDesc 
            dtLERevisedRecDate= GUI_Object_GetPropertyValue(objLERevisedReceived,"text")
            FRM_VerifyEqual CDate(dtLERevisedRecDate),CDate(dtEarliestDate),"Revised LE Received Date",strLERecFieldDesc
            '==============Verifying NBO Received Date ======================	  
			If lcase(strNBOFlag)="yes" Then
				dtNBOActualRecDate=DateAdd("d",-1,cdate(dtCoBorrActualRecDate))
				FRM_VerifyNotEqual CDate(dtLERevisedRecDate),CDate(dtNBOActualRecDate),"Revised LE Received Date","NBO's Revised LE Received date is not considered in Revised LE Received Calculation"
			End If
        End If
        
        Set objLoanPage = Nothing
        Set objLESentDate = Nothing
        Set objLERevisedSent = Nothing
        Set objLERevisedReceived = Nothing
        Set objLEReceived = Nothing
        Set objMainForm    =    Nothing
        
End Function
     

'This function is to find the row count in the list
'@code
'    GUI_List_GetNumberofRows(objMainView)
'@endcode
'@param objMainView The object path

Function GUI_List_GetNumberofRows(objMainView)

   intTotalRows = objMainView.Object.Items.Count
   GUI_List_GetNumberofRows= intTotalRows 
End Function


'This function is to get the row number based on combination of disclosure type and LE sent?
'@code
'    BIZ_GetRowOfDisclosureType(strDisclosureTypeVal, strSentStatus, strColName)
'@endcode
'@param strDisclosureTypeVal values of disclosure type
'@param strLESentStatus values of LE Sent type
'@param strColName values "LE" or "CD"

Function BIZ_GetRowOfDisclosureType(strDisclosureTypeVal, strSentStatus, strColName)

Dim intRowsInDiscHistory, strDisclosureType

intRowsInDiscHistory = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"))

    For i = 0 To intRowsInDiscHistory - 1
        strDisclosureType =    GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"Disclosure Type")
        select Case UCase(strColName)
        Case "LE"
        strSentStatusVal = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"LE Sent?")
        Case "CD"
        strSentStatusVal = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"CD Sent?")
        End Select
    
        If (strDisclosureType = strDisclosureTypeVal) And (strSentStatus = strSentStatusVal) Then
        BIZ_GetRowOfDisclosureType    =    i
    Exit For
        End If
    Next        
End Function


'This function is to Calculate dates as per calender type
'@code
'    BIZ_DisclosureTracking_DateCalculation(strInputDate, intNumDays, CalenderType)
'@endcode

Function BIZ_DisclosureTracking_DateCalculation(strInputDate,intNumDays,CalenderType)
 	Dim arrDates()
 	
 	Set objData = FRM_DS_GetTestData("Settings_ComplianceCalendar", "HolidayList", "DT_HolidaysList")    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, CalenderType)) Then
	 	arrHolidayList = Split(Trim(FRM_DS_GetValue(objData, CalenderType)),",") 
	End If

 	dtInialDate=CDate(strInputDate)
 	intCount = intNumDays 
 	i = 0
 	k = 0	
 	If intNumDays>0 Then		
		Do Until i = intCount
	   		ReDim Preserve arrDates(i)
	   		dtInialDate = dtInialDate + 1
			arrDates(i) = dtInialDate	 
			For j=0 to UBound(arrHolidayList)
				If cdate(trim(arrHolidayList(j))) = cdate(arrDates(i)) Then
		    		intCount = intCount + 1  
		    		Exit For
		        End If
		 	Next       
	        i = i + 1
		Loop 		
	Else	  
		Do Until k = intCount
	   		ReDim Preserve arrDates(i)
	   		dtInialDate = dtInialDate - 1
			arrDates(i) = dtInialDate	 
			For j=0 to UBound(arrHolidayList)
				If cdate(trim(arrHolidayList(j))) = cdate(arrDates(i)) Then
		    		intCount = intCount - 1  
		    		Exit For
		        End If
		 	Next       
	        i = i + 1
	        k = k - 1
		Loop	
 	End If	

	intMax = UBound(arrDates) 	
 	Set objData=Nothing
	BIZ_DisclosureTracking_DateCalculation = arrDates(intMax)
 End Function


 'This function is to check whether given date is Holiday or Not as per Calender
'@code
'    BIZ_DisclosureTracking_HoliDay(strInputDate, CalenderType)
'@endcode

 Function BIZ_DisclosureTracking_HoliDay(strInputDate,CalenderType)
 	 	
 	Set objData = FRM_DS_GetTestData("Settings_ComplianceCalendar", "HolidayList", "DT_HolidaysList")    
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, CalenderType)) Then
	 	arrHolidayList = Split(Trim(FRM_DS_GetValue(objData, CalenderType)),",") 
	End If
  	
  	boolHoliday=False
 	For i=0 to UBound(arrHolidayList)
		If cdate(trim(arrHolidayList(i))) = cdate(strInputDate) Then
    		boolHoliday=True
    		Exit For
        End If
	Next       
 
	Set objData=Nothing
	BIZ_DisclosureTracking_HoliDay = boolHoliday
 End Function
 
 
'This function is to get Latest Date from array
'@code
'    BIZ_GetLatestDate(arrDates)
'@endcode
Function BIZ_GetLatestDate(arrDates)
	'Prepare variables to store the required information    
	Dim dateMin, dateMax
	
	dateMin = arrDates(0)
	dateMax = arrDates(0)
	
	' Iterate over the array to find the max and min values 
	If UBound(arrDates)>0 Then   
		Dim i
		For i=1 to UBound(arrDates)
		If arrDates(i) < dateMin Then dateMin = arrDates(i)
		If arrDates(i) > dateMax Then dateMax = arrDates(i)
		Next 
	End If
	BIZ_GetLatestDate = CDate(dateMax)
End Function



 'This function is to get Earliest Date from array
'@code
'    BIZ_GetEarliestDate(arrDates)
'@endcode
Function BIZ_GetEarliestDate(arrDates)
	'Prepare variables to store the required information    
	Dim dateMin, dateMax
	
	dateMin = arrDates(0)
	dateMax = arrDates(0)
	' Iterate over the array to find the max and min values    
	If UBound(arrDates)>0 Then		
		Dim i
		For i=1 to UBound(arrDates)
		If arrDates(i) < dateMin Then dateMin = arrDates(i)
		If arrDates(i) > dateMax Then dateMax = arrDates(i)
		Next	
	End If
	
	BIZ_GetEarliestDate = CDate(dateMin)
End Function

'This function is to get validate IntentToProceed and EarliestFeeCollection Dates after Initial LE
'@code
'    BIZ_DisclosureTracking_ValidateIntentToProceed_EarliestFeeCollection(strDisclosureType)
'@endcode
'@param strDisclosureTypeVal values of disclosure type - Initial or Revised

Function BIZ_DisclosureTracking_ValidateIntentToProceed_EarliestFeeCollection(strDisclosureType)
        
        FRM_Logger_ReportInfoEvent "Validate LE Dates", "Validate Intent to Proceed and Earliest Fee Collection Dates ", null
        
        '=========== Double Click on Intial LE ================= 
        Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
        Set objLESentDate = objLoanPage.SwfObject("swfname:=dpLESent").SwfEdit("swfname:=txtDate")
        Set objLERevisedSent = objLoanPage.SwfObject("swfname:=dpLERevisedSent").SwfEdit("swfname:=txtDate")
        Set objLERevisedReceived = objLoanPage.SwfObject("swfname:=dpLERevisedReceived").SwfEdit("swfname:=txtDate")
        Set objLEReceived = objLoanPage.SwfObject("swfname:=dpLEReceived").SwfEdit("swfname:=txtDate")
        
        Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
	
        Set objMainForm    =    SwfWindow("swfname:=MainForm")
        intInitialLERow    =    BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","LE")
        GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialLERow, True, False, False, "Double"
        GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
        
        GUI_SwfCheckbox_Set objDisclosureWnd.SwfCheckBox("swfname:=chkIntent"),TRUE
        dtIntenttoProceed = objDisclosureWnd.SwfCalendar("swfname:=dpIntentDate").GetROProperty("value") 'GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
           
        dateIntentToProceed = UTIL_Date_FormatDateByPattern(dtIntenttoProceed, "mm/dd/yyyy")
        todaysdate = UTIL_Date_FormatDateByPattern(date, "mm/dd/yyyy")
        FRM_VerifyEqual CDate(dateIntentToProceed),CDate(todaysdate),"Intent to Proceed Date","By Default it should show todays date"
        
        '============Change the Intent to Proceed Date to -5 Days==============
        dtIntenttoProceed=DateAdd("d",-5,Date)
        dtIntenttoProceed=BIZ_DisclosureTracking_DateCalculation(dtIntenttoProceed,1,"Reg_ZBusinessCalender")
        objDisclosureWnd.SwfCalendar("swfname:=dpIntentDate").SetDate CDate(dtIntenttoProceed)
        
        
        '==============Click on OK button =================
	   'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	   'Francesca commenting to resolve the screen resolution issue for ok click
		'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
	   GUI_Dialog_Encompass_OKX 2, "Sundays and legal holidays"
	   
	   '=============Verify Intent to Proceed in Disclosure Tracking Tool ===============
	   dtITPDate= GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpIntentToProceed").SwfEdit("swfname:=txtDate"),"text")
       FRM_VerifyEqual CDate(dtITPDate),CDate(dtIntenttoProceed),"Intent to Proceed Date","Intent to Proceed Date should match with that date written in Disclosure Details window"
                    
	   '==============Verify Earliest Fee Collection=================
	   dtLEReceivedDate = GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpLEReceived").SwfEdit("swfname:=txtDate"),"text")
	   Dim arrBorrDates(1)
       arrBorrDates(0)=cdate(dtITPDate)
       arrBorrDates(1)=cdate(dtLEReceivedDate)
       dtLatestDate=BIZ_GetLatestDate(arrBorrDates)
	   dtEarliestFeeCollection = GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpFeeCollectDate").SwfEdit("swfname:=txtDate"),"text")
	   FRM_VerifyEqual CDate(dtEarliestFeeCollection),CDate(dtLatestDate),"Earliest Fee Collection Date","Should be Latest of Intent to Proceed and LE Received Date "
        
 End Function
 
 


'This function is to check loan level and package level 
'@code
'    DT_PreRequisiteCheck_LoanLevelPackageLevel(strValue)
'@endcode
Function DT_PreRequisiteCheck_LoanLevelPackageLevel(strValue)
    
    Dim objSettings    
    Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    '=============Go to Settings-> Docs Setup->eDisclosure Packages============
    BIZ_Nav_HierarchyTree "Docs Setup","eDisclosure Packages"
    strOrgValue = objSettings.SwfComboBox("swfname:=cboConsent").GetSelection
    GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboConsent"),strValue
    
    If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
	   GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If   
	'msgbox "infunction" &strOrgValue
    DT_PreRequisiteCheck_LoanLevelPackageLevelCheck = strOrgValue
    
 End Function
 
'This function is to check pre-requisties for print and print preview 
'@code
'    DT_PreRequisiteCheck_Print_PrintPreview()
'@endcode
 Function DT_PreRequisiteCheck_Print_PrintPreview()
    Dim objSettings    
    Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
    Dim arrchecks()
    '================ Select check box 'Create a record when disclosures are previewed' =============
    FRM_Logger_ReportInfoEvent "Select 'Create a record when disclosures are previewed and Printed'", "Check 'Create a record when disclosures are previewed and Printed' check box", Null
                
    '=============Go to Settings-> Docs Setup->eDisclosure Packages============
    BIZ_Nav_HierarchyTree "Loan Setup","Disclosure Tracking Settings"
    
    boolPreReviewRec=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkAutoPrintPreview"), "Checked")

    If Not(boolPreReviewRec) Then
        ReDim preserve arrchecks(0) 
        arrchecks(0)= "False"
        strPromptFlag = "No"
        GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkAutoPrintPreview"), "ON"
    Else
        ReDim preserve arrchecks(0) 
        arrchecks(0)= "True"
    End If
    
    boolPrintRec=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkAutoDisclosePrint"), "Checked")

    If Not(boolPrintRec) Then
        ReDim preserve arrchecks(1)
        arrchecks(1) = "False"
        strPromptFlag = "No"
        GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkAutoDisclosePrint"), "ON"
    Else
        ReDim preserve arrchecks(1)
        arrchecks(1)= "True"
    End If

   '================ Select\Unselect check box 'Prompt users before a record is created' =============
    boolPromptUser=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "Checked")
                
    FRM_Logger_ReportInfoEvent "Select 'Prompt users before a record is created for Print Preview'", "Check 'Prompt users before a record is created' check box", Null
    If Not(boolPromptUser) Then
        ReDim preserve arrchecks(2) 
        arrchecks(2)= "False"
       GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "ON"
    Else
        ReDim preserve arrchecks(2)
        arrchecks(2)= "True"
    End If
    
    '==========Select\Unselect when promt for print a record===================
       
    boolPromptUser=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkDisclosePrint"), "Checked")
                
    FRM_Logger_ReportInfoEvent "Select 'Prompt users before a record is created for Print '", "Check 'Prompt users before a record is created' check box", Null
    If Not(boolPromptUser) Then
        ReDim preserve arrchecks(3)
        arrchecks(3) = "False"
        GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkDisclosePrint"), "ON"
    Else
        ReDim preserve arrchecks(3)
        arrchecks(3)= "True"
    End If
   
    '========================= Save Settings ================================== 
    If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
	   GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If     
    '========================= Close Settings Window ================================== 
     
    BIZ_Nav_Settings_Close()

    Set objSettings = Nothing               
    DT_PreRequisiteCheck_Print_PrintPreview = arrchecks
End Function

'This function is to reset pre-requisties for print and print preview and loan level to org value 
'@code
'    DT_ResetPreRequisiteCheck(arrchecks,strOrgValue)
'@endcode
Function DT_ResetPreRequisiteCheck(arrchecks,strOrgValue)
    Dim objSettings    
    Set objSettings=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
   
    '================ Select check box 'Create a record when disclosures are previewed' =============
    FRM_Logger_ReportInfoEvent "Select 'Create a record when disclosures are previewed and Printed'", "Check 'Create a record when disclosures are previewed and Printed' check box", Null
                
    '=============Go to Settings-> Docs Setup->eDisclosure Packages============
    BIZ_Nav_HierarchyTree "Loan Setup","Disclosure Tracking Settings"
    
    boolPreReviewRec=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkAutoPrintPreview"), "Checked")

    If (boolPreReviewRec) AND arrchecks(0) = "False" Then
        GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkAutoPrintPreview"), "OFF"
    End If
    
    boolPrintRec=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkAutoDisclosePrint"), "Checked")

    If (boolPrintRec) AND arrchecks(1) = "False" Then
        GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkAutoDisclosePrint"), "OFF"
    End If

   '================ Select\Unselect check box 'Prompt users before a record is created' =============
    boolPromptUser=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "Checked")
                
    FRM_Logger_ReportInfoEvent "Select 'Prompt users before a record is created for Print Preview'", "Check 'Prompt users before a record is created' check box", Null
    If (boolPromptUser) AND arrchecks(2) = "False" Then
        
       GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkPrintPreview"), "OFF"
    End If
    
    '==========Select\Unselect when promt for print a record===================
       
    boolPromptUser=GUI_Object_GetPropertyValue(objSettings.SwfCheckBox("swfname:=chkDisclosePrint"), "Checked")
                
    FRM_Logger_ReportInfoEvent "Select 'Prompt users before a record is created for Print '", "Check 'Prompt users before a record is created' check box", Null
    If Not(boolPromptUser) AND arrchecks(3) = "False" Then
        GUI_SwfCheckbox_Set objSettings.SwfCheckBox("swfname:=chkDisclosePrint"), "OFF"
    End If
   
    '========================= Save Settings ================================== 
    If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
	   GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If     
	
	
	'=============Go to Settings-> Docs Setup->eDisclosure Packages============
    BIZ_Nav_HierarchyTree "Docs Setup","eDisclosure Packages"
    strOrgValue = objSettings.SwfComboBox("swfname:=cboConsent").GetSelection
    GUI_SwfComboBox_Select objSettings.SwfComboBox("swfname:=cboConsent"),strValue
    
    If GUI_Object_IsEnabled(objSettings.SwfObject("swfname:=stdIconBtnSave")) Then
	   GUI_SwfObject_Click objSettings.SwfObject("swfname:=stdIconBtnSave")
	End If   
	
    '========================= Close Settings Window ================================== 
    BIZ_Nav_Settings_Close()

    Set objSettings = Nothing               
    
End Function

'This function is used to keep existing datatemplate with provided name and create a new Data Template
'@code
'    BIZ_DataTemplates_CreateNew("Test Template")
'@endcode
'@param strDataTemplateName - The name of new created Data Template

Function BIZ_DataTemplates_CreateNew(strDataTemplateName,strRowIDBorrower,strRowIDCoBorr)

	FRM_Logger_ReportInfoEvent "Create a new Data Template", "Create a new data template in Data Templates", null

	Dim boolExist, objDataTemplateList
	Set objDataTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=gvDirectory")
	
	GUI_Object_WaitTillVisible SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfLabel("text:=Data Templates")
	
	boolExist = GUI_List_ClickRow(objDataTemplateList, scrollbarDataTemplate, "Name", strDataTemplateName, True, False, False, "Single")	
	If NOT boolExist Then
		'GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnDelete"), "SwfObject", "Delete Data Template"
		'GUI_Dialog_Encompass_Yes ""
		GUI_Object_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfObject("swfname:=btnAdd"), "SwfObject", "Add Data Template"
	    GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").SwfEdit("micclass:=SwfEdit"), strDataTemplateName
	    GUI_Object_Click objDataTemplateList, "SwfObject", "Data Template List"
	    
	    BIZ_DataTemplates_OpenDataTemplate strDataTemplateName 
   
       '===== Enter basic data in Data Templates Details Window ========  
     	BIZ_DataTemplatesDetails_SetBorrower strRowIDBorrower
     	BIZ_DataTemplatesDetails_SetCoBorrower strRowIDCoBorr
     	BIZ_DataTemplatesDetails_SetProperty strRowIDCoBorr
     	BIZ_DataTemplatesDetails_SetTransactionDetails strRowIDBorrower
     	 
     	
     	'===== Save Data Template ========   
     	BIZ_DataTemplatesDetails_Save
	
	End If
	
    
	Set objDataTemplateList = nothing
	
End Function


'This function is used to create a new Loan Template if not present
'@code
'    BIZ_LoanTemplateSetsDT_CreateNew(strLoanTemplateName)
'@endcode
'@param strLoanTemplateName - The name of new created Loan Template

Function BIZ_LoanTemplateSetsDT_CreateNew(strLoanTemplateName,strDataTemplateName)
	
	FRM_Logger_ReportInfoEvent "Create a new Loan Template", "Create a new Loan template in Loan Template Sets", null	
	
	Set objWndLoanTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer")
	bolExist = BIZ_LoanTemplateSets_Select(strLoanTemplateName, "Single")
	If NOT bolExist Then
		'GUI_Object_Click objWndLoanTemplate.SwfObject("swfname:=btnDelete","index:=0"), "SwfObject", "Delete Loan Template"
		'GUI_DialogObject_Encompass_Yes SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SetUpContainer").Dialog("index:=0"), "Are you sure you want to.* delete .*"
	       GUI_Object_Click objWndLoanTemplate.SwfObject("swfname:=btnAdd","index:=0"), "SwfObject", "Add Loan Template"
	       GUI_SwfEdit_Set objWndLoanTemplate.SwfEdit("micclass:=SwfEdit","focused:=True"), strLoanTemplateName
	       UTIL_Win_SendKey "{ENTER}"
	       BIZ_LoanTemplateSets_OpenLoanTemplate strLoanTemplateName
	       BIZ_LoanTemplateDetails_SelectDataTemplate strDataTemplateName
	End If
	
	Set objWndLoanTemplate = nothing
End Function

'This function is to get validate IntentToProceed and EarliestFeeCollection Dates after Initial LE
'@code
'    BIZ_DisclosureTracking_ValidateIntentToProceed_EarliestFeeCollection_MulBorrPair(strBorrPair,strDisclosureType,strLEorCD,strLEorCDSent)
'@endcode
'@param strDisclosureType values of disclosure type - Initial or Revised
Function BIZ_DisclosureTracking_ValidateIntentToProceed_EarliestFeeCollection_MulBorrPair(strBorrPair,strDisclosureType,strLEorCD,strLEorCDSent)
        
        FRM_Logger_ReportStepEvent "Validate LE Dates", "Validate Intent to Proceed and Earliest Fee Collection Dates ", null
        
        '=========== Double Click on Intial LE ================= 
        Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
        Set objLESentDate = objLoanPage.SwfObject("swfname:=dpLESent").SwfEdit("swfname:=txtDate")
        Set objLERevisedSent = objLoanPage.SwfObject("swfname:=dpLERevisedSent").SwfEdit("swfname:=txtDate")
        Set objLERevisedReceived = objLoanPage.SwfObject("swfname:=dpLERevisedReceived").SwfEdit("swfname:=txtDate")
        Set objLEReceived = objLoanPage.SwfObject("swfname:=dpLEReceived").SwfEdit("swfname:=txtDate")
        
        Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
	
        Set objMainForm    =    SwfWindow("swfname:=MainForm")
        'intInitialLERow    =    BIZ_GetRowOfDisclosureType (strDisclosureType,"Yes","LE")
        intInitialLERow = BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType,strLEorCD,"Yes")
        GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intInitialLERow, True, False, False, "Double"
        GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
        
        GUI_SwfCheckbox_Set objDisclosureWnd.SwfCheckBox("swfname:=chkIntent"),TRUE
        dtIntenttoProceed = objDisclosureWnd.SwfCalendar("swfname:=dpIntentDate").GetROProperty("value") 'GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
           
        dateIntentToProceed = UTIL_Date_FormatDateByPattern(dtIntenttoProceed, "mm/dd/yyyy")
        todaysdate = UTIL_Date_FormatDateByPattern(date, "mm/dd/yyyy")
        FRM_VerifyEqual CDate(dateIntentToProceed),CDate(todaysdate),"Intent to Proceed Date","By Default it should show todays date"
        
        '============Change the Intent to Proceed Date to -5 Days==============
        dtIntenttoProceed=DateAdd("d",-5,Date)
        dtIntenttoProceed=BIZ_DisclosureTracking_DateCalculation(dtIntenttoProceed,1,"Reg_ZBusinessCalender")
        objDisclosureWnd.SwfCalendar("swfname:=dpIntentDate").SetDate CDate(dtIntenttoProceed)
        
        
        '==============Click on OK button =================
	   'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	   'Francesca commenting to resolve the screen resolution issue for ok click
		'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick

	   GUI_Dialog_Encompass_OKX 2, "Sundays and legal holidays"
	   
	   '=============Verify Intent to Proceed in Disclosure Tracking Tool ===============
	   'dtITPDate= GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpIntentToProceed").SwfEdit("swfname:=txtDate"),"text")
       'FRM_VerifyEqual CDate(dtITPDate),CDate(dtIntenttoProceed),"Intent to Proceed Date","Intent to Proceed Date should match with that date written in Disclosure Details window"
        BIZ_DisclosureTracking_VerifyIntenttoProceed()             
	   '==============Verify Earliest Fee Collection=================
	   BIZ_DisclosureTracking_VerifyEarliestFeeCollection()
	   'dtLEReceivedDate = GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpLEReceived").SwfEdit("swfname:=txtDate"),"text")
	   'Dim arrBorrDates(1)
       'arrBorrDates(0)=cdate(dtITPDate)
       'arrBorrDates(1)=cdate(dtLEReceivedDate)
       'dtLatestDate=BIZ_GetLatestDate(arrBorrDates)
	   'dtEarliestFeeCollection = GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpFeeCollectDate").SwfEdit("swfname:=txtDate"),"text")
	   'FRM_VerifyEqual CDate(dtEarliestFeeCollection),CDate(dtLatestDate),"Earliest Fee Collection Date","Should be Latest of Intent to Proceed and LE Received Date "
        
End Function

'This function is to get validate LE Received and Revised LE Reveived depending on disclosureType
'@code
'    BIZ_DisclosureTracking_ValidateLEReceived(dtEarliestDate,strDisclosureType)
'@endcode
'@param strDisclosureType values of disclosure type - Initial or Revised
'@param dtEarliestDate - earliest date
Function BIZ_DisclosureTracking_ValidateLEReceived(dtEarliestDate,strDisclosureType)
    FRM_Logger_ReportInfoEvent "Validate LE Received Date", "Validate LE Received for Disclosure Type: "&strDisclosureType, null
     
    Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
    Set objLERevisedReceived = objLoanPage.SwfObject("swfname:=dpLERevisedReceived").SwfEdit("swfname:=txtDate")
    Set objLEReceived = objLoanPage.SwfObject("swfname:=dpLEReceived").SwfEdit("swfname:=txtDate")
        
    If lcase(strDisclosureType)="initial" Then
           strLERecFieldDesc="LE Received,Earliest of Earliest of Initial LE Received Date" 
           dtLERecDate= GUI_Object_GetPropertyValue(objLEReceived,"text")
           FRM_VerifyEqual CDate(dtLERecDate),CDate(dtEarliestDate),"LE Received Date",strLERecFieldDesc
    Else
           strLERecFieldDesc="Revised LE Received,Earliest of Earliest of Revised LE Received Date"
           dtLERevisedRecDate= GUI_Object_GetPropertyValue(objLERevisedReceived,"text")
           FRM_VerifyEqual CDate(dtLERevisedRecDate),CDate(dtEarliestDate),"Revised LE Received Date",strLERecFieldDesc           
    End If    
    
    
End Function

'This function is to combine 2 dates array in a single array
'@code
'    BIZ_CombineDates(arrDate1,arrDate2)
'@endcode
'@param arrDate1 - arrDate1
'@param arrDate2 - arrDate2
Function BIZ_CombineDates(arrDate1,arrDate2)
    
    dim intNewArray()
    Dim intTotalCount
    intCount = UBound(arrDate1)
    intFinalCount = (UBound(arrDate1)+1)+(UBound(arrDate2)+1)-1
   
    ReDim intNewArray(intFinalCount)
    
    for x = 0 to UBound(arrDate1)
        intNewArray(x) = arrDate1(x)
    next
    y = 0
    
    for x = UBound(arrDate1)+1 to UBound(intNewArray)
        intNewArray(x) = arrDate2(y)
        y = y + 1
    next
        
    BIZ_CombineDates = intNewArray
End Function

'This function is used to validate LE Sent
'@code
'    BIZ_DisclosureTracking_ValidateLESent(arrDates,strDisclosureType)
'@endcode
'@param arrDates - arr of dates
'@param strDisclosureType - type of disclosure-initial or revised
Function BIZ_DisclosureTracking_ValidateLESent(arrDates,strDisclosureType)
    Dim arrLESentDates(1)
    FRM_Logger_ReportInfoEvent "Validate LE Sent Date", "Validate  LE Sent for Disclosure Type: "&strDisclosureType, null
        
    arrLESentDates(0)=cdate(arrDates(1))
    arrLESentDates(1)=cdate(arrDates(2))
    strDate=BIZ_GetEarliestDate(arrLESentDates)
    '================Verify LE Sent Date should be earliest of all Sent Dates=================
    If strDisclosureType = "Initial" Then
        BIZ_DisclosureTracking_VerifyLESentDate strDate
    Else
        Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
        Set objLESentDate = objLoanPage.SwfObject("swfname:=dpLERevisedSent").SwfEdit("swfname:=txtDate")
        dtLEsentDate = GUI_Object_GetPropertyValue(objLESentDate,"text")
        FRM_VerifyEqual CDate(dtLEsentDate),CDate(strDate),"Revised LE Sent date","Revised LE Sent Date is earliest of all LE Sent Dates"
        Set objLoanPage = Nothing
        Set objLESentDate =  Nothing    
    End If
    
End Function

'This function is to add disclosure for Multiple Borrower Pair 
'@code
'    BIZ_DisclosureTracking_MultipleBorrPair_AddDisclosure(strBorrPair,srLEorCD)
'@endcode
'@param strBorrPair - select the borrower pair
'@param srLEorCD - add disclosure "LE" or "CD"
Function BIZ_DisclosureTracking_MultipleBorrPair_AddDisclosure(strBorrPair,strLEorCD)
	'=================select borrower pair==============
	Set objMainForm	=	SwfWindow("swfname:=MainForm").SwfTab("swfname:=tabControl")
	GUI_SwfComboBox_Select objMainForm.SwfComboBox("swfname:=cboBorrowers"),strBorrPair
	'=========== Go to DT and add Disclosure LE or CE
	BIZ_Tools_Open "Disclosure Tracking"
	BIZ_DisclosureTrackingTool_AddDisclosure TRUE,strLEorCD,FALSE,FALSE 	
End Function

'This function is to Get Row Number of Disclosure
'@code
'    BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType, strLEorCD,strLEorCESent)
'@endcode
'@param strBorrPair - select the borrower pair
'@param srLEorCD - add disclosure "LE" or "CD"
'@param strLEorCESent - "Yes" or "No"
Function BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType, strLEorCD,strLEorCESent)

Dim intRowsInDiscHistory 

intRowsInDiscHistory = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"))

    For i = 0 To intRowsInDiscHistory - 1
        strType =    GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"Disclosure Type")
        strBorrName =    GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"Borrower Pair")
        select Case UCase(strLEorCD)
        Case "LE"
        strSentStatus = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"LE Sent?")
        Case "CD"
        strSentStatus = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), i,"CD Sent?")
        End Select
    
        If (strDisclosureType=strType) AND (strLEorCESent = strSentStatus) AND (strBorrPair=strBorrName)Then
        	BIZ_GetRowOfDisclosure    =    i
    		Exit For
       	End If
    Next        
End Function

'This function is to Set Disclosure Detail of LE or CD Manual disclosure
'@code
'    BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair,strDisclosureType,strLEorCD,dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strFlagReason)
'@endcode
'@param strBorrPair - select the borrower pair
'@param srLEorCD - add disclosure "LE" or "CD"
'@param strLEorCESent - "Yes" or "No"
'@param strDisclosureType - "Initial" or "Revised"
'@param dtSentDate - Sent Date
'@param dtBorrActualRecDate - Actual Received Date of Borrower
'@param dtCoBorrActualRecDate - Actual Received Date of Co-Borrower
Function BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair,strDisclosureType,strLEorCD,dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strFlagReason,strNBOFlag)
    Set objMainForm    =    SwfWindow("swfname:=MainForm")    
    intRow    = BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType,strLEorCD,"Yes")
    GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intRow, True, False, False, "Double"
    GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
    arrDates = BIZ_DisclosureTrackingTool_MulBorr_SetDisclosureDetail(dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strFlagReason,strNBOFlag)
    BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail = arrDates
End Function

'This function is to used to validate ECD for LE Initial and Revised
'@code
'    BIZ_DisclosureTrackingTool_ValidateECDLE(strDisclosureType,intNumDays,strDate,strECDFieldDesc)
'@endcode
'@param intNumDays - No of days to be calculated
'@param strDate - date used for calculation 
'@param strECDFieldDesc - description
'@param strDisclosureType - "Initial" or "Revised"
Function BIZ_DisclosureTrackingTool_ValidateECDLE(strDisclosureType,intNumDays,strDate,strECDFieldDesc)
        FRM_Logger_ReportInfoEvent "Validate Earliest Closing  Dates for LE ", "Validate  ECD Dates when the Disclosure Type is "&strDisclosureType, null
        
        '=========== Double Click on Intial LE ================= 
        Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
        Set objLESentDate = objLoanPage.SwfObject("swfname:=dpLESent").SwfEdit("swfname:=txtDate")
        Set objLERevisedSent = objLoanPage.SwfObject("swfname:=dpLERevisedSent").SwfEdit("swfname:=txtDate")
        Set objLERevisedReceived = objLoanPage.SwfObject("swfname:=dpLERevisedReceived").SwfEdit("swfname:=txtDate")
        Set objLEReceived = objLoanPage.SwfObject("swfname:=dpLEReceived").SwfEdit("swfname:=txtDate")
        
        Set objMainForm =  SwfWindow("swfname:=MainForm")
        
        dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(strDate),intNumDays,"Reg_ZBusinessCalender")
        dtECDDate= GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpClosingDate").SwfEdit("swfname:=txtDate"),"text")
        FRM_VerifyEqual CDate(dtExpECD),CDate(dtECDDate),"Earliest Closing Date",strECDFieldDesc
End Function

'This function is to used to get Borrower Pair
'@code
'    BIZ_DisclosureTrackingTool_GetBorrowerPair(strRowID)
'@endcode
'@param strRowID - Borrower Pair Row ID
Function BIZ_DisclosureTrackingTool_GetBorrowerPair(strRowID)

	Set objDataBorr = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)
	Set objDataCoBorro = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetCoBorrower", strRowID)
	    
	strBorrName=Trim(FRM_DS_GetValue(objDataBorr, "FirstName"))&" "&Trim(FRM_DS_GetValue(objDataBorr, "LastName"))    
	strCoBorrName=Trim(FRM_DS_GetValue(objDataCoBorro, "FirstName"))&" "&Trim(FRM_DS_GetValue(objDataCoBorro, "LastName")) 
	
	Set objDataBorr=Nothing
	Set objDataCoBorro=Nothing
	BIZ_DisclosureTrackingTool_GetBorrowerPair=strBorrName&" and "&strCoBorrName
End Function


'This function is to used to Validate Intial CD Date for Multiple Borrower Pair
'@code
'    BIZ_DisclosureTracking_NonResc_MultipleBorrPair_ValidateIntialCD(arrInitialCDSentDates,strBorrPair1,strBorrPair2,strBorrPair3)
'@endcode
'@param arrInitialCDSentDates - Initial CD Sent Dates
'@param strBorrPair1 - Borrower Pair 1
'@param strBorrPair2 - Borrower Pair 2
'@param strBorrPair3 - Borrower Pair 3
Function BIZ_DisclosureTracking_NonResc_MultipleBorrPair_ValidateIntialCD(arrInitialCDSentDates,strBorrPair1,strBorrPair2,strBorrPair3,strNBOFlag)

    Set objMainForm    =    SwfWindow("swfname:=MainForm")    
    '======= Set CD Sent Date for Three Borrower Pair============ 	
    arrBorrPair1=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair1,"Initial","CD",arrInitialCDSentDates(0),"","","No","No") 	
    arrBorrPair2=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair2,"Initial","CD",arrInitialCDSentDates(1),"","","No","No") 
	If lcase(strNBOFlag)="yes" Then    
    	arrBorrPair3=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair3,"Initial","CD",arrInitialCDSentDates(2),"","","No","Yes")
    Else
    	arrBorrPair3=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair3,"Initial","CD",arrInitialCDSentDates(2),"","","No","No")
    End If
   
    
    FRM_Logger_ReportStepEvent "Primary Loan: Validate CD Sent,CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", "Primary Loan: Validating CD Sent,CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", Null
    '======================Validation Of CD Sent Before selecting Initial CD Recieved======    
    dtExpCDSent=BIZ_GetEarliestDate(arrInitialCDSentDates)       
    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, Before selecting Initial CD Recieved======
    dtCDSent=BIZ_DisclosureTracking_CDSentDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,arrInitialCDSentDates,"Earliest")
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")    
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Initial CD Recieved, Earliest Closing Date is Earliest of all valid Borrower Pair's CD Sent + 6 Days"
      
    '======================Validation CD Received Date, Before selecting Initial CD Recieved======    
    dtExpCDReceived=BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,"Earliest")
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"CD Received Date","CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
       
    '=============== go to linked loan ========
    BIZ_DisclosureTracking_LinkLoanClick  
    
    FRM_Logger_ReportStepEvent "Linked Loan: Validate CD Sent,Earliest Closing Date,CD Received Date before selection of Actual Received Dates for Multiple Borrower Pairs", "Linked Loan: Validation of CD Sent,ECD,CD Received Date before selecting Initial CD Recieved for Linked Loan", Null
    '======================Validation Of CD Sent Before selecting Initial CD Recieved - for Linked Loans ======    
    dtExpCDSent=BIZ_GetEarliestDate(arrInitialCDSentDates)       
    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, Before selecting Initial CD Recieved======
    dtCDSent=BIZ_DisclosureTracking_CDSentDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,arrInitialCDSentDates,"Earliest")
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")    
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Initial CD Recieved, Earliest Closing Date is Earliest of all valid Borrower Pair's CD Sent + 6 Days"
        
    '======================Validation CD Received Date, Before selecting Initial CD Recieved======    
    dtExpCDReceived=BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,"Earliest")
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"CD Received Date","CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
    
    '=============== go to linked loan ========
    BIZ_DisclosureTracking_LinkLoanClick    
    
    '=====================Actual Received Dates of Borrower and Co Borrower for 3 pairs ====================================
    dtActualRec_BorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(0)),4,"Reg_ZBusinessCalender")
    dtActualRec_CoBorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(0)),2,"Reg_ZBusinessCalender")
     
    dtActualRec_BorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(1)),3,"Reg_ZBusinessCalender")
    dtActualRec_CoBorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(1)),2,"Reg_ZBusinessCalender")
     
    dtActualRec_BorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(2)),3,"Reg_ZBusinessCalender")
    dtActualRec_CoBorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(2)),2,"Reg_ZBusinessCalender")
     
    '======= Set Borrower Pairs Actual Received Dates for Initial CD  ============
    arrBorrPair1=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair1,"Initial","CD","",dtActualRec_BorrPair1,dtActualRec_CoBorrPair1,"No","No")
    arrBorrPair2=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair2,"Initial","CD","",dtActualRec_BorrPair2,dtActualRec_CoBorrPair2,"No","No")
    If lcase(strNBOFlag)="yes" Then    
    	arrBorrPair3=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair3,"Initial","CD","",dtActualRec_BorrPair3,dtActualRec_CoBorrPair3,"No","Yes")
    Else
    	arrBorrPair3=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair3,"Initial","CD","",dtActualRec_BorrPair3,dtActualRec_CoBorrPair3,"No","No")
    End If
    
    FRM_Logger_ReportStepEvent "Primary Loan: Validate CD Sent,CD Received,Earliest Closing after selection of Actual Received Dates for Multiple Borrower Pairs", "Primary Loan: Validating CD Sent,CD Received,Earliest Closing after selection of Actual Received Dates for Multiple Borrower Pairs", Null
    '======================Validation Of CD Sent After selecting Initial CD Recieved======    
    dtExpCDSent=BIZ_GetEarliestDate(arrInitialCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")           
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Send Dates"
    
    '======================Validation ECD, After selecting Initial CD Recieved======
    dtCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDReceived),3,"Reg_ZBusinessCalender")
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","After selecting Initial CD Recieved,Earliest Closing Date is CD Received Date + 3 Days"
        
    '======================Validation CD Received Date, After selecting Initial CD Recieved======    
    dtExpCDReceived=BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,"Earliest") 
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"CD Received Date","CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
	
	'==== Verifying NBO received date with LE Received date====
	If lcase(strNBOFlag)="yes" Then
	 	'dtNBOActualRecDate=DateAdd("d",-2,cdate(dtActualRec_CoBorrPair3))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(DateAdd("d",-1,cdate(dtActualRec_CoBorrPair3)),-1,"Reg_ZBusinessCalender")
	 	FRM_VerifyNotEqual CDate(dtActualCDReceived),CDate(dtNBOActualRecDate),"CD Received Date","NBOs Date is not considered in CD Received Date calculation"
 	End If
 	
	'=============== go to linked loan ========
    BIZ_DisclosureTracking_LinkLoanClick	    
    FRM_Logger_ReportStepEvent "Linked Loan: Validate CD Sent,Earliest Closing Date,CD Received Date after selection of Actual Received Dates for Multiple Borrower Pairs", "Linked Loan: Validation of CD Sent,ECD,CD Received Date after selecting Initial CD Recieved for Linked Loan", Null
    
    '================ Validate Disclosure Recipient DropDown ComboBox===========
	BIZ_DT_NBO_LinkedLoan_DisclosureRecipientDropDownComboBox strBorrPair1,"Initial","CD","No"
	BIZ_DT_NBO_LinkedLoan_DisclosureRecipientDropDownComboBox strBorrPair2,"Initial","CD","No"
	If lcase(strNBOFlag)="yes" Then
		BIZ_DT_NBO_LinkedLoan_DisclosureRecipientDropDownComboBox strBorrPair3,"Initial","CD","Yes"
	Else
		BIZ_DT_NBO_LinkedLoan_DisclosureRecipientDropDownComboBox strBorrPair3,"Initial","CD","No"
	End If
	
    '======================Validation Of CD Sent After selecting Initial CD Recieved======    
    dtExpCDSent=BIZ_GetEarliestDate(arrInitialCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")           
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, After selecting Initial CD Recieved======
    dtCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDReceived),3,"Reg_ZBusinessCalender")
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","After selecting Initial CD Recieved,Earliest Closing Date is CD Received Date + 3 Days"
        
    '======================Validation CD Received Date, After selecting Initial CD Recieved======    
    dtExpCDReceived=BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,"Earliest") 
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"CD Received Date","CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
  	
  	'==== Verifying NBO received date with LE Received date====
	If lcase(strNBOFlag)="yes" Then
	 	'dtNBOActualRecDate=DateAdd("d",-2,cdate(dtActualRec_CoBorrPair3))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(DateAdd("d",-1,cdate(dtActualRec_CoBorrPair3)),-1,"Reg_ZBusinessCalender")
	 	FRM_VerifyNotEqual CDate(dtActualCDReceived),CDate(dtNBOActualRecDate),"CD Received Date","NBOs Date is not considered in CD Received Date calculation"
 	End If
 
  	'=============== go to linked loan ========
    BIZ_DisclosureTracking_LinkLoanClick   
End Function


'This function is to used to Validate Revised CD Date for Multiple Borrower Pair
'@code
'    BIZ_DisclosureTracking_NonResc_MultipleBorrPair_ValidateRevisedCD(arrRevisedCDSentDates,strBorrPair1,strBorrPair2,strBorrPair3)
'@endcode
'@param arrRevisedCDSentDates - Revised CD Sent Dates
'@param strBorrPair1 - Borrower Pair 1
'@param strBorrPair2 - Borrower Pair 2
'@param strBorrPair3 - Borrower Pair 3
Function BIZ_DisclosureTracking_NonResc_MultipleBorrPair_ValidateRevisedCD(arrRevisedCDSentDates,strBorrPair1,strBorrPair2,strBorrPair3,strNBOFlag)

    Set objMainForm    =    SwfWindow("swfname:=MainForm")    
    '======= Set CD Sent Date for Three Borrower Pair============    
    arrBorrPair1=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair1,"Revised","CD",arrRevisedCDSentDates(0),"","","Yes","No")    
    arrBorrPair2=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair2,"Revised","CD",arrRevisedCDSentDates(1),"","","Yes","No")
     If lcase(strNBOFlag)="yes" Then    
    	arrBorrPair3=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair3,"Revised","CD",arrRevisedCDSentDates(2),"","","Yes","Yes")
    Else
    	arrBorrPair3=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair3,"Revised","CD",arrRevisedCDSentDates(2),"","","Yes","No")
    End If
    
    FRM_Logger_ReportStepEvent "Primary Loan: Validate Revised CD Sent,Revised CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", "Primary Loan: Validating Revised CD Sent,Revised CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", Null
    '======================Validation Of CD Sent Before selecting Revised CD Recieved======    
    dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, Before selecting Revised CD Recieved======
    dtCDSent=BIZ_GetEarliestDate(arrRevisedCDSentDates)
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
	FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Initial CD Recieved, Earliest Closing Date is Earliest of all Borrower Pair's CD Sent + 6 Days"
    
    '======================Validation CD Received Date, Before selecting Revised CD Recieved======    
    dtExpCDReceived=BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,"Earliest")
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
    		
	'=======Move to Linked Loan =========
	BIZ_DisclosureTracking_LinkLoanClick
	
	BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail strBorrPair1,"Revised","CD","","","","Yes","No"    
    BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail strBorrPair2,"Revised","CD","","","","Yes","No"    
	If lcase(strNBOFlag)="yes" Then    
    	BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail strBorrPair3,"Revised","CD","","","","Yes","Yes"
    Else
    	BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail strBorrPair3,"Revised","CD","","","","Yes","No"
    End If    

	FRM_Logger_ReportStepEvent "Linked Loan: Validate Revised CD Sent,Revised CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", "Linked Loan: Validating Revised CD Sent,Revised CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", Null
	

	'======================Validation Of CD Sent Before selecting Revised CD Recieved======    
    dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, Before selecting Revised CD Recieved======
    dtCDSent=BIZ_GetEarliestDate(arrRevisedCDSentDates)
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")    
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Revised CD Recieved, Earliest Closing Date is Earliest of all Borrower Pair's CD Sent + 6 Days"
    
    '======================Validation CD Received Date, Before selecting Revised CD Recieved======    
    dtExpCDReceived=BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,"Earliest")
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
    
    '=======Move to Linked Loan =========
	BIZ_DisclosureTracking_LinkLoanClick
    
    '=====================Actual Received Dates of Borrower and Co Borrower for 3 pairs ====================================
    dtActualRec_BorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(0)),1,"Reg_ZBusinessCalender")
    dtActualRec_CoBorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(0)),2,"Reg_ZBusinessCalender")
     
    dtActualRec_BorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(1)),3,"Reg_ZBusinessCalender")
    dtActualRec_CoBorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(1)),2,"Reg_ZBusinessCalender")
     
    dtActualRec_BorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(2)),3,"Reg_ZBusinessCalender")
    dtActualRec_CoBorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(2)),2,"Reg_ZBusinessCalender")
     
    '======= Set Borrower Pairs Actual Received Dates for Revised CD  ============
    arrBorrPair1=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair1,"Revised","CD","",dtActualRec_BorrPair1,dtActualRec_CoBorrPair1,"No","No")
    arrBorrPair2=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair2,"Revised","CD","",dtActualRec_BorrPair2,dtActualRec_CoBorrPair2,"No","No")
    If lcase(strNBOFlag)="yes" Then    
    	arrBorrPair3=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair3,"Revised","CD","",dtActualRec_BorrPair3,dtActualRec_CoBorrPair3,"No","Yes")
    Else
    	arrBorrPair3=BIZ_DisclosureTrackingTool_BorrPair_SetDisclosureDetail(strBorrPair3,"Revised","CD","",dtActualRec_BorrPair3,dtActualRec_CoBorrPair3,"No","No")
    End If
    
    FRM_Logger_ReportStepEvent "Primary Loan: Validate Revised CD Sent,Revised CD Received,Earliest Closing after selection of Actual Received Dates for Multiple Borrower Pairs", "Primary Loan: Validating Revised CD Sent,Revised CD Received,Earliest Closing after selection of Actual Received Dates for Multiple Borrower Pairs", Null
    '======================Validation Of CD Sent After selecting Revised CD Recieved======    
    dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, After selecting Revised CD Recieved======
    dtCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDReceived),3,"Reg_ZBusinessCalender")
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Revised CD Recieved, Earliest Closing Date is Revised CD Received Date + 3 Days"
        
    '======================Validation CD Received Date, After selecting Revised CD Recieved======    
    dtExpCDReceived=BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,"Earliest") 
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
	
	'==== Verifying NBO received date with LE Received date====
	If lcase(strNBOFlag)="yes" Then
	 	'dtNBOActualRecDate=DateAdd("d",-2,cdate(dtActualRec_CoBorrPair3))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(DateAdd("d",-1,cdate(dtActualRec_CoBorrPair3)),-1,"Reg_ZBusinessCalender")
	 	FRM_VerifyNotEqual CDate(dtActualCDReceived),CDate(dtNBOActualRecDate),"Revised CD Received Date","NBOs Date is not considered in Revised CD Received Date calculation"
 	End If
 	
	'=======Move to Linked Loan =========
	BIZ_DisclosureTracking_LinkLoanClick
	FRM_Logger_ReportStepEvent "Linked Loan: Validate Revised CD Sent,Revised CD Received,Earliest Closing after selection of Actual Received Dates for Multiple Borrower Pairs", "Linked Loan: Validating Revised CD Sent,Revised CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", Null
	
	'======================Validation Of CD Sent After selecting Revised CD Recieved======    
    dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, After selecting Revised CD Recieved======
    dtCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDReceived),3,"Reg_ZBusinessCalender")
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Revised CD Recieved, Earliest Closing Date is Revised CD Received Date + 3 Days"
        
    '======================Validation CD Received Date, After selecting Revised CD Recieved======    
    dtExpCDReceived=BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,"Earliest") 
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"

	'==== Verifying NBO received date with LE Received date====
	If lcase(strNBOFlag)="yes" Then
	 	'dtNBOActualRecDate=DateAdd("d",-2,cdate(dtActualRec_CoBorrPair3))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(DateAdd("d",-1,cdate(dtActualRec_CoBorrPair3)),-1,"Reg_ZBusinessCalender")
	 	FRM_VerifyNotEqual CDate(dtActualCDReceived),CDate(dtNBOActualRecDate),"Revised CD Received Date","NBOs Date is not considered in Revised CD Received Date calculation"
 	End If
 	
	'=======Move to Back to primary Loan =========
	BIZ_DisclosureTracking_LinkLoanClick
End Function



'This function is to verify DisclosureRecipientDropDownComboBox
'@code
'    BIZ_DT_NBO_LinkedLoan_DisclosureRecipientDropDownComboBox(strBorrPair,strDisclosureType,strLEorCD,dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strFlagReason)
'@endcode
'@param strBorrPair - select the borrower pair
'@param srLEorCD - add disclosure "LE" or "CD"
'@param strLEorCESent - "Yes" or "No"
'@param strDisclosureType - "Initial" or "Revised"
Function BIZ_DT_NBO_LinkedLoan_DisclosureRecipientDropDownComboBox(strBorrPair,strDisclosureType,strLEorCD,strNBOFlag)
    Set objMainForm    =    SwfWindow("swfname:=MainForm")    
    intRow    = BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType,strLEorCD,"Yes")
    GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intRow, True, False, False, "Double"
    GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
    
    Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")    
    '==============Verify Disclosure Recipient DropDown ComboBox ======================	  
	If lcase(strNBOFlag)="yes" Then
		FRM_Logger_ReportInfoEvent "Verify Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date for Borrower Pair: "&strBorrPair, "Verifying Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date for Borrower Pair: "&strBorrPair, Null	
		Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=detailsDisclosureRecipientDropDown")
		If GUI_Object_IsExistX(objRecipientDropDown,3) Then
			FRM_Logger_ReportPassEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox added in Disclosure Details as NBOs added to Borrower  Pair", null
		Else
			FRM_Logger_ReportFailEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox does not exist in Disclosure Details", null
		End If
	Else
		FRM_Logger_ReportInfoEvent "Verify Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date for Borrower Pair: "&strBorrPair, "Verifying Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date for Borrower Pair: "&strBorrPair, Null	
		Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=detailsDisclosureRecipientDropDown")
		If GUI_Object_IsExistX(objRecipientDropDown,3) AND lcase(strNBOFlag)="no" Then
			FRM_Logger_ReportFailEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox added in Disclosure Details", null
		Else
			FRM_Logger_ReportPassEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox does not exist in Disclosure Details as NBOs not added to Borrower Pair", null
		End If		
	End If
    '==============Click on OK button =================
    'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
    SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
    GUI_Dialog_Encompass_OKX 2, "Sundays and legal holidays"    
End Function





'This function is to used for Calculation of CD Sent Date for Valid Borrower Pair
'@code
'    BIZ_DisclosureTracking_CDSentDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,arrInitialCDSentDates,strLatestOREarliest)
'@endcode
'@param arrInitialCDSentDates - Initial CD Sent Dates
'@param arrBorrPair1 - Borrower Pair 1
'@param arrBorrPair2 - Borrower Pair 2
'@param arrBorrPair3 - Borrower Pair 3
'@param strLatestOREarliest - Latest/Earliest
Function BIZ_DisclosureTracking_CDSentDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,arrInitialCDSentDates,strLatestOREarliest)
    i=0    
    If IsArray(arrBorrPair1) Then
	    If ubound(arrBorrPair1)>0 Then      
	       ReDim Preserve arrCDSent(i)       
	       arrCDSent(i)=arrInitialCDSentDates(0)
	       i=i+1
	    End If   
    End If
    
    If IsArray(arrBorrPair2) Then    
	    If ubound(arrBorrPair2)>0 Then       
	       ReDim Preserve arrCDSent(i)       
	       arrCDSent(i)=arrInitialCDSentDates(1)
	       i=i+1
	    End If 
    End If

	If IsArray(arrBorrPair3) Then		
		 If ubound(arrBorrPair3)>0 Then        
        	ReDim Preserve arrCDSent(i)        
           arrCDSent(i)=arrInitialCDSentDates(2)    
    	End If 
	End If   
    
    If strLatestOREarliest="Latest" Then
        BIZ_DisclosureTracking_CDSentDateCalculation=BIZ_GetLatestDate(arrCDSent)
    Else
        BIZ_DisclosureTracking_CDSentDateCalculation=BIZ_GetEarliestDate(arrCDSent)
    End If
End Function



'This function is to set SetDisclosure Detail for Multiple Borrower Pair 
'@code
'    BIZ_DisclosureTrackingTool_SetDisclosureDetail(dtSentDate, dtBorrActualRecDate, dtCoBorrActualRecDate,strFlagReason)
'@endcode
'@param dtSentDate values of CD Sent Date
'@param dtBorrActualRecDate values of Borr Actual Date
'@param dtCoBorrActualRecDate values of CoBorr Actual Date
'@param strFlagReason -Yes or No

Function BIZ_DisclosureTrackingTool_SetDisclosureDetail(dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strNBOFlag)
	
	FRM_Logger_ReportInfoEvent "Set CD (OR) LE Disclosure Details", "Set Sent Date, Actual Received Dates of Borrower and Co Borrower", null
	Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
	
	'==============Unlock Sent Date field and Set Date ======================
	If UTIL_String_IsNotEmpty(dtSentDate) Then	
		If Not objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").GetROProperty("enabled") Then
			Set objSentDate = objDisclosureWnd.SwfObject("swfname:=lbtnSentDate").SwfObject("swfname:=pbIcon")		
			GUI_SwfObject_Click objSentDate
			objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").SetDate CDate(dtSentDate)
		Else
			objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").SetDate CDate(dtSentDate)
		End If
	End If	
	
	'==============Set Actual Borrower Received Date ======================	
	If UTIL_String_IsNotEmpty(dtBorrActualRecDate) Then	
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtBorrActualRecDate)
	End If	

	'==============Unlock Sent Date field and Set Date ======================	
	If UTIL_String_IsNotEmpty(dtCoBorrActualRecDate) Then	
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtCoBorrActualRecDate) 	
	End If
	
	'==============Set Actual NBO Received Date ======================	  
	If UTIL_String_IsNotEmpty(dtCoBorrActualRecDate) and lcase(strNBOFlag)="yes" Then
		FRM_Logger_ReportStepEvent "Verify Non Borrowing Owner Detail", "Started verifying Non Borrowing Owner Detail", Null	
		Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=detailsDisclosureRecipientDropDown")
		If GUI_Object_IsExistX(objRecipientDropDown,3) Then
			FRM_Logger_ReportPassEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox added in Disclosure Details", null
		Else
			FRM_Logger_ReportFailEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox does not exist in Disclosure Details", null
		End If	

		dtNBOActualRecDate=DateAdd("d",-1,cdate(dtCoBorrActualRecDate))
		Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", "E2E_DT_NBO1")
		strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + " " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")
		GUI_SwfComboBox_Select objRecipientDropDown,strName
		Set objFileContactData=Nothing
		
		FRM_Logger_ReportInfoEvent "Set Actaul Received Date for NBO is earliest than Borrower and Co Borrower Actual Received Dates", "Set Actual Received Date for NBO is "&dtNBOActualRecDate, null	
		Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpNBOActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtNBOActualRecDate) 	
	End If
	
	'==============Click on OK button =================
	'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	'Francesca commenting to resolve the screen resolution issue for ok click
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
	GUI_Dialog_Encompass_OKX 2, "Sundays and legal holidays"
	
End Function

'This function is to set click on Link Loan
'@code
'    BIZ_DisclosureTracking_LinkLoanClick()
'@endcode
Function BIZ_DisclosureTracking_LinkLoanClick()
    FRM_Logger_ReportInfoEvent "Go To Linked Loan","Navigate to Linked Loan", null
	
	If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").SwfObject("swfname:=elmLinkedLoan"),5) Then
   	 	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=elmLinkedLoan")
    	GUI_SwfToolbar_Select  SwfWindow("swfname:=MainForm").SwfToolbar("swftypename:=System.Windows.Forms.ContextMenuStrip","swfname:="), "Go to Linked Loan" 
    End If
    
    If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").Dialog("regexpwndtitle:=Encompass"),10) Then
        GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("regexpwndtitle:=Encompass").WinButton("regexpwndtitle:=&Yes")
    End If
    
    If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog"),10) Then
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
    End If  
    
    GUI_Dialog_Encompass_NoX 10,"The status of the currently open loan has changed. Would you like to notify borrowers and partners?"  

	If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").Dialog("title:=Encompass","Index:=0").WinButton("title:=OK","Index:=0"),5) Then
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Dialog("title:=Encompass","Index:=0").WinButton("title:=OK","Index:=0")
    End If
    
    Wait(5)
    BIZ_Tools_Open "Disclosure Tracking"
End Function


'This function is to used to verify EarliestFeeCollection
'@code
'    BIZ_DisclosureTracking_VerifyEarliestFeeCollection()
'@endcode
Function BIZ_DisclosureTracking_VerifyEarliestFeeCollection()
       FRM_Logger_ReportStepEvent "Validate Earliest Fee Collection Date ", "Should be Latest of Intent to Proceed and LE Received Date ", null
        
       Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
        
       Dim arrBorrDates(1)
       
       dtITPDate= GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpIntentToProceed").SwfEdit("swfname:=txtDate"),"text")
       dtLEReceivedDate = GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpLEReceived").SwfEdit("swfname:=txtDate"),"text")
	   
	   arrBorrDates(0)=cdate(dtITPDate)
       arrBorrDates(1)=cdate(dtLEReceivedDate)
       dtLatestDate=BIZ_GetLatestDate(arrBorrDates)
       
	   dtEarliestFeeCollection = GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpFeeCollectDate").SwfEdit("swfname:=txtDate"),"text")
	   FRM_VerifyEqual CDate(dtEarliestFeeCollection),CDate(dtLatestDate),"Earliest Fee Collection Date","Should be Latest of Intent to Proceed and LE Received Date "
     
End Function

'This function is to used to verify IntenttoProceed
'@code
'    BIZ_DisclosureTracking_VerifyIntenttoProceed()
'@endcode
Function BIZ_DisclosureTracking_VerifyIntenttoProceed()
    FRM_Logger_ReportStepEvent "Validate IntenttoProceed Date ", "Intent to Proceed Date should match with that date written in Disclosure Details window ", null
        
        '=========== Double Click on Intial LE ================= 
    Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage")
        
    dtIntenttoProceed=DateAdd("d",-5,Date)
    dtIntenttoProceed=BIZ_DisclosureTracking_DateCalculation(dtIntenttoProceed,1,"Reg_ZBusinessCalender")
    dtITPDate= GUI_Object_GetPropertyValue(objLoanPage.SwfObject("swfname:=dpIntentToProceed").SwfEdit("swfname:=txtDate"),"text")
    FRM_VerifyEqual CDate(dtITPDate),CDate(dtIntenttoProceed),"Intent to Proceed Date","Intent to Proceed Date should match with that date written in Disclosure Details window"
    
End Function




'This function is to used for Calculation of CD Received Date for Valid Borrower Pair
'@code
'    BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,strLatestOREarliest)
'@endcode
'@param arrBorrPair1 - Borrower Pair 1
'@param arrBorrPair2 - Borrower Pair 2
'@param arrBorrPair3 - Borrower Pair 3
'@param strLatestOREarliest - Latest/Earliest
Function BIZ_DisclosureTracking_CDReceivedDateCalculation(arrBorrPair1,arrBorrPair2,arrBorrPair3,strLatestOREarliest)
    i=0
    
    
    If IsArray(arrBorrPair1) Then
    	If ubound(arrBorrPair1)>0 Then
	       ReDim Preserve arrCDRec(i)
	       arrCDRec(i)=BIZ_GetEarliestDate(arrBorrPair1)
	       i=i+1
	    End If     
    End If
    
    If IsArray(arrBorrPair2) Then
	    If ubound(arrBorrPair2)>0 Then
	       ReDim Preserve arrCDRec(i)       
	       arrCDRec(i)=BIZ_GetEarliestDate(arrBorrPair2)
	       i=i+1
	    End If 
    End If

	If IsArray(arrBorrPair3) Then
	    If ubound(arrBorrPair3)>0 Then
	        ReDim Preserve arrCDRec(i)
	        arrCDRec(i)=BIZ_GetEarliestDate(arrBorrPair3) 
	     End If 
  	End If 
  	
    If strLatestOREarliest="Latest" Then
        BIZ_DisclosureTracking_CDReceivedDateCalculation=BIZ_GetLatestDate(arrCDRec)
    Else
        BIZ_DisclosureTracking_CDReceivedDateCalculation=BIZ_GetEarliestDate(arrCDRec)
    End If
End Function





'============================CD Intial Calculation ==============================
Function BIZ_DisclosureTracking_NonResc_MultipleBorrPair_IntialCDReceived(arrInitialCDSentDates,dtCDSent,dtExpCDReceived, strFlagCDRecievedDate)	
	Set objMainForm    =    SwfWindow("swfname:=MainForm") 	
	If lcase(strFlagCDRecievedDate)="before" Then
		'======================Validation Of CD Sent Before selecting Initial CD Recieved====== 
		 dtExpCDSent=BIZ_GetEarliestDate(arrInitialCDSentDates)
		 dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")    
		 FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Send Dates"
		    
		 '======================Validation ECD, Before selecting Initial CD Recieved======	 
		 dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")	 
		 dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
		 FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Initial CD Recieved, Earliest Closing Date is Earliest of all valid Borrower Pair's CD Sent + 6 Days"
		    
	    '======================Validation CD Received Date, Before selecting Initial CD Recieved======   
		 dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")     
		 If dtExpCDReceived="" Then
		    dtActualCDReceived=""
		 Else
		    dtActualCDReceived=cdate(dtActualCDReceived) 	
		 End If  
	     FRM_VerifyEqual dtActualCDReceived,dtExpCDReceived,"CD Received Date","CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"	
	Else	
		'======================Validation Of CD Sent After selecting Initial CD Recieved======    
	    dtExpCDSent=BIZ_GetEarliestDate(arrInitialCDSentDates)
	    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")           
	    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Send Dates"
	    
	    '======================Validation ECD, After selecting Initial CD Recieved======
	    dtCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")
	    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDReceived),3,"Reg_ZBusinessCalender")
	    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
	    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","After selecting Initial CD Recieved,Earliest Closing Date is CD Received Date + 3 Days"
	        
	    '======================Validation CD Received Date, After selecting Initial CD Recieved======    
	    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")    
	    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"CD Received Date","CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"				
	End If	
End Function

 
 
'======================Revised CD Date Calculation============================
Function BIZ_DisclosureTracking_NonResc_MultipleBorrPair_RevisedCDReceived(arrRevisedCDSentDates,dtCDSent,dtExpCDReceived, strFlagCDRecievedDate,strPairStatus)
	
	Set objMainForm    =    SwfWindow("swfname:=MainForm") 	
	If lcase(strFlagCDRecievedDate)="before" Then	
		'======================Validation Of CD Sent Before selecting Revised CD Recieved======    
		dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
		dtActualCDSent=GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")    
		FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
		    
		'======================Validation ECD, Before selecting Revised CD Recieved======
		dtCDSent=BIZ_GetEarliestDate(arrRevisedCDSentDates)		
		dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")		
		dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
		FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Revised CD Recieved,  Earliest Closing Date is Earliest of All Borrower Pair's Revised CD Sent + 6 Days"
		    
		'======================Validation CD Received Date, Before selecting Initial CD Recieved======   
		 dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
		 If dtExpCDReceived="" Then
		    dtActualCDReceived=""
		 Else
		    dtActualCDReceived=cdate(dtActualCDReceived) 	
		 End If  
		 FRM_VerifyEqual dtActualCDReceived,dtExpCDReceived,"Revised CD Received Date","Revised CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"	    	   
	Else	
		'======================Validation Of CD Sent After selecting Revised CD Recieved======    
	    dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
	    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")
	    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
	    
	    '======================Validation ECD, After selecting Revised CD Recieved======	    
	    dtCDSent=BIZ_GetEarliestDate(arrRevisedCDSentDates)       
        If strPairStatus="Invalid" Then
		 	dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")
		 	strMsg="After selecting Revised CD Recieved, Earliest Closing Date is Earliest of all Borrower Pair's Revised CD Sent + 6 Days"
		 Else
		   	dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtExpCDReceived),3,"Reg_ZBusinessCalender")
		   	strMsg="After selecting Revised CD Recieved, Earliest Closing Date is Revised CD Received Date + 3 Days"	 	
		 End If
	    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
	    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date",strMsg
	        
	    '======================Validation CD Received Date, After selecting Revised CD Recieved======    	   
	    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
	    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Earliest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"				
	End If	
End Function



'================Calculating Latest OR Earliest of Received Date for Borrower Pair==============================
Function BIZ_DisclosureTrackingTool_GetEarliestLatestDate(strBorrPair,strDisclosureType,strLEorCD,strLatestOREarliest)

	Set objMainForm    =    SwfWindow("swfname:=MainForm")
    Set objScrollBar=objMainForm.SwfScrollBar("swfname:=vPanelScrollBar") 	
 	intRow    = BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType,strLEorCD,"Yes")
    If objScrollBar.Exist(2) Then
    	GUI_List_ClickOnCell objMainForm.SwfObject("swfname:=gvHistory"),objMainForm.SwfScrollBar("swfname:=vPanelScrollBar"),intRow,8,True,False,False,"Double" 	
    Else
    	GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intRow, True, False, False, "Double"
    End If
    GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"   
    
   	Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")    
    
    '================Get the Borrower and Co Borrower Types ================    
    Set objBorrType = objDisclosureWnd.SwfEdit("swfname:=txtBorrowerType")
    strBorrType = GUI_Object_GetPropertyValue(objBorrType,"text")
    
    Set objCoBorrType = objDisclosureWnd.SwfEdit("swfname:=txtCoBorrowerType")
    strCoBorrType = GUI_Object_GetPropertyValue(objCoBorrType,"text")
    
    If (strBorrType = "Individual" OR strBorrType = "" OR strBorrType = "Trustee" OR strBorrType = "Settlor Trustee") OR (strCoBorrType = "Individual" OR strCoBorrType = "" OR strCoBorrType = "Trustee" OR strCoBorrType = "Settlor Trustee") Then
        ReDim arrBorrDates(0)
		ReDim arrCoBorrDates(0)
		Dim arrEarliest(1)        
		'================Get the Presumed Received and Actual Dates for Borrower  =================    
		Set objBorrPreDate = objDisclosureWnd.SwfObject("swfname:=dpBorrowerReceivedDate").SwfEdit("swfname:=txtDate")
		dtBorrPresumeDate = GUI_Object_GetPropertyValue(objBorrPreDate,"text")
		
		Set objBorrRecDate = objDisclosureWnd.SwfObject("swfname:=dpBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate")
		dtBorrActualDate = GUI_Object_GetPropertyValue(objBorrRecDate,"text")
		
		arrBorrDates(0) =  CDate(dtBorrPresumeDate)		
		If dtBorrActualDate<>"" Then
			ReDim Preserve arrBorrDates(1)
			arrBorrDates(1) =  CDate(dtBorrActualDate)
		End If
		arrEarliest(0)=BIZ_GetEarliestDate(arrBorrDates)       
        
        '================Get the Presumed Received and Actual Dates for CoBorrower  ================= 
        Set objCoBorrPreDate = objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerReceivedDate").SwfEdit("swfname:=txtDate")
    	dtCoBorrPresumeDate = GUI_Object_GetPropertyValue(objCoBorrPreDate,"text")
    	
    	Set objCoRecBorrRecDate = objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate")
    	dtCoBorrActualDate = GUI_Object_GetPropertyValue(objCoRecBorrRecDate,"text")
    	
    	arrCoBorrDates(0) =  CDate(dtCoBorrPresumeDate)
    	If dtCoBorrActualDate<>"" Then
    		ReDim Preserve arrCoBorrDates(1)
			arrCoBorrDates(1) =  CDate(dtCoBorrActualDate)
		End If      
        arrEarliest(1)=BIZ_GetEarliestDate(arrCoBorrDates)         
    End If    
    '==============Click on OK button =================
    'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	'Francesca commenting to resolve the screen resolution issue for ok click
	'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
    GUI_Dialog_Encompass_OKX 2, "Sundays and legal holidays"    
  
	If (strBorrType = "Individual" OR strBorrType = "" OR strBorrType = "Trustee" OR strBorrType = "Settlor Trustee") OR (strCoBorrType = "Individual" OR strCoBorrType = "" OR strCoBorrType = "Trustee" OR strCoBorrType = "Settlor Trustee") Then
	
		If strLatestOREarliest="Latest" Then
			BIZ_DisclosureTrackingTool_GetEarliestLatestDate=BIZ_GetLatestDate(arrEarliest)
		Else
			BIZ_DisclosureTrackingTool_GetEarliestLatestDate=BIZ_GetEarliestDate(arrEarliest)
		End If
	End If
	
End Function



'This function is to used to change the File Permission
'@code
'    BIZ_Settings_ChangeFilePermission(strFileName)
'@endcode
'@param strFileName - File Name
Function BIZ_Settings_ChangeFilePermission(strFileName)
    'Option Explicit
    Const ReadOnly = 1
    Dim fso, file
    Dim filePathStr, strDataFileName
    strDataFileName=strFileName
    filePathStr = FRM_RT_DataDirPath() + strDataFileName + ".xlsx"
    Set fso = CreateObject( "Scripting.FileSystemObject" )
    If fso.FileExists( filePathStr ) Then
        Set file = fso.GetFile( filePathStr )
        If file.Attributes And ReadOnly Then
            file.Attributes = file.Attributes Xor ReadOnly
        End If
    Else
        Reporter.ReportEvent micWarning, "Change Attributes", "File -> " & filePathStr & " was not found."
    End If
End Function

'This function is to used to get the loan number from the datasheet
'@code
'    BIZ_Settings_GetLoanNumber(strRowID)
'@endcode
'@param strRowID - Row num for Linked loan and primary loan number
Function BIZ_Settings_GetLoanNumber(strRowID)
    Set objData = FRM_DS_GetTestData("Settings_LoanNumber", "LoanNumber", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LoanNumberValue")) Then
        strLoanNumber = Trim(FRM_DS_GetValue(objData, "LoanNumberValue"))
    End If    
    BIZ_Settings_GetLoanNumber = strLoanNumber
End Function

'This function is to used to Calculate intial cd received date
Function BIZ_DisclosureTracking_Resc_MultipleBorrPair_IntialCDReceived(arrSentDates,dtCDSent,strReceivedDate)	
	    Set objMainForm    =    SwfWindow("swfname:=MainForm") 	
	
		'======================Validation Of CD Sent ====== 
		 dtExpCDSent=BIZ_GetEarliestDate(arrSentDates)
		 dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")    
		 FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Send Dates"
		    
		 '======================Validation ECD, ======	 
		 dtCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")
	     dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDReceived),3,"Reg_ZBusinessCalender")
	     dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
	     FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Earliest Closing Date is CD Received Date + 3 Days"
	            
	    '======================Validation CD Received Date, ======   
		 dtActualCDReceived=GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")     
		 FRM_VerifyEqual CDate(dtActualCDReceived),CDate(strReceivedDate),"CD Received Date","CD Received Date is Latest of Latest from each valid Borrower Pair's Actual and Presume Received Dates"	
		
End Function

'This function is to used to get sent dates
Function BIZ_DisclosureTrackingTool_GetSentDates(arrBorrPair,strDisclosureType,strLEorCD,strType)
    FRM_Logger_ReportInfoEvent "Get all Sent Dates for Disclosure Done ", " Get all sent dates for  "&strLEorCD, null
        
    Dim arrDates()
    For i  = 0 To UBound(arrBorrPair) Step 1
        strBorrPair = arrBorrPair(i)
        If strType = "All" Then
            intRow = BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType,strLEorCD,"Yes")
            strSentDate = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), intRow,"Sent Date")
            ReDim Preserve arrDates(i)
            arrDates(i) =  CDate(strSentDate) 
        Else
           ' msgbox "strBorrPair"&strBorrPair
            If Instr(strBorrPair,"BorrOne") > 0 Then
                FRM_Logger_ReportInfoEvent "As the Borrower Pair is Invalid Sent Date will not be considered for ECD ", " ECD claculation exclused invalid borrower pair sent date :  "&strBorrPair, null
    
            Else
                intRow = BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType,strLEorCD,"Yes")
                strSentDate = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), intRow,"Sent Date")
                ReDim Preserve arrDates(i-1)
                arrDates(i-1) =  CDate(strSentDate)  
                 
            End If         
        End If
    Next
    BIZ_DisclosureTrackingTool_GetSentDates = arrDates
    
End Function

'This function is to used to get latest received date
Function BIZ_DisclosureTracking_GetLatestReceivedDate(arrBorrPair,strDisclosureType)',strRecType,arrBorrPair4)
    Dim arrRecDates()
    Dim arrReceivedDates()
    inttot = UBound(arrBorrPair)
    'msgbox "inttot"&inttot
    
    For i  = 0 To UBound(arrBorrPair) Step 1
        
        strDate = BIZ_DisclosureTrackingTool_GetEarliestLatestDate(arrBorrPair(i),strDisclosureType,"CD","Latest")
       'msgbox "strDate" &strDate
        If strDate = "" Then
           FRM_Logger_ReportInfoEvent "As the Borrower Pair is Invalid Received Dates will not be considered for Received Date Calculation ", " Received Dates claculation exclused invalid borrower pair date :  "&arrBorrPair(i), null
        Else
            ReDim Preserve arrRecDates(i-1)
            arrRecDates(i-1) = CDate(strDate)
        End If
    Next
    
    intCount = UBound(arrRecDates)
   ' msgbox "intCount"&intCount
    For i = 0 To UBound(arrRecDates) Step 1
        
        ReDim Preserve arrReceivedDates(i)
        strDate = arrRecDates(i)
        dtrec = UTIL_Date_FormatDateByPattern(strDate, "mm/dd/yyyy")
        arrReceivedDates(i) = CDate(dtrec)
        
    Next
    strlatestdate = BIZ_GetLatestDate(arrReceivedDates)
    'msgbox "strlatestdate"&strlatestdate
    BIZ_DisclosureTracking_GetLatestReceivedDate=BIZ_GetLatestDate(arrReceivedDates)
   
End Function

'This function is to used to calculate revised cd received date for resc loans
Function BIZ_DisclosureTracking_Resc_MultipleBorrPair_RevisedCDReceived(arrRevisedBorrPair,strFlag)

    Set objMainForm=SwfWindow("swfname:=MainForm")
	 intMaxCount = UBound(arrRevisedBorrPair)
	 strBorrPair4 = arrRevisedBorrPair(intMaxCount)
    If strFlag="Before" Then    
        '======================Validation Of Revised CD Sent Before Set Actual Received Date========================
        FRM_Logger_ReportStepEvent "Validate Revised CD Sent,Revised CD Received,Earliest Closing before selection of Actual Received Dates for Borrower Pair: "&strBorrPair4, "Validating CD Sent,CD Received,Earliest Closing before selection of Actual Received Dates for Borrower Pair: "&strBorrPair4, Null
        arrRevisedCDSentDates = BIZ_DisclosureTrackingTool_GetSentDates(arrRevisedBorrPair,"Revised","CD","All")
        
        dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
        dtActualCDSent=GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")    
        FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
        
        '======================Validation ECD, Before Set Actual Received Date======
        dtCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
        dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")
        dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
        FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Revised CD Recieved, Earliest Closing Date is Latest of all Borrower Pair's CD Sent + 6 Days"
        
        '======================Validation CD Received Date, Before Set Actual Received Date======    
        dtExpCDReceived=BIZ_DisclosureTracking_GetLatestReceivedDate(arrRevisedBorrPair,"Revised")
        dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
        FRM_VerifyEqual Cdate(dtActualCDReceived),Cdate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Latest of Earliest from all valid Borrower Pair's Actaul and Presume Dates"
    Else    
        '======================Validation Of Revised CD Sent After Set Actual Received Date========================
        FRM_Logger_ReportStepEvent "Validate Revised CD Sent,Revised CD Received,Earliest Closing after selection of Actual Received Dates for Borrower Pair4: "&strBorrPair4, "Validating CD Sent,CD Received,Earliest Closing after selection of Actual Received Dates for Borrower Pair4: "&strBorrPair4, Null
        
        '======================Validation Of Revised CD Sent After Set Actual Received Date========================
        arrRevisedCDSentDates = BIZ_DisclosureTrackingTool_GetSentDates(arrRevisedBorrPair,"Revised","CD","All")
        dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
        dtActualCDSent=GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")    
        FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
        
        '======================Validation ECD, After Set Actual Received Date======
        dtExpCDReceived=BIZ_DisclosureTracking_GetLatestReceivedDate(arrRevisedBorrPair,"Revised")
        dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtExpCDReceived),3,"Reg_ZBusinessCalender")
        dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
        FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","After selecting Revised CD Recieved, Earliest Closing Date is Revised CD Received + 3 Days"
        
        '======================Validation CD Received Date, After Set Actual Received Date======
        dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
        FRM_VerifyEqual Cdate(dtActualCDReceived),Cdate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Latest of Earliest from all valid Borrower Pair's Actaul and Presume Dates"
    End If
End Function


Function BIZ_DisclosureTracking_SetTimelineOnOff(arrBorrPair,strDisclosureType,strLEorCD,strOnOff)
    FRM_Logger_ReportInfoEvent " Setting Timeline Off/On","Set Timeline "&strOnOff&" for  "&strDisclosureType&" "&strLEorCD,Null

     For i  = 0 To UBound(arrBorrPair) Step 1
        strBorrPair = arrBorrPair(i)
        intRow = BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType,strLEorCD,"Yes")
        strTimelineInc = GUI_List_GetCellData (SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), intRow,"Included in Timeline")
        If (strTimelineInc = "Yes" AND strOnOff = "Off") OR (strTimelineInc = "No" AND strOnOff = "On") Then
            GUI_List_ActOnRow SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvHistory"), intRow, True, False, False, "Single"
            If strTimelineInc = "Yes" AND strOnOff = "Off" Then
                GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfButton("swfname:=btnMarkInvalid")
            Else
                GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfWindow("swfname:=LoanPage").SwfButton("swfname:=btnMarkValid")            
            End If
                       
        End If
    Next
 End Function


 '==========================Initial CD Validation for Rescendable Loans====================
Function BIZ_DisclosureTracking_RescLoan_MultipleBorrPair_ValidateIntialCD(arrInitialCDSentDates,arrBorrPair,strNBOFlag)
	
	Dim arrRecDates(1)
	Dim arrReceivedDates(1)
    Set objMainForm    =    SwfWindow("swfname:=MainForm")
    
    '======= Set CD Sent Date for Three Borrower Pair============ 	
    strDate1=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(0),"Initial","CD",arrInitialCDSentDates(0),"","","No","No")
    arrRecDates(0)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(1),"Initial","CD",arrInitialCDSentDates(1),"","","No","No" )
    If lcase(strNBOFlag)="yes" Then
    	arrRecDates(1)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(2),"Initial","CD",arrInitialCDSentDates(2),"","","No","Yes" )
    Else
    	arrRecDates(1)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(2),"Initial","CD",arrInitialCDSentDates(2),"","","No","No" )
    End If
    
    '======================Validation Of CD Sent Before selecting Initial CD Recieved====== 
	FRM_Logger_ReportStepEvent "Validate CD Sent,CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", "Validating CD Sent,CD Received,Earliest Closing before selection of Actual Received Dates for Multiple Borrower Pairs", Null
   	dtExpCDSent=BIZ_GetEarliestDate(arrInitialCDSentDates)    
    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, Before selecting Initial CD Recieved======
    dtCDSent=BIZ_GetLatestDate(arrInitialCDSentDates)
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")      
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Initial CD Recieved, Earliest Closing Date is Latest of all valid Borrower Pair's CD Sent + 6 Days"
      
    '======================Validation CD Received Date, Before selecting Initial CD Recieved======    
    dtExpCDReceived=BIZ_GetLatestDate(arrRecDates)
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"CD Received Date","CD Received Date is  Latest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
       
    '=====================Actual Received Dates of Borrower and Co Borrower for 3 pairs ====================================
    If lcase(strNBOFlag)="yes" Then
	    dtActualRec_BorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(0)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(0)),2,"Reg_ZBusinessCalender")
	     
	    dtActualRec_BorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(1)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(1)),1,"Reg_ZBusinessCalender")
	     
	    dtActualRec_BorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(2)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(2)),1,"Reg_ZBusinessCalender")
	Else
		'=====================Actual Received Dates of Borrower and Co Borrower for 3 pairs ====================================
	    dtActualRec_BorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(0)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(0)),2,"Reg_ZBusinessCalender")
	     
	    dtActualRec_BorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(1)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(1)),2,"Reg_ZBusinessCalender")
	     
	    dtActualRec_BorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(2)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrInitialCDSentDates(2)),2,"Reg_ZBusinessCalender")
	End If
     
    '======= Set Borrower Pairs Actual Received Dates for Initial CD  ============
   	strDate=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(0),"Initial","CD","",dtActualRec_BorrPair1,dtActualRec_CoBorrPair1,"No","No")
    arrReceivedDates(0)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(1),"Initial","CD","",dtActualRec_BorrPair2,dtActualRec_CoBorrPair2,"No","No" )    
    If lcase(strNBOFlag)="yes" Then
    	arrReceivedDates(1)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(2),"Initial","CD","",dtActualRec_BorrPair3,dtActualRec_CoBorrPair3,"No","Yes")
    Else
    	arrReceivedDates(1)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(2),"Initial","CD","",dtActualRec_BorrPair3,dtActualRec_CoBorrPair3,"No","No")
    End If
    
    
    FRM_Logger_ReportStepEvent "Validate CD Sent,CD Received,Earliest Closing after selection of Actual Received Dates for Multiple Borrower Pairs", "Validating CD Sent,CD Received,Earliest Closing after selection of Actual Received Dates for Multiple Borrower Pairs", Null
    '======================Validation Of CD Sent After selecting Initial CD Recieved======    
	dtExpCDSent=BIZ_GetEarliestDate(arrInitialCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDSent;gcCD;.*"),"text")           
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"CD Sent Date ","CD Sent Date is Earliest of all Borrower Pair's Send Dates"
    
    '======================Validation ECD, After selecting Initial CD Recieved======
    dtExpCDReceived=BIZ_GetLatestDate(arrReceivedDates)
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtExpCDReceived),3,"Reg_ZBusinessCalender")
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","After selecting Initial CD Recieved,Earliest Closing Date is CD Received Date + 3 Days"
    
    '======================Validation CD Received Date, After selecting Initial CD Recieved======    
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDReceived;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtExpCDReceived),"CD Received Date","CD Received Date is Latest of Earliest from each valid Borrower Pair's Actual and Presume Received Dates"
   
   '=================== Verifying NBO Date with CD Received date====
    If lcase(strNBOFlag)="yes" Then
		'dtNBOActualRecDate=DateAdd("d",1,cdate(dtActualRec_CoBorrPair3))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(DateAdd("d",1,cdate(dtActualRec_CoBorrPair3)),1,"Reg_ZBusinessCalender")
	 	FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtNBOActualRecDate),"CD Received Date","NBOs Date is considered in CD Received Date Calculation"
	End If   
End Function



'==========================Revised CD Validation for Rescendable Loans====================
Function BIZ_DisclosureTracking_RescLoan_MultipleBorrPair_ValidateRevisedCD(arrRevisedCDSentDates,arrBorrPair,strNBOFlag)
	Dim arrRecDates(1)
	Dim arrReceivedDates(1)
	
    Set objMainForm    =    SwfWindow("swfname:=MainForm")    
    '======= Set CD Sent Date for Three Borrower Pair============    
    strDate1=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(0),"Revised","CD",arrRevisedCDSentDates(0),"","","Yes","No")   
    arrRecDates(0)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(1),"Revised","CD",arrRevisedCDSentDates(1),"","","Yes","No")  	
  	If lcase(strNBOFlag)="yes" Then
    	arrRecDates(1)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(2),"Revised","CD",arrRevisedCDSentDates(2),"","","Yes","Yes")
    Else
    	arrRecDates(1)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(2),"Revised","CD",arrRevisedCDSentDates(2),"","","Yes","No")
    End If
    
    '======================Validation Of CD Sent Before selecting Initial CD Recieved======  	
	FRM_Logger_ReportStepEvent "Verify Revised CD Sent,Revised CD Received,Earliest Closing before selection of Actual Received Dates for Borrower Pairs", "Validating Revised CD Sent,Revised CD Received,Earliest Closing before selection of Actual Received Dates for Borrower Pairs", Null
    dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, Before Set Actual Received Date======
    dtCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtCDSent),6,"Reg_ZBusinessCalender")
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","Before selecting Revised CD Recieved, Earliest Closing Date is Latest of all Borrower Pair's CD Sent + 6 Days"
    
    '======================Validation CD Received Date, Before Set Actual Received Date======    
    dtExpCDReceived=BIZ_GetLatestDate(arrRecDates)
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
    FRM_VerifyEqual Cdate(dtActualCDReceived),Cdate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Latest of Earliest from all valid Borrower Pair's Actaul and Presume Dates"
	
	'=====================Actual Received Dates of Borrower and Co Borrower for 3 pairs ====================================
    If lcase(strNBOFlag)="yes" Then
	    dtActualRec_BorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(0)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(0)),2,"Reg_ZBusinessCalender")
	     
	    dtActualRec_BorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(1)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(1)),1,"Reg_ZBusinessCalender")
	     
	    dtActualRec_BorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(2)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(2)),1,"Reg_ZBusinessCalender")
	Else
		'=====================Actual Received Dates of Borrower and Co Borrower for 3 pairs ====================================
	    dtActualRec_BorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(0)),1,"Reg_ZBusinessCalender")
	    dtActualRec_BorrPair1=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(0)),2,"Reg_ZBusinessCalender")
	     
	    dtActualRec_BorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(1)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair2=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(1)),2,"Reg_ZBusinessCalender")
	     
	    dtActualRec_BorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(2)),1,"Reg_ZBusinessCalender")
	    dtActualRec_CoBorrPair3=BIZ_DisclosureTracking_DateCalculation(cdate(arrRevisedCDSentDates(2)),2,"Reg_ZBusinessCalender")
	End If
     
    '======= Set Borrower Pairs Actual Received Dates for Revised CD  ============
    strDate=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(0),"Revised","CD","",dtActualRec_BorrPair1,dtActualRec_CoBorrPair1,"No","No")
    arrReceivedDates(0)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(1),"Revised","CD","",dtActualRec_BorrPair2,dtActualRec_CoBorrPair2,"No","No")    
    If lcase(strNBOFlag)="yes" Then
    	arrReceivedDates(1)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(2),"Revised","CD","",dtActualRec_BorrPair3,dtActualRec_CoBorrPair3,"No","Yes")
    Else
    	arrReceivedDates(1)=BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail (arrBorrPair(2),"Revised","CD","",dtActualRec_BorrPair3,dtActualRec_CoBorrPair3,"No","No")
    End If
 
 	'======================Validation Of Revised CD Sent After Set Actual Received Date======================== 
	FRM_Logger_ReportStepEvent "Verify Revised CD Sent,Revised CD Received,Earliest Closing after selection of Actual Received Dates for Borrower Pairs", "Validate Revised CD Sent,Revised CD Received,Earliest Closing after selection of Actual Received Dates for Borrower Pairs", Null 	
    dtExpCDSent=BIZ_GetLatestDate(arrRevisedCDSentDates)
    dtActualCDSent=GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedSent;gcCD;.*"),"text")    
    FRM_VerifyEqual CDate(dtActualCDSent),CDate(dtExpCDSent),"Revised CD Sent Date ","Revised CD Sent Date is Latest of all Borrower Pair's Sent Dates"
    
    '======================Validation ECD, After Set Actual Received Date======   
    dtExpCDReceived=BIZ_GetLatestDate(arrReceivedDates)
    dtExpECD=BIZ_DisclosureTracking_DateCalculation(cdate(dtExpCDReceived),3,"Reg_ZBusinessCalender")
    dtECDDate= GUI_Object_GetPropertyValue(objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpClosingDate;.*"),"text")
    FRM_VerifyEqual CDate(dtECDDate),CDate(dtExpECD),"Earliest Closing Date","After selecting Revised CD Recieved, Earliest Closing Date is Revised CD Received + 3 Days"
    
    '======================Validation CD Received Date, After Set Actual Received Date======
    dtActualCDReceived=GUI_Object_GetPropertyValue (objMainForm.SwfEdit("swfname:=txtDate","swfname path:=txtDate;dpCDRevisedReceived;gcCD;.*"),"text")
    FRM_VerifyEqual Cdate(dtActualCDReceived),Cdate(dtExpCDReceived),"Revised CD Received Date","Revised CD Received Date is Latest of Earliest from all valid Borrower Pair's Actaul and Presume Dates"
    '=================== Verifying NBO Date with CD Received date====
    If lcase(strNBOFlag)="yes" Then
		'dtNBOActualRecDate=DateAdd("d",1,cdate(dtActualRec_CoBorrPair3))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(DateAdd("d",1,cdate(dtActualRec_CoBorrPair3)),1,"Reg_ZBusinessCalender")
	 	FRM_VerifyEqual CDate(dtActualCDReceived),CDate(dtNBOActualRecDate),"Revised CD Received Date","NBOs Date is considered in Revised CD Received Date Calculation"
	End If 
End Function


'===========================Set Disclosure Details =====================
Function BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail(strBorrPair,strDisclosureType,strLEorCD,dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strFlagReason,strNBOFlag)
    Set objMainForm    =    SwfWindow("swfname:=MainForm")    
    intRow    = BIZ_GetRowOfDisclosure(strBorrPair,strDisclosureType,strLEorCD,"Yes")
    GUI_List_ActOnRow objMainForm.SwfObject("swfname:=gvHistory"), intRow, True, False, False, "Double"
    GUI_Dialog_Encompass_OKX 3, "Sundays and legal holidays"
    strDate = BIZ_DisclosureTrackingTool_RescLoan_MulBorr_SetDisclosureDetail(dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strFlagReason,strNBOFlag)
    BIZ_DisclosureTrackingTool_RescLoan_BorrPair_SetDisclosureDetail = strDate
End Function



'===========================Set Disclosure Details =====================
Function BIZ_DisclosureTrackingTool_RescLoan_MulBorr_SetDisclosureDetail(dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strFlagReason,strNBOFlag)
    
    FRM_Logger_ReportInfoEvent "Set Disclosure Details", "Set Sent Date, Actual Received Dates of Borrower and Co Borrower", null
    Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
   
    ReDim arrBorrPairDates(0)
    '==============Unlock Sent Date field and Set Date ======================
    If UTIL_String_IsNotEmpty(dtSentDate) Then    
        If Not objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").GetROProperty("enabled") Then
            Set objSentDate = objDisclosureWnd.SwfObject("swfname:=lbtnSentDate").SwfObject("swfname:=pbIcon")        
            GUI_SwfObject_Click objSentDate
            objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").SetDate CDate(dtSentDate)
        Else
            objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").SetDate CDate(dtSentDate)
        End If
    End If    
    GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"  
    
    '================Get the Presumed Received Dates for Borrower and Co Borrower =================    
    Set objBorrRecDate = objDisclosureWnd.SwfObject("swfname:=dpBorrowerReceivedDate").SwfEdit("swfname:=txtDate")
    dtBorrRecDate = GUI_Object_GetPropertyValue(objBorrRecDate,"text")
    
    Set objCoBorrRecDate = objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerReceivedDate").SwfEdit("swfname:=txtDate")
    dtCoBorrRecDate = GUI_Object_GetPropertyValue(objCoBorrRecDate,"text")
    
    '================Get the Borrower and Co Borrower Types ================    
    Set objBorrType = objDisclosureWnd.SwfEdit("swfname:=txtBorrowerType")
    strBorrType = GUI_Object_GetPropertyValue(objBorrType,"text")
    
    Set objCoBorrType = objDisclosureWnd.SwfEdit("swfname:=txtCoBorrowerType")
    strCoBorrType = GUI_Object_GetPropertyValue(objCoBorrType,"text")
     
    If (strBorrType = "Individual" OR strBorrType = "" OR strBorrType = "Trustee" OR strBorrType = "Settlor Trustee") OR (strCoBorrType = "Individual" OR strCoBorrType = "" OR strCoBorrType = "Trustee" OR strCoBorrType = "Settlor Trustee") Then
       FRM_Logger_ReportInfoEvent "Validating the Borrower Types", "As the borrower type is "&strBorrType&" And Co-Borrower Type is "&strCoBorrType&", Dates will be considered for calculation", null
       ReDim Preserve arrBorrPairDates(1)
       arrBorrPairDates(0) =  CDate(dtBorrRecDate)
       arrBorrPairDates(1) =  CDate(dtCoBorrRecDate)
       
       If UTIL_String_IsNotEmpty(dtBorrActualRecDate) AND UTIL_String_IsNotEmpty(dtCoBorrActualRecDate) Then    
            ReDim Preserve arrBorrPairDates(3)
            '==============Set Actual Borrower Received Date ======================    
            GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtBorrActualRecDate)
        	'==============Set Actual Co Borrower Received Date ======================       
            GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtCoBorrActualRecDate)     
   
           arrBorrPairDates(2) =  CDate(dtBorrActualRecDate)
           arrBorrPairDates(3) =  CDate(dtCoBorrActualRecDate)
       End If
    ELSE
       FRM_Logger_ReportInfoEvent "Validating the Borrower Types", "As the borrower type is "&strBorrType&" And Co-Borrower Type is "&strCoBorrType&", Dates will not  considered for calculation", null           
    End If
    
        '==============Set Actual NBO Received Date ======================	  
	If UTIL_String_IsNotEmpty(dtCoBorrActualRecDate) and lcase(strNBOFlag)="yes" Then
		'===== Verfiying Disclosure Recipient DropDown ComboBox======
		FRM_Logger_ReportStepEvent "Verify Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date", "Verifying Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date", Null	
		Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=detailsDisclosureRecipientDropDown")
		If GUI_Object_IsExistX(objRecipientDropDown,3) Then
			FRM_Logger_ReportPassEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox added in Disclosure Details as NBOs added to Borrower  Pair", null
		Else
			FRM_Logger_ReportFailEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox does not exist in Disclosure Details", null
		End If	
		
		'============ Select NBO1 and Set Actual Received Date======
		'dtNBOActualRecDate=DateAdd("d",1,cdate(dtCoBorrActualRecDate))
		dtNBOActualRecDate=cdate(dtCoBorrActualRecDate)
		Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", "E2E_DT_NBO1")
		strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + " " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")
		GUI_SwfComboBox_Select objRecipientDropDown,strName
		Set objFileContactData=Nothing
		
		FRM_Logger_ReportInfoEvent "Set Actual Received Date for NBO is latest than Borrower's and Co Borrower's Actual Received Dates", "Set Actual Received Date for NBO is "&dtNBOActualRecDate, null	
		Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpNBOActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtNBOActualRecDate) 
		
		'============ Select NBO2 and Set Actual Received Date======
		'dtNBOActualRecDate=DateAdd("d",1,cdate(dtCoBorrActualRecDate))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(DateAdd("d",1,cdate(dtCoBorrActualRecDate)),1,"Reg_ZBusinessCalender")
		Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", "E2E_DT_NBO2")
		strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + " " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")
		GUI_SwfComboBox_Select objRecipientDropDown,strName
		Set objFileContactData=Nothing
		
		FRM_Logger_ReportInfoEvent "Set Actaul Received Date for NBO is latest than Borrower's and Co Borrower's Actual Received Dates", "Set Actual Received Date for NBO is "&dtNBOActualRecDate, null	
		Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpNBOActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtNBOActualRecDate)
		
		'====== select borrower pair again====
		'strBorrPair3=BIZ_DisclosureTrackingTool_GetBorrowerPair("E2E_DT_NONRESC_PAIR3")
		Set objDataBorr = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", "E2E_DT_NONRESC_PAIR3")
		Set objDataCoBorro = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetCoBorrower", "E2E_DT_NONRESC_PAIR3")		    
		strBorrName=Trim(FRM_DS_GetValue(objDataBorr, "FirstName"))&" "&Trim(FRM_DS_GetValue(objDataBorr, "LastName"))    
		strCoBorrName=Trim(FRM_DS_GetValue(objDataCoBorro, "FirstName"))&" "&Trim(FRM_DS_GetValue(objDataCoBorro, "LastName")) 
		strBorrPair3=strBorrName&" "&strCoBorrName
		Set objDataBorr=Nothing
		Set objDataCoBorro=Nothing
		
		GUI_SwfComboBox_Select objRecipientDropDown,strBorrPair3
	Else
		If lcase(strNBOFlag)="no" Then
			FRM_Logger_ReportStepEvent "Verify Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date", "Verifying Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date", Null	
			Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=detailsDisclosureRecipientDropDown")
			If GUI_Object_IsExistX(objRecipientDropDown,3) AND lcase(strNBOFlag)="no" Then
				FRM_Logger_ReportFailEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox added in Disclosure Details", null
			Else
				FRM_Logger_ReportPassEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox does not exist in Disclosure Details as NBOs not added to Borrower Pair", null
			End If
		End If	
	End If
    '=====================Date Calculation =========
    strDate=BIZ_DisclosureTrackingTool_RescLoan_GetEarliestLatestDate("Latest",strNBOFlag)
    
    '=========Select the Reason for Revised CD========
     If    strFlagReason="Yes" Then           
         GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure"), "Reasons"
         GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfCheckBox("swfname:=chkReason1"), "ON"
     End If  	

    '==============Click on OK button =================
    'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	'Francesca commenting to resolve the screen resolution issue for ok click
	'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
    GUI_Dialog_Encompass_OKX 2, "Sundays and legal holidays"    
    BIZ_DisclosureTrackingTool_RescLoan_MulBorr_SetDisclosureDetail= strDate    
End Function



'================Calculating Latest OR Earliest of Received Date for Borrower Pair==============================
Function BIZ_DisclosureTrackingTool_RescLoan_GetEarliestLatestDate(strLatestOREarliest,strNBOFlag)
  
   	Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")    
    
    '================Get the Borrower and Co Borrower Types ================    
    Set objBorrType = objDisclosureWnd.SwfEdit("swfname:=txtBorrowerType")
    strBorrType = GUI_Object_GetPropertyValue(objBorrType,"text")
    
    Set objCoBorrType = objDisclosureWnd.SwfEdit("swfname:=txtCoBorrowerType")
    strCoBorrType = GUI_Object_GetPropertyValue(objCoBorrType,"text")
    
    If (strBorrType = "Individual" OR strBorrType = "" OR strBorrType = "Trustee" OR strBorrType = "Settlor Trustee") OR (strCoBorrType = "Individual" OR strCoBorrType = "" OR strCoBorrType = "Trustee" OR strCoBorrType = "Settlor Trustee") Then
        ReDim arrBorrDates(0)
		ReDim arrCoBorrDates(0)
		ReDim arrNBODates(0)
		ReDim arrEarliest(1)        
		'================Get the Presumed Received and Actual Dates for Borrower  =================    
		Set objBorrPreDate = objDisclosureWnd.SwfObject("swfname:=dpBorrowerReceivedDate").SwfEdit("swfname:=txtDate")
		dtBorrPresumeDate = GUI_Object_GetPropertyValue(objBorrPreDate,"text")
		
		Set objBorrRecDate = objDisclosureWnd.SwfObject("swfname:=dpBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate")
		dtBorrActualDate = GUI_Object_GetPropertyValue(objBorrRecDate,"text")
		
		arrBorrDates(0) =  CDate(dtBorrPresumeDate)		
		If dtBorrActualDate<>"" Then
			ReDim Preserve arrBorrDates(1)
			arrBorrDates(1) =  CDate(dtBorrActualDate)
		End If
		arrEarliest(0)=BIZ_GetEarliestDate(arrBorrDates)       
        
        '================Get the Presumed Received and Actual Dates for CoBorrower  ================= 
        Set objCoBorrPreDate = objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerReceivedDate").SwfEdit("swfname:=txtDate")
    	dtCoBorrPresumeDate = GUI_Object_GetPropertyValue(objCoBorrPreDate,"text")
    	
    	Set objCoRecBorrRecDate = objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate")
    	dtCoBorrActualDate = GUI_Object_GetPropertyValue(objCoRecBorrRecDate,"text")
    	
    	arrCoBorrDates(0) =  CDate(dtCoBorrPresumeDate)
    	If dtCoBorrActualDate<>"" Then
    		ReDim Preserve arrCoBorrDates(1)
			arrCoBorrDates(1) =  CDate(dtCoBorrActualDate)
		End If      
        arrEarliest(1)=BIZ_GetEarliestDate(arrCoBorrDates) 
		
		If lcase(strNBOFlag)="yes" Then
			ReDim Preserve arrEarliest(3)
			Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=detailsDisclosureRecipientDropDown")
			'============ Select NBO1 and Set Actual Received Date======		
			Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", "E2E_DT_NBO1")
			strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + " " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")
			GUI_SwfComboBox_Select objRecipientDropDown,strName
			Set objFileContactData=Nothing
			
			'================Get the Presumed Received and Actual Dates for NBO1  =================
			Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")			
			Set objNBOPreDate = objDisclosureWnd.SwfObject("swfname:=dpNBOReceivedDate").SwfEdit("swfname:=txtDate")
			dtNBOPresumeDate = GUI_Object_GetPropertyValue(objNBOPreDate,"text")
			
			Set objNBORecDate = objDisclosureWnd.SwfObject("swfname:=dpNBOActualReceivedDate").SwfEdit("swfname:=txtDate")
			dtNBOActualDate = GUI_Object_GetPropertyValue(objNBORecDate,"text")
									
			arrNBODates(0) =  CDate(dtNBOPresumeDate)		
			If dtNBOActualDate<>"" Then
				ReDim Preserve arrNBODates(1)
				arrNBODates(1) =  CDate(dtNBOActualDate)
			End If
			arrEarliest(2)=BIZ_GetEarliestDate(arrNBODates) 
		
			'============ Select NBO1 and Set Actual Received Date======		
			Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", "E2E_DT_NBO2")
			strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + " " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")
			GUI_SwfComboBox_Select objRecipientDropDown,strName
			Set objFileContactData=Nothing
			
			'================Get the Presumed Received and Actual Dates for NBO2  =================
			Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")			
			Set objNBOPreDate = objDisclosureWnd.SwfObject("swfname:=dpNBOReceivedDate").SwfEdit("swfname:=txtDate")
			dtNBOPresumeDate = GUI_Object_GetPropertyValue(objNBOPreDate,"text")
			
			Set objNBORecDate = objDisclosureWnd.SwfObject("swfname:=dpNBOActualReceivedDate").SwfEdit("swfname:=txtDate")
			dtNBOActualDate = GUI_Object_GetPropertyValue(objNBORecDate,"text")
									
			arrNBODates(0) =  CDate(dtNBOPresumeDate)		
			If dtNBOActualDate<>"" Then
				ReDim Preserve arrNBODates(1)
				arrNBODates(1) =  CDate(dtNBOActualDate)
			End If
			arrEarliest(3)=BIZ_GetEarliestDate(arrNBODates)		
		End If		
	End If 
  
	If (strBorrType = "Individual" OR strBorrType = "" OR strBorrType = "Trustee" OR strBorrType = "Settlor Trustee") OR (strCoBorrType = "Individual" OR strCoBorrType = "" OR strCoBorrType = "Trustee" OR strCoBorrType = "Settlor Trustee") Then
		If strLatestOREarliest="Latest" Then
			BIZ_DisclosureTrackingTool_RescLoan_GetEarliestLatestDate=BIZ_GetLatestDate(arrEarliest)
		Else
			BIZ_DisclosureTrackingTool_RescLoan_GetEarliestLatestDate=BIZ_GetEarliestDate(arrEarliest)
		End If
	End If	
End Function




'This function is to set SetDisclosure Detail for Multiple Borrower Pair 
'@code
'    BIZ_DisclosureTrackingTool_SetDisclosureDetail(dtSentDate, dtBorrActualRecDate, dtCoBorrActualRecDate,strFlagReason)
'@endcode
'@param dtSentDate values of CD Sent Date
'@param dtBorrActualRecDate values of Borr Actual Date
'@param dtCoBorrActualRecDate values of CoBorr Actual Date
'@param strFlagReason -Yes or No
Function BIZ_DisclosureTrackingTool_MulBorr_SetDisclosureDetail(dtSentDate,dtBorrActualRecDate,dtCoBorrActualRecDate,strFlagReason,strNBOFlag)
    
    FRM_Logger_ReportInfoEvent "Set Disclosure Details", "Set Sent Date, Actual Received Dates of Borrower and Co Borrower", null
    Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
   
    ReDim arrBorrPairDates(0)
    '==============Unlock Sent Date field and Set Date ======================
    If UTIL_String_IsNotEmpty(dtSentDate) Then    
        If Not objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").GetROProperty("enabled") Then
            Set objSentDate = objDisclosureWnd.SwfObject("swfname:=lbtnSentDate").SwfObject("swfname:=pbIcon")        
            GUI_SwfObject_Click objSentDate
            objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").SetDate CDate(dtSentDate)
        Else
            objDisclosureWnd.SwfCalendar("swfname:=dtDisclosedDate").SetDate CDate(dtSentDate)
        End If
    End If    
    GUI_Dialog_Encompass_OKX 5, "Sundays and legal holidays"    
       
    '================Get the Presumed Received Dates for Borrower and Co Borrower =================    
    Set objBorrRecDate = objDisclosureWnd.SwfObject("swfname:=dpBorrowerReceivedDate").SwfEdit("swfname:=txtDate")
    dtBorrRecDate = GUI_Object_GetPropertyValue(objBorrRecDate,"text")
    
    Set objCoBorrRecDate = objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerReceivedDate").SwfEdit("swfname:=txtDate")
    dtCoBorrRecDate = GUI_Object_GetPropertyValue(objCoBorrRecDate,"text")
    
    '================Get the Borrower and Co Borrower Types ================    
    Set objBorrType = objDisclosureWnd.SwfEdit("swfname:=txtBorrowerType")
    strBorrType = GUI_Object_GetPropertyValue(objBorrType,"text")
    
    Set objCoBorrType = objDisclosureWnd.SwfEdit("swfname:=txtCoBorrowerType")
    strCoBorrType = GUI_Object_GetPropertyValue(objCoBorrType,"text")
    
    If (strBorrType = "Individual" OR strBorrType = "" OR strBorrType = "Trustee" OR strBorrType = "Settlor Trustee") OR (strCoBorrType = "Individual" OR strCoBorrType = "" OR strCoBorrType = "Trustee" OR strCoBorrType = "Settlor Trustee") Then
       FRM_Logger_ReportInfoEvent "Validating the Borrower Types", "As the borrower type is "&strBorrType&" And Co-Borrower Type is "&strCoBorrType&", Dates will be considered for calculation", null
       ReDim Preserve arrBorrPairDates(1)
       arrBorrPairDates(0) =  CDate(dtBorrRecDate)
       arrBorrPairDates(1) =  CDate(dtCoBorrRecDate)
       
       If UTIL_String_IsNotEmpty(dtBorrActualRecDate) AND UTIL_String_IsNotEmpty(dtCoBorrActualRecDate) Then    
            ReDim Preserve arrBorrPairDates(3)
            '==============Set Actual Borrower Received Date ======================    
    
            GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtBorrActualRecDate)
        '==============Set Actual Co Borrower Received Date ======================    
      
            GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpCoBorrowerActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtCoBorrActualRecDate)     
   
           arrBorrPairDates(2) =  CDate(dtBorrActualRecDate)
           arrBorrPairDates(3) =  CDate(dtCoBorrActualRecDate)
       End If
    ELSE
       FRM_Logger_ReportInfoEvent "Validating the Borrower Types", "As the borrower type is "&strBorrType&" And Co-Borrower Type is "&strCoBorrType&", Dates will not  considered for calculation", null           
    End If
    
    '==============Set Actual NBO Received Date ======================	  
	If UTIL_String_IsNotEmpty(dtCoBorrActualRecDate) and lcase(strNBOFlag)="yes" Then
		FRM_Logger_ReportStepEvent "Verify Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date", "Verifying Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date", Null	
		Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=detailsDisclosureRecipientDropDown")
		If GUI_Object_IsExistX(objRecipientDropDown,3) Then
			FRM_Logger_ReportPassEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox added in Disclosure Details as NBOs added to Borrower  Pair", null
		Else
			FRM_Logger_ReportFailEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox does not exist in Disclosure Details", null
		End If	

		'dtNBOActualRecDate=DateAdd("d",-1,cdate(dtCoBorrActualRecDate))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(dtCoBorrActualRecDate,-1,"Reg_ZBusinessCalender")
		Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", "E2E_DT_NBO1")
		strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + " " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")
		GUI_SwfComboBox_Select objRecipientDropDown,strName
		Set objFileContactData=Nothing
		
		FRM_Logger_ReportInfoEvent "Set Actual Received Date for NBO is earliest than Borrower's and Co Borrower's Actual Received Dates", "Set Actual Received Date for NBO is "&dtNBOActualRecDate, null	
		Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpNBOActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtNBOActualRecDate) 
		
		'dtNBOActualRecDate=DateAdd("d",-2,cdate(dtCoBorrActualRecDate))
		dtNBOActualRecDate=BIZ_DisclosureTracking_DateCalculation(DateAdd("d",-1,cdate(dtCoBorrActualRecDate)),-1,"Reg_ZBusinessCalender")
		Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", "E2E_DT_NBO2")
		strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + " " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")
		GUI_SwfComboBox_Select objRecipientDropDown,strName
		Set objFileContactData=Nothing
		
		FRM_Logger_ReportInfoEvent "Set Actaul Received Date for NBO is earliest than Borrower's and Co Borrower's Actual Received Dates", "Set Actual Received Date for NBO is "&dtNBOActualRecDate, null	
		Set objDisclosureWnd = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure")
		GUI_WebEdit_Set objDisclosureWnd.SwfObject("swfname:=dpNBOActualReceivedDate").SwfEdit("swfname:=txtDate"), CDate(dtNBOActualRecDate)
	Else
		If lcase(strNBOFlag)="no" Then
			FRM_Logger_ReportStepEvent "Verify Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date", "Verifying Disclosure Recipient DropDown ComboBox to select Disclosure Recipient and add Received Date", Null	
			Set objRecipientDropDown=SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfComboBox("swfname:=detailsDisclosureRecipientDropDown")
			If GUI_Object_IsExistX(objRecipientDropDown,3) AND lcase(strNBOFlag)="no" Then
				FRM_Logger_ReportFailEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox added in Disclosure Details", null
			Else
				FRM_Logger_ReportPassEvent "Verify Disclosure Recipient DropDown ComboBox", "Disclosure Recipient DropDown ComboBox does not exist in Disclosure Details as NBOs not added to Borrower Pair", null
			End If
		End If	
	End If
    
    '=========Select the Reason for Revised CD========  
     If    strFlagReason="Yes" Then           
         GUI_SwfTab_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfTab("swfname:=tcDisclosure"), "Reasons"
         GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfCheckBox("swfname:=chkReason1"), "ON"
     End If  


    '==============Click on OK button =================
    'GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK")
    SwfWindow("swfname:=MainForm").SwfWindow("swfname:=DisclosureDetailsDialog2015").SwfButton("swfname:=btnOK").Object.PerformClick
    GUI_Dialog_Encompass_OKX 2, "Sundays and legal holidays"
    
    BIZ_DisclosureTrackingTool_MulBorr_SetDisclosureDetail = arrBorrPairDates    
End Function




'This function is to used add NBO to Borrower Pair
Function BIZ_AddNBO_BorrowerPair(strNBORowID,strBorrPair)
    '========== Enter data in file Contacts ==========
    FRM_Logger_ReportStepEvent "Start create a new Non-Borrowing Owner","Started creating a new NBO in file contacts and Adding Non-Borrowing Owner to Borrower Pair", Null
    BIZ_FileContacts_NonBorrowerOwner strNBORowID
    
    '============ Go to Borrower Information - Vesting ========
    BIZ_Forms_Open "Borrower Information - Vesting"
    '========== select NBO and add to borrower pair=====
    Set objVestingInfo = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvVesting")
    Set objFileContactData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", strNBORowID)
       
    strName = FRM_DS_GetValue(objFileContactData, "NBOC0101.FirstName") + "  " + FRM_DS_GetValue(objFileContactData, "NBOC0103.LastName")   
    FRM_Logger_ReportInfoEvent "Adding Non Borrowing Pair: "&strName&" to Borrower Pair: "&strBorrPair, "Added Non Borrowing Pair: "&strName&" to Borrower Pair: "&strBorrPair, Null
    GUI_List_ClickRow objVestingInfo,Null, "Name", strName, True, False, False, "Double"
    Set objBorrowerVesting = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BorrowerVestingDetail")
    GUI_SwfComboBox_Select objBorrowerVesting.SwfComboBox("swfname:=cboBorPair"), strBorrPair
    GUI_SwfButton_Click objBorrowerVesting.SwfButton("swfname:=okBtn")
    Set objFileContactData=Nothing
End Function


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\DisclosureTrackingTool.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\DisclosureTrackingWeb.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''
'@defgroup: BIZ_Tools_DisclosureTrackingWeb BIZ_Tools_DisclosureTrackingWeb
'
' List of functions:
'
' @code
'	Function BIZ_DisclosureTrackingWeb_Login(strRowID)
'	Function BIZ_DisclosureTrackingWeb_Logout()
'   Function BIZ_DisclosureTrackingWeb_BorrowerReject(strLoanNumber, strRowID, intBorrowerIdx)
'   Function BIZ_DisclosureTrackingWeb_BorrowerAccept(strLoanNumber, strRowID, intBorrowerIdx)
'	Function BIZ_DisclosureTrackingWeb_BorrowerAcceptEConsent(strLoanNumber, strRowID, intBorrowerIdx)
'	Function BIZ_DisclosureTrackingWeb_BorrowerRejectEConsent(strLoanNumber, strRowID, intBorrowerIdx)
'	Function BIZ_DisclosureTrackingWeb_OpenLoanDetails(strRowID, strLoanNumber)
'  	Function BIZ_DisclosureTrackingWeb_LoanCenter_Login(strRowID)
'   Function BIZ_DisclosureTrackingWeb_LoanCenter_SelectPackage(strLoanNumber, strRowID)
'  	Function BIZ_DisclosureTrackingWeb_LoanCenter_ExpandDocs(strLoanNumber, strRowID)
'   Function BIZ_DisclosureTrackingWeb_LoanCenter_ClickeSign()
'   Function BIZ_DisclosureTrackingWeb_LoanCenter_AcceptAndeSign(strLoanNumber, strRowID)
'   Function BIZ_DisclosureTrackingWeb_LoanCenter_CoBorrower_ExpandDocs(strLoanNumber, strRowID)
'	Function BIZ_DisclosureTrackingWeb_AcceptEConsent()
'   Function BIZ_DisclosureTrackingWeb_LoanCenter_eSign(stBIZ_DisclosureTrackingWeb_LoanCenter_AcceptNSigneSignDocumentrRowID, intBorrowerIdx, flageSign)
'	Function BIZ_DisclosureTrackingWeb_AcceptEConsentWithBorrowerType(strRowID,strBorrowerOrCoBorrower)
'	Function BIZ_DisclosureTrackingWeb_LoanCenter_AcceptNSigneSignDocument(strLoanNumber, strRowID)
'	Function BIZ_DisclosureTrackingWeb_LoanCenter_UploadDocuments(strLoanNumber, strRowID)
'	Function BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendeDisclosure(strSelectPackageTypeRowID, strSelectDisclosureDocRowID, strSendDisclosureRowID, strLoanCenterRowID)
'	Function BIZ_DisclosureTrackingWeb_LoanCenter_LoginNToCenterAccepteSign(strLoanCenterLoginRowID, streDisclosureDocRowID)
'	Function BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendRequest(strLoanCenterRowID, strRequestRowID)
'	Function BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendeConsent(strLoanCenterRowID, bolBorrower, bolCoBorrower)
' @endcode
' @{
''''''''''''''''''''''''''''''''''''''''''

'This function is used to login to DisclosureTracking website
'@code
'    BIZ_DisclosureTrackingWeb_Login(strRowID)
'@endcode 
'param strRowID
	
Function BIZ_DisclosureTrackingWeb_Login(strRowID)
	
    GUI_Browser_CloseAll()
    Set objData = FRM_DS_GetGlobalTestData("Website", strRowID)
	GUI_Browser_OpenUrl objData.Item("URL"),"IE"
    GUI_Object_WaitTillExist Browser("creationtime:=0").Page("index:=0")
    
    Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")	
    GUI_Page_SetCurrent(objWebPage)
    
    If GUI_Object_IsExistX(objWebPage.Link("name:=>CHECK LOAN STATUS", "index:=0"), 5) Then
        GUI_Link_Click objWebPage.Link("name:=>CHECK LOAN STATUS", "index:=0")
    End If
	
	GUI_WebEdit_Set objWebPage.WebEdit("html id:=.*Email"), FRM_DS_GetValue(objData, "EmailAccount")
	GUI_WebEdit_Set objWebPage.WebEdit("html id:=.*Password"), FRM_DS_GetValue(objData, "Password")
	GUI_Link_Click objWebPage.Link("html id:=.*linkButton")
	
	Set objWebPage = Nothing
	Set objData    = Nothing
End Function



'This function is used to logout to DisclosureTracking website
'@code
'    BIZ_DisclosureTrackingWeb_Logout()
'@endcode 
	
Function BIZ_DisclosureTrackingWeb_Logout()
	If (GUI_Object_IsExistX(Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0"), 50)) Then 
		Set objBrowser = Browser("name:=.*Ellie Mae.*", "index:=0")
		Set objWebPage = objBrowser.Page("title:=.*Ellie Mae.*", "index:=0")
	ElseIf(GUI_Object_IsExist(Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0"))) Then 
		Set objBrowser = Browser("name:=.*Mortgage.*", "index:=0")
		Set objWebPage = objBrowser.Page("title:=.*Mortgage.*", "index:=0")
	End If
	
	GUI_Link_Click objWebPage.Link("name:=Log Out", "index:=0")
	wait g_TinyWaitSmall
	objBrowser.Close
	
End Function 



'This function is used to borrower reject eDisclosure
'@code
'    BIZ_DisclosureTrackingWeb_BorrowerReject
'@endcode
'@param strLoanNumber
'@param strRowID 
'@param intBorrowerIdx borrower index - 1 for Borrower, 2 for CoBorrower

Function BIZ_DisclosureTrackingWeb_BorrowerReject(strLoanNumber, strRowID, intBorrowerIdx)

	Set objWebPage  = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")	
    Set objData     = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
	strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")
	
	If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then
	
		'GUI_Link_Click objWebPage.Link("name:=Electronic Loan Document Request", "index:=0")
		If intBorrowerIdx = 1 Then
			'GUI_Link_Click objWebPage.Link("innertext:="&strBorrowerName, "index:=0")
			GUI_Link_Click objWebPage.Link("name:=eSign", "index:=0")
		ElseIf intBorrowerIdx = 2 Then
			strLink = FRM_DS_GetValue(objData, "CoBorrowerName")
			'GUI_Link_Click objWebPage.Link("innertext:="&strLink, "index:=0")
			GUI_Link_Click objWebPage.Link("name:=eSign", "index:=1")
		End If    
		GUI_Link_Click objWebPage.Link("name:=I Do Not Agree", "index:=0")
		If objWebPage.Link("name:=Done","index:=0").Exist(120) Then
		   GUI_Link_Click objWebPage.Link("name:=Done", "index:=0")	
		End If
		FRM_Logger_ReportInfoEvent "Disclosure Tracking Reject", "Borrower " & intBorrowerIdx & " " &strLink & "-I Do Not Agree", null 
		
	Else
		FRM_Logger_ReportFailEvent "Disclosure Tracking Reject", "Borrower " & intBorrowerIdx & " " &strLink & "-I Do Not Agree", null 
	End If
	Set objWebPage = Nothing	
	
End Function	



'This function is used to borrower accept eDisclosure
'@code
'    BIZ_DisclosureTrackingWeb_BorrowerAccept(strRowID, 1)
'@endcode
'@param strLoanNumber
'@param strRowID 
'@param intBorrowerIdx borrower index - 1 for Borrower, 2 for CoBorrower

Function BIZ_DisclosureTrackingWeb_BorrowerAccept(strLoanNumber, strRowID, intBorrowerIdx)
	
	Set objWebPage  = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")	
    Set objData     = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
    strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")

	If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then
	
		'GUI_Link_Click objWebPage.Link("name:=Electronic Loan Document Request", "index:=0")
		If intBorrowerIdx = 1 Then 
			'GUI_Link_Click objWebPage.Link("innertext:="&strBorrowerName, "index:=0")
			GUI_Link_Click objWebPage.Link("name:=eSign", "index:=0")
		Elseif intBorrowerIdx = 2 Then
			strLink = FRM_DS_GetValue(objData, "CoBorrowerName")
			'GUI_Link_Click objWebPage.Link("innertext:="&strLink, "index:=0")
			GUI_Link_Click objWebPage.Link("name:=eSign", "index:=1")
		End If     
		
		If objWebPage.Link("name:=I Agree", "index:=0").Exist(1) Then
			GUI_Link_Click objWebPage.Link("name:=I Agree", "index:=0") 
		End If
		
		If intBorrowerIdx = 1 Then    
			strAuthCode = FRM_DS_GetValue(objData, "BorrowerCode")
		Elseif intBorrowerIdx = 2 Then
			strAuthCode = FRM_DS_GetValue(objData, "CoBorrowerCode")
		End If
		If objWebPage.WebEdit("html id:=passwordTextBox").Exist(120) Then
			GUI_WebEdit_Set objWebPage.WebEdit("html id:=passwordTextBox"), strAuthCode
		End If	
		GUI_Link_Click objWebPage.Link("name:=Next >", "index:=0")
		GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Other Actions.*", "type:=button", "html tag:=BUTTON", "index:=0")
		wait 2
		GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Finish Later.*", "type:=button", "html tag:=BUTTON", "index:=0")
		'GUI_Link_Click objWebPage.Link("name:=Cancel", "index:=0")
		'GUI_WinButton_Click Dialog("text:=Message from webpage").Winbutton("text:=OK")
	
		FRM_Logger_ReportInfoEvent "Disclosure Tracking Accept", "Borrower " & intBorrowerIdx & " " &strLink & "-I Agree", null 
	Else
		FRM_Logger_ReportFailEvent "Disclosure Tracking Accept", "Borrower " & intBorrowerIdx & " " &strLink & "-I Agree", null 
	End If
	
	Set objWebPage = Nothing
	Set objData    = Nothing	
	
End Function



'This function is used to borrower accept eConsent
'@code
'    BIZ_DisclosureTrackingWeb_BorrowerAcceptEConsent("1601EM003743123444", strRowID, 1)
'@endcode
'@param strLoanNumber 
'@param strRowID 
'@param intBorrowerIdx borrower index - 1 for Borrower, 2 for CoBorrower

Function BIZ_DisclosureTrackingWeb_BorrowerAcceptEConsent(strLoanNumber, strRowID, intBorrowerIdx)
	
    
	Set objWebPage  = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")	
	Set objData     = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
    strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")    
	
	If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then
	
		GUI_Link_Click objWebPage.Link("name:=Electronic Signature Consent for Loan Documents", "index:=0")
		If intBorrowerIdx = 1 Then
			If objWebPage.Link("innertext:="&strBorrowerName, "index:=0").Exist(10) Then
				GUI_Link_Click objWebPage.Link("innertext:="&strBorrowerName, "index:=0")
			End If	
		Elseif intBorrowerIdx = 2 Then
			strLink = FRM_DS_GetValue(objData, "CoBorrowerName")
			If objWebPage.Link("innertext:="&strLink, "index:=0").Exist(10) Then
				GUI_Link_Click objWebPage.Link("innertext:="&strLink, "index:=0")
			End If	
		End If     
		GUI_Link_Click objWebPage.Link("name:=View", "index:=0")
		GUI_Link_Click objWebPage.Link("name:=I Agree", "index:=0")    
        If objWebPage.Link("name:=Done","index:=0").Exist(120) Then
			GUI_Link_Click objWebPage.Link("name:=Done","index:=0")
		End If
		FRM_Logger_ReportInfoEvent "Disclosure Tracking Accept E-Consent", "Borrower " & intBorrowerIdx & " " &strLink, null 
	Else
		FRM_Logger_ReportFailEvent "Disclosure Tracking Accept E-Consent", "Borrower " & intBorrowerIdx & " " &strLink, null 
	End If
	
	Set objWebPage = Nothing
	Set objData    = Nothing
	
End Function



'This function is used to borrower reject eConsent
'@code
'    BIZ_DisclosureTrackingWeb_BorrowerRejectEConsent("1601EM003743123444", strRowID, 1)
'@endcode
'@param strLoanNumber 
'@param strRowID 
'@param intBorrowerIdx borrower index - 1 for Borrower, 2 for CoBorrower
Function BIZ_DisclosureTrackingWeb_BorrowerRejectEConsent(strLoanNumber, strRowID, intBorrowerIdx)
	
    Dim objWebPage, objData
	Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")	
	Set objData    = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
    strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")    
	
	If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then
	
		GUI_Link_Click objWebPage.Link("name:=Electronic Signature Consent for Loan Documents", "index:=0")
		If intBorrowerIdx = 1 Then
			GUI_Link_Click objWebPage.Link("innertext:="&strBorrowerName, "index:=0")
		Elseif intBorrowerIdx = 2 Then
			strLink = FRM_DS_GetValue(objData, "CoBorrowerName")
			GUI_Link_Click objWebPage.Link("innertext:="&strLink, "index:=0")
		End If     
		GUI_Link_Click objWebPage.Link("name:=View", "index:=0")
		GUI_Link_Click objWebPage.Link("name:=I Do Not Agree", "index:=0")    
        If objWebPage.Link("name:=Done","index:=0").Exist(120) Then 
			GUI_Link_Click objWebPage.Link("name:=Done","index:=0")
		End If
		FRM_Logger_ReportInfoEvent "Disclosure Tracking Reject E-Consent", "Borrower " & intBorrowerIdx & " " &strLink, Null 
	Else
		FRM_Logger_ReportFailEvent "Disclosure Tracking Reject E-Consent", "Borrower " & intBorrowerIdx & " " &strLink, Null 
	End If
	
	Set objWebPage = Nothing
	Set objData    = Nothing
	
End Function


'Opens the loan detail page for the provided loan number.  It clicks on borrower names to open
'loan detail, and checks for loan number.  If it doesn't match the provided loan number, goes on to 
'the next link.   It searches at most 20 links, if not found, returns false; otherwise return true
'@param strBorrowerName 
'@param strLoanNumber 

Function BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber)
	
    
    If (GUI_Object_IsExistX(Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0"), 60)) Then 
		Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
		'Browser("name:=.*Ellie Mae.*", "index:=0").Refresh
	End If
	If (GUI_Object_IsExistX(Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0"), 60)) Then 
		Set objWebPage = Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0")
		'Browser("name:=.*Mortgage.*", "index:=0").Refresh
	End If
	boolFound = False	
		
	For i=0 To 19   'search for 20 times, if not found, fail it
		If objWebPage.WebElement("html id:=.*pageNameLabel", "innertext:=Check Loan Status", "index:=0").Exist(15) Then
			GUI_Link_Click objWebPage.WebElement("innertext:="&strBorrowerName, "index:="&i)
		End If
        GUI_Object_WaitTillExistX objWebPage.WbfGrid("html id:=ctl01_contentContainerHolder_tableLoanDetail"), 20
		strText = objWebPage.WbfGrid("html id:=ctl01_contentContainerHolder_tableLoanDetail").GetROProperty("innertext")
		'Loan Number:1601EM003515123444Loan Program:...
		strActualLoanNumber = Trim(Mid(strText, InStr(strText, ":")+1, InStr(strText, "Loan Program")-InStr(strText, ":")-1))
		
		If UTIL_String_IsNotEmpty(strLoanNumber) Then
			If strActualLoanNumber <> strLoanNumber Then
				GUI_Link_Click objWebPage.Link("html id:=ctl01_contentContainerHolder_linkCheckLoanStatus", "innertext:=Check Loan Status", "index:=0")
			Else
				boolFound = True
				FRM_Logger_ReportInfoEvent "Open Loan Detail", "Borrower " & strBorrowerName & ", Loan Number " &strActualLoanNumber, null 
				Exit For
			End If
		Else    		
			boolFound = True
			FRM_Logger_ReportInfoEvent "Open Loan Detail First Link", "Borrower " & strBorrowerName & ", Loan Number " &strActualLoanNumber, null 			
			Exit For
		End If 						
	Next		
	If Not boolFound Then
		FRM_Logger_ReportFailEvent "Open Loan Detail", "Borrower " & strBorrowerName & ", Loan Number " &strLoanNumber & " Not Found", null 
	End If
	BIZ_DisclosureTrackingWeb_OpenLoanDetails = boolFound
	
    Set objWebPage = Nothing
    
End Function



'This function is used to click 'Electronic Loan Document Request' link and borrower link to expand the docs in Loan Details page.
'@code
'    BIZ_DisclosureTrackingWeb_LoanCenter_ExpandDocs(strLoanNumber, strRowID)
'@endcode 
'@param strLoanNumber 
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingWeb_LoanCenter_ExpandDocs(strLoanNumber, strRowID)
	
    FRM_Logger_ReportInfoEvent "Expand Docs", "Expand docs using Row Id '"&strRowID&"' in the eFolder_Tab datasheet", null
    
    Dim objWebPage, objData, strBorrowerName
    Set objWebPage  = Browser("name:=.*", "index:=0").Page("title:=.*", "index:=0")	
    Set objData     = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
    strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")
    
    If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then       
	    If objWebPage.Link("innertext:="&strBorrowerName, "index:=0").exist(3) Then
			GUI_Link_Click objWebPage.Link("innertext:="&strBorrowerName, "index:=0")
		End If	
	End If
	
	Set objWebPage = Nothing
	Set objData    = Nothing
    
End Function



'This function is used to click 'Electronic Loan Document Request' link and Co-Borrower link to expand the docs in Loan Details page.
'@code
'    BIZ_DisclosureTrackingWeb_LoanCenter_CoBorrower_ExpandDocs(strLoanNumber, strRowID)
'@endcode 
'@param strLoanNumber 
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingWeb_LoanCenter_CoBorrower_ExpandDocs(strLoanNumber, strRowID)
	
    FRM_Logger_ReportInfoEvent "Expand Docs", "Expand docs using Row Id '"&strRowID&"' in the eFolder_Tab datasheet", null
    Dim objWebPage, objData, strBorrowerName, strCoBorrowerName
    Set objWebPage = Browser("name:=.*", "index:=0").Page("title:=.*", "index:=0")	
    Set objData    = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
    
    strBorrowerName   = FRM_DS_GetValue(objData, "BorrowerName")
    strCoBorrowerName = FRM_DS_GetValue(objData, "CoBorrowerName")
    
    If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then       
		GUI_Link_Click objWebPage.Link("innertext:="&strCoBorrowerName, "index:=0")
	End If
	
	Set objWebPage = Nothing
	Set objData    = Nothing
    
End Function


'This function is used to click on eSign button in Loan Details page.
'@code
'    BIZ_DisclosureTrackingWeb_LoanCenter_ClickeSign()
'@endcode 
	
Function BIZ_DisclosureTrackingWeb_LoanCenter_ClickeSign()
    
    Dim objWebPage
    Set objWebPage = Browser("name:=.*", "index:=0").Page("title:=.*", "index:=0")	           
    GUI_Link_Click objWebPage.Link("name:=eSign", "index:=0")	
	Set objWebPage = Nothing
    
End Function



'This function is used to Accept the consent and eSign the documents.
'@code
'    BIZ_DisclosureTrackingWeb_LoanCenter_AcceptAndeSign(strRowID)
'@endcode 
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingWeb_LoanCenter_AcceptAndeSign(strLoanNumber, strRowID)
	
    Dim objWebPage, objData, strBorrowerName, strAuthCode
    FRM_Logger_ReportInfoEvent "Accept consent and eSign docs", "eSign docs using Row Id '"&strRowID&"' in the eFolder_Tab datasheet", Null
    k=""
    Set objWebPage  = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
    Set objData     = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)    
    strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")
    
    If objWebPage.Link("name:=I Agree", "index:=0").Exist(3) Then
		GUI_Link_Click objWebPage.Link("name:=I Agree", "index:=0")
	End If	
	'GUI_Object_WaitTillExist objWebPage.WebEdit("html id:=passwordTextBox")  
    
    strAuthCode = FRM_DS_GetValue(objData, "BorrowerCode")
	If objWebPage.WebEdit("html id:=passwordTextBox").Exist(120) Then
		GUI_WebEdit_Set objWebPage.WebEdit("html id:=passwordTextBox"), strAuthCode
	End If	
	GUI_Link_Click objWebPage.Link("html id:=NextButton_linkButton")
	
	If Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("html id:=action-bar-btn-continue","innertext:=Next","index:=0", "html tag:=BUTTON").Exist(60) Then
	   BIZ_WebCenter_DocuSignSignDocument 
	Else
		If GUI_Object_IsExist(objWebPage.WebElement("innertext:=Loan Estimate", "index:=0")) Then
			BIZ_DisclosureTrackingWeb_LoanCenter_eSignNext 3
		Elseif GUI_Object_IsExist(objWebPage.WebElement("innertext:=Closing Disclosure", "index:=0")) Then
			BIZ_DisclosureTrackingWeb_LoanCenter_eSignNext 5
		Else
			'This part of logic added because of new changes in application. There is posibility that it will need to be edited for different scenarios.
			If Browser("name:=.*").Page("title:=.*").WebButton("html id:=action-bar-btn-continue","innertext:=Next","index:=0").Exist(5) Then
				Browser("name:=.*").Page("title:=.*").WebButton("html id:=action-bar-btn-continue","innertext:=Next","index:=0").Click
			End If
			If Browser("name:=.*").Page("title:=.*").Image("title:=Sign Here","index:=0").Exist(5) Then
				Browser("name:=.*").Page("title:=.*").Image("title:=Sign Here","index:=0").Click
			End If	
			If Browser("name:=.*").Page("title:=.*").WebButton("html id:=action-bar-bottom-btn-finish","innertext:=FINISH").Exist(5) Then	
				Browser("name:=.*").Page("title:=.*").WebButton("html id:=action-bar-bottom-btn-finish","innertext:=FINISH").Click    
			End If	
			k = "SkipTheseSteps"		
		End If	
		
		If k="" then
			GUI_Object_WaitTillExist objWebPage.Image("html id:=img0")
			GUI_Image_Click objWebPage.Image("html id:=img0")
			GUI_Link_Click objWebPage.Link("html id:=SignButton_linkButton")
			
			'Borrower - 'Back to Loan Detail' button's html id
			If GUI_Object_IsExistX(objWebPage.Link("html id:=CancelButton_linkButton"), 10) Then
				GUI_Link_Click objWebPage.Link("html id:=CancelButton_linkButton","index:=0")
			End If
			
			'CoBorrower - 'Back to Loan Detail' button's html id
			If GUI_Object_IsExistX(objWebPage.Link("html id:=CloseButton_linkButton"), 30) Then
				GUI_Link_Click objWebPage.Link("html id:=CloseButton_linkButton","index:=0")
			End If
		End If	
	End If	
	Set objWebPage = Nothing
	Set objData    = Nothing
    
End Function



'@code
'    BIZ_DisclosureTrackingWeb_LoanCenter_eSignNext()
'@endcode 
'param intNumPages

Private Function BIZ_DisclosureTrackingWeb_LoanCenter_eSignNext(intNumPages)

    Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
    
    For i=1 To intNumPages-1
	    GUI_Object_WaitTillExist objWebPage.WebElement("innertext:=Viewing "&i&" of "&intNumPages&" pages", "index:=0")
        GUI_Link_Click objWebPage.Link("html id:=NextButton_linkButton")
    Next
    
    Set objWebPage = Nothing
End Function 



'This function is used to Accept the econsent 
'@code
'    BIZ_DisclosureTrackingWeb_AcceptEConsent()
'@endcode 

Function BIZ_DisclosureTrackingWeb_AcceptEConsent()
	
	FRM_Logger_ReportInfoEvent "Accept e Consent", "Accepting econsent using Loan Center", null
	If (GUI_Object_IsExist(Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0"))) Then 
		Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
	End If
	If (GUI_Object_IsExist(Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0"))) Then 
		Set objWebPage = Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0")
	End If
	If GUI_Object_IsExist(objWebPage.WebElement("html id:=ctl01_contentContainerHolder_gvLoans_ctl02_lbBorrowerName"))   Then
		GUI_WebElement_Click objWebPage.WebElement("html id:=ctl01_contentContainerHolder_gvLoans_ctl02_lbBorrowerName")	
		'blnReviewRequest  = objWebPage.WebElement("html tag:=SPAN","innertext:=*. to review the consent to do business electronically.*").getroproperty("visible")
		'If(blnReviewRequest = False) Then 
		'	GUI_Link_Click objWebPage.Link("text:=Electronic Signature Consent for Loan Documents","html tag:=A")
		'End If
		GUI_Link_Click objWebPage.Link("name:=View")
		GUI_Link_Click objWebPage.Link("name:=I Agree")
		GUI_Link_Click objWebPage.Link("name:=Done")
		GUI_Link_Click objWebPage.Link("innertext:=Electronic Signature Consent for Loan Documents")
		GUI_Object_ValidateExists objWebPage.WebElement("innertext:=Consent Accepted", "html tag:=SPAN"), 3, "Consent Accepted"
	End If
        Set objWebPage = Nothing
End Function



'This function is used to eSign
'@code
'	BIZ_DisclosureTrackingWeb_LoanCenter_eSign(strRowID, intBorrowerIdx, flageSign)
'@endcode 
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param intBorrowerIdx - 1 for Borrower, 2 for CoBorrower
'@param flageSign True for eSign , False to only view
Function BIZ_DisclosureTrackingWeb_LoanCenter_eSign(strRowID, intBorrowerIdx, flageSign)
	FRM_Logger_ReportInfoEvent "eSign docs", "eSign docs using Row Id '"&strRowID&"' in the eFolder_Tab datasheet", null
    
	Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
	Set objData    = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
	If intBorrowerIdx = 1 Then
	    	strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")
		strAuthCode = FRM_DS_GetValue(objData, "BorrowerCode")
	Else
		strCoBorrowerName = FRM_DS_GetValue(objData, "CoBorrowerName")
		strAuthCode = FRM_DS_GetValue(objData, "CoBorrowerCode")
	End If
	
	GUI_WebElement_Click objWebPage.WebElement("html id:=ctl01_contentContainerHolder_gvLoans_ctl02_lbBorrowerName")	
	'GUI_Link_Click objWebPage.Link("name:=Electronic Loan Document Request", "index:=0")
	'If intBorrowerIdx = 1 Then
	'	GUI_Link_Click objWebPage.Link("name:=" & strBorrowerName, "index:=0")
	'Else
	'	GUI_Link_Click objWebPage.Link("name:=" & strCoBorrowerName, "index:=0")
	'End If
	GUI_Link_Click objWebPage.Link("name:=eSign", "index:=0")
	If GUI_Object_IsExistX(objWebPage.WebEdit("html id:=passwordTextBox"), 5) Then
		GUI_WebEdit_Set objWebPage.WebEdit("html id:=passwordTextBox"), strAuthCode
		GUI_Link_Click objWebPage.Link("html id:=NextButton_linkButton")
		wait 5
	End If	
	'If GUI_Object_IsExist(objWebPage.WebElement("innertext:=Loan Estimate", "index:=0")) Then
	'   	For i=1 To 2
        '		GUI_Object_WaitTillExist objWebPage.WebElement("innertext:=Viewing "&i&" of .*", "index:=0")
        '		GUI_Link_Click objWebPage.Link("html id:=NextButton_linkButton")
        '	Next
	'ElseIf GUI_Object_IsExist(objWebPage.WebElement("innertext:=Closing Disclosure", "index:=0")) Then
	'   	For i=1 To 4
        '		GUI_Object_WaitTillExist objWebPage.WebElement("innertext:=Viewing "&i&" of .*", "index:=0")
        '		GUI_Link_Click objWebPage.Link("html id:=NextButton_linkButton")
        '	Next 
	'End If
	'If Not GUI_Object_IsExist(objWebPage.Image("html id:=img0")) Then
	'	GUI_Link_Click objWebPage.Link("html id:=NextButton_linkButton")
	'End If
	'If flageSign Then
	'	GUI_Object_WaitTillExist objWebPage.Image("html id:=img0")
	'	GUI_Image_Click objWebPage.Image("html id:=img0")
	'	GUI_Link_Click objWebPage.Link("html id:=SignButton_linkButton")
	'	If GUI_Object_IsExistX(objWebPage.Link("html id:=CancelButton_linkButton","index:=0"), 10) Then
	'		GUI_Link_Click objWebPage.Link("html id:=CancelButton_linkButton","index:=0")
	'	Else
	'		GUI_Link_Click objWebPage.Link("html id:=CloseButton_linkButton","index:=0")
	'	End If
	'Else
	'	GUI_Link_Click objWebPage.Link("html id:=CancelButton_linkButton")
	'	GUI_WinButton_Click Browser("name:=.*Ellie Mae.*", "index:=0").Dialog("text:=Message from webpage").WinButton("text:=OK")
	'End If
	GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("html id:=action-bar-btn-continue")
	wait 2
	GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Start", "type:=button", "html tag:=BUTTON", "index:=0")
	wait 3
	If flageSign Then
		GUI_Object_WaitTillExist Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=SignRequired - Sign Here","type:=button", "html tag:=BUTTON", "index:=0")
		GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=SignRequired - Sign Here")
		IF GUI_Object_IsExistX(Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Adopt and Sign", "type:=button", "html tag:=BUTTON", "index:=0"), 5) Then
			GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Adopt and Sign", "type:=button", "html tag:=BUTTON", "index:=0")
		End IF
		wait 3
		GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("html id:=action-bar-btn-finish")
	Else
		GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Other Actions.*", "type:=button", "html tag:=BUTTON", "index:=0")
		wait 2
		GUI_WebButton_Click Browser("name:=DocuSign").Page("title:=DocuSign").WebButton("name:=Finish Later.*", "type:=button", "html tag:=BUTTON", "index:=0")
	End If
    
    Set objData    = Nothing
    Set objWebPage = Nothing
    
End Function



'This function is used to Accept the econsent 
'@code
'    BIZ_DisclosureTrackingWeb_AcceptEConsentWithBorrowerType(strRowID,strBorrowerOrCoBorrower))
'@endcode 
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
'@param strBorrowerOrCoBorrower select the record based on Borrower/CoBorrower

Function BIZ_DisclosureTrackingWeb_AcceptEConsentWithBorrowerType(strRowID,strBorrowerOrCoBorrower)
	If (GUI_Object_IsExist(Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0"))) Then 
		Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
	End If
	If(GUI_Object_IsExist(Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0"))) Then 
		Set objWebPage = Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0")
	End If
	
	If(InStr(strBorrowerOrCoBorrower, "Borrower") > 0) Then 
		Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetBorrower", strRowID)
		strBorrowerName = FRM_DS_GetValue(objData, "FirstName")&" "&FRM_DS_GetValue(objData, "LastName")
	Else
		Set objData = FRM_DS_GetTestData("Forms_BorrowerSummaryOrigination", "SetCoBorrower", strRowID)
		strBorrowerName = FRM_DS_GetValue(objData, "FirstName")&" "&FRM_DS_GetValue(objData, "LastName")
	End If
	strLoanNumber = BIZ_Loan_GetLoanNumber()
	If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then       
		GUI_Link_Click objWebPage.Link("name:=View")
		GUI_Link_Click objWebPage.Link("name:=I Agree")
		GUI_Link_Click objWebPage.Link("name:=Done")
		GUI_Link_Click objWebPage.Link("innertext:=Electronic Signature Consent for Loan Documents")
		GUI_Object_ValidateExists objWebPage.WebElement("innertext:=Consent Accepted", "html tag:=SPAN"), 3, "Consent Accepted"
	End If
End Function



'This function is used to Accept the consent and eSign the documents.
'@code
'    BIZ_DisclosureTrackingWeb_LoanCenter_AcceptNSigneSignDocument(strLoanNumber,strRowID)
'@endcode
'@param strLoanNumber - Loan number of the currently opened loan
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingWeb_LoanCenter_AcceptNSigneSignDocument(strLoanNumber, strRowID)
	
    FRM_Logger_ReportInfoEvent "Accept consent and eSign docs", "eSign docs using Row Id '"&strRowID&"' in the eFolder_Tab datasheet", null
	
	Dim objWebPage,objData,strBorrowerName,strAuthCode
   	k=""
    If(GUI_Object_IsExistX(Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0"), 60)) Then 
		Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
	ElseIf(GUI_Object_IsExist(Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0"))) Then 
		Set objWebPage = Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0")
	End If
    Set objData    = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
	
    strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")
    If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then
    	GUI_Link_Click objWebPage.Link("name:=eSign", "index:=0")
  	   	If objWebPage.Link("name:=I Agree", "index:=0").Exist(30) then
			GUI_Link_Click objWebPage.Link("name:=I Agree", "index:=0")
		End If
	
		GUI_Object_WaitTillExist objWebPage.WebEdit("html id:=passwordTextBox")
	    	strAuthCode = FRM_DS_GetValue(objData, "BorrowerCode")
		
		If objWebPage.WebEdit("html id:=passwordTextBox").Exist(120) Then
			GUI_WebEdit_Set objWebPage.WebEdit("html id:=passwordTextBox"), strAuthCode
		End If	
		If objWebPage.Link("html id:=NextButton_linkButton").Exist(30) Then 
			GUI_Link_Click objWebPage.Link("html id:=NextButton_linkButton")
			wait g_TinyWaitSmall
			Set objDocSign = Browser("name:=DocuSign").Page("title:=DocuSign")
			objDocSign.WebButton("name:=Next","index:=0").Click
			wait g_TinyWaitSmall
			objDocSign.WebButton("name:=Start","index:=0").Click
			wait g_TinyWaitSmall
			If GUI_Object_IsExistX(objDocSign.WebButton("name:=Adopt and Sign","type:=button","html tag:=BUTTON"), 5) Then 
				objDocSign.WebButton("name:=Adopt and Sign","type:=button","html tag:=BUTTON").Click
				wait g_TinyWaitSmall
			End If
			For intIndex = 0 to 100 Step 1
				If GUI_Object_IsExistX(objDocSign.WebRadioGroup("html tag:=INPUT","name:=Check Here_.*","index:="&intIndex), 5) Then 
					objDocSign.WebRadioGroup("html tag:=INPUT","name:=Check Here_.*","index:="&intIndex).Click
					If GUI_Object_IsExistX(objDocSign.WebButton("name:=SignRequired - Sign Here","index:="&intIndex), 5) Then
						objDocSign.WebButton("name:=SignRequired - Sign Here","index:="&intIndex).Click
						wait g_TinyWaitSmall
					End If
					If GUI_Object_IsExistX(objDocSign.WebButton("name:=Next","index:="&intIndex+1,"html tag:=BUTTON","type:=button"),5) Then
						objDocSign.WebButton("name:=Next","index:="&intIndex+1,"html tag:=BUTTON","type:=button").Click
					End If
				Else
					Exit For
				End If
			Next
			If GUI_Object_IsExistX(objDocSign.WebButton("name:=SignRequired - Sign Here","index:=1"), 5)Then
				objDocSign.WebButton("name:=SignRequired - Sign Here","index:=1").Click
				wait g_TinyWaitSmall
			End If
			If(GUI_Object_IsExistX(objDocSign.WebButton("name:=SignRequired - Sign Here","index:=1"), 5))Then
				objDocSign.WebButton("name:=SignRequired - Sign Here","index:=1").Click
			End If
			wait g_TinyWaitSmall
			If(GUI_Object_IsExistX(objDocSign.WebButton("name:=SignRequired - Sign Here","index:=1"), 5))Then
				objDocSign.WebButton("name:=SignRequired - Sign Here","index:=1").Click
			End If
			If(GUI_Object_IsExistX(objDocSign.WebButton("name:=SignRequired - Sign Here","index:=2"), 5))Then
				objDocSign.WebButton("name:=SignRequired - Sign Here","index:=2").Click
			End If
			If(GUI_Object_IsExistX(objDocSign.WebButton("name:=SignRequired - Sign Here","index:=3"), 5))Then
				objDocSign.WebButton("name:=SignRequired - Sign Here","index:=3").Click
			End If
			If(GUI_Object_IsExistX(objDocSign.WebButton("name:=SignRequired - Sign Here","index:=4"), 5))Then
				objDocSign.WebButton("name:=SignRequired - Sign Here","index:=4").Click
			End If
			If GUI_Object_IsExistX(objDocSign.WebButton("name:=Adopt and Sign","type:=button","html tag:=BUTTON"), 15) Then 
				objDocSign.WebButton("name:=Adopt and Sign","type:=button","html tag:=BUTTON").Click
				wait g_TinyWaitSmall
			End If
			While GUI_Object_IsExist(objDocSign.WebButton("name:=SignRequired - Sign Here","index:=0"))
				objDocSign.WebButton("name:=SignRequired - Sign Here","index:=0").Highlight
				objDocSign.WebButton("name:=SignRequired - Sign Here","index:=0").Click
				wait g_TinyWaitSmall
			Wend
		
			objDocSign.WebButton("name:=Finish","index:=0").Click

			End If	

			Wait g_LongWaitLarge 
		
			strPageText = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0").GetROProperty("innertext")
			If(InStr(strPageText, "eSigned") > 0) Then
				FRM_Logger_ReportPassEvent "click on required -sign here in all places and click finish", "In the loan center page it is showed as e-signed.", Null
			ElseIf (InStr(strPageText, "Consent Accepted") > 0) Then
				FRM_Logger_ReportPassEvent "click on required -sign here in all places and click finish", "In the loan center page it is showed as Consent Accepted.", Null
			Else
				FRM_Logger_ReportFailEvent "click on required -sign here in all places and click finish", "In the loan center page it is not showed as e-signed/Consent Accepted.", Null
			End If
		Else
				FRM_Logger_ReportFailEvent "click on e-sign", "Authorisation Screen and Document Sign window is not displayed", Null
		End If
	Set objWebPage  = Nothing
	Set objData     = Nothing
End Function


'This function is used to Accept the consent and eSign the documents.
'@code
'    BIZ_DisclosureTrackingWeb_LoanCenter_AcceptNSigneSignDocument(strLoanNumber,strRowID)
'@endcode
'@param strLoanNumber - Loan number of the currently opened loan
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_DisclosureTrackingWeb_LoanCenter_UploadDocuments(strLoanNumber, strRowID)
	
    FRM_Logger_ReportInfoEvent "Upload documents", "Upload docs using Row Id '"&strRowID&"' in the eFolder_Tab datasheet", null
	
	Dim objWebPage,objData,strBorrowerName,strAuthCode
    If(GUI_Object_IsExistX(Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0"), 60)) Then 
		Set objWebPage = Browser("name:=.*Ellie Mae.*", "index:=0").Page("title:=.*Ellie Mae.*", "index:=0")
	ElseIf(GUI_Object_IsExist(Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0"))) Then 
		Set objWebPage = Browser("name:=.*Mortgage.*", "index:=0").Page("title:=.*Mortgage.*", "index:=0")
	End If
    Set objData    = FRM_DS_GetTestData("eFolder_Tab", "SendeDisclosures", strRowID)
    
   	strBorrowerName = FRM_DS_GetValue(objData, "BorrowerName")
	strFileName = FRM_DS_GetValue(objData, "FileName")
	
    If BIZ_DisclosureTrackingWeb_OpenLoanDetails(strBorrowerName, strLoanNumber) Then
    	objWebPage.Link("text:=Upload","html tag:=A","index:=0").Click
		wait g_tinywaitsmall
		Browser("name:=.*Ellie Mae.*", "index:=1").Page("index:=0").WebFile("name:=ctl.*","html tag:=INPUT","type:=file").Set FRM_RT_DataDirPath() & strFileName
		wait g_tinywaitsmall
		Browser("name:=.*Ellie Mae.*", "index:=1").Page("index:=0").Link("text:=Upload File","html tag:=A").click
		wait g_tinywaitsmall
		strTableText = Browser("name:=.*Ellie Mae.*", "index:=0").Page("index:=0").WebTable("index:=0","html tag:=TABLE").GetROProperty("innertext")
		If(InStr(strTableText, "Uploaded") > 0) Then
			FRM_Logger_ReportPassEvent "Upload documents", "In loan center 'uploaded' should be seen with a checkmark with a lock confirmation",Null
		End If
	End If	
	Set objWebPage  = Nothing
	Set objData     = Nothing
End Function


'This function is used to Accept the consent and eSign the documents.
'@code
'    BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendeDisclosure(strSelectPackageTypeRowID, strSelectDisclosureDocRowID, strSendDisclosureRowID, strLoanCenterRowID)
'@endcode
'@param strLoanCenterLoginRowID - Loan Center Login ID 
'@param streDisclosureDocRowID - Disclosure Login Row ID
Function BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendeDisclosure(strSelectPackageTypeRowID, strSelectDisclosureDocRowID, strSendDisclosureRowID, strLoanCenterRowID)
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").Highlight
	BIZ_Forms_Open "Borrower Summary - Origination"
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    strFirstName = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_36"),"value")  
	strLastName = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_37"), "value")
	strBorrowerName  = strFirstName & " " &   strLastName
	FRM_DS_ChangeExcelReadonlyToReadandWrite "eFolder_Tab"
	FRM_DS_SetCellData "eFolder_Tab", "SendeDisclosures", strLoanCenterRowID, "BorrowerName", strBorrowerName
	FRM_DS_ChangeExcelReadandWriteToReadonly  "eFolder_Tab"
	'Open the eFolder Screen
	BIZ_Nav_eFoler_Open()
	Wait g_TinyWaitLarge
	GUI_Object_ValidateExists SwfWindow("swfname:=eFolderDialog"), 5, "E Folder screen is opened"
	'Send eDisclosure information
	BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendeDisclosure  = BIZ_Documents_SendeDisclosure(strSelectPackageTypeRowID, strSelectDisclosureDocRowID, strSendDisclosureRowID)
	GUI_Object_WaitTillExistX SwfWindow("swfname:=eFolderDialog").SwfButton("swfname:=btnClose"), 360
	Wait g_TinyWaitLarge
End Function 	



'This function is used to Accept the consent and eSign the documents.
'@code
'    BIZ_DisclosureTrackingWeb_LoanCenter_LoginNToCenterAccepteSign(strLoanCenterLoginRowID, streDisclosureDocRowID)
'@endcode
'@param strLoanCenterLoginRowID - Loan Center Login ID 
'@param streDisclosureDocRowID - Disclosure Login Row ID
Function BIZ_DisclosureTrackingWeb_LoanCenter_LoginNToCenterAccepteSign(strLoanCenterLoginRowID, streDisclosureDocRowID)
	GUI_Browser_CloseAllBrowsers g_DefaultBrowser
	BIZ_LoanCenter_LogIn strLoanCenterLoginRowID
	strLoanNumber = BIZ_Loan_GetLoanNumber()
	BIZ_DisclosureTrackingWeb_LoanCenter_AcceptNSigneSignDocument strLoanNumber, streDisclosureDocRowID
	BIZ_WebCenter_LogOut()
End Function 


'This function is used to Accept the consent and eSign the documents.
'@code
'    BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendRequest(strLoanCenterRowID, strRequestRowID)
'@endcode
'@param strLoanCenterRowID - Loan Center Login ID 
Function BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendRequest(strLoanCenterRowID, strRequestRowID)
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").Highlight
	BIZ_Forms_Open "Borrower Summary - Origination"
    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    strFirstName = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_36"),"value")  
	strLastName = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_37"), "value")
	strBorrowerName  = strFirstName & " " &   strLastName
	FRM_DS_ChangeExcelReadonlyToReadandWrite "eFolder_Tab"
	FRM_DS_SetCellData "eFolder_Tab", "SendeDisclosures", strLoanCenterRowID, "BorrowerName", strBorrowerName
	FRM_DS_ChangeExcelReadandWriteToReadonly  "eFolder_Tab"
	'Clicks on eFolder
	BIZ_Nav_eFoler_Open()
	BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendRequest  = BIZ_Documents_SendRequest(strRequestRowID)
End Function	


'This function is used to Accept the consent and eSign the documents.
'@code
'    BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendeConsent(strLoanCenterRowID, bolBorrower, bolCoBorrower)
'@endcode
'@param strLoanCenterRowID - Loan Center Login ID 
Function BIZ_DisclosureTrackingWeb_SaveE2ELoanNumberAndSendeConsent(strLoanCenterRowID, bolBorrower, bolCoBorrower)
	SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").Highlight
	BIZ_Forms_Open "Borrower Summary - Origination"
	
	Wait g_TinyWaitMedium

    Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    strFirstName = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_36"),"value")  
	strLastName = GUI_Object_GetPropertyValue(objSummaryPage.WebEdit("html id:=l_37"), "value")
	strBorrowerName  = strFirstName & " " &   strLastName
	FRM_DS_ChangeExcelReadonlyToReadandWrite "eFolder_Tab"
	FRM_DS_SetCellData "eFolder_Tab", "SendeDisclosures", strLoanCenterRowID, "BorrowerName", strBorrowerName
	FRM_DS_ChangeExcelReadandWriteToReadonly  "eFolder_Tab"
	'Clicks on eFolder
	BIZ_Nav_eFoler_Open()
	BIZ_Documents_SendeConsent bolBorrower, bolCoBorrower
End Function	

'@}	
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\DisclosureTrackingWeb.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\FeeVariance.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup: BIZ_Tools_FeeVariance BIZ_Tools_FeeVariance
'
' List of functions here
'@code
'	Function BIZ_FeeVariance_VerifyItemsThatCannotDecreaseSection(strRowId)
'	Function BIZ_FeeVariance_VerifyChargesThatCannotIncreaseSection(strRowId)
'	Function BIZ_FeeVariance_VerifyChargesCannotIncreaseTenPercentSection(strRowId)
'	Function BIZ_FeeVariance_VerifyChargesThatCanChangeSection(strRowId)
'	Function BIZ_FeeVariance_VerifyTotalGoodFaithAmountSection(strRowId)
'	Function BIZ_FeeVariance_VerifyToleranceCure(strRowId)
'@endcode
'
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''



'This function is used for validating "Total Good Faith Amount" Section in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_VerifyTotalGoodFaithAmountSection(strRowId)
'@endcode
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_VerifyTotalGoodFaithAmountSection(strRowId)
	
	FRM_Logger_ReportInfoEvent "Fee Variance - Total Good Faith Amount","Verify Total Good Faith Amount section using RowId "&strRowId,Null
	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	BIZ_Common_FeeVariance_VerifyTotalGoodFaithAmountSection objMainView,strRowId
	
	Set objMainView=Nothing
End Function

'This function is used for validating "Total Good Faith Amount" Section in Fee Variance Worksheet
'@code
'	BIZ_Common_FeeVariance_VerifyTotalGoodFaithAmountSection(strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_Common_FeeVariance_VerifyTotalGoodFaithAmountSection(objMainView,strRowId)

	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyTotalGoodFaithAmt", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX325")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox297"),FRM_DS_GetValue(objData,"FVX325"),"FV.X325"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX326")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox298"),FRM_DS_GetValue(objData,"FVX326"),"FV.X326"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX327")) And FRM_DS_GetValue(objData,"FVX327")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox299"),"","FV.X327"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX327")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox299"),FRM_DS_GetValue(objData,"FVX327"),"FV.X327"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX328")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox300"),FRM_DS_GetValue(objData,"FVX328"),"FV.X328"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX329")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox301"),FRM_DS_GetValue(objData,"FVX329"),"FV.X329"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX330")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox302"),FRM_DS_GetValue(objData,"FVX330"),"FV.X330"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX331")) And FRM_DS_GetValue(objData,"FVX331")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox303"),"","FV.X331"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX331")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox303"),FRM_DS_GetValue(objData,"FVX331"),"FV.X331"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX332")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox304"),FRM_DS_GetValue(objData,"FVX332"),"FV.X332"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX333")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox321"),FRM_DS_GetValue(objData,"FVX333"),"FV.X333"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX334")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox322"),FRM_DS_GetValue(objData,"FVX334"),"FV.X334"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX335")) And FRM_DS_GetValue(objData,"FVX335")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox323"),"","FV.X335"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX335")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox323"),FRM_DS_GetValue(objData,"FVX335"),"FV.X335"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX336")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox324"),FRM_DS_GetValue(objData,"FVX336"),"FV.X336"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX337")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox325"),FRM_DS_GetValue(objData,"FVX337"),"FV.X337"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX338")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox326"),FRM_DS_GetValue(objData,"FVX338"),"FV.X338"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX339")) And FRM_DS_GetValue(objData,"FVX339")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox327"),"","FV.X339"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX339")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox327"),FRM_DS_GetValue(objData,"FVX339"),"FV.X339"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX340")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox331"),FRM_DS_GetValue(objData,"FVX340"),"FV.X340"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX341")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox332"),FRM_DS_GetValue(objData,"FVX341"),"FV.X341"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX342")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox333"),FRM_DS_GetValue(objData,"FVX342"),"FV.X342"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX343")) And FRM_DS_GetValue(objData,"FVX343")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox334"),"","FV.X343"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX343")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox334"),FRM_DS_GetValue(objData,"FVX343"),"FV.X343"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX344")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox335"),FRM_DS_GetValue(objData,"FVX344"),"FV.FVX344"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX345")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox336"),FRM_DS_GetValue(objData,"FVX345"),"FV.X345"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX346")) And FRM_DS_GetValue(objData,"FVX346")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox337"),"","FV.X346"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX346")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox337"),FRM_DS_GetValue(objData,"FVX346"),"FV.X346"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX347")) And FRM_DS_GetValue(objData,"FVX347")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox338"),"","FV.X347"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX347")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox338"),FRM_DS_GetValue(objData,"FVX347"),"FV.X347"
	End If
	
End Function

'This function is used for validating "Tolerance Cure" Section in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_VerifyToleranceCure(strRowId)
'@endcode
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_VerifyToleranceCure(strRowId)
	
	FRM_Logger_ReportInfoEvent "Fee Variance - Tolerance Cure","Verify Tolerance Cure section using RowId "&strRowId,Null
	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	
	BIZ_Common_FeeVariance_VerifyToleranceCure objMainView,strRowId
	
	Set objMainView=Nothing
End Function

'This function is used for validating "Tolerance Cure" Section in Fee Variance Worksheet
'@code
'	BIZ_Common_FeeVariance_VerifyToleranceCure(objMainView,strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_Common_FeeVariance_VerifyToleranceCure(objMainView,strRowId)
	
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyToleranceCure", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX348_ReqCureAmt")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=edit4"),FRM_DS_GetValue(objData,"FVX348_ReqCureAmt"),"FV.X348"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX366_AppliedCureAmt")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=edit1"),FRM_DS_GetValue(objData,"FVX366_AppliedCureAmt"),"FV.X366"
	End If
End Function



'This function is used for validating "Items that Cannot Decrease" Section in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_ItemsThatCannotDecreaseSection(objMainView,strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_ItemsThatCannotDecreaseSection(strRowId)

	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Decrease","Validate Items that Cannot Decrease section in Fee Variance Worksheet",Null
	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyItemsThatCannotDecrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX8")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox8"),"value"),FRM_DS_GetValue(objData,"FVX8"), "Form 1003 Sec. L Lender Credits","Validating Intial LE of Form 1003 Sec. L Lender Credits"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX9")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox9"),"value"),FRM_DS_GetValue(objData,"FVX9"), "Form 1003 Sec. L Lender Credits","Validating LE Baseline of Form 1003 Sec. L Lender Credits"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX10")) And FRM_DS_GetValue(objData,"FVX10")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox10"),"value"),"", "Form 1003 Sec. L Lender Credits","Validating CD Baseline of Form 1003 Sec. L Lender Credits"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX10")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox10"),"value"),FRM_DS_GetValue(objData,"FVX10"), "Form 1003 Sec. L Lender Credits","Validating CD Baseline of Form 1003 Sec. L Lender Credits"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX11")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox11"),"value"),FRM_DS_GetValue(objData,"FVX11"), "Form 1003 Sec. L Lender Credits","Validating Itemization - Current of Form 1003 Sec. L Lender Credits"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX4")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox4"),"value"),FRM_DS_GetValue(objData,"FVX4"), "Total Credit for Rate Chosen","Validating Intial LE of Total Credit for Rate Chosen"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX5")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox5"),"value"),FRM_DS_GetValue(objData,"FVX5"), "Total Credit for Rate Chosen","Validating LE Baseline of Total Credit for Rate Chosen"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX6")) And FRM_DS_GetValue(objData,"FVX6")="Null"  Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox6"),"value"),"", "Total Credit for Rate Chosen","Validating CD Baseline of Total Credit for Rate Chosen"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX6")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox6"),"value"),FRM_DS_GetValue(objData,"FVX6"), "Total Credit for Rate Chosen","Validating CD Baseline of Total Credit for Rate Chosen"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX7")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox7"),"value"),FRM_DS_GetValue(objData,"FVX7"), "Total Credit for Rate Chosen","Validating Current Itemization of Total Credit for Rate Chosen"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX12")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox12"),"value"),FRM_DS_GetValue(objData,"FVX12"), "Lender Paid Closing Costs","Validating Initial LE of Lender Paid Closing Costs"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX13")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox13"),"value"),FRM_DS_GetValue(objData,"FVX13"), "Lender Paid Closing Costs","Validating LE Baseline of Lender Paid Closing Costs"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX14")) And FRM_DS_GetValue(objData,"FVX14")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox14"),"value"),"", "Lender Paid Closing Costs","Validating CD Baseline of Lender Paid Closing Costs"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX14")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox14"),"value"),FRM_DS_GetValue(objData,"FVX14"), "Lender Paid Closing Costs","Validating CD Baseline of Lender Paid Closing Costs"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX15")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox15"),"value"),FRM_DS_GetValue(objData,"FVX15"), "Lender Paid Closing Costs","Validating Current Itemization of Lender Paid Closing Costs"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX388")) And FRM_DS_GetValue(objData,"FVX388")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox296"),"value"),"", "Tolerance Cure","Validating CD Baseline of Tolerance Cure"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX388")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox296"),"value"),FRM_DS_GetValue(objData,"FVX388"), "Tolerance Cure","Validating CD Baseline of Tolerance Cure"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX366")) And FRM_DS_GetValue(objData,"FVX366")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox295"),"value"),"", "Tolerance Cure","Validating Current Itemization of Tolerance Cure"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX366")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox295"),"value"),FRM_DS_GetValue(objData,"FVX366"), "Tolerance Cure","Validating Current Itemization of Tolerance Cure"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX16")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox16"),"value"),FRM_DS_GetValue(objData,"FVX16"), "Total Lender Credit","Validating Initial LE of Total Lender Credit"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX17")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox17"),"value"),FRM_DS_GetValue(objData,"FVX17"), "Total Lender Credit","Validating LE Baseline of Total Lender Credit"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX18")) And FRM_DS_GetValue(objData,"FVX18")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox18"),"value"),"", "Total Lender Credit","Validating CE Baseline of Total Lender Credit"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX18")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox18"),"value"),FRM_DS_GetValue(objData,"FVX18"), "Total Lender Credit","Validating CD Baseline of Total Lender Credit"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX19")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox19"),"value"),FRM_DS_GetValue(objData,"FVX19"), "Total Lender Credit","Validating Current Itemization of Total Lender Credit"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX20")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox20"),"value"),FRM_DS_GetValue(objData,"FVX20"), "Section J Credit (Disclosed)","Validating Initial LE of Section J Credit (Disclosed)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX21")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox21"),"value"),FRM_DS_GetValue(objData,"FVX21"), "Section J Credit (Disclosed)","Validating LE Baseline of Section J Credit (Disclosed)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX22")) And FRM_DS_GetValue(objData,"FVX22")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox22"),"value"),"", "Section J Credit (Disclosed)","Validating LE Baseline of Section J Credit (Disclosed)"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX22")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox22"),"value"),FRM_DS_GetValue(objData,"FVX22"), "Section J Credit (Disclosed)","Validating CD Baseline of Section J Credit (Disclosed)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX24")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox24"),"value"),FRM_DS_GetValue(objData,"FVX24"), "Variance between LE and Itemization","Validating Variance between LE and Itemization"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX25")) And FRM_DS_GetValue(objData,"FVX25")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox25"),"value"),"", "Difference between LE and CD (Disclosed)","Validating Difference between LE and CD (Disclosed)"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX25")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox25"),"value"),FRM_DS_GetValue(objData,"FVX25"), "Difference between LE and CD (Disclosed)","Validating Difference between LE and CD (Disclosed)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX26")) And FRM_DS_GetValue(objData,"FVX26")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox26"),"value"),"", "Variance between CD and Itemization","Validating Variance between CD and Itemization"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX26")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox26"),"value"),FRM_DS_GetValue(objData,"FVX26"), "Variance between CD and Itemization","Validating Variance between CD and Itemization"
	End If
	
End Function




'This function is used for validating "Charges that Cannot Increase" Section in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_ChargesThatCannotIncreaseSection(objMainView,strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_ChargesThatCannotIncreaseSection(strRowId)
	
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase","Validate Items that Cannot Increase section in Fee Variance Worksheet",Null
	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesThatCannotIncrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX30")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox30"),"value"),FRM_DS_GetValue(objData,"FVX30"), "Origination Charges","Validating Initial LE of Origination Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX31")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox31"),"value"),FRM_DS_GetValue(objData,"FVX31"), "Origination Charges","Validating LE Baseline of Origination Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX32")) And FRM_DS_GetValue(objData,"FVX32")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox32"),"value"),"", "Origination Charges","Validating CD Baseline of Origination Charges"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX32")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox32"),"value"),FRM_DS_GetValue(objData,"FVX32"), "Origination Charges","Validating CD Baseline of Origination Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX33")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox33"),"value"),FRM_DS_GetValue(objData,"FVX33"), "Origination Charges","Validating Current Itemization of Origination Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX34")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox34"),"value"),FRM_DS_GetValue(objData,"FVX34"), "Services Cannot Shop For","Validating Initial LE of Services Cannot Shop For"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX35")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox35"),"value"),FRM_DS_GetValue(objData,"FVX35"), "Services Cannot Shop For","Validating Baseline LE of Services Cannot Shop For"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX36")) And FRM_DS_GetValue(objData,"FVX36")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox36"),"value"),"", "Services Cannot Shop For","Validating Baseline CD of Services Cannot Shop For"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX36")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox36"),"value"),FRM_DS_GetValue(objData,"FVX36"), "Services Cannot Shop For","Validating Baseline CD of Services Cannot Shop For"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX37")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox37"),"value"),FRM_DS_GetValue(objData,"FVX37"), "Services Cannot Shop For","Validating Current Itemization of Services Cannot Shop For"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX38")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox38"),"value"),FRM_DS_GetValue(objData,"FVX38"), "Services Can Shop For (Paid to L/B/I/A)","Validating Initial LE of Services Can Shop For (Paid to L/B/I/A)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX39")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox39"),"value"),FRM_DS_GetValue(objData,"FVX39"), "Services Can Shop For (Paid to L/B/I/A)","Validating LE Baseline of Services Can Shop For (Paid to L/B/I/A)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX40")) And FRM_DS_GetValue(objData,"FVX40")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox40"),"value"),"", "Services Can Shop For (Paid to L/B/I/A)","Validating CD Baseline of Services Can Shop For (Paid to L/B/I/A)"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX40")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox40"),"value"),FRM_DS_GetValue(objData,"FVX40"), "Services Can Shop For (Paid to L/B/I/A)","Validating CD Baseline of Services Can Shop For (Paid to L/B/I/A)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX41")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox41"),"value"),FRM_DS_GetValue(objData,"FVX41"), "Services Can Shop For (Paid to L/B/I/A)","Validating Current Itemization of Services Can Shop For (Paid to L/B/I/A)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX42")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox42"),"value"),FRM_DS_GetValue(objData,"FVX42"), "Transfer Taxes","Validating Initial LE of Transfer Taxes"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX43")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox43"),"value"),FRM_DS_GetValue(objData,"FVX43"), "Transfer Taxes","Validating LE Baseline of Transfer Taxes"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX44")) And FRM_DS_GetValue(objData,"FVX44")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox44"),"value"),"", "Transfer Taxes","Validating CD Baseline of Transfer Taxes"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX44")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox44"),"value"),FRM_DS_GetValue(objData,"FVX44"), "Transfer Taxes","Validating CD Baseline of Transfer Taxes"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX45")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox45"),"value"),FRM_DS_GetValue(objData,"FVX45"), "Transfer Taxes","Validating Current Itemization of Transfer Taxes"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX370")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox23"),"value"),FRM_DS_GetValue(objData,"FVX370"), "Prepaid Property Taxes/Other","Validating Initial LE of Prepaid Property Taxes/Other"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX371")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox192"),"value"),FRM_DS_GetValue(objData,"FVX371"), "Prepaid Property Taxes/Other","Validating LE Baseline of Prepaid Property Taxes/Other"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX372")) And FRM_DS_GetValue(objData,"FVX372")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox193"),"value"),"", "Prepaid Property Taxes/Other","Validating CD Baseline of Prepaid Property Taxes/Other"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX372")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox193"),"value"),FRM_DS_GetValue(objData,"FVX372"), "Prepaid Property Taxes/Other","Validating CD Baseline of Prepaid Property Taxes/Other"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX373")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox194"),"value"),FRM_DS_GetValue(objData,"FVX373"), "Prepaid Property Taxes/Other","Validating Current Itemization of Prepaid Property Taxes/Other"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX46_GFBaseline")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox46"),"value"),FRM_DS_GetValue(objData,"FVX46_GFBaseline"), "Good Faith Baseline","Validating Initial LE of Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX377")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox47"),"value"),FRM_DS_GetValue(objData,"FVX377"), "Good Faith Baseline","Validating LE Baseline of Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX378")) And FRM_DS_GetValue(objData,"FVX378")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox48"),"value"),"", "Good Faith Baseline","Validating CD Baseline of Good Faith Baseline"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX378")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox48"),"value"),FRM_DS_GetValue(objData,"FVX378"), "Good Faith Baseline","Validating CD Baseline of Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX49_GFBaseline")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox49"),"value"),FRM_DS_GetValue(objData,"FVX49_GFBaseline"), "Good Faith Baseline","Validating Current Itemization of Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX379")) And FRM_DS_GetValue(objData,"FVX379")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=EditTextBox296"),"value"),"", "Baseline Adjustment","Validating LE Baseline of Baseline Adjustment"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX379")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=EditTextBox296"),"value"),FRM_DS_GetValue(objData,"FVX379"), "Baseline Adjustment","Validating LE Baseline of Baseline Adjustment"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX380")) And FRM_DS_GetValue(objData,"FVX380")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=EditTextBox296"),"value"),"", "Baseline Adjustment","Validating CD Baseline of Baseline Adjustment"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX380")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=EditTextBox296"),"value"),FRM_DS_GetValue(objData,"FVX380"), "Baseline Adjustment","Validating CD Baseline of Baseline Adjustment"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX46_NetGFBaseline")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox341"),"value"),FRM_DS_GetValue(objData,"FVX46_NetGFBaseline"), "Net Good Faith Baseline","Validating Initial LE of Net Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX47")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox365"),"value"),FRM_DS_GetValue(objData,"FVX47"), "Net Good Faith Baseline","Validating LE Baseline of Net Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX48")) And FRM_DS_GetValue(objData,"FVX48")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox357"),"value"),"", "Net Good Faith Baseline","Validating CD Baseline of Net Good Faith Baseline"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX48")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox357"),"value"),FRM_DS_GetValue(objData,"FVX48"), "Net Good Faith Baseline","Validating CD Baseline of Net Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX49_NetGFBaseline")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox342"),"value"),FRM_DS_GetValue(objData,"FVX49_NetGFBaseline"), "Net Good Faith Baseline","Validating Current Itemization of Net Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX349")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox328"),"value"),FRM_DS_GetValue(objData,"FVX349"), "Disclosed Amount","Validating Initial LE of Disclosed Amount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX350")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox329"),"value"),FRM_DS_GetValue(objData,"FVX350"), "Disclosed Amount","Validating LE Baseline of Disclosed Amount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX351")) And FRM_DS_GetValue(objData,"FVX351")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox356"),"value"),"", "Disclosed Amount","Validating CD Baseline of Disclosed Amount"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX351")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox356"),"value"),FRM_DS_GetValue(objData,"FVX351"), "Disclosed Amount","Validating CD Baseline of Disclosed Amount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX50")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox50"),"value"),FRM_DS_GetValue(objData,"FVX50"), "Variance between LE and Itemization","Validating Variance between LE and Itemization"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX51")) And FRM_DS_GetValue(objData,"FVX51")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox51"),"value"),"", "Difference between LE and CD (Disclosed)","Validating Difference between LE and CD (Disclosed)"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX51")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox51"),"value"),FRM_DS_GetValue(objData,"FVX51"), "Difference between LE and CD (Disclosed)","Validating Difference between LE and CD (Disclosed)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX52")) And FRM_DS_GetValue(objData,"FVX52")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox52"),"value"),"", "Variance between CD and Itemization","Validating Variance between CD and Itemization"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX52")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox52"),"value"),FRM_DS_GetValue(objData,"FVX52"), "Variance between CD and Itemization","Validating Variance between CD and Itemization"
	End If
	
End Function



'This function is used for validating "Charges that in Total Cannot Increase More than 10%" Section in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_ChargesCannotIncreaseTenPercentSection(objMainView,strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_ChargesCannotIncreaseTenPercentSection(strRowId)
	
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase More Than 10% section","Validate Items that Cannot Increase More Than 10% section in Fee Variance Worksheet",Null
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesCannotIncrease10%", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX56")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox56"),"value"),FRM_DS_GetValue(objData,"FVX56"), "Government Recording Charges","Validating Initial LE of Government Recording Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX57")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox57"),"value"),FRM_DS_GetValue(objData,"FVX57"), "Government Recording Charges","Validating LE Baseline of Government Recording Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX58")) And FRM_DS_GetValue(objData,"FVX58")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox58"),"value"),"", "Government Recording Charges","Validating CD Baseline of Government Recording Charges"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX58")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox58"),"value"),FRM_DS_GetValue(objData,"FVX58"), "Government Recording Charges","Validating CD Baseline of Government Recording Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX59")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox59"),"value"),FRM_DS_GetValue(objData,"FVX59"), "Government Recording Charges","Validating Current Itemization of Government Recording Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX60")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox163"),FRM_DS_GetValue(objData,"FVX60"),"FV.X60"		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX61")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox187"),FRM_DS_GetValue(objData,"FVX61"),"FV.X61"		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX62")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox60"),FRM_DS_GetValue(objData,"FVX62"),"FV.X62"		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX63")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox61"),FRM_DS_GetValue(objData,"FVX63"),"FV.X63"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX64")) And FRM_DS_GetValue(objData,"FVX64")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox62"),"","FV.X64"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX64")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox62"),FRM_DS_GetValue(objData,"FVX64"),"FV.X64"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX65")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox63"),FRM_DS_GetValue(objData,"FVX65"),"FV.X65"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX66")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox164"),FRM_DS_GetValue(objData,"FVX66"),"FV.X66"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX67")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox188"),FRM_DS_GetValue(objData,"FVX67"),"FV.X67"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX68")) And FRM_DS_GetValue(objData,"FVX68")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox64"),"","FV.X68"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX68")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox64"),FRM_DS_GetValue(objData,"FVX68"),"FV.X68"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX69")) And FRM_DS_GetValue(objData,"FVX69")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox65"),"","FV.X69"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX69")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox65"),FRM_DS_GetValue(objData,"FVX69"),"FV.X69"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX70")) And FRM_DS_GetValue(objData,"FVX70")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox66"),"","FV.X70"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX70")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox66"),FRM_DS_GetValue(objData,"FVX70"),"FV.X70"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX71")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox67"),FRM_DS_GetValue(objData,"FVX71"),"FV.X71"
	End If
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX204_GFBaseline")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox159"),"value"),FRM_DS_GetValue(objData,"FVX204_GFBaseline"), "Good Faith Baseline","Validating Initial LE of Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX381")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox160"),"value"),FRM_DS_GetValue(objData,"FVX381"), "Good Faith Baseline","Validating LE Baseline of Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX382")) And FRM_DS_GetValue(objData,"FVX382")="Null" Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox161"),"value"),"", "Good Faith Baseline","Validating CD Baseline of Good Faith Baseline"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX382")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox161"),"value"),FRM_DS_GetValue(objData,"FVX382"), "Good Faith Baseline","Validating CD Baseline of Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX207_GFBaseline")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox162"),"value"),FRM_DS_GetValue(objData,"FVX207_GFBaseline"), "Good Faith Baseline","Validating Current Itemization of Good Faith Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX383")) And FRM_DS_GetValue(objData,"FVX383")="Null" Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=EditTextBox340"),"value"),"", "Baseline Adjustment","Validating LE Baseline of Baseline Adjustment"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX383")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=EditTextBox340"),"value"),FRM_DS_GetValue(objData,"FVX383"), "Good Faith Baseline","Validating LE Baseline of Baseline Adjustment"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX384")) And FRM_DS_GetValue(objData,"FVX384")="Null" Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=EditTextBox366"),"value"),"", "Baseline Adjustment","Validating CD Baseline of Baseline Adjustment"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX384")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=EditTextBox366"),"value"),FRM_DS_GetValue(objData,"FVX384"), "Baseline Adjustment","Validating CD Baseline of Baseline Adjustment"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX204_NetGFBaseline")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox368"),"value"),FRM_DS_GetValue(objData,"FVX204_NetGFBaseline"), "Net Good Failth Baseline","Validating Initial LE of Net Good Failth Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX205")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox369"),"value"),FRM_DS_GetValue(objData,"FVX205"), "Net Good Failth Baseline","Validating LE Baseline of Net Good Failth Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX206")) And FRM_DS_GetValue(objData,"FVX206")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox370"),"value"),"", "Net Good Failth Baseline","Validating CD Baseline of Net Good Failth Baseline"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX206")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox370"),"value"),FRM_DS_GetValue(objData,"FVX206"), "Net Good Failth Baseline","Validating CD Baseline of Net Good Failth Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX207_NetGFBaseline")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox371"),"value"),FRM_DS_GetValue(objData,"FVX207_NetGFBaseline"), "Net Good Failth Baseline","Validating Current Itemization of Net Good Failth Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX211")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox358"),"value"),FRM_DS_GetValue(objData,"FVX211"), "Legal Limit","Validating Initial LE of Net Good Failth Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX212")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox359"),"value"),FRM_DS_GetValue(objData,"FVX212"), "Legal Limit","Validating LE Baseline of Net Good Failth Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX213")) And FRM_DS_GetValue(objData,"FVX213")="Null" Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox360"),"value"),"", "Legal Limit","Validating CD Baseline of Net Good Failth Baseline"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX213")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox360"),"value"),FRM_DS_GetValue(objData,"FVX213"), "Legal Limit","Validating CD Baseline of Net Good Failth Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX352")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox361"),"value"),FRM_DS_GetValue(objData,"FVX352"), "Legal Limit","Validating Current Itemization of Net Good Failth Baseline"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX353")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox362"),"value"),FRM_DS_GetValue(objData,"FVX353"), "Disclosed Amount","Validating Initial LE of Disclosed Amount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX354")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox363"),"value"),FRM_DS_GetValue(objData,"FVX354"), "Disclosed Amount","Validating LE Baseline of Disclosed Amount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX355")) And FRM_DS_GetValue(objData,"FVX355")="Null" Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox363"),"value"),"", "Disclosed Amount","Validating CD Baseline of Disclosed Amount"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX355")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox363"),"value"),FRM_DS_GetValue(objData,"FVX355"), "Disclosed Amount","Validating CD Baseline of Disclosed Amount"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX208")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox76"),"value"),FRM_DS_GetValue(objData,"FVX208"), "Variance between LE and Itemization","Validating Variance between LE and Itemization"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX209")) And FRM_DS_GetValue(objData,"FVX209")="Null" Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox77"),"value"),"", "Difference between LE and CD(Disclosed)","Validating Difference between LE and CD(Disclosed)"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX209")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox77"),"value"),FRM_DS_GetValue(objData,"FVX209"), "Difference between LE and CD","Validating Difference between LE and CD"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX210")) And FRM_DS_GetValue(objData,"FVX210")="Null" Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox76"),"value"),"", "Variance between LE and Itemization","Validating Variance between CD and Itemization"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX210")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox76"),"value"),FRM_DS_GetValue(objData,"FVX210"), "Variance between LE and Itemization","Validating Variance between CD and Itemization"
	End If	
End Function



'This function is used for validating "Initial LE" Section in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_InitialLE(objMainView,strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_InitialLE(strRowId)
	'=================Items that Cannot Decrease====================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Decrease","Validate Initial LE that Cannot Decrease section in Fee Variance Worksheet",Null	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyItemsThatCannotDecrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX8")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox8"),"value"),FRM_DS_GetValue(objData,"FVX8"), "Form 1003 Sec. L Lender Credits","Validating Intial LE of Form 1003 Sec. L Lender Credits"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX4")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox4"),"value"),FRM_DS_GetValue(objData,"FVX4"), "Total Credit for Rate Chosen","Validating Intial LE of Total Credit for Rate Chosen"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX12")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox12"),"value"),FRM_DS_GetValue(objData,"FVX12"), "Lender Paid Closing Costs","Validating Initial LE of Lender Paid Closing Costs"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX16")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox16"),"value"),FRM_DS_GetValue(objData,"FVX16"), "Total Lender Credit","Validating Initial LE of Total Lender Credit"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX20")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox20"),"value"),FRM_DS_GetValue(objData,"FVX20"), "Section J Credit (Disclosed)","Validating Initial LE of Section J Credit (Disclosed)"
	End If
	
	'=================Items that Cannot Increase====================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase","Validate Initial LE that Cannot Increase section in Fee Variance Worksheet",Null
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesThatCannotIncrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX30")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox30"),"value"),FRM_DS_GetValue(objData,"FVX30"), "Origination Charges","Validating Initial LE of Origination Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX34")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox34"),"value"),FRM_DS_GetValue(objData,"FVX34"), "Services Cannot Shop For","Validating Initial LE of Services Cannot Shop For"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX38")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox38"),"value"),FRM_DS_GetValue(objData,"FVX38"), "Services Can Shop For (Paid to L/B/I/A)","Validating Initial LE of Services Can Shop For (Paid to L/B/I/A)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX42")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox42"),"value"),FRM_DS_GetValue(objData,"FVX42"), "Transfer Taxes","Validating Initial LE of Transfer Taxes"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX370")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox23"),"value"),FRM_DS_GetValue(objData,"FVX370"), "Prepaid Property Taxes/Other","Validating Initial LE of Prepaid Property Taxes/Other"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX46_GFBaseline")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox46"),"value"),FRM_DS_GetValue(objData,"FVX46_GFBaseline"), "Good Faith Baseline","Validating Initial LE of Good Faith Baseline"
	End If
	
		'=================Items that Cannot Increase more than 10%====================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase More Than 10% section","Validate Initial LE that Cannot Increase More Than 10% section in Fee Variance Worksheet",Null
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesCannotIncrease10%", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX56")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox56"),"value"),FRM_DS_GetValue(objData,"FVX56"), "Government Recording Charges","Validating Initial LE of Government Recording Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX62")) Then		
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox60"),"value"),FRM_DS_GetValue(objData,"FVX62"), "CanShopFor #1109","Validating Initial LE of CanShopFor #1109"		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX68")) And FRM_DS_GetValue(objData,"FVX68")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox64"),"value"),FRM_DS_GetValue(objData,"FVX68"), "Misc1303","Validating Initial LE of Misc1303"		
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX68")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox64"),"value"),FRM_DS_GetValue(objData,"FVX68"), "Misc1303","Validating Initial LE of Misc1303"		
	End If
End Function



'This function is used for validating "LE Baseline" Section in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_LEBaseline(objMainView,strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_LEBaseline(strRowId)
	'==================Items that Cannot Decrease =================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Decrease","Validate LE Baseline that Cannot Decrease section in Fee Variance Worksheet",Null	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyItemsThatCannotDecrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX9")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox9"),"value"),FRM_DS_GetValue(objData,"FVX9"), "Form 1003 Sec. L Lender Credits","Validating LE Baseline of Form 1003 Sec. L Lender Credits"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX5")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox5"),"value"),FRM_DS_GetValue(objData,"FVX5"), "Total Credit for Rate Chosen","Validating LE Baseline of Total Credit for Rate Chosen"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX17")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox17"),"value"),FRM_DS_GetValue(objData,"FVX17"), "Total Lender Credit","Validating LE Baseline of Total Lender Credit"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX21")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox21"),"value"),FRM_DS_GetValue(objData,"FVX21"), "Section J Credit (Disclosed)","Validating LE Baseline of Section J Credit (Disclosed)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX22")) And FRM_DS_GetValue(objData,"FVX22")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox22"),"value"),"", "Section J Credit (Disclosed)","Validating LE Baseline of Section J Credit (Disclosed)"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX22")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox22"),"value"),FRM_DS_GetValue(objData,"FVX22"), "Section J Credit (Disclosed)","Validating CD Baseline of Section J Credit (Disclosed)"
	End If
	
	'==================Items that Cannot Increase =================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase","Validate LE Baseline that Cannot Increase section in Fee Variance Worksheet",Null	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesThatCannotIncrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX31")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox31"),"value"),FRM_DS_GetValue(objData,"FVX31"), "Origination Charges","Validating LE Baseline of Origination Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX35")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox35"),"value"),FRM_DS_GetValue(objData,"FVX35"), "Services Cannot Shop For","Validating Baseline LE of Services Cannot Shop For"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX39")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox39"),"value"),FRM_DS_GetValue(objData,"FVX39"), "Services Can Shop For (Paid to L/B/I/A)","Validating LE Baseline of Services Can Shop For (Paid to L/B/I/A)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX43")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox43"),"value"),FRM_DS_GetValue(objData,"FVX43"), "Transfer Taxes","Validating LE Baseline of Transfer Taxes"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX371")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox192"),"value"),FRM_DS_GetValue(objData,"FVX371"), "Prepaid Property Taxes/Other","Validating LE Baseline of Prepaid Property Taxes/Other"
	End If	
	
	'==================Items that Cannot Increase More Than 10% section =================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase More Than 10% section","Validate LE Baseline that Cannot Increase More Than 10% section in Fee Variance Worksheet",Null
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesCannotIncrease10%", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX57")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox57"),"value"),FRM_DS_GetValue(objData,"FVX57"), "Government Recording Charges","Validating LE Baseline of Government Recording Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX63")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox61"),"value"),FRM_DS_GetValue(objData,"FVX63"), "CanShopFor #1109","Validating LE Baseline of CanShopFor #1109"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX69")) And FRM_DS_GetValue(objData,"FVX69")="Null" Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox65"),"","FV.X69"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox65"),"value"),FRM_DS_GetValue(objData,"FVX69"), "Misc1303","Validating LE Baseline of Misc1303"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX69")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox65"),FRM_DS_GetValue(objData,"FVX69"),"FV.X69"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox65"),"value"),FRM_DS_GetValue(objData,"FVX69"), "Misc1303","Validating LE Baseline of Misc1303"
	End If	
End Function



'This function is used for validating "CD Baseline" Section in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_CDBaseline(objMainView,strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_CDBaseline(strRowId)
	'======================Items that Cannot Decrease============
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Decrease","Validate CD Baseline that Cannot Decrease section in Fee Variance Worksheet",Null	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyItemsThatCannotDecrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX10")) And FRM_DS_GetValue(objData,"FVX10")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox10"),"value"),"", "Form 1003 Sec. L Lender Credits","Validating CD Baseline of Form 1003 Sec. L Lender Credits"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX10")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox10"),"value"),FRM_DS_GetValue(objData,"FVX10"), "Form 1003 Sec. L Lender Credits","Validating CD Baseline of Form 1003 Sec. L Lender Credits"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX6")) And FRM_DS_GetValue(objData,"FVX6")="Null"  Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox6"),"value"),"", "Total Credit for Rate Chosen","Validating CD Baseline of Total Credit for Rate Chosen"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX6")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox6"),"value"),FRM_DS_GetValue(objData,"FVX6"), "Total Credit for Rate Chosen","Validating CD Baseline of Total Credit for Rate Chosen"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX14")) And FRM_DS_GetValue(objData,"FVX14")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox14"),"value"),"", "Lender Paid Closing Costs","Validating CD Baseline of Lender Paid Closing Costs"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX14")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox14"),"value"),FRM_DS_GetValue(objData,"FVX14"), "Lender Paid Closing Costs","Validating CD Baseline of Lender Paid Closing Costs"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX388")) And FRM_DS_GetValue(objData,"FVX388")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox296"),"value"),"", "Tolerance Cure","Validating CD Baseline of Tolerance Cure"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX388")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox296"),"value"),FRM_DS_GetValue(objData,"FVX388"), "Tolerance Cure","Validating CD Baseline of Tolerance Cure"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX18")) And FRM_DS_GetValue(objData,"FVX18")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox18"),"value"),"", "Total Lender Credit","Validating CD Baseline of Total Lender Credit"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX18")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox18"),"value"),FRM_DS_GetValue(objData,"FVX18"), "Total Lender Credit","Validating CD Baseline of Total Lender Credit"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX22")) And FRM_DS_GetValue(objData,"FVX22")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox22"),"value"),"", "Section J Credit (Disclosed)","Validating LE Baseline of Section J Credit (Disclosed)"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX22")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox22"),"value"),FRM_DS_GetValue(objData,"FVX22"), "Section J Credit (Disclosed)","Validating CD Baseline of Section J Credit (Disclosed)"
	End If
	
	
	'=======================Items that Cannot Increase=============
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase","Validate CD Baseline that Cannot Increase section in Fee Variance Worksheet",Null
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesThatCannotIncrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX32")) And FRM_DS_GetValue(objData,"FVX32")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox32"),"value"),"", "Origination Charges","Validating CD Baseline of Origination Charges"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX32")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox32"),"value"),FRM_DS_GetValue(objData,"FVX32"), "Origination Charges","Validating CD Baseline of Origination Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX36")) And FRM_DS_GetValue(objData,"FVX36")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox36"),"value"),"", "Services Cannot Shop For","Validating Baseline CD of Services Cannot Shop For"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX36")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox36"),"value"),FRM_DS_GetValue(objData,"FVX36"), "Services Cannot Shop For","Validating Baseline CD of Services Cannot Shop For"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX40")) And FRM_DS_GetValue(objData,"FVX40")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox40"),"value"),"", "Services Can Shop For (Paid to L/B/I/A)","Validating CD Baseline of Services Can Shop For (Paid to L/B/I/A)"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX40")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox40"),"value"),FRM_DS_GetValue(objData,"FVX40"), "Services Can Shop For (Paid to L/B/I/A)","Validating CD Baseline of Services Can Shop For (Paid to L/B/I/A)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX44")) And FRM_DS_GetValue(objData,"FVX44")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox44"),"value"),"", "Transfer Taxes","Validating CD Baseline of Transfer Taxes"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX44")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox44"),"value"),FRM_DS_GetValue(objData,"FVX44"), "Transfer Taxes","Validating CD Baseline of Transfer Taxes"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX372")) And FRM_DS_GetValue(objData,"FVX372")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox193"),"value"),"", "Prepaid Property Taxes/Other","Validating CD Baseline of Prepaid Property Taxes/Other"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX372")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox193"),"value"),FRM_DS_GetValue(objData,"FVX372"), "Prepaid Property Taxes/Other","Validating CD Baseline of Prepaid Property Taxes/Other"
	End If
	
	
	'=======================Items that Cannot Increase more than 10% =============
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase More Than 10% section","Validate CD Baseline that Cannot Increase More Than 10% section in Fee Variance Worksheet",Null
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesCannotIncrease10%", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX58")) And FRM_DS_GetValue(objData,"FVX58")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox58"),"value"),"", "Government Recording Charges","Validating CD Baseline of Government Recording Charges"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX58")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox58"),"value"),FRM_DS_GetValue(objData,"FVX58"), "Government Recording Charges","Validating CD Baseline of Government Recording Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX64")) And FRM_DS_GetValue(objData,"FVX64")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox62"),"value"),FRM_DS_GetValue(objData,"FVX64"), "CanShopFor #1109","Validating CD Baseline of CanShopFor #1109"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX64")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox62"),"value"),FRM_DS_GetValue(objData,"FVX64"), "CanShopFor #1109","Validating CD Baseline of CanShopFor #1109"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX70")) And FRM_DS_GetValue(objData,"FVX70")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox66"),"value"),FRM_DS_GetValue(objData,"FVX70"), "Misc1303","Validating CD Baseline of Misc1303"
	Elseif UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX70")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox66"),"value"),FRM_DS_GetValue(objData,"FVX70"), "Misc1303","Validating CD Baseline of Misc1303"
	End If
End Function



'This function is used for validating "Current Itemization column" in all 3 Sections in Fee Variance Worksheet
'@code
'	BIZ_FeeVariance_CurrentItemization(objMainView,strRowId)
'@endcode
'@param objMainView - Description properties of parent object
'@param strRowId - The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_FeeVariance_CurrentItemization(strRowId)
	'==================Items that Cannot Decrease =================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Decrease","Validate Current Itemization that Cannot Decrease section in Fee Variance Worksheet",Null	
	Set objMainView = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyItemsThatCannotDecrease", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX11")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox11"),"value"),FRM_DS_GetValue(objData,"FVX11"), "Form 1003 Sec. L Lender Credits","Validating Itemization - Current of Form 1003 Sec. L Lender Credits"
	End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX7")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox7"),"value"),FRM_DS_GetValue(objData,"FVX7"), "Total Credit for Rate Chosen","Validating Current Itemization of Total Credit for Rate Chosen"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX15")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox15"),"value"),FRM_DS_GetValue(objData,"FVX15"), "Lender Paid Closing Costs","Validating Current Itemization of Lender Paid Closing Costs"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX366")) And FRM_DS_GetValue(objData,"FVX366")="Null" Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox295"),"value"),"", "Tolerance Cure","Validating Current Itemization of Tolerance Cure"
	ElseIf UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX366")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox295"),"value"),FRM_DS_GetValue(objData,"FVX366"), "Tolerance Cure","Validating Current Itemization of Tolerance Cure"
	End If
	
	'=======================Items that Cannot Increase=================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase","Validate Current Itemization that Cannot Increase section in Fee Variance Worksheet",Null
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesThatCannotIncrease", strRowId)
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX33")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox33"),"value"),FRM_DS_GetValue(objData,"FVX33"), "Origination Charges","Validating Current Itemization of Origination Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX37")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox37"),"value"),FRM_DS_GetValue(objData,"FVX37"), "Services Cannot Shop For","Validating Current Itemization of Services Cannot Shop For"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX41")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox41"),"value"),FRM_DS_GetValue(objData,"FVX41"), "Services Can Shop For (Paid to L/B/I/A)","Validating Current Itemization of Services Can Shop For (Paid to L/B/I/A)"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX45")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox45"),"value"),FRM_DS_GetValue(objData,"FVX45"), "Transfer Taxes","Validating Current Itemization of Transfer Taxes"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX373")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox194"),"value"),FRM_DS_GetValue(objData,"FVX373"), "Prepaid Property Taxes/Other","Validating Current Itemization of Prepaid Property Taxes/Other"
	End If
		
	'======================Items that Cannot Increase More Than 10% section=========================
	FRM_Logger_ReportStepEvent "Fee Variance - Items that Cannot Increase More Than 10% section","Validate Current Itemization that Cannot Increase More Than 10% section in Fee Variance Worksheet",Null
	Set objData = FRM_DS_GetTestData("Tools_FeeVarianceWorksheet", "VerifyChargesCannotIncrease10%", strRowId)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX59")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox59"),"value"),FRM_DS_GetValue(objData,"FVX59"), "Government Recording Charges","Validating Current Itemization of Government Recording Charges"
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX65")) Then
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox63"),"value"),FRM_DS_GetValue(objData,"FVX65"), "CanShopFor #1109","Validating Current Itemization of CanShopFor #1109"		
	End If
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"FVX71")) Then
		GUI_Object_ValidateValue objMainView.WebEdit("html id:=TextBox67"),FRM_DS_GetValue(objData,"FVX71"),"FV.X71"
		FRM_VerifyEqual GUI_Object_GetPropertyValue(objMainView.WebEdit("html id:=TextBox67"),"value"),FRM_DS_GetValue(objData,"FVX71"), "Misc1303","Validating Current Itemization of Misc1303"
	End If
End Function


'==================Set Baseline data for Fee Variance======='
Function BIZ_FeeVariance_Baseline(strRowID)

	'set borrower data for Purchase price, loan amount
	BIZ_1003Page1_SetData strRowID
	
	'set hazard insurance and RE Taxes
	BIZ_Forms_Open "1003 Page 2"
	BIZ_1003Page2_SetMonthlyIncomeExpensesData strRowID
	
	'set Lender Credit as 1000$ 
	BIZ_Forms_Open "1003 Page 3"
	BIZ_1003Page3_SetDetailsTransaction strRowID
	
	'set data in 800 section  
	BIZ_Forms_Open "2015 Itemization"
	BIZ_2015Itemization_Set800Section strRowID
	
	'set 450 in POC for 804 Fee Details
	BIZ_2015Itemization_SetFeeDetails "804","3720_804FeeDetails"
	
	'set data in 900 section 
	BIZ_2015Itemization_Set900Section strRowID
	
	'check "Property Taxes" in 907 FeeDetails
	BIZ_2015Itemization_FeeDetails_ClickCheckbox "907",Array("Property Taxes")
	
	'check "Borrower Can Shop" checkbox in 910 FeeDetails
	BIZ_2015Itemization_FeeDetails_ClickCheckbox "910",Array("Borrower Can Shop")
	
	'set data in 1100 section
	BIZ_2015Itemization_Set1100Section strRowID
	
	'check "Borrower Can Shop" checkbox in 1101a
	BIZ_2015Itemization_FeeDetails_ClickCheckbox "1101a",Array("Borrower Can Shop")
	
	'NEWHUD2.X3130 -- True -- line 1102c FeeDetails
	BIZ_Common_2015Itemization_FeeDetails_SetCheckBox SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("html id:=ImageButton12"),Array("Borrower Can Shop")
	
	'NEWHUD2.X3361 -- True -- line 1104 FeeDetails
	BIZ_2015Itemization_FeeDetails_ClickCheckbox "1104",Array("Borrower Can Shop")
	
	'NEWHUD2.X3394
	BIZ_2015Itemization_FeeDetails_ClickCheckbox "1109",Array("Borrower Can Shop")
	
	'set data in 1200 section
	BIZ_2015Itemization_Set1200Section strRowID
	
	'NEWHUD2.X3782, set 50 
	BIZ_2015Itemization_SetFeeDetails "1206","3720_1206FeeDetails"
	
	'set data in 1300 section
	BIZ_2015Itemization_Set1300Section strRowID

End Function


'=======update baseline data========================
Function BIZ_FeeVariance_BaselineUpdate(strRowID)

	'set Lender Credit as 1000$ 
	BIZ_Forms_Open "1003 Page 3"
	BIZ_1003Page3_SetDetailsTransaction strRowID
	
	'set data in 800 section  
	BIZ_Forms_Open "2015 Itemization"
	BIZ_2015Itemization_Set800Section strRowID
	
	'set data in 1100 section
	BIZ_2015Itemization_Set1100Section strRowID
	
	'set data in 1200 section
	BIZ_2015Itemization_Set1200Section strRowID
	
	'set data in 1300 section
	BIZ_2015Itemization_Set1300Section strRowID
End Function


'=======Select CoC Reason======='
Function BIZ_CoC_SelectReason(strDescription,strPage)
	'=======select Changed Circumstance ===== 
	FRM_Logger_ReportInfoEvent "Changed Circumstances","Changed Circumstances spyglass clicked and CoC options selected", Null
	Set objPage = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objCCList= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions")
	If lcase(strPage)="lepage" Then
		GUI_WebButton_Click objPage.WebButton("html id:=stdbtn_3169")
	Else
		GUI_WebButton_Click objPage.WebButton("html id:=stdbtn_CD1X64")
	End If	
	GUI_List_ClickRow objCCList,objCCList.SwfScrollBar("swfname:=vPanelScrollBar"),"Changed Circumstance",strDescription,True,False,False,"Signle"
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfButton("swfname:=btnOK")	
End Function

'====Good Faith Fee Variance Voilated Details and Select CoC reasons========
Function BIZ_FeeDetails_SelectCoCReason(strRowID)
	Set objGFE = SwfWindow("swfname:=MainForm")
	Set objScroll=objGFE.SwfScrollBar("swfname:=vPanelScrollBar","swfname path:=vPanelScrollBar;gvFields;grpFields;.*")
	Set objData = FRM_DS_GetTestData("Settings_ChangedCircumstanceSetup", "FeesChangesCoCReasons", strRowID)
	strFeeFields=FRM_DS_GetValue(objData, "LO_FeeDescription")
	arrFields=Split(strFeeFields,"|")
	intFields=ubound(arrFields)	
	strCircumstance=FRM_DS_GetValue(objData, "CoC_Reason_Description")	

	For i = 0 To intFields
		'Select Fee Description
		FRM_Logger_ReportInfoEvent "Select Fee Changes and add CoC reason","Select "&arrFields(i)&" and added CoC reason", Null
		If objScroll.Exist(2) Then
			GUI_List_ClickRow objGFE.SwfObject("swfname:=gvFields"),objScroll,"Description",arrFields(i),True,False,False,"Single"
		Else
			intRow=GUI_List_GetRowIndex(objGFE.SwfObject("swfname:=gvFields"),"Description",arrFields(i))
			GUI_List_ActOnRow objGFE.SwfObject("swfname:=gvFields"),intRow,True,False,False,"Single"		
		End If 
		'=======select Changed Circumstance =====
		Set objCCList= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfObject("swfname:=listViewOptions")
		GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=btnSelect")
		GUI_List_ClickRow objCCList,objCCList.SwfScrollBar("swfname:=vPanelScrollBar"),"Changed Circumstance",strCircumstance,True,False,False,"Signle"
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=ChangeCircumstanceSelector").SwfButton("swfname:=btnOK") 
		Set objData=Nothing
	Next
	Set objData=Nothing
	Set objGFEFeeList=Nothing
End Function
'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\FeeVariance.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\FileContacts.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Tools_FileContacts BIZ_Tools_FileContacts
'
' List of functions here
' @code
'
'   Function BIZ_FileContacts_SetBuyersAgent(strRowID)
'   Function BIZ_FileContacts_SetSellersAgent(strRowID)
'   Function BIZ_FileContacts_SetEscrowCompany(strRowID)
'   Function BIZ_FileContacts_SetTitleInsuranceCompany(strRowID)
'   Function BIZ_FileContacts_SetBuyersAttorney(strRowID)
'   Function BIZ_FileContacts_SetSettlementAgent(strRowID)
'   Function BIZ_FileContacts_VerifySettlementAgent(strRowID)
'	Function BIZ_FileContacts_CopyBusinessContactsSettlementService(strRowID)
'	Function BIZ_FileContacts_NonBorrowerOwner(strRowID)
'@endcode
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Buyers Agent Information in File Contacts
'@code
'    BIZ_FileContacts_SetBuyersAgent(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_SetBuyersAgent(strRowID)
	FRM_Logger_ReportInfoEvent "File Contacts", "Set Buyers Agent information using Row Id '"&strRowID&"' in the File Contacts datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	
	'===================Open Tools->File Contacts======================
	BIZ_Tools_Open "File Contacts"
	
	'===========================Go to the line for the Category Buyers agent=========================
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridViewContacts"), Null, 1, "Buyer's Agent", True, False, False, "Single"
    
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "SetBuyersAgent", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X133_CompanyName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX133"), FRM_DS_GetValue(objData, "VEND.X133_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X134_Address")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX134"), FRM_DS_GetValue(objData, "VEND.X134_Address")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X135_City")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX135"), FRM_DS_GetValue(objData, "VEND.X135_City")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X136_State")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX136"), FRM_DS_GetValue(objData, "VEND.X136_State")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X137_Zip")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX137"), FRM_DS_GetValue(objData, "VEND.X137_Zip") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X237_Relationship")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX237"), FRM_DS_GetValue(objData, "VEND.X237_Relationship") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X238_LineItemNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX238"), FRM_DS_GetValue(objData, "VEND.X238_LineItemNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X936_CompanyStateLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "VEND.X936_CompanyStateLicense")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X735_LicIssuingAuthority")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "VEND.X735_LicIssuingAuthority")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "LicAuthorityType")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X737_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "VEND.X737_LicAuthorityStateCode")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X738_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "VEND.X738_LicIssueDate") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X139_AgentName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX139"), FRM_DS_GetValue(objData, "VEND.X139_AgentName") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X140_Phone")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX140"), FRM_DS_GetValue(objData, "VEND.X140_Phone") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X141_Email")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX141"), FRM_DS_GetValue(objData, "VEND.X141_Email")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X142_Fax")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=l_VENDX142"), FRM_DS_GetValue(objData, "VEND.X142_Fax")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X500_Cell")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX500"), FRM_DS_GetValue(objData, "VEND.X500_Cell")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X143_Reference")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX143"), FRM_DS_GetValue(objData, "VEND.X143_Reference") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X138_Comments")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX138"), FRM_DS_GetValue(objData, "VEND.X138_Comments") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X739_ContactStateLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "VEND.X739_ContactStateLicense") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X740_LicIssuingAuthorityName")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=TextBox6"), FRM_DS_GetValue(objData, "VEND.X740_LicIssuingAuthorityName")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType2")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "LicAuthorityType2")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X742_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox10"), FRM_DS_GetValue(objData, "VEND.X742_LicAuthorityStateCode") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X743_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "VEND.X743_LicIssueDate") 
	End If	

    
	
	Set objSummaryPage = Nothing
End Function



'This function is for set Sellers Agent Information in File Contacts
'@code
'    BIZ_FileContacts_SetSellersAgent(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_SetSellersAgent(strRowID)

	FRM_Logger_ReportInfoEvent "File Contacts", "Set Sellers Agent information using Row Id '"&strRowID&"' in the File Contacts datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	'===================Open Tools->File Contacts======================
	BIZ_Tools_Open "File Contacts"
	
	'===========================Go to the line for the Category Sellers agent=========================
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridViewContacts"), Null, 1, "Seller's Agent", True, False, False, "Single"
    
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "SetSellersAgent", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X144_CompanyName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX144"), FRM_DS_GetValue(objData, "VEND.X144_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X145_Address")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX145"), FRM_DS_GetValue(objData, "VEND.X145_Address")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X146_City")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX146"), FRM_DS_GetValue(objData, "VEND.X146_City")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X147_State")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX147"), FRM_DS_GetValue(objData, "VEND.X147_State")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X148_Zip")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX148"), FRM_DS_GetValue(objData, "VEND.X148_Zip") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X239_Relationship")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX239"), FRM_DS_GetValue(objData, "VEND.X239_Relationship") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X240_LineItemNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX240"), FRM_DS_GetValue(objData, "VEND.X240_LineItemNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X937_CompanyStateLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "VEND.X937_CompanyStateLicense")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X924_LicIssuingAuthority")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "VEND.X924_LicIssuingAuthority")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "LicAuthorityType")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X926_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "VEND.X926_LicAuthorityStateCode")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X927_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "VEND.X927_LicIssueDate") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X150_AgentName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX150"), FRM_DS_GetValue(objData, "VEND.X150_AgentName") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X151_Phone")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX151"), FRM_DS_GetValue(objData, "VEND.X151_Phone") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X152_Email")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX152"), FRM_DS_GetValue(objData, "VEND.X152_Email")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X153_Fax")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=l_VENDX153"), FRM_DS_GetValue(objData, "VEND.X153_Fax")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X501_Cell")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX501"), FRM_DS_GetValue(objData, "VEND.X501_Cell")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X154_Reference")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX154"), FRM_DS_GetValue(objData, "VEND.X154_Reference") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X149_Comments")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX149"), FRM_DS_GetValue(objData, "VEND.X149_Comments") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X928_ContactStateLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "VEND.X928_ContactStateLicense") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X929_LicIssuingAuthorityName")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=TextBox6"), FRM_DS_GetValue(objData, "VEND.X929_LicIssuingAuthorityName")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType2")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "LicAuthorityType2")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X931_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox10"), FRM_DS_GetValue(objData, "VEND.X931_LicAuthorityStateCode") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X932_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "VEND.X932_LicIssueDate") 
	End If	

    
	
	Set objSummaryPage = Nothing
End Function



'This function is for set Escrow company Information in File Contacts
'@code
'    BIZ_FileContacts_SetEscrowCompany(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_SetEscrowCompany(strRowID)

	FRM_Logger_ReportInfoEvent "File Contacts", "Set Escrow company information using Row Id '"&strRowID&"' in the File Contacts datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	'===================Open Tools->File Contacts======================
	BIZ_Tools_Open "File Contacts"
	
	'===========================Go to the line for the Category Escrow company=========================
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridViewContacts"), Null, 1, "Escrow Company", True, False, False, "Single"
    
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "SetEscrowCompany", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "610_CompanyName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_610"), FRM_DS_GetValue(objData, "610_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "612_Address")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_612"), FRM_DS_GetValue(objData, "612_Address")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "613_City")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_613"), FRM_DS_GetValue(objData, "613_City")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1175_State")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_1175"), FRM_DS_GetValue(objData, "1175_State")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "614_Zip")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_614"), FRM_DS_GetValue(objData, "614_Zip") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X216_Relationship")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX216"), FRM_DS_GetValue(objData, "VEND.X216_Relationship") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X218_LineItemNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX218"), FRM_DS_GetValue(objData, "VEND.X218_LineItemNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "186_EscrowCase")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_186"), FRM_DS_GetValue(objData, "186_EscrowCase") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X986_CompanyStateLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "VEND.X986_CompanyStateLicense")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X699_LicIssuingAuthority")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "VEND.X699_LicIssuingAuthority")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "LicAuthorityType")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X701_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "VEND.X701_LicAuthorityStateCode")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X702_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "VEND.X702_LicIssueDate") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "611_AgentName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_611"), FRM_DS_GetValue(objData, "611_AgentName") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "615_Phone")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_615"), FRM_DS_GetValue(objData, "615_Phone") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "87_Email")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_87"), FRM_DS_GetValue(objData, "87_Email")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1011_Fax")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=l_1011"), FRM_DS_GetValue(objData, "1011_Fax")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X518_Cell")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX518"), FRM_DS_GetValue(objData, "VEND.X518_Cell")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X396_ABANumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "VEND.X396_ABANumber") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X397_AccountNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "VEND.X397_AccountNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "616_Comments")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_616"), FRM_DS_GetValue(objData, "616_Comments") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X703_ContactLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "VEND.X703_ContactLicense") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X704_LicIssuingAuthorityName")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=TextBox9"), FRM_DS_GetValue(objData, "VEND.X704_LicIssuingAuthorityName")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType2")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "LicAuthorityType2")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X706_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "VEND.X706_LicAuthorityStateCode") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X707_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "VEND.X707_LicIssueDate") 
	End If	

	Set objSummaryPage = Nothing
End Function



'This function is for set Title Insurance company Information in File Contacts
'@code
'    BIZ_FileContacts_SetTitleInsuranceCompany(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_SetTitleInsuranceCompany(strRowID)

	FRM_Logger_ReportInfoEvent "File Contacts", "Set Title Insurance company information using Row Id '"&strRowID&"' in the File Contacts datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	'===================Open Tools->File Contacts======================
	BIZ_Tools_Open "File Contacts"
	
	'===========================Go to the line for the Category Title Insurance company=========================
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridViewContacts"), Null, 1, "Title Insurance Company", True, False, False, "Single"
    
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "SetTitleInsuranceCompany", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "411_CompanyName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_411"), FRM_DS_GetValue(objData, "411_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "412_Address")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_412"), FRM_DS_GetValue(objData, "412_Address")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "413_City")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_413"), FRM_DS_GetValue(objData, "413_City")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1174_State")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_1174"), FRM_DS_GetValue(objData, "1174_State")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "414_Zip")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_414"), FRM_DS_GetValue(objData, "414_Zip") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X155_Relationship")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX155"), FRM_DS_GetValue(objData, "VEND.X155_Relationship") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X156_LineItemNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX156"), FRM_DS_GetValue(objData, "VEND.X156_LineItemNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "187_TitleCase")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_187"), FRM_DS_GetValue(objData, "187_TitleCase") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X979_CompanyLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "VEND.X979_CompanyLicense")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X708_LicIssuingAuthority")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "VEND.X708_LicIssuingAuthority")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "LicAuthorityType")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X710_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "VEND.X710_LicAuthorityStateCode")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X711_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "VEND.X711_LicIssueDate") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "416_OfficerName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_416"), FRM_DS_GetValue(objData, "416_OfficerName") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "417_Phone")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_417"), FRM_DS_GetValue(objData, "417_Phone") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "88_Email")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_88"), FRM_DS_GetValue(objData, "88_Email")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1243_Fax")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=l_1243"), FRM_DS_GetValue(objData, "1243_Fax")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X519_Cell")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX519"), FRM_DS_GetValue(objData, "VEND.X519_Cell")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X398_ABANumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "VEND.X398_ABANumber") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X399_AccountNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "VEND.X399_AccountNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "419_Comments")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_419"), FRM_DS_GetValue(objData, "419_Comments") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X712_ContactLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "VEND.X712_ContactLicense") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X713_LicIssuingAuthorityName")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=TextBox9"), FRM_DS_GetValue(objData, "VEND.X713_LicIssuingAuthorityName")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType2")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "LicAuthorityType2")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X715_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "VEND.X715_LicAuthorityStateCode") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X716_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "VEND.X716_LicIssueDate") 
	End If	

	Set objSummaryPage = Nothing
End Function



'This function is for set Buyers Attorney Information in File Contacts
'@code
'    BIZ_FileContacts_SetBuyersAttorney(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_SetBuyersAttorney(strRowID)

	FRM_Logger_ReportInfoEvent "File Contacts", "Set Buyers Attorney information using Row Id '"&strRowID&"' in the File Contacts datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	'===================Open Tools->File Contacts======================
	BIZ_Tools_Open "File Contacts"
	
	'===========================Go to the line for the Category Buyers Attorney=========================
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridViewContacts"), Null, 1, "Buyer's Attorney", True, False, False, "Single"
    
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "SetBuyersAttorney", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "56_CompanyName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_56"), FRM_DS_GetValue(objData, "56_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X112_Address")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX112"), FRM_DS_GetValue(objData, "VEND.X112_Address")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X113_City")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX113"), FRM_DS_GetValue(objData, "VEND.X113_City")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X114_State")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX114"), FRM_DS_GetValue(objData, "VEND.X114_State")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X115_Zip")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX115"), FRM_DS_GetValue(objData, "VEND.X115_Zip") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X233_Relationship")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX233"), FRM_DS_GetValue(objData, "VEND.X233_Relationship") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X234_LineItemNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX234"), FRM_DS_GetValue(objData, "VEND.X234_LineItemNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X121_Reference")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX121"), FRM_DS_GetValue(objData, "VEND.X121_Reference") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X982_CompanyLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "VEND.X982_CompanyLicense")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X717_LicIssuingAuthority")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "VEND.X717_LicIssuingAuthority")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "LicAuthorityType")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X719_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "VEND.X719_LicAuthorityStateCode")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X720_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "VEND.X720_LicIssueDate") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X117_ContactName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX117"), FRM_DS_GetValue(objData, "VEND.X117_ContactName") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X118_Phone")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX118"), FRM_DS_GetValue(objData, "VEND.X118_Phone") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X119_Email")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX119"), FRM_DS_GetValue(objData, "VEND.X119_Email")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X120_Fax")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=l_VENDX120"), FRM_DS_GetValue(objData, "VEND.X120_Fax")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X498_Cell")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX498"), FRM_DS_GetValue(objData, "VEND.X498_Cell")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X400_ABANumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "VEND.X400_ABANumber") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X401_AccountNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "VEND.X401_AccountNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X116_Comments")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX116"), FRM_DS_GetValue(objData, "VEND.X116_Comments") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X721_ContactLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "VEND.X721_ContactLicense") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X722_LicIssuingAuthorityName")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=TextBox6"), FRM_DS_GetValue(objData, "VEND.X722_LicIssuingAuthorityName")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType2")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "LicAuthorityType2")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X724_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox10"), FRM_DS_GetValue(objData, "VEND.X724_LicAuthorityStateCode") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X725_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "VEND.X725_LicIssueDate") 
	End If	

	Set objSummaryPage = Nothing
End Function



'This function is for set Settlement Agent Information in File Contacts
'@code
'    BIZ_FileContacts_SetSettlementAgent(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_SetSettlementAgent(strRowID)

	FRM_Logger_ReportInfoEvent "File Contacts", "Set Settlement Agent information using Row Id '"&strRowID&"' in the File Contacts datasheet", null

	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	'===================Open Tools->File Contacts======================
	BIZ_Tools_Open "File Contacts"
	
	'===========================Go to the line for the Category Buyers Attorney=========================
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridViewContacts"), Null, 1, "Settlement Agent", True, False, False, "Single"
    
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "SetSettlementAgent", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X655_CompanyName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX655"), FRM_DS_GetValue(objData, "VEND.X655_CompanyName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X656_Address")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX656"), FRM_DS_GetValue(objData, "VEND.X656_Address")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X657_City")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX657"), FRM_DS_GetValue(objData, "VEND.X657_City")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X658_State")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX658"), FRM_DS_GetValue(objData, "VEND.X658_State")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X659_Zip")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX659"), FRM_DS_GetValue(objData, "VEND.X659_Zip") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X660_Relationship")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX660"), FRM_DS_GetValue(objData, "VEND.X660_Relationship") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X661_LineItemNumber")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX661"), FRM_DS_GetValue(objData, "VEND.X661_LineItemNumber") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X662_NMLS")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX662"), FRM_DS_GetValue(objData, "VEND.X662_NMLS") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X663_CompanyStateLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX663"), FRM_DS_GetValue(objData, "VEND.X663_CompanyStateLicense")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X664_LicIssuingAuthority")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX664"), FRM_DS_GetValue(objData, "VEND.X664_LicIssuingAuthority")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "LicAuthorityType")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X666_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX666"), FRM_DS_GetValue(objData, "VEND.X666_LicAuthorityStateCode")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X667_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX667"), FRM_DS_GetValue(objData, "VEND.X667_LicIssueDate") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X668_ContactName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX668"), FRM_DS_GetValue(objData, "VEND.X668_ContactName") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X669_Phone")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX669"), FRM_DS_GetValue(objData, "VEND.X669_Phone") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X670_Email")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX670"), FRM_DS_GetValue(objData, "VEND.X670_Email")  
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X671_Fax")) Then
		GUI_WebEdit_Set objSummaryPage.WebList("html id:=l_VENDX671"), FRM_DS_GetValue(objData, "VEND.X671_Fax")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X672_Cell")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX672"), FRM_DS_GetValue(objData, "VEND.X672_Cell")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X673_Reference")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX673"), FRM_DS_GetValue(objData, "VEND.X673_Reference") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X674_Comments")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX674"), FRM_DS_GetValue(objData, "VEND.X674_Comments") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X675_NMLS")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=l_VENDX675"), FRM_DS_GetValue(objData, "VEND.X675_NMLS") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X676_ContactStateLicense")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX676"), FRM_DS_GetValue(objData, "VEND.X676_ContactStateLicense") 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X677_LicIssuingAuthorityName")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX677"), FRM_DS_GetValue(objData, "VEND.X677_LicIssuingAuthorityName")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType2")) Then
		GUI_WebList_Select objSummaryPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "LicAuthorityType2")
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X679_LicAuthorityStateCode")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX6792"), FRM_DS_GetValue(objData, "VEND.X679_LicAuthorityStateCode") 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X680_LicIssueDate")) Then
		GUI_WebEdit_Set objSummaryPage.WebEdit("html id:=I_VENDX680"), FRM_DS_GetValue(objData, "VEND.X680_LicIssueDate") 
	End If	

	Set objSummaryPage = Nothing
End Function



'This function is for verification of Settlement agent Information 
'@code
'    BIZ_FileContacts_VerifySettlementAgent(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_VerifySettlementAgent(strRowID)

	FRM_Logger_ReportInfoEvent "File Contacts", "Validate Settlement Agent Information using Row Id '"&strRowID&"' in the File Contacts datasheet", null
	
	Set objSummaryPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
	
	'===================Open Tools->File Contacts======================
	BIZ_Tools_Open "File Contacts"
	
	'===========================Go to the line for the Category Settlement Agent=========================
	GUI_List_ClickRow SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridViewContacts"), Null, 1, "Settlement Agent", True, False, False, "Single"
    
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "SetSettlementAgent", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X655_CompanyName")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX655"), FRM_DS_GetValue(objData, "VEND.X655_CompanyName"), "Company Name"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X656_Address")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX656"), FRM_DS_GetValue(objData, "VEND.X656_Address"), "Address"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X657_City")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX657"), FRM_DS_GetValue(objData, "VEND.X657_City"), "City"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X658_State")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX658"), FRM_DS_GetValue(objData, "VEND.X658_State"), "State"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X659_Zip")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX659"), FRM_DS_GetValue(objData, "VEND.X659_Zip"), "Zip" 
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X660_Relationship")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX660"), FRM_DS_GetValue(objData, "VEND.X660_Relationship"), "Relationship" 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X661_LineItemNumber")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX661"), FRM_DS_GetValue(objData, "VEND.X661_LineItemNumber"), "Line Item Number" 
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X662_NMLS")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX662"), FRM_DS_GetValue(objData, "VEND.X662_NMLS") , "NMLS"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X663_CompanyStateLicense")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX663"), FRM_DS_GetValue(objData, "VEND.X663_CompanyStateLicense"), "Company state License"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X664_LicIssuingAuthority")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX664"), FRM_DS_GetValue(objData, "VEND.X664_LicIssuingAuthority")  , "Lic Issuing Authority"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType")) Then
		GUI_Object_ValidateValue objSummaryPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "LicAuthorityType"), "Lic Authority Type"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X666_LicAuthorityStateCode")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX666"), FRM_DS_GetValue(objData, "VEND.X666_LicAuthorityStateCode"), "Lic Authority State Code"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X667_LicIssueDate")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX667"), FRM_DS_GetValue(objData, "VEND.X667_LicIssueDate") , "Lic Issue Date"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X668_ContactName")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX668"), FRM_DS_GetValue(objData, "VEND.X668_ContactName") , "Contact Name"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X669_Phone")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX669"), FRM_DS_GetValue(objData, "VEND.X669_Phone") , "Phone"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X670_Email")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX670"), FRM_DS_GetValue(objData, "VEND.X670_Email")  , "Email"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X671_Fax")) Then
		GUI_Object_ValidateValue objSummaryPage.WebList("html id:=l_VENDX671"), FRM_DS_GetValue(objData, "VEND.X671_Fax"), "Fax"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X672_Cell")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX672"), FRM_DS_GetValue(objData, "VEND.X672_Cell"), "Cell"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X673_Reference")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX673"), FRM_DS_GetValue(objData, "VEND.X673_Reference") , "Reference"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X674_Comments")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX674"), FRM_DS_GetValue(objData, "VEND.X674_Comments") , "Comments"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X675_NMLS")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=l_VENDX675"), FRM_DS_GetValue(objData, "VEND.X675_NMLS") , "NMLS"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X676_ContactStateLicense")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX676"), FRM_DS_GetValue(objData, "VEND.X676_ContactStateLicense") , "Contact State License"
	End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X677_LicIssuingAuthorityName")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX677"), FRM_DS_GetValue(objData, "VEND.X677_LicIssuingAuthorityName"), "Lic Issuing Authority Name"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "LicAuthorityType2")) Then
		GUI_Object_ValidateValue objSummaryPage.WebList("html id:=DropdownBox2"), FRM_DS_GetValue(objData, "LicAuthorityType2"), "Lic Authority Type"
	End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X679_LicAuthorityStateCode")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX6792"), FRM_DS_GetValue(objData, "VEND.X679_LicAuthorityStateCode") , "Lic Authority State Code"
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VEND.X680_LicIssueDate")) Then
		GUI_Object_ValidateValue objSummaryPage.WebEdit("html id:=I_VENDX680"), FRM_DS_GetValue(objData, "VEND.X680_LicIssueDate") , "Lic Issue Date"
	End If	

	Set objSummaryPage = Nothing
	Set objData = Nothing	
	
End Function	



'This function is used to copy business contacts settlement Service
'@code
'    BIZ_FileContacts_CopyBusinessContactsSettlementService(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_CopyBusinessContactsSettlementService(strRowID)
	BIZ_Tools_Open "File Contacts"
	GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfLabel("swfname:=titleLbl","text:=File Contacts"),15,"File Contacts Tool"
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "CopySettlementService", strRowID)
	
	Set objLoanPage = SwfWindow("swfname:=MainForm")
	Set objGridView = objLoanPage.SwfObject("swfname:=gridViewContacts")
	Set objScrollBar = objLoanPage.SwfScrollBar("swfname:=vPanelScrollBar")
	Set objContactList =SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RxBusinessContact").SwfObject("swfname:=gvContactList")
	strCategoryOrRole = FRM_DS_GetValue(objData, "CategoryOrRole")
	If UTIL_String_IsNotEmpty(strCategoryOrRole) Then
		'=== Click on Docs prepared by from the list ====
		GUI_List_ClickRow objGridView,objScrollBar,1,strCategoryOrRole,True,False,False,"Double"
		If(InStr(strCategoryOrRole, "Docs Prepared By") > 0) Then 
		'=== Set Docs prepared by information information ====
			GUI_Image_Click SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").Image("html id:=Rolodex25")
		End If
		If(InStr(strCategoryOrRole, "Title Insurance Company") > 0) Then 
			GUI_Image_Click SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").Image("html id:=Rolodex4")
		End If
		If(InStr(strCategoryOrRole, "Escrow Company") > 0) Then 
			GUI_Image_Click SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0").Image("html id:=Rolodex3")
		End If
		GUI_List_ClickOnCellData objContactList,0,1,True,True,False,"Double"
	
		'=== Copy to settlement provider list ===
		GUI_SwfButton_Click objLoanPage.SwfButton("swfname:=btnCopyProvider")
		If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("Text:=OK"), 90))Then
			GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("Text:=OK")
		End If
		If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("Text:=OK"), 90))Then
			SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("Text:=OK").Highlight
			GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").WinButton("Text:=OK")
		End If
	End If
	FRM_Logger_ReportInfoEvent "Copy Business Contacts", "Business Contacts are copied using Row Id '"&strRowID&"' for the Category Role "&strCategoryOrRole, null
	Set objLoanPage = Nothing
	Set objScrollBar = Nothing
	Set objGridView = Nothing
End Function

'This function is used to set NBO data
'@code
'    BIZ_FileContacts_NonBorrowerOwner(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FileContacts_NonBorrowerOwner(strRowID)
	
	FRM_Logger_ReportInfoEvent "File Contacts", "Set NBO information using Row Id '"&strRowID&"' in the File Contacts datasheet", null
	BIZ_Tools_Open "File Contacts"
	
	Set objData = FRM_DS_GetTestData("Tools_FileContacts", "NonBorrowingOwner", strRowID)
	Set objMainPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")

	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=iconNBOCNew", "index:=0")
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0101.FirstName")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_NBOC01"), FRM_DS_GetValue(objData, "NBOC0101.FirstName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0103.LastName")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_NBOC03"), FRM_DS_GetValue(objData, "NBOC0103.LastName")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0105.Address")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_FR0104"), FRM_DS_GetValue(objData, "NBOC0105.Address")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0106.City")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_FR0106"), FRM_DS_GetValue(objData, "NBOC0106.City")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0107.State")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_FR0107"), FRM_DS_GetValue(objData, "NBOC0107.State")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0108.Zip")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_NBOC08"), FRM_DS_GetValue(objData, "NBOC0108.Zip")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0110.HomePhone")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_NBOC10"), FRM_DS_GetValue(objData, "NBOC0110.HomePhone")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0111.Email")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_NBOC11"), FRM_DS_GetValue(objData, "NBOC0111.Email")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0113.BusinessPhone")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_NBOC13"), FRM_DS_GetValue(objData, "NBOC0113.BusinessPhone")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0114.Cell")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_NBOC14"), FRM_DS_GetValue(objData, "NBOC0114.Cell")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0115.Fax")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=l_NBOC15"), FRM_DS_GetValue(objData, "NBOC0115.Fax")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "NBOC0116.DOB")) Then
		GUI_WebEdit_Set objMainPage.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "NBOC0116.DOB")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VestingType")) Then
		GUI_WebList_Select objMainPage.WebList("html id:=DropdownBox1"), FRM_DS_GetValue(objData, "VestingType")
	End If
	
End Function

'@}

''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\FileContacts.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\FundingWorksheet.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Tools_FundingWorkSheet BIZ_Tools_FundingWorkSheet
'
' List of functions here
' @code
'
'	Function BIZ_FundingWorksheet_SelectTemplate(strFundingTemplate)
'   Function BIZ_FundingWorksheet_SetFundingClosing(strRowID)
'   Function BIZ_FundingWorksheet_SetFundingSource(strRowID)
'   Function BIZ_FundingWorksheet_SetWireInformation(strRowID)
'   Function BIZ_FundingWorksheet_CheckFeeLines()
'   Function BIZ_Workflow_FundingWorksheet_ValidateCDLine(strRowID)
'   Function BIZ_Workflow_FundingWorksheet_ValidateItemizationLine(strRowID)
'   Function BIZ_Workflow_FundingWorksheet_ValidateFeeDescription(strRowID)
'   Function BIZ_Workflow_FundingWorksheet_ValidatePaidBy(strRowID) 
'   Function BIZ_Workflow_FundingWorksheet_ValidatePaidTo(strRowID)
'   Function BIZ_Workflow_FundingWorksheet_ValidateAmount(strRowID)
'   Function BIZ_Workflow_FundingWorksheet_ValidateFundingWorkSheet (strRowID)
'	Function BIZ_WorkFlow2015Itemization_OverWireAmtNull_FundingBalancingWorkSheet_Credits_Validate(strRowID)
'	Function BIZ_WorkFlow2015Itemization_FundingBalancingWorksheet_Debits_Validate(strRowID)
'	Function BIZ_FundingWorksheet_FundingFeeTable_FeeDetails_Validate(strRowID)
'	Function BIZ_WorkFlow2015Itemization_FundingBalancingWorksheet_Credits_Validate(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''


' Added by Sameer Gupta as of 12th Jan 2016
'This function is used to select existing Funding Template row from the list
'@code
'    Function BIZ_FundingWorksheet_SelectTemplate(strFundingTemplate)
'@endcode
'@param strFundingTemplate - Funding Template name

Function BIZ_FundingWorksheet_SelectTemplate(strFundingTemplate)

	FRM_Logger_ReportInfoEvent "Select Funding Template", "Select Funding Template with name: " & strFundingTemplate & "", null

	Dim objFundingTemplateList, scrollbarFundingTemplate
	Set objFundingTemplateList = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PurchaseAdviceTemplateSelector").SwfObject("swfname:=gvDirectory")
	Set scrollbarFundingTemplate = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PurchaseAdviceTemplateSelector").SwfScrollBar("swfname:=vPanelScrollBar")

	boolExists = GUI_List_ClickRow (objFundingTemplateList, scrollbarFundingTemplate, "Name", strFundingTemplate, True, False, False, "Single")
	
	Set objFundingTemplateList = Nothing
	Set scrollbarFundingTemplate = Nothing
	
	If boolExists Then
		BIZ_FundingWorksheet_SelectTemplate = True
	Else
		BIZ_FundingWorksheet_SelectTemplate = False
	End If

End Function



'This function is used to set data for Funding Closing section on Funding Worksheet page
'@code
'    Function BIZ_FundingWorksheet_SetFundingClosing(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FundingWorksheet_SetFundingClosing(strRowID)
    FRM_Logger_ReportInfoEvent "Set Funding Closing data", "Set Funding Closing data using Row Id '"&strRowID&"' in the SetFundingClosing datasheet", null

    Dim objFundingWorksheetPage, objData
    Set objFundingWorksheetPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Tools_FundingWorkSheet", "SetFundingClosing", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1991_Funder")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "1991_Funder")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1992_SentToFunder")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "1992_SentToFunder")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1993_FundingType")) Then
		GUI_WinEdit_Set objFundingWorksheetPage.WinEdit("window id:=1001","nativeclass:=Edit"), FRM_DS_GetValue(objData, "1993_FundingType")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1994_ClearToClose")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "1994_ClearToClose")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1995_ClearedBy")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "1995_ClearedBy")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1996_FundsOrdered")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox9"), FRM_DS_GetValue(objData, "1996_FundsOrdered")
	End If
    
	
    Set objFundingWorksheetPage = Nothing
    Set objData = Nothing	
		
End Function



'This function is used to set data for Funding Source section on Funding Worksheet page
'@code
'    Function BIZ_FundingWorksheet_SetFundingSource(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FundingWorksheet_SetFundingSource(strRowID)
	FRM_Logger_ReportInfoEvent "Set Funding Source data", "Set Funding Source data using Row Id '"&strRowID&"' in the SetFundingClosing datasheet", null

    Dim objFundingWorksheetPage, objData
    Set objFundingWorksheetPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Tools_FundingWorkSheet", "SetFundingSource", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX200_FundingSource")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "VENDX200_FundingSource")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2011_FunderURL")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox40"), FRM_DS_GetValue(objData, "2011_FunderURL")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1997_FundsSent")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox10"), FRM_DS_GetValue(objData, "1997_FundsSent")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1998_CollateralSent")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox14"), FRM_DS_GetValue(objData, "1998_CollateralSent")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1999_FundsReleased")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "1999_FundsReleased")
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2000_Release#")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "2000_Release#")
	End If
    
	
    Set objFundingWorksheetPage = Nothing
    Set objData = Nothing
End Function



'This function is used to set data for Wire Information section on Funding Worksheet page
'@code
'    Function BIZ_FundingWorksheet_SetWireInformation(strRowID)
'@endcode
'@param strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FundingWorksheet_SetWireInformation(strRowID)
	FRM_Logger_ReportInfoEvent "Set Wire Information data", "Set Wire Information data using Row Id '"&strRowID&"' in the SetFundingClosing datasheet", null

    Dim objFundingWorksheetPage, objData
    Set objFundingWorksheetPage = SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objData = FRM_DS_GetTestData("Tools_FundingWorkSheet", "SetWireInformation", strRowID)
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "186_Escrow#")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox13"), FRM_DS_GetValue(objData, "186_Escrow#")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "187_Title#")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox28"), FRM_DS_GetValue(objData, "187_Title#")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2001_WireToCheckbox")) Then
		GUI_WebCheckBox_Set objFundingWorksheetPage.WebCheckBox("html id:=__cid_CheckBox1_Ctrl"), FRM_DS_GetValue(objData, "2001_WireToCheckbox")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX396_ABANumber")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox24"), FRM_DS_GetValue(objData, "VENDX396_ABANumber")
	End If
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX397_AccountNumber")) Then
		GUI_WebEdit_Set objFundingWorksheetPage.WebEdit("html id:=TextBox25"), FRM_DS_GetValue(objData, "VENDX397_AccountNumber")
	End If
    
	
    Set objFundingWorksheetPage = Nothing
    Set objData = Nothing
End Function



'This function is used to select all the fee lines on Funding Worksheet page
'@code
'    Function BIZ_FundingWorksheet_CheckFeeLines()
'@endcode

Function BIZ_FundingWorksheet_CheckFeeLines()
    FRM_Logger_ReportInfoEvent "Check Fee Lines", "Check the checkbox for every fee line on Funding Worksheet page", null

    Dim objFeeList
	Set objLoanPage = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").Swfwindow("swfname:=LoanPage")
    Set objFeeList = objLoanPage.SwfObject("swfname:=gridFees2015")
    For i = 0 To objFeeList.Object.Items.Count-1
        GUI_List_SelectCheckBoxinCell objFeeList, 0, i  
    Next

	strTotalDeduction = GUI_Object_GetPropertyValue(objLoanPage.SwfEdit("Swfname:=textBoxDeduction"), "text")
    
	If(Len(strTotalDeduction) > 0) Then 
		FRM_Logger_ReportPassEvent "Select all the checkboxes under CD line", "Total deductions value is populate when you select all check boxes under CD line", null
	End If
    Set objFeeList = Nothing
	Set objLoanPage = Nothing
End Function



'This function is used to validate CD Line in Tools->Funding Worksheet
'@code
'	Function BIZ_Workflow_FundingWorksheet_ValidateCDLine(strRowID)
'@endcode
'@param  strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

 Function BIZ_Workflow_FundingWorksheet_ValidateCDLine(strRowID)
   
    FRM_Logger_ReportInfoEvent "Validate CD Line", "Validates CD Lines values", Null
    
    '====== Declares the Objects and Variables ======
    Dim objData, strCDLine, intRowCount, intLoop, strTestScriptName
   
   	Set objData   = FRM_DS_GetTestData("Tools_FundingWorksheet", "VerifyFeeDetails", strRowID)  
   	strCDLine = Split(FRM_DS_GetValue(objData, "CD_Line"),";")
	strTestScriptName = FRM_DS_GetValue(objData,"TestScriptName")
	
	'====== Gives number of RowCount ======
	intRowCount = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"))
	
	'====== Validate CD Line ======
	Select Case strTestScriptName
		Case "Workflow_CDLine1"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"CD Line #", strCDLine(intLoop-1)
				If intLoop = intRowCount-1  Then Exit For
			Next
		Case "Workflow_CDLine2"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop,"CD Line #", strCDLine(intLoop-1)
				If intLoop = 2 Then Exit For
			Next
		Case else
			FRM_Logger_ReportInfoEvent "Validate", "Validation not required as values are null", Null 
	End Select
		
	'====== Releases the Objects ======
   	Set objData = Nothing
   	
 End Function
  
  
  
'This function is used to validate Itemization Line in Tools->Funding Worksheet
'@code
'	Function BIZ_Workflow_FundingWorksheet_ValidateItemizationLine(strRowID)
'@endcode
'@param  strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet
   
 Function BIZ_Workflow_FundingWorksheet_ValidateItemizationLine(strRowID)
   
    FRM_Logger_ReportInfoEvent "Validate Itemization Line", "Validates Itemization Lines values", Null
   
    '====== Declares the Objects and Variables ======
    Dim objData, strItemization, intRowCount, intLoop, strTestScriptName
   	
   	Set objData   = FRM_DS_GetTestData("Tools_FundingWorksheet", "VerifyFeeDetails", strRowID) 
    strItemization = Split(FRM_DS_GetValue(objData, "Itemization_Line"),";")
    strTestScriptName = FRM_DS_GetValue(objData,"TestScriptName")
    
	'====== Gives number of RowCount ======
	intRowCount = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"))
	
	'====== Validate Itemization Line ======
	Select Case strTestScriptName
		Case "Workflow_CDLine1"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"Itemization Line #", strItemization(intLoop-1)
				If intLoop = intRowCount-1  Then Exit For
			Next
		Case "Workflow_CDLine2"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop,"Itemization Line #", strItemization(intLoop-1)
				If intLoop = 2 Then Exit For
			Next
		Case else
			FRM_Logger_ReportInfoEvent "Validate", "Validation not required as values are null", Null 
	End Select
   	
   	'====== Releases the Objects ======
   	Set objData = Nothing
   	
 End Function
   
   
   
'This function is used to validate Fee Description in Tools->Funding Worksheet
'@code
'	 Function BIZ_Workflow_FundingWorksheet_ValidateFeeDescription(strRowID)
'@endcode
'@param  strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet
     
Function BIZ_Workflow_FundingWorksheet_ValidateFeeDescription(strRowID)

    FRM_Logger_ReportInfoEvent "Validate  FeeDescription", "Validates FeeDescription values", Null
	
	'====== Declares the Objects and Variables ======
	Dim objData, strFeeDescription, intRowCount, intLoop, strTestScriptName
	
	Set objData   = FRM_DS_GetTestData("Tools_FundingWorksheet", "VerifyFeeDetails", strRowID)
    strFeeDescription = Split(FRM_DS_GetValue(objData, "Fee_Description"),";")
    strTestScriptName = FRM_DS_GetValue(objData,"TestScriptName")
    
	'====== Gives number of RowCount ======
	intRowCount = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"))
	
	'====== Validate Fee Description ======
	Select Case strTestScriptName
		Case "Workflow_CDLine1"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"Fee Description", strFeeDescription(intLoop-1)
				If intLoop = intRowCount-1  Then Exit For
			Next
		Case "Workflow_CDLine2"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop,"Fee Description", strFeeDescription(intLoop-1)
				If intLoop = 2 Then Exit For
			Next
		Case else
			FRM_Logger_ReportInfoEvent "Validate", "Validation not required as values are null", Null 
	End Select
	
	'====== Releases the Objects ======
	Set objData = Nothing
	
End Function


  
'This function is used to validate Paid By Tools->Funding Worksheet
'@code
'	 Function BIZ_Workflow_FundingWorksheet_ValidatePaidBy(strRowID) 
'@endcode
'@param  strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Workflow_FundingWorksheet_ValidatePaidBy(strRowID) 
	
	FRM_Logger_ReportInfoEvent "Validate  PaidBy", "Validates PaidBy values", Null
	
    '====== Declares the Objects and Variables ======	
	Dim objData, strPaidBy, intRowCount, intLoop, strTestScriptName

    Set objData   = FRM_DS_GetTestData("Tools_FundingWorksheet", "VerifyFeeDetails", strRowID)
    strPaidBy = Split(FRM_DS_GetValue(objData, "PaidBy"),";")
    strTestScriptName = FRM_DS_GetValue(objData,"TestScriptName")
    
    '====== Gives number of RowCount ======
    intRowCount = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"))
    
    
    Select Case strTestScriptName
     
        '====== Validates POC and PAC of Lender, Broker and Others along with Paid By ======
		Case "Workflow_CDLine1"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"Paid By", strPaidBy(intLoop-1)
				Select Case strPaidBy(intLoop-1)
					Case "Lender"
						GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"POC Lender", FRM_DS_GetValue(objData, "POCLender")
						GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"PAC Lender", FRM_DS_GetValue(objData, "PACLender")
					Case "Broker"
						GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"POC Broker", FRM_DS_GetValue(objData, "POCBroker")
						GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"PAC Broker", FRM_DS_GetValue(objData, "PACBroker")
					Case "Other"
						GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"POC Other", FRM_DS_GetValue(objData, "POCOther")
						GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"PAC Other", FRM_DS_GetValue(objData, "PACOther")
					Case Else
						FRM_Logger_ReportInfoEvent "Validate", "strPaidBy is Null and Validation is not required", Null
				End Select
				If intLoop = intRowCount-1  Then Exit For
				Next 
			
			'====== Validate Paid By ======			
			Case "Workflow_CDLine2"
				For intLoop = 1 To intRowCount Step 1
					GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop,"Paid To", strPaidTo(intLoop-1)
					If intLoop = 2 Then Exit For
				Next
			Case else
			 	FRM_Logger_ReportInfoEvent "Validate", "Validation not required as values are null", Null
	End Select
	
    '====== Releases the Objects ======
	Set objData = Nothing

End Function



'This function is used to validate Paid To Tools->Funding Worksheet
'@code
'	 Function BIZ_Workflow_FundingWorksheet_ValidatePaidTo(strRowID) 
'@endcode
'@param  strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Workflow_FundingWorksheet_ValidatePaidTo(strRowID)
 
    FRM_Logger_ReportInfoEvent "Validate  paidTo", "Validates PaidBy values", Null
  
    '====== Declares the Objects and Variables ======
	Dim objData, strPaidBy, intRowCount, intLoop, strTestScriptName
 
   	Set objData   = FRM_DS_GetTestData("Tools_FundingWorksheet", "VerifyFeeDetails", strRowID)
	strPaidTo = Split(FRM_DS_GetValue(objData, "PaidTo"),";")
	strTestScriptName = FRM_DS_GetValue(objData,"TestScriptName")
	
	'====== Gives number of RowCount ======
	intRowCount = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"))
	
	'====== Validate Paid To ======
	Select Case strTestScriptName
		Case "Workflow_CDLine1"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"Paid To", strPaidTo(intLoop-1)
				If intLoop = intRowCount-1  Then Exit For
			Next
		Case "Workflow_CDLine2"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop,"Paid To", strPaidTo(intLoop-1)
				If intLoop = 2 Then Exit For
			Next
		Case else
			FRM_Logger_ReportInfoEvent "Validate", "Validation not required as values are null", Null 
	End Select
	
	'====== Releases the Objects ======
	Set objData = Nothing
	
End Function



'This function is used to validate Amount Tools->Funding Worksheet
'@code
'	Function BIZ_Workflow_FundingWorksheet_ValidateAmount(strRowID) 
'@endcode
'@param  strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet

 Function BIZ_Workflow_FundingWorksheet_ValidateAmount(strRowID)
 
	FRM_Logger_ReportInfoEvent "Validate  Amount", "Validates Amount values", Null
    
    '====== Declares the Objects and Variables ======
	Dim objData, strPaidBy, intRowCount, intLoop, strTestScriptName
	
 	Set objData   = FRM_DS_GetTestData("Tools_FundingWorksheet", "VerifyFeeDetails", strRowID)
    strAmount = Split(FRM_DS_GetValue(objData, "Amount"),";")
    strTestScriptName = FRM_DS_GetValue(objData,"TestScriptName")
    
	'====== Gives number of RowCount ======
	intRowCount = GUI_List_GetNumberofRows(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"))
	
	'====== Validate Amount ======
	Select Case strTestScriptName
		Case "Workflow_CDLine1"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop-1,"Amount", strAmount(intLoop-1)
				If intLoop = intRowCount-1  Then Exit For
			Next
		Case "Workflow_CDLine2"
			For intLoop = 1 To intRowCount Step 1
				GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridFees2015"), intLoop,"Amount", strAmount(intLoop-1)
				If intLoop = 2 Then Exit For
			Next
		Case else
			FRM_Logger_ReportInfoEvent "Validate", "Validation not required as values are null", Null
	End Select
    
    '====== Releases the Objects ======
    Set objData = Nothing
 	
 End Function
 

 
 'This function is used to validate Funding Worksheet
'@code
'	Function BIZ_Workflow_FundingWorksheet_ValidateFundingWorkSheet(strRowID) 
'@endcode
'@param  strRowID - The numeric or string unique ID that used to find the line in the data spreadsheet
 
 Function BIZ_Workflow_FundingWorksheet_ValidateFundingWorkSheet(strRowID)
	
	FRM_Logger_ReportInfoEvent "Validate  Funding Worksheet", "Validates Funding Worksheet", Null
	
	'====== Declares the Objects and Variables ======
	Dim objData, intActualTotalDeductions, intExpectedDeductions, intActualLenderCredit, intExpectedCredit, intActualWireAmount, intExpectedAmount
	
	Set objData   = FRM_DS_GetTestData("Tools_FundingWorksheet", "VerifyFeeDetails", strRowID)
 	intActualTotalDeductions = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=textBoxDeduction"), "text")
 	intExpectedDeductions = FRM_DS_GetValue(objData, "TotalDeductions")
 	
 	'====== Verifies the Fee details value ======
 	If intActualTotalDeductions = intExpectedDeductions  Then
	 	FRM_Logger_ReportPassEvent "validate Total Deductions ", "Total Deductions value is same " &intActualTotalDeductions& "and" &intExpectedDeductions, Null
 	Else
	 	FRM_Logger_ReportFailEvent "validate Total Deductions", "Total Deductions value is not same " &intActualTotalDeductions& "and" &intExpectedDeductions, Null
 	End If
 
 	intActualLenderCredit = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=textBoxLenderCredit"), "text")
 	intExpectedCredit = FRM_DS_GetValue(objData, "LenderCredits")
 	
 	'====== Verifies the Lender Credits value ======
 	If intActualLenderCredit = intExpectedCredit Then
 		FRM_Logger_ReportPassEvent "validate Lender Credit ", "Lender Credits value is same " &intActualLenderCredit& "and" &intExpectedCredit, Null
	Else
	 	FRM_Logger_ReportFailEvent "validate Lender Credit", "Lender Credits value is not same " &intActualLenderCredit& "and" &intExpectedCredit, Null
	End If
	
	intActualWireAmount = GUI_Object_GetPropertyValue(SwfWindow("swfname:=MainForm").SwfEdit("swfname:=textBoxWireAmount"), "text")
	intExpectedAmount = FRM_DS_GetValue(objData, "WireTrasnferAmt")
	
	'====== Verifies the Wire Transfer Amount ======
	If intActualWireAmount = intExpectedAmount Then
	 	FRM_Logger_ReportPassEvent "validate Wire Amount ", "Wire Amount value is same " &intActualWireAmount& "and" &intExpectedAmount, Null
	Else
	 	FRM_Logger_ReportFailEvent "validate Wire Amount", "Wire Amount value is not same " &intActualWireAmount& "and" &intExpectedAmount, Null
	End If
	
	'====== Releases the Objects ======
	Set objData = Nothing
	
End Function




'This function is used to Validate the Credit items in grid of Funding Balancing WorkSheet for OveWire amount Null
'@code
'    BIZ_WorkFlow2015Itemization_OverWireAmtNull_FundingBalancingWorkSheet_Credits_Validate(strRowID)
'@endcode
'@param strRowID - RowId of test data in Excel spread sheet
	
Function BIZ_WorkFlow2015Itemization_OverWireAmtNull_FundingBalancingWorkSheet_Credits_Validate(strRowID)
	
	FRM_Logger_ReportPassEvent "Verify Credit grid items for OverWire Amount Null in Funding Balancing WorkSheet","Verify using the data in "&strRowID&" of sheet 'ValidateCredits' in excel spreadsheet'",Null
	
	Set objData = FRM_DS_GetTestData("Tools_FundingBalancingWorKSheet", "ValidateCredits", strRowID)
	
	If GUI_List_VerifyItemExists(SwfWindow("swfname:=MainForm").SwfList("swfname:=emToolMenuBox", "index:=0"),"Funding Balancing Worksheet") Then
		BIZ_Tools_Open "Funding Balancing Worksheet"
	
		'Validate Total Credits
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxCredits"),FRM_DS_GetValue(objData,"Credits_TotalCredits_Null"),"Total Credits"
	
		If GUI_List_TextExists(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridCredit"),"Credit Description","Wire Transfer Amount") Then
			intRowIndex = GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridCredit"), "Credit Description","Wire Transfer Amount")
			GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridCredit"), intRowIndex, "Amount",FRM_DS_GetValue(objData,"Wiretransfer_Amt_Null")
		Else
			FRM_Logger_ReportFailEvent "Verify Credits Side of Sheet","Verify Wire Transfer Amount",Null
		End If
	Else
		FRM_Logger_ReportFailEvent "Verify the 'Funding Worksheet' form under tools tab","Required form doesn't exists",Null
	End If
	
	Set objData = Nothing
	
End Function




'This function is used to Validate items in Debit Grid of FundingBalancing Worksheet
'@code
'    BIZ_WorkFlow2015Itemization_FundingBalancingWorksheet_Debits_Validate(strRowID)
'@endcode
'@param strRowID - RowId of test data in Excel spread sheet

Function BIZ_WorkFlow2015Itemization_FundingBalancingWorksheet_Debits_Validate(strRowID)

	FRM_Logger_ReportInfoEvent "Verify Debits side of the Funding Balancing WorkSheet","Verify Total Loan Amount and Debits",Null
	
	Dim  objData
	
	Set objData = FRM_DS_GetTestData("Tools_FundingBalancingWorKSheet", "ValidateDebits", strRowID)
	
	If GUI_List_VerifyItemExists(SwfWindow("swfname:=MainForm").SwfList("swfname:=emToolMenuBox", "index:=0"),"Funding Balancing Worksheet") Then
		BIZ_Tools_Open "Funding Balancing Worksheet"
		
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Debits_TotalLoanAmt")) Then
		'Validate Total Loan Amount
		If GUI_List_TextExists(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridDebit"),"Debit Description","Total Loan Amount") Then
			intRowIndex = GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridDebit"), "Debit Description", "Total Loan Amount")
			GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridDebit"), intRowIndex, "Amount", FRM_DS_GetValue(objData,"Debits_TotalLoanAmt")
		Else
			FRM_Logger_ReportFailEvent "Verify Total Loan Amount","Column name doesn't exits to find Total Loan Amount",Null
		End If
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Debits_TotalDebits")) Then
		'Validate Total Debits
		GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxDebits"), FRM_DS_GetValue(objData,"Debits_TotalDebits"),"Total Debits"
	End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"Debits_LenderCredits")) Then
		'Validate Lender Credits Amount
		If GUI_List_TextExists(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridDebit"),"Debit Description","Lender Credits") Then
			intRowIndex = GUI_List_GetRowIndex(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridDebit"), "Debit Description", "Lender Credits")
			GUI_List_ValidateCellData SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridDebit"), intRowIndex, "Amount", FRM_DS_GetValue(objData,"Debits_LenderCredits")
		Else
			FRM_Logger_ReportFailEvent "Verify Lender Credits Amount","Column name doesn't exits to find Lender Credits Amount",Null
		End If
	End If 
	Else
		FRM_Logger_ReportFailEvent "Verify the 'Funding Balancing Worksheet' form under tools tab","Required form doesn't exists",Null
	End If
	
	Set objData = Nothing
	
End Function 




'This function is to validate the fee details in funding fee table in fundingworksheet
'@code
'   BIZ_FundingWorksheet_FundingFeeTable_FeeDetails_Validate(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_FundingWorksheet_FundingFeeTable_FeeDetails_Validate(strRowID)
	
	FRM_Logger_ReportInfoEvent "Validate the WorkFlow of Fee Details from 2015 Itemization to Funding Worksheet","Verify using the "&strRowID&" data in sheet VerifyFeeDetails",Null
	
	Dim objFundingWSTbl,intItemsCount,arrFundingWrksheetColumnNames,intRowCount,intColumnCount,strColumnNames,strCDLine,strItemizationLine,strFeeDescription,strPaidBy,strPaidTo,intAmount,intPACBroker,intPACLender,intPACOther,intPOCLender,intPOCOther,intPOCBroker,arrRowId
	
	Set objFundingWSTbl = SwfWindow("swfname:=MainForm").SwfObject("swfname:=borderPanel1").SwfObject("swfname:=gridFees2015")
	Set objDataFund 	= FRM_DS_GetTestData("Tools_FundingWorkSheet", "VerifyFeeDetails", strRowID)
	
	GUI_List_Select SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"), "Tools"
	 
	If GUI_List_VerifyItemExists(SwfWindow("swfname:=MainForm").SwfList("swfname:=emToolMenuBox", "index:=0"),"Funding Worksheet") Then
		BIZ_Tools_Open "Funding Worksheet"
	Else
		FRM_Logger_ReportFailEvent "Verify the 'Funding Worksheet' form under tools tab","Required form doesn't  exists",Null
	End If

	intRowCount = GUI_List_GetNumberofRows(objFundingWSTbl)
	arrRowId  = Split(FRM_DS_GetValue(objDataFund, "FundingSheet_RowIDs"),";")
	
	If intRowCount = Ubound(arrRowId)+1  Then
	
		For intItemsCount = 0 to intRowCount-1 Step 1 
			Set objData = FRM_DS_GetTestData("Tools_FundingWorkSheet", "VerifyFeeDetails", arrRowId(intItemsCount))
			
			strColumnNames 		= FRM_DS_GetValue(objData, "FundingWrkSheetColName")
			strCDLine	   		= FRM_DS_GetValue(objData, "CD_Line")
			strItemizationLine  = FRM_DS_GetValue(objData, "Itemization_Line")
			strFeeDescription   = FRM_DS_GetValue(objData, "Fee_Description")
			strPaidBy           = FRM_DS_GetValue(objData, "PaidBy")
			strPaidTo			= FRM_DS_GetValue(objData, "PaidTo")
			intAmount			= FRM_DS_GetValue(objData, "Amount")
			intPACBroker		= FRM_DS_GetValue(objData, "PACBroker")
			intPACLender		= FRM_DS_GetValue(objData, "PACLender")
			intPACOther			=  FRM_DS_GetValue(objData, "PACOther")
			intPOCLender	    = FRM_DS_GetValue(objData, "POCLender")
			intPOCOther		    = FRM_DS_GetValue(objData, "POCOther")
			intPOCBroker		= FRM_DS_GetValue(objData, "POCBroker")
			
			arrFundingWrksheetColumnNames =Split(strColumnNames,";")
			
			For intColumnCount = 0 To UBound(arrFundingWrksheetColumnNames) Step 1
				Select Case arrFundingWrksheetColumnNames(intColumnCount)
					Case "CD Line #"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CD_Line")) Then
					  	GUI_List_ValidateCellData objFundingWSTbl, intItemsCount,"CD Line #", strCDLine
					  End If
					Case "Itemization Line #"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Itemization_Line")) Then
					  	GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"Itemization Line #", strItemizationLine
					  End If 
					Case "Fee Description"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Fee_Description")) Then
					  	GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"Fee Description", strFeeDescription
					  End If
					Case "Paid By"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaidBy")) Then
					 	 GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"Paid By",strPaidBy
					  End If 
					Case "Paid To"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PaidTo")) Then
					     GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"Paid To", strPaidTo
					  End If 
					Case "Amount"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Amount")) Then
					  	GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"Amount", intAmount
					  End If 
					Case "POC Broker"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "POCBroker")) Then
					 	 GUI_List_ValidateCellData objFundingWSTbl,intItemsCount, "POC Broker",intPOCBroker
					  End If
					Case "POC Lender"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "POCLender"))  Then
					 	 GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"POC Lender", intPOCLender
					  End If
					Case "POC Other"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "POCOther")) Then
					  	GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"POC Other", intPOCOther
					  End If 
					Case "PAC Broker"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PACBroker")) Then
					  	GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"PAC Broker",intPACBroker
					  End If 
					Case "PAC Lender"
					  If UTIL_String_IsNotEmpty( FRM_DS_GetValue(objData, "PACLender")) Then
					  	GUI_List_ValidateCellData objFundingWSTbl,intItemsCount,"PAC Lender",intPACLender
					  End If 
					Case "PAC Other"
					  If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PACOther")) Then
					  	GUI_List_ValidateCellData objFundingWSTbl, intItemsCount, "PAC Other", intPACOther
					  End If
					Case Else
					 FRM_Logger_ReportFailEvent "Validate the Cell value in Funding sheet","No column name found",Null
				End Select 
			 Next			
		Next
	Else
		FRM_Logger_ReportFailEvent "Validate the Cell value in Funding sheet","Data in Excel spread sheet and UI mismatch",Null	
	End If
	
	Set objFundingWSTbl = Nothing
	Set objData 		= Nothing
	Set objDataFund     = Nothing
	
End Function



'This function is used to Validate Debits side of Funding Balancing WorkSheet
'@code
'    BIZ_WorkFlow2015Itemization_FundingBalancingWorksheet_Credits_Validate(strRowID)
'@endcode
'@param strRowID - RowId of test data in Excel spread sheet

Function BIZ_WorkFlow2015Itemization_FundingBalancingWorksheet_Credits_Validate(strRowID)
	
	FRM_Logger_ReportInfoEvent "Verify Credit side Wire Transfer Amount and Total Credits","Verification of WireTransfer amount and Total credits for OverWire Amt 50 in Funding Balancing Worksheet",Null
	
	Dim objData,objCreditGrid

	Set objData 	  = FRM_DS_GetTestData("Tools_FundingBalancingWorKSheet", "ValidateCredits", strRowID)
	Set objCreditGrid = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridCredit")

	If GUI_List_TextExists(objCreditGrid,"Credit Description","Wire Transfer Amount") Then
		intRowIndex = GUI_List_GetRowIndex(objCreditGrid, "Credit Description","Wire Transfer Amount")
		FRM_Logger_ReportInfoEvent "Verify Credits Side Wire Transfer Amount","Verify Wire Transfer Amount",Null
		GUI_List_ValidateCellData objCreditGrid, intRowIndex, "Amount",FRM_DS_GetValue(objData,"WireTransferAmount")
	Else
		FRM_Logger_ReportFailEvent "Verify Credits Side of Sheet","Verify Wire Transfer Amount",Null
	End If

	'Validate Total Credits
	GUI_Object_ValidateText  SwfWindow("swfname:=MainForm").SwfEdit("swfname:=boxCredits"),FRM_DS_GetValue(objData,"TotalCredits"),"Total Credits"
	
	Set objData 	  = Nothing
	Set objCreditGrid = Nothing
	
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\FundingWorksheet.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\LockRequestForm.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Tools_LockRequestForm BIZ_Tools_LockRequestForm
'
' List of functions here
' @code
'
'	Function BIZ_LockRequestForm_SetRequest(strRowID)
'	Function BIZ_LockRequestForm_SetProperty(strRowID)
'	Function BIZ_LockRequestForm_SetTransactionDetails(strRowID)
'	Function BIZ_LockRequestForm_SetRateLockRequest(strRowID)
'   Function BIZ_LockRequestForm_SubmitRequest(strExitLoanorKeepLoanOpen)
'	Function BIZ_LockRequestForm_SelecttheProgramIDAndPrice(strRowID)
'	Function BIZ_LoanRequestForm_SetCreditScoreInProductandPricing(strRowID)
'	Function BIZ_LockRequestForm_ProductNPricingFromGetPricing(strRowID, strFloatOrUpload)
'	Function BIZ_LockRequestForm_PerformProductNPricing(strRowID, strFloatOrUpload)
'	Function BIZ_LockRequestForm_ImportPricing(strRowID, strFloatOrUpload)
'
'@endcode
' @{
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'This function is for Set value for Request Details section on Lock Request Form
'@code
'    BIZ_LockRequestForm_SetRequest(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LockRequestForm_SetRequest(strRowID)
    FRM_Logger_ReportInfoEvent "On Lock Request Form set request Details", "Set Data for Lock Request using Row Id '"&strRowID&"' in the SetData datasheet", null	
    
    Dim ObjLockRequestForm,objData
    Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_LockRequestForm", "SetRequest", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DocumentationType")) Then
        GUI_WinEdit_Set ObjLockRequestForm.WinEdit("nativeclass:=Edit", "index:=0"), FRM_DS_GetValue(objData, "DocumentationType")
    End If 
    Set ObjLockRequestForm = Nothing
End Function



'This function is for Set value for Property Details section on Lock Request Form
'@code
'    BIZ_LockRequestForm_SetProperty(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LockRequestForm_SetProperty(strRowID)
    FRM_Logger_ReportInfoEvent "On Lock Request Form set property Details", "Set Data for Lock Request using Row Id '"&strRowID&"' in the SetData datasheet", null	
    
    Dim ObjLockRequestForm,objData
    Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_LockRequestForm", "SetProperty", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3529_NoUnits")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=TextBox116"), FRM_DS_GetValue(objData, "3529_NoUnits")
    End If 
    Set ObjLockRequestForm = Nothing
End Function



'This function is for Set value for Transaction Details section on Lock Request Form
'@code
'    BIZ_LockRequestForm_SetTransactionDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LockRequestForm_SetTransactionDetails(strRowID)
    FRM_Logger_ReportInfoEvent "On Lock Request Form set Transaction Details", "Set Data for Lock Request using Row Id '"&strRowID&"' in the SetData datasheet", null	
    
    Dim ObjLockRequestForm,objData
    Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_LockRequestForm", "SetTransactionDetails", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2961_ImpoundsWaived")) Then
        GUI_WebList_Select ObjLockRequestForm.WebList("html id:=DropdownBox6"), FRM_DS_GetValue(objData, "2961_ImpoundsWaived")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2962_ImpoundTypes")) Then
        GUI_WebList_Select ObjLockRequestForm.WebList("html id:=DropdownBox4"), FRM_DS_GetValue(objData, "2962_ImpoundTypes")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2963_PrepayPenalty")) Then
        GUI_WebList_Select ObjLockRequestForm.WebList("html id:=DropdownBox7"), FRM_DS_GetValue(objData, "2963_PrepayPenalty")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3892_NoClosingCost")) Then
        GUI_WebList_Select ObjLockRequestForm.WebList("html id:=DropdownBox9"), FRM_DS_GetValue(objData, "3892_NoClosingCost")
    End If 
    
    Set ObjLockRequestForm = Nothing
    Set ObjLockRequestForm = Nothing
End Function



'This function is for Set value for Rate Lick Request section on Lock Request Form
'@code
'    BIZ_LockRequestForm_SetRateLockRequest(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LockRequestForm_SetRateLockRequest(strRowID)
    FRM_Logger_ReportInfoEvent "Set Rate Lock Request", "Set Data for Lock Request using Row Id '"&strRowID&"' in the SetData datasheet", null	
    
    Dim ObjLockRequestForm,objData
    Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_LockRequestForm", "SetRateLockRequest", strRowID)
  
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2092_BaseRate")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=l_2092"), FRM_DS_GetValue(objData, "2092_BaseRate")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3847_UndiscountedRate")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=TextBox44"), FRM_DS_GetValue(objData, "3847_UndiscountedRate")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3872_StartingAdjustRate")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=textbox45"), FRM_DS_GetValue(objData, "3872_StartingAdjustRate")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3874_StartingAdjustPrice")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=textbox46"), FRM_DS_GetValue(objData, "3874_StartingAdjustPrice")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2101_BasePrice")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=l_2101"), FRM_DS_GetValue(objData, "2101_BasePrice")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2088_RateSheetID")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=l_2088"), FRM_DS_GetValue(objData, "2088_RateSheetID")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2089_LockDate")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=l_2089"), FRM_DS_GetValue(objData, "2089_LockDate")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2090_LockDays")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=l_2090"), FRM_DS_GetValue(objData, "2090_LockDays")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2091_LockExpirationDate")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=l_2091"), FRM_DS_GetValue(objData, "2091_LockExpirationDate")
    End If 

    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3254_LastRateSetDate")) Then
        GUI_WebEdit_Set ObjLockRequestForm.WebEdit("html id:=l_3254"), FRM_DS_GetValue(objData, "3254_LastRateSetDate")
    End If 
    
    Set ObjLockRequestForm = Nothing
    Set ObjLockRequestForm = Nothing
End Function



'This function is for Clicking the "Submit Request" button on Lock Request Form
'@code
'    BIZ_LockRequestForm_SubmitRequest(strExitLoanorKeepLoanOpen)
'@endcode
'@param strExitLoanorKeepLoanOpen The String "ExitLoan" or "KeepLoanOpen"

Function BIZ_LockRequestForm_SubmitRequest(strExitLoanorKeepLoanOpen)
	FRM_Logger_ReportInfoEvent "Click Submit Request","Click Submit Request Button on Lock Request Form",null	

    Dim ObjLockRequestForm,objLQProcessDialog
    Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")
    
    GUI_WebButton_Click objLockRequestForm.WebButton("html id:=btnNewLock")
    Set objLQProcessDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog")
    IF strExitLoanorKeepLoanOpen="ExitLoan" Then
    	GUI_SwfButton_Click objLQProcessDialog.SwfButton("swfname:=exitBtn")
    Else
    	GUI_SwfButton_Click objLQProcessDialog.SwfButton("swfname:=keepBtn")    
    End If
    
	Set ObjLockRequestForm = Nothing
	Set objLQProcessDialog = Nothing
End Function



'This function is used to set values to Manage Borrowers Screen in Lock Request Form
'@code
'    BIZ_LockRequestForm_SetManageBorrowers(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LockRequestForm_SetManageBorrowers(strRowID)
	FRM_Logger_ReportInfoEvent "Set Manage Borrowers", "Set Data for Lock Request using Row Id '"&strRowID&"' in the SetData datasheet", null	

    Dim ObjLockRequestForm,objLQProcessDialog
	Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")
	Set objData = FRM_DS_GetTestData("Tools_LockRequestForm", "SetManageBorrowers", strRowID)
	
	'Clicks on Manage Borrowers
	GUI_WebButton_Click ObjLockRequestForm.WebButton("html id:=Button6")
	Set BorrowerPairForm = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=SwapBorrowerPairForm")
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Borrower_SelfEmployed")) Then
		GUI_SwfCheckbox_Set BorrowerPairForm.SwfCheckBox("swfname:=chkBorrSelfEmployed"),FRM_DS_GetValue(objData, "Borrower_SelfEmployed")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrower_SelfEmployed")) Then
		GUI_SwfCheckbox_Set BorrowerPairForm.SwfCheckBox("swfname:=chkCoBorrSelfEmployed"), FRM_DS_GetValue(objData, "CoBorrower_SelfEmployed")
	End if
	GUI_SwfButton_Click BorrowerPairForm.SwfButton("swfname:=btnOK")
	FRM_Perf_EncompassSynchronization()
	GUI_SwfButton_Click ObjLockRequestForm.WebButton("name:=Submit Request")
	'GUI_Dialog_Encompass_OK("")
	
	Set ObjLockRequestForm = Nothing
	Set objData = Nothing
End Function



'This function is used for selecting the Program Name and Product Price
'@code
'    BIZ_LockRequestForm_SelecttheProgramIDAndPrice(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LockRequestForm_SelecttheProgramIDAndPrice(strRowID)

	Dim objData, objProgIDs, objProgramPage
	Set objData = FRM_DS_GetTestData("Tools_LockRequestForm", "SetRateLockRequest", strRowID)
	Set objProgramPage = SwfWindow("swfname:=MainForm").Page("index:=0")
	ProgramName = FRM_DS_GetValue(objData, "ProgramID")
	if(objProgramPage.WebElement("class:=progtext","html id:=","html tag:=SPAN","index:=0").Exist(200))then 
		If(objProgramPage.WebElement("innertext:=\+Show all programsShow Ineligible","html tag:=TD").Exist(5))then
			objProgramPage.WebElement("innertext:=\+Show all programsShow Ineligible","html tag:=TD").Click
		End If
		'Find all the Program ID Links
		Set oDesc = Description.Create
		oDesc("micclass").value = "WebElement"
		oDesc("class").value = "progtext"
		oDesc("html id").value = ""
		oDesc("html tag").value = "SPAN"


		Set objProgIDs = objProgramPage.ChildObjects(oDesc)
		'objProgIDs.Count value has the number of Program id links in the page
		For ProgIDCount = 0 to objProgIDs.Count - 1				
			ProgramID = objProgramPage.WebElement("class:=progtext","html id:=","html tag:=SPAN","index:="&ProgIDCount).GetROProperty("outertext")
			If(InStr(ProgramName, "Any Program") > 0) then 
				If(ProgIDCount = 1) then 
					Exit For
				End if
			Else
				If(InStr(ProgramID, ProgramName) > 0) then 
					Exit For
				End If
			End If
		Next
    
    	Set oDesc = Description.Create
    	oDesc("html id").value = ""
    	oDesc("html tag").value = "A"
    	oDesc("href").value = "#"
    	GuidelinesCount = 0
    	Set ChildObjects = objProgramPage.ChildObjects(oDesc)
    	For LinkText = 0 To ChildObjects.Count -1 Step 1
		   If(Len(ChildObjects(LinkText).GetROProperty("text")) = 5 and InStr(ChildObjects(LinkText).GetROProperty("text"), ".") > 0) Then
			   		ChildObjects(LinkText).Click
				  	Exit For
		   End If
		Next 
    End if
	If(InStr(ProgramName,"Any Program") > 0) then
		FRM_Logger_ReportPassEvent "Select the Program ID and Price", "Pricing is selected from the Program list", null
		BIZ_LockRequestForm_SelecttheProgramIDAndPrice = True
	Else
		if(InStr(ProgramID, ProgramName) > 0) then 
			FRM_Logger_ReportPassEvent "Select the Program ID and Price", ProgramName & " selected from the Program list", null
			BIZ_LockRequestForm_SelecttheProgramIDAndPrice = True
		Else
			FRM_Logger_ReportFailEvent "Select the Program ID and Price", ProgramName & " is not selected from the Program list", null
			BIZ_LockRequestForm_SelecttheProgramIDAndPrice = False
		End if
	End if
End Function



'This function is used for selecting the Program Name and Product Price
'@code
'    BIZ_LoanRequestForm_SetCreditScoreInProductandPricing(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LoanRequestForm_SetCreditScoreInProductandPricing(strRowID)
	
	Dim objProductAndPricingService
	Set objData = FRM_DS_GetTestData("Tools_LockRequestForm", "SetRateLockRequest", strRowID)
	
	'Enters the Credit Score and Clicks Next Button and updates the encopass details
	Set objProductAndPricingService = SwfWindow("swfname:=MainForm").Page("title:=Encompass Product and Pricing Service")
	Set objProgramPage = SwfWindow("swfname:=MainForm").Page("index:=0")
	If(objProgramPage.WebElement("class:=progtext","html id:=","html tag:=SPAN","index:=0").Exist(20))then
		Exit Function
	End If
	If(objProgramPage.WebList("html id:=QualType").Exist(20))Then
		objProductAndPricingService.WebButton("name:=Next").Submit
	End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "Borrower_CreditScore")) Then
		If(GUI_Object_IsExistX(objProductAndPricingService.WebEdit("name:=Credit","type:=text","html tag:=INPUT","index:=0"), 200) = True)Then 
			GUI_WebEdit_Set objProductAndPricingService.WebEdit("name:=Credit","type:=text","html tag:=INPUT","index:=0"), FRM_DS_GetValue(objData, "Borrower_CreditScore")
		Else
			Exit Function
		End If	
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "CoBorrower_CreditScore")) Then
		If(GUI_Object_IsExistX(objProductAndPricingService.WebEdit("name:=Credit","type:=text","html tag:=INPUT","index:=1"), 20) = True)Then
			GUI_WebEdit_Set objProductAndPricingService.WebEdit("name:=Credit","type:=text","html tag:=INPUT","index:=1"), FRM_DS_GetValue(objData, "CoBorrower_CreditScore")
		End If
	End If
	GUI_Object_WaitTillExistX objProductAndPricingService.WebButton("name:=Next"), 240
	objProductAndPricingService.WebButton("name:=Next").Submit
	Wait 4
	objProgramPage.WebButton("name:=Next","type:=submit","html tag:=INPUT").Highlight
	objProgramPage.WebButton("name:=Next","type:=submit","html tag:=INPUT").Submit
	Set objProductAndPricingService = Nothing
	
End Function



'This function is used for selecting the Program Name and Product Price
'@code
'    BIZ_LockRequestForm_ProductNPricingFromGetPricing(strRowID, strFloatOrUpload)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LockRequestForm_ProductNPricingFromGetPricing(strRowID, strFloatOrUpload)

	'Go to Tools->Lock Request Form
	BIZ_Tools_Open("Lock Request Form")

	'Checks If Lock Request form is opened
	GUI_Object_ValidateExists SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfLabel("swfname:=labelTitle","text:=Lock Request Form"), 120, "Lock Request Form is open"
	Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")
    'Get Pricing Details
	GUI_SwfButton_Click ObjLockRequestForm.WebButton("name:=Get Pricing")
	
	GUI_Dialog_Encompass_YesX 30, ""
	
	BIZ_LockRequestForm_ProductNPricingFromGetPricing = BIZ_LockRequestForm_PerformProductNPricing(strRowID, strFloatOrUpload)
	
	Set objErrorDialog = SwfWindow("swfname:=MainForm").Dialog("text:=Encompass Product and Pricing Service Product and Pricing")
	If(GUI_Object_IsExistX(objErrorDialog, 20)) then 
		strDialogText = objErrorDialog.Static("nativeclass:=Static","index:=1").GetROProperty("text")
		If(InStr(strDialogText, "Internal Server Error") > 0) then
			FRM_Logger_ReportFailEvent "Submit Product and Pricing", "Encompass product and pricing service window is displaying Internal Server Error", null	
			GUI_WinButton_Click objErrorDialog.WinButton("text:=OK")
			BIZ_LockRequestForm_ProductNPricingFromGetPricing = False
			'====== Logout from Encompass ======
			BIZ_Login_UserLogout()
			Exit Function
		End If
	Else 		
		BIZ_LockRequestForm_SetManageBorrowers strRowID
		If (GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn"), 30)=true) then
				FRM_Logger_ReportPassEvent "Rate Lock LO comp plan Float", "window opens which shows 'exit loan' and 'keep loan open' buttons", null
				GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=LockRequestProcessDialog").SwfButton("swfname:=exitBtn")
		Else
			If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=PreRequiredDialog"), 20)) then 
				FRM_Logger_ReportPassEvent "Submit Lock Request Form", "Mandatory Fields are not entered for the Loan", null
			Else
				If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass").Static("text:=The Lock Request has been submitted outside of Lock Desk Hours and cannot be accepted. Please reprice and resubmit your Lock Request during Lock Desk Hours."))) Then 
					FRM_Logger_ReportFailEvent "Submit Product and Pricing", "The Lock Request has been submitted outside of Lock Desk Hours and cannot be accepted. Please reprice and resubmit your Lock Request during Lock Desk Hours.", null
					GUI_Dialog_Encompass_OK("")
					BIZ_LockRequestForm_ProductNPricingFromGetPricing = False
					'====== Logout from Encompass ======
					BIZ_Login_UserLogout()
					Exit Function
				End If
			
			End if
		End If
	End if
	Set objErrorDialog = Nothing
	 
	GUI_Dialog_Encompass_Yes("")
	GUI_Dialog_Encompass_Yes("")
	wait g_ShortWaitMedium
	If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=StatusOnlineDialog"))) Then 
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=StatusOnlineDialog").Close()
	End If
	BIZ_Loan_MilestoneDiffDialog(30)
	BIZ_LockRequestForm_ProductNPricingFromGetPricing 	= True
	Set objRequest = Nothing
	Set ObjLockRequestForm = Nothing
End Function



'This function is used for selecting the Program Name and Product Price
'@code
'    BIZ_LockRequestForm_PerformProductNPricing(strRowID, strFloatOrUpload)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_LockRequestForm_PerformProductNPricing(strRowID, strFloatOrUpload)
	Set objRequest = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RequestDialog")
	Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")
	If (GUI_Object_IsExistX(objRequest.SwfButton("swfname:=btnContinue"), 120) = True) then 
		FRM_Logger_ReportPassEvent "Click' Get pricing' button and click on Continue in the Product and Pricing Window", "Encompass product and pricing service window is open with user login information", null
		Set objData = FRM_DS_GetTestData("Tools_LockRequestForm", "SetRateLockRequest", strRowID)
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EPPS_UserID")) Then
			GUI_WinEdit_Set objRequest.WinEdit("swfname:=tbLoginName"), FRM_DS_GetValue(objData, "EPPS_UserID")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "EPPS_Password")) Then
			GUI_WinEdit_Set objRequest.WinEdit("swfname:=tbPassword"), FRM_DS_GetValue(objData, "EPPS_Password")
		End If
		GUI_WebButton_Click objRequest.SwfButton("swfname:=btnContinue")
	End If  
	Wait g_LongWaitLarge
	If SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfTab("swfname:=tabControl").GetSelection = "Services View" Then
		FRM_Logger_ReportPassEvent "Click on Continue in Product & Pricing Request window after providing user credentials as per test data", "Encompass  product and pricing rate sheet should open", null
	Else
       	FRM_Logger_ReportFailEvent "Click on Continue in Product & Pricing Request  window after providing user credentials as per test data", "Encompass  product and pricing rate sheet is not opened", null
	End If
	BIZ_LoanRequestForm_SetCreditScoreInProductandPricing  strRowID

	If(GUI_Object_IsExistX(ObjLockRequestForm.WebElement("innertext:=A system error has occurred.","html tag:=SPAN"), 60))Then 
		FRM_Logger_ReportFailEvent "Product and Pricing Window", "A system error has occured", null
		BIZ_LockRequestForm_PerformProductNPricing = False
		'====== Logout from Encompass ======
		BIZ_Login_UserLogout()
		Exit Function
	End If
	
	'Click on Rate Link
	If(BIZ_LockRequestForm_ImportPricing(strRowID, strFloatOrUpload)) Then 
		GUI_Dialog_Encompass_OKX 10, "outside of Lock Desk Hours"
	
		'Clicks on OK Button
		If(GUI_Object_IsExistX(SwfWindow("swfname:=DifferencesDialog").SwfButton("swfname:=button1"), 280))Then
			SwfWindow("swfname:=DifferencesDialog").SwfButton("swfname:=button1").Highlight
			GUI_WinButton_Click SwfWindow("swfname:=DifferencesDialog").SwfButton("swfname:=button1")
		End If
		
		If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass.*").Static("text:=The lock has not been confirmed yet."), 10)) Then
			FRM_Logger_ReportFailEvent "Submit Product and Pricing", "The Lock Request has not been confimred yet", null
			GUI_Dialog_Encompass_OKX 60, ""
			BIZ_LockRequestForm_PerformProductNPricing = False
		ElseIf(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("text:=Encompass.*").Static("text:=The lock has been successfully confirmed."), 10)) Then
			FRM_Logger_ReportPassEvent "Submit Product and Pricing", "The lock has been successfully confirmed.", null
			GUI_Dialog_Encompass_OKX 60, ""
			BIZ_LockRequestForm_PerformProductNPricing = True
		Else
			BIZ_LockRequestForm_PerformProductNPricing = True
		End If
	Else
		FRM_Logger_ReportFailEvent "Submit Product and Pricing", "Unable to login to Product and Pricing", null
		BIZ_LockRequestForm_PerformProductNPricing = False
	End If
End Function


'This function is used for selecting the Program Name and Product Price and Select Float/Update Encompass
'@code
'    BIZ_LockRequestForm_ImportPricing(strRowID, strFloatOrUpload)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet
Function BIZ_LockRequestForm_ImportPricing(strRowID, strFloatOrUpload)
	Set ObjLockRequestForm = SwfWindow("swfname:=MainForm").Page("index:=0")
	If(BIZ_LockRequestForm_SelecttheProgramIDAndPrice(strRowID)) Then 
		'Clicks on Float Button
		If (GUI_Object_IsExistX(ObjLockRequestForm.WebButton("name:=Float"), 120) = True) then 
			If(strFloatOrUpload = "Float")Then 
				GUI_WebButton_Click ObjLockRequestForm.WebButton("name:=Float")
			ElseIf(strFloatOrUpload = "Update Encompass")Then 
				GUI_WebButton_Click ObjLockRequestForm.WebButton("name:=Update Encompass")
			End If  
		End If
		If (GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").Dialog("text:=Message from webpage").Static("nativeclass:=Static","index:=0"), 30))Then
			SwfWindow("swfname:=MainForm").Dialog("text:=Message from webpage").WinButton("text:=OK").Click
		End If
		BIZ_LockRequestForm_ImportPricing = True
	Else
		
		BIZ_LockRequestForm_ImportPricing = False
	End If
	
End Function 
'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\LockRequestForm.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\OrderAppraisal.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup : BIZ_Tools_OrderAppraisal BIZ_Tools_OrderAppraisal
'
' List of functions here
'@code
'	Function BIZ_Tools_SendOrderAppraisal(strRowID)
'@endcode
'
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is set values to "Order Appraisal
'@code
'    BIZ_Tools_SendOrderAppraisal(strRowID)
'@endcode
'@param strRowID- id form data in external datatable

Function BIZ_Tools_SendOrderAppraisal(strRowID)
	Dim objOrderDialog, objData, isSelected
	Set objOrderDialog = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog")
	Set objData = FRM_DS_GetTestData("Tools_OrderAppraisal", "SetOrderAppraisal", strRowID)
	BIZ_Services_Open "Appraisal"

	If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AppraiserDialog").SwfObject("swfname:=lvwMyAppraisers"), 120) or GUI_Object_IsExistX(SwfWindow("swfname:=AppraiserDialog").SwfObject("swfname:=lvwMyAppraisers"), 120))Then 
		If(GUI_Object_IsExist(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AppraiserDialog").SwfObject("swfname:=lvwMyAppraisers")))Then 
			Set objMainView = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=AppraiserDialog")
		End If
		If(GUI_Object_IsExist(SwfWindow("swfname:=AppraiserDialog").SwfObject("swfname:=lvwMyAppraisers")))Then 
			Set objMainView = SwfWindow("swfname:=AppraiserDialog")
		End If
		isSelected = GUI_List_SelectItem(objMainView.SwfObject("swfname:=lvwMyAppraisers"),FRM_DS_GetValue(objData, "AppraisalName"),0)
		objMainView.SwfButton("swfname:=orderBtn").Click
		FRM_Logger_ReportInfoEvent "Select Appraisal Name", FRM_DS_GetValue(objData, "AppraisalName") & " is selected as Appraisal Name", null
	End If
	If(GUI_Object_IsExistX(objOrderDialog, 60) or GUI_Object_IsExistX(SwfWindow("swfname:=OrderDialog"), 60)) then 
		If(GUI_Object_IsExist(SwfWindow("swfname:=OrderDialog"))) then
			Set objOrderDialog = SwfWindow("swfname:=OrderDialog")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "PhoneNumber")) Then 
			GUI_SwfEdit_Set objOrderDialog.SwfEdit("swfname:=fromPhoneTxt"),  FRM_DS_GetValue(objData, "PhoneNumber")
		End If
		If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "DueDate")) Then 
			objOrderDialog.SwfCalendar("swfname:=dueDtp").SetDate FRM_DS_GetValue(objData, "DueDate")
		End If
		GUI_SwfButton_Click objOrderDialog.SwfButton("swfname:=sendBtn")
		GUI_Dialog_Encompass_YesX 80, ""
		GUI_Dialog_Encompass_OKX 200, ""
		GUI_Dialog_Encompass_YesX 80, ""
		GUI_Dialog_Encompass_OK ""
		FRM_Logger_ReportInfoEvent "Send Appraisal Details", "Your appraisal order has been sent to 'Test appraisal' services message is shown", null
	Else
		FRM_Logger_ReportFailEvent "Send Order Appraisal Details", "Order Details are not submitted", null
	End If
	Set objOrderDialog = Nothing
	Set objData = Nothing
End Function  
'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\OrderAppraisal.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\Piggyback_LinkedLoan.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is used to link one loan with another loan and exits
'@code
'    Function BIZ_Piggyback_LinkLoan(strFirstLoanToBeOpenedToLink, strSecondLoanToBeLinked)
'@endcode
'@param strFirstLoanToBeOpenedToLink - first loan to be opened
'@param strSecondLoanToBeLinked - pass second loan to be linked with first loan  strLinkedLoan

Function BIZ_Piggyback_LinkLoan(strFirstLoan, strSecondLoan)	
	FRM_Logger_ReportInfoEvent "Start linking first loan to second loan", "Started linking First Loan # '"&strFirstLoan&"' to Second Loan # '"&strSecondLoan&"'", Null	

	Dim objMain, objEncompassMain, objLoanDialog
	Set objMain				=	SwfWindow("swfname:=MainForm")
	Set objEncompassMain	=	SwfWindow("swfname:=MainForm").Page("micclass:=Page")
	Set objLoanDialog		= 	objMain.SwfWindow("swfname:=LinkLoanDialog")
	
	'=====Navigate to Piggback Loans======
	BIZ_Tools_Open "Piggyback Loans"
	
	'=====Click on Link Loan button======
	GUI_Object_WaitTillExistX objEncompassMain.WebButton("html id:=linkloanbutton"), 360	
	GUI_WebButton_Click objEncompassMain.WebButton("html id:=linkloanbutton")
	
	'=====select loan and Click on OK button======
	GUI_Object_WaitTillExistX objLoanDialog, 360	
	GUI_List_ClickRow objLoanDialog.SwfObject("swfname:=detailListView"),objLoanDialog.SwfScrollBar("swfname:=vPanelScrollBar"), "Loan Number", strFirstLoan, True, False, False, "Single" 
	wait g_LongWaitMedium	
	GUI_SwfButton_Click objLoanDialog.SwfButton("swfname:=okbutton")
	
	FRM_Logger_ReportInfoEvent "Linking first loan to second loan", "First Loan # '"&strFirstLoan&"' should be linked with Second Loan # '"&strSecondLoan&"'", Null	
	If GUI_Object_IsExistX (objMain.Dialog("text:=Encompass"),360) Then
		FRM_Logger_ReportPassEvent "Click on Go to Linked Loan", "Clicked on Go to Linked Loan", Null
		GUI_Dialog_Encompass_Yes "Do you want to synchronize data between two loans?"
		GUI_Object_WaitTillExistX objEncompassMain, 480
	End If	
	
	'BIZ_Loan_Exit (True)	
	Set objMain				=	Nothing
	Set objEncompassMain	=	Nothing
	Set objLoanDialog		= 	Nothing
End Function


'This function is for Search loan with column field value 
'@code
'    BIZ_SearchLoanByColumnValue(strColTitle,strColValue)
'@endcode
'@param strColTitle - column name
'@param strColValue - column field value
'@Pre-requisite  Pipeline View and Loan Folder must be selected before calling this procedure
'@Pre-requisite Coulumn must exist on the view

Function BIZ_SearchLoanByColumnValue(strColTitle,strColValue)   
    Dim objLoanList, objColumns, intColIndex, intRowCount,chkFlag
    Set objLoanList = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvLoans")
	BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intColIndex = 0
	intRowCount = objColumns.Object.Items.Count	
	For i = 0 To (intRowCount - 1)	
		If objColumns.Object.Items.Item(i).Checked AND objColumns.Object.Items.Item(i).Text = strColTitle Then			
		   Exit For
		ElseIf objColumns.Object.Items.Item(i).Text=strColTitle Then
		 		objColumns.Object.Items.Item(i).Checked = True
		ElseIf objColumns.Object.Items.Item(i).Checked Then
			   objColumns.Object.Items.Item(i).Checked = False
			   intColIndex = intColIndex + 1
		End If
	Next	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
	SwfWindow("swfname:=MainForm").SwfEdit("swfname:=txtBox","index:=0").Set ""&strColValue&""
	UTIL_Win_SendKey "{ENTER}"
	
	Set objLoanList = Nothing
	set objColumns  = Nothing
End Function


'=============PipeLine CustomizeColumns===============
Function BIZ_PipeLine_CustomizeColumns(strColTitle)
BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
Set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
intRowCount = objColumns.Object.Items.Count
For i = 0 To (intRowCount - 1)	
	If objColumns.Object.Items.Item(i).Text = strColTitle Then
	   If objColumns.Object.Items.Item(i).Checked = False Then
	   	  objColumns.Object.Items.Item(i).Checked = True
	   	  GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")	
	   	  BIZ_Nav_OpenMenuItem "Pipeline;Customize Columns..."
	   	  BIZ_CustomizeColumns_MoveUp strColTitle
	   Else
	   	  BIZ_CustomizeColumns_MoveUp strColTitle   	  
	   End If   		   
	   Exit For
	End If
Next
End Function

'=====================CustomizeColumns MoveUp=============================
Function BIZ_CustomizeColumns_MoveUp(strColTitle)	
	Set objColumns = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=gvColumns")
	intRowCount = objColumns.Object.Items.Count	
	For i = 0 To (intRowCount - 1)		
		If objColumns.Object.Items.Item(i).Text = strColTitle Then
			GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfEdit("swfname:=txtFind"), strColTitle
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnFind")
			For j = 0 To (i - 1)			
				GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfObject("swfname:=btnMoveUp")
			Next
		   	If Not objColumns.Object.Items.Item(0).Checked Then
			   objColumns.Object.Items.Item(0).Checked = True
			End If
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=TableLayoutColumnSelector").SwfButton("swfname:=btnOK")
			Exit For
		End If
	Next
End Function


'This function is to set click on Link Loan
'@code
'    BIZ_GoTo_LinkedLoan()
'@endcode
Function BIZ_GoTo_LinkedLoan()
    FRM_Logger_ReportInfoEvent "Go To Linked Loan","Navigate to Linked Loan", null
	
	If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").SwfObject("swfname:=elmLinkedLoan"),15) Then
   	 	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=elmLinkedLoan")
    	GUI_SwfToolbar_Select  SwfWindow("swfname:=MainForm").SwfToolbar("swftypename:=System.Windows.Forms.ContextMenuStrip","swfname:="), "Go to Linked Loan" 
    End If
    
    If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").Dialog("regexpwndtitle:=Encompass"),15) Then
        GUI_WinButton_Click SwfWindow("swfname:=MainForm").Dialog("regexpwndtitle:=Encompass").WinButton("regexpwndtitle:=&Yes")
    End If
    
    If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog"),10) Then
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=RegulationAlertDialog").SwfButton("swfname:=btnClose")
    End If  
    
    GUI_Dialog_Encompass_NoX 10,"The status of the currently open loan has changed. Would you like to notify borrowers and partners?"  

	If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").Dialog("title:=Encompass","Index:=0").WinButton("title:=OK","Index:=0"),5) Then
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Dialog("title:=Encompass","Index:=0").WinButton("title:=OK","Index:=0")
    End If   
End Function


'This function is to set click on Link Loan
'@code
'    BIZ_SyncData_LinkedLoan()
'@endcode
Function BIZ_SyncData_LinkedLoan()
    FRM_Logger_ReportInfoEvent "Clicked On Sync Data","Sync Data between two loans", null
    
    Set objMain					=	SwfWindow("swfname:=MainForm")
	Set objEncompassDialog		=	objMain.Dialog("text:=Encompass")
	If GUI_Object_IsExistX (SwfWindow("swfname:=MainForm").SwfObject("swfname:=elmLinkedLoan"),15) Then
   	 	GUI_SwfObject_Click SwfWindow("swfname:=MainForm").SwfObject("swfname:=elmLinkedLoan")
    	GUI_SwfToolbar_Select  SwfWindow("swfname:=MainForm").SwfToolbar("swftypename:=System.Windows.Forms.ContextMenuStrip","swfname:="), "Sync Data"
    End If
    
    If GUI_Object_IsExistX(objEncompassDialog, 60) Then
		GUI_Dialog_Encompass_YesX 120,"Are you sure you want to synchronize data between two loans?"
		GUI_Dialog_Encompass_OKX 120, "Both loans have been synchronized."
		Wait g_TinyWaitSmall + g_TinyWaitSmall + g_TinyWaitSmall
		BIZ_Loan_Save()
	End If    
End Function
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\Piggyback_LinkedLoan.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\SecondaryRegistration.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Tools_SecondaryRegistration BIZ_Tools_SecondaryRegistration
'
' List of functions here
'@code
' Function BIZ_SecondaryRegistration_LockAndConfirm()
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is to Lock and Confirm the new Requested Lock on Secondary Registration Page
'@code
'    BIZ_SecondaryRegistration_LockAndConfirm()
'@endcode
'@param 

Function BIZ_SecondaryRegistration_LockAndConfirm()

    FRM_Logger_ReportInfoEvent "Lock and Confirm Lock Request", "Lock and Confirm Lock Request on Secondary Registration Page", null	

    Dim objLockRequestSnapshot,objScrollBar,objSecondaryLockTool, boolLockRequestExists
	BIZ_Tools_Open "Secondary Registration"
	
	Set objLockRequestSnapshot = SwfWindow("swfname:=MainForm").SwfObject("swfname:=gridSnapshot")
	Set objScrollBar = SwfWindow("swfname:=MainForm").SwfScrollBar("swfname:=vPanelScrollBar")
	'Click the Lock Request Snapsot
	boolLockRequestExists = GUI_List_ClickRow(objLockRequestSnapshot,objScrollBar,"Status","Requested",True,False,False,"Single")
	
	If(boolLockRequestExists = True) Then 
		'Click "Copy from Request" button
		Set objSecondaryLockTool = SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm")
		GUI_SwfButton_Click objSecondaryLockTool.SwfButton("swfname:=btnCopyRequest")

		GUI_Object_WaitTillExistX objSecondaryLockTool.SwfButton("swfname:=btnLockConfirm"), 50
	
		'Click "Lock and Confirm" button
		GUI_SwfButton_Click objSecondaryLockTool.SwfButton("swfname:=btnLockConfirm")
    
		'Click "Confirm" button
		GUI_Object_WaitTillExistX objSecondaryLockTool.SwfWindow("swfname:=LockSnapshotCompareForm").SwfButton("swfname:=btnConfirm"), 50
		GUI_SwfButton_Click objSecondaryLockTool.SwfWindow("swfname:=LockSnapshotCompareForm").SwfButton("swfname:=btnConfirm")
		SwfWindow("swfname:=MainForm").SwfWindow("swfname:=BuySellForm").SwfWindow("swfname:=DifferencesChangeDialog").SwfButton("swfname:=button1").Click

		'Click "OK" button and the loan is locked
		GUI_Dialog_Encompass_OKX 30,""
	Else
		FRM_Logger_ReportFailEvent "Lock and Confirm Lock Request", "Lock Request is not displayed in Secondary Registration Page", null	
	End If
    
    Set objLockRequestSnapshot = Nothing
	Set objScrollBar = Nothing
	Set objSecondaryLockTool = Nothing
 
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\SecondaryRegistration.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\ShippingDetail.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Tools_ShippingDetail BIZ_Tools_ShippingDetail
'
' List of functions here
' @code
'
'   Function BIZ_ShippingDetail_SetShippingDetail(strRowID)
'   Function BIZ_ShippingDetail_SetShipTo(strRowID)
'   Function BIZ_ShippingDetail_SetCustomerService(strRowID)
'   Function BIZ_ShippingDetail_SetPostClosingTrailingDocs(strRowID)
'   Function BIZ_ShippingDetail_SetPayment(strRowID)
'   Function BIZ_ShippingDetail_SetInsurance(strRowID)
'   Function BIZ_ShippingDetail_SetNoteDelivery(strRowID)
'   Function BIZ_ShippingDetail_SetTaxesNotice(strRowID)
'   Function BIZ_ShippingDetail_SetMersRegistration(strRowID)
'   Function BIZ_ShippingDetail_SetPhysicalFileStorage(strRowID)
'	Function BIZ_ShippingDetail_SelectAllCopyFromShipToButtons()
'   
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

' Added by Emily Cheng as of 21st Mar 2016
'This function is used to set Shipping Detail section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetShippingDetail(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetShippingDetail(strRowID)
	FRM_Logger_ReportInfoEvent "Set Shipping Detail Data", "Set Shipping Detail Data using Row Id '"&strRowID&"' in the SetShippingDetail datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetShippingDetail", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2012_InvestorDeliveryDate")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox1"), FRM_DS_GetValue(objData, "2012_InvestorDeliveryDate")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2013_TargetDeliveryDate")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "2013_TargetDeliveryDate")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2014_ActualShipDate")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "2014_ActualShipDate")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX263_Investor")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "VENDX263_Investor")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX276_InvestorLoanNumber")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox5"), FRM_DS_GetValue(objData, "VENDX276_InvestorLoanNumber")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2015_RecordingNumber")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox6"), FRM_DS_GetValue(objData, "2015_RecordingNumber")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4020_PoolID")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox28"), FRM_DS_GetValue(objData, "4020_PoolID")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4021_PoolNumber")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox48"), FRM_DS_GetValue(objData, "4021_PoolNumber")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2016_ShipmentMethod")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox7"), FRM_DS_GetValue(objData, "2016_ShipmentMethod")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2019_ShipperName")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox10"), FRM_DS_GetValue(objData, "2019_ShipperName")
    End If 
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "996_CommitmentNumber")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox19"), FRM_DS_GetValue(objData, "996_CommitmentNumber")
    End If
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2017_Carrier")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "2017_Carrier")
    End If	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2018_PackageTrackingNumber")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox9"), FRM_DS_GetValue(objData, "2018_PackageTrackingNumber")
    End If
    
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function 



'This function is used to set Ship To section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetShipTo(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetShipTo(strRowID)
	FRM_Logger_ReportInfoEvent "Set Ship To Data", "Set Ship to Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetShipTo datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetShipTo", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX369_Name")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox11"), FRM_DS_GetValue(objData, "VENDX369_Name")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX370_Address")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox12"), FRM_DS_GetValue(objData, "VENDX370_Address")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX371_City")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox13"), FRM_DS_GetValue(objData, "VENDX371_City")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX372_State")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox14"), FRM_DS_GetValue(objData, "VENDX372_State")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX373_Zip")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x373"), FRM_DS_GetValue(objData, "VENDX373_Zip")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX374_Attention")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox15"), FRM_DS_GetValue(objData, "VENDX374_Attention")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX375_Phone")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox16"), FRM_DS_GetValue(objData, "VENDX375_Phone")
    End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX376_Email")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox18"), FRM_DS_GetValue(objData, "VENDX376_Email")
    End If

	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX377_Fax")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox26"), FRM_DS_GetValue(objData, "VENDX377_Fax")
    End If
       
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to set Customer Service section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetCustomerService(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetCustomerService(strRowID)
	FRM_Logger_ReportInfoEvent "Set Customer Service Data", "Set Customer Service Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetCustomerService datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetCustomerService", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX378_Name")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x378"), FRM_DS_GetValue(objData, "VENDX378_Name")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX379_Address")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox20"), FRM_DS_GetValue(objData, "VENDX379_Address")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX380_City")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox22"), FRM_DS_GetValue(objData, "VENDX380_City")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX381_State")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox23"), FRM_DS_GetValue(objData, "VENDX381_State")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX382_Zip")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x382"), FRM_DS_GetValue(objData, "VENDX382_Zip")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX383_Attention")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox25"), FRM_DS_GetValue(objData, "VENDX383_Attention")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX384_Phone")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox24"), FRM_DS_GetValue(objData, "VENDX384_Phone")
    End If 
       
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to set Post Closing Trailing Docs section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetPostClosingTrailingDocs(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetPostClosingTrailingDocs(strRowID)
	FRM_Logger_ReportInfoEvent "Set Post Closing Trailing Docs Data", "Set Post Closing Trailing Docs Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetPostClosingTrailingDocs datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetPostClosingTrailingDocs", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX387_Name")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x387"), FRM_DS_GetValue(objData, "VENDX387_Name")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX388_Address")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox29"), FRM_DS_GetValue(objData, "VENDX388_Address")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX389_City")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox31"), FRM_DS_GetValue(objData, "VENDX389_City")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX390_State")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox32"), FRM_DS_GetValue(objData, "VENDX390_State")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX391_Zip")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x391"), FRM_DS_GetValue(objData, "VENDX391_Zip")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX392_Attention")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox34"), FRM_DS_GetValue(objData, "VENDX392_Attention")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX393_Phone")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox33"), FRM_DS_GetValue(objData, "VENDX393_Phone")
    End If 
       
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to set Payment section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetPayment(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetPayment(strRowID)
	FRM_Logger_ReportInfoEvent "Set Payment Data", "Set Payment Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetPayment datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetPayment", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX529_Name")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x529"), FRM_DS_GetValue(objData, "VENDX529_Name")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX530_Address")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox21"), FRM_DS_GetValue(objData, "VENDX530_Address")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX532_City")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox30"), FRM_DS_GetValue(objData, "VENDX532_City")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX533_State")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox37"), FRM_DS_GetValue(objData, "VENDX533_State")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX534_Zip")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox46"), FRM_DS_GetValue(objData, "VENDX534_Zip")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX535_Attention")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox43"), FRM_DS_GetValue(objData, "VENDX535_Attention")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX536_Phone")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox42"), FRM_DS_GetValue(objData, "VENDX536_Phone")
    End If 
       
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to set Insurance section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetInsurance(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetInsurance(strRowID)
	FRM_Logger_ReportInfoEvent "Set Insurance Data", "Set Insurance Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetInsurance datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetInsurance", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX539_Name")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x539"), FRM_DS_GetValue(objData, "VENDX539_Name")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX540_Address")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox47"), FRM_DS_GetValue(objData, "VENDX540_Address")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX542_City")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox49"), FRM_DS_GetValue(objData, "VENDX542_City")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX543_State")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox50"), FRM_DS_GetValue(objData, "VENDX543_State")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX544_Zip")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox55"), FRM_DS_GetValue(objData, "VENDX544_Zip")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX545_Attention")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox52"), FRM_DS_GetValue(objData, "VENDX545_Attention")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX546_Phone")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox51"), FRM_DS_GetValue(objData, "VENDX546_Phone")
    End If 
       
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to set Note Delivery section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetNoteDelivery(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetNoteDelivery(strRowID)
	FRM_Logger_ReportInfoEvent "Set Note Delivery Data", "Set Note Delivery Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetNoteDelivery datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetNoteDelivery", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX549_Name")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x549"), FRM_DS_GetValue(objData, "VENDX549_Name")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX550_Address")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox56"), FRM_DS_GetValue(objData, "VENDX550_Address")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX552_City")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox58"), FRM_DS_GetValue(objData, "VENDX552_City")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX553_State")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox59"), FRM_DS_GetValue(objData, "VENDX553_State")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX554_Zip")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox64"), FRM_DS_GetValue(objData, "VENDX554_Zip")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX555_Attention")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox62"), FRM_DS_GetValue(objData, "VENDX555_Attention")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX556_Phone")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox61"), FRM_DS_GetValue(objData, "VENDX556_Phone")
    End If 
       
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to set Taxes Notice section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetTaxesNotice(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetTaxesNotice(strRowID)
	FRM_Logger_ReportInfoEvent "Set Taxes Notice Data", "Set Taxes Notice Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetTaxesNotice datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetTaxesNotice", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX559_Name")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=l_x559"), FRM_DS_GetValue(objData, "VENDX559_Name")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX560_Address")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox65"), FRM_DS_GetValue(objData, "VENDX560_Address")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX562_City")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox67"), FRM_DS_GetValue(objData, "VENDX562_City")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX563_State")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox68"), FRM_DS_GetValue(objData, "VENDX563_State")
    End If 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX564_Zip")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox73"), FRM_DS_GetValue(objData, "VENDX564_Zip")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX565_Attention")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox70"), FRM_DS_GetValue(objData, "VENDX565_Attention")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "VENDX566_Phone")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox69"), FRM_DS_GetValue(objData, "VENDX566_Phone")
    End If 
       
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to set Mers Registration section data on Shipping Detail page
'@code
'    Function BIZ_ShippingDetail_SetMersRegistration(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetMersRegistration(strRowID)
	FRM_Logger_ReportInfoEvent "Set Mers Registration Data", "Set Mers Registration Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetMersRegistration datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetMersRegistration", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1051_ConfirmationNumber")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox38"), FRM_DS_GetValue(objData, "1051_ConfirmationNumber")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2023_RegistrationDate")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox39"), FRM_DS_GetValue(objData, "2023_RegistrationDate")
    End If 
           
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to set Physical File Storage section data on Shipping Detail page
'@code
'    BIZ_ShippingDetail_SetPhysicalFileStorage(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SetPhysicalFileStorage(strRowID)
	FRM_Logger_ReportInfoEvent "Set Physical File Storage Data", "Set Physical File Storage Data on Ship Detail Page using Row Id '"&strRowID&"' in the SetPhysicalFileStorage datasheet", null	

    Dim ObjShippingDetail,objData
    
    Set ObjShippingDetail = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_ShippingDetail", "SetPhysicalFileStorage", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2020_Location")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox40"), FRM_DS_GetValue(objData, "2020_Location")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2021_ID")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=TextBox41"), FRM_DS_GetValue(objData, "2021_ID")
    End If 
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2022_Comments")) Then
        GUI_WebEdit_Set ObjShippingDetail.WebEdit("html id:=MultilineTextBox1"), FRM_DS_GetValue(objData, "2022_Comments")
    End If 
           
    Set ObjShippingDetail = Nothing
    Set objData = Nothing
End Function



'This function is used to click on all "Copy From Ship To" buttons
'@code
'    BIZ_ShippingDetail_SelectAllCopyFromShipToButtons()
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_ShippingDetail_SelectAllCopyFromShipToButtons()

Dim intButtonNumber

FRM_Logger_ReportInfoEvent "Selects All Copy From Ship To Buttons", "Clicks on All Copy From Ship To Buttons", null	

	For intButtonNumber = 0 To 13 Step 1
		GUI_SwfButton_Click SwfWindow("swfname:=MainForm").Page("index:=0").WebButton("name:=Copy From Ship To","index:="&intButtonNumber)
	Next
	
End Function


'@}
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\ShippingDetail.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\Tools.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Tools BIZ_Tools
'
' List of functions here
'@code
'	Function BIZ_Tools_ShowInOrder()
'	Function BIZ_Tools_Open(strToolName)
'	Function BIZ_Tools_Prequalification_SetCashFlow(strRowID)
'@endcode
' @{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for select Tools tab and show in order
'@code
'    BIZ_Tools_ShowInOrder()
'@endcode

Function BIZ_Tools_ShowInOrder()
	GUI_List_Select SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"), "Tools"
	GUI_SwfCheckbox_Set SwfWindow("swfname:=MainForm").SwfCheckBox("swfname:=chkAlphaTools"), "ON"
End Function



'This function is for open a tool
'@code
'    BIZ_Tools_Open(strToolName)
'@endcode
'@param strToolName string Title of the Tool to open

Function BIZ_Tools_Open(strToolName)

    FRM_Logger_ReportInfoEvent "Open Tool", "Tool to open is  '"&strToolName&"'", null
    
    GUI_List_Select SwfWindow("swfname:=MainForm").SwfTab("swfname:=toolsFormsTabControl"), "Tools"
	'If BIZ_Tools_GetToolTitle() <> strToolName Then
	If SwfWindow("swfname:=MainForm").SwfList("swfname:=emToolMenuBox", "index:=0").Exist(20) Then
		GUI_List_Select SwfWindow("swfname:=MainForm").SwfList("swfname:=emToolMenuBox"), strToolName
	End If	
    wait 2
	
End Function



'This function is for set cash flow 
'@code
'    BIZ_Tools_Prequalification_SetCashFlow(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Tools_Prequalification_SetCashFlow(strRowID)

    FRM_Logger_ReportInfoEvent "Tools_Prequalification", "Set Cash flow using Row Id '"&strRowID&"' on Tools_Prequalification page", null
    
	Dim objSummaryPage, objIncomePage, objData
    Set objSummaryPage 	= SwfWindow("swfname:=MainForm").Page("title:=.*","index:=0")
    Set objIncomePage 	= SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").Page("index:=0") 
    Set objData 		= FRM_DS_GetTestData("Tools_Prequalification", "CashFlow_TotalPrimExp", strRowID)
    
	BIZ_Tools_Open "Prequalification"
	
    GUI_Image_Click objSummaryPage.WebButton("name:=","html tag:=BUTTON","index:=21").Image("file name:=edit.png|edit-over.png")
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "GrossRentIncome")) Then
        GUI_WebEdit_Set objIncomePage.WebEdit("html id:=l_1005"), FRM_DS_GetValue(objData, "GrossRentIncome")    'GrossRentIncome
        GUI_Object_ValidateValue objIncomePage.WebEdit("html id:=l_1005"), FormatNumber(FRM_DS_GetValue(objData, "GrossRentIncome"), 2), "Gross Rent Entered"
    End If  
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1_1487_OccupRate")) Then
        GUI_WebEdit_Set objIncomePage.WebEdit("html id:=l_1487"), FRM_DS_GetValue(objData, "1_1487_OccupRate")     'occup. Rate
        GUI_Object_ValidateValue objIncomePage.WebEdit("html id:=l_1487"), FormatNumber(FRM_DS_GetValue(objData, "1_1487_OccupRate"), 2), "Occup. Rate Entered"
    End If
        
    Do Until (Not SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose", "index:=0").Exist(1))
        GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=QuickEntryPopupDialog").SwfButton("swfname:=btnClose", "index:=0")
    Loop    
	
    Set objSummaryPage 	= Nothing
    Set objIncomePage 	= Nothing
	Set objData 		= Nothing

End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\Tools.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\TQLServices.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Tools_TQLServices BIZ_Tools_TQLServices
'
' List of functions here
'@code
'	Function BIZ_Tools_TQLServices_SubmitValuationServiceOrders(strRowID)
'	Function BIZ_TQLServices_SubmitOrder(strOrderName, strRowID) 
'@endcode
'
'@{
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Header Data in Tools->TQL Services
'@code
'    BIZ_Tools_TQLServices_SubmitValuationServiceOrders(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_Tools_TQLServices_SubmitValuationServiceOrders(strRowID)
	FRM_Logger_ReportInfoEvent "Valuation Service Orders", "Set valuation service orders using Row Id '"&strRowID&"' in the SetData datasheet", null	

    Dim objData
    
    Set objData = FRM_DS_GetTestData("Tools_TQLServices", "SetValuationServiceOrder", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AppraisalDate")) Then
		GUI_SwfComboBox_Select SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog").SwfComboBox("swfname:=appraisalTypeCbo"), FRM_DS_GetValue(objData, "AppraisalDate")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AppraisalType")) Then
		GUI_SwfEdit_Set SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog").SwfEdit("swfname:=appraisalDateTxt"), FRM_DS_GetValue(objData, "AppraisalType")
	End if	
	GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=OrderDialog").SwfButton("swfname:=btnOrderPass")
	
	Wait g_ShortWaitLarge+g_ShortWaitLarge

	GUI_Window_Close SwfWindow("swfname:=MainForm").swfWindow("swfname:=PreviewHtmlDocument")

    Set objData = Nothing
End Function



'This function is for set Header Data in Tools->TQL Services
'@code
'    BIZ_TQLServices_SubmitOrder(strOrderName, strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_TQLServices_SubmitOrder(strOrderName, strRowID) 
	FRM_Logger_ReportInfoEvent "TQL Services", "Submit Order " & strOrderName, null
	'Go to Tools->TQL Services
	BIZ_Tools_Open("TQL Services")
	wait 2
	GUI_Object_ValidateText SwfWindow("swfname:=MainForm").SwfObject("swfname:=topContainer"), "TQL Services", "TQL services page is open"

	If(strOrderName = "Valuation Service") Then
		If(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfButton("swfname path:=btnOrder;panelOrderSummary;;serviceContainer;avmControl;AvmPlinthContainer;pnlOrders;topContainer;TQLClientControl;TQLServices;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm").GetROProperty("enabled") = true) Then
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfButton("swfname path:=btnOrder;panelOrderSummary;;serviceContainer;avmControl;AvmPlinthContainer;pnlOrders;topContainer;TQLClientControl;TQLServices;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm")
			Wait g_TinyWaitLarge
			If(SwfWindow("swfname:=MainForm").Dialog("text:=Valuation Service").Exist(5)) Then
				FRM_Logger_ReportFailEvent "Valuation Service Order","Valuation Service Order is not displayed", Null
			Else
				BIZ_Tools_TQLServices_SubmitValuationServiceOrders strRowID
				FRM_Logger_ReportPassEvent "Valuation Service Order","Valuation Service Order is displayed", Null
			End if				
		Else
			SwfWindow("swfname:=MainForm").SwfButton("swfname path:=toggleDetailBtn;panelOrderSummary;;serviceContainer;avmControl;AvmPlinthContainer;pnlOrders;topContainer;TQLClientControl;TQLServices;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm","swfname:=toggleDetailBtn").Click
			strDocumentStatus = GUI_List_GetCellData(SwfWindow("swfname:=MainForm").SwfObject("swfname:=gvDocuments"), 0, 0)
			If(InStr(LCase(strDocumentStatus),"pass") > 0) Then
				FRM_Logger_ReportPassEvent "Valuation Service Order","Valuation Service Order is displayed", Null
			Else
				FRM_Logger_ReportFailEvent "Valuation Service Order","Valuation Service Order did not pass", Null
			End If
		End If	
	ElseIf(strOrderName = "Compliance Service") Then
		If(GUI_Object_IsExistX(SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfButton("swfname path:=btnOrder;panelOrderSummary;;serviceContainer;complianceControl;CompliancePlinthContainer;pnlOrders;topContainer;TQLClientControl;TQLServices;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm"), 10)) Then 
			GUI_SwfButton_Click SwfWindow("swfname:=MainForm").SwfWindow("swfname:=MainScreen").SwfButton("swfname path:=btnOrder;panelOrderSummary;;serviceContainer;complianceControl;CompliancePlinthContainer;pnlOrders;topContainer;TQLClientControl;TQLServices;workPanel;rightPanel;LoanPage;loanTabPage;tabControl;pnlMain;MainScreen;mainPanel;MainForm")
			BIZ_ComplianceReview_ValidateComplianceReviewStatus()
		Else
			FRM_Logger_ReportFailEvent "TQL Service - Compliance Service","Service Order button is not available", Null
		End If
	Else
		FRM_Logger_ReportFailEvent "TQL Service","Service Order is not valid", Null
	End If
End Function


'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\TQLServices.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\UnderwriterSummary.qfl" Start 
''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'@defgroup BIZ_Tools_UnderwriterSummary BIZ_Tools_UnderwriterSummary
'
' List of functions here
'@code
'	BIZ_UnderwriterSummary_UWP2_SetHeaderData(strRowID)
'	BIZ_UnderwriterSummary_SetAppraisalAUSDetails(strRowID)
'	BIZ_UnderwriterSummary_SetUnderWriterDetails(strRowID)
'@endcode
'
'@{
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'This function is for set Header Data in Tools->Underwriter Summary ->UW P2 page
'@code
'    BIZ_UnderwriterSummary_UWP2_SetHeaderData(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_UnderwriterSummary_UWP2_SetHeaderData(strRowID)
	FRM_Logger_ReportInfoEvent "Underwriter Summary Page 2 Set Header Data", "Set Data for Lock Request using Row Id '"&strRowID&"' in the SetData datasheet", null	

    Dim ObjUWP2,objData
    GUI_SwfLabel_Click SwfWindow("swfname:=MainForm").SwfLabel("text:=UW P2")

    Set ObjUWP2 = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_UnderwriterSummary", "UWP2_SetHeaderData", strRowID)

    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2299_ResubmittedToUnderwritting")) Then
        GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox3"), FRM_DS_GetValue(objData, "2299_ResubmittedToUnderwritting")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2304_UnderwriterSignOff")) Then
        GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox8"), FRM_DS_GetValue(objData, "2304_UnderwriterSignOff")
    End If 
    
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2305_ClearToClose")) Then
        GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox9"), FRM_DS_GetValue(objData, "2305_ClearToClose")
    End If 
    
        If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2314_SignOffDate")) Then
        GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox20"), FRM_DS_GetValue(objData, "2314_SignOffDate")
    End If 

    Set objUWP2 = Nothing
    Set objData = Nothing
End Function



'This function is for set Underwriter details in Tools->Underwriter Summary ->UW P1 page
'@code
'    BIZ_UnderwriterSummary_SetUnderWriterDetails(strRowID
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_UnderwriterSummary_SetUnderWriterDetails(strRowID)
	FRM_Logger_ReportInfoEvent "Underwriter Summary - Set Under Writer Details", "Details are set in the Underwriter screen", null	
	Set ObjUWP1 = SwfWindow("swfname:=MainForm").Page("index:=0")	
	Set objData = FRM_DS_GetTestData("Tools_UnderwriterSummary", "UWP1_SetUnderWriterDetails", strRowID)
	
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2981_Date")) Then
		ObjUWP1.WebEdit("html id:=TextBox1").Set FRM_DS_GetValue(objData, "2981_Date")
	End if
	'ApprovedBy
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2284_ApprovedBy")) Then
		ObjUWP1.WebEdit("html id:=TextBox27").Set FRM_DS_GetValue(objData, "2284_ApprovedBy")
	End if
	'Approved Date
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2301_ApprovedDate")) Then
		ObjUWP1.WebEdit("html id:=TextBox28").Set FRM_DS_GetValue(objData, "2301_ApprovedDate")
	End if
	'Approval Expires
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2302_ApprovalExpiresOn")) Then
		ObjUWP1.WebEdit("html id:=TextBox29").Set FRM_DS_GetValue(objData, "2302_ApprovalExpiresOn")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "3878_UnderwritingContractualAgreement")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox17_Ctrl").Set FRM_DS_GetValue(objData, "3878_UnderwritingContractualAgreement")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X338_MonthlyCoveredLoanPayment")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox2_Ctrl").Set FRM_DS_GetValue(objData, "X338_MonthlyCoveredLoanPayment")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X341_DebtObligations")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox8_Ctrl").Set FRM_DS_GetValue(objData, "X341_DebtObligations")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X344_CurrentEmployementStatus")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox11_Ctrl").Set FRM_DS_GetValue(objData, "X344_CurrentEmployementStatus")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X345_CurrentExpectedIncome")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox12_Ctrl").Set FRM_DS_GetValue(objData, "X345_CurrentExpectedIncome")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X346_CurrentExpectedAssets")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox13_Ctrl").Set FRM_DS_GetValue(objData, "X346_CurrentExpectedAssets")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X347_CreditHistory")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox14_Ctrl").Set FRM_DS_GetValue(objData, "X347_CreditHistory")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X348_DebtIncomeRatio")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox15_Ctrl").Set FRM_DS_GetValue(objData, "X348_DebtIncomeRatio")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "X349_ResidualIncome")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox16_Ctrl").Set FRM_DS_GetValue(objData, "X349_ResidualIncome")
	End if
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData,"ImpoundsRequired")) Then
		GUI_WebList_Select ObjUWP1.WebList("html id:=DropdownBox6"), FRM_DS_GetValue(objData,"ImpoundsRequired")
	End If
	'Set Employee Loan checkbox
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "4181_EmployeeLoan")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_CheckBox20_Ctrl").Set FRM_DS_GetValue(objData, "4181_EmployeeLoan")
	End If	
	'Set HMDA Income checkbox
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HMDA.X99_HMDAIncome")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_chkhmdaincome_Ctrl").Set FRM_DS_GetValue(objData, "HMDA.X99_HMDAIncome")		 
	End If	
	'Set HMDA CLTV checkbox
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HMDA.X98_HMDACLTV")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_chkhmdacltv_Ctrl").Set FRM_DS_GetValue(objData, "HMDA.X98_HMDACLTV")		 
	End If		
	'Set HMDA DTI checkbox
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "HMDA.X98_HMDADTI")) Then
		ObjUWP1.WebCheckBox("html id:=__cid_chkhmdadti_Ctrl").Set FRM_DS_GetValue(objData, "HMDA.X98_HMDADTI")		 
	End If	
End Function



'This function is for set Underwriter details in Tools->Underwriter Summary ->UW P2 page
'@code
'    BIZ_UnderwriterSummary_SetAppraisalAUSDetails(strRowID)
'@endcode
'@param strRowID The numeric or string unique ID that used to find the line in the data spreadsheet

Function BIZ_UnderwriterSummary_SetAppraisalAUSDetails(strRowID)
	FRM_Logger_ReportInfoEvent "Underwriter Summary - Set Appraisal AUS Details", "Details are set in the Appraisal AUS Details Screen", null	
	SwfWindow("swfname:=MainForm").SwfLabel("text:=UW P2").Click
	Set objData = FRM_DS_GetTestData("Tools_UnderwriterSummary", "UWP2_SetHeaderData", strRowID)
	Set ObjUWP2 = SwfWindow("swfname:=MainForm").Page("index:=0")		
    'Underwriting submitted date
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2298_SubmittedToUnderWriting")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox2"), FRM_DS_GetValue(objData, "2298_SubmittedToUnderWriting")
    End if
	'Credit Approval Date
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2300_CreditApprovalDate")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox4"), FRM_DS_GetValue(objData, "2300_CreditApprovalDate")
    End if
	'AUS Underwriting Source 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2312_AUSSource")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox17"), FRM_DS_GetValue(objData, "2312_AUSSource")
    End if
	'AUS Number
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2316_AUSNumber")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox22"), FRM_DS_GetValue(objData, "2316_AUSNumber")
    End if
	'AUS Recommendation
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1544_AUSRecommendataion")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox67"), FRM_DS_GetValue(objData, "1544_AUSRecommendataion")
    End if
	'AUS Run Date
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2313_DateAUSRun")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox19"), FRM_DS_GetValue(objData, "2313_DateAUSRun")
    End if
	
	'Strength
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2319_Strengths")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=MultilineTextBox2"), FRM_DS_GetValue(objData, "2319_Strengths")
    End if
	'Concern 
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2320_Concerns")) Then
		 GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=MultilineTextBox3"), FRM_DS_GetValue(objData, "2320_Concerns")
    End if
	'Credit
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2321_Credit")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=MultilineTextBox3"), FRM_DS_GetValue(objData, "2321_Credit")
    End if
	'Appraisal
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2322_Appraisal")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=MultilineTextBox4"), FRM_DS_GetValue(objData, "2322_Appraisal")
    End if
	'Exception
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2323_Exceptions")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=MultilineTextBox5"), FRM_DS_GetValue(objData, "2323_Exceptions")
    End if
	'AppraisalType
    If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "AppraisalType")) Then
		ObjUWP2.WebElement("innerhtml:=Appraisal Information","html tag:=TD").Highlight
		ObjUWP2.WinEdit("Location:=0","nativeclass:=Edit").Highlight
		ObjUWP2.WebEdit("html id:=TextBox55").Highlight
		GUI_WebEdit_Set ObjUWP2.WinEdit("Location:=0","nativeclass:=Edit"), FRM_DS_GetValue(objData, "AppraisalType")
		ObjUWP2.WinEdit("Location:=0","nativeclass:=Edit").Type micTab
	End if
	'Appraisal Order Date
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2352_AppraisalOrderDate")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox56"), FRM_DS_GetValue(objData, "2352_AppraisalOrderDate")
	End if
	'Appraisal Completed data
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2353_AppraisalCompletedDate")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox57"), FRM_DS_GetValue(objData, "2353_AppraisalCompletedDate")
	End if
	'Original Appraisal Value
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2355_AppraisalValue")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox59"), FRM_DS_GetValue(objData, "2355_AppraisalValue")	
	End if
	'Appraisal Expires On
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2354_AppraisalExpires")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox58"), FRM_DS_GetValue(objData, "2354_AppraisalExpires")
	End if
	'Flood Company Name
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "1500_CompanyName")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox47"), FRM_DS_GetValue(objData, "1500_CompanyName")
	End if
	'Determination Date
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2365_DeterminationDate")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox62"), FRM_DS_GetValue(objData, "2365_DeterminationDate")
	End if
	'Cert #
	If UTIL_String_IsNotEmpty(FRM_DS_GetValue(objData, "2363_Cert#")) Then
		GUI_WebEdit_Set ObjUWP2.WebEdit("html id:=TextBox48"), FRM_DS_GetValue(objData, "2363_Cert#")
	End if
End Function

'@}''''''''''''''''''''''''''''''''''''''''''''''''''''
' File "D:\Core18_4\Core2P-18.4\Function Library\Business\Tools\UnderwriterSummary.qfl" End 
''''''''''''''''''''''''''''''''''''''''''''''''''''
